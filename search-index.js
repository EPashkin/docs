var searchIndex = {};
searchIndex["gtk"] = {"doc":"# GTK+ 3 bindings","items":[[8,"Cast","gtk","Upcasting and downcasting support.",null,null],[11,"upcast","","Upcasts an object to a superclass or interface `T`.",0,{"inputs":[{"name":"cast"}],"output":{"name":"t"}}],[11,"downcast","","Tries to downcast to a subclass or interface implementor `T`.",0,{"inputs":[{"name":"cast"}],"output":{"name":"result"}}],[11,"is","","Returns `true` if the object is an instance of (can be downcast to) `T`.",0,{"inputs":[{"name":"cast"}],"output":{"name":"bool"}}],[11,"fmt","glib::boxed","",1,{"inputs":[{"name":"anybox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"uninitialized","","",2,{"inputs":[],"output":{"name":"boxed"}}],[11,"uninitialized","","",2,{"inputs":[],"output":{"name":"boxed"}}],[11,"to_glib_none","","",2,{"inputs":[{"name":"boxed"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",2,{"inputs":[{"name":"boxed"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",2,null],[11,"from_glib_full","","",2,null],[11,"from_glib_borrow","","",2,null],[11,"drop","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"boxed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"boxed"}],"output":{"name":"boxed"}}],[11,"deref","","",2,{"inputs":[{"name":"boxed"}],"output":{"name":"t"}}],[11,"deref_mut","","",2,{"inputs":[{"name":"boxed"}],"output":{"name":"t"}}],[11,"drop","glib::shared","",3,null],[11,"clone","","",3,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"fmt","","",3,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"shared"},{"name":"shared"}],"output":{"name":"bool"}}],[11,"hash","","",3,null],[11,"to_glib_none","","",3,{"inputs":[{"name":"shared"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",3,null],[11,"from_glib_none","","",3,null],[11,"from_glib_full","","",3,null],[11,"from_glib_borrow","","",3,null],[11,"hash","glib::object","",4,null],[11,"eq","","",4,{"inputs":[{"name":"objectref"},{"name":"objectref"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"objectref"},{"name":"objectref"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"objectref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"objectref"}],"output":{"name":"objectref"}}],[11,"ref_","","",5,null],[11,"unref","","",5,null],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"object"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"object"}],"output":{"name":"object"}}],[11,"static_type","","",6,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",6,{"inputs":[{"name":"object"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","glib::app_info","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"appinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"appinfo"}],"output":{"name":"appinfo"}}],[11,"static_type","","",7,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",7,{"inputs":[{"name":"appinfo"},{"name":"t"}],"output":{"name":"bool"}}],[11,"fmt","glib::error","",8,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"copy","","",9,null],[11,"free","","",9,null],[11,"new","","Creates an error with supplied error enum variant and message.",8,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",8,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",8,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"wrap","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",8,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"eq","glib::file_error","",10,{"inputs":[{"name":"fileerror"},{"name":"fileerror"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"fileerror"},{"name":"fileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"fileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"fileerror"}],"output":{"name":"fileerror"}}],[11,"domain","","",10,{"inputs":[],"output":{"name":"u32"}}],[11,"code","","",10,{"inputs":[{"name":"fileerror"}],"output":{"name":"i32"}}],[11,"from","","",10,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"to_glib","glib::source","",11,{"inputs":[{"name":"continue"}],"output":{"name":"i32"}}],[11,"new","","",12,{"inputs":[],"output":{"name":"callbackguard"}}],[11,"drop","","",12,null],[11,"to_glib","core::option","",13,{"inputs":[{"name":"option"}],"output":{"name":"u32"}}],[11,"to_glib","core::cmp","",14,{"inputs":[{"name":"ordering"}],"output":{"name":"i32"}}],[11,"to_glib_none","core::option","",13,{"inputs":[{"name":"option"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",13,{"inputs":[{"name":"option"}],"output":{"name":"p"}}],[11,"to_glib_none_mut","","",13,{"inputs":[{"name":"option"}],"output":{"name":"stashmut"}}],[11,"to_glib_none","collections::string","",15,{"inputs":[{"name":"string"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",15,null],[11,"to_glib_none","","",15,{"inputs":[{"name":"string"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",15,null],[11,"to_glib_none","std::path","",16,{"inputs":[{"name":"path"}],"output":{"name":"stash"}}],[11,"to_glib_none","","",16,{"inputs":[{"name":"path"}],"output":{"name":"stash"}}],[11,"len","glib::translate","Returns the length of the array not counting the `NULL` terminator.",17,{"inputs":[{"name":"ptrarray"}],"output":{"name":"usize"}}],[11,"drop","","",18,null],[11,"drop","","",19,null],[11,"to_glib_none","std::collections::hash::map","",20,{"inputs":[{"name":"hashmap"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",20,null],[11,"drop","glib::translate","",21,null],[11,"from_glib","core::cmp","",14,{"inputs":[{"name":"i32"}],"output":{"name":"ordering"}}],[11,"from_glib","core::option","",13,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_glib","","",13,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_glib","","",13,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_glib","","",13,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_glib_none","","",13,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"from_glib_full","","",13,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"from_glib_none","collections::string","",15,null],[11,"from_glib_full","","",15,null],[11,"from_glib_none","","",15,null],[11,"from_glib_full","","",15,null],[11,"from_glib_none","std::path","",22,null],[11,"from_glib_full","","",22,null],[11,"from_glib_none","","",22,null],[11,"from_glib_full","","",22,null],[11,"from_glib_none","collections::vec","",23,null],[11,"from_glib_none_num","","",23,null],[11,"from_glib_container","","",23,null],[11,"from_glib_container_num","","",23,null],[11,"from_glib_full","","",23,null],[11,"from_glib_full_num","","",23,null],[11,"from_glib_none","","",23,null],[11,"from_glib_none_num","","",23,null],[11,"from_glib_container","","",23,null],[11,"from_glib_container_num","","",23,null],[11,"from_glib_full","","",23,null],[11,"from_glib_full_num","","",23,null],[11,"from_glib_none","","",23,null],[11,"from_glib_none_num","","",23,null],[11,"from_glib_container","","",23,null],[11,"from_glib_container_num","","",23,null],[11,"from_glib_full","","",23,null],[11,"from_glib_full_num","","",23,null],[11,"from_glib_none","","",23,null],[11,"from_glib_none_num","","",23,null],[11,"from_glib_container","","",23,null],[11,"from_glib_container_num","","",23,null],[11,"from_glib_full","","",23,null],[11,"from_glib_full_num","","",23,null],[11,"from_glib_none","","",23,null],[11,"from_glib_none_num","","",23,null],[11,"from_glib_container","","",23,null],[11,"from_glib_container_num","","",23,null],[11,"from_glib_full","","",23,null],[11,"from_glib_full_num","","",23,null],[11,"from_glib_none","std::collections::hash::map","",20,null],[11,"from_glib_none_num","","",20,null],[11,"from_glib_container","","",20,null],[11,"from_glib_container_num","","",20,null],[11,"from_glib_full","","",20,null],[11,"from_glib_full_num","","",20,null],[11,"eq","glib::types","",24,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"static_type","collections::string","",15,{"inputs":[],"output":{"name":"type"}}],[11,"from_glib","glib::types","",24,{"inputs":[{"name":"usize"}],"output":{"name":"type"}}],[11,"to_glib","","",24,{"inputs":[{"name":"type"}],"output":{"name":"usize"}}],[11,"downcast","glib::value","Tries to downcast to a `TypedValue`.",25,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"get","","Tries to get a value of type `T`.",25,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is","","Returns `true` if the type of the value corresponds to `T`.",25,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"type_","","Returns the type of the value.",25,{"inputs":[{"name":"value"}],"output":{"name":"type"}}],[11,"type_transformable","","Returns whether `Value`s of type `src` can be transformed to type `dst`.",25,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"drop","","",25,null],[11,"fmt","","",25,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",25,{"inputs":[{"name":"option"}],"output":{"name":"value"}}],[11,"from","","",25,{"inputs":[{"name":"t"}],"output":{"name":"value"}}],[11,"from","","",25,{"inputs":[{"name":"typedvalue"}],"output":{"name":"value"}}],[11,"uninitialized","","",25,{"inputs":[],"output":{"name":"value"}}],[11,"to_glib_none","","",25,{"inputs":[{"name":"value"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",25,{"inputs":[{"name":"value"}],"output":{"name":"stashmut"}}],[11,"drop","","",26,null],[11,"get","","Returns the value.",27,{"inputs":[{"name":"typedvalue"}],"output":{"name":"option"}}],[11,"get_some","","Returns the value.",27,{"inputs":[{"name":"typedvalue"}],"output":{"name":"t"}}],[11,"set","","Sets the value.",27,null],[11,"set_none","","Sets the value to `None`.",27,null],[11,"set_some","","Sets the value.",27,null],[11,"clone","","",27,{"inputs":[{"name":"typedvalue"}],"output":{"name":"typedvalue"}}],[11,"fmt","","",27,{"inputs":[{"name":"typedvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",27,{"inputs":[{"name":"typedvalue"}],"output":{"name":"value"}}],[11,"deref_mut","","",27,{"inputs":[{"name":"typedvalue"}],"output":{"name":"value"}}],[11,"from","","",27,{"inputs":[{"name":"option"}],"output":{"name":"typedvalue"}}],[11,"from","","",27,{"inputs":[{"name":"t"}],"output":{"name":"typedvalue"}}],[11,"from","","",27,{"inputs":[{"name":"option"}],"output":{"name":"typedvalue"}}],[11,"from","","",27,{"inputs":[{"name":"str"}],"output":{"name":"typedvalue"}}],[11,"to_value","core::option","",13,{"inputs":[{"name":"option"}],"output":{"name":"value"}}],[11,"to_value_type","","",13,{"inputs":[{"name":"option"}],"output":{"name":"type"}}],[11,"to_value","glib::value","",25,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"to_value_type","","",25,{"inputs":[{"name":"value"}],"output":{"name":"type"}}],[11,"from_value_optional","collections::string","",15,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"set_value","","",15,null],[11,"set_value_optional","","",15,null],[3,"Continue","gtk","Continue calling the closure in the future iterations or drop it.",null,null],[3,"Error","","A generic error capable of representing various error domains (types).",null,null],[8,"IsA","","Declares the &quot;is a&quot; relationship.",null,null],[3,"Object","","The base class in the object hierarchy.",null,null],[8,"StaticType","","Types that are supported by GLib dynamic typing.",null,null],[10,"static_type","","Returns the type identifier of `Self`.",28,{"inputs":[],"output":{"name":"type"}}],[8,"ToValue","","Converts to `Value`.",null,null],[10,"to_value","","Returns a `Value` clone of `self`.",29,{"inputs":[{"name":"tovalue"}],"output":{"name":"value"}}],[10,"to_value_type","","Returns the type identifer of `self`.",29,{"inputs":[{"name":"tovalue"}],"output":{"name":"type"}}],[4,"Type","","A GLib or GLib-based library type",null,null],[13,"Invalid","","An invalid `Type` used as error return value in some functions",24,null],[13,"Unit","","The fundamental type corresponding to the unit type `()`",24,null],[13,"I8","","The fundamental type corresponding to `i8`",24,null],[13,"U8","","The fundamental type corresponding to `u8`",24,null],[13,"Bool","","The fundamental type corresponding to `bool`",24,null],[13,"I32","","The fundamental type corresponding to `i32`",24,null],[13,"U32","","The fundamental type corresponding to `u32`",24,null],[13,"ILong","","The fundamental type corresponding to C `long`",24,null],[13,"ULong","","The fundamental type corresponding to C `unsigned long`",24,null],[13,"I64","","The fundamental type corresponding to `i64`",24,null],[13,"U64","","The fundamental type corresponding to `u64`",24,null],[13,"F32","","The fundamental type corresponding to `f32`",24,null],[13,"F64","","The fundamental type corresponding to `f64`",24,null],[13,"String","","The fundamental type corresponding to `String`",24,null],[13,"Pointer","","The fundamental type corresponding to a pointer",24,null],[13,"Variant","","The fundamental type of GVariant",24,null],[13,"BaseInterface","","The fundamental type from which all interfaces are derived",24,null],[13,"BaseEnum","","The fundamental type from which all enumeration types are derived",24,null],[13,"BaseFlags","","The fundamental type from which all flags types are derived",24,null],[13,"BaseBoxed","","The fundamental type from which all boxed types are derived",24,null],[13,"BaseParamSpec","","The fundamental type from which all `GParamSpec` types are derived",24,null],[13,"BaseObject","","The fundamental type from which all objects are derived",24,null],[13,"Other","","A non-fundamental type identified by value of type `usize`",24,null],[3,"TypedValue","","A statically typed [`Value`](struct.Value.html).",null,null],[3,"Value","","A generic value capable of carrying various types.",null,null],[11,"empty","gtk_sys","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"gtkaccelflags"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"gtkaccelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"u32"}],"output":{"name":"gtkaccelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",30,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",30,null],[11,"remove","","Removes the specified flags in-place.",30,null],[11,"toggle","","Toggles the specified flags in-place.",30,null],[11,"eq","","",31,{"inputs":[{"name":"gtkalign"},{"name":"gtkalign"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"gtkalign"},{"name":"gtkalign"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"gtkalign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"gtkalign"}],"output":{"name":"gtkalign"}}],[11,"eq","","",32,{"inputs":[{"name":"gtkarrowplacement"},{"name":"gtkarrowplacement"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"gtkarrowplacement"},{"name":"gtkarrowplacement"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"gtkarrowplacement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"gtkarrowplacement"}],"output":{"name":"gtkarrowplacement"}}],[11,"eq","","",33,{"inputs":[{"name":"gtkarrowtype"},{"name":"gtkarrowtype"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"gtkarrowtype"},{"name":"gtkarrowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"gtkarrowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"gtkarrowtype"}],"output":{"name":"gtkarrowtype"}}],[11,"eq","","",34,{"inputs":[{"name":"gtkassistantpagetype"},{"name":"gtkassistantpagetype"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"gtkassistantpagetype"},{"name":"gtkassistantpagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"gtkassistantpagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"gtkassistantpagetype"}],"output":{"name":"gtkassistantpagetype"}}],[11,"eq","","",35,{"inputs":[{"name":"gtkbaselineposition"},{"name":"gtkbaselineposition"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"gtkbaselineposition"},{"name":"gtkbaselineposition"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"gtkbaselineposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"gtkbaselineposition"}],"output":{"name":"gtkbaselineposition"}}],[11,"eq","","",36,{"inputs":[{"name":"gtkborderstyle"},{"name":"gtkborderstyle"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"gtkborderstyle"},{"name":"gtkborderstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"gtkborderstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"gtkborderstyle"}],"output":{"name":"gtkborderstyle"}}],[11,"eq","","",37,{"inputs":[{"name":"gtkbuildererror"},{"name":"gtkbuildererror"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"gtkbuildererror"},{"name":"gtkbuildererror"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"gtkbuildererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"gtkbuildererror"}],"output":{"name":"gtkbuildererror"}}],[11,"eq","","",38,{"inputs":[{"name":"gtkbuttonboxstyle"},{"name":"gtkbuttonboxstyle"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"gtkbuttonboxstyle"},{"name":"gtkbuttonboxstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"gtkbuttonboxstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"gtkbuttonboxstyle"}],"output":{"name":"gtkbuttonboxstyle"}}],[11,"eq","","",39,{"inputs":[{"name":"gtkbuttonrole"},{"name":"gtkbuttonrole"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"gtkbuttonrole"},{"name":"gtkbuttonrole"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"gtkbuttonrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"gtkbuttonrole"}],"output":{"name":"gtkbuttonrole"}}],[11,"eq","","",40,{"inputs":[{"name":"gtkbuttonstype"},{"name":"gtkbuttonstype"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"gtkbuttonstype"},{"name":"gtkbuttonstype"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"gtkbuttonstype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"gtkbuttonstype"}],"output":{"name":"gtkbuttonstype"}}],[11,"eq","","",41,{"inputs":[{"name":"gtkcellrendereraccelmode"},{"name":"gtkcellrendereraccelmode"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"gtkcellrendereraccelmode"},{"name":"gtkcellrendereraccelmode"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"gtkcellrendereraccelmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"gtkcellrendereraccelmode"}],"output":{"name":"gtkcellrendereraccelmode"}}],[11,"eq","","",42,{"inputs":[{"name":"gtkcellrenderermode"},{"name":"gtkcellrenderermode"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"gtkcellrenderermode"},{"name":"gtkcellrenderermode"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"gtkcellrenderermode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"gtkcellrenderermode"}],"output":{"name":"gtkcellrenderermode"}}],[11,"eq","","",43,{"inputs":[{"name":"gtkcornertype"},{"name":"gtkcornertype"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"gtkcornertype"},{"name":"gtkcornertype"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"gtkcornertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"gtkcornertype"}],"output":{"name":"gtkcornertype"}}],[11,"eq","","",44,{"inputs":[{"name":"gtkcssprovidererror"},{"name":"gtkcssprovidererror"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"gtkcssprovidererror"},{"name":"gtkcssprovidererror"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"gtkcssprovidererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"gtkcssprovidererror"}],"output":{"name":"gtkcssprovidererror"}}],[11,"eq","","",45,{"inputs":[{"name":"gtkcsssectiontype"},{"name":"gtkcsssectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"gtkcsssectiontype"},{"name":"gtkcsssectiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"gtkcsssectiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"gtkcsssectiontype"}],"output":{"name":"gtkcsssectiontype"}}],[11,"eq","","",46,{"inputs":[{"name":"gtkdeletetype"},{"name":"gtkdeletetype"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"gtkdeletetype"},{"name":"gtkdeletetype"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"gtkdeletetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"gtkdeletetype"}],"output":{"name":"gtkdeletetype"}}],[11,"eq","","",47,{"inputs":[{"name":"gtkdirectiontype"},{"name":"gtkdirectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"gtkdirectiontype"},{"name":"gtkdirectiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"gtkdirectiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"gtkdirectiontype"}],"output":{"name":"gtkdirectiontype"}}],[11,"eq","","",48,{"inputs":[{"name":"gtkdragresult"},{"name":"gtkdragresult"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"gtkdragresult"},{"name":"gtkdragresult"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"gtkdragresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"gtkdragresult"}],"output":{"name":"gtkdragresult"}}],[11,"eq","","",49,{"inputs":[{"name":"gtkentryiconposition"},{"name":"gtkentryiconposition"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"gtkentryiconposition"},{"name":"gtkentryiconposition"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"gtkentryiconposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"gtkentryiconposition"}],"output":{"name":"gtkentryiconposition"}}],[11,"eq","","",50,{"inputs":[{"name":"gtkeventsequencestate"},{"name":"gtkeventsequencestate"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"gtkeventsequencestate"},{"name":"gtkeventsequencestate"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"gtkeventsequencestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"gtkeventsequencestate"}],"output":{"name":"gtkeventsequencestate"}}],[11,"eq","","",51,{"inputs":[{"name":"gtkexpanderstyle"},{"name":"gtkexpanderstyle"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"gtkexpanderstyle"},{"name":"gtkexpanderstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"gtkexpanderstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"gtkexpanderstyle"}],"output":{"name":"gtkexpanderstyle"}}],[11,"eq","","",52,{"inputs":[{"name":"gtkfilechooseraction"},{"name":"gtkfilechooseraction"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"gtkfilechooseraction"},{"name":"gtkfilechooseraction"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"gtkfilechooseraction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"gtkfilechooseraction"}],"output":{"name":"gtkfilechooseraction"}}],[11,"eq","","",53,{"inputs":[{"name":"gtkfilechooserconfirmation"},{"name":"gtkfilechooserconfirmation"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"gtkfilechooserconfirmation"},{"name":"gtkfilechooserconfirmation"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"gtkfilechooserconfirmation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"gtkfilechooserconfirmation"}],"output":{"name":"gtkfilechooserconfirmation"}}],[11,"eq","","",54,{"inputs":[{"name":"gtkfilechoosererror"},{"name":"gtkfilechoosererror"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"gtkfilechoosererror"},{"name":"gtkfilechoosererror"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"gtkfilechoosererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"gtkfilechoosererror"}],"output":{"name":"gtkfilechoosererror"}}],[11,"eq","","",55,{"inputs":[{"name":"gtkimpreeditstyle"},{"name":"gtkimpreeditstyle"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"gtkimpreeditstyle"},{"name":"gtkimpreeditstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",55,{"inputs":[{"name":"gtkimpreeditstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"gtkimpreeditstyle"}],"output":{"name":"gtkimpreeditstyle"}}],[11,"eq","","",56,{"inputs":[{"name":"gtkimstatusstyle"},{"name":"gtkimstatusstyle"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"gtkimstatusstyle"},{"name":"gtkimstatusstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"gtkimstatusstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"gtkimstatusstyle"}],"output":{"name":"gtkimstatusstyle"}}],[11,"eq","","",57,{"inputs":[{"name":"gtkiconsize"},{"name":"gtkiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"gtkiconsize"},{"name":"gtkiconsize"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"gtkiconsize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"gtkiconsize"}],"output":{"name":"gtkiconsize"}}],[11,"eq","","",58,{"inputs":[{"name":"gtkiconthemeerror"},{"name":"gtkiconthemeerror"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"gtkiconthemeerror"},{"name":"gtkiconthemeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"gtkiconthemeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"gtkiconthemeerror"}],"output":{"name":"gtkiconthemeerror"}}],[11,"eq","","",59,{"inputs":[{"name":"gtkiconviewdropposition"},{"name":"gtkiconviewdropposition"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"gtkiconviewdropposition"},{"name":"gtkiconviewdropposition"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"gtkiconviewdropposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"gtkiconviewdropposition"}],"output":{"name":"gtkiconviewdropposition"}}],[11,"eq","","",60,{"inputs":[{"name":"gtkimagetype"},{"name":"gtkimagetype"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"gtkimagetype"},{"name":"gtkimagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"gtkimagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"gtkimagetype"}],"output":{"name":"gtkimagetype"}}],[11,"eq","","",61,{"inputs":[{"name":"gtkinputpurpose"},{"name":"gtkinputpurpose"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"gtkinputpurpose"},{"name":"gtkinputpurpose"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"gtkinputpurpose"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"gtkinputpurpose"}],"output":{"name":"gtkinputpurpose"}}],[11,"eq","","",62,{"inputs":[{"name":"gtkjustification"},{"name":"gtkjustification"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"gtkjustification"},{"name":"gtkjustification"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"gtkjustification"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"gtkjustification"}],"output":{"name":"gtkjustification"}}],[11,"eq","","",63,{"inputs":[{"name":"gtklevelbarmode"},{"name":"gtklevelbarmode"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"gtklevelbarmode"},{"name":"gtklevelbarmode"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"gtklevelbarmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"gtklevelbarmode"}],"output":{"name":"gtklevelbarmode"}}],[11,"eq","","",64,{"inputs":[{"name":"gtklicense"},{"name":"gtklicense"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"gtklicense"},{"name":"gtklicense"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"gtklicense"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"gtklicense"}],"output":{"name":"gtklicense"}}],[11,"eq","","",65,{"inputs":[{"name":"gtkmenudirectiontype"},{"name":"gtkmenudirectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"gtkmenudirectiontype"},{"name":"gtkmenudirectiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"gtkmenudirectiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"gtkmenudirectiontype"}],"output":{"name":"gtkmenudirectiontype"}}],[11,"eq","","",66,{"inputs":[{"name":"gtkmessagetype"},{"name":"gtkmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"gtkmessagetype"},{"name":"gtkmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"gtkmessagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"gtkmessagetype"}],"output":{"name":"gtkmessagetype"}}],[11,"eq","","",67,{"inputs":[{"name":"gtkmovementstep"},{"name":"gtkmovementstep"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"gtkmovementstep"},{"name":"gtkmovementstep"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"gtkmovementstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"gtkmovementstep"}],"output":{"name":"gtkmovementstep"}}],[11,"eq","","",68,{"inputs":[{"name":"gtknotebooktab"},{"name":"gtknotebooktab"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"gtknotebooktab"},{"name":"gtknotebooktab"}],"output":{"name":"bool"}}],[11,"fmt","","",68,{"inputs":[{"name":"gtknotebooktab"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"gtknotebooktab"}],"output":{"name":"gtknotebooktab"}}],[11,"eq","","",69,{"inputs":[{"name":"gtknumberuplayout"},{"name":"gtknumberuplayout"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"gtknumberuplayout"},{"name":"gtknumberuplayout"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"gtknumberuplayout"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"gtknumberuplayout"}],"output":{"name":"gtknumberuplayout"}}],[11,"eq","","",70,{"inputs":[{"name":"gtkorientation"},{"name":"gtkorientation"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"gtkorientation"},{"name":"gtkorientation"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"gtkorientation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"gtkorientation"}],"output":{"name":"gtkorientation"}}],[11,"eq","","",71,{"inputs":[{"name":"gtkpackdirection"},{"name":"gtkpackdirection"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"gtkpackdirection"},{"name":"gtkpackdirection"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"gtkpackdirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"gtkpackdirection"}],"output":{"name":"gtkpackdirection"}}],[11,"eq","","",72,{"inputs":[{"name":"gtkpacktype"},{"name":"gtkpacktype"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"gtkpacktype"},{"name":"gtkpacktype"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"gtkpacktype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"gtkpacktype"}],"output":{"name":"gtkpacktype"}}],[11,"eq","","",73,{"inputs":[{"name":"gtkpageorientation"},{"name":"gtkpageorientation"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"gtkpageorientation"},{"name":"gtkpageorientation"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"gtkpageorientation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"gtkpageorientation"}],"output":{"name":"gtkpageorientation"}}],[11,"eq","","",74,{"inputs":[{"name":"gtkpageset"},{"name":"gtkpageset"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"gtkpageset"},{"name":"gtkpageset"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"gtkpageset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"gtkpageset"}],"output":{"name":"gtkpageset"}}],[11,"eq","","",75,{"inputs":[{"name":"gtkpandirection"},{"name":"gtkpandirection"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"gtkpandirection"},{"name":"gtkpandirection"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"gtkpandirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"gtkpandirection"}],"output":{"name":"gtkpandirection"}}],[11,"eq","","",76,{"inputs":[{"name":"gtkpathprioritytype"},{"name":"gtkpathprioritytype"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"gtkpathprioritytype"},{"name":"gtkpathprioritytype"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"gtkpathprioritytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"gtkpathprioritytype"}],"output":{"name":"gtkpathprioritytype"}}],[11,"eq","","",77,{"inputs":[{"name":"gtkpathtype"},{"name":"gtkpathtype"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"gtkpathtype"},{"name":"gtkpathtype"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"gtkpathtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"gtkpathtype"}],"output":{"name":"gtkpathtype"}}],[11,"eq","","",78,{"inputs":[{"name":"gtkpolicytype"},{"name":"gtkpolicytype"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"gtkpolicytype"},{"name":"gtkpolicytype"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"gtkpolicytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"gtkpolicytype"}],"output":{"name":"gtkpolicytype"}}],[11,"eq","","",79,{"inputs":[{"name":"gtkpositiontype"},{"name":"gtkpositiontype"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"gtkpositiontype"},{"name":"gtkpositiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"gtkpositiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"gtkpositiontype"}],"output":{"name":"gtkpositiontype"}}],[11,"eq","","",80,{"inputs":[{"name":"gtkprintduplex"},{"name":"gtkprintduplex"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"gtkprintduplex"},{"name":"gtkprintduplex"}],"output":{"name":"bool"}}],[11,"fmt","","",80,{"inputs":[{"name":"gtkprintduplex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"gtkprintduplex"}],"output":{"name":"gtkprintduplex"}}],[11,"eq","","",81,{"inputs":[{"name":"gtkprinterror"},{"name":"gtkprinterror"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"gtkprinterror"},{"name":"gtkprinterror"}],"output":{"name":"bool"}}],[11,"fmt","","",81,{"inputs":[{"name":"gtkprinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"gtkprinterror"}],"output":{"name":"gtkprinterror"}}],[11,"eq","","",82,{"inputs":[{"name":"gtkprintoperationaction"},{"name":"gtkprintoperationaction"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"gtkprintoperationaction"},{"name":"gtkprintoperationaction"}],"output":{"name":"bool"}}],[11,"fmt","","",82,{"inputs":[{"name":"gtkprintoperationaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"gtkprintoperationaction"}],"output":{"name":"gtkprintoperationaction"}}],[11,"eq","","",83,{"inputs":[{"name":"gtkprintoperationresult"},{"name":"gtkprintoperationresult"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"gtkprintoperationresult"},{"name":"gtkprintoperationresult"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"gtkprintoperationresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"gtkprintoperationresult"}],"output":{"name":"gtkprintoperationresult"}}],[11,"eq","","",84,{"inputs":[{"name":"gtkprintpages"},{"name":"gtkprintpages"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"gtkprintpages"},{"name":"gtkprintpages"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"gtkprintpages"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"gtkprintpages"}],"output":{"name":"gtkprintpages"}}],[11,"eq","","",85,{"inputs":[{"name":"gtkprintquality"},{"name":"gtkprintquality"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"gtkprintquality"},{"name":"gtkprintquality"}],"output":{"name":"bool"}}],[11,"fmt","","",85,{"inputs":[{"name":"gtkprintquality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"gtkprintquality"}],"output":{"name":"gtkprintquality"}}],[11,"eq","","",86,{"inputs":[{"name":"gtkprintstatus"},{"name":"gtkprintstatus"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"gtkprintstatus"},{"name":"gtkprintstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"gtkprintstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"gtkprintstatus"}],"output":{"name":"gtkprintstatus"}}],[11,"eq","","",87,{"inputs":[{"name":"gtkpropagationphase"},{"name":"gtkpropagationphase"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"gtkpropagationphase"},{"name":"gtkpropagationphase"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"gtkpropagationphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"gtkpropagationphase"}],"output":{"name":"gtkpropagationphase"}}],[11,"eq","","",88,{"inputs":[{"name":"gtkrctokentype"},{"name":"gtkrctokentype"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"gtkrctokentype"},{"name":"gtkrctokentype"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"gtkrctokentype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",88,{"inputs":[{"name":"gtkrctokentype"}],"output":{"name":"gtkrctokentype"}}],[11,"eq","","",89,{"inputs":[{"name":"gtkrecentchoosererror"},{"name":"gtkrecentchoosererror"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"gtkrecentchoosererror"},{"name":"gtkrecentchoosererror"}],"output":{"name":"bool"}}],[11,"fmt","","",89,{"inputs":[{"name":"gtkrecentchoosererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",89,{"inputs":[{"name":"gtkrecentchoosererror"}],"output":{"name":"gtkrecentchoosererror"}}],[11,"eq","","",90,{"inputs":[{"name":"gtkrecentmanagererror"},{"name":"gtkrecentmanagererror"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"gtkrecentmanagererror"},{"name":"gtkrecentmanagererror"}],"output":{"name":"bool"}}],[11,"fmt","","",90,{"inputs":[{"name":"gtkrecentmanagererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",90,{"inputs":[{"name":"gtkrecentmanagererror"}],"output":{"name":"gtkrecentmanagererror"}}],[11,"eq","","",91,{"inputs":[{"name":"gtkrecentsorttype"},{"name":"gtkrecentsorttype"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"gtkrecentsorttype"},{"name":"gtkrecentsorttype"}],"output":{"name":"bool"}}],[11,"fmt","","",91,{"inputs":[{"name":"gtkrecentsorttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",91,{"inputs":[{"name":"gtkrecentsorttype"}],"output":{"name":"gtkrecentsorttype"}}],[11,"eq","","",92,{"inputs":[{"name":"gtkreliefstyle"},{"name":"gtkreliefstyle"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"gtkreliefstyle"},{"name":"gtkreliefstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",92,{"inputs":[{"name":"gtkreliefstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",92,{"inputs":[{"name":"gtkreliefstyle"}],"output":{"name":"gtkreliefstyle"}}],[11,"eq","","",93,{"inputs":[{"name":"gtkresizemode"},{"name":"gtkresizemode"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"gtkresizemode"},{"name":"gtkresizemode"}],"output":{"name":"bool"}}],[11,"fmt","","",93,{"inputs":[{"name":"gtkresizemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",93,{"inputs":[{"name":"gtkresizemode"}],"output":{"name":"gtkresizemode"}}],[11,"eq","","",94,{"inputs":[{"name":"gtkresponsetype"},{"name":"gtkresponsetype"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"gtkresponsetype"},{"name":"gtkresponsetype"}],"output":{"name":"bool"}}],[11,"fmt","","",94,{"inputs":[{"name":"gtkresponsetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",94,{"inputs":[{"name":"gtkresponsetype"}],"output":{"name":"gtkresponsetype"}}],[11,"eq","","",95,{"inputs":[{"name":"gtkrevealertransitiontype"},{"name":"gtkrevealertransitiontype"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"gtkrevealertransitiontype"},{"name":"gtkrevealertransitiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",95,{"inputs":[{"name":"gtkrevealertransitiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",95,{"inputs":[{"name":"gtkrevealertransitiontype"}],"output":{"name":"gtkrevealertransitiontype"}}],[11,"eq","","",96,{"inputs":[{"name":"gtkscrollstep"},{"name":"gtkscrollstep"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"gtkscrollstep"},{"name":"gtkscrollstep"}],"output":{"name":"bool"}}],[11,"fmt","","",96,{"inputs":[{"name":"gtkscrollstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",96,{"inputs":[{"name":"gtkscrollstep"}],"output":{"name":"gtkscrollstep"}}],[11,"eq","","",97,{"inputs":[{"name":"gtkscrolltype"},{"name":"gtkscrolltype"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"gtkscrolltype"},{"name":"gtkscrolltype"}],"output":{"name":"bool"}}],[11,"fmt","","",97,{"inputs":[{"name":"gtkscrolltype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",97,{"inputs":[{"name":"gtkscrolltype"}],"output":{"name":"gtkscrolltype"}}],[11,"eq","","",98,{"inputs":[{"name":"gtkscrollablepolicy"},{"name":"gtkscrollablepolicy"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"gtkscrollablepolicy"},{"name":"gtkscrollablepolicy"}],"output":{"name":"bool"}}],[11,"fmt","","",98,{"inputs":[{"name":"gtkscrollablepolicy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",98,{"inputs":[{"name":"gtkscrollablepolicy"}],"output":{"name":"gtkscrollablepolicy"}}],[11,"eq","","",99,{"inputs":[{"name":"gtkselectionmode"},{"name":"gtkselectionmode"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"gtkselectionmode"},{"name":"gtkselectionmode"}],"output":{"name":"bool"}}],[11,"fmt","","",99,{"inputs":[{"name":"gtkselectionmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",99,{"inputs":[{"name":"gtkselectionmode"}],"output":{"name":"gtkselectionmode"}}],[11,"eq","","",100,{"inputs":[{"name":"gtksensitivitytype"},{"name":"gtksensitivitytype"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"gtksensitivitytype"},{"name":"gtksensitivitytype"}],"output":{"name":"bool"}}],[11,"fmt","","",100,{"inputs":[{"name":"gtksensitivitytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",100,{"inputs":[{"name":"gtksensitivitytype"}],"output":{"name":"gtksensitivitytype"}}],[11,"eq","","",101,{"inputs":[{"name":"gtkshadowtype"},{"name":"gtkshadowtype"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"gtkshadowtype"},{"name":"gtkshadowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",101,{"inputs":[{"name":"gtkshadowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",101,{"inputs":[{"name":"gtkshadowtype"}],"output":{"name":"gtkshadowtype"}}],[11,"eq","","",102,{"inputs":[{"name":"gtksizegroupmode"},{"name":"gtksizegroupmode"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"gtksizegroupmode"},{"name":"gtksizegroupmode"}],"output":{"name":"bool"}}],[11,"fmt","","",102,{"inputs":[{"name":"gtksizegroupmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",102,{"inputs":[{"name":"gtksizegroupmode"}],"output":{"name":"gtksizegroupmode"}}],[11,"eq","","",103,{"inputs":[{"name":"gtksizerequestmode"},{"name":"gtksizerequestmode"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"gtksizerequestmode"},{"name":"gtksizerequestmode"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"gtksizerequestmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",103,{"inputs":[{"name":"gtksizerequestmode"}],"output":{"name":"gtksizerequestmode"}}],[11,"eq","","",104,{"inputs":[{"name":"gtksorttype"},{"name":"gtksorttype"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"gtksorttype"},{"name":"gtksorttype"}],"output":{"name":"bool"}}],[11,"fmt","","",104,{"inputs":[{"name":"gtksorttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",104,{"inputs":[{"name":"gtksorttype"}],"output":{"name":"gtksorttype"}}],[11,"eq","","",105,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"},{"name":"gtkspinbuttonupdatepolicy"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"},{"name":"gtkspinbuttonupdatepolicy"}],"output":{"name":"bool"}}],[11,"fmt","","",105,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",105,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"}],"output":{"name":"gtkspinbuttonupdatepolicy"}}],[11,"eq","","",106,{"inputs":[{"name":"gtkspintype"},{"name":"gtkspintype"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"gtkspintype"},{"name":"gtkspintype"}],"output":{"name":"bool"}}],[11,"fmt","","",106,{"inputs":[{"name":"gtkspintype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",106,{"inputs":[{"name":"gtkspintype"}],"output":{"name":"gtkspintype"}}],[11,"eq","","",107,{"inputs":[{"name":"gtkstacktransitiontype"},{"name":"gtkstacktransitiontype"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"gtkstacktransitiontype"},{"name":"gtkstacktransitiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",107,{"inputs":[{"name":"gtkstacktransitiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",107,{"inputs":[{"name":"gtkstacktransitiontype"}],"output":{"name":"gtkstacktransitiontype"}}],[11,"eq","","",108,{"inputs":[{"name":"gtkstatetype"},{"name":"gtkstatetype"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"gtkstatetype"},{"name":"gtkstatetype"}],"output":{"name":"bool"}}],[11,"fmt","","",108,{"inputs":[{"name":"gtkstatetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",108,{"inputs":[{"name":"gtkstatetype"}],"output":{"name":"gtkstatetype"}}],[11,"eq","","",109,{"inputs":[{"name":"gtktextbuffertargetinfo"},{"name":"gtktextbuffertargetinfo"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"gtktextbuffertargetinfo"},{"name":"gtktextbuffertargetinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",109,{"inputs":[{"name":"gtktextbuffertargetinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",109,{"inputs":[{"name":"gtktextbuffertargetinfo"}],"output":{"name":"gtktextbuffertargetinfo"}}],[11,"eq","","",110,{"inputs":[{"name":"gtktextdirection"},{"name":"gtktextdirection"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"gtktextdirection"},{"name":"gtktextdirection"}],"output":{"name":"bool"}}],[11,"fmt","","",110,{"inputs":[{"name":"gtktextdirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",110,{"inputs":[{"name":"gtktextdirection"}],"output":{"name":"gtktextdirection"}}],[11,"eq","","",111,{"inputs":[{"name":"gtktextextendselection"},{"name":"gtktextextendselection"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"gtktextextendselection"},{"name":"gtktextextendselection"}],"output":{"name":"bool"}}],[11,"fmt","","",111,{"inputs":[{"name":"gtktextextendselection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",111,{"inputs":[{"name":"gtktextextendselection"}],"output":{"name":"gtktextextendselection"}}],[11,"eq","","",112,{"inputs":[{"name":"gtktextviewlayer"},{"name":"gtktextviewlayer"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"gtktextviewlayer"},{"name":"gtktextviewlayer"}],"output":{"name":"bool"}}],[11,"fmt","","",112,{"inputs":[{"name":"gtktextviewlayer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",112,{"inputs":[{"name":"gtktextviewlayer"}],"output":{"name":"gtktextviewlayer"}}],[11,"eq","","",113,{"inputs":[{"name":"gtktextwindowtype"},{"name":"gtktextwindowtype"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"gtktextwindowtype"},{"name":"gtktextwindowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",113,{"inputs":[{"name":"gtktextwindowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"gtktextwindowtype"}],"output":{"name":"gtktextwindowtype"}}],[11,"eq","","",114,{"inputs":[{"name":"gtktoolbarspacestyle"},{"name":"gtktoolbarspacestyle"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"gtktoolbarspacestyle"},{"name":"gtktoolbarspacestyle"}],"output":{"name":"bool"}}],[11,"fmt","","",114,{"inputs":[{"name":"gtktoolbarspacestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"gtktoolbarspacestyle"}],"output":{"name":"gtktoolbarspacestyle"}}],[11,"eq","","",115,{"inputs":[{"name":"gtktoolbarstyle"},{"name":"gtktoolbarstyle"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"gtktoolbarstyle"},{"name":"gtktoolbarstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",115,{"inputs":[{"name":"gtktoolbarstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"gtktoolbarstyle"}],"output":{"name":"gtktoolbarstyle"}}],[11,"eq","","",116,{"inputs":[{"name":"gtktreeviewcolumnsizing"},{"name":"gtktreeviewcolumnsizing"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"gtktreeviewcolumnsizing"},{"name":"gtktreeviewcolumnsizing"}],"output":{"name":"bool"}}],[11,"fmt","","",116,{"inputs":[{"name":"gtktreeviewcolumnsizing"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"gtktreeviewcolumnsizing"}],"output":{"name":"gtktreeviewcolumnsizing"}}],[11,"eq","","",117,{"inputs":[{"name":"gtktreeviewdropposition"},{"name":"gtktreeviewdropposition"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"gtktreeviewdropposition"},{"name":"gtktreeviewdropposition"}],"output":{"name":"bool"}}],[11,"fmt","","",117,{"inputs":[{"name":"gtktreeviewdropposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",117,{"inputs":[{"name":"gtktreeviewdropposition"}],"output":{"name":"gtktreeviewdropposition"}}],[11,"eq","","",118,{"inputs":[{"name":"gtktreeviewgridlines"},{"name":"gtktreeviewgridlines"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"gtktreeviewgridlines"},{"name":"gtktreeviewgridlines"}],"output":{"name":"bool"}}],[11,"fmt","","",118,{"inputs":[{"name":"gtktreeviewgridlines"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",118,{"inputs":[{"name":"gtktreeviewgridlines"}],"output":{"name":"gtktreeviewgridlines"}}],[11,"eq","","",119,{"inputs":[{"name":"gtkunit"},{"name":"gtkunit"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"gtkunit"},{"name":"gtkunit"}],"output":{"name":"bool"}}],[11,"fmt","","",119,{"inputs":[{"name":"gtkunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",119,{"inputs":[{"name":"gtkunit"}],"output":{"name":"gtkunit"}}],[11,"eq","","",120,{"inputs":[{"name":"gtkwidgethelptype"},{"name":"gtkwidgethelptype"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"gtkwidgethelptype"},{"name":"gtkwidgethelptype"}],"output":{"name":"bool"}}],[11,"fmt","","",120,{"inputs":[{"name":"gtkwidgethelptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"gtkwidgethelptype"}],"output":{"name":"gtkwidgethelptype"}}],[11,"eq","","",121,{"inputs":[{"name":"gtkwindowposition"},{"name":"gtkwindowposition"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"gtkwindowposition"},{"name":"gtkwindowposition"}],"output":{"name":"bool"}}],[11,"fmt","","",121,{"inputs":[{"name":"gtkwindowposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"gtkwindowposition"}],"output":{"name":"gtkwindowposition"}}],[11,"eq","","",122,{"inputs":[{"name":"gtkwindowtype"},{"name":"gtkwindowtype"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"gtkwindowtype"},{"name":"gtkwindowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",122,{"inputs":[{"name":"gtkwindowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",122,{"inputs":[{"name":"gtkwindowtype"}],"output":{"name":"gtkwindowtype"}}],[11,"eq","","",123,{"inputs":[{"name":"gtkwrapmode"},{"name":"gtkwrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"gtkwrapmode"},{"name":"gtkwrapmode"}],"output":{"name":"bool"}}],[11,"fmt","","",123,{"inputs":[{"name":"gtkwrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",123,{"inputs":[{"name":"gtkwrapmode"}],"output":{"name":"gtkwrapmode"}}],[11,"hash","","",30,null],[11,"cmp","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"eq","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bitor","","Returns the union of the two sets of flags.",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",30,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"not","","Returns the complement of this set of flags.",30,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"gtkaccelflags"}}],[11,"hash","","",124,null],[11,"cmp","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"eq","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"fmt","","",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",124,{"inputs":[],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"all","","Returns the set containing all flags.",124,{"inputs":[],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",124,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",124,{"inputs":[{"name":"u32"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",124,null],[11,"remove","","Removes the specified flags in-place.",124,null],[11,"toggle","","Toggles the specified flags in-place.",124,null],[11,"bitor","","Returns the union of the two sets of flags.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"not","","Returns the complement of this set of flags.",124,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"from_iter","","",124,{"inputs":[{"name":"t"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"hash","","",125,null],[11,"cmp","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"option"}}],[11,"lt","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"le","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"gt","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"ge","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"clone","","",125,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"eq","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",125,{"inputs":[],"output":{"name":"gtkattachoptions"}}],[11,"all","","Returns the set containing all flags.",125,{"inputs":[],"output":{"name":"gtkattachoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",125,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",125,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",125,{"inputs":[{"name":"u32"}],"output":{"name":"gtkattachoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",125,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",125,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",125,null],[11,"remove","","Removes the specified flags in-place.",125,null],[11,"toggle","","Toggles the specified flags in-place.",125,null],[11,"bitor","","Returns the union of the two sets of flags.",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",125,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"not","","Returns the complement of this set of flags.",125,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"from_iter","","",125,{"inputs":[{"name":"t"}],"output":{"name":"gtkattachoptions"}}],[11,"hash","","",126,null],[11,"cmp","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"option"}}],[11,"lt","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"le","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"gt","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"ge","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"clone","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"eq","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",126,{"inputs":[],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"all","","Returns the set containing all flags.",126,{"inputs":[],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",126,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",126,{"inputs":[{"name":"u32"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",126,null],[11,"remove","","Removes the specified flags in-place.",126,null],[11,"toggle","","Toggles the specified flags in-place.",126,null],[11,"bitor","","Returns the union of the two sets of flags.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"not","","Returns the complement of this set of flags.",126,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"from_iter","","",126,{"inputs":[{"name":"t"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"hash","","",127,null],[11,"cmp","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"option"}}],[11,"lt","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"le","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"gt","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"ge","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"clone","","",127,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"eq","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"fmt","","",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",127,{"inputs":[],"output":{"name":"gtkcellrendererstate"}}],[11,"all","","Returns the set containing all flags.",127,{"inputs":[],"output":{"name":"gtkcellrendererstate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",127,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",127,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",127,{"inputs":[{"name":"u32"}],"output":{"name":"gtkcellrendererstate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",127,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",127,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",127,null],[11,"remove","","Removes the specified flags in-place.",127,null],[11,"toggle","","Toggles the specified flags in-place.",127,null],[11,"bitor","","Returns the union of the two sets of flags.",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"sub","","Returns the set difference of the two sets of flags.",127,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"not","","Returns the complement of this set of flags.",127,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"from_iter","","",127,{"inputs":[{"name":"t"}],"output":{"name":"gtkcellrendererstate"}}],[11,"hash","","",128,null],[11,"cmp","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"option"}}],[11,"lt","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"le","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"gt","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"ge","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"eq","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"fmt","","",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",128,{"inputs":[],"output":{"name":"gtkdebugflag"}}],[11,"all","","Returns the set containing all flags.",128,{"inputs":[],"output":{"name":"gtkdebugflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",128,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",128,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",128,{"inputs":[{"name":"u32"}],"output":{"name":"gtkdebugflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",128,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",128,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",128,null],[11,"remove","","Removes the specified flags in-place.",128,null],[11,"toggle","","Toggles the specified flags in-place.",128,null],[11,"bitor","","Returns the union of the two sets of flags.",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"sub","","Returns the set difference of the two sets of flags.",128,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"not","","Returns the complement of this set of flags.",128,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"from_iter","","",128,{"inputs":[{"name":"t"}],"output":{"name":"gtkdebugflag"}}],[11,"hash","","",129,null],[11,"cmp","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"option"}}],[11,"lt","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"le","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"gt","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"ge","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"clone","","",129,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"eq","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"fmt","","",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",129,{"inputs":[],"output":{"name":"gtkdestdefaults"}}],[11,"all","","Returns the set containing all flags.",129,{"inputs":[],"output":{"name":"gtkdestdefaults"}}],[11,"bits","","Returns the raw value of the flags currently stored.",129,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",129,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",129,{"inputs":[{"name":"u32"}],"output":{"name":"gtkdestdefaults"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",129,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",129,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",129,null],[11,"remove","","Removes the specified flags in-place.",129,null],[11,"toggle","","Toggles the specified flags in-place.",129,null],[11,"bitor","","Returns the union of the two sets of flags.",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"sub","","Returns the set difference of the two sets of flags.",129,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"not","","Returns the complement of this set of flags.",129,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"from_iter","","",129,{"inputs":[{"name":"t"}],"output":{"name":"gtkdestdefaults"}}],[11,"hash","","",130,null],[11,"cmp","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"option"}}],[11,"lt","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"le","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"gt","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"ge","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"clone","","",130,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"eq","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"fmt","","",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",130,{"inputs":[],"output":{"name":"gtkdialogflags"}}],[11,"all","","Returns the set containing all flags.",130,{"inputs":[],"output":{"name":"gtkdialogflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",130,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",130,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",130,{"inputs":[{"name":"u32"}],"output":{"name":"gtkdialogflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",130,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",130,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",130,null],[11,"remove","","Removes the specified flags in-place.",130,null],[11,"toggle","","Toggles the specified flags in-place.",130,null],[11,"bitor","","Returns the union of the two sets of flags.",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",130,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"not","","Returns the complement of this set of flags.",130,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"from_iter","","",130,{"inputs":[{"name":"t"}],"output":{"name":"gtkdialogflags"}}],[11,"hash","","",131,null],[11,"cmp","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"option"}}],[11,"lt","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"le","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"gt","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"ge","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"clone","","",131,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"eq","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"fmt","","",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",131,{"inputs":[],"output":{"name":"gtkfilefilterflags"}}],[11,"all","","Returns the set containing all flags.",131,{"inputs":[],"output":{"name":"gtkfilefilterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",131,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",131,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",131,{"inputs":[{"name":"u32"}],"output":{"name":"gtkfilefilterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",131,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",131,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",131,null],[11,"remove","","Removes the specified flags in-place.",131,null],[11,"toggle","","Toggles the specified flags in-place.",131,null],[11,"bitor","","Returns the union of the two sets of flags.",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",131,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"not","","Returns the complement of this set of flags.",131,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"from_iter","","",131,{"inputs":[{"name":"t"}],"output":{"name":"gtkfilefilterflags"}}],[11,"hash","","",132,null],[11,"cmp","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"option"}}],[11,"lt","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"le","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"gt","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"ge","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"eq","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"fmt","","",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",132,{"inputs":[],"output":{"name":"gtkiconlookupflags"}}],[11,"all","","Returns the set containing all flags.",132,{"inputs":[],"output":{"name":"gtkiconlookupflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",132,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",132,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",132,{"inputs":[{"name":"u32"}],"output":{"name":"gtkiconlookupflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",132,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",132,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",132,null],[11,"remove","","Removes the specified flags in-place.",132,null],[11,"toggle","","Toggles the specified flags in-place.",132,null],[11,"bitor","","Returns the union of the two sets of flags.",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",132,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"not","","Returns the complement of this set of flags.",132,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"from_iter","","",132,{"inputs":[{"name":"t"}],"output":{"name":"gtkiconlookupflags"}}],[11,"hash","","",133,null],[11,"cmp","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"option"}}],[11,"lt","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"le","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"gt","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"ge","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"eq","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"fmt","","",133,{"inputs":[{"name":"gtkinputhints"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",133,{"inputs":[],"output":{"name":"gtkinputhints"}}],[11,"all","","Returns the set containing all flags.",133,{"inputs":[],"output":{"name":"gtkinputhints"}}],[11,"bits","","Returns the raw value of the flags currently stored.",133,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",133,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",133,{"inputs":[{"name":"u32"}],"output":{"name":"gtkinputhints"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",133,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",133,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",133,null],[11,"remove","","Removes the specified flags in-place.",133,null],[11,"toggle","","Toggles the specified flags in-place.",133,null],[11,"bitor","","Returns the union of the two sets of flags.",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"sub","","Returns the set difference of the two sets of flags.",133,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"not","","Returns the complement of this set of flags.",133,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"from_iter","","",133,{"inputs":[{"name":"t"}],"output":{"name":"gtkinputhints"}}],[11,"hash","","",134,null],[11,"cmp","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"option"}}],[11,"lt","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"le","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"gt","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"ge","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"eq","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",134,{"inputs":[],"output":{"name":"gtkjunctionsides"}}],[11,"all","","Returns the set containing all flags.",134,{"inputs":[],"output":{"name":"gtkjunctionsides"}}],[11,"bits","","Returns the raw value of the flags currently stored.",134,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",134,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",134,{"inputs":[{"name":"u32"}],"output":{"name":"gtkjunctionsides"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",134,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",134,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",134,null],[11,"remove","","Removes the specified flags in-place.",134,null],[11,"toggle","","Toggles the specified flags in-place.",134,null],[11,"bitor","","Returns the union of the two sets of flags.",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"sub","","Returns the set difference of the two sets of flags.",134,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"not","","Returns the complement of this set of flags.",134,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"from_iter","","",134,{"inputs":[{"name":"t"}],"output":{"name":"gtkjunctionsides"}}],[11,"hash","","",135,null],[11,"cmp","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"option"}}],[11,"lt","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"le","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"gt","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"ge","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"eq","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",135,{"inputs":[],"output":{"name":"gtkplacesopenflags"}}],[11,"all","","Returns the set containing all flags.",135,{"inputs":[],"output":{"name":"gtkplacesopenflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",135,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",135,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",135,{"inputs":[{"name":"u32"}],"output":{"name":"gtkplacesopenflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",135,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",135,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",135,null],[11,"remove","","Removes the specified flags in-place.",135,null],[11,"toggle","","Toggles the specified flags in-place.",135,null],[11,"bitor","","Returns the union of the two sets of flags.",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",135,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"not","","Returns the complement of this set of flags.",135,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"from_iter","","",135,{"inputs":[{"name":"t"}],"output":{"name":"gtkplacesopenflags"}}],[11,"hash","","",136,null],[11,"cmp","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"option"}}],[11,"lt","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"le","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"gt","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"ge","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"eq","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"fmt","","",136,{"inputs":[{"name":"gtkrcflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",136,{"inputs":[],"output":{"name":"gtkrcflags"}}],[11,"all","","Returns the set containing all flags.",136,{"inputs":[],"output":{"name":"gtkrcflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",136,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",136,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",136,{"inputs":[{"name":"u32"}],"output":{"name":"gtkrcflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",136,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",136,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",136,null],[11,"remove","","Removes the specified flags in-place.",136,null],[11,"toggle","","Toggles the specified flags in-place.",136,null],[11,"bitor","","Returns the union of the two sets of flags.",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",136,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"not","","Returns the complement of this set of flags.",136,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"from_iter","","",136,{"inputs":[{"name":"t"}],"output":{"name":"gtkrcflags"}}],[11,"hash","","",137,null],[11,"cmp","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"option"}}],[11,"lt","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"le","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"gt","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"ge","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"eq","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"fmt","","",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",137,{"inputs":[],"output":{"name":"gtkrecentfilterflags"}}],[11,"all","","Returns the set containing all flags.",137,{"inputs":[],"output":{"name":"gtkrecentfilterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",137,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",137,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",137,{"inputs":[{"name":"u32"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",137,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",137,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",137,null],[11,"remove","","Removes the specified flags in-place.",137,null],[11,"toggle","","Toggles the specified flags in-place.",137,null],[11,"bitor","","Returns the union of the two sets of flags.",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",137,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"not","","Returns the complement of this set of flags.",137,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"from_iter","","",137,{"inputs":[{"name":"t"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"hash","","",138,null],[11,"cmp","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"option"}}],[11,"lt","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"le","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"gt","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"ge","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"eq","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"gtkregionflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",138,{"inputs":[],"output":{"name":"gtkregionflags"}}],[11,"all","","Returns the set containing all flags.",138,{"inputs":[],"output":{"name":"gtkregionflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",138,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",138,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",138,{"inputs":[{"name":"u32"}],"output":{"name":"gtkregionflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",138,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",138,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",138,null],[11,"remove","","Removes the specified flags in-place.",138,null],[11,"toggle","","Toggles the specified flags in-place.",138,null],[11,"bitor","","Returns the union of the two sets of flags.",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",138,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"not","","Returns the complement of this set of flags.",138,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"from_iter","","",138,{"inputs":[{"name":"t"}],"output":{"name":"gtkregionflags"}}],[11,"hash","","",139,null],[11,"cmp","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"option"}}],[11,"lt","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"le","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"gt","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"ge","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"eq","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"gtkstateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",139,{"inputs":[],"output":{"name":"gtkstateflags"}}],[11,"all","","Returns the set containing all flags.",139,{"inputs":[],"output":{"name":"gtkstateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",139,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",139,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",139,{"inputs":[{"name":"u32"}],"output":{"name":"gtkstateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",139,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",139,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",139,null],[11,"remove","","Removes the specified flags in-place.",139,null],[11,"toggle","","Toggles the specified flags in-place.",139,null],[11,"bitor","","Returns the union of the two sets of flags.",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",139,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"not","","Returns the complement of this set of flags.",139,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"from_iter","","",139,{"inputs":[{"name":"t"}],"output":{"name":"gtkstateflags"}}],[11,"hash","","",140,null],[11,"cmp","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"option"}}],[11,"lt","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"le","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"gt","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"ge","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"eq","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"gtktargetflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",140,{"inputs":[],"output":{"name":"gtktargetflags"}}],[11,"all","","Returns the set containing all flags.",140,{"inputs":[],"output":{"name":"gtktargetflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",140,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",140,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",140,{"inputs":[{"name":"u32"}],"output":{"name":"gtktargetflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",140,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",140,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",140,null],[11,"remove","","Removes the specified flags in-place.",140,null],[11,"toggle","","Toggles the specified flags in-place.",140,null],[11,"bitor","","Returns the union of the two sets of flags.",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",140,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"not","","Returns the complement of this set of flags.",140,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"from_iter","","",140,{"inputs":[{"name":"t"}],"output":{"name":"gtktargetflags"}}],[11,"hash","","",141,null],[11,"cmp","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"option"}}],[11,"lt","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"le","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"gt","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"ge","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"clone","","",141,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"eq","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"fmt","","",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",141,{"inputs":[],"output":{"name":"gtktextsearchflags"}}],[11,"all","","Returns the set containing all flags.",141,{"inputs":[],"output":{"name":"gtktextsearchflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",141,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",141,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",141,{"inputs":[{"name":"u32"}],"output":{"name":"gtktextsearchflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",141,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",141,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",141,null],[11,"remove","","Removes the specified flags in-place.",141,null],[11,"toggle","","Toggles the specified flags in-place.",141,null],[11,"bitor","","Returns the union of the two sets of flags.",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",141,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"not","","Returns the complement of this set of flags.",141,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"from_iter","","",141,{"inputs":[{"name":"t"}],"output":{"name":"gtktextsearchflags"}}],[11,"hash","","",142,null],[11,"cmp","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"option"}}],[11,"lt","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"le","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"gt","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"ge","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"clone","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"eq","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"fmt","","",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",142,{"inputs":[],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"all","","Returns the set containing all flags.",142,{"inputs":[],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"bits","","Returns the raw value of the flags currently stored.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",142,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",142,{"inputs":[{"name":"u32"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",142,null],[11,"remove","","Removes the specified flags in-place.",142,null],[11,"toggle","","Toggles the specified flags in-place.",142,null],[11,"bitor","","Returns the union of the two sets of flags.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"sub","","Returns the set difference of the two sets of flags.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"not","","Returns the complement of this set of flags.",142,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"from_iter","","",142,{"inputs":[{"name":"t"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"hash","","",143,null],[11,"cmp","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"option"}}],[11,"lt","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"le","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"gt","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"ge","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"clone","","",143,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"eq","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"fmt","","",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",143,{"inputs":[],"output":{"name":"gtktreemodelflags"}}],[11,"all","","Returns the set containing all flags.",143,{"inputs":[],"output":{"name":"gtktreemodelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",143,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",143,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",143,{"inputs":[{"name":"u32"}],"output":{"name":"gtktreemodelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",143,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",143,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",143,null],[11,"remove","","Removes the specified flags in-place.",143,null],[11,"toggle","","Toggles the specified flags in-place.",143,null],[11,"bitor","","Returns the union of the two sets of flags.",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",143,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"not","","Returns the complement of this set of flags.",143,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"from_iter","","",143,{"inputs":[{"name":"t"}],"output":{"name":"gtktreemodelflags"}}],[11,"hash","","",144,null],[11,"cmp","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"option"}}],[11,"lt","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"le","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"gt","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"ge","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"eq","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"fmt","","",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",144,{"inputs":[],"output":{"name":"gtkuimanageritemtype"}}],[11,"all","","Returns the set containing all flags.",144,{"inputs":[],"output":{"name":"gtkuimanageritemtype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",144,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",144,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",144,{"inputs":[{"name":"u32"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",144,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",144,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",144,null],[11,"remove","","Removes the specified flags in-place.",144,null],[11,"toggle","","Toggles the specified flags in-place.",144,null],[11,"bitor","","Returns the union of the two sets of flags.",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",144,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"not","","Returns the complement of this set of flags.",144,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"from_iter","","",144,{"inputs":[{"name":"t"}],"output":{"name":"gtkuimanageritemtype"}}],[3,"AccelFlags","gtk","Accelerator flags used with `AccelGroup::connect`.",null,null],[4,"Align","","Controls how a widget deals with extra space in a single (x or y)\ndimension.",null,null],[13,"Fill","","stretch to fill all space if possible, center if\nno meaningful way to stretch",31,null],[13,"Start","","snap to left or top side, leaving space on right\nor bottom",31,null],[13,"End","","snap to right or bottom side, leaving space on left\nor top",31,null],[13,"Center","","center natural width of widget inside the\nallocation",31,null],[13,"Baseline","","align the widget according to the baseline. Since 3.10.",31,null],[3,"ApplicationInhibitFlags","","Types of user actions that may be blocked by `Application::inhibit`.",null,null],[4,"ArrowPlacement","","Used to specify the placement of scroll arrows in scrolling menus.",null,null],[13,"Both","","Place one arrow on each end of the menu.",32,null],[13,"Start","","Place both arrows at the top of the menu.",32,null],[13,"End","","Place both arrows at the bottom of the menu.",32,null],[4,"ArrowType","","Used to indicate the direction in which an arrow should point.",null,null],[13,"Up","","Represents an upward pointing arrow.",33,null],[13,"Down","","Represents a downward pointing arrow.",33,null],[13,"Left","","Represents a left pointing arrow.",33,null],[13,"Right","","Represents a right pointing arrow.",33,null],[13,"None","","No arrow. Since 2.10.",33,null],[3,"AttachOptions","","Denotes the expansion properties that a widget will have when it (or its\nparent) is resized.",null,null],[4,"BaselinePosition","","Whenever a container has some form of natural row it may align\nchildren in that row along a common typographical baseline. If\nthe amount of verical space in the row is taller than the total\nrequested height of the baseline-aligned children then it can use a\n`BaselinePosition` to select where to put the baseline inside the\nextra availible space.",null,null],[13,"Top","","Align the baseline at the top",35,null],[13,"Center","","Center the baseline",35,null],[13,"Bottom","","Align the baseline at the bottom",35,null],[4,"BorderStyle","","Describes how the border of a UI element should be rendered.",null,null],[13,"None","","No visible border",36,null],[13,"Solid","","A single line segment",36,null],[13,"Inset","","Looks as if the content is sunken into the canvas",36,null],[13,"Outset","","Looks as if the content is coming out of the canvas",36,null],[13,"Hidden","","Same as `BorderStyle::None`",36,null],[13,"Dotted","","A series of round dots",36,null],[13,"Dashed","","A series of square-ended dashes",36,null],[13,"Double","","Two parallel lines with some space between them",36,null],[13,"Groove","","Looks as if it were carved in the canvas",36,null],[13,"Ridge","","Looks as if it were coming out of the canvas",36,null],[4,"BuilderError","","Error codes that identify various errors that can occur while using\n`Builder`.",null,null],[13,"InvalidTypeFunction","","A type-func attribute didn’t name\na function that returns a `glib::Type`.",37,null],[13,"UnhandledTag","","The input contained a tag that `Builder`\ncan’t handle.",37,null],[13,"MissingAttribute","","An attribute that is required by\n`Builder` was missing.",37,null],[13,"InvalidAttribute","","`Builder` found an attribute that\nit doesn’t understand.",37,null],[13,"InvalidTag","","`Builder` found a tag that\nit doesn’t understand.",37,null],[13,"MissingPropertyValue","","A required property value was\nmissing.",37,null],[13,"InvalidValue","","`Builder` couldn’t parse\nsome attribute value.",37,null],[13,"VersionMismatch","","The input file requires a newer version\nof GTK+.",37,null],[13,"DuplicateId","","An object id occurred twice.",37,null],[13,"ObjectTypeRefused","","A specified object type is of the same type or\nderived from the type of the composite class being extended with builder XML.",37,null],[13,"TemplateMismatch","","The wrong type was specified in a composite class’s template XML",37,null],[13,"InvalidProperty","","The specified property is unknown for the object class.",37,null],[13,"InvalidSignal","","The specified signal is unknown for the object class.",37,null],[4,"ButtonBoxStyle","","Used to dictate the style that a `ButtonBox` uses to layout the buttons it\ncontains.",null,null],[13,"Spread","","Buttons are evenly spread across the box.",38,null],[13,"Edge","","Buttons are placed at the edges of the box.",38,null],[13,"Start","","Buttons are grouped towards the start of the box,\n(on the left for a HBox, or the top for a VBox).",38,null],[13,"End","","Buttons are grouped towards the end of the box,\n(on the right for a HBox, or the bottom for a VBox).",38,null],[13,"Center","","Buttons are centered in the box. Since 2.12.",38,null],[13,"Expand","","Buttons expand to fill the box. Since 3.12.",38,null],[4,"ButtonsType","","Prebuilt sets of buttons for the dialog. If\nnone of these choices are appropriate, simply use `ButtonsType::None`\nthen call `Dialog::add_buttons`.",null,null],[13,"None","","no buttons at all",40,null],[13,"Ok","","an OK button",40,null],[13,"Close","","a Close button",40,null],[13,"Cancel","","a Cancel button",40,null],[13,"YesNo","","Yes and No buttons",40,null],[13,"OkCancel","","OK and Cancel buttons",40,null],[3,"CalendarDisplayOptions","","These options can be used to influence the display and behaviour of a `Calendar`.",null,null],[3,"CellRendererState","","Tells how a cell is to be rendered.",null,null],[4,"CornerType","","Specifies which corner a child widget should be placed in when packed into\na `ScrolledWindow`. This is effectively the opposite of where the scroll\nbars are placed.",null,null],[13,"TopLeft","","Place the scrollbars on the right and bottom of the\nwidget (default behaviour).",43,null],[13,"BottomLeft","","Place the scrollbars on the top and right of the\nwidget.",43,null],[13,"TopRight","","Place the scrollbars on the left and bottom of the\nwidget.",43,null],[13,"BottomRight","","Place the scrollbars on the top and left of the\nwidget.",43,null],[4,"DeleteType","","See also: `Entry::delete-from-cursor`.",null,null],[13,"Chars","","Delete characters.",46,null],[13,"WordEnds","","Delete only the portion of the word to the\nleft/right of cursor if we’re in the middle of a word.",46,null],[13,"Words","","Delete words.",46,null],[13,"DisplayLines","","Delete display-lines. Display-lines\nrefers to the visible lines, with respect to to the current line\nbreaks. As opposed to paragraphs, which are defined by line\nbreaks in the input.",46,null],[13,"DisplayLineEnds","","Delete only the portion of the\ndisplay-line to the left/right of cursor.",46,null],[13,"ParagraphEnds","","Delete to the end of the\nparagraph. Like C-k in Emacs (or its reverse).",46,null],[13,"Paragraphs","","Delete entire line. Like C-k in pico.",46,null],[13,"Whitespace","","Delete only whitespace. Like M-\\ in Emacs.",46,null],[3,"DestDefaults","","The `DestDefaults` enumeration specifies the various\ntypes of action that will be taken on behalf\nof the user for a drag destination site.",null,null],[3,"DialogFlags","","Flags used to influence dialog construction.",null,null],[4,"DirectionType","","Focus movement types.",null,null],[13,"TabForward","","Move forward.",47,null],[13,"TabBackward","","Move backward.",47,null],[13,"Up","","Move up.",47,null],[13,"Down","","Move down.",47,null],[13,"Left","","Move left.",47,null],[13,"Right","","Move right.",47,null],[4,"DragResult","","Gives an indication why a drag operation failed.\nThe value can by obtained by connecting to the\n`Widget::drag-failed` signal.",null,null],[13,"Success","","The drag operation was successful.",48,null],[13,"NoTarget","","No suitable drag target.",48,null],[13,"UserCancelled","","The user cancelled the drag operation.",48,null],[13,"TimeoutExpired","","The drag operation timed out.",48,null],[13,"GrabBroken","","The pointer or keyboard grab used\nfor the drag operation was broken.",48,null],[13,"Error","","The drag operation failed due to some\nunspecified error.",48,null],[4,"EntryIconPosition","","Specifies the side of the entry at which an icon is placed.",null,null],[13,"Primary","","At the beginning of the entry (depending on the text direction).",49,null],[13,"Secondary","","At the end of the entry (depending on the text direction).",49,null],[4,"EventSequenceState","","Describes the state of a `gdk::EventSequence` in a `Gesture`.",null,null],[13,"None","","The sequence is handled, but not grabbed.",50,null],[13,"Claimed","","The sequence is handled and grabbed.",50,null],[13,"Denied","","The sequence is denied.",50,null],[4,"ExpanderStyle","","Used to specify the style of the expanders drawn by a `TreeView`.",null,null],[13,"Collapsed","","The style used for a collapsed subtree.",51,null],[13,"SemiCollapsed","","Intermediate style used during animation.",51,null],[13,"SemiExpanded","","Intermediate style used during animation.",51,null],[13,"Expanded","","The style used for an expanded subtree.",51,null],[4,"FileChooserAction","","Describes whether a `FileChooser` is being used to open existing files\nor to save to a possibly new file.",null,null],[13,"Open","","Indicates open mode. The file chooser\nwill only let the user pick an existing file.",52,null],[13,"Save","","Indicates save mode. The file chooser\nwill let the user pick an existing file, or type in a new\nfilename.",52,null],[13,"SelectFolder","","Indicates an Open mode for\nselecting folders. The file chooser will let the user pick an\nexisting folder.",52,null],[13,"CreateFolder","","Indicates a mode for creating a\nnew folder. The file chooser will let the user name an existing or\nnew folder.",52,null],[3,"FileFilterFlags","","These flags indicate what parts of a `FileFilterInfo` struct\nare filled or need to be filled.",null,null],[4,"IMPreeditStyle","","Style for input method preedit. See also\n`Settings:gtk-im-preedit-style`",null,null],[13,"Nothing","","Deprecated",55,null],[13,"Callback","","Deprecated",55,null],[13,"None","","Deprecated",55,null],[4,"IMStatusStyle","","Style for input method status. See also\n`Settings:gtk-im-status-style`",null,null],[13,"Nothing","","Deprecated",56,null],[13,"Callback","","Deprecated",56,null],[13,"None","","Deprecated",56,null],[4,"IconSize","","Built-in stock icon sizes.",null,null],[13,"Invalid","","Invalid size.",57,null],[13,"Menu","","Size appropriate for menus (16px).",57,null],[13,"SmallToolbar","","Size appropriate for small toolbars (16px).",57,null],[13,"LargeToolbar","","Size appropriate for large toolbars (24px)",57,null],[13,"Button","","Size appropriate for buttons (16px)",57,null],[13,"Dnd","","Size appropriate for drag and drop (32px)",57,null],[13,"Dialog","","Size appropriate for dialogs (48px)",57,null],[4,"IconViewDropPosition","","An enum for determining where a dropped item goes.",null,null],[13,"NoDrop","","no drop possible",59,null],[13,"DropInto","","dropped item replaces the item",59,null],[13,"DropLeft","","droppped item is inserted to the left",59,null],[13,"DropRight","","dropped item is inserted to the right",59,null],[13,"DropAbove","","dropped item is inserted above",59,null],[13,"DropBelow","","dropped item is inserted below",59,null],[4,"ImageType","","Describes the image data representation used by a `Image`. If you\nwant to get the image from the widget, you can only get the\ncurrently-stored representation. e.g. if the\n`Image::get_storage_type` returns `ImageType::Pixbuf`, then you can\ncall `Image::get_pixbuf` but not `Image::get_stock`. For empty\nimages, you can request any storage type (call any of the &quot;get&quot;\nfunctions), but they will all return `None` values.",null,null],[13,"Empty","","there is no image displayed by the widget",60,null],[13,"Pixbuf","","the widget contains a `gdk_pixbuf::Pixbuf`",60,null],[13,"Stock","","the widget contains a [stock item name][gtkstock]",60,null],[13,"IconSet","","the widget contains a `IconSet`",60,null],[13,"Animation","","the widget contains a `gdk_pixbuf::PixbufAnimation`",60,null],[13,"IconName","","the widget contains a named icon.\nThis image type was added in GTK+ 2.6",60,null],[13,"Gicon","","the widget contains a `gio::Icon`.\nThis image type was added in GTK+ 2.14",60,null],[13,"Surface","","the widget contains a `cairo::Surface`.\nThis image type was added in GTK+ 3.10",60,null],[3,"InputHints","","Describes hints that might be taken into account by input methods\nor applications. Note that input methods may already tailor their\nbehaviour according to the `InputPurpose` of the entry.",null,null],[4,"InputPurpose","","Describes primary purpose of the input widget. This information is\nuseful for on-screen keyboards and similar input methods to decide\nwhich keys should be presented to the user.",null,null],[13,"FreeForm","","Allow any character",61,null],[13,"Alpha","","Allow only alphabetic characters",61,null],[13,"Digits","","Allow only digits",61,null],[13,"Number","","Edited field expects numbers",61,null],[13,"Phone","","Edited field expects phone number",61,null],[13,"Url","","Edited field expects URL",61,null],[13,"Email","","Edited field expects email address",61,null],[13,"Name","","Edited field expects the name of a person",61,null],[13,"Password","","Like `InputPurpose::FreeForm`, but characters are hidden",61,null],[13,"Pin","","Like `InputPurpose::Digits`, but characters are hidden",61,null],[3,"JunctionSides","","Describes how a rendered element connects to adjacent elements.",null,null],[4,"Justification","","Used for justifying the text inside a `Label` widget. (See also\n`Alignment`).",null,null],[13,"Left","","The text is placed at the left edge of the label.",62,null],[13,"Right","","The text is placed at the right edge of the label.",62,null],[13,"Center","","The text is placed in the center of the label.",62,null],[13,"Fill","","The text is placed is distributed across the label.",62,null],[4,"LevelBarMode","","Describes how `LevelBar` contents should be rendered.\nNote that this enumeration could be extended with additional modes\nin the future.",null,null],[13,"Continuous","","the bar has a continuous mode",63,null],[13,"Discrete","","the bar has a discrete mode",63,null],[4,"License","","The type of license for an application.",null,null],[13,"Unknown","","No license specified",64,null],[13,"Custom","","A license text is going to be specified by the\ndeveloper",64,null],[13,"Gpl20","","The GNU General Public License, version 2.0 or later",64,null],[13,"Gpl30","","The GNU General Public License, version 3.0 or later",64,null],[13,"Lgpl21","","The GNU Lesser General Public License, version 2.1 or later",64,null],[13,"Lgpl30","","The GNU Lesser General Public License, version 3.0 or later",64,null],[13,"Bsd","","The BSD standard license",64,null],[13,"MitX11","","The MIT/X11 standard license",64,null],[13,"Artistic","","The Artistic License, version 2.0",64,null],[13,"Gpl20Only","","The GNU General Public License, version 2.0 only. Since 3.12.",64,null],[13,"Gpl30Only","","The GNU General Public License, version 3.0 only. Since 3.12.",64,null],[13,"Lgpl21Only","","The GNU Lesser General Public License, version 2.1 only. Since 3.12.",64,null],[13,"Lgpl30Only","","The GNU Lesser General Public License, version 3.0 only. Since 3.12.",64,null],[4,"MessageType","","The type of message being displayed in the dialog.",null,null],[13,"Info","","Informational message",66,null],[13,"Warning","","Non-fatal warning message",66,null],[13,"Question","","Question requiring a choice",66,null],[13,"Error","","Fatal error message",66,null],[13,"Other","","None of the above",66,null],[4,"MovementStep","","",null,null],[13,"LogicalPositions","","Move forward or back by graphemes",67,null],[13,"VisualPositions","","Move left or right by graphemes",67,null],[13,"Words","","Move forward or back by words",67,null],[13,"DisplayLines","","Move up or down lines (wrapped lines)",67,null],[13,"DisplayLineEnds","","Move to either end of a line",67,null],[13,"Paragraphs","","Move up or down paragraphs (newline-ended lines)",67,null],[13,"ParagraphEnds","","Move to either end of a paragraph",67,null],[13,"Pages","","Move by pages",67,null],[13,"BufferEnds","","Move to ends of the buffer",67,null],[13,"HorizontalPages","","Move horizontally by pages",67,null],[4,"NumberUpLayout","","Used to determine the layout of pages on a sheet when printing\nmultiple pages per sheet.",null,null],[13,"Lrtb","","![](layout-lrtb.png)",69,null],[13,"Lrbt","","![](layout-lrbt.png)",69,null],[13,"Rltb","","![](layout-rltb.png)",69,null],[13,"Rlbt","","![](layout-rlbt.png)",69,null],[13,"Tblr","","![](layout-tblr.png)",69,null],[13,"Tbrl","","![](layout-tbrl.png)",69,null],[13,"Btlr","","![](layout-btlr.png)",69,null],[13,"Btrl","","![](layout-btrl.png)",69,null],[4,"Orientation","","Represents the orientation of widgets and other objects which can be switched\nbetween horizontal and vertical orientation on the fly, like `Toolbar` or\n`GesturePan`.",null,null],[13,"Horizontal","","The element is in horizontal orientation.",70,null],[13,"Vertical","","The element is in vertical orientation.",70,null],[4,"PackType","","Represents the packing location `Box` children. (See: `VBox`,\n`HBox`, and `ButtonBox`).",null,null],[13,"Start","","The child is packed into the start of the box",72,null],[13,"End","","The child is packed into the end of the box",72,null],[4,"PageOrientation","","See also `PrintSettings::set_orientation`.",null,null],[13,"Portrait","","Portrait mode.",73,null],[13,"Landscape","","Landscape mode.",73,null],[13,"ReversePortrait","","Reverse portrait mode.",73,null],[13,"ReverseLandscape","","Reverse landscape mode.",73,null],[4,"PageSet","","See also `gtk_print_job_set_page_set`.",null,null],[13,"All","","All pages.",74,null],[13,"Even","","Even pages.",74,null],[13,"Odd","","Odd pages.",74,null],[4,"PathPriorityType","","Priorities for path lookups.\nSee also `BindingSet::add_path`.",null,null],[13,"Lowest","","Deprecated",76,null],[13,"Gtk","","Deprecated",76,null],[13,"Application","","Deprecated",76,null],[13,"Theme","","Deprecated",76,null],[13,"Rc","","Deprecated",76,null],[13,"Highest","","Deprecated",76,null],[4,"PathType","","Widget path types.\nSee also `BindingSet::add_path`.",null,null],[13,"Widget","","Deprecated",77,null],[13,"WidgetClass","","Deprecated",77,null],[13,"Class","","Deprecated",77,null],[3,"PlacesOpenFlags","","These flags serve two purposes. First, the application can call `PlacesSidebar::set_open_flags`\nusing these flags as a bitmask. This tells the sidebar that the application is able to open\nfolders selected from the sidebar in various ways, for example, in new tabs or in new windows in\naddition to the normal mode.",null,null],[4,"PolicyType","","Determines how the size should be computed to achieve the one of the\nvisibility mode for the scrollbars.",null,null],[13,"Always","","The scrollbar is always visible. The view size is\nindependent of the content.",78,null],[13,"Automatic","","The scrollbar will appear and disappear as necessary.\nFor example, when all of a `TreeView` can not be seen.",78,null],[13,"Never","","The scrollbar should never appear. In this mode the\ncontent determines the size.",78,null],[13,"External","","Don&#39;t show a scrollbar, but don&#39;t force the\nsize to follow the content. This can be used e.g. to make multiple\nscrolled windows share a scrollbar. Since: 3.16",78,null],[4,"PositionType","","Describes which edge of a widget a certain feature is positioned at, e.g. the\ntabs of a `Notebook`, the handle of a `HandleBox` or the label of a\n`Scale`.",null,null],[13,"Left","","The feature is at the left edge.",79,null],[13,"Right","","The feature is at the right edge.",79,null],[13,"Top","","The feature is at the top edge.",79,null],[13,"Bottom","","The feature is at the bottom edge.",79,null],[4,"PrintDuplex","","See also `PrintSettings::set_duplex`.",null,null],[13,"Simplex","","No duplex.",80,null],[13,"Horizontal","","Horizontal duplex.",80,null],[13,"Vertical","","Vertical duplex.",80,null],[4,"PrintPages","","See also `gtk_print_job_set_pages`",null,null],[13,"All","","All pages.",84,null],[13,"Current","","Current page.",84,null],[13,"Ranges","","Range of pages.",84,null],[13,"Selection","","Selected pages.",84,null],[4,"PrintQuality","","See also `PrintSettings::set_quality`.",null,null],[13,"Low","","Low quality.",85,null],[13,"Normal","","Normal quality.",85,null],[13,"High","","High quality.",85,null],[13,"Draft","","Draft quality.",85,null],[4,"PropagationPhase","","Describes the stage at which events are fed into a `EventController`.",null,null],[13,"None","","Events are not delivered automatically. Those can be\nmanually fed through `EventControllerExt::handle_event`. This should\nonly be used when full control about when, or whether the controller\nhandles the event is needed.",87,null],[13,"Capture","","Events are delivered in the capture phase. The\ncapture phase happens before the bubble phase, runs from the toplevel down\nto the event widget. This option should only be used on containers that\nmight possibly handle events before their children do.",87,null],[13,"Bubble","","Events are delivered in the bubble phase. The bubble\nphase happens after the capture phase, and before the default handlers\nare run. This phase runs from the event widget, up to the toplevel.",87,null],[13,"Target","","Events are delivered in the default widget event handlers,\n note that widget implementations must chain up on button, motion, touch and\n grab broken handlers for controllers in this phase to be run.",87,null],[3,"RecentFilterFlags","","These flags indicate what parts of a `RecentFilterInfo` struct\nare filled or need to be filled.",null,null],[4,"RecentSortType","","Used to specify the sorting method to be applyed to the recently\nused resource list.",null,null],[13,"None","","Do not sort the returned list of recently used\nresources.",91,null],[13,"Mru","","Sort the returned list with the most recently used\nitems first.",91,null],[13,"Lru","","Sort the returned list with the least recently used\nitems first.",91,null],[13,"Custom","","Sort the returned list using a custom sorting\nfunction passed using `RecentChooser::set_sort_func`.",91,null],[3,"RegionFlags","","Describes a region within a widget.",null,null],[4,"ReliefStyle","","Indicated the relief to be drawn around a `Button`.",null,null],[13,"Normal","","Draw a normal relief.",92,null],[13,"Half","","A half relief. Deprecated in 3.14, does the same as `ReliefStyle::Normal`",92,null],[13,"None","","No relief.",92,null],[4,"ResizeMode","","",null,null],[13,"Parent","","Pass resize request to the parent",93,null],[13,"Queue","","Queue resizes on this widget",93,null],[13,"Immediate","","Resize immediately. Deprecated.",93,null],[4,"ResponseType","","Predefined values for use as response ids in `DialogExt::add_button`.\nAll predefined values are negative, GTK+ leaves positive values for\napplication-defined response ids.",null,null],[13,"None","","Returned if an action widget has no response id,\nor if the dialog gets programmatically hidden or destroyed",94,null],[13,"Reject","","Generic response id, not used by GTK+ dialogs",94,null],[13,"Accept","","Generic response id, not used by GTK+ dialogs",94,null],[13,"DeleteEvent","","Returned if the dialog is deleted",94,null],[13,"Ok","","Returned by OK buttons in GTK+ dialogs",94,null],[13,"Cancel","","Returned by Cancel buttons in GTK+ dialogs",94,null],[13,"Close","","Returned by Close buttons in GTK+ dialogs",94,null],[13,"Yes","","Returned by Yes buttons in GTK+ dialogs",94,null],[13,"No","","Returned by No buttons in GTK+ dialogs",94,null],[13,"Apply","","Returned by Apply buttons in GTK+ dialogs",94,null],[13,"Help","","Returned by Help buttons in GTK+ dialogs",94,null],[4,"RevealerTransitionType","","These enumeration values describe the possible transitions\nwhen the child of a `Revealer` widget is shown or hidden.",null,null],[13,"None","","No transition",95,null],[13,"Crossfade","","Fade in",95,null],[13,"SlideRight","","Slide in from the left",95,null],[13,"SlideLeft","","Slide in from the right",95,null],[13,"SlideUp","","Slide in from the bottom",95,null],[13,"SlideDown","","Slide in from the top",95,null],[4,"ScrollStep","","",null,null],[13,"Steps","","Scroll in steps.",96,null],[13,"Pages","","Scroll by pages.",96,null],[13,"Ends","","Scroll to ends.",96,null],[13,"HorizontalSteps","","Scroll in horizontal steps.",96,null],[13,"HorizontalPages","","Scroll by horizontal pages.",96,null],[13,"HorizontalEnds","","Scroll to the horizontal ends.",96,null],[4,"ScrollType","","Scrolling types.",null,null],[13,"None","","No scrolling.",97,null],[13,"Jump","","Jump to new location.",97,null],[13,"StepBackward","","Step backward.",97,null],[13,"StepForward","","Step forward.",97,null],[13,"PageBackward","","Page backward.",97,null],[13,"PageForward","","Page forward.",97,null],[13,"StepUp","","Step up.",97,null],[13,"StepDown","","Step down.",97,null],[13,"PageUp","","Page up.",97,null],[13,"PageDown","","Page down.",97,null],[13,"StepLeft","","Step to the left.",97,null],[13,"StepRight","","Step to the right.",97,null],[13,"PageLeft","","Page to the left.",97,null],[13,"PageRight","","Page to the right.",97,null],[13,"Start","","Scroll to start.",97,null],[13,"End","","Scroll to end.",97,null],[4,"ScrollablePolicy","","Defines the policy to be used in a scrollable widget when updating\nthe scrolled window adjustments in a given orientation.",null,null],[13,"Minimum","","Scrollable adjustments are based on the minimum size",98,null],[13,"Natural","","Scrollable adjustments are based on the natural size",98,null],[4,"SelectionMode","","Used to control what selections users are allowed to make.",null,null],[13,"None","","No selection is possible.",99,null],[13,"Single","","Zero or one element may be selected.",99,null],[13,"Browse","","Exactly one element is selected.\nIn some circumstances, such as initially or during a search\noperation, it’s possible for no element to be selected with\n`SelectionMode::Browse`. What is really enforced is that the user\ncan’t deselect a currently selected element except by selecting\nanother element.",99,null],[13,"Multiple","","Any number of elements may be selected.\nThe Ctrl key may be used to enlarge the selection, and Shift\nkey to select between the focus and the child pointed to.\nSome widgets may also allow Click-drag to select a range of elements.",99,null],[4,"SensitivityType","","Determines how GTK+ handles the sensitivity of stepper arrows\nat the end of range widgets.",null,null],[13,"Auto","","The arrow is made insensitive if the\nthumb is at the end",100,null],[13,"On","","The arrow is always sensitive",100,null],[13,"Off","","The arrow is always insensitive",100,null],[4,"ShadowType","","Used to change the appearance of an outline typically provided by a `Frame`.",null,null],[13,"None","","No outline.",101,null],[13,"In","","The outline is bevelled inwards.",101,null],[13,"Out","","The outline is bevelled outwards like a button.",101,null],[13,"EtchedIn","","The outline has a sunken 3d appearance.",101,null],[13,"EtchedOut","","The outline has a raised 3d appearance.",101,null],[4,"SizeGroupMode","","The mode of the size group determines the directions in which the size\ngroup affects the requested sizes of its component widgets.",null,null],[13,"None","","group has no effect",102,null],[13,"Horizontal","","group affects horizontal requisition",102,null],[13,"Vertical","","group affects vertical requisition",102,null],[13,"Both","","group affects both horizontal and vertical requisition",102,null],[4,"SizeRequestMode","","Specifies a preference for height-for-width or\nwidth-for-height geometry management.",null,null],[13,"HeightForWidth","","Prefer height-for-width geometry management",103,null],[13,"WidthForHeight","","Prefer width-for-height geometry management",103,null],[13,"ConstantSize","","Don’t trade height-for-width or width-for-height",103,null],[4,"SortType","","Determines the direction of a sort.",null,null],[13,"Ascending","","Sorting is in ascending order.",104,null],[13,"Descending","","Sorting is in descending order.",104,null],[4,"SpinButtonUpdatePolicy","","The spin button update policy determines whether the spin button displays\nvalues even if they are outside the bounds of its adjustment.\nSee `SpinButton::set_update_policy`.",null,null],[13,"Always","","When refreshing your `SpinButton`, the value is\nalways displayed",105,null],[13,"IfValid","","When refreshing your `SpinButton`, the value is\nonly displayed if it is valid within the bounds of the spin button&#39;s\nadjustment",105,null],[4,"SpinType","","The values of the `SpinType` enumeration are used to specify the\nchange to make in `SpinButton::spin`.",null,null],[13,"StepForward","","Increment by the adjustments step increment.",106,null],[13,"StepBackward","","Decrement by the adjustments step increment.",106,null],[13,"PageForward","","Increment by the adjustments page increment.",106,null],[13,"PageBackward","","Decrement by the adjustments page increment.",106,null],[13,"Home","","Go to the adjustments lower bound.",106,null],[13,"End","","Go to the adjustments upper bound.",106,null],[13,"UserDefined","","Change by a specified amount.",106,null],[4,"StackTransitionType","","These enumeration values describe the possible transitions\nbetween pages in a `Stack` widget.",null,null],[13,"None","","No transition",107,null],[13,"Crossfade","","A cross-fade",107,null],[13,"SlideRight","","Slide from left to right",107,null],[13,"SlideLeft","","Slide from right to left",107,null],[13,"SlideUp","","Slide from bottom up",107,null],[13,"SlideDown","","Slide from top down",107,null],[13,"SlideLeftRight","","Slide from left or right according to the children order",107,null],[13,"SlideUpDown","","Slide from top down or bottom up according to the order",107,null],[13,"OverUp","","Cover the old page by sliding up. Since 3.12",107,null],[13,"OverDown","","Cover the old page by sliding down. Since: 3.12",107,null],[13,"OverLeft","","Cover the old page by sliding to the left. Since: 3.12",107,null],[13,"OverRight","","Cover the old page by sliding to the right. Since: 3.12",107,null],[13,"UnderUp","","Uncover the new page by sliding up. Since 3.12",107,null],[13,"UnderDown","","Uncover the new page by sliding down. Since: 3.12",107,null],[13,"UnderLeft","","Uncover the new page by sliding to the left. Since: 3.12",107,null],[13,"UnderRight","","Uncover the new page by sliding to the right. Since: 3.12",107,null],[13,"OverUpDown","","Cover the old page sliding up or uncover the new page sliding down, according to order. Since: 3.12",107,null],[13,"OverDownUp","","Cover the old page sliding down or uncover the new page sliding up, according to order. Since: 3.14",107,null],[13,"OverLeftRight","","Cover the old page sliding left or uncover the new page sliding right, according to order. Since: 3.14",107,null],[13,"OverRightLeft","","Cover the old page sliding right or uncover the new page sliding left, according to order. Since: 3.14",107,null],[3,"StateFlags","","Describes a widget state. Widget states are used to match the widget\nagainst CSS pseudo-classes. Note that GTK extends the regular CSS\nclasses and sometimes uses different names.",null,null],[4,"StateType","","This type indicates the current state of a widget; the state determines how\nthe widget is drawn. The `StateType` enumeration is also used to\nidentify different colors in a `Style` for drawing, so states can be\nused for subparts of a widget as well as entire widgets.",null,null],[13,"Normal","","State during normal operation.",108,null],[13,"Active","","State of a currently active widget, such as a depressed button.",108,null],[13,"Prelight","","State indicating that the mouse pointer is over\nthe widget and the widget will respond to mouse clicks.",108,null],[13,"Selected","","State of a selected item, such the selected row in a list.",108,null],[13,"Insensitive","","State indicating that the widget is\nunresponsive to user actions.",108,null],[13,"Inconsistent","","The widget is inconsistent, such as checkbuttons\nor radiobuttons that aren’t either set to `true` nor `false`,\nor buttons requiring the user attention.",108,null],[13,"Focused","","The widget has the keyboard focus.",108,null],[4,"TextDirection","","Reading directions for text.",null,null],[13,"None","","No direction.",110,null],[13,"Ltr","","Left to right text direction.",110,null],[13,"Rtl","","Right to left text direction.",110,null],[3,"TextSearchFlags","","Flags affecting how a search is done.",null,null],[4,"TextWindowType","","Used to reference the parts of `TextView`.",null,null],[13,"Private","","",113,null],[13,"Widget","","Window that floats over scrolling areas.",113,null],[13,"Text","","Scrollable text window.",113,null],[13,"Left","","Left side border window.",113,null],[13,"Right","","Right side border window.",113,null],[13,"Top","","Top border window.",113,null],[13,"Bottom","","Bottom border window.",113,null],[3,"ToolPaletteDragTargets","","Flags used to specify the supported drag targets.",null,null],[4,"ToolbarStyle","","Used to customize the appearance of a `Toolbar`. Note that\nsetting the toolbar style overrides the user’s preferences\nfor the default toolbar style. Note that if the button has only\na label set and GTK_TOOLBAR_ICONS is used, the label will be\nvisible, and vice versa.",null,null],[13,"Icons","","Buttons display only icons in the toolbar.",115,null],[13,"Text","","Buttons display only text labels in the toolbar.",115,null],[13,"Both","","Buttons display text and icons in the toolbar.",115,null],[13,"BothHoriz","","Buttons display icons and text alongside each\nother, rather than vertically stacked",115,null],[3,"TreeModelFlags","","These flags indicate various properties of a `TreeModel`.",null,null],[4,"TreeViewColumnSizing","","The sizing method the column uses to determine its width. Please note\nthat `TreeViewColumnSizing::Autosize` are inefficient for large views, and\ncan make columns appear choppy.",null,null],[13,"GrowOnly","","Columns only get bigger in reaction to changes in the model",116,null],[13,"Autosize","","Columns resize to be the optimal size everytime the model changes.",116,null],[13,"Fixed","","Columns are a fixed numbers of pixels wide.",116,null],[4,"TreeViewDropPosition","","An enum for determining where a dropped row goes.",null,null],[13,"Before","","dropped row is inserted before",117,null],[13,"After","","dropped row is inserted after",117,null],[13,"IntoOrBefore","","dropped row becomes a child or is inserted before",117,null],[13,"IntoOrAfter","","dropped row becomes a child or is inserted after",117,null],[4,"TreeViewGridLines","","Used to indicate which grid lines to draw in a tree view.",null,null],[13,"None","","No grid lines.",118,null],[13,"Horizontal","","Horizontal grid lines.",118,null],[13,"Vertical","","Vertical grid lines.",118,null],[13,"Both","","Horizontal and vertical grid lines.",118,null],[4,"Unit","","See also `PrintSettings::set_paper_width`.",null,null],[13,"None","","No units.",119,null],[13,"Points","","Dimensions in points.",119,null],[13,"Inch","","Dimensions in inches.",119,null],[13,"Mm","","Dimensions in millimeters",119,null],[4,"WidgetHelpType","","Kinds of widget-specific help. Used by the ::show-help signal.",null,null],[13,"Tooltip","","Tooltip.",120,null],[13,"WhatsThis","","What’s this.",120,null],[4,"WindowPosition","","Window placement can be influenced using this enumeration. Note that\nusing `WindowPosition::CenterAlways` is almost always a bad idea.\nIt won’t necessarily work well with all window managers or on all windowing systems.",null,null],[13,"None","","No influence is made on placement.",121,null],[13,"Center","","Windows should be placed in the center of the screen.",121,null],[13,"Mouse","","Windows should be placed at the current mouse position.",121,null],[13,"CenterAlways","","Keep window centered as it changes size, etc.",121,null],[13,"CenterOnParent","","Center the window on its transient\nparent (see `WindowExt::set_transient_for`).",121,null],[4,"WindowType","","A `Window` can be one of these types. Most things you’d consider a\n“window” should have type `WindowType::Toplevel`; windows with this type\nare managed by the window manager and have a frame by default (call\n`WindowExt::set_decorated` to toggle the frame). Windows with type\n`WindowType::Popup` are ignored by the window manager; window manager\nkeybindings won’t work on them, the window manager won’t decorate the\nwindow with a frame, many GTK+ features that rely on the window\nmanager will not work (e.g. resize grips and\nmaximization/minimization). `WindowType::Popup` is used to implement\nwidgets such as `Menu` or tooltips that you normally don’t think of\nas windows per se. Nearly all windows should be `WindowType::Toplevel`.\nIn particular, do not use `WindowType::Popup` just to turn off\nthe window borders; use `WindowExt::set_decorated` for that.",null,null],[13,"Toplevel","","A regular window, such as a dialog.",122,null],[13,"Popup","","A special window such as a tooltip.",122,null],[4,"WrapMode","","Describes a type of line wrapping.",null,null],[13,"None","","do not wrap lines; just make the text area wider",123,null],[13,"Char","","wrap text, breaking lines anywhere the cursor can\nappear (between characters, usually - if you want to be technical,\nbetween graphemes, see `pango_get_log_attrs`)",123,null],[13,"Word","","wrap text, breaking lines in between words",123,null],[13,"WordChar","","wrap text, breaking lines in between words, or if\nthat is not enough, also between graphemes",123,null],[3,"AboutDialog","","The `AboutDialog` offers a simple way to display information about\na program like its logo, name, copyright, website and license. It is\nalso possible to give credits to the authors, documenters, translators\nand artists who have worked on the program. An about dialog is typically\nopened when the user selects the `About` option from the `Help` menu.\nAll parts of the dialog are optional.",null,null],[3,"AccelGroup","","A `AccelGroup` represents a group of keyboard accelerators,\ntypically attached to a toplevel `Window` (with\n`Window::add_accel_group`). Usually you won’t need to create a\n`AccelGroup` directly; instead, when using `UIManager`, GTK+\nautomatically sets up the accelerators for your menus in the ui\nmanager’s `AccelGroup`.",null,null],[3,"ActionBar","","`ActionBar` is designed to present contextual actions. It is\nexpected to be displayed below the content and expand horizontally\nto fill the area.",null,null],[3,"Actionable","","This interface provides a convenient way of associating widgets with\nactions on a `ApplicationWindow` or `Application`.",null,null],[3,"Adjustment","","The `Adjustment` object represents a value which has an associated lower\nand upper bound, together with step and page increments, and a page size.\nIt is used within several GTK+ widgets, including\n`SpinButton`, `Viewport`, and `Range` (which is a base class for\n`HScrollbar`, `VScrollbar`, `HScale`, and `VScale`).",null,null],[3,"Alignment","","`[Deprecated since 3.14]` The `Alignment` widget controls the alignment and size of its child widget.\nIt has four settings: xscale, yscale, xalign, and yalign.",null,null],[3,"AppChooserDialog","","`AppChooserDialog` shows a `AppChooserWidget` inside a `Dialog`.",null,null],[3,"AppChooserWidget","","`AppChooserWidget` is a widget for selecting applications.\nIt is the main building block for `AppChooserDialog`. Most\napplications only need to use the latter; but you can use\nthis widget as part of a larger widget if you have special needs.",null,null],[3,"Application","","`Application` is a class that handles many important aspects\nof a GTK+ application in a convenient fashion, without enforcing\na one-size-fits-all application model.",null,null],[3,"ApplicationWindow","","`ApplicationWindow` is a `Window` subclass that offers some\nextra functionality for better integration with `Application`\nfeatures. Notably, it can handle both the application menu as well\nas the menubar. See `Application::set_app_menu` and\n`Application::set_menubar`.",null,null],[3,"Arrow","","`[Deprecated since 3.14]` `Arrow` should be used to draw simple arrows that need to point in\none of the four cardinal directions (up, down, left, or right). The\nstyle of the arrow can be one of shadow in, shadow out, etched in, or\netched out. Note that these directions and style types may be\namended in versions of GTK+ to come.",null,null],[3,"AspectFrame","","The `AspectFrame` is useful when you want\npack a widget so that it can resize but always retains\nthe same aspect ratio. For instance, one might be\ndrawing a small preview of a larger image. `AspectFrame`\nderives from `Frame`, so it can draw a label and\na frame around the child. The frame will be\n“shrink-wrapped” to the size of the child.",null,null],[3,"Bin","","The `Bin` widget is a container with just one child.\nIt is not very useful itself, but it is useful for deriving subclasses,\nsince it provides common code needed for handling a single child widget.",null,null],[3,"Box","","The `Box` widget organizes child widgets into a rectangular area.",null,null],[3,"Button","","The `Button` widget is generally used to trigger a callback function that is\ncalled when the button is pressed. The various signals and how to use them\nare outlined below.",null,null],[3,"ButtonBox","","",null,null],[3,"Calendar","","`Calendar` is a widget that displays a Gregorian calendar, one month\nat a time. It can be created with `Calendar::new`.",null,null],[3,"CellArea","","The `CellArea` is an abstract class for `CellLayout` widgets\n(also referred to as &quot;layouting widgets&quot;) to interface with an\narbitrary number of ``GtkCellRenderers`` and interact with the user\nfor a given `TreeModel` row.",null,null],[3,"CellAreaBox","","The `CellAreaBox` renders cell renderers into a row or a column\ndepending on its `Orientation`.",null,null],[3,"CellAreaContext","","The `CellAreaContext` object is created by a given `CellArea`\nimplementation via its `CellAreaClass.create_context`() virtual\nmethod and is used to store cell sizes and alignments for a series of\n`TreeModel` rows that are requested and rendered in the same context.",null,null],[3,"CellEditable","","The `CellEditable` interface must be implemented for widgets to be usable\nwhen editing the contents of a `TreeView` cell.",null,null],[3,"CellLayout","","`CellLayout` is an interface to be implemented by all objects which\nwant to provide a `TreeViewColumn` like API for packing cells,\nsetting attributes and data funcs.",null,null],[3,"CellRenderer","","The `CellRenderer` is a base class of a set of objects used for\nrendering a cell to a `cairo::Context`. These objects are used primarily by\nthe `TreeView` widget, though they aren’t tied to them in any\nspecific way. It is worth noting that `CellRenderer` is not a\n`Widget` and cannot be treated as such.",null,null],[3,"CellRendererAccel","","`CellRendererAccel` displays a keyboard accelerator (i.e. a key\ncombination like `Control + a`). If the cell renderer is editable,\nthe accelerator can be changed by simply typing the new combination.",null,null],[3,"CellRendererCombo","","`CellRendererCombo` renders text in a cell like `CellRendererText` from\nwhich it is derived. But while `CellRendererText` offers a simple entry to\nedit the text, `CellRendererCombo` offers a `ComboBox`\nwidget to edit the text. The values to display in the combo box are taken from\nthe tree model specified in the `CellRendererCombo:model` property.",null,null],[3,"CellRendererPixbuf","","A `CellRendererPixbuf` can be used to render an image in a cell. It allows\nto render either a given `gdk_pixbuf::Pixbuf` (set via the\n`CellRendererPixbuf:pixbuf` property) or a named icon (set via the\n`CellRendererPixbuf:icon-name` property).",null,null],[3,"CellRendererProgress","","`CellRendererProgress` renders a numeric value as a progress par in a cell.\nAdditionally, it can display a text on top of the progress bar.",null,null],[3,"CellRendererSpin","","`CellRendererSpin` renders text in a cell like `CellRendererText` from\nwhich it is derived. But while `CellRendererText` offers a simple entry to\nedit the text, `CellRendererSpin` offers a `SpinButton` widget. Of course,\nthat means that the text has to be parseable as a floating point number.",null,null],[3,"CellRendererSpinner","","`CellRendererSpinner` renders a spinning animation in a cell, very\nsimilar to `Spinner`. It can often be used as an alternative\nto a `CellRendererProgress` for displaying indefinite activity,\ninstead of actual progress.",null,null],[3,"CellRendererText","","A `CellRendererText` renders a given text in its cell, using the font, color and\nstyle information provided by its properties. The text will be ellipsized if it is\ntoo long and the `CellRendererText:ellipsize` property allows it.",null,null],[3,"CellRendererToggle","","`CellRendererToggle` renders a toggle button in a cell. The\nbutton is drawn as a radio or a checkbutton, depending on the\n`CellRendererToggle:radio` property.\nWhen activated, it emits the `CellRendererToggle::toggled` signal.",null,null],[3,"CheckButton","","A `CheckButton` places a discrete `ToggleButton` next to a widget,\n(usually a `Label`). See the section on `ToggleButton` widgets for\nmore information about toggle/check buttons.",null,null],[3,"CheckMenuItem","","A `CheckMenuItem` is a menu item that maintains the state of a boolean\nvalue in addition to a `MenuItem` usual role in activating application\ncode.",null,null],[3,"ColorButton","","The `ColorButton` is a button which displays the currently selected\ncolor and allows to open a color selection dialog to change the color.\nIt is suitable widget for selecting a color in a preference dialog.",null,null],[3,"ColorChooserDialog","","The `ColorChooserDialog` widget is a dialog for choosing\na color. It implements the `ColorChooser` interface.",null,null],[3,"ColorChooserWidget","","The `ColorChooserWidget` widget lets the user select a\ncolor. By default, the chooser presents a predefined palette\nof colors, plus a small number of settable custom colors.\nIt is also possible to select a different color with the\nsingle-color editor. To enter the single-color editing mode,\nuse the context menu of any color of the palette, or use the\n&#39;+&#39; button to add a new custom color.",null,null],[3,"ComboBox","","A `ComboBox` is a widget that allows the user to choose from a list of\nvalid choices. The `ComboBox` displays the selected choice. When\nactivated, the `ComboBox` displays a popup which allows the user to\nmake a new choice. The style in which the selected value is displayed,\nand the style of the popup is determined by the current theme. It may\nbe similar to a Windows-style combo box.",null,null],[3,"ComboBoxText","","A `ComboBoxText` is a simple variant of `ComboBox` that hides\nthe model-view complexity for simple text-only use cases.",null,null],[3,"Container","","A GTK+ user interface is constructed by nesting widgets inside widgets.\nContainer widgets are the inner nodes in the resulting tree of widgets:\nthey contain other widgets. So, for example, you might have a `Window`\ncontaining a `Frame` containing a `Label`. If you wanted an image instead\nof a textual label inside the frame, you might replace the `Label` widget\nwith a `Image` widget.",null,null],[3,"CssProvider","","`CssProvider` is an object implementing the `StyleProvider` interface.\nIt is able to parse [CSS-like](http://www.w3.org/TR/CSS2)\ninput in order to style widgets.",null,null],[3,"Dialog","","Dialog boxes are a convenient way to prompt the user for a small amount\nof input, e.g. to display a message, ask a question, or anything else\nthat does not require extensive effort on the user’s part.",null,null],[3,"DrawingArea","","The `DrawingArea` widget is used for creating custom user interface\nelements. It’s essentially a blank widget; you can draw on it. After\ncreating a drawing area, the application may want to connect to:",null,null],[3,"Editable","","The `Editable` interface is an interface which should be implemented by\ntext editing widgets, such as `Entry` and `SpinButton`. It contains functions\nfor generically manipulating an editable widget, a large number of action\nsignals used for key bindings, and several signals that an application can\nconnect to to modify the behavior of a widget.",null,null],[3,"Entry","","The `Entry` widget is a single line text entry\nwidget. A fairly large set of key bindings are supported\nby default. If the entered text is longer than the allocation\nof the widget, the widget will scroll so that the cursor\nposition is visible.",null,null],[3,"EntryCompletion","","`EntryCompletion` is an auxiliary object to be used in conjunction with\n`Entry` to provide the completion functionality. It implements the\n`CellLayout` interface, to allow the user to add extra cells to the\n`TreeView` with completion matches.",null,null],[3,"EventBox","","The `EventBox` widget is a subclass of `Bin` which also has its\nown window. It is useful since it allows you to catch events for widgets\nwhich do not have their own window.",null,null],[3,"EventController","","`EventController` is a base, low-level implementation for event\ncontrollers. Those react to a series of ``GdkEvents``, and possibly trigger\nactions as a consequence of those.",null,null],[3,"Expander","","A `Expander` allows the user to hide or show its child by clicking\non an expander triangle similar to the triangles used in a `TreeView`.",null,null],[3,"FileChooser","","`FileChooser` is an interface that can be implemented by file\nselection widgets. In GTK+, the main objects that implement this\ninterface are `FileChooserWidget`, `FileChooserDialog`, and\n`FileChooserButton`. You do not need to write an object that\nimplements the `FileChooser` interface unless you are trying to\nadapt an existing file selector to expose a standard programming\ninterface.",null,null],[3,"FileChooserDialog","","`FileChooserDialog` is a dialog box suitable for use with\n“File/Open” or “File/Save as” commands. This widget works by\nputting a `FileChooserWidget` inside a `Dialog`. It exposes\nthe `FileChooser` interface, so you can use all of the\n`FileChooser` functions on the file chooser dialog as well as\nthose for `Dialog`.",null,null],[3,"FileChooserWidget","","`FileChooserWidget` is a widget for choosing files.\nIt exposes the `FileChooser` interface, and you should\nuse the methods of this interface to interact with the\nwidget.",null,null],[3,"FileFilter","","A `FileFilter` can be used to restrict the files being shown in a\n`FileChooser`. Files can be filtered based on their name (with\n`FileFilter::add_pattern`), on their mime type (with\n`FileFilter::add_mime_type`), or by a custom filter function\n(with `FileFilter::add_custom`).",null,null],[3,"Fixed","","The `Fixed` widget is a container which can place child widgets\nat fixed positions and with fixed sizes, given in pixels. `Fixed`\nperforms no automatic layout management.",null,null],[3,"FlowBox","","A `FlowBox` positions child widgets in sequence according to its\norientation.",null,null],[3,"FlowBoxChild","","",null,null],[3,"FontButton","","The `FontButton` is a button which displays the currently selected\nfont an allows to open a font chooser dialog to change the font.\nIt is suitable widget for selecting a font in a preference dialog.",null,null],[3,"FontChooser","","`FontChooser` is an interface that can be implemented by widgets\ndisplaying the list of fonts. In GTK+, the main objects\nthat implement this interface are `FontChooserWidget`,\n`FontChooserDialog` and `FontButton`.",null,null],[3,"FontChooserDialog","","The `FontChooserDialog` widget is a dialog for selecting a font.\nIt implements the `FontChooser` interface.",null,null],[3,"FontChooserWidget","","The `FontChooserWidget` widget lists the available fonts,\nstyles and sizes, allowing the user to select a font. It is\nused in the `FontChooserDialog` widget to provide a\ndialog box for selecting fonts.",null,null],[3,"Frame","","The frame widget is a Bin that surrounds its child\nwith a decorative frame and an optional label.\nIf present, the label is drawn in a gap in the\ntop side of the frame. The position of the\nlabel can be controlled with `FrameExt::set_label_align`.",null,null],[3,"GLArea","","`GLArea` is a widget that allows drawing with OpenGL.",null,null],[3,"Gesture","","`Gesture` is the base object for gesture recognition, although this\nobject is quite generalized to serve as a base for multi-touch gestures,\nit is suitable to implement single-touch and pointer-based gestures (using\nthe special `None` `gdk::EventSequence` value for these).",null,null],[3,"GestureDrag","","`GestureDrag` is a `Gesture` implementation that recognizes drag\noperations. The drag operation itself can be tracked throught the\n`GestureDrag:drag-begin`, `GestureDrag:drag-update` and\n`GestureDrag:drag-end` signals, or the relevant coordinates be\nextracted through `GestureDragExt::get_offset` and\n`GestureDragExt::get_start_point`.",null,null],[3,"GestureLongPress","","`GestureLongPress` is a `Gesture` implementation able to recognize\nlong presses, triggering the `GestureLongPress::pressed` after the\ntimeout is exceeded.",null,null],[3,"GestureMultiPress","","`GestureMultiPress` is a `Gesture` implementation able to recognize\nmultiple clicks on a nearby zone, which can be listened for through the\n`GestureMultiPress::pressed` signal. Whenever time or distance between\nclicks exceed the GTK+ defaults, `GestureMultiPress::stopped` is emitted,\nand the click counter is reset.",null,null],[3,"GesturePan","","`GesturePan` is a `Gesture` implementation able to recognize\npan gestures, those are drags that are locked to happen along one\naxis. The axis that a `GesturePan` handles is defined at\nconstruct time, and can be changed through\n`GesturePan::set_orientation`.",null,null],[3,"GestureRotate","","`GestureRotate` is a `Gesture` implementation able to recognize\n2-finger rotations, whenever the angle between both handled sequences\nchanges, the `GestureRotate::angle-changed` signal is emitted.",null,null],[3,"GestureSingle","","`GestureSingle` is a subclass of `Gesture`, optimized (although\nnot restricted) for dealing with mouse and single-touch gestures. Under\ninteraction, these gestures stick to the first interacting sequence, which\nis accessible through `GestureSingleExt::get_current_sequence` while the\ngesture is being interacted with.",null,null],[3,"GestureSwipe","","`GestureSwipe` is a `Gesture` implementation able to recognize\nswipes, after a press/move/.../move/release sequence happens, the\n`GestureSwipe::swipe` signal will be emitted, providing the velocity\nand directionality of the sequence at the time it was lifted.",null,null],[3,"GestureZoom","","`GestureZoom` is a `Gesture` implementation able to recognize\npinch/zoom gestures, whenever the distance between both tracked\nsequences changes, the `GestureZoom::scale-changed` signal is\nemitted to report the scale factor.",null,null],[3,"Grid","","`Grid` is a container which arranges its child widgets in\nrows and columns. It is a very similar to `Table` and `Box`,\nbut it consistently uses `Widget`’s `Widget:margin` and `Widget:expand`\nproperties instead of custom child properties, and it fully supports\n[height-for-width geometry management][geometry-management].",null,null],[3,"HeaderBar","","`HeaderBar` is similar to a horizontal `Box`. It allows children to\nbe placed at the start or the end. In addition, it allows a title and\nsubtitle to be displayed. The title will be centered with respect to\nthe width of the box, even if the children at either side take up\ndifferent amounts of space. The height of the titlebar will be\nset to provide sufficient space for the subtitle, even if none is\ncurrently set. If a subtitle is not needed, the space reservation\ncan be turned off with `HeaderBar::set_has_subtitle`.",null,null],[3,"IconView","","`IconView` provides an alternative view on a `TreeModel`.\nIt displays the model as a grid of icons with labels. Like\n`TreeView`, it allows to select one or multiple items\n(depending on the selection mode, see `IconView::set_selection_mode`).\nIn addition to selection with the arrow keys, `IconView` supports\nrubberband selection, which is controlled by dragging the pointer.",null,null],[3,"Image","","The `Image` widget displays an image. Various kinds of object\ncan be displayed as an image; most typically, you would load a\n`gdk_pixbuf::Pixbuf` (&quot;pixel buffer&quot;) from a file, and then display that.\nThere’s a convenience function to do this, `Image::new_from_file`,\nused as follows:",null,null],[3,"InfoBar","","`InfoBar` is a widget that can be used to show messages to\nthe user without showing a dialog. It is often temporarily shown\nat the top or bottom of a document. In contrast to `Dialog`, which\nhas a action area at the bottom, `InfoBar` has an action area\nat the side.",null,null],[3,"Label","","The `Label` widget displays a small amount of text. As the name\nimplies, most labels are used to label another widget such as a\n`Button`, a `MenuItem`, or a `ComboBox`.",null,null],[3,"Layout","","`Layout` is similar to `DrawingArea` in that it’s a “blank slate”\nand doesn’t do anything but paint a blank background by default. It&#39;s\ndifferent in that it supports scrolling natively (you can add it to a\n`ScrolledWindow`), and it can contain child widgets, since it’s a\n`Container`. However if you’re just going to draw, a `DrawingArea`\nis a better choice since it has lower overhead.",null,null],[3,"LevelBar","","The `LevelBar` is a bar widget that can be used\nas a level indicator. Typical use cases are displaying the strength\nof a password, or showing the charge level of a battery.",null,null],[3,"LinkButton","","A `LinkButton` is a `Button` with a hyperlink, similar to the one\nused by web browsers, which triggers an action when clicked. It is useful\nto show quick links to resources.",null,null],[3,"ListBox","","A `ListBox` is a vertical container that contains `ListBoxRow`\nchildren. These rows can by dynamically sorted and filtered, and\nheaders can be added dynamically depending on the row content.\nIt also allows keyboard and mouse navigation and selection like\na typical list.",null,null],[3,"ListBoxRow","","",null,null],[3,"ListStore","","The `ListStore` object is a list model for use with a `TreeView`\nwidget. It implements the `TreeModel` interface, and consequentialy,\ncan use all of the methods available there. It also implements the\n`TreeSortable` interface so it can be sorted by the view.\nFinally, it also implements the tree\n[drag and drop][gtk3-`TreeView`-drag-and-drop]\ninterfaces.",null,null],[3,"Menu","","A `Menu` is a `MenuShell` that implements a drop down menu\nconsisting of a list of `MenuItem` objects which can be navigated\nand activated by the user to perform application functions.",null,null],[3,"MenuButton","","The `MenuButton` widget is used to display a popup when clicked on.\nThis popup can be provided either as a `Menu`, a `Popover` or an\nabstract `gio::MenuModel`.",null,null],[3,"MenuItem","","The `MenuItem` widget and the derived widgets are the only valid\nchildren for menus. Their function is to correctly handle highlighting,\nalignment, events and submenus.",null,null],[3,"MenuShell","","A `MenuShell` is the abstract base class used to derive the\n`Menu` and `MenuBar` subclasses.",null,null],[3,"MenuToolButton","","A `MenuToolButton` is a `ToolItem` that contains a button and\na small additional button with an arrow. When clicked, the arrow\nbutton pops up a dropdown menu.",null,null],[3,"MessageDialog","","`MessageDialog` presents a dialog with some message text. It’s simply a\nconvenience widget; you could construct the equivalent of `MessageDialog`\nfrom `Dialog` without too much effort, but `MessageDialog` saves typing.",null,null],[3,"Misc","","`[Deprecated since 3.14]` The `Misc` widget is an abstract widget which is not useful itself, but\nis used to derive subclasses which have alignment and padding attributes.",null,null],[3,"Notebook","","The `Notebook` widget is a `Container` whose children are pages that\ncan be switched between using tab labels along one edge.",null,null],[3,"Orientable","","The `Orientable` interface is implemented by all widgets that can be\noriented horizontally or vertically. Historically, such widgets have been\nrealized as subclasses of a common base class (e.g `Box`/`HBox`/`VBox`\nor `Scale`/`HScale`/`VScale`). `Orientable` is more flexible in that\nit allows the orientation to be changed at runtime, allowing the widgets\nto “flip”.",null,null],[3,"Overlay","","`Overlay` is a container which contains a single main child, on top\nof which it can place “overlay” widgets. The\nposition of each overlay widget is determined by its `Widget:halign`\nand `Widget:valign` properties. E.g. a widget with both alignments\nset to `Align::Start` will be placed at the top left corner of the\nmain widget, whereas an overlay with halign set to `Align::Center`\nand valign set to `Align::End` will be placed a the bottom edge of\nthe main widget, horizontally centered. The position can be adjusted\nby setting the margin properties of the child to non-zero values.",null,null],[3,"PageSetup","","A `PageSetup` object stores the page size, orientation and margins.\nThe idea is that you can get one of these from the page setup dialog\nand then pass it to the `PrintOperation` when printing.\nThe benefit of splitting this out of the `PrintSettings` is that\nthese affect the actual layout of the page, and thus need to be set\nlong before user prints.",null,null],[3,"Paned","","`Paned` has two panes, arranged either\nhorizontally or vertically. The division between\nthe two panes is adjustable by the user by dragging\na handle.",null,null],[3,"PlacesSidebar","","`PlacesSidebar` is a widget that displays a list of frequently-used places in the\nfile system: the user’s home directory, the user’s bookmarks, and volumes and drives.\nThis widget is used as a sidebar in `FileChooser` and may be used by file managers\nand similar programs.",null,null],[3,"Popover","","`Popover` is a bubble-like context window, primarily meant to\nprovide context-dependent information or options. Popovers are\nattached to a widget, passed at construction time on `Popover::new`,\nor updated afterwards through `PopoverExt::set_relative_to`, by\ndefault they will point to the whole widget area, although this\nbehavior can be changed through `PopoverExt::set_pointing_to`.",null,null],[3,"PopoverMenu","","`PopoverMenu` is a subclass of `Popover` that treats its\nchilden like menus and allows switching between them. It is\nmeant to be used primarily together with `ModelButton`, but\nany widget can be used, such as `SpinButton` or `Scale`.\nIn this respect, `PopoverMenu` is more flexible than popovers\nthat are created from a `gio::MenuModel` with `Popover::new_from_model`.",null,null],[3,"PrintSettings","","A `PrintSettings` object represents the settings of a print dialog in\na system-independent way. The main use for this object is that once\nyou’ve printed you can get a settings object that represents the settings\nthe user chose, and the next time you print you can pass that object in so\nthat the user doesn’t have to re-set all his settings.",null,null],[3,"ProgressBar","","The `ProgressBar` is typically used to display the progress of a long\nrunning operation. It provides a visual clue that processing\nis underway. The `ProgressBar` can be used in two different\nmodes: percentage mode and activity mode.",null,null],[3,"RadioButton","","A single radio button performs the same basic function as a `CheckButton`,\nas its position in the object hierarchy reflects. It is only when multiple\nradio buttons are grouped together that they become a different user\ninterface component in their own right.",null,null],[3,"Range","","`Range` is the common base class for widgets which visualize an\nadjustment, e.g `Scale` or `Scrollbar`.",null,null],[3,"RecentChooser","","`RecentChooser` is an interface that can be implemented by widgets\ndisplaying the list of recently used files. In GTK+, the main objects\nthat implement this interface are `RecentChooserWidget`,\n`RecentChooserDialog` and `RecentChooserMenu`.",null,null],[3,"RecentChooserDialog","","`RecentChooserDialog` is a dialog box suitable for displaying the recently\nused documents. This widgets works by putting a `RecentChooserWidget` inside\na `Dialog`. It exposes the `RecentChooserIface` interface, so you can use\nall the `RecentChooser` functions on the recent chooser dialog as well as\nthose for `Dialog`.",null,null],[3,"RecentChooserWidget","","`RecentChooserWidget` is a widget suitable for selecting recently used\nfiles. It is the main building block of a `RecentChooserDialog`. Most\napplications will only need to use the latter; you can use\n`RecentChooserWidget` as part of a larger window if you have special needs.",null,null],[3,"RecentFilter","","A `RecentFilter` can be used to restrict the files being shown\nin a `RecentChooser`. Files can be filtered based on their name\n(with `RecentFilter::add_pattern`), on their mime type (with\n`FileFilter::add_mime_type`), on the application that has\nregistered them (with `RecentFilter::add_application`), or by\na custom filter function (with `RecentFilter::add_custom`).",null,null],[3,"RecentManager","","`RecentManager` provides a facility for adding, removing and\nlooking up recently used files. Each recently used file is\nidentified by its URI, and has meta-data associated to it, like\nthe names and command lines of the applications that have\nregistered it, the number of time each application has registered\nthe same file, the mime type of the file and whether the file\nshould be displayed only by the applications that have\nregistered it.",null,null],[3,"Revealer","","The `Revealer` widget is a container which animates\nthe transition of its child from invisible to visible.",null,null],[3,"Scale","","A `Scale` is a slider control used to select a numeric value.\nTo use it, you’ll probably want to investigate the methods on\nits base class, `Range`, in addition to the methods for `Scale` itself.\nTo set the value of a scale, you would normally use `RangeExt::set_value`.\nTo detect changes to the value, you would normally use the\n`Range::value-changed` signal.",null,null],[3,"ScaleButton","","`ScaleButton` provides a button which pops up a scale widget.\nThis kind of widget is commonly used for volume controls in multimedia\napplications, and GTK+ provides a `VolumeButton` subclass that\nis tailored for this use case.",null,null],[3,"Scrollable","","`Scrollable` is an interface that is implemented by widgets with native\nscrolling ability.",null,null],[3,"Scrollbar","","The `Scrollbar` widget is a horizontal or vertical scrollbar,\ndepending on the value of the `Orientable:orientation` property.",null,null],[3,"ScrolledWindow","","`ScrolledWindow` is a `Bin` subclass: it’s a container\nthe accepts a single child widget. `ScrolledWindow` adds scrollbars\nto the child widget and optionally draws a beveled frame around the\nchild widget.",null,null],[3,"SearchBar","","`SearchBar` is a container made to have a search entry (possibly\nwith additional connex widgets, such as drop-down menus, or buttons)\nbuilt-in. The search bar would appear when a search is started through\ntyping on the keyboard, or the application’s search mode is toggled on.",null,null],[3,"SearchEntry","","`SearchEntry` is a subclass of `Entry` that has been\ntailored for use as a search entry.",null,null],[3,"Separator","","`Separator` is a horizontal or vertical separator widget, depending on the\nvalue of the `Orientable:orientation` property, used to group the widgets\nwithin a window. It displays a line with a shadow to make it appear sunken\ninto the interface.",null,null],[3,"SeparatorMenuItem","","The `SeparatorMenuItem` is a separator used to group\nitems within a menu. It displays a horizontal line with a shadow to\nmake it appear sunken into the interface.",null,null],[3,"SeparatorToolItem","","A `SeparatorToolItem` is a `ToolItem` that separates groups of other\n``GtkToolItems``. Depending on the theme, a `SeparatorToolItem` will\noften look like a vertical line on horizontally docked toolbars.",null,null],[3,"SizeGroup","","`SizeGroup` provides a mechanism for grouping a number of widgets\ntogether so they all request the same amount of space. This is\ntypically useful when you want a column of widgets to have the same\nsize, but you can’t use a `Grid` widget.",null,null],[3,"SpinButton","","A `SpinButton` is an ideal way to allow the user to set the value of\nsome attribute. Rather than having to directly type a number into a\n`Entry`, `SpinButton` allows the user to click on one of two arrows\nto increment or decrement the displayed value. A value can still be\ntyped in, with the bonus that it can be checked to ensure it is in a\ngiven range.",null,null],[3,"Spinner","","A `Spinner` widget displays an icon-size spinning animation.\nIt is often used as an alternative to a `ProgressBar` for\ndisplaying indefinite activity, instead of actual progress.",null,null],[3,"Stack","","The `Stack` widget is a container which only shows\none of its children at a time. In contrast to `Notebook`,\n`Stack` does not provide a means for users to change the\nvisible child. Instead, the `StackSwitcher` widget can be\nused with `Stack` to provide this functionality.",null,null],[3,"StackSidebar","","A `StackSidebar` enables you to quickly and easily provide a\nconsistent &quot;sidebar&quot; object for your user interface.",null,null],[3,"StackSwitcher","","The `StackSwitcher` widget acts as a controller for a\n`Stack`; it shows a row of buttons to switch between\nthe various pages of the associated stack widget.",null,null],[3,"StatusIcon","","`[Deprecated since 3.14]` The “system tray” or notification area is normally used for transient icons\nthat indicate some special state. For example, a system tray icon might\nappear to tell the user that they have new mail, or have an incoming instant\nmessage, or something along those lines. The basic idea is that creating an\nicon in the notification area is less annoying than popping up a dialog.",null,null],[3,"Statusbar","","A `Statusbar` is usually placed along the bottom of an application&#39;s\nmain `Window`. It may provide a regular commentary of the application&#39;s\nstatus (as is usually the case in a web browser, for example), or may be\nused to simply output a message when the status changes, (when an upload\nis complete in an FTP client, for example).",null,null],[3,"StyleContext","","`StyleContext` is an object that stores styling information affecting\na widget defined by `WidgetPath`.",null,null],[3,"Switch","","`Switch` is a widget that has two states: on or off. The user can control\nwhich state should be active by clicking the empty area, or by dragging the\nhandle.",null,null],[3,"TextBuffer","","You may wish to begin by reading the\n[text widget conceptual overview][TextWidget]\nwhich gives an overview of all the objects and data\ntypes related to the text widget and how they work together.",null,null],[3,"TextChildAnchor","","A `TextChildAnchor` is a spot in the buffer where child widgets can\nbe “anchored” (inserted inline, as if they were characters). The anchor\ncan have multiple widgets anchored, to allow for multiple views.",null,null],[3,"TextMark","","You may wish to begin by reading the\n[text widget conceptual overview][TextWidget]\nwhich gives an overview of all the objects and data\ntypes related to the text widget and how they work together.",null,null],[3,"TextTag","","You may wish to begin by reading the\n[text widget conceptual overview][TextWidget]\nwhich gives an overview of all the objects and\ndata types related to the text widget and how they work together.",null,null],[3,"TextTagTable","","You may wish to begin by reading the\n[text widget conceptual overview][TextWidget]\nwhich gives an overview of all the objects and\ndata types related to the text widget and how they work together.",null,null],[3,"TextView","","You may wish to begin by reading the\n[text widget conceptual overview][TextWidget]\nwhich gives an overview of all the objects and data\ntypes related to the text widget and how they work together.",null,null],[3,"ToggleButton","","A `ToggleButton` is a `Button` which will remain “pressed-in” when\nclicked. Clicking again will cause the toggle button to return to its\nnormal state.",null,null],[3,"ToggleToolButton","","A `ToggleToolButton` is a `ToolItem` that contains a toggle\nbutton.",null,null],[3,"ToolButton","","``GtkToolButtons`` are ``GtkToolItems`` containing buttons.",null,null],[3,"ToolItem","","``GtkToolItems`` are widgets that can appear on a toolbar. To\ncreate a toolbar item that contain something else than a button, use\n`ToolItem::new`. Use `ContainerExt::add` to add a child\nwidget to the tool item.",null,null],[3,"ToolItemGroup","","A `ToolItemGroup` is used together with `ToolPalette` to add\n``GtkToolItems`` to a palette like container with different\ncategories and drag and drop support.",null,null],[3,"ToolPalette","","A `ToolPalette` allows you to add ``GtkToolItems`` to a palette-like\ncontainer with different categories and drag and drop support.",null,null],[3,"ToolShell","","The `ToolShell` interface allows container widgets to provide additional\ninformation when embedding `ToolItem` widgets.",null,null],[3,"Toolbar","","A toolbar is created with a call to `Toolbar::new`.",null,null],[3,"TreeModel","","The `TreeModel` interface defines a generic tree interface for\nuse by the `TreeView` widget. It is an abstract interface, and\nis designed to be usable with any appropriate data structure. The\nprogrammer just has to implement this interface on their own data\ntype for it to be viewable by a `TreeView` widget.",null,null],[3,"TreeSelection","","The `TreeSelection` object is a helper object to manage the selection\nfor a `TreeView` widget. The `TreeSelection` object is\nautomatically created when a new `TreeView` widget is created, and\ncannot exist independently of this widget. The primary reason the\n`TreeSelection` objects exists is for cleanliness of code and API.\nThat is, there is no conceptual reason all these functions could not be\nmethods on the `TreeView` widget instead of a separate function.",null,null],[3,"TreeSortable","","`TreeSortable` is an interface to be implemented by tree models which\nsupport sorting. The `TreeView` uses the methods provided by this interface\nto sort the model.",null,null],[3,"TreeStore","","The `TreeStore` object is a list model for use with a `TreeView`\nwidget. It implements the `TreeModel` interface, and consequentialy,\ncan use all of the methods available there. It also implements the\n`TreeSortable` interface so it can be sorted by the view. Finally,\nit also implements the tree\n[drag and drop][gtk3-`TreeView`-drag-and-drop]\ninterfaces.",null,null],[3,"TreeView","","Widget that displays any object that implements the `TreeModel` interface.",null,null],[3,"TreeViewColumn","","The `TreeViewColumn` object represents a visible column in a `TreeView` widget.\nIt allows to set properties of the column header, and functions as a holding pen for\nthe cell renderers which determine how the data in the column is displayed.",null,null],[3,"Viewport","","The `Viewport` widget acts as an adaptor class, implementing\nscrollability for child widgets that lack their own scrolling\ncapabilities. Use `Viewport` to scroll child widgets such as\n`Grid`, `Box`, and so on.",null,null],[3,"VolumeButton","","`VolumeButton` is a subclass of `ScaleButton` that has\nbeen tailored for use as a volume control widget with suitable\nicons, tooltips and accessible labels.",null,null],[3,"Widget","","`Widget` is the base class all widgets in GTK+ derive from. It manages the\nwidget lifecycle, states and style.",null,null],[3,"Window","","A `Window` is a toplevel window which can contain other widgets.\nWindows normally have decorations that are under the control\nof the windowing system and allow the user to manipulate the window\n(resize it, move it, close it,...).",null,null],[3,"PaperSize","","`PaperSize` handles paper sizes. It uses the standard called\n[PWG 5101.1-2002 PWG: Standard for Media Standardized Names](http://www.pwg.org/standards.html)\nto name the paper sizes (and to get the data for the page sizes).\nIn addition to standard paper sizes, `PaperSize` allows to\nconstruct custom paper sizes with arbitrary dimensions.",null,null],[3,"TextIter","","You may wish to begin by reading the\n[text widget conceptual overview][TextWidget]\nwhich gives an overview of all the objects and data\ntypes related to the text widget and how they work together.",null,null],[3,"TreeIter","","The `TreeIter` is the primary structure\nfor accessing a `TreeModel`. Models are expected to put a unique\ninteger in the `stamp` member, and put\nmodel-specific data in the three `user_data`\nmembers.",null,null],[3,"TreePath","","",null,null],[3,"Tooltip","","",null,null],[3,"Inhibit","","Whether to propagate the signal to the default handler.",null,null],[3,"Allocation","","",null,null],[12,"x","","",145,null],[12,"y","","",145,null],[12,"width","","",145,null],[12,"height","","",145,null],[3,"AppChooser","","`AppChooser` is an interface that can be implemented by widgets which\nallow the user to choose an application (typically for the purpose of\nopening a file). The main objects that implement this interface are\n`AppChooserWidget`, `AppChooserDialog` and `AppChooserButton`.",null,null],[3,"Builder","","A `Builder` is an auxiliary object that reads textual descriptions\nof a user interface and instantiates the described objects. To create\na `Builder` from a user interface description, call\n`Builder::new_from_file`, `Builder::new_from_resource` or\n`Builder::new_from_string`.",null,null],[3,"Buildable","","`Buildable` allows objects to extend and customize their deserialization\nfrom [`Builder` UI descriptions][BUILDER-UI].\nThe interface includes methods for setting names and properties of objects,\nparsing custom tags and constructing child objects.",null,null],[3,"ColorChooser","","`ColorChooser` is an interface that is implemented by widgets\nfor choosing colors. Depending on the situation, colors may be\nallowed to have alpha (translucency).",null,null],[3,"EntryBuffer","","The `EntryBuffer` class contains the actual text displayed in a\n`Entry` widget.",null,null],[3,"RecentData","","Meta-data to be passed to `RecentManager::add_full` when\nregistering a recently used resource.",null,null],[12,"display_name","","",146,null],[12,"description","","",146,null],[12,"mime_type","","",146,null],[12,"app_name","","",146,null],[12,"app_exec","","",146,null],[12,"groups","","",146,null],[12,"is_private","","",146,null],[3,"RecentInfo","","`RecentInfo`-struct contains private data only, and should\nbe accessed using the provided API.",null,null],[3,"Rectangle","","",null,null],[12,"x","","",145,null],[12,"y","","",145,null],[12,"width","","",145,null],[12,"height","","",145,null],[3,"Requisition","","A `Requisition`-struct represents the desired size of a widget. See\n[`Widget`’s geometry management section][geometry-management] for\nmore information.",null,null],[12,"width","","",147,null],[12,"height","","",147,null],[3,"Socket","","",null,null],[3,"TextAttributes","","Using `TextAttributes` directly should rarely be necessary.\nIt’s primarily useful with `TextIter::get_attributes`.\nAs with most GTK+ structs, the fields in this struct should only\nbe read, never modified directly.",null,null],[4,"SortColumn","","",null,null],[13,"Default","","",148,null],[13,"Index","","",148,null],[5,"is_initialized","","Returns `true` if GTK has been initialized.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"is_initialized_main_thread","","Returns `true` if GTK has been initialized and this is the main thread.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"set_initialized","","Informs this crate that GTK has been initialized and the current thread is the main one.",null,{"inputs":[],"output":null}],[5,"init","","Tries to initialize GTK+.",null,{"inputs":[],"output":{"name":"result"}}],[5,"main","","",null,{"inputs":[],"output":null}],[5,"main_quit","","",null,{"inputs":[],"output":null}],[5,"main_level","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"main_iteration","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"main_iteration_do","","",null,{"inputs":[{"name":"bool"}],"output":{"name":"bool"}}],[5,"events_pending","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"get_major_version","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_minor_version","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_micro_version","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_binary_age","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"get_interface_age","","",null,{"inputs":[],"output":{"name":"u32"}}],[5,"check_version","","",null,{"inputs":[{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[5,"idle_add","","Adds a closure to be called by the default main loop when it&#39;s idle.",null,{"inputs":[{"name":"f"}],"output":{"name":"u32"}}],[5,"timeout_add","","Adds a closure to be called by the default main loop at regular intervals\nwith millisecond granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"u32"}}],[5,"timeout_add_seconds","","Adds a closure to be called by the default main loop at regular intervals\nwith second granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"u32"}}],[11,"hash","","",149,null],[11,"fmt","","",149,{"inputs":[{"name":"aboutdialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"aboutdialog"}}],[11,"static_type","","",149,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",149,{"inputs":[{"name":"aboutdialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AboutDialog`.",149,{"inputs":[],"output":{"name":"aboutdialog"}}],[11,"add_credit_section","","Creates a new section in the Credits page.\n## `section_name`\nThe name of the section\n## `people`\nThe people who belong to that section",149,null],[11,"get_artists","","Returns the string which are displayed in the artists tab\nof the secondary credits dialog.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"vec"}}],[11,"get_authors","","Returns the string which are displayed in the authors tab\nof the secondary credits dialog.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"vec"}}],[11,"get_comments","","Returns the comments string.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_copyright","","Returns the copyright string.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_documenters","","Returns the string which are displayed in the documenters\ntab of the secondary credits dialog.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"vec"}}],[11,"get_license","","Returns the license information.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_license_type","","Retrieves the license set using `AboutDialog::set_license_type`",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"license"}}],[11,"get_logo","","Returns the pixbuf displayed as logo in the about dialog.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_logo_icon_name","","Returns the icon name displayed as logo in the about dialog.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_program_name","","Returns the program name displayed in the about dialog.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_translator_credits","","Returns the translator credits string which is displayed\nin the translators tab of the secondary credits dialog.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_version","","Returns the version string.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_website","","Returns the website URL.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_website_label","","Returns the label used for the website link.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"option"}}],[11,"get_wrap_license","","Returns whether the license text in `self` is\nautomatically wrapped.",149,{"inputs":[{"name":"aboutdialog"}],"output":{"name":"bool"}}],[11,"set_artists","","Sets the strings which are displayed in the artists tab\nof the secondary credits dialog.\n## `artists`\na `None`-terminated array of strings",149,null],[11,"set_authors","","Sets the strings which are displayed in the authors tab\nof the secondary credits dialog.\n## `authors`\na `None`-terminated array of strings",149,null],[11,"set_comments","","Sets the comments string to display in the about dialog.\nThis should be a short string of one or two lines.\n## `comments`\na comments string",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_copyright","","Sets the copyright string to display in the about dialog.\nThis should be a short string of one or two lines.\n## `copyright`\nthe copyright string",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_documenters","","Sets the strings which are displayed in the documenters tab\nof the secondary credits dialog.\n## `documenters`\na `None`-terminated array of strings",149,null],[11,"set_license","","Sets the license information to be displayed in the secondary\nlicense dialog. If `license` is `None`, the license button is\nhidden.\n## `license`\nthe license information or `None`",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_license_type","","Sets the license of the application showing the `self` dialog from a\nlist of known licenses.",149,{"inputs":[{"name":"aboutdialog"},{"name":"license"}],"output":null}],[11,"set_logo","","Sets the pixbuf to be displayed as logo in the about dialog.\nIf it is `None`, the default window icon set with\n`Window::set_default_icon` will be used.\n## `logo`\na `gdk_pixbuf::Pixbuf`, or `None`",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_logo_icon_name","","Sets the pixbuf to be displayed as logo in the about dialog.\nIf it is `None`, the default window icon set with\n`Window::set_default_icon` will be used.\n## `icon_name`\nan icon name, or `None`",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_program_name","","Sets the name to display in the about dialog.\nIf this is not set, it defaults to `g_get_application_name`.\n## `name`\nthe program name",149,{"inputs":[{"name":"aboutdialog"},{"name":"str"}],"output":null}],[11,"set_translator_credits","","Sets the translator credits string which is displayed in\nthe translators tab of the secondary credits dialog.",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_version","","Sets the version string to display in the about dialog.\n## `version`\nthe version string",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_website","","Sets the URL to use for the website link.\n## `website`\na URL string starting with &quot;http://&quot;",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_website_label","","Sets the label to be used for the website link.\n## `website_label`\nthe label used for the website link",149,{"inputs":[{"name":"aboutdialog"},{"name":"option"}],"output":null}],[11,"set_wrap_license","","Sets whether the license text in `self` is\nautomatically wrapped.\n## `wrap_license`\nwhether to wrap the license",149,{"inputs":[{"name":"aboutdialog"},{"name":"bool"}],"output":null}],[11,"hash","","",150,null],[11,"fmt","","",150,{"inputs":[{"name":"accelgroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"accelgroup"}],"output":{"name":"accelgroup"}}],[11,"static_type","","",150,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",150,{"inputs":[{"name":"accelgroup"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AccelGroup`.",150,{"inputs":[],"output":{"name":"accelgroup"}}],[11,"disconnect_key","","Removes an accelerator previously installed through\n`AccelGroup::connect`.\n## `accel_key`\nkey value of the accelerator\n## `accel_mods`\nmodifier combination of the accelerator",150,{"inputs":[{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"get_is_locked","","Locks are added and removed using `AccelGroup::lock` and\n`AccelGroup::unlock`.",150,{"inputs":[{"name":"accelgroup"}],"output":{"name":"bool"}}],[11,"get_modifier_mask","","Gets a `gdk::ModifierType` representing the mask for this\n`self`. For example, `gdk::ModifierType::ControlMask`, `gdk::ModifierType::ShiftMask`, etc.",150,{"inputs":[{"name":"accelgroup"}],"output":{"name":"modifiertype"}}],[11,"lock","","Locks the given accelerator group.",150,{"inputs":[{"name":"accelgroup"}],"output":null}],[11,"unlock","","Undoes the last call to `AccelGroup::lock` on this `self`.",150,{"inputs":[{"name":"accelgroup"}],"output":null}],[11,"hash","","",151,null],[11,"fmt","","",151,{"inputs":[{"name":"actionbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"actionbar"}],"output":{"name":"actionbar"}}],[11,"static_type","","",151,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",151,{"inputs":[{"name":"actionbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ActionBar` widget.",151,{"inputs":[],"output":{"name":"actionbar"}}],[11,"get_center_widget","","Retrieves the center bar widget of the bar.",151,{"inputs":[{"name":"actionbar"}],"output":{"name":"option"}}],[11,"pack_end","","Adds `child` to `self`, packed with reference to the\nend of the `self`.",151,{"inputs":[{"name":"actionbar"},{"name":"t"}],"output":null}],[11,"pack_start","","Adds `child` to `self`, packed with reference to the\nstart of the `self`.",151,{"inputs":[{"name":"actionbar"},{"name":"t"}],"output":null}],[11,"set_center_widget","","Sets the center widget for the `ActionBar`.",151,{"inputs":[{"name":"actionbar"},{"name":"option"}],"output":null}],[11,"hash","","",152,null],[11,"fmt","","",152,{"inputs":[{"name":"actionable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"actionable"}],"output":{"name":"actionable"}}],[11,"static_type","","",152,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",152,{"inputs":[{"name":"actionable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",153,null],[11,"fmt","","",153,{"inputs":[{"name":"adjustment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"adjustment"}}],[11,"static_type","","",153,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",153,{"inputs":[{"name":"adjustment"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Adjustment`.\n## `value`\nthe initial value.\n## `lower`\nthe minimum value.\n## `upper`\nthe maximum value.\n## `step_increment`\nthe step increment.\n## `page_increment`\nthe page increment.\n## `page_size`\nthe page size.",153,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"adjustment"}}],[11,"changed","","Emits a `Adjustment::changed` signal from the `Adjustment`.\nThis is typically called by the owner of the `Adjustment` after it has\nchanged any of the `Adjustment` properties other than the value.",153,{"inputs":[{"name":"adjustment"}],"output":null}],[11,"clamp_page","","Updates the `Adjustment:value` property to ensure that the range\nbetween `lower` and `upper` is in the current page (i.e. between\n`Adjustment:value` and `Adjustment:value` + `Adjustment:page_size`).\nIf the range is larger than the page size, then only the start of it will\nbe in the current page.\nA `Adjustment::changed` signal will be emitted if the value is changed.\n## `lower`\nthe lower value.\n## `upper`\nthe upper value.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"configure","","Sets all properties of the adjustment at once.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_lower","","Retrieves the minimum value of the adjustment.",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"f64"}}],[11,"get_minimum_increment","","Gets the smaller of step increment and page increment.",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"f64"}}],[11,"get_page_increment","","Retrieves the page increment of the adjustment.",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"f64"}}],[11,"get_page_size","","Retrieves the page size of the adjustment.",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"f64"}}],[11,"get_step_increment","","Retrieves the step increment of the adjustment.",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"f64"}}],[11,"get_upper","","Retrieves the maximum value of the adjustment.",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"f64"}}],[11,"get_value","","Gets the current value of the adjustment. See\ngtk_adjustment_set_value ().",153,{"inputs":[{"name":"adjustment"}],"output":{"name":"f64"}}],[11,"set_lower","","Sets the minimum value of the adjustment.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"}],"output":null}],[11,"set_page_increment","","Sets the page increment of the adjustment.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"}],"output":null}],[11,"set_page_size","","Sets the page size of the adjustment.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"}],"output":null}],[11,"set_step_increment","","Sets the step increment of the adjustment.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"}],"output":null}],[11,"set_upper","","Sets the maximum value of the adjustment.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"}],"output":null}],[11,"set_value","","Sets the `Adjustment` value. The value is clamped to lie between\n`Adjustment:lower` and `Adjustment:upper`.",153,{"inputs":[{"name":"adjustment"},{"name":"f64"}],"output":null}],[11,"value_changed","","Emits a `Adjustment::value_changed` signal from the `Adjustment`.\nThis is typically called by the owner of the `Adjustment` after it has\nchanged the `Adjustment:value` property.",153,{"inputs":[{"name":"adjustment"}],"output":null}],[11,"hash","","",154,null],[11,"fmt","","",154,{"inputs":[{"name":"alignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"alignment"}],"output":{"name":"alignment"}}],[11,"static_type","","",154,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",154,{"inputs":[{"name":"alignment"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Alignment`.",154,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"alignment"}}],[11,"get_padding","","Gets the padding on the different sides of the widget.\nSee gtk_alignment_set_padding ().",154,null],[11,"set","","Sets the `Alignment` values.",154,{"inputs":[{"name":"alignment"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":null}],[11,"set_padding","","Sets the padding on the different sides of the widget.\nThe padding adds blank space to the sides of the widget. For instance,\nthis can be used to indent the child widget towards the right by adding\npadding on the left.",154,{"inputs":[{"name":"alignment"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"hash","","",155,null],[11,"fmt","","",155,{"inputs":[{"name":"appchooserdialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"appchooserdialog"}],"output":{"name":"appchooserdialog"}}],[11,"static_type","","",155,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",155,{"inputs":[{"name":"appchooserdialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_for_content_type","","Creates a new `AppChooserDialog` for the provided content type,\nto allow the user to select an application for it.\n## `parent`\na `Window`, or `None`\n## `flags`\nflags for this dialog\n## `content_type`\na content type string",155,{"inputs":[{"name":"option"},{"name":"dialogflags"},{"name":"str"}],"output":{"name":"appchooserdialog"}}],[11,"get_heading","","Returns the text to display at the top of the dialog.",155,{"inputs":[{"name":"appchooserdialog"}],"output":{"name":"option"}}],[11,"get_widget","","Returns the `AppChooserWidget` of this dialog.",155,{"inputs":[{"name":"appchooserdialog"}],"output":{"name":"widget"}}],[11,"set_heading","","Sets the text to display at the top of the dialog.\nIf the heading is not set, the dialog displays a default text.\n## `heading`\na string containing Pango markup",155,{"inputs":[{"name":"appchooserdialog"},{"name":"str"}],"output":null}],[11,"hash","","",156,null],[11,"fmt","","",156,{"inputs":[{"name":"appchooserwidget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"appchooserwidget"}],"output":{"name":"appchooserwidget"}}],[11,"static_type","","",156,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",156,{"inputs":[{"name":"appchooserwidget"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AppChooserWidget` for applications\nthat can handle content of the given type.\n## `content_type`\nthe content type to show applications for",156,{"inputs":[{"name":"str"}],"output":{"name":"appchooserwidget"}}],[11,"get_default_text","","Returns the text that is shown if there are not applications\nthat can handle the content type.",156,{"inputs":[{"name":"appchooserwidget"}],"output":{"name":"option"}}],[11,"get_show_all","","Returns the current value of the `AppChooserWidget:show-all`\nproperty.",156,{"inputs":[{"name":"appchooserwidget"}],"output":{"name":"bool"}}],[11,"get_show_default","","Returns the current value of the `AppChooserWidget:show-default`\nproperty.",156,{"inputs":[{"name":"appchooserwidget"}],"output":{"name":"bool"}}],[11,"get_show_fallback","","Returns the current value of the `AppChooserWidget:show-fallback`\nproperty.",156,{"inputs":[{"name":"appchooserwidget"}],"output":{"name":"bool"}}],[11,"get_show_other","","Returns the current value of the `AppChooserWidget:show-other`\nproperty.",156,{"inputs":[{"name":"appchooserwidget"}],"output":{"name":"bool"}}],[11,"get_show_recommended","","Returns the current value of the `AppChooserWidget:show-recommended`\nproperty.",156,{"inputs":[{"name":"appchooserwidget"}],"output":{"name":"bool"}}],[11,"set_default_text","","Sets the text that is shown if there are not applications\nthat can handle the content type.\n## `text`\nthe new value for `AppChooserWidget:default-text`",156,{"inputs":[{"name":"appchooserwidget"},{"name":"str"}],"output":null}],[11,"set_show_all","","Sets whether the app chooser should show all applications\nin a flat list.\n## `setting`\nthe new value for `AppChooserWidget:show-all`",156,{"inputs":[{"name":"appchooserwidget"},{"name":"bool"}],"output":null}],[11,"set_show_default","","Sets whether the app chooser should show the default handler\nfor the content type in a separate section.\n## `setting`\nthe new value for `AppChooserWidget:show-default`",156,{"inputs":[{"name":"appchooserwidget"},{"name":"bool"}],"output":null}],[11,"set_show_fallback","","Sets whether the app chooser should show related applications\nfor the content type in a separate section.\n## `setting`\nthe new value for `AppChooserWidget:show-fallback`",156,{"inputs":[{"name":"appchooserwidget"},{"name":"bool"}],"output":null}],[11,"set_show_other","","Sets whether the app chooser should show applications\nwhich are unrelated to the content type.\n## `setting`\nthe new value for `AppChooserWidget:show-other`",156,{"inputs":[{"name":"appchooserwidget"},{"name":"bool"}],"output":null}],[11,"set_show_recommended","","Sets whether the app chooser should show recommended applications\nfor the content type in a separate section.\n## `setting`\nthe new value for `AppChooserWidget:show-recommended`",156,{"inputs":[{"name":"appchooserwidget"},{"name":"bool"}],"output":null}],[11,"hash","","",157,null],[11,"fmt","","",157,{"inputs":[{"name":"application"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"application"}],"output":{"name":"application"}}],[11,"static_type","","",157,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",157,{"inputs":[{"name":"application"},{"name":"t"}],"output":{"name":"bool"}}],[11,"add_window","","Adds a window to `self`.",157,{"inputs":[{"name":"application"},{"name":"t"}],"output":null}],[11,"get_accels_for_action","","Gets the accelerators that are currently associated with\nthe given action.",157,{"inputs":[{"name":"application"},{"name":"str"}],"output":{"name":"vec"}}],[11,"get_actions_for_accel","","Returns the list of actions (possibly empty) that `accel` maps to.\nEach item in the list is a detailed action name in the usual form.",157,{"inputs":[{"name":"application"},{"name":"str"}],"output":{"name":"vec"}}],[11,"get_active_window","","Gets the “active” window for the application.",157,{"inputs":[{"name":"application"}],"output":{"name":"option"}}],[11,"get_window_by_id","","Returns the `ApplicationWindow` with the given ID.",157,{"inputs":[{"name":"application"},{"name":"u32"}],"output":{"name":"option"}}],[11,"get_windows","","Gets a list of the ``GtkWindows`` associated with `self`.",157,{"inputs":[{"name":"application"}],"output":{"name":"vec"}}],[11,"inhibit","","Inform the session manager that certain types of actions should be\ninhibited. This is not guaranteed to work on all platforms and for\nall types of actions.",157,{"inputs":[{"name":"application"},{"name":"option"},{"name":"applicationinhibitflags"},{"name":"option"}],"output":{"name":"u32"}}],[11,"is_inhibited","","Determines if any of the actions specified in `flags` are\ncurrently inhibited (possibly by another application).\n## `flags`\nwhat types of actions should be queried",157,{"inputs":[{"name":"application"},{"name":"applicationinhibitflags"}],"output":{"name":"bool"}}],[11,"list_action_descriptions","","Lists the detailed action names which have associated accelerators.\nSee `Application::set_accels_for_action`.",157,{"inputs":[{"name":"application"}],"output":{"name":"vec"}}],[11,"prefers_app_menu","","Determines if the desktop environment in which the application is\nrunning would prefer an application menu be shown.",157,{"inputs":[{"name":"application"}],"output":{"name":"bool"}}],[11,"remove_window","","Remove a window from `self`.",157,{"inputs":[{"name":"application"},{"name":"t"}],"output":null}],[11,"set_accels_for_action","","Sets zero or more keyboard accelerators that will trigger the\ngiven action. The first item in `accels` will be the primary\naccelerator, which may be displayed in the UI.",157,null],[11,"uninhibit","","Removes an inhibitor that has been established with `Application::inhibit`.\nInhibitors are also cleared when the application exits.\n## `cookie`\na cookie that was returned by `Application::inhibit`",157,{"inputs":[{"name":"application"},{"name":"u32"}],"output":null}],[11,"hash","","",158,null],[11,"fmt","","",158,{"inputs":[{"name":"applicationwindow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"applicationwindow"}],"output":{"name":"applicationwindow"}}],[11,"static_type","","",158,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",158,{"inputs":[{"name":"applicationwindow"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ApplicationWindow`.\n## `application`\na `Application`",158,{"inputs":[{"name":"application"}],"output":{"name":"applicationwindow"}}],[11,"get_id","","Returns the unique ID of the window. If the window has not yet been added to\na `Application`, returns `0`.",158,{"inputs":[{"name":"applicationwindow"}],"output":{"name":"u32"}}],[11,"get_show_menubar","","Returns whether the window will display a menubar for the app menu\nand menubar as needed.",158,{"inputs":[{"name":"applicationwindow"}],"output":{"name":"bool"}}],[11,"set_show_menubar","","Sets whether the window will display a menubar for the app menu\nand menubar as needed.\n## `show_menubar`\nwhether to show a menubar when needed",158,{"inputs":[{"name":"applicationwindow"},{"name":"bool"}],"output":null}],[11,"hash","","",159,null],[11,"fmt","","",159,{"inputs":[{"name":"arrow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"arrow"}],"output":{"name":"arrow"}}],[11,"static_type","","",159,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",159,{"inputs":[{"name":"arrow"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Arrow` widget.",159,{"inputs":[{"name":"arrowtype"},{"name":"shadowtype"}],"output":{"name":"arrow"}}],[11,"set","","Sets the direction and style of the `Arrow`, `self`.",159,{"inputs":[{"name":"arrow"},{"name":"arrowtype"},{"name":"shadowtype"}],"output":null}],[11,"hash","","",160,null],[11,"fmt","","",160,{"inputs":[{"name":"aspectframe"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",160,{"inputs":[{"name":"aspectframe"}],"output":{"name":"aspectframe"}}],[11,"static_type","","",160,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",160,{"inputs":[{"name":"aspectframe"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `AspectFrame`.\n## `label`\nLabel text.\n## `xalign`\nHorizontal alignment of the child within the allocation of\n the `AspectFrame`. This ranges from 0.0 (left aligned)\n to 1.0 (right aligned)\n## `yalign`\nVertical alignment of the child within the allocation of\n the `AspectFrame`. This ranges from 0.0 (top aligned)\n to 1.0 (bottom aligned)\n## `ratio`\nThe desired aspect ratio.\n## `obey_child`\nIf `true`, `ratio` is ignored, and the aspect\n ratio is taken from the requistion of the child.",160,{"inputs":[{"name":"option"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"bool"}],"output":{"name":"aspectframe"}}],[11,"set","","Set parameters for an existing `AspectFrame`.\n## `xalign`\nHorizontal alignment of the child within the allocation of\n the `AspectFrame`. This ranges from 0.0 (left aligned)\n to 1.0 (right aligned)\n## `yalign`\nVertical alignment of the child within the allocation of\n the `AspectFrame`. This ranges from 0.0 (top aligned)\n to 1.0 (bottom aligned)\n## `ratio`\nThe desired aspect ratio.\n## `obey_child`\nIf `true`, `ratio` is ignored, and the aspect\n ratio is taken from the requistion of the child.",160,{"inputs":[{"name":"aspectframe"},{"name":"f32"},{"name":"f32"},{"name":"f32"},{"name":"bool"}],"output":null}],[11,"hash","","",161,null],[11,"fmt","","",161,{"inputs":[{"name":"bin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",161,{"inputs":[{"name":"bin"}],"output":{"name":"bin"}}],[11,"static_type","","",161,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",161,{"inputs":[{"name":"bin"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",162,null],[11,"fmt","","",162,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",162,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"static_type","","",162,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",162,{"inputs":[{"name":"box"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Box`.\n## `orientation`\nthe box’s orientation.\n## `spacing`\nthe number of pixels to place by default between children.",162,{"inputs":[{"name":"orientation"},{"name":"i32"}],"output":{"name":"box"}}],[11,"hash","","",163,null],[11,"fmt","","",163,{"inputs":[{"name":"button"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"button"}],"output":{"name":"button"}}],[11,"static_type","","",163,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",163,{"inputs":[{"name":"button"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Button` widget. To add a child widget to the button,\nuse `Container::add`.",163,{"inputs":[],"output":{"name":"button"}}],[11,"new_from_icon_name","","Creates a new button containing an icon from the current icon theme.",163,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"button"}}],[11,"new_from_stock","","Creates a new `Button` containing the image and text from a stock item.\nSome stock ids have preprocessor macros like `GTK_STOCK_OK` and\n`GTK_STOCK_APPLY`.",163,{"inputs":[{"name":"str"}],"output":{"name":"button"}}],[11,"new_with_label","","Creates a `Button` widget with a `Label` child containing the given\ntext.\n## `label`\nThe text you want the `Label` to hold.",163,{"inputs":[{"name":"str"}],"output":{"name":"button"}}],[11,"new_with_mnemonic","","Creates a new `Button` containing a label.\nIf characters in `label` are preceded by an underscore, they are underlined.\nIf you need a literal underscore character in a label, use “__” (two\nunderscores). The first underlined character represents a keyboard\naccelerator called a mnemonic.\nPressing Alt and that key activates the button.\n## `label`\nThe text of the button, with an underscore in front of the\n mnemonic character",163,{"inputs":[{"name":"str"}],"output":{"name":"button"}}],[11,"hash","","",164,null],[11,"fmt","","",164,{"inputs":[{"name":"buttonbox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",164,{"inputs":[{"name":"buttonbox"}],"output":{"name":"buttonbox"}}],[11,"static_type","","",164,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",164,{"inputs":[{"name":"buttonbox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ButtonBox`.\n## `orientation`\nthe box&#39;s orientation.",164,{"inputs":[{"name":"orientation"}],"output":{"name":"buttonbox"}}],[11,"get_child_non_homogeneous","","Returns whether the child is exempted from homogenous\nsizing.\n## `child`\na child of `self`",164,{"inputs":[{"name":"buttonbox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_child_secondary","","Returns whether `child` should appear in a secondary group of children.\n## `child`\na child of `self`",164,{"inputs":[{"name":"buttonbox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_layout","","Retrieves the method being used to arrange the buttons in a button box.",164,{"inputs":[{"name":"buttonbox"}],"output":{"name":"buttonboxstyle"}}],[11,"set_child_non_homogeneous","","Sets whether the child is exempted from homogeous sizing.\n## `child`\na child of `self`\n## `non_homogeneous`\nthe new value",164,{"inputs":[{"name":"buttonbox"},{"name":"t"},{"name":"bool"}],"output":null}],[11,"set_child_secondary","","Sets whether `child` should appear in a secondary group of children.\nA typical use of a secondary child is the help button in a dialog.",164,{"inputs":[{"name":"buttonbox"},{"name":"t"},{"name":"bool"}],"output":null}],[11,"set_layout","","Changes the way buttons are arranged in their container.\n## `layout_style`\nthe new layout style",164,{"inputs":[{"name":"buttonbox"},{"name":"buttonboxstyle"}],"output":null}],[11,"hash","","",165,null],[11,"fmt","","",165,{"inputs":[{"name":"calendar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",165,{"inputs":[{"name":"calendar"}],"output":{"name":"calendar"}}],[11,"static_type","","",165,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",165,{"inputs":[{"name":"calendar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new calendar, with the current date being selected.",165,{"inputs":[],"output":{"name":"calendar"}}],[11,"clear_marks","","Remove all visual markers.",165,{"inputs":[{"name":"calendar"}],"output":null}],[11,"get_date","","Obtains the selected date from a `Calendar`.\n## `year`\nlocation to store the year as a decimal\n number (e.g. 2011), or `None`\n## `month`\nlocation to store the month number\n (between 0 and 11), or `None`\n## `day`\nlocation to store the day number (between\n 1 and 31), or `None`",165,null],[11,"get_day_is_marked","","Returns if the `day` of the `self` is already marked.\n## `day`\nthe day number between 1 and 31.",165,{"inputs":[{"name":"calendar"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"get_detail_height_rows","","Queries the height of detail cells, in rows.\nSee `Calendar:detail-width-chars`.",165,{"inputs":[{"name":"calendar"}],"output":{"name":"i32"}}],[11,"get_detail_width_chars","","Queries the width of detail cells, in characters.\nSee `Calendar:detail-width-chars`.",165,{"inputs":[{"name":"calendar"}],"output":{"name":"i32"}}],[11,"get_display_options","","Returns the current display options of `self`.",165,{"inputs":[{"name":"calendar"}],"output":{"name":"calendardisplayoptions"}}],[11,"mark_day","","Places a visual marker on a particular day.\n## `day`\nthe day number to mark between 1 and 31.",165,{"inputs":[{"name":"calendar"},{"name":"u32"}],"output":null}],[11,"select_day","","Selects a day from the current month.\n## `day`\nthe day number between 1 and 31, or 0 to unselect\n the currently selected day.",165,{"inputs":[{"name":"calendar"},{"name":"u32"}],"output":null}],[11,"select_month","","Shifts the calendar to a different month.\n## `month`\na month number between 0 and 11.\n## `year`\nthe year the month is in.",165,{"inputs":[{"name":"calendar"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_detail_height_rows","","Updates the height of detail cells.\nSee `Calendar:detail-height-rows`.\n## `rows`\ndetail height in rows.",165,{"inputs":[{"name":"calendar"},{"name":"i32"}],"output":null}],[11,"set_detail_width_chars","","Updates the width of detail cells.\nSee `Calendar:detail-width-chars`.\n## `chars`\ndetail width in characters.",165,{"inputs":[{"name":"calendar"},{"name":"i32"}],"output":null}],[11,"set_display_options","","Sets display options (whether to display the heading and the month\nheadings).\n## `flags`\nthe display options to set",165,{"inputs":[{"name":"calendar"},{"name":"calendardisplayoptions"}],"output":null}],[11,"unmark_day","","Removes the visual marker from a particular day.\n## `day`\nthe day number to unmark between 1 and 31.",165,{"inputs":[{"name":"calendar"},{"name":"u32"}],"output":null}],[11,"hash","","",166,null],[11,"fmt","","",166,{"inputs":[{"name":"cellarea"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",166,{"inputs":[{"name":"cellarea"}],"output":{"name":"cellarea"}}],[11,"static_type","","",166,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",166,{"inputs":[{"name":"cellarea"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",167,null],[11,"fmt","","",167,{"inputs":[{"name":"cellareabox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",167,{"inputs":[{"name":"cellareabox"}],"output":{"name":"cellareabox"}}],[11,"static_type","","",167,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",167,{"inputs":[{"name":"cellareabox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellAreaBox`.",167,{"inputs":[],"output":{"name":"cellareabox"}}],[11,"get_spacing","","Gets the spacing added between cell renderers.",167,{"inputs":[{"name":"cellareabox"}],"output":{"name":"i32"}}],[11,"pack_end","","Adds `renderer` to `self`, packed with reference to the end of `self`.",167,{"inputs":[{"name":"cellareabox"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[11,"pack_start","","Adds `renderer` to `self`, packed with reference to the start of `self`.",167,{"inputs":[{"name":"cellareabox"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"bool"}],"output":null}],[11,"set_spacing","","Sets the spacing to add between cell renderers in `self`.\n## `spacing`\nthe space to add between ``GtkCellRenderers``",167,{"inputs":[{"name":"cellareabox"},{"name":"i32"}],"output":null}],[11,"hash","","",168,null],[11,"fmt","","",168,{"inputs":[{"name":"cellareacontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",168,{"inputs":[{"name":"cellareacontext"}],"output":{"name":"cellareacontext"}}],[11,"static_type","","",168,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",168,{"inputs":[{"name":"cellareacontext"},{"name":"t"}],"output":{"name":"bool"}}],[11,"allocate","","Allocates a width and/or a height for all rows which are to be\nrendered with `self`.",168,{"inputs":[{"name":"cellareacontext"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_allocation","","Fetches the current allocation size for `self`.",168,null],[11,"get_area","","Fetches the `CellArea` this `self` was created by.",168,{"inputs":[{"name":"cellareacontext"}],"output":{"name":"option"}}],[11,"get_preferred_height","","Gets the accumulative preferred height for all rows which have been\nrequested with this context.",168,null],[11,"get_preferred_height_for_width","","Gets the accumulative preferred height for `width` for all rows\nwhich have been requested for the same said `width` with this context.",168,null],[11,"get_preferred_width","","Gets the accumulative preferred width for all rows which have been\nrequested with this context.",168,null],[11,"get_preferred_width_for_height","","Gets the accumulative preferred width for `height` for all rows which\nhave been requested for the same said `height` with this context.",168,null],[11,"push_preferred_height","","Causes the minimum and/or natural height to grow if the new\nproposed sizes exceed the current minimum and natural height.",168,{"inputs":[{"name":"cellareacontext"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"push_preferred_width","","Causes the minimum and/or natural width to grow if the new\nproposed sizes exceed the current minimum and natural width.",168,{"inputs":[{"name":"cellareacontext"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"reset","","Resets any previously cached request and allocation\ndata.",168,{"inputs":[{"name":"cellareacontext"}],"output":null}],[11,"hash","","",169,null],[11,"fmt","","",169,{"inputs":[{"name":"celleditable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",169,{"inputs":[{"name":"celleditable"}],"output":{"name":"celleditable"}}],[11,"static_type","","",169,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",169,{"inputs":[{"name":"celleditable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",170,null],[11,"fmt","","",170,{"inputs":[{"name":"celllayout"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"celllayout"}],"output":{"name":"celllayout"}}],[11,"static_type","","",170,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",170,{"inputs":[{"name":"celllayout"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",171,null],[11,"fmt","","",171,{"inputs":[{"name":"cellrenderer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",171,{"inputs":[{"name":"cellrenderer"}],"output":{"name":"cellrenderer"}}],[11,"static_type","","",171,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",171,{"inputs":[{"name":"cellrenderer"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",172,null],[11,"fmt","","",172,{"inputs":[{"name":"cellrendereraccel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",172,{"inputs":[{"name":"cellrendereraccel"}],"output":{"name":"cellrendereraccel"}}],[11,"static_type","","",172,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",172,{"inputs":[{"name":"cellrendereraccel"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererAccel`.",172,{"inputs":[],"output":{"name":"cellrendereraccel"}}],[11,"hash","","",173,null],[11,"fmt","","",173,{"inputs":[{"name":"cellrenderercombo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",173,{"inputs":[{"name":"cellrenderercombo"}],"output":{"name":"cellrenderercombo"}}],[11,"static_type","","",173,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",173,{"inputs":[{"name":"cellrenderercombo"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererCombo`.\nAdjust how text is drawn using object properties.\nObject properties can be set globally (with `gobject::Object::set`).\nAlso, with `TreeViewColumn`, you can bind a property to a value\nin a `TreeModel`. For example, you can bind the “text” property\non the cell renderer to a string value in the model, thus rendering\na different string in each row of the `TreeView`.",173,{"inputs":[],"output":{"name":"cellrenderercombo"}}],[11,"hash","","",174,null],[11,"fmt","","",174,{"inputs":[{"name":"cellrendererpixbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",174,{"inputs":[{"name":"cellrendererpixbuf"}],"output":{"name":"cellrendererpixbuf"}}],[11,"static_type","","",174,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",174,{"inputs":[{"name":"cellrendererpixbuf"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererPixbuf`. Adjust rendering\nparameters using object properties. Object properties can be set\nglobally (with `gobject::Object::set`). Also, with `TreeViewColumn`, you\ncan bind a property to a value in a `TreeModel`. For example, you\ncan bind the “pixbuf” property on the cell renderer to a pixbuf value\nin the model, thus rendering a different image in each row of the\n`TreeView`.",174,{"inputs":[],"output":{"name":"cellrendererpixbuf"}}],[11,"hash","","",175,null],[11,"fmt","","",175,{"inputs":[{"name":"cellrendererprogress"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",175,{"inputs":[{"name":"cellrendererprogress"}],"output":{"name":"cellrendererprogress"}}],[11,"static_type","","",175,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",175,{"inputs":[{"name":"cellrendererprogress"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererProgress`.",175,{"inputs":[],"output":{"name":"cellrendererprogress"}}],[11,"hash","","",176,null],[11,"fmt","","",176,{"inputs":[{"name":"cellrendererspin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",176,{"inputs":[{"name":"cellrendererspin"}],"output":{"name":"cellrendererspin"}}],[11,"static_type","","",176,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",176,{"inputs":[{"name":"cellrendererspin"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererSpin`.",176,{"inputs":[],"output":{"name":"cellrendererspin"}}],[11,"hash","","",177,null],[11,"fmt","","",177,{"inputs":[{"name":"cellrendererspinner"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",177,{"inputs":[{"name":"cellrendererspinner"}],"output":{"name":"cellrendererspinner"}}],[11,"static_type","","",177,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",177,{"inputs":[{"name":"cellrendererspinner"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a new cell renderer which will show a spinner to indicate\nactivity.",177,{"inputs":[],"output":{"name":"cellrendererspinner"}}],[11,"hash","","",178,null],[11,"fmt","","",178,{"inputs":[{"name":"cellrenderertext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",178,{"inputs":[{"name":"cellrenderertext"}],"output":{"name":"cellrenderertext"}}],[11,"static_type","","",178,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",178,{"inputs":[{"name":"cellrenderertext"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererText`. Adjust how text is drawn using\nobject properties. Object properties can be\nset globally (with `gobject::Object::set`). Also, with `TreeViewColumn`,\nyou can bind a property to a value in a `TreeModel`. For example,\nyou can bind the “text” property on the cell renderer to a string\nvalue in the model, thus rendering a different string in each row\nof the `TreeView`",178,{"inputs":[],"output":{"name":"cellrenderertext"}}],[11,"hash","","",179,null],[11,"fmt","","",179,{"inputs":[{"name":"cellrenderertoggle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"cellrenderertoggle"}],"output":{"name":"cellrenderertoggle"}}],[11,"static_type","","",179,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",179,{"inputs":[{"name":"cellrenderertoggle"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CellRendererToggle`. Adjust rendering\nparameters using object properties. Object properties can be set\nglobally (with `gobject::Object::set`). Also, with `TreeViewColumn`, you\ncan bind a property to a value in a `TreeModel`. For example, you\ncan bind the “active” property on the cell renderer to a boolean value\nin the model, thus causing the check button to reflect the state of\nthe model.",179,{"inputs":[],"output":{"name":"cellrenderertoggle"}}],[11,"get_activatable","","Returns whether the cell renderer is activatable. See\n`CellRendererToggle::set_activatable`.",179,{"inputs":[{"name":"cellrenderertoggle"}],"output":{"name":"bool"}}],[11,"get_active","","Returns whether the cell renderer is active. See\n`CellRendererToggle::set_active`.",179,{"inputs":[{"name":"cellrenderertoggle"}],"output":{"name":"bool"}}],[11,"get_radio","","Returns whether we’re rendering radio toggles rather than checkboxes.",179,{"inputs":[{"name":"cellrenderertoggle"}],"output":{"name":"bool"}}],[11,"set_activatable","","Makes the cell renderer activatable.\n## `setting`\nthe value to set.",179,{"inputs":[{"name":"cellrenderertoggle"},{"name":"bool"}],"output":null}],[11,"set_active","","Activates or deactivates a cell renderer.\n## `setting`\nthe value to set.",179,{"inputs":[{"name":"cellrenderertoggle"},{"name":"bool"}],"output":null}],[11,"set_radio","","If `radio` is `true`, the cell renderer renders a radio toggle\n(i.e. a toggle in a group of mutually-exclusive toggles).\nIf `false`, it renders a check toggle (a standalone boolean option).\nThis can be set globally for the cell renderer, or changed just\nbefore rendering each cell in the model (for `TreeView`, you set\nup a per-row setting using `TreeViewColumn` to associate model\ncolumns with cell renderer properties).\n## `radio`\n`true` to make the toggle look like a radio button",179,{"inputs":[{"name":"cellrenderertoggle"},{"name":"bool"}],"output":null}],[11,"hash","","",180,null],[11,"fmt","","",180,{"inputs":[{"name":"checkbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",180,{"inputs":[{"name":"checkbutton"}],"output":{"name":"checkbutton"}}],[11,"static_type","","",180,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",180,{"inputs":[{"name":"checkbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CheckButton`.",180,{"inputs":[],"output":{"name":"checkbutton"}}],[11,"new_with_label","","Creates a new `CheckButton` with a `Label` to the right of it.\n## `label`\nthe text for the check button.",180,{"inputs":[{"name":"str"}],"output":{"name":"checkbutton"}}],[11,"new_with_mnemonic","","Creates a new `CheckButton` containing a label. The label\nwill be created using `Label::new_with_mnemonic`, so underscores\nin `label` indicate the mnemonic for the check button.\n## `label`\nThe text of the button, with an underscore in front of the\n mnemonic character",180,{"inputs":[{"name":"str"}],"output":{"name":"checkbutton"}}],[11,"hash","","",181,null],[11,"fmt","","",181,{"inputs":[{"name":"checkmenuitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",181,{"inputs":[{"name":"checkmenuitem"}],"output":{"name":"checkmenuitem"}}],[11,"static_type","","",181,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",181,{"inputs":[{"name":"checkmenuitem"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `CheckMenuItem`.",181,{"inputs":[],"output":{"name":"checkmenuitem"}}],[11,"new_with_label","","Creates a new `CheckMenuItem` with a label.\n## `label`\nthe string to use for the label.",181,{"inputs":[{"name":"str"}],"output":{"name":"checkmenuitem"}}],[11,"new_with_mnemonic","","Creates a new `CheckMenuItem` containing a label. The label\nwill be created using `Label::new_with_mnemonic`, so underscores\nin `label` indicate the mnemonic for the menu item.\n## `label`\nThe text of the button, with an underscore in front of the\n character",181,{"inputs":[{"name":"str"}],"output":{"name":"checkmenuitem"}}],[11,"get_active","","Returns whether the check menu item is active. See\ngtk_check_menu_item_set_active ().",181,{"inputs":[{"name":"checkmenuitem"}],"output":{"name":"bool"}}],[11,"get_draw_as_radio","","Returns whether `self` looks like a `RadioMenuItem`",181,{"inputs":[{"name":"checkmenuitem"}],"output":{"name":"bool"}}],[11,"get_inconsistent","","Retrieves the value set by `CheckMenuItem::set_inconsistent`.",181,{"inputs":[{"name":"checkmenuitem"}],"output":{"name":"bool"}}],[11,"set_active","","Sets the active state of the menu item’s check box.\n## `is_active`\nboolean value indicating whether the check box is active.",181,{"inputs":[{"name":"checkmenuitem"},{"name":"bool"}],"output":null}],[11,"set_draw_as_radio","","Sets whether `self` is drawn like a `RadioMenuItem`\n## `draw_as_radio`\nwhether `self` is drawn like a `RadioMenuItem`",181,{"inputs":[{"name":"checkmenuitem"},{"name":"bool"}],"output":null}],[11,"set_inconsistent","","If the user has selected a range of elements (such as some text or\nspreadsheet cells) that are affected by a boolean setting, and the\ncurrent values in that range are inconsistent, you may want to\ndisplay the check in an “in between” state. This function turns on\n“in between” display. Normally you would turn off the inconsistent\nstate again if the user explicitly selects a setting. This has to be\ndone manually, `CheckMenuItem::set_inconsistent` only affects\nvisual appearance, it doesn’t affect the semantics of the widget.\n## `setting`\n`true` to display an “inconsistent” third state check",181,{"inputs":[{"name":"checkmenuitem"},{"name":"bool"}],"output":null}],[11,"toggled","","Emits the `CheckMenuItem::toggled` signal.",181,{"inputs":[{"name":"checkmenuitem"}],"output":null}],[11,"hash","","",182,null],[11,"fmt","","",182,{"inputs":[{"name":"colorbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",182,{"inputs":[{"name":"colorbutton"}],"output":{"name":"colorbutton"}}],[11,"static_type","","",182,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",182,{"inputs":[{"name":"colorbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new color button.",182,{"inputs":[],"output":{"name":"colorbutton"}}],[11,"get_alpha","","Returns the current alpha value.",182,{"inputs":[{"name":"colorbutton"}],"output":{"name":"u16"}}],[11,"get_title","","Gets the title of the color selection dialog.",182,{"inputs":[{"name":"colorbutton"}],"output":{"name":"option"}}],[11,"get_use_alpha","","Does the color selection dialog use the alpha channel ?",182,{"inputs":[{"name":"colorbutton"}],"output":{"name":"bool"}}],[11,"set_alpha","","Sets the current opacity to be `alpha`.",182,{"inputs":[{"name":"colorbutton"},{"name":"u16"}],"output":null}],[11,"set_title","","Sets the title for the color selection dialog.\n## `title`\nString containing new window title",182,{"inputs":[{"name":"colorbutton"},{"name":"str"}],"output":null}],[11,"set_use_alpha","","Sets whether or not the color button should use the alpha channel.",182,{"inputs":[{"name":"colorbutton"},{"name":"bool"}],"output":null}],[11,"hash","","",183,null],[11,"fmt","","",183,{"inputs":[{"name":"colorchooserdialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",183,{"inputs":[{"name":"colorchooserdialog"}],"output":{"name":"colorchooserdialog"}}],[11,"static_type","","",183,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",183,{"inputs":[{"name":"colorchooserdialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ColorChooserDialog`.\n## `title`\nTitle of the dialog, or `None`\n## `parent`\nTransient parent of the dialog, or `None`",183,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"colorchooserdialog"}}],[11,"hash","","",184,null],[11,"fmt","","",184,{"inputs":[{"name":"colorchooserwidget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",184,{"inputs":[{"name":"colorchooserwidget"}],"output":{"name":"colorchooserwidget"}}],[11,"static_type","","",184,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",184,{"inputs":[{"name":"colorchooserwidget"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ColorChooserWidget`.",184,{"inputs":[],"output":{"name":"colorchooserwidget"}}],[11,"hash","","",185,null],[11,"fmt","","",185,{"inputs":[{"name":"combobox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"combobox"}],"output":{"name":"combobox"}}],[11,"static_type","","",185,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",185,{"inputs":[{"name":"combobox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `ComboBox`.",185,{"inputs":[],"output":{"name":"combobox"}}],[11,"new_with_area","","Creates a new empty `ComboBox` using `area` to layout cells.\n## `area`\nthe `CellArea` to use to layout cell renderers",185,{"inputs":[{"name":"t"}],"output":{"name":"combobox"}}],[11,"new_with_area_and_entry","","Creates a new empty `ComboBox` with an entry.",185,{"inputs":[{"name":"t"}],"output":{"name":"combobox"}}],[11,"new_with_entry","","Creates a new empty `ComboBox` with an entry.",185,{"inputs":[],"output":{"name":"combobox"}}],[11,"new_with_model","","Creates a new `ComboBox` with the model initialized to `model`.\n## `model`\nA `TreeModel`.",185,{"inputs":[{"name":"t"}],"output":{"name":"combobox"}}],[11,"new_with_model_and_entry","","Creates a new empty `ComboBox` with an entry\nand with the model initialized to `model`.\n## `model`\nA `TreeModel`",185,{"inputs":[{"name":"t"}],"output":{"name":"combobox"}}],[11,"hash","","",186,null],[11,"fmt","","",186,{"inputs":[{"name":"comboboxtext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",186,{"inputs":[{"name":"comboboxtext"}],"output":{"name":"comboboxtext"}}],[11,"static_type","","",186,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",186,{"inputs":[{"name":"comboboxtext"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ComboBoxText`, which is a `ComboBox` just displaying\nstrings.",186,{"inputs":[],"output":{"name":"comboboxtext"}}],[11,"new_with_entry","","Creates a new `ComboBoxText`, which is a `ComboBox` just displaying\nstrings. The combo box created by this function has an entry.",186,{"inputs":[],"output":{"name":"comboboxtext"}}],[11,"append","","Appends `text` to the list of strings stored in `self`.\nIf `id` is non-`None` then it is used as the ID of the row.",186,{"inputs":[{"name":"comboboxtext"},{"name":"option"},{"name":"str"}],"output":null}],[11,"append_text","","Appends `text` to the list of strings stored in `self`.",186,{"inputs":[{"name":"comboboxtext"},{"name":"str"}],"output":null}],[11,"get_active_text","","Returns the currently active string in `self`, or `None`\nif none is selected. If `self` contains an entry, this\nfunction will return its contents (which will not necessarily\nbe an item from the list).",186,{"inputs":[{"name":"comboboxtext"}],"output":{"name":"option"}}],[11,"insert","","Inserts `text` at `position` in the list of strings stored in `self`.\nIf `id` is non-`None` then it is used as the ID of the row. See\n`ComboBox:id-column`.",186,{"inputs":[{"name":"comboboxtext"},{"name":"i32"},{"name":"option"},{"name":"str"}],"output":null}],[11,"insert_text","","Inserts `text` at `position` in the list of strings stored in `self`.",186,{"inputs":[{"name":"comboboxtext"},{"name":"i32"},{"name":"str"}],"output":null}],[11,"prepend","","Prepends `text` to the list of strings stored in `self`.\nIf `id` is non-`None` then it is used as the ID of the row.",186,{"inputs":[{"name":"comboboxtext"},{"name":"option"},{"name":"str"}],"output":null}],[11,"prepend_text","","Prepends `text` to the list of strings stored in `self`.",186,{"inputs":[{"name":"comboboxtext"},{"name":"str"}],"output":null}],[11,"remove","","Removes the string at `position` from `self`.\n## `position`\nIndex of the item to remove",186,{"inputs":[{"name":"comboboxtext"},{"name":"i32"}],"output":null}],[11,"remove_all","","Removes all the text entries from the combo box.",186,{"inputs":[{"name":"comboboxtext"}],"output":null}],[11,"hash","","",187,null],[11,"fmt","","",187,{"inputs":[{"name":"container"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",187,{"inputs":[{"name":"container"}],"output":{"name":"container"}}],[11,"static_type","","",187,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",187,{"inputs":[{"name":"container"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",188,null],[11,"fmt","","",188,{"inputs":[{"name":"cssprovider"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",188,{"inputs":[{"name":"cssprovider"}],"output":{"name":"cssprovider"}}],[11,"static_type","","",188,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",188,{"inputs":[{"name":"cssprovider"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `CssProvider`.",188,{"inputs":[],"output":{"name":"cssprovider"}}],[11,"load_from_path","","Loads the data contained in `path` into `self`, making it clear\nany previously loaded information.\n## `path`\nthe path of a filename to load, in the GLib filename encoding",188,{"inputs":[{"name":"cssprovider"},{"name":"str"}],"output":{"name":"result"}}],[11,"load_from_resource","","Loads the data contained in the resource at `resource_path` into\nthe `CssProvider`, clearing any previously loaded information.",188,{"inputs":[{"name":"cssprovider"},{"name":"str"}],"output":null}],[11,"get_default","","Returns the provider containing the style settings used as a\nfallback for all widgets.",188,{"inputs":[],"output":{"name":"option"}}],[11,"get_named","","Loads a theme from the usual theme paths\n## `name`\nA theme name\n## `variant`\nvariant to load, for example, &quot;dark&quot;, or\n `None` for the default",188,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"option"}}],[11,"fmt","","",188,{"inputs":[{"name":"cssprovider"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",189,null],[11,"fmt","","",189,{"inputs":[{"name":"dialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",189,{"inputs":[{"name":"dialog"}],"output":{"name":"dialog"}}],[11,"static_type","","",189,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",189,{"inputs":[{"name":"dialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new dialog box.",189,{"inputs":[],"output":{"name":"dialog"}}],[11,"hash","","",190,null],[11,"fmt","","",190,{"inputs":[{"name":"drawingarea"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",190,{"inputs":[{"name":"drawingarea"}],"output":{"name":"drawingarea"}}],[11,"static_type","","",190,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",190,{"inputs":[{"name":"drawingarea"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new drawing area.",190,{"inputs":[],"output":{"name":"drawingarea"}}],[11,"hash","","",191,null],[11,"fmt","","",191,{"inputs":[{"name":"editable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",191,{"inputs":[{"name":"editable"}],"output":{"name":"editable"}}],[11,"static_type","","",191,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",191,{"inputs":[{"name":"editable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",192,null],[11,"fmt","","",192,{"inputs":[{"name":"entry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",192,{"inputs":[{"name":"entry"}],"output":{"name":"entry"}}],[11,"static_type","","",192,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",192,{"inputs":[{"name":"entry"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new entry.",192,{"inputs":[],"output":{"name":"entry"}}],[11,"new_with_buffer","","Creates a new entry with the specified text buffer.\n## `buffer`\nThe buffer to use for the new `Entry`.",192,{"inputs":[{"name":"entrybuffer"}],"output":{"name":"entry"}}],[11,"hash","","",193,null],[11,"fmt","","",193,{"inputs":[{"name":"entrycompletion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"entrycompletion"}}],[11,"static_type","","",193,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",193,{"inputs":[{"name":"entrycompletion"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `EntryCompletion` object.",193,{"inputs":[],"output":{"name":"entrycompletion"}}],[11,"new_with_area","","Creates a new `EntryCompletion` object using the\nspecified `area` to layout cells in the underlying\n`TreeViewColumn` for the drop-down menu.\n## `area`\nthe `CellArea` used to layout cells",193,{"inputs":[{"name":"t"}],"output":{"name":"entrycompletion"}}],[11,"complete","","Requests a completion operation, or in other words a refiltering of the\ncurrent list with completions, using the current key. The completion list\nview will be updated accordingly.",193,{"inputs":[{"name":"entrycompletion"}],"output":null}],[11,"compute_prefix","","Computes the common prefix that is shared by all rows in `self`\nthat start with `key`. If no row matches `key`, `None` will be returned.\nNote that a text column must have been set for this function to work,\nsee `EntryCompletion::set_text_column` for details.\n## `key`\nThe text to complete for",193,{"inputs":[{"name":"entrycompletion"},{"name":"str"}],"output":{"name":"option"}}],[11,"delete_action","","Deletes the action at `index_` from `self`’s action list.\n## `index_`\nthe index of the item to delete",193,{"inputs":[{"name":"entrycompletion"},{"name":"i32"}],"output":null}],[11,"get_completion_prefix","","Get the original text entered by the user that triggered\nthe completion or `None` if there’s no completion ongoing.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"option"}}],[11,"get_entry","","Gets the entry `self` has been attached to.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"option"}}],[11,"get_inline_completion","","Returns whether the common prefix of the possible completions should\nbe automatically inserted in the entry.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"bool"}}],[11,"get_inline_selection","","Returns `true` if inline-selection mode is turned on.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"bool"}}],[11,"get_minimum_key_length","","Returns the minimum key length as set for `self`.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"i32"}}],[11,"get_model","","Returns the model the `EntryCompletion` is using as data source.\nReturns `None` if the model is unset.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"option"}}],[11,"get_popup_completion","","Returns whether the completions should be presented in a popup window.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"bool"}}],[11,"get_popup_set_width","","Returns whether the completion popup window will be resized to the\nwidth of the entry.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"bool"}}],[11,"get_popup_single_match","","Returns whether the completion popup window will appear even if there is\nonly a single match.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"bool"}}],[11,"get_text_column","","Returns the column in the model of `self` to get strings from.",193,{"inputs":[{"name":"entrycompletion"}],"output":{"name":"i32"}}],[11,"insert_action_markup","","Inserts an action in `self`’s action item list at position `index_`\nwith markup `markup`.\n## `index_`\nthe index of the item to insert\n## `markup`\nmarkup of the item to insert",193,{"inputs":[{"name":"entrycompletion"},{"name":"i32"},{"name":"str"}],"output":null}],[11,"insert_action_text","","Inserts an action in `self`’s action item list at position `index_`\nwith text `text`. If you want the action item to have markup, use\n`EntryCompletion::insert_action_markup`.\n## `index_`\nthe index of the item to insert\n## `text`\ntext of the item to insert",193,{"inputs":[{"name":"entrycompletion"},{"name":"i32"},{"name":"str"}],"output":null}],[11,"insert_prefix","","Requests a prefix insertion.",193,{"inputs":[{"name":"entrycompletion"}],"output":null}],[11,"set_inline_completion","","Sets whether the common prefix of the possible completions should\nbe automatically inserted in the entry.\n## `inline_completion`\n`true` to do inline completion",193,{"inputs":[{"name":"entrycompletion"},{"name":"bool"}],"output":null}],[11,"set_inline_selection","","Sets whether it is possible to cycle through the possible completions\ninside the entry.\n## `inline_selection`\n`true` to do inline selection",193,{"inputs":[{"name":"entrycompletion"},{"name":"bool"}],"output":null}],[11,"set_minimum_key_length","","Requires the length of the search key for `self` to be at least\n`length`. This is useful for long lists, where completing using a small\nkey takes a lot of time and will come up with meaningless results anyway\n(ie, a too large dataset).\n## `length`\nthe minimum length of the key in order to start completing",193,{"inputs":[{"name":"entrycompletion"},{"name":"i32"}],"output":null}],[11,"set_model","","Sets the model for a `EntryCompletion`. If `self` already has\na model set, it will remove it before setting the new model.\nIf model is `None`, then it will unset the model.\n## `model`\nthe `TreeModel`",193,{"inputs":[{"name":"entrycompletion"},{"name":"option"}],"output":null}],[11,"set_popup_completion","","Sets whether the completions should be presented in a popup window.\n## `popup_completion`\n`true` to do popup completion",193,{"inputs":[{"name":"entrycompletion"},{"name":"bool"}],"output":null}],[11,"set_popup_set_width","","Sets whether the completion popup window will be resized to be the same\nwidth as the entry.\n## `popup_set_width`\n`true` to make the width of the popup the same as the entry",193,{"inputs":[{"name":"entrycompletion"},{"name":"bool"}],"output":null}],[11,"set_popup_single_match","","Sets whether the completion popup window will appear even if there is\nonly a single match. You may want to set this to `false` if you\nare using [inline completion][`EntryCompletion`--inline-completion].\n## `popup_single_match`\n`true` if the popup should appear even for a single\n match",193,{"inputs":[{"name":"entrycompletion"},{"name":"bool"}],"output":null}],[11,"set_text_column","","Convenience function for setting up the most used case of this code: a\ncompletion list with just strings. This function will set up `self`\nto have a list displaying all (and just) strings in the completion list,\nand to get those strings from `column` in the model of `self`.",193,{"inputs":[{"name":"entrycompletion"},{"name":"i32"}],"output":null}],[11,"hash","","",194,null],[11,"fmt","","",194,{"inputs":[{"name":"eventbox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",194,{"inputs":[{"name":"eventbox"}],"output":{"name":"eventbox"}}],[11,"static_type","","",194,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",194,{"inputs":[{"name":"eventbox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `EventBox`.",194,{"inputs":[],"output":{"name":"eventbox"}}],[11,"get_above_child","","Returns whether the event box window is above or below the\nwindows of its child. See `EventBox::set_above_child`\nfor details.",194,{"inputs":[{"name":"eventbox"}],"output":{"name":"bool"}}],[11,"get_visible_window","","Returns whether the event box has a visible window.\nSee `EventBox::set_visible_window` for details.",194,{"inputs":[{"name":"eventbox"}],"output":{"name":"bool"}}],[11,"set_above_child","","Set whether the event box window is positioned above the windows\nof its child, as opposed to below it. If the window is above, all\nevents inside the event box will go to the event box. If the window\nis below, events in windows of child widgets will first got to that\nwidget, and then to its parents.",194,{"inputs":[{"name":"eventbox"},{"name":"bool"}],"output":null}],[11,"set_visible_window","","Set whether the event box uses a visible or invisible child\nwindow. The default is to use visible windows.",194,{"inputs":[{"name":"eventbox"},{"name":"bool"}],"output":null}],[11,"hash","","",195,null],[11,"fmt","","",195,{"inputs":[{"name":"eventcontroller"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",195,{"inputs":[{"name":"eventcontroller"}],"output":{"name":"eventcontroller"}}],[11,"static_type","","",195,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",195,{"inputs":[{"name":"eventcontroller"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",196,null],[11,"fmt","","",196,{"inputs":[{"name":"expander"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",196,{"inputs":[{"name":"expander"}],"output":{"name":"expander"}}],[11,"static_type","","",196,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",196,{"inputs":[{"name":"expander"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new expander using `label` as the text of the label.\n## `label`\nthe text of the label",196,{"inputs":[{"name":"option"}],"output":{"name":"expander"}}],[11,"new_with_mnemonic","","Creates a new expander using `label` as the text of the label.\nIf characters in `label` are preceded by an underscore, they are underlined.\nIf you need a literal underscore character in a label, use “__” (two\nunderscores). The first underlined character represents a keyboard\naccelerator called a mnemonic.\nPressing Alt and that key activates the button.\n## `label`\nthe text of the label with an underscore\n in front of the mnemonic character",196,{"inputs":[{"name":"str"}],"output":{"name":"expander"}}],[11,"get_expanded","","Queries a `Expander` and returns its current state. Returns `true`\nif the child widget is revealed.",196,{"inputs":[{"name":"expander"}],"output":{"name":"bool"}}],[11,"get_label","","Fetches the text from a label widget including any embedded\nunderlines indicating mnemonics and Pango markup, as set by\n`Expander::set_label`. If the label text has not been set the\nreturn value will be `None`. This will be the case if you create an\nempty button with `Button::new` to use as a container.",196,{"inputs":[{"name":"expander"}],"output":{"name":"option"}}],[11,"get_label_fill","","Returns whether the label widget will fill all available\nhorizontal space allocated to `self`.",196,{"inputs":[{"name":"expander"}],"output":{"name":"bool"}}],[11,"get_label_widget","","Retrieves the label widget for the frame. See\n`Expander::set_label_widget`.",196,{"inputs":[{"name":"expander"}],"output":{"name":"option"}}],[11,"get_resize_toplevel","","Returns whether the expander will resize the toplevel widget\ncontaining the expander upon resizing and collpasing.",196,{"inputs":[{"name":"expander"}],"output":{"name":"bool"}}],[11,"get_spacing","","Gets the value set by `Expander::set_spacing`.",196,{"inputs":[{"name":"expander"}],"output":{"name":"i32"}}],[11,"get_use_markup","","Returns whether the label’s text is interpreted as marked up with\nthe [Pango text markup language][PangoMarkupFormat].\nSee `Expander::set_use_markup`.",196,{"inputs":[{"name":"expander"}],"output":{"name":"bool"}}],[11,"get_use_underline","","Returns whether an embedded underline in the expander label\nindicates a mnemonic. See `Expander::set_use_underline`.",196,{"inputs":[{"name":"expander"}],"output":{"name":"bool"}}],[11,"set_expanded","","Sets the state of the expander. Set to `true`, if you want\nthe child widget to be revealed, and `false` if you want the\nchild widget to be hidden.\n## `expanded`\nwhether the child widget is revealed",196,{"inputs":[{"name":"expander"},{"name":"bool"}],"output":null}],[11,"set_label","","Sets the text of the label of the expander to `label`.",196,{"inputs":[{"name":"expander"},{"name":"option"}],"output":null}],[11,"set_label_fill","","Sets whether the label widget should fill all available\nhorizontal space allocated to `self`.\n## `label_fill`\n`true` if the label should should fill\n all available horizontal space",196,{"inputs":[{"name":"expander"},{"name":"bool"}],"output":null}],[11,"set_label_widget","","Set the label widget for the expander. This is the widget\nthat will appear embedded alongside the expander arrow.\n## `label_widget`\nthe new label widget",196,{"inputs":[{"name":"expander"},{"name":"option"}],"output":null}],[11,"set_resize_toplevel","","Sets whether the expander will resize the toplevel widget\ncontaining the expander upon resizing and collpasing.\n## `resize_toplevel`\nwhether to resize the toplevel",196,{"inputs":[{"name":"expander"},{"name":"bool"}],"output":null}],[11,"set_spacing","","Sets the spacing field of `self`, which is the number of\npixels to place between expander and the child.\n## `spacing`\ndistance between the expander and child in pixels",196,{"inputs":[{"name":"expander"},{"name":"i32"}],"output":null}],[11,"set_use_markup","","Sets whether the text of the label contains markup in\n[Pango’s text markup language][PangoMarkupFormat].\nSee `Label::set_markup`.\n## `use_markup`\n`true` if the label’s text should be parsed for markup",196,{"inputs":[{"name":"expander"},{"name":"bool"}],"output":null}],[11,"set_use_underline","","If true, an underline in the text of the expander label indicates\nthe next character should be used for the mnemonic accelerator key.\n## `use_underline`\n`true` if underlines in the text indicate mnemonics",196,{"inputs":[{"name":"expander"},{"name":"bool"}],"output":null}],[11,"hash","","",197,null],[11,"fmt","","",197,{"inputs":[{"name":"filechooser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",197,{"inputs":[{"name":"filechooser"}],"output":{"name":"filechooser"}}],[11,"static_type","","",197,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",197,{"inputs":[{"name":"filechooser"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",198,null],[11,"fmt","","",198,{"inputs":[{"name":"filechooserdialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",198,{"inputs":[{"name":"filechooserdialog"}],"output":{"name":"filechooserdialog"}}],[11,"static_type","","",198,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",198,{"inputs":[{"name":"filechooserdialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",199,null],[11,"fmt","","",199,{"inputs":[{"name":"filechooserwidget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",199,{"inputs":[{"name":"filechooserwidget"}],"output":{"name":"filechooserwidget"}}],[11,"static_type","","",199,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",199,{"inputs":[{"name":"filechooserwidget"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FileChooserWidget`. This is a file chooser widget that can\nbe embedded in custom windows, and it is the same widget that is used by\n`FileChooserDialog`.\n## `action`\nOpen or save mode for the widget",199,{"inputs":[{"name":"filechooseraction"}],"output":{"name":"filechooserwidget"}}],[11,"hash","","",200,null],[11,"fmt","","",200,{"inputs":[{"name":"filefilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",200,{"inputs":[{"name":"filefilter"}],"output":{"name":"filefilter"}}],[11,"static_type","","",200,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",200,{"inputs":[{"name":"filefilter"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FileFilter` with no rules added to it.\nSuch a filter doesn’t accept any files, so is not\nparticularly useful until you add rules with\n`FileFilter::add_mime_type`, `FileFilter::add_pattern`,\nor `FileFilter::add_custom`. To create a filter\nthat accepts any file, use:",200,{"inputs":[],"output":{"name":"filefilter"}}],[11,"add_mime_type","","Adds a rule allowing a given mime type to `self`.\n## `mime_type`\nname of a MIME type",200,{"inputs":[{"name":"filefilter"},{"name":"str"}],"output":null}],[11,"add_pattern","","Adds a rule allowing a shell style glob to a filter.\n## `pattern`\na shell style glob",200,{"inputs":[{"name":"filefilter"},{"name":"str"}],"output":null}],[11,"add_pixbuf_formats","","Adds a rule allowing image files in the formats supported\nby `gdk_pixbuf::Pixbuf`.",200,{"inputs":[{"name":"filefilter"}],"output":null}],[11,"get_name","","Gets the human-readable name for the filter. See `FileFilter::set_name`.",200,{"inputs":[{"name":"filefilter"}],"output":{"name":"option"}}],[11,"get_needed","","Gets the fields that need to be filled in for the `FileFilterInfo`\npassed to `FileFilter::filter`",200,{"inputs":[{"name":"filefilter"}],"output":{"name":"filefilterflags"}}],[11,"set_name","","Sets the human-readable name of the filter; this is the string\nthat will be displayed in the file selector user interface if\nthere is a selectable list of filters.\n## `name`\nthe human-readable-name for the filter, or `None`\n to remove any existing name.",200,{"inputs":[{"name":"filefilter"},{"name":"option"}],"output":null}],[11,"hash","","",201,null],[11,"fmt","","",201,{"inputs":[{"name":"fixed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",201,{"inputs":[{"name":"fixed"}],"output":{"name":"fixed"}}],[11,"static_type","","",201,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",201,{"inputs":[{"name":"fixed"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Fixed`.",201,{"inputs":[],"output":{"name":"fixed"}}],[11,"move_","","",201,{"inputs":[{"name":"fixed"},{"name":"t"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"put","","Adds a widget to a `Fixed` container at the given position.\n## `widget`\nthe widget to add.\n## `x`\nthe horizontal position to place the widget at.\n## `y`\nthe vertical position to place the widget at.",201,{"inputs":[{"name":"fixed"},{"name":"t"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"hash","","",202,null],[11,"fmt","","",202,{"inputs":[{"name":"flowbox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"flowbox"}}],[11,"static_type","","",202,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",202,{"inputs":[{"name":"flowbox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `FlowBox`.",202,{"inputs":[],"output":{"name":"flowbox"}}],[11,"get_activate_on_single_click","","Returns whether children activate on single clicks.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"bool"}}],[11,"get_child_at_index","","Gets the nth child in the `self`.",202,{"inputs":[{"name":"flowbox"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_column_spacing","","Gets the horizontal spacing.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"u32"}}],[11,"get_homogeneous","","Returns whether the box is homogeneous (all children are the\nsame size). See `BoxExt::set_homogeneous`.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"bool"}}],[11,"get_max_children_per_line","","Gets the maximum number of children per line.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"u32"}}],[11,"get_min_children_per_line","","Gets the minimum number of children per line.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"u32"}}],[11,"get_row_spacing","","Gets the vertical spacing.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"u32"}}],[11,"get_selected_children","","Creates a list of all selected children.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"vec"}}],[11,"get_selection_mode","","Gets the selection mode of `self`.",202,{"inputs":[{"name":"flowbox"}],"output":{"name":"selectionmode"}}],[11,"insert","","Inserts the `widget` into `self` at `position`.",202,{"inputs":[{"name":"flowbox"},{"name":"t"},{"name":"i32"}],"output":null}],[11,"invalidate_filter","","Updates the filtering for all children.",202,{"inputs":[{"name":"flowbox"}],"output":null}],[11,"invalidate_sort","","Updates the sorting for all children.",202,{"inputs":[{"name":"flowbox"}],"output":null}],[11,"select_all","","Select all children of `self`, if the selection\nmode allows it.",202,{"inputs":[{"name":"flowbox"}],"output":null}],[11,"select_child","","Selects a single child of `self`, if the selection\nmode allows it.",202,{"inputs":[{"name":"flowbox"},{"name":"flowboxchild"}],"output":null}],[11,"set_activate_on_single_click","","If `single` is `true`, children will be activated when you click\non them, otherwise you need to double-click.",202,{"inputs":[{"name":"flowbox"},{"name":"bool"}],"output":null}],[11,"set_column_spacing","","Sets the horizontal space to add between children.\nSee the `FlowBox:column-spacing` property.",202,{"inputs":[{"name":"flowbox"},{"name":"u32"}],"output":null}],[11,"set_hadjustment","","Hooks up an adjustment to focus handling in `self`.\nThe adjustment is also used for autoscrolling during\nrubberband selection. See `ScrolledWindow::get_hadjustment`\nfor a typical way of obtaining the adjustment, and\n`FlowBox::set_vadjustment`for setting the vertical\nadjustment.",202,{"inputs":[{"name":"flowbox"},{"name":"adjustment"}],"output":null}],[11,"set_homogeneous","","Sets the `FlowBox:homogeneous` property of `self`, controlling\nwhether or not all children of `self` are given equal space\nin the box.",202,{"inputs":[{"name":"flowbox"},{"name":"bool"}],"output":null}],[11,"set_max_children_per_line","","Sets the maximum number of children to request and\nallocate space for in `self`’s orientation.",202,{"inputs":[{"name":"flowbox"},{"name":"u32"}],"output":null}],[11,"set_min_children_per_line","","Sets the minimum number of children to line up\nin `self`’s orientation before flowing.",202,{"inputs":[{"name":"flowbox"},{"name":"u32"}],"output":null}],[11,"set_row_spacing","","Sets the vertical space to add between children.\nSee the `FlowBox:row-spacing` property.",202,{"inputs":[{"name":"flowbox"},{"name":"u32"}],"output":null}],[11,"set_selection_mode","","Sets how selection works in `self`.\nSee `SelectionMode` for details.",202,{"inputs":[{"name":"flowbox"},{"name":"selectionmode"}],"output":null}],[11,"set_vadjustment","","Hooks up an adjustment to focus handling in `self`.\nThe adjustment is also used for autoscrolling during\nrubberband selection. See `ScrolledWindow::get_vadjustment`\nfor a typical way of obtaining the adjustment, and\n`FlowBox::set_hadjustment`for setting the horizontal\nadjustment.",202,{"inputs":[{"name":"flowbox"},{"name":"adjustment"}],"output":null}],[11,"unselect_all","","Unselect all children of `self`, if the selection\nmode allows it.",202,{"inputs":[{"name":"flowbox"}],"output":null}],[11,"unselect_child","","Unselects a single child of `self`, if the selection\nmode allows it.",202,{"inputs":[{"name":"flowbox"},{"name":"flowboxchild"}],"output":null}],[11,"hash","","",203,null],[11,"fmt","","",203,{"inputs":[{"name":"flowboxchild"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",203,{"inputs":[{"name":"flowboxchild"}],"output":{"name":"flowboxchild"}}],[11,"static_type","","",203,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",203,{"inputs":[{"name":"flowboxchild"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FlowBoxChild`, to be used as a child\nof a `FlowBox`.",203,{"inputs":[],"output":{"name":"flowboxchild"}}],[11,"changed","","Marks `self` as changed, causing any state that depends on this\nto be updated. This affects sorting and filtering.",203,{"inputs":[{"name":"flowboxchild"}],"output":null}],[11,"get_index","","Gets the current index of the `self` in its `FlowBox` container.",203,{"inputs":[{"name":"flowboxchild"}],"output":{"name":"i32"}}],[11,"is_selected","","Returns whether the `self` is currently selected in its\n`FlowBox` container.",203,{"inputs":[{"name":"flowboxchild"}],"output":{"name":"bool"}}],[11,"hash","","",204,null],[11,"fmt","","",204,{"inputs":[{"name":"fontbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",204,{"inputs":[{"name":"fontbutton"}],"output":{"name":"fontbutton"}}],[11,"static_type","","",204,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",204,{"inputs":[{"name":"fontbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new font picker widget.",204,{"inputs":[],"output":{"name":"fontbutton"}}],[11,"new_with_font","","Creates a new font picker widget.\n## `fontname`\nName of font to display in font chooser dialog",204,{"inputs":[{"name":"str"}],"output":{"name":"fontbutton"}}],[11,"get_font_name","","Retrieves the name of the currently selected font. This name includes\nstyle and size information as well. If you want to render something\nwith the font, use this string with `pango::FontDescription::from_string` .\nIf you’re interested in peeking certain values (family name,\nstyle, size, weight) just query these properties from the\n`pango::FontDescription` object.",204,{"inputs":[{"name":"fontbutton"}],"output":{"name":"option"}}],[11,"get_show_size","","Returns whether the font size will be shown in the label.",204,{"inputs":[{"name":"fontbutton"}],"output":{"name":"bool"}}],[11,"get_show_style","","Returns whether the name of the font style will be shown in the label.",204,{"inputs":[{"name":"fontbutton"}],"output":{"name":"bool"}}],[11,"get_title","","Retrieves the title of the font chooser dialog.",204,{"inputs":[{"name":"fontbutton"}],"output":{"name":"option"}}],[11,"get_use_font","","Returns whether the selected font is used in the label.",204,{"inputs":[{"name":"fontbutton"}],"output":{"name":"bool"}}],[11,"get_use_size","","Returns whether the selected size is used in the label.",204,{"inputs":[{"name":"fontbutton"}],"output":{"name":"bool"}}],[11,"set_font_name","","Sets or updates the currently-displayed font in font picker dialog.\n## `fontname`\nName of font to display in font chooser dialog",204,{"inputs":[{"name":"fontbutton"},{"name":"str"}],"output":{"name":"bool"}}],[11,"set_show_size","","If `show_size` is `true`, the font size will be displayed along with the name of the selected font.\n## `show_size`\n`true` if font size should be displayed in dialog.",204,{"inputs":[{"name":"fontbutton"},{"name":"bool"}],"output":null}],[11,"set_show_style","","If `show_style` is `true`, the font style will be displayed along with name of the selected font.\n## `show_style`\n`true` if font style should be displayed in label.",204,{"inputs":[{"name":"fontbutton"},{"name":"bool"}],"output":null}],[11,"set_title","","Sets the title for the font chooser dialog.\n## `title`\na string containing the font chooser dialog title",204,{"inputs":[{"name":"fontbutton"},{"name":"str"}],"output":null}],[11,"set_use_font","","If `use_font` is `true`, the font name will be written using the selected font.\n## `use_font`\nIf `true`, font name will be written using font chosen.",204,{"inputs":[{"name":"fontbutton"},{"name":"bool"}],"output":null}],[11,"set_use_size","","If `use_size` is `true`, the font name will be written using the selected size.\n## `use_size`\nIf `true`, font name will be written using the selected size.",204,{"inputs":[{"name":"fontbutton"},{"name":"bool"}],"output":null}],[11,"hash","","",205,null],[11,"fmt","","",205,{"inputs":[{"name":"fontchooser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",205,{"inputs":[{"name":"fontchooser"}],"output":{"name":"fontchooser"}}],[11,"static_type","","",205,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",205,{"inputs":[{"name":"fontchooser"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",206,null],[11,"fmt","","",206,{"inputs":[{"name":"fontchooserdialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",206,{"inputs":[{"name":"fontchooserdialog"}],"output":{"name":"fontchooserdialog"}}],[11,"static_type","","",206,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",206,{"inputs":[{"name":"fontchooserdialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FontChooserDialog`.\n## `title`\nTitle of the dialog, or `None`\n## `parent`\nTransient parent of the dialog, or `None`",206,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"fontchooserdialog"}}],[11,"hash","","",207,null],[11,"fmt","","",207,{"inputs":[{"name":"fontchooserwidget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",207,{"inputs":[{"name":"fontchooserwidget"}],"output":{"name":"fontchooserwidget"}}],[11,"static_type","","",207,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",207,{"inputs":[{"name":"fontchooserwidget"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `FontChooserWidget`.",207,{"inputs":[],"output":{"name":"fontchooserwidget"}}],[11,"hash","","",208,null],[11,"fmt","","",208,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",208,{"inputs":[{"name":"frame"}],"output":{"name":"frame"}}],[11,"static_type","","",208,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",208,{"inputs":[{"name":"frame"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Frame`, with optional label `label`.\nIf `label` is `None`, the label is omitted.\n## `label`\nthe text to use as the label of the frame",208,{"inputs":[{"name":"option"}],"output":{"name":"frame"}}],[11,"hash","","",209,null],[11,"fmt","","",209,{"inputs":[{"name":"glarea"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",209,{"inputs":[{"name":"glarea"}],"output":{"name":"glarea"}}],[11,"static_type","","",209,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",209,{"inputs":[{"name":"glarea"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `GLArea` widget.",209,{"inputs":[],"output":{"name":"glarea"}}],[11,"attach_buffers","","Ensures that the `self` framebuffer object is made the current draw\nand read target, and that all the required buffers for the `self`\nare created and bound to the frambuffer.",209,{"inputs":[{"name":"glarea"}],"output":null}],[11,"get_auto_render","","Returns whether the area is in auto render mode or not.",209,{"inputs":[{"name":"glarea"}],"output":{"name":"bool"}}],[11,"get_context","","Retrieves the `gdk::GLContext` used by `self`.",209,{"inputs":[{"name":"glarea"}],"output":{"name":"option"}}],[11,"get_error","","Gets the current error set on the `self`.",209,{"inputs":[{"name":"glarea"}],"output":{"name":"error"}}],[11,"get_has_alpha","","Returns whether the area has an alpha component.",209,{"inputs":[{"name":"glarea"}],"output":{"name":"bool"}}],[11,"get_has_depth_buffer","","Returns whether the area has a depth buffer.",209,{"inputs":[{"name":"glarea"}],"output":{"name":"bool"}}],[11,"get_has_stencil_buffer","","Returns whether the area has a stencil buffer.",209,{"inputs":[{"name":"glarea"}],"output":{"name":"bool"}}],[11,"get_required_version","","Retrieves the required version of OpenGL set\nusing `GLArea::set_required_version`.",209,null],[11,"make_current","","Ensures that the `gdk::GLContext` used by `self` is associated with\nthe `GLArea`.",209,{"inputs":[{"name":"glarea"}],"output":null}],[11,"queue_render","","Marks the currently rendered data (if any) as invalid, and queues\na redraw of the widget, ensuring that the `GLArea::render` signal\nis emitted during the draw.",209,{"inputs":[{"name":"glarea"}],"output":null}],[11,"set_auto_render","","If `auto_render` is `true` the `GLArea::render` signal will be\nemitted every time the widget draws. This is the default and is\nuseful if drawing the widget is faster.",209,{"inputs":[{"name":"glarea"},{"name":"bool"}],"output":null}],[11,"set_error","","Sets an error on the area which will be shown instead of the\nGL rendering. This is useful in the `GLArea::create-context`\nsignal if GL context creation fails.",209,{"inputs":[{"name":"glarea"},{"name":"option"}],"output":null}],[11,"set_has_alpha","","If `has_alpha` is `true` the buffer allocated by the widget will have\nan alpha channel component, and when rendering to the window the\nresult will be composited over whatever is below the widget.",209,{"inputs":[{"name":"glarea"},{"name":"bool"}],"output":null}],[11,"set_has_depth_buffer","","If `has_depth_buffer` is `true` the widget will allocate and\nenable a depth buffer for the target framebuffer. Otherwise\nthere will be none.",209,{"inputs":[{"name":"glarea"},{"name":"bool"}],"output":null}],[11,"set_has_stencil_buffer","","If `has_stencil_buffer` is `true` the widget will allocate and\nenable a stencil buffer for the target framebuffer. Otherwise\nthere will be none.",209,{"inputs":[{"name":"glarea"},{"name":"bool"}],"output":null}],[11,"set_required_version","","Sets the required version of OpenGL to be used when creating the context\nfor the widget.",209,{"inputs":[{"name":"glarea"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"hash","","",210,null],[11,"fmt","","",210,{"inputs":[{"name":"gesture"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",210,{"inputs":[{"name":"gesture"}],"output":{"name":"gesture"}}],[11,"static_type","","",210,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",210,{"inputs":[{"name":"gesture"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",211,null],[11,"fmt","","",211,{"inputs":[{"name":"gesturedrag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",211,{"inputs":[{"name":"gesturedrag"}],"output":{"name":"gesturedrag"}}],[11,"static_type","","",211,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",211,{"inputs":[{"name":"gesturedrag"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes drags.",211,{"inputs":[{"name":"t"}],"output":{"name":"gesturedrag"}}],[11,"hash","","",212,null],[11,"fmt","","",212,{"inputs":[{"name":"gesturelongpress"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",212,{"inputs":[{"name":"gesturelongpress"}],"output":{"name":"gesturelongpress"}}],[11,"static_type","","",212,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",212,{"inputs":[{"name":"gesturelongpress"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes long presses.",212,{"inputs":[{"name":"t"}],"output":{"name":"gesturelongpress"}}],[11,"hash","","",213,null],[11,"fmt","","",213,{"inputs":[{"name":"gesturemultipress"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",213,{"inputs":[{"name":"gesturemultipress"}],"output":{"name":"gesturemultipress"}}],[11,"static_type","","",213,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",213,{"inputs":[{"name":"gesturemultipress"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes single and multiple\npresses.",213,{"inputs":[{"name":"t"}],"output":{"name":"gesturemultipress"}}],[11,"get_area","","If an area was set through `GestureMultiPress::set_area`,\nthis function will return `true` and fill in `rect` with the\npress area. See `GestureMultiPress::set_area` for more\ndetails on what the press area represents.",213,{"inputs":[{"name":"gesturemultipress"}],"output":{"name":"option"}}],[11,"set_area","","If `rect` is non-`None`, the press area will be checked to be\nconfined within the rectangle, otherwise the button count\nwill be reset so the press is seen as being the first one.\nIf `rect` is `None`, the area will be reset to an unrestricted\nstate.",213,{"inputs":[{"name":"gesturemultipress"},{"name":"option"}],"output":null}],[11,"hash","","",214,null],[11,"fmt","","",214,{"inputs":[{"name":"gesturepan"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",214,{"inputs":[{"name":"gesturepan"}],"output":{"name":"gesturepan"}}],[11,"static_type","","",214,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",214,{"inputs":[{"name":"gesturepan"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes pan gestures.",214,{"inputs":[{"name":"t"},{"name":"orientation"}],"output":{"name":"gesturepan"}}],[11,"get_orientation","","Returns the orientation of the pan gestures that this `self` expects.",214,{"inputs":[{"name":"gesturepan"}],"output":{"name":"orientation"}}],[11,"set_orientation","","Sets the orientation to be expected on pan gestures.",214,{"inputs":[{"name":"gesturepan"},{"name":"orientation"}],"output":null}],[11,"hash","","",215,null],[11,"fmt","","",215,{"inputs":[{"name":"gesturerotate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",215,{"inputs":[{"name":"gesturerotate"}],"output":{"name":"gesturerotate"}}],[11,"static_type","","",215,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",215,{"inputs":[{"name":"gesturerotate"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes 2-touch\nrotation gestures.",215,{"inputs":[{"name":"t"}],"output":{"name":"gesturerotate"}}],[11,"get_angle_delta","","If `self` is active, this function returns the angle difference\nin radians since the gesture was first recognized. If `self` is\nnot active, 0 is returned.",215,{"inputs":[{"name":"gesturerotate"}],"output":{"name":"f64"}}],[11,"hash","","",216,null],[11,"fmt","","",216,{"inputs":[{"name":"gesturesingle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",216,{"inputs":[{"name":"gesturesingle"}],"output":{"name":"gesturesingle"}}],[11,"static_type","","",216,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",216,{"inputs":[{"name":"gesturesingle"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",217,null],[11,"fmt","","",217,{"inputs":[{"name":"gestureswipe"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",217,{"inputs":[{"name":"gestureswipe"}],"output":{"name":"gestureswipe"}}],[11,"static_type","","",217,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",217,{"inputs":[{"name":"gestureswipe"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes swipes.",217,{"inputs":[{"name":"t"}],"output":{"name":"gestureswipe"}}],[11,"get_velocity","","If the gesture is recognized, this function returns `true` and fill in\n`velocity_x` and `velocity_y` with the recorded velocity, as per the\nlast event(s) processed.",217,{"inputs":[{"name":"gestureswipe"}],"output":{"name":"option"}}],[11,"hash","","",218,null],[11,"fmt","","",218,{"inputs":[{"name":"gesturezoom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",218,{"inputs":[{"name":"gesturezoom"}],"output":{"name":"gesturezoom"}}],[11,"static_type","","",218,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",218,{"inputs":[{"name":"gesturezoom"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a newly created `Gesture` that recognizes zoom\nin/out gestures (usually known as pinch/zoom).",218,{"inputs":[{"name":"t"}],"output":{"name":"gesturezoom"}}],[11,"get_scale_delta","","If `self` is active, this function returns the zooming difference\nsince the gesture was recognized (hence the starting point is\nconsidered 1:1). If `self` is not active, 1 is returned.",218,{"inputs":[{"name":"gesturezoom"}],"output":{"name":"f64"}}],[11,"hash","","",219,null],[11,"fmt","","",219,{"inputs":[{"name":"grid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",219,{"inputs":[{"name":"grid"}],"output":{"name":"grid"}}],[11,"static_type","","",219,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",219,{"inputs":[{"name":"grid"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new grid widget.",219,{"inputs":[],"output":{"name":"grid"}}],[11,"attach","","Adds a widget to the grid.",219,{"inputs":[{"name":"grid"},{"name":"t"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"attach_next_to","","Adds a widget to the grid.",219,{"inputs":[{"name":"grid"},{"name":"t"},{"name":"option"},{"name":"positiontype"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_baseline_row","","Returns which row defines the global baseline of `self`.",219,{"inputs":[{"name":"grid"}],"output":{"name":"i32"}}],[11,"get_child_at","","Gets the child of `self` whose area covers the grid\ncell whose upper left corner is at `left`, `top`.\n## `left`\nthe left edge of the cell\n## `top`\nthe top edge of the cell",219,{"inputs":[{"name":"grid"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_column_homogeneous","","Returns whether all columns of `self` have the same width.",219,{"inputs":[{"name":"grid"}],"output":{"name":"bool"}}],[11,"get_column_spacing","","Returns the amount of space between the columns of `self`.",219,{"inputs":[{"name":"grid"}],"output":{"name":"u32"}}],[11,"get_row_baseline_position","","Returns the baseline position of `row` as set\nby `Grid::set_row_baseline_position` or the default value\n`BaselinePosition::Center`.",219,{"inputs":[{"name":"grid"},{"name":"i32"}],"output":{"name":"baselineposition"}}],[11,"get_row_homogeneous","","Returns whether all rows of `self` have the same height.",219,{"inputs":[{"name":"grid"}],"output":{"name":"bool"}}],[11,"get_row_spacing","","Returns the amount of space between the rows of `self`.",219,{"inputs":[{"name":"grid"}],"output":{"name":"u32"}}],[11,"insert_column","","Inserts a column at the specified position.",219,{"inputs":[{"name":"grid"},{"name":"i32"}],"output":null}],[11,"insert_next_to","","Inserts a row or column at the specified position.",219,{"inputs":[{"name":"grid"},{"name":"t"},{"name":"positiontype"}],"output":null}],[11,"insert_row","","Inserts a row at the specified position.",219,{"inputs":[{"name":"grid"},{"name":"i32"}],"output":null}],[11,"remove_column","","Removes a column from the grid.",219,{"inputs":[{"name":"grid"},{"name":"i32"}],"output":null}],[11,"remove_row","","Removes a row from the grid.",219,{"inputs":[{"name":"grid"},{"name":"i32"}],"output":null}],[11,"set_baseline_row","","Sets which row defines the global baseline for the entire grid.\nEach row in the grid can have its own local baseline, but only\none of those is global, meaning it will be the baseline in the\nparent of the `self`.",219,{"inputs":[{"name":"grid"},{"name":"i32"}],"output":null}],[11,"set_column_homogeneous","","Sets whether all columns of `self` will have the same width.\n## `homogeneous`\n`true` to make columns homogeneous",219,{"inputs":[{"name":"grid"},{"name":"bool"}],"output":null}],[11,"set_column_spacing","","Sets the amount of space between columns of `self`.\n## `spacing`\nthe amount of space to insert between columns",219,{"inputs":[{"name":"grid"},{"name":"u32"}],"output":null}],[11,"set_row_baseline_position","","Sets how the baseline should be positioned on `row` of the\ngrid, in case that row is assigned more space than is requested.",219,{"inputs":[{"name":"grid"},{"name":"i32"},{"name":"baselineposition"}],"output":null}],[11,"set_row_homogeneous","","Sets whether all rows of `self` will have the same height.\n## `homogeneous`\n`true` to make rows homogeneous",219,{"inputs":[{"name":"grid"},{"name":"bool"}],"output":null}],[11,"set_row_spacing","","Sets the amount of space between rows of `self`.\n## `spacing`\nthe amount of space to insert between rows",219,{"inputs":[{"name":"grid"},{"name":"u32"}],"output":null}],[11,"hash","","",220,null],[11,"fmt","","",220,{"inputs":[{"name":"headerbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",220,{"inputs":[{"name":"headerbar"}],"output":{"name":"headerbar"}}],[11,"static_type","","",220,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",220,{"inputs":[{"name":"headerbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `HeaderBar` widget.",220,{"inputs":[],"output":{"name":"headerbar"}}],[11,"get_custom_title","","Retrieves the custom title widget of the header. See\n`HeaderBar::set_custom_title`.",220,{"inputs":[{"name":"headerbar"}],"output":{"name":"option"}}],[11,"get_decoration_layout","","Gets the decoration layout set with\n`HeaderBar::set_decoration_layout`.",220,{"inputs":[{"name":"headerbar"}],"output":{"name":"option"}}],[11,"get_has_subtitle","","Retrieves whether the header bar reserves space for\na subtitle, regardless if one is currently set or not.",220,{"inputs":[{"name":"headerbar"}],"output":{"name":"bool"}}],[11,"get_show_close_button","","Returns whether this header bar shows the standard window\ndecorations.",220,{"inputs":[{"name":"headerbar"}],"output":{"name":"bool"}}],[11,"get_subtitle","","Retrieves the subtitle of the header. See `HeaderBar::set_subtitle`.",220,{"inputs":[{"name":"headerbar"}],"output":{"name":"option"}}],[11,"get_title","","Retrieves the title of the header. See `HeaderBar::set_title`.",220,{"inputs":[{"name":"headerbar"}],"output":{"name":"option"}}],[11,"pack_end","","Adds `child` to `self`, packed with reference to the\nend of the `self`.",220,{"inputs":[{"name":"headerbar"},{"name":"t"}],"output":null}],[11,"pack_start","","Adds `child` to `self`, packed with reference to the\nstart of the `self`.",220,{"inputs":[{"name":"headerbar"},{"name":"t"}],"output":null}],[11,"set_custom_title","","Sets a custom title for the `HeaderBar`.",220,{"inputs":[{"name":"headerbar"},{"name":"option"}],"output":null}],[11,"set_decoration_layout","","Sets the decoration layout for this header bar, overriding\nthe `Settings:gtk-decoration-layout` setting.",220,{"inputs":[{"name":"headerbar"},{"name":"option"}],"output":null}],[11,"set_has_subtitle","","Sets whether the header bar should reserve space\nfor a subtitle, even if none is currently set.",220,{"inputs":[{"name":"headerbar"},{"name":"bool"}],"output":null}],[11,"set_show_close_button","","Sets whether this header bar shows the standard window decorations,\nincluding close, maximize, and minimize.",220,{"inputs":[{"name":"headerbar"},{"name":"bool"}],"output":null}],[11,"set_subtitle","","Sets the subtitle of the `HeaderBar`. The title should give a user\nan additional detail to help him identify the current view.",220,{"inputs":[{"name":"headerbar"},{"name":"option"}],"output":null}],[11,"set_title","","Sets the title of the `HeaderBar`. The title should help a user\nidentify the current view. A good title should not include the\napplication name.",220,{"inputs":[{"name":"headerbar"},{"name":"option"}],"output":null}],[11,"hash","","",221,null],[11,"fmt","","",221,{"inputs":[{"name":"iconview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",221,{"inputs":[{"name":"iconview"}],"output":{"name":"iconview"}}],[11,"static_type","","",221,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",221,{"inputs":[{"name":"iconview"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `IconView` widget",221,{"inputs":[],"output":{"name":"iconview"}}],[11,"new_with_area","","Creates a new `IconView` widget using the\nspecified `area` to layout cells inside the icons.\n## `area`\nthe `CellArea` to use to layout cells",221,{"inputs":[{"name":"t"}],"output":{"name":"iconview"}}],[11,"new_with_model","","Creates a new `IconView` widget with the model `model`.\n## `model`\nThe model.",221,{"inputs":[{"name":"t"}],"output":{"name":"iconview"}}],[11,"convert_widget_to_bin_window_coords","","Converts widget coordinates to coordinates for the bin_window,\nas expected by e.g. `IconView::get_path_at_pos`.\n## `wx`\nX coordinate relative to the widget\n## `wy`\nY coordinate relative to the widget\n## `bx`\nreturn location for bin_window X coordinate\n## `by`\nreturn location for bin_window Y coordinate",221,null],[11,"get_activate_on_single_click","","Gets the setting set by `IconView::set_activate_on_single_click`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"bool"}}],[11,"get_cell_rect","","Fills the bounding rectangle in widget coordinates for the cell specified by\n`path` and `cell`. If `cell` is `None` the main cell area is used.",221,{"inputs":[{"name":"iconview"},{"name":"treepath"},{"name":"option"}],"output":{"name":"option"}}],[11,"get_column_spacing","","Returns the value of the ::column-spacing property.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_columns","","Returns the value of the ::columns property.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_cursor","","Fills in `path` and `cell` with the current cursor path and cell.\nIf the cursor isn’t currently set, then *`path` will be `None`.\nIf no cell currently has focus, then *`cell` will be `None`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"option"}}],[11,"get_dest_item_at_pos","","Determines the destination item for a given position.\n## `drag_x`\nthe position to determine the destination item for\n## `drag_y`\nthe position to determine the destination item for\n## `path`\nReturn location for the path of the item,\n or `None`.\n## `pos`\nReturn location for the drop position, or `None`",221,{"inputs":[{"name":"iconview"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_drag_dest_item","","Gets information about the item that is highlighted for feedback.\n## `path`\nReturn location for the path of\n the highlighted item, or `None`.\n## `pos`\nReturn location for the drop position, or `None`",221,null],[11,"get_item_at_pos","","Finds the path at the point (`x`, `y`), relative to bin_window coordinates.\nIn contrast to `IconView::get_path_at_pos`, this function also\nobtains the cell at the specified position. The returned path should\nbe freed with `TreePath::free`.\nSee `IconView::convert_widget_to_bin_window_coords` for converting\nwidget coordinates to bin_window coordinates.\n## `x`\nThe x position to be identified\n## `y`\nThe y position to be identified\n## `path`\nReturn location for the path, or `None`\n## `cell`\nReturn location for the renderer\n responsible for the cell at (`x`, `y`), or `None`",221,{"inputs":[{"name":"iconview"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_item_column","","Gets the column in which the item `path` is currently\ndisplayed. Column numbers start at 0.\n## `path`\nthe `TreePath` of the item",221,{"inputs":[{"name":"iconview"},{"name":"treepath"}],"output":{"name":"i32"}}],[11,"get_item_orientation","","Returns the value of the ::item-orientation property which determines\nwhether the labels are drawn beside the icons instead of below.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"orientation"}}],[11,"get_item_padding","","Returns the value of the ::item-padding property.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_item_row","","Gets the row in which the item `path` is currently\ndisplayed. Row numbers start at 0.\n## `path`\nthe `TreePath` of the item",221,{"inputs":[{"name":"iconview"},{"name":"treepath"}],"output":{"name":"i32"}}],[11,"get_item_width","","Returns the value of the ::item-width property.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_margin","","Returns the value of the ::margin property.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_markup_column","","Returns the column with markup text for `self`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_model","","Returns the model the `IconView` is based on. Returns `None` if the\nmodel is unset.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"option"}}],[11,"get_path_at_pos","","Finds the path at the point (`x`, `y`), relative to bin_window coordinates.\nSee `IconView::get_item_at_pos`, if you are also interested in\nthe cell at the specified position.\nSee `IconView::convert_widget_to_bin_window_coords` for converting\nwidget coordinates to bin_window coordinates.\n## `x`\nThe x position to be identified\n## `y`\nThe y position to be identified",221,{"inputs":[{"name":"iconview"},{"name":"i32"},{"name":"i32"}],"output":{"name":"treepath"}}],[11,"get_pixbuf_column","","Returns the column with pixbufs for `self`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_reorderable","","Retrieves whether the user can reorder the list via drag-and-drop.\nSee `IconView::set_reorderable`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"bool"}}],[11,"get_row_spacing","","Returns the value of the ::row-spacing property.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_selected_items","","Creates a list of paths of all selected items. Additionally, if you are\nplanning on modifying the model after calling this function, you may\nwant to convert the returned list into a list of ``GtkTreeRowReferences``.\nTo do this, you can use `TreeRowReference::new`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"vec"}}],[11,"get_selection_mode","","Gets the selection mode of the `self`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"selectionmode"}}],[11,"get_spacing","","Returns the value of the ::spacing property.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_text_column","","Returns the column with text for `self`.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_tooltip_column","","Returns the column of `self`’s model which is being used for\ndisplaying tooltips on `self`’s rows.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"i32"}}],[11,"get_tooltip_context","","This function is supposed to be used in a `Widget::query-tooltip`\nsignal handler for `IconView`. The `x`, `y` and `keyboard_tip` values\nwhich are received in the signal handler, should be passed to this\nfunction without modification.",221,{"inputs":[{"name":"iconview"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"option"}}],[11,"get_visible_range","","Sets `start_path` and `end_path` to be the first and last visible path.\nNote that there may be invisible paths in between.",221,{"inputs":[{"name":"iconview"}],"output":{"name":"option"}}],[11,"item_activated","","Activates the item determined by `path`.\n## `path`\nThe `TreePath` to be activated",221,{"inputs":[{"name":"iconview"},{"name":"treepath"}],"output":null}],[11,"path_is_selected","","Returns `true` if the icon pointed to by `path` is currently\nselected. If `path` does not point to a valid location, `false` is returned.\n## `path`\nA `TreePath` to check selection on.",221,{"inputs":[{"name":"iconview"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"scroll_to_path","","Moves the alignments of `self` to the position specified by `path`.\n`row_align` determines where the row is placed, and `col_align` determines\nwhere `column` is placed. Both are expected to be between 0.0 and 1.0.\n0.0 means left/top alignment, 1.0 means right/bottom alignment, 0.5 means\ncenter.",221,{"inputs":[{"name":"iconview"},{"name":"treepath"},{"name":"bool"},{"name":"f32"},{"name":"f32"}],"output":null}],[11,"select_all","","Selects all the icons. `self` must has its selection mode set\nto `SelectionMode::Multiple`.",221,{"inputs":[{"name":"iconview"}],"output":null}],[11,"select_path","","Selects the row at `path`.\n## `path`\nThe `TreePath` to be selected.",221,{"inputs":[{"name":"iconview"},{"name":"treepath"}],"output":null}],[11,"set_activate_on_single_click","","Causes the `IconView::item-activated` signal to be emitted on\na single click instead of a double click.",221,{"inputs":[{"name":"iconview"},{"name":"bool"}],"output":null}],[11,"set_column_spacing","","Sets the ::column-spacing property which specifies the space\nwhich is inserted between the columns of the icon view.\n## `column_spacing`\nthe column spacing",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_columns","","Sets the ::columns property which determines in how\nmany columns the icons are arranged. If `columns` is\n-1, the number of columns will be chosen automatically\nto fill the available area.\n## `columns`\nthe number of columns",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_cursor","","Sets the current keyboard focus to be at `path`, and selects it. This is\nuseful when you want to focus the user’s attention on a particular item.\nIf `cell` is not `None`, then focus is given to the cell specified by\nit. Additionally, if `start_editing` is `true`, then editing should be\nstarted in the specified cell.",221,{"inputs":[{"name":"iconview"},{"name":"treepath"},{"name":"option"},{"name":"bool"}],"output":null}],[11,"set_drag_dest_item","","Sets the item that is highlighted for feedback.\n## `path`\nThe path of the item to highlight, or `None`.\n## `pos`\nSpecifies where to drop, relative to the item",221,{"inputs":[{"name":"iconview"},{"name":"option"},{"name":"iconviewdropposition"}],"output":null}],[11,"set_item_orientation","","Sets the ::item-orientation property which determines whether the labels\nare drawn beside the icons instead of below.\n## `orientation`\nthe relative position of texts and icons",221,{"inputs":[{"name":"iconview"},{"name":"orientation"}],"output":null}],[11,"set_item_padding","","Sets the `IconView:item-padding` property which specifies the padding\naround each of the icon view’s items.\n## `item_padding`\nthe item padding",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_item_width","","Sets the ::item-width property which specifies the width\nto use for each item. If it is set to -1, the icon view will\nautomatically determine a suitable item size.\n## `item_width`\nthe width for each item",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_margin","","Sets the ::margin property which specifies the space\nwhich is inserted at the top, bottom, left and right\nof the icon view.\n## `margin`\nthe margin",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_markup_column","","Sets the column with markup information for `self` to be\n`column`. The markup column must be of type `G_TYPE_STRING`.\nIf the markup column is set to something, it overrides\nthe text column set by `IconView::set_text_column`.\n## `column`\nA column in the currently used model, or -1 to display no text",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_model","","Sets the model for a `IconView`.\nIf the `self` already has a model set, it will remove\nit before setting the new model. If `model` is `None`, then\nit will unset the old model.\n## `model`\nThe model.",221,{"inputs":[{"name":"iconview"},{"name":"option"}],"output":null}],[11,"set_pixbuf_column","","Sets the column with pixbufs for `self` to be `column`. The pixbuf\ncolumn must be of type `GDK_TYPE_PIXBUF`\n## `column`\nA column in the currently used model, or -1 to disable",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_reorderable","","This function is a convenience function to allow you to reorder models that\nsupport the `TreeDragSourceIface` and the `TreeDragDestIface`. Both\n`TreeStore` and `ListStore` support these. If `reorderable` is `true`, then\nthe user can reorder the model by dragging and dropping rows. The\ndeveloper can listen to these changes by connecting to the model&#39;s\nrow_inserted and row_deleted signals. The reordering is implemented by setting up\nthe icon view as a drag source and destination. Therefore, drag and\ndrop can not be used in a reorderable view for any other purpose.",221,{"inputs":[{"name":"iconview"},{"name":"bool"}],"output":null}],[11,"set_row_spacing","","Sets the ::row-spacing property which specifies the space\nwhich is inserted between the rows of the icon view.\n## `row_spacing`\nthe row spacing",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_selection_mode","","Sets the selection mode of the `self`.\n## `mode`\nThe selection mode",221,{"inputs":[{"name":"iconview"},{"name":"selectionmode"}],"output":null}],[11,"set_spacing","","Sets the ::spacing property which specifies the space\nwhich is inserted between the cells (i.e. the icon and\nthe text) of an item.\n## `spacing`\nthe spacing",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_text_column","","Sets the column with text for `self` to be `column`. The text\ncolumn must be of type `G_TYPE_STRING`.\n## `column`\nA column in the currently used model, or -1 to display no text",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"set_tooltip_column","","If you only plan to have simple (text-only) tooltips on full items, you\ncan use this function to have `IconView` handle these automatically\nfor you. `column` should be set to the column in `self`’s model\ncontaining the tooltip texts, or -1 to disable this feature.",221,{"inputs":[{"name":"iconview"},{"name":"i32"}],"output":null}],[11,"unselect_all","","Unselects all the icons.",221,{"inputs":[{"name":"iconview"}],"output":null}],[11,"unselect_path","","Unselects the row at `path`.\n## `path`\nThe `TreePath` to be unselected.",221,{"inputs":[{"name":"iconview"},{"name":"treepath"}],"output":null}],[11,"unset_model_drag_dest","","Undoes the effect of `IconView::enable_model_drag_dest`. Calling this\nmethod sets `IconView:reorderable` to `false`.",221,{"inputs":[{"name":"iconview"}],"output":null}],[11,"unset_model_drag_source","","Undoes the effect of `IconView::enable_model_drag_source`. Calling this\nmethod sets `IconView:reorderable` to `false`.",221,{"inputs":[{"name":"iconview"}],"output":null}],[11,"hash","","",222,null],[11,"fmt","","",222,{"inputs":[{"name":"image"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",222,{"inputs":[{"name":"image"}],"output":{"name":"image"}}],[11,"static_type","","",222,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",222,{"inputs":[{"name":"image"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty `Image` widget.",222,{"inputs":[],"output":{"name":"image"}}],[11,"new_from_animation","","Creates a `Image` displaying the given animation.\nThe `Image` does not assume a reference to the\nanimation; you still need to unref it if you own references.\n`Image` will add its own reference rather than adopting yours.",222,{"inputs":[{"name":"t"}],"output":{"name":"image"}}],[11,"new_from_file","","Creates a new `Image` displaying the file `filename`. If the file\nisn’t found or can’t be loaded, the resulting `Image` will\ndisplay a “broken image” icon. This function never returns `None`,\nit always returns a valid `Image` widget.",222,{"inputs":[{"name":"t"}],"output":{"name":"image"}}],[11,"new_from_icon_name","","Creates a `Image` displaying an icon from the current icon theme.\nIf the icon name isn’t known, a “broken image” icon will be\ndisplayed instead. If the current icon theme is changed, the icon\nwill be updated appropriately.\n## `icon_name`\nan icon name\n## `size`\na stock icon size",222,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"image"}}],[11,"new_from_pixbuf","","Creates a new `Image` displaying `pixbuf`.\nThe `Image` does not assume a reference to the\npixbuf; you still need to unref it if you own references.\n`Image` will add its own reference rather than adopting yours.",222,{"inputs":[{"name":"option"}],"output":{"name":"image"}}],[11,"new_from_resource","","Creates a new `Image` displaying the resource file `resource_path`. If the file\nisn’t found or can’t be loaded, the resulting `Image` will\ndisplay a “broken image” icon. This function never returns `None`,\nit always returns a valid `Image` widget.",222,{"inputs":[{"name":"str"}],"output":{"name":"image"}}],[11,"new_from_stock","","Creates a `Image` displaying a stock icon. Sample stock icon\nnames are `GTK_STOCK_OPEN`, `GTK_STOCK_QUIT`. Sample stock sizes\nare `IconSize::Menu`, `IconSize::SmallToolbar`. If the stock\nicon name isn’t known, the image will be empty.\nYou can register your own stock icon names, see\n`IconFactory::add_default` and `IconFactory::add`.",222,{"inputs":[{"name":"str"},{"name":"i32"}],"output":{"name":"image"}}],[11,"clear","","Resets the image to be empty.",222,{"inputs":[{"name":"image"}],"output":null}],[11,"get_animation","","Gets the `gdk_pixbuf::PixbufAnimation` being displayed by the `Image`.\nThe storage type of the image must be `ImageType::Empty` or\n`ImageType::Animation` (see `Image::get_storage_type`).\nThe caller of this function does not own a reference to the\nreturned animation.",222,{"inputs":[{"name":"image"}],"output":{"name":"option"}}],[11,"get_pixbuf","","Gets the `gdk_pixbuf::Pixbuf` being displayed by the `Image`.\nThe storage type of the image must be `ImageType::Empty` or\n`ImageType::Pixbuf` (see `Image::get_storage_type`).\nThe caller of this function does not own a reference to the\nreturned pixbuf.",222,{"inputs":[{"name":"image"}],"output":{"name":"option"}}],[11,"get_pixel_size","","Gets the pixel size used for named icons.",222,{"inputs":[{"name":"image"}],"output":{"name":"i32"}}],[11,"get_storage_type","","Gets the type of representation being used by the `Image`\nto store image data. If the `Image` has no image data,\nthe return value will be `ImageType::Empty`.",222,{"inputs":[{"name":"image"}],"output":{"name":"imagetype"}}],[11,"set_from_animation","","Causes the `Image` to display the given animation (or display\nnothing, if you set the animation to `None`).\n## `animation`\nthe `gdk_pixbuf::PixbufAnimation`",222,{"inputs":[{"name":"image"},{"name":"t"}],"output":null}],[11,"set_from_file","","See `Image::new_from_file` for details.\n## `filename`\na filename or `None`",222,{"inputs":[{"name":"image"},{"name":"t"}],"output":null}],[11,"set_from_icon_name","","See `Image::new_from_icon_name` for details.\n## `icon_name`\nan icon name\n## `size`\nan icon size",222,{"inputs":[{"name":"image"},{"name":"str"},{"name":"i32"}],"output":null}],[11,"set_from_pixbuf","","See `Image::new_from_pixbuf` for details.\n## `pixbuf`\na `gdk_pixbuf::Pixbuf` or `None`",222,{"inputs":[{"name":"image"},{"name":"option"}],"output":null}],[11,"set_from_resource","","See `Image::new_from_resource` for details.\n## `resource_path`\na resource path or `None`",222,{"inputs":[{"name":"image"},{"name":"option"}],"output":null}],[11,"set_from_stock","","See `Image::new_from_stock` for details.",222,{"inputs":[{"name":"image"},{"name":"str"},{"name":"i32"}],"output":null}],[11,"set_pixel_size","","Sets the pixel size to use for named icons. If the pixel size is set\nto a value != -1, it is used instead of the icon size set by\n`Image::set_from_icon_name`.\n## `pixel_size`\nthe new pixel size",222,{"inputs":[{"name":"image"},{"name":"i32"}],"output":null}],[11,"hash","","",223,null],[11,"fmt","","",223,{"inputs":[{"name":"infobar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",223,{"inputs":[{"name":"infobar"}],"output":{"name":"infobar"}}],[11,"static_type","","",223,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",223,{"inputs":[{"name":"infobar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `InfoBar` object.",223,{"inputs":[],"output":{"name":"infobar"}}],[11,"add_action_widget","","Add an activatable widget to the action area of a `InfoBar`,\nconnecting a signal handler that will emit the `InfoBar::response`\nsignal on the message area when the widget is activated. The widget\nis appended to the end of the message areas action area.\n## `child`\nan activatable widget\n## `response_id`\nresponse ID for `child`",223,{"inputs":[{"name":"infobar"},{"name":"t"},{"name":"i32"}],"output":null}],[11,"add_button","","Adds a button with the given text and sets things up so that\nclicking the button will emit the “response” signal with the given\nresponse_id. The button is appended to the end of the info bars&#39;s\naction area. The button widget is returned, but usually you don&#39;t\nneed it.\n## `button_text`\ntext of button\n## `response_id`\nresponse ID for the button",223,{"inputs":[{"name":"infobar"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_action_area","","Returns the action area of `self`.",223,{"inputs":[{"name":"infobar"}],"output":{"name":"option"}}],[11,"get_content_area","","Returns the content area of `self`.",223,{"inputs":[{"name":"infobar"}],"output":{"name":"option"}}],[11,"get_message_type","","Returns the message type of the message area.",223,{"inputs":[{"name":"infobar"}],"output":{"name":"messagetype"}}],[11,"get_show_close_button","","Returns whether the widget will display a standard close button.",223,{"inputs":[{"name":"infobar"}],"output":{"name":"bool"}}],[11,"response","","Emits the “response” signal with the given `response_id`.\n## `response_id`\na response ID",223,{"inputs":[{"name":"infobar"},{"name":"i32"}],"output":null}],[11,"set_default_response","","Sets the last widget in the info bar’s action area with\nthe given response_id as the default widget for the dialog.\nPressing “Enter” normally activates the default widget.",223,{"inputs":[{"name":"infobar"},{"name":"i32"}],"output":null}],[11,"set_message_type","","Sets the message type of the message area.\nGTK+ uses this type to determine what color to use\nwhen drawing the message area.\n## `message_type`\na `MessageType`",223,{"inputs":[{"name":"infobar"},{"name":"messagetype"}],"output":null}],[11,"set_response_sensitive","","Calls gtk_widget_set_sensitive (widget, setting) for each\nwidget in the info bars’s action area with the given response_id.\nA convenient way to sensitize/desensitize dialog buttons.\n## `response_id`\na response ID\n## `setting`\nTRUE for sensitive",223,{"inputs":[{"name":"infobar"},{"name":"i32"},{"name":"bool"}],"output":null}],[11,"set_show_close_button","","If true, a standard close button is shown. When clicked it emits\nthe response `ResponseType::Close`.",223,{"inputs":[{"name":"infobar"},{"name":"bool"}],"output":null}],[11,"hash","","",224,null],[11,"fmt","","",224,{"inputs":[{"name":"label"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",224,{"inputs":[{"name":"label"}],"output":{"name":"label"}}],[11,"static_type","","",224,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",224,{"inputs":[{"name":"label"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new label with the given text inside it. You can\npass `None` to get an empty label widget.\n## `str`\nThe text of the label",224,{"inputs":[{"name":"option"}],"output":{"name":"label"}}],[11,"new_with_mnemonic","","Creates a new `Label`, containing the text in `str`.",224,{"inputs":[{"name":"option"}],"output":{"name":"label"}}],[11,"get_angle","","Gets the angle of rotation for the label. See\n`Label::set_angle`.",224,{"inputs":[{"name":"label"}],"output":{"name":"f64"}}],[11,"get_current_uri","","Returns the URI for the currently active link in the label.\nThe active link is the one under the mouse pointer or, in a\nselectable label, the link in which the text cursor is currently\npositioned.",224,{"inputs":[{"name":"label"}],"output":{"name":"option"}}],[11,"get_justify","","Returns the justification of the label. See `Label::set_justify`.",224,{"inputs":[{"name":"label"}],"output":{"name":"justification"}}],[11,"get_label","","Fetches the text from a label widget including any embedded\nunderlines indicating mnemonics and Pango markup. (See\n`Label::get_text`).",224,{"inputs":[{"name":"label"}],"output":{"name":"option"}}],[11,"get_layout_offsets","","Obtains the coordinates where the label will draw the `pango::Layout`\nrepresenting the text in the label; useful to convert mouse events\ninto coordinates inside the `pango::Layout`, e.g. to take some action\nif some part of the label is clicked. Of course you will need to\ncreate a `EventBox` to receive the events, and pack the label\ninside it, since labels are windowless (they return `false` from\n`Widget::get_has_window`). Remember\nwhen using the `pango::Layout` functions you need to convert to\nand from pixels using PANGO_PIXELS() or `PANGO_SCALE`.\n## `x`\nlocation to store X offset of layout, or `None`\n## `y`\nlocation to store Y offset of layout, or `None`",224,null],[11,"get_line_wrap","","Returns whether lines in the label are automatically wrapped.\nSee `Label::set_line_wrap`.",224,{"inputs":[{"name":"label"}],"output":{"name":"bool"}}],[11,"get_lines","","Gets the number of lines to which an ellipsized, wrapping\nlabel should be limited. See `Label::set_lines`.",224,{"inputs":[{"name":"label"}],"output":{"name":"i32"}}],[11,"get_max_width_chars","","Retrieves the desired maximum width of `self`, in characters. See\n`Label::set_width_chars`.",224,{"inputs":[{"name":"label"}],"output":{"name":"i32"}}],[11,"get_mnemonic_keyval","","If the label has been set so that it has an mnemonic key this function\nreturns the keyval used for the mnemonic accelerator. If there is no\nmnemonic set up it returns `GDK_KEY_VoidSymbol`.",224,{"inputs":[{"name":"label"}],"output":{"name":"u32"}}],[11,"get_mnemonic_widget","","Retrieves the target of the mnemonic (keyboard shortcut) of this\nlabel. See `Label::set_mnemonic_widget`.",224,{"inputs":[{"name":"label"}],"output":{"name":"option"}}],[11,"get_selectable","","Gets the value set by `Label::set_selectable`.",224,{"inputs":[{"name":"label"}],"output":{"name":"bool"}}],[11,"get_selection_bounds","","Gets the selected range of characters in the label, returning `true`\nif there’s a selection.\n## `start`\nreturn location for start of selection, as a character offset\n## `end`\nreturn location for end of selection, as a character offset",224,{"inputs":[{"name":"label"}],"output":{"name":"option"}}],[11,"get_single_line_mode","","Returns whether the label is in single line mode.",224,{"inputs":[{"name":"label"}],"output":{"name":"bool"}}],[11,"get_text","","Fetches the text from a label widget, as displayed on the\nscreen. This does not include any embedded underlines\nindicating mnemonics or Pango markup. (See `Label::get_label`)",224,{"inputs":[{"name":"label"}],"output":{"name":"option"}}],[11,"get_track_visited_links","","Returns whether the label is currently keeping track\nof clicked links.",224,{"inputs":[{"name":"label"}],"output":{"name":"bool"}}],[11,"get_use_markup","","Returns whether the label’s text is interpreted as marked up with\nthe [Pango text markup language][PangoMarkupFormat].\nSee gtk_label_set_use_markup ().",224,{"inputs":[{"name":"label"}],"output":{"name":"bool"}}],[11,"get_use_underline","","Returns whether an embedded underline in the label indicates a\nmnemonic. See `Label::set_use_underline`.",224,{"inputs":[{"name":"label"}],"output":{"name":"bool"}}],[11,"get_width_chars","","Retrieves the desired width of `self`, in characters. See\n`Label::set_width_chars`.",224,{"inputs":[{"name":"label"}],"output":{"name":"i32"}}],[11,"get_xalign","","Gets the `Label:xalign` property for `self`.",224,{"inputs":[{"name":"label"}],"output":{"name":"f32"}}],[11,"get_yalign","","Gets the `Label:yalign` property for `self`.",224,{"inputs":[{"name":"label"}],"output":{"name":"f32"}}],[11,"select_region","","Selects a range of characters in the label, if the label is selectable.\nSee `Label::set_selectable`. If the label is not selectable,\nthis function has no effect. If `start_offset` or\n`end_offset` are -1, then the end of the label will be substituted.\n## `start_offset`\nstart offset (in characters not bytes)\n## `end_offset`\nend offset (in characters not bytes)",224,{"inputs":[{"name":"label"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_angle","","Sets the angle of rotation for the label. An angle of 90 reads from\nfrom bottom to top, an angle of 270, from top to bottom. The angle\nsetting for the label is ignored if the label is selectable,\nwrapped, or ellipsized.\n## `angle`\nthe angle that the baseline of the label makes with\n the horizontal, in degrees, measured counterclockwise",224,{"inputs":[{"name":"label"},{"name":"f64"}],"output":null}],[11,"set_justify","","Sets the alignment of the lines in the text of the label relative to\neach other. `Justification::Left` is the default value when the widget is\nfirst created with `Label::new`. If you instead want to set the\nalignment of the label as a whole, use `Widget::set_halign` instead.\n`Label::set_justify` has no effect on labels containing only a\nsingle line.\n## `jtype`\na `Justification`",224,{"inputs":[{"name":"label"},{"name":"justification"}],"output":null}],[11,"set_label","","Sets the text of the label. The label is interpreted as\nincluding embedded underlines and/or Pango markup depending\non the values of the `Label:use-underline`&quot; and\n`Label:use-markup` properties.\n## `str`\nthe new text to set for the label",224,{"inputs":[{"name":"label"},{"name":"str"}],"output":null}],[11,"set_line_wrap","","Toggles line wrapping within the `Label` widget. `true` makes it break\nlines if text exceeds the widget’s size. `false` lets the text get cut off\nby the edge of the widget if it exceeds the widget size.",224,{"inputs":[{"name":"label"},{"name":"bool"}],"output":null}],[11,"set_lines","","Sets the number of lines to which an ellipsized, wrapping label\nshould be limited. This has no effect if the label is not wrapping\nor ellipsized. Set this to -1 if you don’t want to limit the\nnumber of lines.",224,{"inputs":[{"name":"label"},{"name":"i32"}],"output":null}],[11,"set_markup","","Parses `str` which is marked up with the\n[Pango text markup language][PangoMarkupFormat], setting the\nlabel’s text and attribute list based on the parse results. If the `str` is\nexternal data, you may need to escape it with `g_markup_escape_text` or\n`g_markup_printf_escaped`:",224,{"inputs":[{"name":"label"},{"name":"str"}],"output":null}],[11,"set_markup_with_mnemonic","","Parses `str` which is marked up with the\n[Pango text markup language][PangoMarkupFormat],\nsetting the label’s text and attribute list based on the parse results.\nIf characters in `str` are preceded by an underscore, they are underlined\nindicating that they represent a keyboard accelerator called a mnemonic.",224,{"inputs":[{"name":"label"},{"name":"str"}],"output":null}],[11,"set_max_width_chars","","Sets the desired maximum width in characters of `self` to `n_chars`.\n## `n_chars`\nthe new desired maximum width, in characters.",224,{"inputs":[{"name":"label"},{"name":"i32"}],"output":null}],[11,"set_mnemonic_widget","","If the label has been set so that it has an mnemonic key (using\ni.e. `Label::set_markup_with_mnemonic`,\n`Label::set_text_with_mnemonic`, `Label::new_with_mnemonic`\nor the “use_underline” property) the label can be associated with a\nwidget that is the target of the mnemonic. When the label is inside\na widget (like a `Button` or a `Notebook` tab) it is\nautomatically associated with the correct widget, but sometimes\n(i.e. when the target is a `Entry` next to the label) you need to\nset it explicitly using this function.",224,{"inputs":[{"name":"label"},{"name":"option"}],"output":null}],[11,"set_pattern","","The pattern of underlines you want under the existing text within the\n`Label` widget. For example if the current text of the label says\n“FooBarBaz” passing a pattern of “___ ___” will underline\n“Foo” and “Baz” but not “Bar”.\n## `pattern`\nThe pattern as described above.",224,{"inputs":[{"name":"label"},{"name":"str"}],"output":null}],[11,"set_selectable","","Selectable labels allow the user to select text from the label, for\ncopy-and-paste.\n## `setting`\n`true` to allow selecting text in the label",224,{"inputs":[{"name":"label"},{"name":"bool"}],"output":null}],[11,"set_single_line_mode","","Sets whether the label is in single line mode.\n## `single_line_mode`\n`true` if the label should be in single line mode",224,{"inputs":[{"name":"label"},{"name":"bool"}],"output":null}],[11,"set_text","","Sets the text within the `Label` widget. It overwrites any text that\nwas there before.",224,{"inputs":[{"name":"label"},{"name":"str"}],"output":null}],[11,"set_text_with_mnemonic","","Sets the label’s text from the string `str`.\nIf characters in `str` are preceded by an underscore, they are underlined\nindicating that they represent a keyboard accelerator called a mnemonic.\nThe mnemonic key can be used to activate another widget, chosen\nautomatically, or explicitly using `Label::set_mnemonic_widget`.\n## `str`\na string",224,{"inputs":[{"name":"label"},{"name":"str"}],"output":null}],[11,"set_track_visited_links","","Sets whether the label should keep track of clicked\nlinks (and use a different color for them).\n## `track_links`\n`true` to track visited links",224,{"inputs":[{"name":"label"},{"name":"bool"}],"output":null}],[11,"set_use_markup","","Sets whether the text of the label contains markup in\n[Pango’s text markup language][PangoMarkupFormat].\nSee `Label::set_markup`.\n## `setting`\n`true` if the label’s text should be parsed for markup.",224,{"inputs":[{"name":"label"},{"name":"bool"}],"output":null}],[11,"set_use_underline","","If true, an underline in the text indicates the next character should be\nused for the mnemonic accelerator key.\n## `setting`\n`true` if underlines in the text indicate mnemonics",224,{"inputs":[{"name":"label"},{"name":"bool"}],"output":null}],[11,"set_width_chars","","Sets the desired width in characters of `self` to `n_chars`.\n## `n_chars`\nthe new desired width, in characters.",224,{"inputs":[{"name":"label"},{"name":"i32"}],"output":null}],[11,"set_xalign","","Sets the `Label:xalign` property for `self`.",224,{"inputs":[{"name":"label"},{"name":"f32"}],"output":null}],[11,"set_yalign","","Sets the `Label:yalign` property for `self`.",224,{"inputs":[{"name":"label"},{"name":"f32"}],"output":null}],[11,"hash","","",225,null],[11,"fmt","","",225,{"inputs":[{"name":"layout"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",225,{"inputs":[{"name":"layout"}],"output":{"name":"layout"}}],[11,"static_type","","",225,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",225,{"inputs":[{"name":"layout"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Layout`. Unless you have a specific adjustment\nyou’d like the layout to use for scrolling, pass `None` for\n`hadjustment` and `vadjustment`.\n## `hadjustment`\nhorizontal scroll adjustment, or `None`\n## `vadjustment`\nvertical scroll adjustment, or `None`",225,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"layout"}}],[11,"get_bin_window","","Retrieve the bin window of the layout used for drawing operations.",225,{"inputs":[{"name":"layout"}],"output":{"name":"option"}}],[11,"get_hadjustment","","This function should only be called after the layout has been\nplaced in a `ScrolledWindow` or otherwise configured for\nscrolling. It returns the `Adjustment` used for communication\nbetween the horizontal scrollbar and `self`.",225,{"inputs":[{"name":"layout"}],"output":{"name":"option"}}],[11,"get_size","","Gets the size that has been set on the layout, and that determines\nthe total extents of the layout’s scrollbar area. See\ngtk_layout_set_size ().\n## `width`\nlocation to store the width set on\n `self`, or `None`\n## `height`\nlocation to store the height set on\n `self`, or `None`",225,null],[11,"get_vadjustment","","This function should only be called after the layout has been\nplaced in a `ScrolledWindow` or otherwise configured for\nscrolling. It returns the `Adjustment` used for communication\nbetween the vertical scrollbar and `self`.",225,{"inputs":[{"name":"layout"}],"output":{"name":"option"}}],[11,"move_","","",225,{"inputs":[{"name":"layout"},{"name":"t"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"put","","Adds `child_widget` to `self`, at position (`x`,`y`).\n`self` becomes the new parent container of `child_widget`.\n## `child_widget`\nchild widget\n## `x`\nX position of child widget\n## `y`\nY position of child widget",225,{"inputs":[{"name":"layout"},{"name":"t"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_hadjustment","","Sets the horizontal scroll adjustment for the layout.",225,{"inputs":[{"name":"layout"},{"name":"option"}],"output":null}],[11,"set_size","","Sets the size of the scrollable area of the layout.\n## `width`\nwidth of entire scrollable area\n## `height`\nheight of entire scrollable area",225,{"inputs":[{"name":"layout"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"set_vadjustment","","Sets the vertical scroll adjustment for the layout.",225,{"inputs":[{"name":"layout"},{"name":"option"}],"output":null}],[11,"hash","","",226,null],[11,"fmt","","",226,{"inputs":[{"name":"levelbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",226,{"inputs":[{"name":"levelbar"}],"output":{"name":"levelbar"}}],[11,"static_type","","",226,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",226,{"inputs":[{"name":"levelbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `LevelBar`.",226,{"inputs":[],"output":{"name":"levelbar"}}],[11,"new_for_interval","","Utility constructor that creates a new `LevelBar` for the specified\ninterval.",226,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"levelbar"}}],[11,"add_offset_value","","Adds a new offset marker on `self` at the position specified by `value`.\nWhen the bar value is in the interval topped by `value` (or between `value`\nand `LevelBar:max-value` in case the offset is the last one on the bar)\na style class named `level-``name` will be applied\nwhen rendering the level bar fill.\nIf another offset marker named `name` exists, its value will be\nreplaced by `value`.",226,{"inputs":[{"name":"levelbar"},{"name":"str"},{"name":"f64"}],"output":null}],[11,"get_inverted","","Return the value of the `LevelBar:inverted` property.",226,{"inputs":[{"name":"levelbar"}],"output":{"name":"bool"}}],[11,"get_max_value","","Returns the value of the `LevelBar:max-value` property.",226,{"inputs":[{"name":"levelbar"}],"output":{"name":"f64"}}],[11,"get_min_value","","Returns the value of the `LevelBar:min-value` property.",226,{"inputs":[{"name":"levelbar"}],"output":{"name":"f64"}}],[11,"get_mode","","Returns the value of the `LevelBar:mode` property.",226,{"inputs":[{"name":"levelbar"}],"output":{"name":"levelbarmode"}}],[11,"get_offset_value","","Fetches the value specified for the offset marker `name` in `self`,\nreturning `true` in case an offset named `name` was found.",226,{"inputs":[{"name":"levelbar"},{"name":"option"}],"output":{"name":"option"}}],[11,"get_value","","Returns the value of the `LevelBar:value` property.",226,{"inputs":[{"name":"levelbar"}],"output":{"name":"f64"}}],[11,"remove_offset_value","","Removes an offset marker previously added with\n`LevelBar::add_offset_value`.",226,{"inputs":[{"name":"levelbar"},{"name":"option"}],"output":null}],[11,"set_inverted","","Sets the value of the `LevelBar:inverted` property.",226,{"inputs":[{"name":"levelbar"},{"name":"bool"}],"output":null}],[11,"set_max_value","","Sets the value of the `LevelBar:max-value` property.",226,{"inputs":[{"name":"levelbar"},{"name":"f64"}],"output":null}],[11,"set_min_value","","Sets the value of the `LevelBar:min-value` property.",226,{"inputs":[{"name":"levelbar"},{"name":"f64"}],"output":null}],[11,"set_mode","","Sets the value of the `LevelBar:mode` property.",226,{"inputs":[{"name":"levelbar"},{"name":"levelbarmode"}],"output":null}],[11,"set_value","","Sets the value of the `LevelBar:value` property.",226,{"inputs":[{"name":"levelbar"},{"name":"f64"}],"output":null}],[11,"hash","","",227,null],[11,"fmt","","",227,{"inputs":[{"name":"linkbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",227,{"inputs":[{"name":"linkbutton"}],"output":{"name":"linkbutton"}}],[11,"static_type","","",227,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",227,{"inputs":[{"name":"linkbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `LinkButton` with the URI as its text.\n## `uri`\na valid URI",227,{"inputs":[{"name":"str"}],"output":{"name":"linkbutton"}}],[11,"new_with_label","","Creates a new `LinkButton` containing a label.\n## `uri`\na valid URI\n## `label`\nthe text of the button",227,{"inputs":[{"name":"str"},{"name":"option"}],"output":{"name":"linkbutton"}}],[11,"get_uri","","Retrieves the URI set using `LinkButton::set_uri`.",227,{"inputs":[{"name":"linkbutton"}],"output":{"name":"option"}}],[11,"get_visited","","Retrieves the “visited” state of the URI where the `LinkButton`\npoints. The button becomes visited when it is clicked. If the URI\nis changed on the button, the “visited” state is unset again.",227,{"inputs":[{"name":"linkbutton"}],"output":{"name":"bool"}}],[11,"set_uri","","Sets `uri` as the URI where the `LinkButton` points. As a side-effect\nthis unsets the “visited” state of the button.\n## `uri`\na valid URI",227,{"inputs":[{"name":"linkbutton"},{"name":"str"}],"output":null}],[11,"set_visited","","Sets the “visited” state of the URI where the `LinkButton`\npoints. See `LinkButton::get_visited` for more details.\n## `visited`\nthe new “visited” state",227,{"inputs":[{"name":"linkbutton"},{"name":"bool"}],"output":null}],[11,"hash","","",228,null],[11,"fmt","","",228,{"inputs":[{"name":"listbox"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",228,{"inputs":[{"name":"listbox"}],"output":{"name":"listbox"}}],[11,"static_type","","",228,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",228,{"inputs":[{"name":"listbox"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ListBox` container.",228,{"inputs":[],"output":{"name":"listbox"}}],[11,"drag_highlight_row","","This is a helper function for implementing DnD onto a `ListBox`.\nThe passed in `row` will be highlighted via `Widget::drag_highlight`,\nand any previously highlighted row will be unhighlighted.",228,{"inputs":[{"name":"listbox"},{"name":"listboxrow"}],"output":null}],[11,"drag_unhighlight_row","","If a row has previously been highlighted via `ListBox::drag_highlight_row`\nit will have the highlight removed.",228,{"inputs":[{"name":"listbox"}],"output":null}],[11,"get_activate_on_single_click","","Returns whether rows activate on single clicks.",228,{"inputs":[{"name":"listbox"}],"output":{"name":"bool"}}],[11,"get_adjustment","","Gets the adjustment (if any) that the widget uses to\nfor vertical scrolling.",228,{"inputs":[{"name":"listbox"}],"output":{"name":"option"}}],[11,"get_row_at_index","","Gets the n-th child in the list (not counting headers).\nIf `_index` is negative or larger than the number of items in the\nlist, `None` is returned.",228,{"inputs":[{"name":"listbox"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_row_at_y","","Gets the row at the `y` position.",228,{"inputs":[{"name":"listbox"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_selected_row","","Gets the selected row.",228,{"inputs":[{"name":"listbox"}],"output":{"name":"option"}}],[11,"get_selected_rows","","Creates a list of all selected children.",228,{"inputs":[{"name":"listbox"}],"output":{"name":"vec"}}],[11,"get_selection_mode","","Gets the selection mode of the listbox.",228,{"inputs":[{"name":"listbox"}],"output":{"name":"selectionmode"}}],[11,"insert","","Insert the `child` into the `self` at `position`. If a sort function is\nset, the widget will actually be inserted at the calculated position and\nthis function has the same effect of `ContainerExt::add`.",228,{"inputs":[{"name":"listbox"},{"name":"t"},{"name":"i32"}],"output":null}],[11,"invalidate_filter","","Update the filtering for all rows. Call this when result\nof the filter function on the `self` is changed due\nto an external factor. For instance, this would be used\nif the filter function just looked for a specific search\nstring and the entry with the search string has changed.",228,{"inputs":[{"name":"listbox"}],"output":null}],[11,"invalidate_headers","","Update the separators for all rows. Call this when result\nof the header function on the `self` is changed due\nto an external factor.",228,{"inputs":[{"name":"listbox"}],"output":null}],[11,"invalidate_sort","","Update the sorting for all rows. Call this when result\nof the sort function on the `self` is changed due\nto an external factor.",228,{"inputs":[{"name":"listbox"}],"output":null}],[11,"prepend","","Prepend a widget to the list. If a sort function is set, the widget will\nactually be inserted at the calculated position and this function has the\nsame effect of `ContainerExt::add`.",228,{"inputs":[{"name":"listbox"},{"name":"t"}],"output":null}],[11,"select_all","","Select all children of `self`, if the selection mode allows it.",228,{"inputs":[{"name":"listbox"}],"output":null}],[11,"select_row","","Make `row` the currently selected row.",228,{"inputs":[{"name":"listbox"},{"name":"option"}],"output":null}],[11,"set_activate_on_single_click","","If `single` is `true`, rows will be activated when you click on them,\notherwise you need to double-click.",228,{"inputs":[{"name":"listbox"},{"name":"bool"}],"output":null}],[11,"set_adjustment","","Sets the adjustment (if any) that the widget uses to\nfor vertical scrolling. For instance, this is used\nto get the page size for PageUp/Down key handling.",228,{"inputs":[{"name":"listbox"},{"name":"option"}],"output":null}],[11,"set_placeholder","","Sets the placeholder widget that is shown in the list when\nit doesn&#39;t display any visible children.",228,{"inputs":[{"name":"listbox"},{"name":"option"}],"output":null}],[11,"set_selection_mode","","Sets how selection works in the listbox.\nSee `SelectionMode` for details.",228,{"inputs":[{"name":"listbox"},{"name":"selectionmode"}],"output":null}],[11,"unselect_all","","Unselect all children of `self`, if the selection mode allows it.",228,{"inputs":[{"name":"listbox"}],"output":null}],[11,"unselect_row","","Unselects a single row of `self`, if the selection mode allows it.",228,{"inputs":[{"name":"listbox"},{"name":"listboxrow"}],"output":null}],[11,"hash","","",229,null],[11,"fmt","","",229,{"inputs":[{"name":"listboxrow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",229,{"inputs":[{"name":"listboxrow"}],"output":{"name":"listboxrow"}}],[11,"static_type","","",229,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",229,{"inputs":[{"name":"listboxrow"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ListBoxRow`, to be used as a child of a `ListBox`.",229,{"inputs":[],"output":{"name":"listboxrow"}}],[11,"changed","","Marks `self` as changed, causing any state that depends on this\nto be updated. This affects sorting, filtering and headers.",229,{"inputs":[{"name":"listboxrow"}],"output":null}],[11,"get_activatable","","Gets the value of the `ListBoxRow:activatable` property\nfor this row.",229,{"inputs":[{"name":"listboxrow"}],"output":{"name":"bool"}}],[11,"get_header","","Returns the current header of the `self`. This can be used\nin a ``GtkListBoxUpdateHeaderFunc`` to see if there is a header\nset already, and if so to update the state of it.",229,{"inputs":[{"name":"listboxrow"}],"output":{"name":"option"}}],[11,"get_index","","Gets the current index of the `self` in its `ListBox` container.",229,{"inputs":[{"name":"listboxrow"}],"output":{"name":"i32"}}],[11,"get_selectable","","Gets the value of the `ListBoxRow:selectable` property\nfor this row.",229,{"inputs":[{"name":"listboxrow"}],"output":{"name":"bool"}}],[11,"is_selected","","Returns whether the child is currently selected in its\n`ListBox` container.",229,{"inputs":[{"name":"listboxrow"}],"output":{"name":"bool"}}],[11,"set_activatable","","Set the `ListBoxRow:activatable` property for this row.",229,{"inputs":[{"name":"listboxrow"},{"name":"bool"}],"output":null}],[11,"set_header","","Sets the current header of the `self`. This is only allowed to be called\nfrom a ``GtkListBoxUpdateHeaderFunc``. It will replace any existing\nheader in the row, and be shown in front of the row in the listbox.",229,{"inputs":[{"name":"listboxrow"},{"name":"option"}],"output":null}],[11,"set_selectable","","Set the `ListBoxRow:selectable` property for this row.",229,{"inputs":[{"name":"listboxrow"},{"name":"bool"}],"output":null}],[11,"hash","","",230,null],[11,"fmt","","",230,{"inputs":[{"name":"liststore"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",230,{"inputs":[{"name":"liststore"}],"output":{"name":"liststore"}}],[11,"static_type","","",230,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",230,{"inputs":[{"name":"liststore"},{"name":"t"}],"output":{"name":"bool"}}],[11,"append","","Appends a new row to `self`. `iter` will be changed to point to this new\nrow. The row will be empty after this function is called. To fill in\nvalues, you need to call `ListStore::set` or `ListStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the appended row",230,{"inputs":[{"name":"liststore"}],"output":{"name":"treeiter"}}],[11,"clear","","Removes all rows from the list store.",230,{"inputs":[{"name":"liststore"}],"output":null}],[11,"insert","","Creates a new row at `position`. `iter` will be changed to point to this new\nrow. If `position` is -1 or is larger than the number of rows on the list,\nthen the new row will be appended to the list. The row will be empty after\nthis function is called. To fill in values, you need to call\n`ListStore::set` or `ListStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the new row\n## `position`\nposition to insert the new row, or -1 for last",230,{"inputs":[{"name":"liststore"},{"name":"i32"}],"output":{"name":"treeiter"}}],[11,"insert_after","","Inserts a new row after `sibling`. If `sibling` is `None`, then the row will be\nprepended to the beginning of the list. `iter` will be changed to point to\nthis new row. The row will be empty after this function is called. To fill\nin values, you need to call `ListStore::set` or `ListStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the new row\n## `sibling`\nA valid `TreeIter`, or `None`",230,{"inputs":[{"name":"liststore"},{"name":"option"}],"output":{"name":"treeiter"}}],[11,"insert_before","","Inserts a new row before `sibling`. If `sibling` is `None`, then the row will\nbe appended to the end of the list. `iter` will be changed to point to this\nnew row. The row will be empty after this function is called. To fill in\nvalues, you need to call `ListStore::set` or `ListStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the new row\n## `sibling`\nA valid `TreeIter`, or `None`",230,{"inputs":[{"name":"liststore"},{"name":"option"}],"output":{"name":"treeiter"}}],[11,"iter_is_valid","","&gt; This function is slow. Only use it for debugging and/or testing\n&gt; purposes.",230,{"inputs":[{"name":"liststore"},{"name":"treeiter"}],"output":{"name":"bool"}}],[11,"move_after","","Moves `iter` in `self` to the position after `position`. Note that this\nfunction only works with unsorted stores. If `position` is `None`, `iter`\nwill be moved to the start of the list.\n## `iter`\nA `TreeIter`.\n## `position`\nA `TreeIter` or `None`.",230,{"inputs":[{"name":"liststore"},{"name":"treeiter"},{"name":"option"}],"output":null}],[11,"move_before","","Moves `iter` in `self` to the position before `position`. Note that this\nfunction only works with unsorted stores. If `position` is `None`, `iter`\nwill be moved to the end of the list.\n## `iter`\nA `TreeIter`.\n## `position`\nA `TreeIter`, or `None`.",230,{"inputs":[{"name":"liststore"},{"name":"treeiter"},{"name":"option"}],"output":null}],[11,"prepend","","Prepends a new row to `self`. `iter` will be changed to point to this new\nrow. The row will be empty after this function is called. To fill in\nvalues, you need to call `ListStore::set` or `ListStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the prepend row",230,{"inputs":[{"name":"liststore"}],"output":{"name":"treeiter"}}],[11,"remove","","Removes the given row from the list store. After being removed,\n`iter` is set to be the next valid row, or invalidated if it pointed\nto the last row in `self`.\n## `iter`\nA valid `TreeIter`",230,{"inputs":[{"name":"liststore"},{"name":"treeiter"}],"output":{"name":"bool"}}],[11,"swap","","Swaps `a` and `b` in `self`. Note that this function only works with\nunsorted stores.\n## `a`\nA `TreeIter`.\n## `b`\nAnother `TreeIter`.",230,{"inputs":[{"name":"liststore"},{"name":"treeiter"},{"name":"treeiter"}],"output":null}],[11,"hash","","",231,null],[11,"fmt","","",231,{"inputs":[{"name":"menu"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",231,{"inputs":[{"name":"menu"}],"output":{"name":"menu"}}],[11,"static_type","","",231,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",231,{"inputs":[{"name":"menu"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Menu`",231,{"inputs":[],"output":{"name":"menu"}}],[11,"attach","","Adds a new `MenuItem` to a (table) menu. The number of “cells” that\nan item will occupy is specified by `left_attach`, `right_attach`,\n`top_attach` and `bottom_attach`. These each represent the leftmost,\nrightmost, uppermost and lower column and row numbers of the table.\n(Columns and rows are indexed from zero).",231,{"inputs":[{"name":"menu"},{"name":"t"},{"name":"u32"},{"name":"u32"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"detach","","Detaches the menu from the widget to which it had been attached.\nThis function will call the callback function, `detacher`, provided\nwhen the `Menu::attach_to_widget` function was called.",231,{"inputs":[{"name":"menu"}],"output":null}],[11,"get_accel_group","","Gets the `AccelGroup` which holds global accelerators for the\nmenu. See `Menu::set_accel_group`.",231,{"inputs":[{"name":"menu"}],"output":{"name":"option"}}],[11,"get_accel_path","","Retrieves the accelerator path set on the menu.",231,{"inputs":[{"name":"menu"}],"output":{"name":"option"}}],[11,"get_active","","Returns the selected menu item from the menu. This is used by the\n`ComboBox`.",231,{"inputs":[{"name":"menu"}],"output":{"name":"option"}}],[11,"get_attach_widget","","Returns the `Widget` that the menu is attached to.",231,{"inputs":[{"name":"menu"}],"output":{"name":"option"}}],[11,"get_monitor","","Retrieves the number of the monitor on which to show the menu.",231,{"inputs":[{"name":"menu"}],"output":{"name":"i32"}}],[11,"get_reserve_toggle_size","","Returns whether the menu reserves space for toggles and\nicons, regardless of their actual presence.",231,{"inputs":[{"name":"menu"}],"output":{"name":"bool"}}],[11,"get_tearoff_state","","Returns whether the menu is torn off.\nSee `Menu::set_tearoff_state`.",231,{"inputs":[{"name":"menu"}],"output":{"name":"bool"}}],[11,"get_title","","Returns the title of the menu. See `Menu::set_title`.",231,{"inputs":[{"name":"menu"}],"output":{"name":"option"}}],[11,"popdown","","Removes the menu from the screen.",231,{"inputs":[{"name":"menu"}],"output":null}],[11,"reorder_child","","Moves `child` to a new `position` in the list of `self`\nchildren.\n## `child`\nthe `MenuItem` to move\n## `position`\nthe new position to place `child`.\n Positions are numbered from 0 to n - 1",231,{"inputs":[{"name":"menu"},{"name":"t"},{"name":"i32"}],"output":null}],[11,"reposition","","Repositions the menu according to its position function.",231,{"inputs":[{"name":"menu"}],"output":null}],[11,"set_accel_group","","Set the `AccelGroup` which holds global accelerators for the\nmenu. This accelerator group needs to also be added to all windows\nthat this menu is being used in with `Window::add_accel_group`,\nin order for those windows to support all the accelerators\ncontained in this group.\n## `accel_group`\nthe `AccelGroup` to be associated\n with the menu.",231,{"inputs":[{"name":"menu"},{"name":"option"}],"output":null}],[11,"set_accel_path","","Sets an accelerator path for this menu from which accelerator paths\nfor its immediate children, its menu items, can be constructed.\nThe main purpose of this function is to spare the programmer the\ninconvenience of having to call `MenuItem::set_accel_path` on\neach menu item that should support runtime user changable accelerators.\nInstead, by just calling `Menu::set_accel_path` on their parent,\neach menu item of this menu, that contains a label describing its\npurpose, automatically gets an accel path assigned.",231,{"inputs":[{"name":"menu"},{"name":"option"}],"output":null}],[11,"set_active","","Selects the specified menu item within the menu. This is used by\nthe `ComboBox` and should not be used by anyone else.\n## `index`\nthe index of the menu item to select. Index values are\n from 0 to n-1",231,{"inputs":[{"name":"menu"},{"name":"u32"}],"output":null}],[11,"set_monitor","","Informs GTK+ on which monitor a menu should be popped up.\nSee `gdk::Screen::get_monitor_geometry`.",231,{"inputs":[{"name":"menu"},{"name":"i32"}],"output":null}],[11,"set_reserve_toggle_size","","Sets whether the menu should reserve space for drawing toggles\nor icons, regardless of their actual presence.\n## `reserve_toggle_size`\nwhether to reserve size for toggles",231,{"inputs":[{"name":"menu"},{"name":"bool"}],"output":null}],[11,"set_screen","","Sets the `gdk::Screen` on which the menu will be displayed.\n## `screen`\na `gdk::Screen`, or `None` if the screen should be\n determined by the widget the menu is attached to",231,{"inputs":[{"name":"menu"},{"name":"option"}],"output":null}],[11,"set_tearoff_state","","Changes the tearoff state of the menu. A menu is normally\ndisplayed as drop down menu which persists as long as the menu is\nactive. It can also be displayed as a tearoff menu which persists\nuntil it is closed or reattached.",231,{"inputs":[{"name":"menu"},{"name":"bool"}],"output":null}],[11,"set_title","","Sets the title string for the menu.",231,{"inputs":[{"name":"menu"},{"name":"str"}],"output":null}],[11,"get_for_attach_widget","","Returns a list of the menus which are attached to this widget.\nThis list is owned by GTK+ and must not be modified.\n## `widget`\na `Widget`",231,{"inputs":[{"name":"t"}],"output":{"name":"vec"}}],[11,"hash","","",232,null],[11,"fmt","","",232,{"inputs":[{"name":"menubutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",232,{"inputs":[{"name":"menubutton"}],"output":{"name":"menubutton"}}],[11,"static_type","","",232,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",232,{"inputs":[{"name":"menubutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `MenuButton` widget with downwards-pointing\narrow as the only child. You can replace the child widget\nwith another `Widget` should you wish to.",232,{"inputs":[],"output":{"name":"menubutton"}}],[11,"get_align_widget","","Returns the parent `Widget` to use to line up with menu.",232,{"inputs":[{"name":"menubutton"}],"output":{"name":"option"}}],[11,"get_direction","","Returns the direction the popup will be pointing at when popped up.",232,{"inputs":[{"name":"menubutton"}],"output":{"name":"arrowtype"}}],[11,"get_popover","","Returns the `Popover` that pops out of the button.\nIf the button is not using a `Popover`, this function\nreturns `None`.",232,{"inputs":[{"name":"menubutton"}],"output":{"name":"option"}}],[11,"get_popup","","Returns the `Menu` that pops out of the button.\nIf the button does not use a `Menu`, this function\nreturns `None`.",232,{"inputs":[{"name":"menubutton"}],"output":{"name":"option"}}],[11,"get_use_popover","","Returns whether a `Popover` or a `Menu` will be constructed\nfrom the menu model.",232,{"inputs":[{"name":"menubutton"}],"output":{"name":"bool"}}],[11,"set_align_widget","","Sets the `Widget` to use to line the menu with when popped up.\nNote that the `align_widget` must contain the `MenuButton` itself.",232,{"inputs":[{"name":"menubutton"},{"name":"option"}],"output":null}],[11,"set_direction","","Sets the direction in which the popup will be popped up, as\nwell as changing the arrow’s direction. The child will not\nbe changed to an arrow if it was customized.",232,{"inputs":[{"name":"menubutton"},{"name":"arrowtype"}],"output":null}],[11,"set_popover","","Sets the `Popover` that will be popped up when the button is\nclicked, or `None` to disable the button. If `MenuButton:menu-model`\nor `MenuButton:popup` are set, they will be set to `None`.",232,{"inputs":[{"name":"menubutton"},{"name":"option"}],"output":null}],[11,"set_popup","","Sets the `Menu` that will be popped up when the button is clicked,\nor `None` to disable the button. If `MenuButton:menu-model` or\n`MenuButton:popover` are set, they will be set to `None`.",232,{"inputs":[{"name":"menubutton"},{"name":"option"}],"output":null}],[11,"set_use_popover","","Sets whether to construct a `Popover` instead of `Menu`\nwhen `MenuButton::set_menu_model` is called. Note that\nthis property is only consulted when a new menu model is set.",232,{"inputs":[{"name":"menubutton"},{"name":"bool"}],"output":null}],[11,"hash","","",233,null],[11,"fmt","","",233,{"inputs":[{"name":"menuitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",233,{"inputs":[{"name":"menuitem"}],"output":{"name":"menuitem"}}],[11,"static_type","","",233,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",233,{"inputs":[{"name":"menuitem"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `MenuItem`.",233,{"inputs":[],"output":{"name":"menuitem"}}],[11,"new_with_label","","Creates a new `MenuItem` whose child is a `Label`.\n## `label`\nthe text for the label",233,{"inputs":[{"name":"str"}],"output":{"name":"menuitem"}}],[11,"new_with_mnemonic","","Creates a new `MenuItem` containing a label.",233,{"inputs":[{"name":"str"}],"output":{"name":"menuitem"}}],[11,"hash","","",234,null],[11,"fmt","","",234,{"inputs":[{"name":"menushell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",234,{"inputs":[{"name":"menushell"}],"output":{"name":"menushell"}}],[11,"static_type","","",234,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",234,{"inputs":[{"name":"menushell"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",235,null],[11,"fmt","","",235,{"inputs":[{"name":"menutoolbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",235,{"inputs":[{"name":"menutoolbutton"}],"output":{"name":"menutoolbutton"}}],[11,"static_type","","",235,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",235,{"inputs":[{"name":"menutoolbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `MenuToolButton` using `icon_widget` as icon and\n`label` as label.\n## `icon_widget`\na widget that will be used as icon widget, or `None`\n## `label`\na string that will be used as label, or `None`",235,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"menutoolbutton"}}],[11,"new_from_stock","","Creates a new `MenuToolButton`.\nThe new `MenuToolButton` will contain an icon and label from\nthe stock item indicated by `stock_id`.",235,{"inputs":[{"name":"str"}],"output":{"name":"menutoolbutton"}}],[11,"get_menu","","Gets the `Menu` associated with `MenuToolButton`.",235,{"inputs":[{"name":"menutoolbutton"}],"output":{"name":"option"}}],[11,"set_arrow_tooltip_markup","","Sets the tooltip markup text to be used as tooltip for the arrow button\nwhich pops up the menu. See `ToolItem::set_tooltip_text` for setting\na tooltip on the whole `MenuToolButton`.\n## `markup`\nmarkup text to be used as tooltip text for button’s arrow button",235,{"inputs":[{"name":"menutoolbutton"},{"name":"str"}],"output":null}],[11,"set_arrow_tooltip_text","","Sets the tooltip text to be used as tooltip for the arrow button which\npops up the menu. See `ToolItem::set_tooltip_text` for setting a tooltip\non the whole `MenuToolButton`.\n## `text`\ntext to be used as tooltip text for button’s arrow button",235,{"inputs":[{"name":"menutoolbutton"},{"name":"str"}],"output":null}],[11,"set_menu","","Sets the `Menu` that is popped up when the user clicks on the arrow.\nIf `menu` is NULL, the arrow button becomes insensitive.\n## `menu`\nthe `Menu` associated with `MenuToolButton`",235,{"inputs":[{"name":"menutoolbutton"},{"name":"t"}],"output":null}],[11,"hash","","",236,null],[11,"fmt","","",236,{"inputs":[{"name":"messagedialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",236,{"inputs":[{"name":"messagedialog"}],"output":{"name":"messagedialog"}}],[11,"static_type","","",236,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",236,{"inputs":[{"name":"messagedialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_image","","Gets the dialog’s image.",236,{"inputs":[{"name":"messagedialog"}],"output":{"name":"option"}}],[11,"get_message_area","","Returns the message area of the dialog. This is the box where the\ndialog’s primary and secondary labels are packed. You can add your\nown extra content to that box and it will appear below those labels.\nSee `DialogExt::get_content_area` for the corresponding\nfunction in the parent `Dialog`.",236,{"inputs":[{"name":"messagedialog"}],"output":{"name":"option"}}],[11,"set_image","","Sets the dialog’s image to `image`.",236,{"inputs":[{"name":"messagedialog"},{"name":"t"}],"output":null}],[11,"set_markup","","Sets the text of the message dialog to be `str`, which is marked\nup with the [Pango text markup language][PangoMarkupFormat].\n## `str`\nmarkup string (see [Pango markup format][PangoMarkupFormat])",236,{"inputs":[{"name":"messagedialog"},{"name":"str"}],"output":null}],[11,"hash","","",237,null],[11,"fmt","","",237,{"inputs":[{"name":"misc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",237,{"inputs":[{"name":"misc"}],"output":{"name":"misc"}}],[11,"static_type","","",237,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",237,{"inputs":[{"name":"misc"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",238,null],[11,"fmt","","",238,{"inputs":[{"name":"notebook"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",238,{"inputs":[{"name":"notebook"}],"output":{"name":"notebook"}}],[11,"static_type","","",238,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Notebook` widget with no pages.",238,{"inputs":[],"output":{"name":"notebook"}}],[11,"detach_tab","","Removes the child from the notebook.",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":null}],[11,"get_action_widget","","Gets one of the action widgets. See `Notebook::set_action_widget`.\n## `pack_type`\npack type of the action widget to receive",238,{"inputs":[{"name":"notebook"},{"name":"packtype"}],"output":{"name":"option"}}],[11,"get_group_name","","Gets the current group name for `self`.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"option"}}],[11,"get_menu_label","","Retrieves the menu label widget of the page containing `child`.\n## `child`\na widget contained in a page of `self`",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"option"}}],[11,"get_menu_label_text","","Retrieves the text of the menu label for the page containing\n`child`.\n## `child`\nthe child widget of a page of the notebook.",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"option"}}],[11,"get_scrollable","","Returns whether the tab label area has arrows for scrolling.\nSee `Notebook::set_scrollable`.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"bool"}}],[11,"get_show_border","","Returns whether a bevel will be drawn around the notebook pages.\nSee `Notebook::set_show_border`.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"bool"}}],[11,"get_show_tabs","","Returns whether the tabs of the notebook are shown.\nSee `Notebook::set_show_tabs`.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"bool"}}],[11,"get_tab_detachable","","Returns whether the tab contents can be detached from `self`.\n## `child`\na child `Widget`",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_tab_hborder","","Returns the horizontal width of a tab border.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"u16"}}],[11,"get_tab_label","","Returns the tab label widget for the page `child`.\n`None` is returned if `child` is not in `self` or\nif no tab label has specifically been set for `child`.\n## `child`\nthe page",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"option"}}],[11,"get_tab_label_text","","Retrieves the text of the tab label for the page containing\n`child`.\n## `child`\na widget contained in a page of `self`",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"option"}}],[11,"get_tab_pos","","Gets the edge at which the tabs for switching pages in the\nnotebook are drawn.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"positiontype"}}],[11,"get_tab_reorderable","","Gets whether the tab can be reordered via drag and drop or not.\n## `child`\na child `Widget`",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_tab_vborder","","Returns the vertical width of a tab border.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"u16"}}],[11,"next_page","","Switches to the next page. Nothing happens if the current page is\nthe last page.",238,{"inputs":[{"name":"notebook"}],"output":null}],[11,"popup_disable","","Disables the popup menu.",238,{"inputs":[{"name":"notebook"}],"output":null}],[11,"popup_enable","","Enables the popup menu: if the user clicks with the right\nmouse button on the tab labels, a menu with all the pages\nwill be popped up.",238,{"inputs":[{"name":"notebook"}],"output":null}],[11,"prev_page","","Switches to the previous page. Nothing happens if the current page\nis the first page.",238,{"inputs":[{"name":"notebook"}],"output":null}],[11,"set_action_widget","","Sets `widget` as one of the action widgets. Depending on the pack type\nthe widget will be placed before or after the tabs. You can use\na `Box` if you need to pack more than one widget on the same side.",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"packtype"}],"output":null}],[11,"set_group_name","","Sets a group name for `self`.",238,{"inputs":[{"name":"notebook"},{"name":"option"}],"output":null}],[11,"set_menu_label","","Changes the menu label for the page containing `child`.\n## `child`\nthe child widget\n## `menu_label`\nthe menu label, or `None` for default",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"}],"output":null}],[11,"set_menu_label_text","","Creates a new label and sets it as the menu label of `child`.\n## `child`\nthe child widget\n## `menu_text`\nthe label text",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"str"}],"output":null}],[11,"set_scrollable","","Sets whether the tab label area will have arrows for\nscrolling if there are too many tabs to fit in the area.\n## `scrollable`\n`true` if scroll arrows should be added",238,{"inputs":[{"name":"notebook"},{"name":"bool"}],"output":null}],[11,"set_show_border","","Sets whether a bevel will be drawn around the notebook pages.\nThis only has a visual effect when the tabs are not shown.\nSee `Notebook::set_show_tabs`.\n## `show_border`\n`true` if a bevel should be drawn around the notebook",238,{"inputs":[{"name":"notebook"},{"name":"bool"}],"output":null}],[11,"set_show_tabs","","Sets whether to show the tabs for the notebook or not.\n## `show_tabs`\n`true` if the tabs should be shown",238,{"inputs":[{"name":"notebook"},{"name":"bool"}],"output":null}],[11,"set_tab_detachable","","Sets whether the tab can be detached from `self` to another\nnotebook or widget.",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"bool"}],"output":null}],[11,"set_tab_label","","Changes the tab label for `child`.\nIf `None` is specified for `tab_label`, then the page will\nhave the label “page N”.\n## `child`\nthe page\n## `tab_label`\nthe tab label widget to use, or `None`\n for default tab label",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"}],"output":null}],[11,"set_tab_label_text","","Creates a new label and sets it as the tab label for the page\ncontaining `child`.\n## `child`\nthe page\n## `tab_text`\nthe label text",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"str"}],"output":null}],[11,"set_tab_pos","","Sets the edge at which the tabs for switching pages in the\nnotebook are drawn.\n## `pos`\nthe edge to draw the tabs at",238,{"inputs":[{"name":"notebook"},{"name":"positiontype"}],"output":null}],[11,"set_tab_reorderable","","Sets whether the notebook tab can be reordered\nvia drag and drop or not.\n## `child`\na child `Widget`\n## `reorderable`\nwhether the tab is reorderable or not",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"bool"}],"output":null}],[11,"hash","","",239,null],[11,"fmt","","",239,{"inputs":[{"name":"orientable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",239,{"inputs":[{"name":"orientable"}],"output":{"name":"orientable"}}],[11,"static_type","","",239,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",239,{"inputs":[{"name":"orientable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",240,null],[11,"fmt","","",240,{"inputs":[{"name":"overlay"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",240,{"inputs":[{"name":"overlay"}],"output":{"name":"overlay"}}],[11,"static_type","","",240,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",240,{"inputs":[{"name":"overlay"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Overlay`.",240,{"inputs":[],"output":{"name":"overlay"}}],[11,"add_overlay","","Adds `widget` to `self`.",240,{"inputs":[{"name":"overlay"},{"name":"t"}],"output":null}],[11,"hash","","",241,null],[11,"fmt","","",241,{"inputs":[{"name":"pagesetup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",241,{"inputs":[{"name":"pagesetup"}],"output":{"name":"pagesetup"}}],[11,"static_type","","",241,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",241,{"inputs":[{"name":"pagesetup"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `PageSetup`.",241,{"inputs":[],"output":{"name":"pagesetup"}}],[11,"new_from_file","","Reads the page setup from the file `file_name`. Returns a\nnew `PageSetup` object with the restored page setup,\nor `None` if an error occurred. See `PageSetup::to_file`.\n## `file_name`\nthe filename to read the page setup from",241,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"copy","","",241,{"inputs":[{"name":"pagesetup"}],"output":{"name":"option"}}],[11,"get_bottom_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_left_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_orientation","","",241,{"inputs":[{"name":"pagesetup"}],"output":{"name":"pageorientation"}}],[11,"get_page_height","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_page_width","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_paper_height","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_paper_size","","",241,{"inputs":[{"name":"pagesetup"}],"output":{"name":"papersize"}}],[11,"get_paper_width","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_right_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_top_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"load_file","","",241,{"inputs":[{"name":"pagesetup"},{"name":"t"}],"output":{"name":"result"}}],[11,"set_bottom_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"set_left_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"set_orientation","","",241,{"inputs":[{"name":"pagesetup"},{"name":"pageorientation"}],"output":null}],[11,"set_paper_size","","",241,{"inputs":[{"name":"pagesetup"},{"name":"papersize"}],"output":null}],[11,"set_paper_size_and_default_margins","","",241,{"inputs":[{"name":"pagesetup"},{"name":"papersize"}],"output":null}],[11,"set_right_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"set_top_margin","","",241,{"inputs":[{"name":"pagesetup"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"to_file","","",241,{"inputs":[{"name":"pagesetup"},{"name":"t"}],"output":{"name":"result"}}],[11,"hash","","",242,null],[11,"fmt","","",242,{"inputs":[{"name":"paned"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",242,{"inputs":[{"name":"paned"}],"output":{"name":"paned"}}],[11,"static_type","","",242,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",242,{"inputs":[{"name":"paned"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Paned` widget.\n## `orientation`\nthe paned’s orientation.",242,{"inputs":[{"name":"orientation"}],"output":{"name":"paned"}}],[11,"add1","","Adds a child to the top or left pane with default parameters. This is\nequivalent to\n`gtk_paned_pack1 (paned, child, FALSE, TRUE)`.\n## `child`\nthe child to add",242,{"inputs":[{"name":"paned"},{"name":"t"}],"output":null}],[11,"add2","","Adds a child to the bottom or right pane with default parameters. This\nis equivalent to\n`gtk_paned_pack2 (paned, child, TRUE, TRUE)`.\n## `child`\nthe child to add",242,{"inputs":[{"name":"paned"},{"name":"t"}],"output":null}],[11,"get_child1","","Obtains the first child of the paned widget.",242,{"inputs":[{"name":"paned"}],"output":{"name":"option"}}],[11,"get_child2","","Obtains the second child of the paned widget.",242,{"inputs":[{"name":"paned"}],"output":{"name":"option"}}],[11,"get_handle_window","","Returns the `gdk::Window` of the handle. This function is\nuseful when handling button or motion events because it\nenables the callback to distinguish between the window\nof the paned, a child and the handle.",242,{"inputs":[{"name":"paned"}],"output":{"name":"option"}}],[11,"get_position","","Obtains the position of the divider between the two panes.",242,{"inputs":[{"name":"paned"}],"output":{"name":"i32"}}],[11,"get_wide_handle","","Gets the `Paned:wide-handle` property.",242,{"inputs":[{"name":"paned"}],"output":{"name":"bool"}}],[11,"pack1","","Adds a child to the top or left pane.\n## `child`\nthe child to add\n## `resize`\nshould this child expand when the paned widget is resized.\n## `shrink`\ncan this child be made smaller than its requisition.",242,{"inputs":[{"name":"paned"},{"name":"t"},{"name":"bool"},{"name":"bool"}],"output":null}],[11,"pack2","","Adds a child to the bottom or right pane.\n## `child`\nthe child to add\n## `resize`\nshould this child expand when the paned widget is resized.\n## `shrink`\ncan this child be made smaller than its requisition.",242,{"inputs":[{"name":"paned"},{"name":"t"},{"name":"bool"},{"name":"bool"}],"output":null}],[11,"set_position","","Sets the position of the divider between the two panes.\n## `position`\npixel position of divider, a negative value means that the position\n is unset.",242,{"inputs":[{"name":"paned"},{"name":"i32"}],"output":null}],[11,"set_wide_handle","","Sets the `Paned:wide-handle` property.",242,{"inputs":[{"name":"paned"},{"name":"bool"}],"output":null}],[11,"hash","","",243,null],[11,"fmt","","",243,{"inputs":[{"name":"placessidebar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",243,{"inputs":[{"name":"placessidebar"}],"output":{"name":"placessidebar"}}],[11,"static_type","","",243,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",243,{"inputs":[{"name":"placessidebar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `PlacesSidebar` widget.",243,{"inputs":[],"output":{"name":"placessidebar"}}],[11,"get_local_only","","Returns the value previously set with `PlacesSidebar::set_local_only`.",243,{"inputs":[{"name":"placessidebar"}],"output":{"name":"bool"}}],[11,"get_open_flags","","Gets the open flags.",243,{"inputs":[{"name":"placessidebar"}],"output":{"name":"placesopenflags"}}],[11,"get_show_connect_to_server","","Returns the value previously set with `PlacesSidebar::set_show_connect_to_server`",243,{"inputs":[{"name":"placessidebar"}],"output":{"name":"bool"}}],[11,"get_show_desktop","","Returns the value previously set with `PlacesSidebar::set_show_desktop`",243,{"inputs":[{"name":"placessidebar"}],"output":{"name":"bool"}}],[11,"get_show_enter_location","","Returns the value previously set with `PlacesSidebar::set_show_enter_location`",243,{"inputs":[{"name":"placessidebar"}],"output":{"name":"bool"}}],[11,"set_local_only","","Sets whether the `self` should only show local files.",243,{"inputs":[{"name":"placessidebar"},{"name":"bool"}],"output":null}],[11,"set_open_flags","","Sets the way in which the calling application can open new locations from\nthe places sidebar. For example, some applications only open locations\n“directly” into their main view, while others may support opening locations\nin a new notebook tab or a new window.",243,{"inputs":[{"name":"placessidebar"},{"name":"placesopenflags"}],"output":null}],[11,"set_show_connect_to_server","","Sets whether the `self` should show an item for connecting to a network server; this is off by default.\nAn application may want to turn this on if it implements a way for the user to connect\nto network servers directly.",243,{"inputs":[{"name":"placessidebar"},{"name":"bool"}],"output":null}],[11,"set_show_desktop","","Sets whether the `self` should show an item for the Desktop folder.\nThe default value for this option is determined by the desktop\nenvironment and the user’s configuration, but this function can be\nused to override it on a per-application basis.",243,{"inputs":[{"name":"placessidebar"},{"name":"bool"}],"output":null}],[11,"set_show_enter_location","","Sets whether the `self` should show an item for connecting to a network server; this is off by default.\nAn application may want to turn this on if it implements a way for the user to connect\nto network servers directly.",243,{"inputs":[{"name":"placessidebar"},{"name":"bool"}],"output":null}],[11,"hash","","",244,null],[11,"fmt","","",244,{"inputs":[{"name":"popover"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",244,{"inputs":[{"name":"popover"}],"output":{"name":"popover"}}],[11,"static_type","","",244,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",244,{"inputs":[{"name":"popover"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new popover to point to `relative_to`",244,{"inputs":[{"name":"option"}],"output":{"name":"popover"}}],[11,"hash","","",245,null],[11,"fmt","","",245,{"inputs":[{"name":"popovermenu"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",245,{"inputs":[{"name":"popovermenu"}],"output":{"name":"popovermenu"}}],[11,"static_type","","",245,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",245,{"inputs":[{"name":"popovermenu"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new popover menu.",245,{"inputs":[],"output":{"name":"popovermenu"}}],[11,"open_submenu","","Opens a submenu of the `self`. The `name`\nmust be one of the names given to the submenus\nof `self` with `PopoverMenu:submenu`, or\n&quot;main&quot; to switch back to the main menu.",245,{"inputs":[{"name":"popovermenu"},{"name":"str"}],"output":null}],[11,"hash","","",246,null],[11,"fmt","","",246,{"inputs":[{"name":"printsettings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"printsettings"}}],[11,"static_type","","",246,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",246,{"inputs":[{"name":"printsettings"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `PrintSettings` object.",246,{"inputs":[],"output":{"name":"printsettings"}}],[11,"new_from_file","","Reads the print settings from `file_name`. Returns a new `PrintSettings`\nobject with the restored settings, or `None` if an error occurred. If the\nfile could not be loaded then error is set to either a `glib::FileError` or\n`glib::KeyFileError`. See `PrintSettings::to_file`.\n## `file_name`\nthe filename to read the settings from",246,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"copy","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"option"}}],[11,"get","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_bool","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":{"name":"bool"}}],[11,"get_collate","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"bool"}}],[11,"get_default_source","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"option"}}],[11,"get_dither","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"option"}}],[11,"get_double","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":{"name":"f64"}}],[11,"get_double_with_default","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"f64"}],"output":{"name":"f64"}}],[11,"get_duplex","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"printduplex"}}],[11,"get_finishings","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"option"}}],[11,"get_int","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":{"name":"i32"}}],[11,"get_int_with_default","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_length","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_media_type","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"option"}}],[11,"get_n_copies","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"i32"}}],[11,"get_number_up","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"i32"}}],[11,"get_number_up_layout","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"numberuplayout"}}],[11,"get_orientation","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"pageorientation"}}],[11,"get_output_bin","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"option"}}],[11,"get_page_set","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"pageset"}}],[11,"get_paper_height","","",246,{"inputs":[{"name":"printsettings"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_paper_size","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"papersize"}}],[11,"get_paper_width","","",246,{"inputs":[{"name":"printsettings"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_print_pages","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"printpages"}}],[11,"get_printer","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"option"}}],[11,"get_printer_lpi","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"f64"}}],[11,"get_quality","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"printquality"}}],[11,"get_resolution","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"i32"}}],[11,"get_resolution_x","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"i32"}}],[11,"get_resolution_y","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"i32"}}],[11,"get_reverse","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"bool"}}],[11,"get_scale","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"f64"}}],[11,"get_use_color","","",246,{"inputs":[{"name":"printsettings"}],"output":{"name":"bool"}}],[11,"has_key","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":{"name":"bool"}}],[11,"load_file","","",246,{"inputs":[{"name":"printsettings"},{"name":"t"}],"output":{"name":"result"}}],[11,"set","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"option"}],"output":null}],[11,"set_bool","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"bool"}],"output":null}],[11,"set_collate","","",246,{"inputs":[{"name":"printsettings"},{"name":"bool"}],"output":null}],[11,"set_default_source","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":null}],[11,"set_dither","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":null}],[11,"set_double","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"f64"}],"output":null}],[11,"set_duplex","","",246,{"inputs":[{"name":"printsettings"},{"name":"printduplex"}],"output":null}],[11,"set_finishings","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":null}],[11,"set_int","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"i32"}],"output":null}],[11,"set_length","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"set_media_type","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":null}],[11,"set_n_copies","","",246,{"inputs":[{"name":"printsettings"},{"name":"i32"}],"output":null}],[11,"set_number_up","","",246,{"inputs":[{"name":"printsettings"},{"name":"i32"}],"output":null}],[11,"set_number_up_layout","","",246,{"inputs":[{"name":"printsettings"},{"name":"numberuplayout"}],"output":null}],[11,"set_orientation","","",246,{"inputs":[{"name":"printsettings"},{"name":"pageorientation"}],"output":null}],[11,"set_output_bin","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":null}],[11,"set_page_set","","",246,{"inputs":[{"name":"printsettings"},{"name":"pageset"}],"output":null}],[11,"set_paper_height","","",246,{"inputs":[{"name":"printsettings"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"set_paper_size","","",246,{"inputs":[{"name":"printsettings"},{"name":"papersize"}],"output":null}],[11,"set_paper_width","","",246,{"inputs":[{"name":"printsettings"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"set_print_pages","","",246,{"inputs":[{"name":"printsettings"},{"name":"printpages"}],"output":null}],[11,"set_printer","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":null}],[11,"set_printer_lpi","","",246,{"inputs":[{"name":"printsettings"},{"name":"f64"}],"output":null}],[11,"set_quality","","",246,{"inputs":[{"name":"printsettings"},{"name":"printquality"}],"output":null}],[11,"set_resolution","","",246,{"inputs":[{"name":"printsettings"},{"name":"i32"}],"output":null}],[11,"set_resolution_xy","","",246,{"inputs":[{"name":"printsettings"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_reverse","","",246,{"inputs":[{"name":"printsettings"},{"name":"bool"}],"output":null}],[11,"set_scale","","",246,{"inputs":[{"name":"printsettings"},{"name":"f64"}],"output":null}],[11,"set_use_color","","",246,{"inputs":[{"name":"printsettings"},{"name":"bool"}],"output":null}],[11,"to_file","","",246,{"inputs":[{"name":"printsettings"},{"name":"t"}],"output":{"name":"result"}}],[11,"unset","","",246,{"inputs":[{"name":"printsettings"},{"name":"str"}],"output":null}],[11,"hash","","",247,null],[11,"fmt","","",247,{"inputs":[{"name":"progressbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",247,{"inputs":[{"name":"progressbar"}],"output":{"name":"progressbar"}}],[11,"static_type","","",247,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",247,{"inputs":[{"name":"progressbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ProgressBar`.",247,{"inputs":[],"output":{"name":"progressbar"}}],[11,"get_fraction","","Returns the current fraction of the task that’s been completed.",247,{"inputs":[{"name":"progressbar"}],"output":{"name":"f64"}}],[11,"get_inverted","","Gets the value set by `ProgressBar::set_inverted`.",247,{"inputs":[{"name":"progressbar"}],"output":{"name":"bool"}}],[11,"get_pulse_step","","Retrieves the pulse step set with `ProgressBar::set_pulse_step`.",247,{"inputs":[{"name":"progressbar"}],"output":{"name":"f64"}}],[11,"get_show_text","","Gets the value of the `ProgressBar:show-text` property.\nSee `ProgressBar::set_show_text`.",247,{"inputs":[{"name":"progressbar"}],"output":{"name":"bool"}}],[11,"get_text","","Retrieves the text displayed superimposed on the progress bar,\nif any, otherwise `None`. The return value is a reference\nto the text, not a copy of it, so will become invalid\nif you change the text in the progress bar.",247,{"inputs":[{"name":"progressbar"}],"output":{"name":"option"}}],[11,"pulse","","Indicates that some progress has been made, but you don’t know how much.\nCauses the progress bar to enter “activity mode,” where a block\nbounces back and forth. Each call to `ProgressBar::pulse`\ncauses the block to move by a little bit (the amount of movement\nper pulse is determined by `ProgressBar::set_pulse_step`).",247,{"inputs":[{"name":"progressbar"}],"output":null}],[11,"set_fraction","","Causes the progress bar to “fill in” the given fraction\nof the bar. The fraction should be between 0.0 and 1.0,\ninclusive.\n## `fraction`\nfraction of the task that’s been completed",247,{"inputs":[{"name":"progressbar"},{"name":"f64"}],"output":null}],[11,"set_inverted","","Progress bars normally grow from top to bottom or left to right.\nInverted progress bars grow in the opposite direction.\n## `inverted`\n`true` to invert the progress bar",247,{"inputs":[{"name":"progressbar"},{"name":"bool"}],"output":null}],[11,"set_pulse_step","","Sets the fraction of total progress bar length to move the\nbouncing block for each call to `ProgressBar::pulse`.\n## `fraction`\nfraction between 0.0 and 1.0",247,{"inputs":[{"name":"progressbar"},{"name":"f64"}],"output":null}],[11,"set_show_text","","Sets whether the progress bar will show text superimposed\nover the bar. The shown text is either the value of\nthe `ProgressBar:text` property or, if that is `None`,\nthe `ProgressBar:fraction` value, as a percentage.",247,{"inputs":[{"name":"progressbar"},{"name":"bool"}],"output":null}],[11,"set_text","","Causes the given `text` to appear superimposed on the progress bar.",247,{"inputs":[{"name":"progressbar"},{"name":"option"}],"output":null}],[11,"hash","","",248,null],[11,"fmt","","",248,{"inputs":[{"name":"radiobutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",248,{"inputs":[{"name":"radiobutton"}],"output":{"name":"radiobutton"}}],[11,"static_type","","",248,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",248,{"inputs":[{"name":"radiobutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `RadioButton`. To be of any practical value, a widget should\nthen be packed into the radio button.\n## `group`\nan existing\n radio button group, or `None` if you are creating a new group.",248,null],[11,"new_from_widget","","Creates a new `RadioButton`, adding it to the same group as\n`radio_group_member`. As with `RadioButton::new`, a widget\nshould be packed into the radio button.\n## `radio_group_member`\nan existing `RadioButton`.",248,{"inputs":[{"name":"option"}],"output":{"name":"radiobutton"}}],[11,"new_with_label","","Creates a new `RadioButton` with a text label.\n## `group`\nan existing\n radio button group, or `None` if you are creating a new group.\n## `label`\nthe text label to display next to the radio button.",248,null],[11,"new_with_label_from_widget","","Creates a new `RadioButton` with a text label, adding it to\nthe same group as `radio_group_member`.\n## `radio_group_member`\nwidget to get radio group from or `None`\n## `label`\na text string to display next to the radio button.",248,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"radiobutton"}}],[11,"new_with_mnemonic","","Creates a new `RadioButton` containing a label, adding it to the same\ngroup as `group`. The label will be created using\n`Label::new_with_mnemonic`, so underscores in `label` indicate the\nmnemonic for the button.\n## `group`\nthe radio button\n group, or `None`\n## `label`\nthe text of the button, with an underscore in front of the\n mnemonic character",248,null],[11,"new_with_mnemonic_from_widget","","Creates a new `RadioButton` containing a label. The label\nwill be created using `Label::new_with_mnemonic`, so underscores\nin `label` indicate the mnemonic for the button.\n## `radio_group_member`\nwidget to get radio group from or `None`\n## `label`\nthe text of the button, with an underscore in front of the\n mnemonic character",248,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"radiobutton"}}],[11,"get_group","","Retrieves the group assigned to a radio button.",248,{"inputs":[{"name":"radiobutton"}],"output":{"name":"vec"}}],[11,"join_group","","Joins a `RadioButton` object to the group of another `RadioButton` object",248,{"inputs":[{"name":"radiobutton"},{"name":"option"}],"output":null}],[11,"set_group","","Sets a `RadioButton`’s group. It should be noted that this does not change\nthe layout of your interface in any way, so if you are changing the group,\nit is likely you will need to re-arrange the user interface to reflect these\nchanges.\n## `group`\nan existing radio\n button group, such as one returned from `RadioButton::get_group`, or `None`.",248,null],[11,"hash","","",249,null],[11,"fmt","","",249,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",249,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"static_type","","",249,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",249,{"inputs":[{"name":"range"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",250,null],[11,"fmt","","",250,{"inputs":[{"name":"recentchooser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",250,{"inputs":[{"name":"recentchooser"}],"output":{"name":"recentchooser"}}],[11,"static_type","","",250,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",250,{"inputs":[{"name":"recentchooser"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",251,null],[11,"fmt","","",251,{"inputs":[{"name":"recentchooserdialog"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",251,{"inputs":[{"name":"recentchooserdialog"}],"output":{"name":"recentchooserdialog"}}],[11,"static_type","","",251,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",251,{"inputs":[{"name":"recentchooserdialog"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",252,null],[11,"fmt","","",252,{"inputs":[{"name":"recentchooserwidget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",252,{"inputs":[{"name":"recentchooserwidget"}],"output":{"name":"recentchooserwidget"}}],[11,"static_type","","",252,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",252,{"inputs":[{"name":"recentchooserwidget"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `RecentChooserWidget` object. This is an embeddable widget\nused to access the recently used resources list.",252,{"inputs":[],"output":{"name":"recentchooserwidget"}}],[11,"new_for_manager","","Creates a new `RecentChooserWidget` with a specified recent manager.",252,{"inputs":[{"name":"recentmanager"}],"output":{"name":"recentchooserwidget"}}],[11,"hash","","",253,null],[11,"fmt","","",253,{"inputs":[{"name":"recentfilter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",253,{"inputs":[{"name":"recentfilter"}],"output":{"name":"recentfilter"}}],[11,"static_type","","",253,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",253,{"inputs":[{"name":"recentfilter"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `RecentFilter` with no rules added to it.\nSuch filter does not accept any recently used resources, so is not\nparticularly useful until you add rules with\n`RecentFilter::add_pattern`, `RecentFilter::add_mime_type`,\n`RecentFilter::add_application`, `RecentFilter::add_age`.\nTo create a filter that accepts any recently used resource, use:",253,{"inputs":[],"output":{"name":"recentfilter"}}],[11,"add_age","","Adds a rule that allows resources based on their age - that is, the number\nof days elapsed since they were last modified.\n## `days`\nnumber of days",253,{"inputs":[{"name":"recentfilter"},{"name":"i32"}],"output":null}],[11,"add_application","","Adds a rule that allows resources based on the name of the application\nthat has registered them.\n## `application`\nan application name",253,{"inputs":[{"name":"recentfilter"},{"name":"str"}],"output":null}],[11,"add_group","","Adds a rule that allows resources based on the name of the group\nto which they belong\n## `group`\na group name",253,{"inputs":[{"name":"recentfilter"},{"name":"str"}],"output":null}],[11,"add_mime_type","","Adds a rule that allows resources based on their registered MIME type.\n## `mime_type`\na MIME type",253,{"inputs":[{"name":"recentfilter"},{"name":"str"}],"output":null}],[11,"add_pattern","","Adds a rule that allows resources based on a pattern matching their\ndisplay name.\n## `pattern`\na file pattern",253,{"inputs":[{"name":"recentfilter"},{"name":"str"}],"output":null}],[11,"add_pixbuf_formats","","Adds a rule allowing image files in the formats supported\nby `gdk_pixbuf::Pixbuf`.",253,{"inputs":[{"name":"recentfilter"}],"output":null}],[11,"get_name","","Gets the human-readable name for the filter.\nSee `RecentFilter::set_name`.",253,{"inputs":[{"name":"recentfilter"}],"output":{"name":"option"}}],[11,"get_needed","","Gets the fields that need to be filled in for the `RecentFilterInfo`\npassed to `RecentFilter::filter`",253,{"inputs":[{"name":"recentfilter"}],"output":{"name":"recentfilterflags"}}],[11,"set_name","","Sets the human-readable name of the filter; this is the string\nthat will be displayed in the recently used resources selector\nuser interface if there is a selectable list of filters.\n## `name`\nthen human readable name of `self`",253,{"inputs":[{"name":"recentfilter"},{"name":"str"}],"output":null}],[11,"hash","","",254,null],[11,"fmt","","",254,{"inputs":[{"name":"recentmanager"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",254,{"inputs":[{"name":"recentmanager"}],"output":{"name":"recentmanager"}}],[11,"static_type","","",254,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",254,{"inputs":[{"name":"recentmanager"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new recent manager object. Recent manager objects are used to\nhandle the list of recently used resources. A `RecentManager` object\nmonitors the recently used resources list, and emits the “changed” signal\neach time something inside the list changes.",254,{"inputs":[],"output":{"name":"recentmanager"}}],[11,"add_full","","Adds a new resource, pointed by `uri`, into the recently used\nresources list, using the metadata specified inside the\n`RecentData`-struct passed in `recent_data`.",254,{"inputs":[{"name":"recentmanager"},{"name":"str"},{"name":"recentdata"}],"output":{"name":"bool"}}],[11,"add_item","","Adds a new resource, pointed by `uri`, into the recently used\nresources list.",254,{"inputs":[{"name":"recentmanager"},{"name":"str"}],"output":{"name":"bool"}}],[11,"get_items","","Gets the list of recently used resources.",254,{"inputs":[{"name":"recentmanager"}],"output":{"name":"vec"}}],[11,"has_item","","Checks whether there is a recently used resource registered\nwith `uri` inside the recent manager.\n## `uri`\na URI",254,{"inputs":[{"name":"recentmanager"},{"name":"str"}],"output":{"name":"bool"}}],[11,"lookup_item","","Searches for a URI inside the recently used resources list, and\nreturns a `RecentInfo`-struct containing informations about the resource\nlike its MIME type, or its display name.\n## `uri`\na URI",254,{"inputs":[{"name":"recentmanager"},{"name":"str"}],"output":{"name":"result"}}],[11,"move_item","","Changes the location of a recently used resource from `uri` to `new_uri`.",254,{"inputs":[{"name":"recentmanager"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[11,"purge_items","","Purges every item from the recently used resources list.",254,{"inputs":[{"name":"recentmanager"}],"output":{"name":"result"}}],[11,"remove_item","","Removes a resource pointed by `uri` from the recently used resources\nlist handled by a recent manager.\n## `uri`\nthe URI of the item you wish to remove",254,{"inputs":[{"name":"recentmanager"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_default","","Gets a unique instance of `RecentManager`, that you can share\nin your application without caring about memory management.",254,{"inputs":[],"output":{"name":"option"}}],[11,"hash","","",255,null],[11,"fmt","","",255,{"inputs":[{"name":"revealer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",255,{"inputs":[{"name":"revealer"}],"output":{"name":"revealer"}}],[11,"static_type","","",255,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",255,{"inputs":[{"name":"revealer"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Revealer`.",255,{"inputs":[],"output":{"name":"revealer"}}],[11,"get_child_revealed","","Returns whether the child is fully revealed, ie wether\nthe transition to the revealed state is completed.",255,{"inputs":[{"name":"revealer"}],"output":{"name":"bool"}}],[11,"get_reveal_child","","Returns whether the child is currently\nrevealed. See `Revealer::set_reveal_child`.",255,{"inputs":[{"name":"revealer"}],"output":{"name":"bool"}}],[11,"get_transition_duration","","Returns the amount of time (in milliseconds) that\ntransitions will take.",255,{"inputs":[{"name":"revealer"}],"output":{"name":"u32"}}],[11,"get_transition_type","","Gets the type of animation that will be used\nfor transitions in `self`.",255,{"inputs":[{"name":"revealer"}],"output":{"name":"revealertransitiontype"}}],[11,"set_reveal_child","","Tells the `Revealer` to reveal or conceal its child.",255,{"inputs":[{"name":"revealer"},{"name":"bool"}],"output":null}],[11,"set_transition_duration","","Sets the duration that transitions will take.",255,{"inputs":[{"name":"revealer"},{"name":"u32"}],"output":null}],[11,"set_transition_type","","Sets the type of animation that will be used for\ntransitions in `self`. Available types include\nvarious kinds of fades and slides.",255,{"inputs":[{"name":"revealer"},{"name":"revealertransitiontype"}],"output":null}],[11,"hash","","",256,null],[11,"fmt","","",256,{"inputs":[{"name":"scale"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",256,{"inputs":[{"name":"scale"}],"output":{"name":"scale"}}],[11,"static_type","","",256,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",256,{"inputs":[{"name":"scale"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Scale`.\n## `orientation`\nthe scale’s orientation.\n## `adjustment`\nthe `Adjustment` which sets the range\n of the scale, or `None` to create a new adjustment.",256,{"inputs":[{"name":"orientation"},{"name":"option"}],"output":{"name":"scale"}}],[11,"new_with_range","","Creates a new scale widget with the given orientation that lets the\nuser input a number between `min` and `max` (including `min` and `max`)\nwith the increment `step`. `step` must be nonzero; it’s the distance\nthe slider moves when using the arrow keys to adjust the scale\nvalue.",256,{"inputs":[{"name":"orientation"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"scale"}}],[11,"add_mark","","Adds a mark at `value`.",256,{"inputs":[{"name":"scale"},{"name":"f64"},{"name":"positiontype"},{"name":"option"}],"output":null}],[11,"clear_marks","","Removes any marks that have been added with `Scale::add_mark`.",256,{"inputs":[{"name":"scale"}],"output":null}],[11,"get_digits","","Gets the number of decimal places that are displayed in the value.",256,{"inputs":[{"name":"scale"}],"output":{"name":"i32"}}],[11,"get_draw_value","","Returns whether the current value is displayed as a string\nnext to the slider.",256,{"inputs":[{"name":"scale"}],"output":{"name":"bool"}}],[11,"get_has_origin","","Returns whether the scale has an origin.",256,{"inputs":[{"name":"scale"}],"output":{"name":"bool"}}],[11,"get_layout_offsets","","Obtains the coordinates where the scale will draw the\n`pango::Layout` representing the text in the scale. Remember\nwhen using the `pango::Layout` function you need to convert to\nand from pixels using PANGO_PIXELS() or `PANGO_SCALE`.",256,null],[11,"get_value_pos","","Gets the position in which the current value is displayed.",256,{"inputs":[{"name":"scale"}],"output":{"name":"positiontype"}}],[11,"set_digits","","Sets the number of decimal places that are displayed in the value.\nAlso causes the value of the adjustment to be rounded off to this\nnumber of digits, so the retrieved value matches the value the user saw.\n## `digits`\nthe number of decimal places to display,\n e.g. use 1 to display 1.0, 2 to display 1.00, etc",256,{"inputs":[{"name":"scale"},{"name":"i32"}],"output":null}],[11,"set_draw_value","","Specifies whether the current value is displayed as a string next\nto the slider.\n## `draw_value`\n`true` to draw the value",256,{"inputs":[{"name":"scale"},{"name":"bool"}],"output":null}],[11,"set_has_origin","","If `has_origin` is set to `true` (the default),\nthe scale will highlight the part of the scale\nbetween the origin (bottom or left side) of the scale\nand the current value.\n## `has_origin`\n`true` if the scale has an origin",256,{"inputs":[{"name":"scale"},{"name":"bool"}],"output":null}],[11,"set_value_pos","","Sets the position in which the current value is displayed.\n## `pos`\nthe position in which the current value is displayed",256,{"inputs":[{"name":"scale"},{"name":"positiontype"}],"output":null}],[11,"hash","","",257,null],[11,"fmt","","",257,{"inputs":[{"name":"scalebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",257,{"inputs":[{"name":"scalebutton"}],"output":{"name":"scalebutton"}}],[11,"static_type","","",257,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",257,{"inputs":[{"name":"scalebutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `ScaleButton`, with a range between `min` and `max`, with\na stepping of `step`.\n## `size`\na stock icon size\n## `min`\nthe minimum value of the scale (usually 0)\n## `max`\nthe maximum value of the scale (usually 100)\n## `step`\nthe stepping of value when a scroll-wheel event,\n or up/down arrow event occurs (usually 2)\n## `icons`\na `None`-terminated\n array of icon names, or `None` if you want to set the list\n later with `ScaleButtonExt::set_icons`",257,null],[11,"hash","","",258,null],[11,"fmt","","",258,{"inputs":[{"name":"scrollable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",258,{"inputs":[{"name":"scrollable"}],"output":{"name":"scrollable"}}],[11,"static_type","","",258,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",258,{"inputs":[{"name":"scrollable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",259,null],[11,"fmt","","",259,{"inputs":[{"name":"scrollbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",259,{"inputs":[{"name":"scrollbar"}],"output":{"name":"scrollbar"}}],[11,"static_type","","",259,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",259,{"inputs":[{"name":"scrollbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new scrollbar with the given orientation.\n## `orientation`\nthe scrollbar’s orientation.\n## `adjustment`\nthe `Adjustment` to use, or `None` to create a new adjustment.",259,{"inputs":[{"name":"orientation"},{"name":"option"}],"output":{"name":"scrollbar"}}],[11,"hash","","",260,null],[11,"fmt","","",260,{"inputs":[{"name":"scrolledwindow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",260,{"inputs":[{"name":"scrolledwindow"}],"output":{"name":"scrolledwindow"}}],[11,"static_type","","",260,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",260,{"inputs":[{"name":"scrolledwindow"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new scrolled window.",260,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"scrolledwindow"}}],[11,"hash","","",261,null],[11,"fmt","","",261,{"inputs":[{"name":"searchbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",261,{"inputs":[{"name":"searchbar"}],"output":{"name":"searchbar"}}],[11,"static_type","","",261,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",261,{"inputs":[{"name":"searchbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `SearchBar`. You will need to tell it about\nwhich widget is going to be your text entry using\n`SearchBar::connect_entry`.",261,{"inputs":[],"output":{"name":"searchbar"}}],[11,"connect_entry","","Connects the `Entry` widget passed as the one to be used in\nthis search bar. The entry should be a descendant of the search bar.\nThis is only required if the entry isn’t the direct child of the\nsearch bar (as in our main example).",261,{"inputs":[{"name":"searchbar"},{"name":"t"}],"output":null}],[11,"get_search_mode","","Returns whether the search mode is on or off.",261,{"inputs":[{"name":"searchbar"}],"output":{"name":"bool"}}],[11,"get_show_close_button","","Returns whether the close button is shown.",261,{"inputs":[{"name":"searchbar"}],"output":{"name":"bool"}}],[11,"set_search_mode","","Switches the search mode on or off.",261,{"inputs":[{"name":"searchbar"},{"name":"bool"}],"output":null}],[11,"set_show_close_button","","Shows or hides the close button. Applications that\nalready have a “search” toggle button should not show a close\nbutton in their search bar, as it duplicates the role of the\ntoggle button.",261,{"inputs":[{"name":"searchbar"},{"name":"bool"}],"output":null}],[11,"hash","","",262,null],[11,"fmt","","",262,{"inputs":[{"name":"searchentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",262,{"inputs":[{"name":"searchentry"}],"output":{"name":"searchentry"}}],[11,"static_type","","",262,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",262,{"inputs":[{"name":"searchentry"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `SearchEntry`, with a find icon when the search field is\nempty, and a clear icon when it isn&#39;t.",262,{"inputs":[],"output":{"name":"searchentry"}}],[11,"hash","","",263,null],[11,"fmt","","",263,{"inputs":[{"name":"separator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",263,{"inputs":[{"name":"separator"}],"output":{"name":"separator"}}],[11,"static_type","","",263,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",263,{"inputs":[{"name":"separator"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Separator` with the given orientation.\n## `orientation`\nthe separator’s orientation.",263,{"inputs":[{"name":"orientation"}],"output":{"name":"separator"}}],[11,"hash","","",264,null],[11,"fmt","","",264,{"inputs":[{"name":"separatormenuitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",264,{"inputs":[{"name":"separatormenuitem"}],"output":{"name":"separatormenuitem"}}],[11,"static_type","","",264,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",264,{"inputs":[{"name":"separatormenuitem"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `SeparatorMenuItem`.",264,{"inputs":[],"output":{"name":"separatormenuitem"}}],[11,"hash","","",265,null],[11,"fmt","","",265,{"inputs":[{"name":"separatortoolitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",265,{"inputs":[{"name":"separatortoolitem"}],"output":{"name":"separatortoolitem"}}],[11,"static_type","","",265,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",265,{"inputs":[{"name":"separatortoolitem"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `SeparatorToolItem`",265,{"inputs":[],"output":{"name":"separatortoolitem"}}],[11,"get_draw","","Returns whether `self` is drawn as a line, or just blank.\nSee `SeparatorToolItem::set_draw`.",265,{"inputs":[{"name":"separatortoolitem"}],"output":{"name":"bool"}}],[11,"set_draw","","Whether `self` is drawn as a vertical line, or just blank.\nSetting this to `false` along with `ToolItem::set_expand` is useful\nto create an item that forces following items to the end of the toolbar.\n## `draw`\nwhether `self` is drawn as a vertical line",265,{"inputs":[{"name":"separatortoolitem"},{"name":"bool"}],"output":null}],[11,"hash","","",266,null],[11,"fmt","","",266,{"inputs":[{"name":"sizegroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",266,{"inputs":[{"name":"sizegroup"}],"output":{"name":"sizegroup"}}],[11,"static_type","","",266,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",266,{"inputs":[{"name":"sizegroup"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `SizeGroup`.\n## `mode`\nthe mode for the new size group.",266,{"inputs":[{"name":"sizegroupmode"}],"output":{"name":"sizegroup"}}],[11,"add_widget","","Adds a widget to a `SizeGroup`. In the future, the requisition\nof the widget will be determined as the maximum of its requisition\nand the requisition of the other widgets in the size group.\nWhether this applies horizontally, vertically, or in both directions\ndepends on the mode of the size group. See `SizeGroup::set_mode`.",266,{"inputs":[{"name":"sizegroup"},{"name":"t"}],"output":null}],[11,"get_ignore_hidden","","Returns if invisible widgets are ignored when calculating the size.",266,{"inputs":[{"name":"sizegroup"}],"output":{"name":"bool"}}],[11,"get_mode","","Gets the current mode of the size group. See `SizeGroup::set_mode`.",266,{"inputs":[{"name":"sizegroup"}],"output":{"name":"sizegroupmode"}}],[11,"get_widgets","","Returns the list of widgets associated with `self`.",266,{"inputs":[{"name":"sizegroup"}],"output":{"name":"vec"}}],[11,"remove_widget","","Removes a widget from a `SizeGroup`.\n## `widget`\nthe `Widget` to remove",266,{"inputs":[{"name":"sizegroup"},{"name":"t"}],"output":null}],[11,"set_ignore_hidden","","Sets whether unmapped widgets should be ignored when\ncalculating the size.\n## `ignore_hidden`\nwhether unmapped widgets should be ignored\n when calculating the size",266,{"inputs":[{"name":"sizegroup"},{"name":"bool"}],"output":null}],[11,"set_mode","","Sets the `SizeGroupMode` of the size group. The mode of the size\ngroup determines whether the widgets in the size group should\nall have the same horizontal requisition (`SizeGroupMode::Horizontal`)\nall have the same vertical requisition (`SizeGroupMode::Vertical`),\nor should all have the same requisition in both directions\n(`SizeGroupMode::Both`).\n## `mode`\nthe mode to set for the size group.",266,{"inputs":[{"name":"sizegroup"},{"name":"sizegroupmode"}],"output":null}],[11,"hash","","",267,null],[11,"fmt","","",267,{"inputs":[{"name":"spinbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"spinbutton"}}],[11,"static_type","","",267,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",267,{"inputs":[{"name":"spinbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `SpinButton`.\n## `adjustment`\nthe `Adjustment` object that this spin\n button should use, or `None`\n## `climb_rate`\nspecifies how much the spin button changes when an arrow\n is clicked on\n## `digits`\nthe number of decimal places to display",267,{"inputs":[{"name":"option"},{"name":"f64"},{"name":"u32"}],"output":{"name":"spinbutton"}}],[11,"new_with_range","","This is a convenience constructor that allows creation of a numeric\n`SpinButton` without manually creating an adjustment. The value is\ninitially set to the minimum value and a page increment of 10 * `step`\nis the default. The precision of the spin button is equivalent to the\nprecision of `step`.",267,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"spinbutton"}}],[11,"configure","","Changes the properties of an existing spin button. The adjustment,\nclimb rate, and number of decimal places are all changed accordingly,\nafter this function call.\n## `adjustment`\na `Adjustment`\n## `climb_rate`\nthe new climb rate\n## `digits`\nthe number of decimal places to display in the spin button",267,{"inputs":[{"name":"spinbutton"},{"name":"option"},{"name":"f64"},{"name":"u32"}],"output":null}],[11,"get_adjustment","","Get the adjustment associated with a `SpinButton`",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"adjustment"}}],[11,"get_digits","","Fetches the precision of `self`. See `SpinButton::set_digits`.",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"u32"}}],[11,"get_increments","","Gets the current step and page the increments used by `self`. See\n`SpinButton::set_increments`.\n## `step`\nlocation to store step increment, or `None`\n## `page`\nlocation to store page increment, or `None`",267,null],[11,"get_numeric","","Returns whether non-numeric text can be typed into the spin button.\nSee `SpinButton::set_numeric`.",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"bool"}}],[11,"get_range","","Gets the range allowed for `self`.\nSee `SpinButton::set_range`.\n## `min`\nlocation to store minimum allowed value, or `None`\n## `max`\nlocation to store maximum allowed value, or `None`",267,null],[11,"get_snap_to_ticks","","Returns whether the values are corrected to the nearest step.\nSee `SpinButton::set_snap_to_ticks`.",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"bool"}}],[11,"get_update_policy","","Gets the update behavior of a spin button.\nSee `SpinButton::set_update_policy`.",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"spinbuttonupdatepolicy"}}],[11,"get_value","","Get the value in the `self`.",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"f64"}}],[11,"get_value_as_int","","Get the value `self` represented as an integer.",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"i32"}}],[11,"get_wrap","","Returns whether the spin button’s value wraps around to the\nopposite limit when the upper or lower limit of the range is\nexceeded. See `SpinButton::set_wrap`.",267,{"inputs":[{"name":"spinbutton"}],"output":{"name":"bool"}}],[11,"set_adjustment","","Replaces the `Adjustment` associated with `self`.\n## `adjustment`\na `Adjustment` to replace the existing adjustment",267,{"inputs":[{"name":"spinbutton"},{"name":"adjustment"}],"output":null}],[11,"set_digits","","Set the precision to be displayed by `self`. Up to 20 digit precision\nis allowed.\n## `digits`\nthe number of digits after the decimal point to be displayed for the spin button’s value",267,{"inputs":[{"name":"spinbutton"},{"name":"u32"}],"output":null}],[11,"set_increments","","Sets the step and page increments for spin_button. This affects how\nquickly the value changes when the spin button’s arrows are activated.\n## `step`\nincrement applied for a button 1 press.\n## `page`\nincrement applied for a button 2 press.",267,{"inputs":[{"name":"spinbutton"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_numeric","","Sets the flag that determines if non-numeric text can be typed\ninto the spin button.\n## `numeric`\nflag indicating if only numeric entry is allowed",267,{"inputs":[{"name":"spinbutton"},{"name":"bool"}],"output":null}],[11,"set_range","","Sets the minimum and maximum allowable values for `self`.",267,{"inputs":[{"name":"spinbutton"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_snap_to_ticks","","Sets the policy as to whether values are corrected to the\nnearest step increment when a spin button is activated after\nproviding an invalid value.\n## `snap_to_ticks`\na flag indicating if invalid values should be corrected",267,{"inputs":[{"name":"spinbutton"},{"name":"bool"}],"output":null}],[11,"set_update_policy","","Sets the update behavior of a spin button.\nThis determines whether the spin button is always updated\nor only when a valid value is set.\n## `policy`\na `SpinButtonUpdatePolicy` value",267,{"inputs":[{"name":"spinbutton"},{"name":"spinbuttonupdatepolicy"}],"output":null}],[11,"set_value","","Sets the value of `self`.\n## `value`\nthe new value",267,{"inputs":[{"name":"spinbutton"},{"name":"f64"}],"output":null}],[11,"set_wrap","","Sets the flag that determines if a spin button value wraps\naround to the opposite limit when the upper or lower limit\nof the range is exceeded.\n## `wrap`\na flag indicating if wrapping behavior is performed",267,{"inputs":[{"name":"spinbutton"},{"name":"bool"}],"output":null}],[11,"spin","","Increment or decrement a spin button’s value in a specified\ndirection by a specified amount.\n## `direction`\na `SpinType` indicating the direction to spin\n## `increment`\nstep increment to apply in the specified direction",267,{"inputs":[{"name":"spinbutton"},{"name":"spintype"},{"name":"f64"}],"output":null}],[11,"update","","Manually force an update of the spin button.",267,{"inputs":[{"name":"spinbutton"}],"output":null}],[11,"hash","","",268,null],[11,"fmt","","",268,{"inputs":[{"name":"spinner"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",268,{"inputs":[{"name":"spinner"}],"output":{"name":"spinner"}}],[11,"static_type","","",268,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",268,{"inputs":[{"name":"spinner"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a new spinner widget. Not yet started.",268,{"inputs":[],"output":{"name":"spinner"}}],[11,"start","","Starts the animation of the spinner.",268,{"inputs":[{"name":"spinner"}],"output":null}],[11,"stop","","Stops the animation of the spinner.",268,{"inputs":[{"name":"spinner"}],"output":null}],[11,"hash","","",269,null],[11,"fmt","","",269,{"inputs":[{"name":"stack"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",269,{"inputs":[{"name":"stack"}],"output":{"name":"stack"}}],[11,"static_type","","",269,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",269,{"inputs":[{"name":"stack"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Stack` container.",269,{"inputs":[],"output":{"name":"stack"}}],[11,"add_named","","Adds a child to `self`.\nThe child is identified by the `name`.",269,{"inputs":[{"name":"stack"},{"name":"t"},{"name":"str"}],"output":null}],[11,"add_titled","","Adds a child to `self`.\nThe child is identified by the `name`. The `title`\nwill be used by `StackSwitcher` to represent\n`child` in a tab bar, so it should be short.",269,{"inputs":[{"name":"stack"},{"name":"t"},{"name":"str"},{"name":"str"}],"output":null}],[11,"get_child_by_name","","Finds the child of the `Stack` with the name given as\nthe argument. Returns `None` if there is no child with this\nname.",269,{"inputs":[{"name":"stack"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_hhomogeneous","","Gets whether `self` is horizontally homogeneous.\nSee `Stack::set_hhomogeneous`.",269,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get_homogeneous","","Gets whether `self` is homogeneous.\nSee `Stack::set_homogeneous`.",269,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get_transition_duration","","Returns the amount of time (in milliseconds) that\ntransitions between pages in `self` will take.",269,{"inputs":[{"name":"stack"}],"output":{"name":"u32"}}],[11,"get_transition_running","","Returns whether the `self` is currently in a transition from one page to\nanother.",269,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get_transition_type","","Gets the type of animation that will be used\nfor transitions between pages in `self`.",269,{"inputs":[{"name":"stack"}],"output":{"name":"stacktransitiontype"}}],[11,"get_vhomogeneous","","Gets whether `self` is vertically homogeneous.\nSee `Stack::set_vhomogeneous`.",269,{"inputs":[{"name":"stack"}],"output":{"name":"bool"}}],[11,"get_visible_child","","Gets the currently visible child of `self`, or `None` if\nthere are no visible children.",269,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"get_visible_child_name","","Returns the name of the currently visible child of `self`, or\n`None` if there is no visible child.",269,{"inputs":[{"name":"stack"}],"output":{"name":"option"}}],[11,"set_hhomogeneous","","Sets the `Stack` to be horizontally homogeneous or not.\nIf it is homogeneous, the `Stack` will request the same\nwidth for all its children. If it isn&#39;t, the stack\nmay change width when a different child becomes visible.",269,{"inputs":[{"name":"stack"},{"name":"bool"}],"output":null}],[11,"set_homogeneous","","Sets the `Stack` to be homogeneous or not. If it\nis homogeneous, the `Stack` will request the same\nsize for all its children. If it isn&#39;t, the stack\nmay change size when a different child becomes visible.",269,{"inputs":[{"name":"stack"},{"name":"bool"}],"output":null}],[11,"set_transition_duration","","Sets the duration that transitions between pages in `self`\nwill take.",269,{"inputs":[{"name":"stack"},{"name":"u32"}],"output":null}],[11,"set_transition_type","","Sets the type of animation that will be used for\ntransitions between pages in `self`. Available\ntypes include various kinds of fades and slides.",269,{"inputs":[{"name":"stack"},{"name":"stacktransitiontype"}],"output":null}],[11,"set_vhomogeneous","","Sets the `Stack` to be vertically homogeneous or not.\nIf it is homogeneous, the `Stack` will request the same\nheight for all its children. If it isn&#39;t, the stack\nmay change height when a different child becomes visible.",269,{"inputs":[{"name":"stack"},{"name":"bool"}],"output":null}],[11,"set_visible_child","","Makes `child` the visible child of `self`.",269,{"inputs":[{"name":"stack"},{"name":"t"}],"output":null}],[11,"set_visible_child_full","","Makes the child with the given name visible.",269,{"inputs":[{"name":"stack"},{"name":"str"},{"name":"stacktransitiontype"}],"output":null}],[11,"set_visible_child_name","","Makes the child with the given name visible.",269,{"inputs":[{"name":"stack"},{"name":"str"}],"output":null}],[11,"hash","","",270,null],[11,"fmt","","",270,{"inputs":[{"name":"stacksidebar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",270,{"inputs":[{"name":"stacksidebar"}],"output":{"name":"stacksidebar"}}],[11,"static_type","","",270,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",270,{"inputs":[{"name":"stacksidebar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new sidebar.",270,{"inputs":[],"output":{"name":"stacksidebar"}}],[11,"get_stack","","Retrieves the stack.\nSee `StackSidebar::set_stack`.",270,{"inputs":[{"name":"stacksidebar"}],"output":{"name":"option"}}],[11,"set_stack","","Set the `Stack` associated with this `StackSidebar`.",270,{"inputs":[{"name":"stacksidebar"},{"name":"stack"}],"output":null}],[11,"hash","","",271,null],[11,"fmt","","",271,{"inputs":[{"name":"stackswitcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",271,{"inputs":[{"name":"stackswitcher"}],"output":{"name":"stackswitcher"}}],[11,"static_type","","",271,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",271,{"inputs":[{"name":"stackswitcher"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `StackSwitcher`.",271,{"inputs":[],"output":{"name":"stackswitcher"}}],[11,"get_stack","","Retrieves the stack.\nSee `StackSwitcher::set_stack`.",271,{"inputs":[{"name":"stackswitcher"}],"output":{"name":"option"}}],[11,"set_stack","","Sets the stack to control.",271,{"inputs":[{"name":"stackswitcher"},{"name":"option"}],"output":null}],[11,"hash","","",272,null],[11,"fmt","","",272,{"inputs":[{"name":"statusicon"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"statusicon"}}],[11,"static_type","","",272,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",272,{"inputs":[{"name":"statusicon"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates an empty status icon object.",272,{"inputs":[],"output":{"name":"statusicon"}}],[11,"new_from_file","","Creates a status icon displaying the file `filename`.",272,{"inputs":[{"name":"t"}],"output":{"name":"statusicon"}}],[11,"new_from_icon_name","","Creates a status icon displaying an icon from the current icon theme.\nIf the current icon theme is changed, the icon will be updated\nappropriately.",272,{"inputs":[{"name":"str"}],"output":{"name":"statusicon"}}],[11,"new_from_pixbuf","","Creates a status icon displaying `pixbuf`.",272,{"inputs":[{"name":"pixbuf"}],"output":{"name":"statusicon"}}],[11,"new_from_stock","","Creates a status icon displaying a stock icon. Sample stock icon\nnames are `GTK_STOCK_OPEN`, `GTK_STOCK_QUIT`. You can register your\nown stock icon names, see `IconFactory::add_default` and\n`IconFactory::add`.",272,{"inputs":[{"name":"str"}],"output":{"name":"statusicon"}}],[11,"get_geometry","","Obtains information about the location of the status icon\non screen. This information can be used to e.g. position\npopups like notification bubbles.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_has_tooltip","","Returns the current value of the has-tooltip property.\nSee `StatusIcon:has-tooltip` for more information.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"bool"}}],[11,"get_icon_name","","Gets the name of the icon being displayed by the `StatusIcon`.\nThe storage type of the status icon must be `ImageType::Empty` or\n`ImageType::IconName` (see `StatusIcon::get_storage_type`).\nThe returned string is owned by the `StatusIcon` and should not\nbe freed or modified.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_pixbuf","","Gets the `gdk_pixbuf::Pixbuf` being displayed by the `StatusIcon`.\nThe storage type of the status icon must be `ImageType::Empty` or\n`ImageType::Pixbuf` (see `StatusIcon::get_storage_type`).\nThe caller of this function does not own a reference to the\nreturned pixbuf.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_screen","","Returns the `gdk::Screen` associated with `self`.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_size","","Gets the size in pixels that is available for the image.\nStock icons and named icons adapt their size automatically\nif the size of the notification area changes. For other\nstorage types, the size-changed signal can be used to\nreact to size changes.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"i32"}}],[11,"get_stock","","Gets the id of the stock icon being displayed by the `StatusIcon`.\nThe storage type of the status icon must be `ImageType::Empty` or\n`ImageType::Stock` (see `StatusIcon::get_storage_type`).\nThe returned string is owned by the `StatusIcon` and should not\nbe freed or modified.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_storage_type","","Gets the type of representation being used by the `StatusIcon`\nto store image data. If the `StatusIcon` has no image data,\nthe return value will be `ImageType::Empty`.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"imagetype"}}],[11,"get_title","","Gets the title of this tray icon. See `StatusIcon::set_title`.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_tooltip_markup","","Gets the contents of the tooltip for `self`.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_tooltip_text","","Gets the contents of the tooltip for `self`.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"option"}}],[11,"get_visible","","Returns whether the status icon is visible or not.\nNote that being visible does not guarantee that\nthe user can actually see the icon, see also\n`StatusIcon::is_embedded`.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"bool"}}],[11,"get_x11_window_id","","This function is only useful on the X11/freedesktop.org platform.\nIt returns a window ID for the widget in the underlying\nstatus icon implementation. This is useful for the Galago\nnotification service, which can send a window ID in the protocol\nin order for the server to position notification windows\npointing to a status icon reliably.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"u32"}}],[11,"is_embedded","","Returns whether the status icon is embedded in a notification\narea.",272,{"inputs":[{"name":"statusicon"}],"output":{"name":"bool"}}],[11,"set_from_file","","Makes `self` display the file `filename`.\nSee `StatusIcon::new_from_file` for details.",272,{"inputs":[{"name":"statusicon"},{"name":"t"}],"output":null}],[11,"set_from_icon_name","","Makes `self` display the icon named `icon_name` from the\ncurrent icon theme.\nSee `StatusIcon::new_from_icon_name` for details.",272,{"inputs":[{"name":"statusicon"},{"name":"str"}],"output":null}],[11,"set_from_pixbuf","","Makes `self` display `pixbuf`.\nSee `StatusIcon::new_from_pixbuf` for details.",272,{"inputs":[{"name":"statusicon"},{"name":"option"}],"output":null}],[11,"set_from_stock","","Makes `self` display the stock icon with the id `stock_id`.\nSee `StatusIcon::new_from_stock` for details.",272,{"inputs":[{"name":"statusicon"},{"name":"str"}],"output":null}],[11,"set_has_tooltip","","Sets the has-tooltip property on `self` to `has_tooltip`.\nSee `StatusIcon:has-tooltip` for more information.",272,{"inputs":[{"name":"statusicon"},{"name":"bool"}],"output":null}],[11,"set_name","","Sets the name of this tray icon.\nThis should be a string identifying this icon. It is may be\nused for sorting the icons in the tray and will not be shown to\nthe user.",272,{"inputs":[{"name":"statusicon"},{"name":"str"}],"output":null}],[11,"set_screen","","Sets the `gdk::Screen` where `self` is displayed; if\nthe icon is already mapped, it will be unmapped, and\nthen remapped on the new screen.",272,{"inputs":[{"name":"statusicon"},{"name":"screen"}],"output":null}],[11,"set_title","","Sets the title of this tray icon.\nThis should be a short, human-readable, localized string\ndescribing the tray icon. It may be used by tools like screen\nreaders to render the tray icon.",272,{"inputs":[{"name":"statusicon"},{"name":"str"}],"output":null}],[11,"set_tooltip_markup","","Sets `markup` as the contents of the tooltip, which is marked up with\n the [Pango text markup language][PangoMarkupFormat].",272,{"inputs":[{"name":"statusicon"},{"name":"option"}],"output":null}],[11,"set_tooltip_text","","Sets `text` as the contents of the tooltip.",272,{"inputs":[{"name":"statusicon"},{"name":"str"}],"output":null}],[11,"set_visible","","Shows or hides a status icon.",272,{"inputs":[{"name":"statusicon"},{"name":"bool"}],"output":null}],[11,"position_menu","","Menu positioning function to use with `Menu::popup`\nto position `menu` aligned to the status icon `user_data`.",272,{"inputs":[{"name":"t"},{"name":"i32"},{"name":"i32"},{"name":"statusicon"}],"output":{"name":"bool"}}],[11,"hash","","",273,null],[11,"fmt","","",273,{"inputs":[{"name":"statusbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",273,{"inputs":[{"name":"statusbar"}],"output":{"name":"statusbar"}}],[11,"static_type","","",273,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",273,{"inputs":[{"name":"statusbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Statusbar` ready for messages.",273,{"inputs":[],"output":{"name":"statusbar"}}],[11,"get_context_id","","Returns a new context identifier, given a description\nof the actual context. Note that the description is\nnot shown in the UI.\n## `context_description`\ntextual description of what context\n the new message is being used in",273,{"inputs":[{"name":"statusbar"},{"name":"str"}],"output":{"name":"u32"}}],[11,"get_message_area","","Retrieves the box containing the label widget.",273,{"inputs":[{"name":"statusbar"}],"output":{"name":"option"}}],[11,"pop","","Removes the first message in the `Statusbar`’s stack\nwith the given context id.",273,{"inputs":[{"name":"statusbar"},{"name":"u32"}],"output":null}],[11,"push","","Pushes a new message onto a statusbar’s stack.\n## `context_id`\nthe message’s context id, as returned by\n `Statusbar::get_context_id`\n## `text`\nthe message to add to the statusbar",273,{"inputs":[{"name":"statusbar"},{"name":"u32"},{"name":"str"}],"output":{"name":"u32"}}],[11,"remove","","Forces the removal of a message from a statusbar’s stack.\nThe exact `context_id` and `message_id` must be specified.\n## `context_id`\na context identifier\n## `message_id`\na message identifier, as returned by `Statusbar::push`",273,{"inputs":[{"name":"statusbar"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"remove_all","","Forces the removal of all messages from a statusbar&#39;s\nstack with the exact `context_id`.\n## `context_id`\na context identifier",273,{"inputs":[{"name":"statusbar"},{"name":"u32"}],"output":null}],[11,"hash","","",274,null],[11,"fmt","","",274,{"inputs":[{"name":"stylecontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"stylecontext"}}],[11,"static_type","","",274,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",274,{"inputs":[{"name":"stylecontext"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a standalone `StyleContext`, this style context\nwon’t be attached to any widget, so you may want\nto call `StyleContext::set_path` yourself.",274,{"inputs":[],"output":{"name":"stylecontext"}}],[11,"add_class","","Adds a style class to `self`, so posterior calls to\n`StyleContext::get` or any of the gtk_render_*()\nfunctions will make use of this new class for styling.",274,{"inputs":[{"name":"stylecontext"},{"name":"str"}],"output":null}],[11,"add_region","","Adds a region to `self`, so posterior calls to\n`StyleContext::get` or any of the gtk_render_*()\nfunctions will make use of this new region for styling.",274,{"inputs":[{"name":"stylecontext"},{"name":"str"},{"name":"regionflags"}],"output":null}],[11,"get_direction","","Returns the widget direction used for rendering.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"textdirection"}}],[11,"get_junction_sides","","Returns the sides where rendered elements connect visually with others.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"junctionsides"}}],[11,"get_parent","","Gets the parent context set via `StyleContext::set_parent`.\nSee that function for details.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"option"}}],[11,"get_scale","","Returns the scale used for assets.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"i32"}}],[11,"get_screen","","Returns the `gdk::Screen` to which `self` is attached.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"option"}}],[11,"get_state","","Returns the state used when rendering.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"stateflags"}}],[11,"has_class","","Returns `true` if `self` currently has defined the\ngiven class name\n## `class_name`\na class name",274,{"inputs":[{"name":"stylecontext"},{"name":"str"}],"output":{"name":"bool"}}],[11,"has_region","","Returns `true` if `self` has the region defined.\nIf `flags_return` is not `None`, it is set to the flags\naffecting the region.",274,{"inputs":[{"name":"stylecontext"},{"name":"str"}],"output":{"name":"option"}}],[11,"invalidate","","Invalidates `self` style information, so it will be reconstructed\nagain. It is useful if you modify the `self` and need the new\ninformation immediately.",274,{"inputs":[{"name":"stylecontext"}],"output":null}],[11,"list_classes","","Returns the list of classes currently defined in `self`.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"vec"}}],[11,"list_regions","","Returns the list of regions currently defined in `self`.",274,{"inputs":[{"name":"stylecontext"}],"output":{"name":"vec"}}],[11,"pop_animatable_region","","Pops an animatable region from `self`.\nSee `StyleContext::push_animatable_region`.",274,{"inputs":[{"name":"stylecontext"}],"output":null}],[11,"remove_class","","Removes `class_name` from `self`.\n## `class_name`\nclass name to remove",274,{"inputs":[{"name":"stylecontext"},{"name":"str"}],"output":null}],[11,"remove_region","","Removes a region from `self`.",274,{"inputs":[{"name":"stylecontext"},{"name":"str"}],"output":null}],[11,"restore","","Restores `self` state to a previous stage.\nSee `StyleContext::save`.",274,{"inputs":[{"name":"stylecontext"}],"output":null}],[11,"save","","Saves the `self` state, so temporary modifications done through\n`StyleContext::add_class`, `StyleContext::remove_class`,\n`StyleContext::set_state`, etc. can quickly be reverted\nin one go through `StyleContext::restore`.",274,{"inputs":[{"name":"stylecontext"}],"output":null}],[11,"scroll_animations","","This function is analogous to `gdk::Window::scroll`, and\nshould be called together with it so the invalidation\nareas for any ongoing animation are scrolled together\nwith it.",274,{"inputs":[{"name":"stylecontext"},{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_background","","Sets the background of `window` to the background pattern or\ncolor specified in `self` for its current state.\n## `window`\na `gdk::Window`",274,{"inputs":[{"name":"stylecontext"},{"name":"window"}],"output":null}],[11,"set_direction","","Sets the reading direction for rendering purposes.",274,{"inputs":[{"name":"stylecontext"},{"name":"textdirection"}],"output":null}],[11,"set_junction_sides","","Sets the sides where rendered elements (mostly through\n`gtk_render_frame`) will visually connect with other visual elements.",274,{"inputs":[{"name":"stylecontext"},{"name":"junctionsides"}],"output":null}],[11,"set_parent","","Sets the parent style context for `self`. The parent style\ncontext is used to implement\n[inheritance](http://www.w3.org/TR/css3-cascade/`inheritance`)\nof properties.",274,{"inputs":[{"name":"stylecontext"},{"name":"option"}],"output":null}],[11,"set_scale","","Sets the scale to use when getting image assets for the style .",274,{"inputs":[{"name":"stylecontext"},{"name":"i32"}],"output":null}],[11,"set_screen","","Attaches `self` to the given screen.",274,{"inputs":[{"name":"stylecontext"},{"name":"screen"}],"output":null}],[11,"set_state","","Sets the state to be used when rendering with any\nof the gtk_render_*() functions.\n## `flags`\nstate to represent",274,{"inputs":[{"name":"stylecontext"},{"name":"stateflags"}],"output":null}],[11,"state_is_running","","Returns `true` if there is a transition animation running for the\ncurrent region (see `StyleContext::push_animatable_region`).",274,{"inputs":[{"name":"stylecontext"},{"name":"statetype"}],"output":{"name":"option"}}],[11,"reset_widgets","","This function recomputes the styles for all widgets under a particular\n`gdk::Screen`. This is useful when some global parameter has changed that\naffects the appearance of all widgets, because when a widget gets a new\nstyle, it will both redraw and recompute any cached information about\nits appearance. As an example, it is used when the color scheme changes\nin the related `Settings` object.\n## `screen`\na `gdk::Screen`",274,{"inputs":[{"name":"screen"}],"output":null}],[11,"hash","","",275,null],[11,"fmt","","",275,{"inputs":[{"name":"switch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",275,{"inputs":[{"name":"switch"}],"output":{"name":"switch"}}],[11,"static_type","","",275,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",275,{"inputs":[{"name":"switch"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Switch` widget.",275,{"inputs":[],"output":{"name":"switch"}}],[11,"get_active","","Gets whether the `Switch` is in its “on” or “off” state.",275,{"inputs":[{"name":"switch"}],"output":{"name":"bool"}}],[11,"get_state","","Gets the underlying state of the `Switch`.",275,{"inputs":[{"name":"switch"}],"output":{"name":"bool"}}],[11,"set_active","","Changes the state of `self` to the desired one.\n## `is_active`\n`true` if `self` should be active, and `false` otherwise",275,{"inputs":[{"name":"switch"},{"name":"bool"}],"output":null}],[11,"set_state","","Sets the underlying state of the `Switch`.",275,{"inputs":[{"name":"switch"},{"name":"bool"}],"output":null}],[11,"hash","","",276,null],[11,"fmt","","",276,{"inputs":[{"name":"textbuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"textbuffer"}}],[11,"static_type","","",276,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",276,{"inputs":[{"name":"textbuffer"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new text buffer.\n## `table`\na tag table, or `None` to create a new one",276,{"inputs":[{"name":"option"}],"output":{"name":"textbuffer"}}],[11,"add_mark","","Adds the mark at position `where_`. The mark must not be added to\nanother buffer, and if its name is not `None` then there must not\nbe another mark in the buffer with the same name.",276,{"inputs":[{"name":"textbuffer"},{"name":"textmark"},{"name":"textiter"}],"output":null}],[11,"apply_tag","","Emits the “apply-tag” signal on `self`. The default\nhandler for the signal applies `tag` to the given range.\n`start` and `end` do not have to be in order.\n## `tag`\na `TextTag`\n## `start`\none bound of range to be tagged\n## `end`\nother bound of range to be tagged",276,{"inputs":[{"name":"textbuffer"},{"name":"texttag"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"apply_tag_by_name","","Calls `TextTagTable::lookup` on the buffer’s tag table to\nget a `TextTag`, then calls `TextBuffer::apply_tag`.\n## `name`\nname of a named `TextTag`\n## `start`\none bound of range to be tagged\n## `end`\nother bound of range to be tagged",276,{"inputs":[{"name":"textbuffer"},{"name":"str"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"backspace","","Performs the appropriate action as if the user hit the delete\nkey with the cursor at the position specified by `iter`. In the\nnormal case a single character will be deleted, but when\ncombining accents are involved, more than one character can\nbe deleted, and when precomposed character and accent combinations\nare involved, less than one character will be deleted.",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"bool"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"begin_user_action","","Called to indicate that the buffer operations between here and a\ncall to `TextBuffer::end_user_action` are part of a single\nuser-visible operation. The operations between\n`TextBuffer::begin_user_action` and\n`TextBuffer::end_user_action` can then be grouped when creating\nan undo stack. `TextBuffer` maintains a count of calls to\n`TextBuffer::begin_user_action` that have not been closed with\na call to `TextBuffer::end_user_action`, and emits the\n“begin-user-action” and “end-user-action” signals only for the\noutermost pair of calls. This allows you to build user actions\nfrom other user actions.",276,{"inputs":[{"name":"textbuffer"}],"output":null}],[11,"create_child_anchor","","This is a convenience function which simply creates a child anchor\nwith `TextChildAnchor::new` and inserts it into the buffer\nwith `TextBuffer::insert_child_anchor`. The new anchor is\nowned by the buffer; no reference count is returned to\nthe caller of `TextBuffer::create_child_anchor`.\n## `iter`\nlocation in the buffer",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"create_mark","","Creates a mark at position `where_`. If `mark_name` is `None`, the mark\nis anonymous; otherwise, the mark can be retrieved by name using\n`TextBuffer::get_mark`. If a mark has left gravity, and text is\ninserted at the mark’s current location, the mark will be moved to\nthe left of the newly-inserted text. If the mark has right gravity\n(`left_gravity` = `false`), the mark will end up on the right of\nnewly-inserted text. The standard left-to-right cursor is a mark\nwith right gravity (when you type, the cursor stays on the right\nside of the text you’re typing).",276,{"inputs":[{"name":"textbuffer"},{"name":"option"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[11,"delete","","Deletes text between `start` and `end`. The order of `start` and `end`\nis not actually relevant; `TextBuffer::delete` will reorder\nthem. This function actually emits the “delete-range” signal, and\nthe default handler of that signal deletes the text. Because the\nbuffer is modified, all outstanding iterators become invalid after\ncalling this function; however, the `start` and `end` will be\nre-initialized to point to the location where text was deleted.\n## `start`\na position in `self`\n## `end`\nanother position in `self`",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"delete_interactive","","Deletes all editable text in the given range.\nCalls `TextBuffer::delete` for each editable sub-range of\n[`start`,`end`). `start` and `end` are revalidated to point to\nthe location of the last deleted range, or left untouched if\nno text was deleted.\n## `start_iter`\nstart of range to delete\n## `end_iter`\nend of range\n## `default_editable`\nwhether the buffer is editable by default",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"delete_mark","","Deletes `mark`, so that it’s no longer located anywhere in the\nbuffer. Removes the reference the buffer holds to the mark, so if\nyou haven’t called `gobject::Object::ref` on the mark, it will be freed. Even\nif the mark isn’t freed, most operations on `mark` become\ninvalid, until it gets added to a buffer again with\n`TextBuffer::add_mark`. Use `TextMark::get_deleted` to\nfind out if a mark has been removed from its buffer.\nThe `TextBuffer::mark-deleted` signal will be emitted as notification after\nthe mark is deleted.\n## `mark`\na `TextMark` in `self`",276,{"inputs":[{"name":"textbuffer"},{"name":"textmark"}],"output":null}],[11,"delete_mark_by_name","","Deletes the mark named `name`; the mark must exist. See\n`TextBuffer::delete_mark` for details.\n## `name`\nname of a mark in `self`",276,{"inputs":[{"name":"textbuffer"},{"name":"str"}],"output":null}],[11,"delete_selection","","Deletes the range between the “insert” and “selection_bound” marks,\nthat is, the currently-selected text. If `interactive` is `true`,\nthe editability of the selection will be considered (users can’t delete\nuneditable text).\n## `interactive`\nwhether the deletion is caused by user interaction\n## `default_editable`\nwhether the buffer is editable by default",276,{"inputs":[{"name":"textbuffer"},{"name":"bool"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"end_user_action","","Should be paired with a call to `TextBuffer::begin_user_action`.\nSee that function for a full explanation.",276,{"inputs":[{"name":"textbuffer"}],"output":null}],[11,"get_bounds","","Retrieves the first and last iterators in the buffer, i.e. the\nentire buffer lies within the range [`start`,`end`).\n## `start`\niterator to initialize with first position in the buffer\n## `end`\niterator to initialize with the end iterator",276,null],[11,"get_char_count","","Gets the number of characters in the buffer; note that characters\nand bytes are not the same, you can’t e.g. expect the contents of\nthe buffer in string form to be this many bytes long. The character\ncount is cached, so this function is very fast.",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"i32"}}],[11,"get_end_iter","","Initializes `iter` with the “end iterator,” one past the last valid\ncharacter in the text buffer. If dereferenced with\n`TextIter::get_char`, the end iterator has a character value of 0.\nThe entire buffer lies in the range from the first position in\nthe buffer (call `TextBuffer::get_start_iter` to get\ncharacter position 0) to the end iterator.\n## `iter`\niterator to initialize",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"textiter"}}],[11,"get_has_selection","","Indicates whether the buffer has some text currently selected.",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"bool"}}],[11,"get_insert","","Returns the mark that represents the cursor (insertion point).\nEquivalent to calling `TextBuffer::get_mark` to get the mark\nnamed “insert”, but very slightly more efficient, and involves less\ntyping.",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"option"}}],[11,"get_iter_at_child_anchor","","Obtains the location of `anchor` within `self`.\n## `iter`\nan iterator to be initialized\n## `anchor`\na child anchor that appears in `self`",276,{"inputs":[{"name":"textbuffer"},{"name":"textchildanchor"}],"output":{"name":"textiter"}}],[11,"get_iter_at_line","","Initializes `iter` to the start of the given line. If `line_number` is greater\nthan the number of lines in the `self`, the end iterator is returned.\n## `iter`\niterator to initialize\n## `line_number`\nline number counting from 0",276,{"inputs":[{"name":"textbuffer"},{"name":"i32"}],"output":{"name":"textiter"}}],[11,"get_iter_at_line_index","","Obtains an iterator pointing to `byte_index` within the given line.\n`byte_index` must be the start of a UTF-8 character, and must not be\nbeyond the end of the line. Note bytes, not\ncharacters; UTF-8 may encode one character as multiple bytes.\n## `iter`\niterator to initialize\n## `line_number`\nline number counting from 0\n## `byte_index`\nbyte index from start of line",276,{"inputs":[{"name":"textbuffer"},{"name":"i32"},{"name":"i32"}],"output":{"name":"textiter"}}],[11,"get_iter_at_line_offset","","Obtains an iterator pointing to `char_offset` within the given\nline. The `char_offset` must exist, offsets off the end of the line\nare not allowed. Note characters, not bytes;\nUTF-8 may encode one character as multiple bytes.\n## `iter`\niterator to initialize\n## `line_number`\nline number counting from 0\n## `char_offset`\nchar offset from start of line",276,{"inputs":[{"name":"textbuffer"},{"name":"i32"},{"name":"i32"}],"output":{"name":"textiter"}}],[11,"get_iter_at_mark","","Initializes `iter` with the current position of `mark`.\n## `iter`\niterator to initialize\n## `mark`\na `TextMark` in `self`",276,{"inputs":[{"name":"textbuffer"},{"name":"textmark"}],"output":{"name":"textiter"}}],[11,"get_iter_at_offset","","Initializes `iter` to a position `char_offset` chars from the start\nof the entire buffer. If `char_offset` is -1 or greater than the number\nof characters in the buffer, `iter` is initialized to the end iterator,\nthe iterator one past the last valid character in the buffer.\n## `iter`\niterator to initialize\n## `char_offset`\nchar offset from start of buffer, counting from 0, or -1",276,{"inputs":[{"name":"textbuffer"},{"name":"i32"}],"output":{"name":"textiter"}}],[11,"get_line_count","","Obtains the number of lines in the buffer. This value is cached, so\nthe function is very fast.",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"i32"}}],[11,"get_mark","","Returns the mark named `name` in buffer `self`, or `None` if no such\nmark exists in the buffer.\n## `name`\na mark name",276,{"inputs":[{"name":"textbuffer"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_modified","","Indicates whether the buffer has been modified since the last call\nto `TextBuffer::set_modified` set the modification flag to\n`false`. Used for example to enable a “save” function in a text\neditor.",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"bool"}}],[11,"get_selection_bound","","Returns the mark that represents the selection bound. Equivalent\nto calling `TextBuffer::get_mark` to get the mark named\n“selection_bound”, but very slightly more efficient, and involves\nless typing.",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"option"}}],[11,"get_selection_bounds","","Returns `true` if some text is selected; places the bounds\nof the selection in `start` and `end` (if the selection has length 0,\nthen `start` and `end` are filled in with the same value).\n`start` and `end` will be in ascending order. If `start` and `end` are\nNULL, then they are not filled in, but the return value still indicates\nwhether text is selected.\n## `start`\niterator to initialize with selection start\n## `end`\niterator to initialize with selection end",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"option"}}],[11,"get_slice","","Returns the text in the range [`start`,`end`). Excludes undisplayed\ntext (text marked with tags that set the invisibility attribute) if\n`include_hidden_chars` is `false`. The returned string includes a\n0xFFFC character whenever the buffer contains\nembedded images, so byte and character indexes into\nthe returned string do correspond to byte\nand character indexes into the buffer. Contrast with\n`TextBuffer::get_text`. Note that 0xFFFC can occur in normal\ntext as well, so it is not a reliable indicator that a pixbuf or\nwidget is in the buffer.\n## `start`\nstart of a range\n## `end`\nend of a range\n## `include_hidden_chars`\nwhether to include invisible text",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[11,"get_start_iter","","Initialized `iter` with the first position in the text buffer. This\nis the same as using `TextBuffer::get_iter_at_offset` to get\nthe iter at character offset 0.\n## `iter`\niterator to initialize",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"textiter"}}],[11,"get_tag_table","","Get the `TextTagTable` associated with this buffer.",276,{"inputs":[{"name":"textbuffer"}],"output":{"name":"option"}}],[11,"get_text","","Returns the text in the range [`start`,`end`). Excludes undisplayed\ntext (text marked with tags that set the invisibility attribute) if\n`include_hidden_chars` is `false`. Does not include characters\nrepresenting embedded images, so byte and character indexes into\nthe returned string do not correspond to byte\nand character indexes into the buffer. Contrast with\n`TextBuffer::get_slice`.\n## `start`\nstart of a range\n## `end`\nend of a range\n## `include_hidden_chars`\nwhether to include invisible text",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"option"}}],[11,"insert_child_anchor","","Inserts a child widget anchor into the text buffer at `iter`. The\nanchor will be counted as one character in character counts, and\nwhen obtaining the buffer contents as a string, will be represented\nby the Unicode “object replacement character” 0xFFFC. Note that the\n“slice” variants for obtaining portions of the buffer as a string\ninclude this character for child anchors, but the “text” variants do\nnot. E.g. see `TextBuffer::get_slice` and\n`TextBuffer::get_text`. Consider\n`TextBuffer::create_child_anchor` as a more convenient\nalternative to this function. The buffer will add a reference to\nthe anchor, so you can unref it after insertion.\n## `iter`\nlocation to insert the anchor\n## `anchor`\na `TextChildAnchor`",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textchildanchor"}],"output":null}],[11,"insert_pixbuf","","Inserts an image into the text buffer at `iter`. The image will be\ncounted as one character in character counts, and when obtaining\nthe buffer contents as a string, will be represented by the Unicode\n“object replacement character” 0xFFFC. Note that the “slice”\nvariants for obtaining portions of the buffer as a string include\nthis character for pixbufs, but the “text” variants do\nnot. e.g. see `TextBuffer::get_slice` and\n`TextBuffer::get_text`.\n## `iter`\nlocation to insert the pixbuf\n## `pixbuf`\na `gdk_pixbuf::Pixbuf`",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"pixbuf"}],"output":null}],[11,"insert_range","","Copies text, tags, and pixbufs between `start` and `end` (the order\nof `start` and `end` doesn’t matter) and inserts the copy at `iter`.\nUsed instead of simply getting/inserting text because it preserves\nimages and tags. If `start` and `end` are in a different buffer from\n`self`, the two buffers must share the same tag table.",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"insert_range_interactive","","Same as `TextBuffer::insert_range`, but does nothing if the\ninsertion point isn’t editable. The `default_editable` parameter\nindicates whether the text is editable at `iter` if no tags\nenclosing `iter` affect editability. Typically the result of\n`TextView::get_editable` is appropriate here.\n## `iter`\na position in `self`\n## `start`\na position in a `TextBuffer`\n## `end`\nanother position in the same buffer as `start`\n## `default_editable`\ndefault editability of the buffer",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"},{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"move_mark","","Moves `mark` to the new location `where_`. Emits the `TextBuffer::mark-set`\nsignal as notification of the move.\n## `mark`\na `TextMark`\n## `where_`\nnew location for `mark` in `self`",276,{"inputs":[{"name":"textbuffer"},{"name":"textmark"},{"name":"textiter"}],"output":null}],[11,"move_mark_by_name","","Moves the mark named `name` (which must exist) to location `where_`.\nSee `TextBuffer::move_mark` for details.\n## `name`\nname of a mark\n## `where_`\nnew location for mark",276,{"inputs":[{"name":"textbuffer"},{"name":"str"},{"name":"textiter"}],"output":null}],[11,"place_cursor","","This function moves the “insert” and “selection_bound” marks\nsimultaneously. If you move them to the same place in two steps\nwith `TextBuffer::move_mark`, you will temporarily select a\nregion in between their old and new locations, which can be pretty\ninefficient since the temporarily-selected region will force stuff\nto be recalculated. This function moves them as a unit, which can\nbe optimized.\n## `where_`\nwhere to put the cursor",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"}],"output":null}],[11,"remove_all_tags","","Removes all tags in the range between `start` and `end`. Be careful\nwith this function; it could remove tags added in code unrelated to\nthe code you’re currently writing. That is, using this function is\nprobably a bad idea if you have two or more unrelated code sections\nthat add tags.\n## `start`\none bound of range to be untagged\n## `end`\nother bound of range to be untagged",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"remove_tag","","Emits the “remove-tag” signal. The default handler for the signal\nremoves all occurrences of `tag` from the given range. `start` and\n`end` don’t have to be in order.\n## `tag`\na `TextTag`\n## `start`\none bound of range to be untagged\n## `end`\nother bound of range to be untagged",276,{"inputs":[{"name":"textbuffer"},{"name":"texttag"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"remove_tag_by_name","","Calls `TextTagTable::lookup` on the buffer’s tag table to\nget a `TextTag`, then calls `TextBuffer::remove_tag`.\n## `name`\nname of a `TextTag`\n## `start`\none bound of range to be untagged\n## `end`\nother bound of range to be untagged",276,{"inputs":[{"name":"textbuffer"},{"name":"str"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"select_range","","This function moves the “insert” and “selection_bound” marks\nsimultaneously. If you move them in two steps\nwith `TextBuffer::move_mark`, you will temporarily select a\nregion in between their old and new locations, which can be pretty\ninefficient since the temporarily-selected region will force stuff\nto be recalculated. This function moves them as a unit, which can\nbe optimized.\n## `ins`\nwhere to put the “insert” mark\n## `bound`\nwhere to put the “selection_bound” mark",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"set_modified","","Used to keep track of whether the buffer has been modified since the\nlast time it was saved. Whenever the buffer is saved to disk, call\ngtk_text_buffer_set_modified (`self`, FALSE). When the buffer is modified,\nit will automatically toggled on the modified bit again. When the modified\nbit flips, the buffer emits the `TextBuffer::modified-changed` signal.\n## `setting`\nmodification flag setting",276,{"inputs":[{"name":"textbuffer"},{"name":"bool"}],"output":null}],[11,"hash","","",277,null],[11,"fmt","","",277,{"inputs":[{"name":"textchildanchor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",277,{"inputs":[{"name":"textchildanchor"}],"output":{"name":"textchildanchor"}}],[11,"static_type","","",277,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",277,{"inputs":[{"name":"textchildanchor"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TextChildAnchor`. Usually you would then insert\nit into a `TextBuffer` with `TextBuffer::insert_child_anchor`.\nTo perform the creation and insertion in one step, use the\nconvenience function `TextBuffer::create_child_anchor`.",277,{"inputs":[],"output":{"name":"textchildanchor"}}],[11,"get_deleted","","Determines whether a child anchor has been deleted from\nthe buffer. Keep in mind that the child anchor will be\nunreferenced when removed from the buffer, so you need to\nhold your own reference (with `gobject::Object::ref`) if you plan\nto use this function — otherwise all deleted child anchors\nwill also be finalized.",277,{"inputs":[{"name":"textchildanchor"}],"output":{"name":"bool"}}],[11,"get_widgets","","Gets a list of all widgets anchored at this child anchor.\nThe returned list should be freed with `glib::List::free`.",277,{"inputs":[{"name":"textchildanchor"}],"output":{"name":"vec"}}],[11,"hash","","",278,null],[11,"fmt","","",278,{"inputs":[{"name":"textmark"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",278,{"inputs":[{"name":"textmark"}],"output":{"name":"textmark"}}],[11,"static_type","","",278,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",278,{"inputs":[{"name":"textmark"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a text mark. Add it to a buffer using `TextBuffer::add_mark`.\nIf `name` is `None`, the mark is anonymous; otherwise, the mark can be\nretrieved by name using `TextBuffer::get_mark`. If a mark has left\ngravity, and text is inserted at the mark’s current location, the mark\nwill be moved to the left of the newly-inserted text. If the mark has\nright gravity (`left_gravity` = `false`), the mark will end up on the\nright of newly-inserted text. The standard left-to-right cursor is a\nmark with right gravity (when you type, the cursor stays on the right\nside of the text you’re typing).\n## `name`\nmark name or `None`\n## `left_gravity`\nwhether the mark should have left gravity",278,{"inputs":[{"name":"option"},{"name":"bool"}],"output":{"name":"textmark"}}],[11,"get_buffer","","Gets the buffer this mark is located inside,\nor `None` if the mark is deleted.",278,{"inputs":[{"name":"textmark"}],"output":{"name":"option"}}],[11,"get_deleted","","Returns `true` if the mark has been removed from its buffer\nwith `TextBuffer::delete_mark`. See `TextBuffer::add_mark`\nfor a way to add it to a buffer again.",278,{"inputs":[{"name":"textmark"}],"output":{"name":"bool"}}],[11,"get_left_gravity","","Determines whether the mark has left gravity.",278,{"inputs":[{"name":"textmark"}],"output":{"name":"bool"}}],[11,"get_name","","Returns the mark name; returns NULL for anonymous marks.",278,{"inputs":[{"name":"textmark"}],"output":{"name":"option"}}],[11,"get_visible","","Returns `true` if the mark is visible (i.e. a cursor is displayed\nfor it).",278,{"inputs":[{"name":"textmark"}],"output":{"name":"bool"}}],[11,"set_visible","","Sets the visibility of `self`; the insertion point is normally\nvisible, i.e. you can see it as a vertical bar. Also, the text\nwidget uses a visible mark to indicate where a drop will occur when\ndragging-and-dropping text. Most other marks are not visible.\nMarks are not visible by default.\n## `setting`\nvisibility of mark",278,{"inputs":[{"name":"textmark"},{"name":"bool"}],"output":null}],[11,"hash","","",279,null],[11,"fmt","","",279,{"inputs":[{"name":"texttag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",279,{"inputs":[{"name":"texttag"}],"output":{"name":"texttag"}}],[11,"static_type","","",279,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",279,{"inputs":[{"name":"texttag"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `TextTag`. Configure the tag using object arguments,\ni.e. using `gobject::Object::set`.\n## `name`\ntag name, or `None`",279,{"inputs":[{"name":"option"}],"output":{"name":"texttag"}}],[11,"get_priority","","Get the tag priority.",279,{"inputs":[{"name":"texttag"}],"output":{"name":"i32"}}],[11,"set_priority","","Sets the priority of a `TextTag`. Valid priorities\nstart at 0 and go to one less than `TextTagTable::get_size`.\nEach tag in a table has a unique priority; setting the priority\nof one tag shifts the priorities of all the other tags in the\ntable to maintain a unique priority for each tag. Higher priority\ntags “win” if two tags both set the same text attribute. When adding\na tag to a tag table, it will be assigned the highest priority in\nthe table by default; so normally the precedence of a set of tags\nis the order in which they were added to the table, or created with\n`TextBuffer::create_tag`, which adds the tag to the buffer’s table\nautomatically.\n## `priority`\nthe new priority",279,{"inputs":[{"name":"texttag"},{"name":"i32"}],"output":null}],[11,"hash","","",280,null],[11,"fmt","","",280,{"inputs":[{"name":"texttagtable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",280,{"inputs":[{"name":"texttagtable"}],"output":{"name":"texttagtable"}}],[11,"static_type","","",280,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",280,{"inputs":[{"name":"texttagtable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TextTagTable`. The table contains no tags by\ndefault.",280,{"inputs":[],"output":{"name":"texttagtable"}}],[11,"add","","Add a tag to the table. The tag is assigned the highest priority\nin the table.",280,{"inputs":[{"name":"texttagtable"},{"name":"texttag"}],"output":{"name":"bool"}}],[11,"get_size","","Returns the size of the table (number of tags)",280,{"inputs":[{"name":"texttagtable"}],"output":{"name":"i32"}}],[11,"lookup","","Look up a named tag.\n## `name`\nname of a tag",280,{"inputs":[{"name":"texttagtable"},{"name":"str"}],"output":{"name":"option"}}],[11,"remove","","Remove a tag from the table. If a `TextBuffer` has `self` as its tag table,\nthe tag is removed from the buffer. The table’s reference to the tag is\nremoved, so the tag will end up destroyed if you don’t have a reference to\nit.\n## `tag`\na `TextTag`",280,{"inputs":[{"name":"texttagtable"},{"name":"texttag"}],"output":null}],[11,"hash","","",281,null],[11,"fmt","","",281,{"inputs":[{"name":"textview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",281,{"inputs":[{"name":"textview"}],"output":{"name":"textview"}}],[11,"static_type","","",281,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",281,{"inputs":[{"name":"textview"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TextView`. If you don’t call `TextView::set_buffer`\nbefore using the text view, an empty default buffer will be created\nfor you. Get the buffer with `TextView::get_buffer`. If you want\nto specify your own buffer, consider `TextView::new_with_buffer`.",281,{"inputs":[],"output":{"name":"textview"}}],[11,"new_with_buffer","","Creates a new `TextView` widget displaying the buffer\n`buffer`. One buffer can be shared among many widgets.\n`buffer` may be `None` to create a default buffer, in which case\nthis function is equivalent to `TextView::new`. The\ntext view adds its own reference count to the buffer; it does not\ntake over an existing reference.\n## `buffer`\na `TextBuffer`",281,{"inputs":[{"name":"textbuffer"}],"output":{"name":"textview"}}],[11,"add_child_at_anchor","","Adds a child widget in the text buffer, at the given `anchor`.\n## `child`\na `Widget`\n## `anchor`\na `TextChildAnchor` in the `TextBuffer` for `self`",281,{"inputs":[{"name":"textview"},{"name":"t"},{"name":"textchildanchor"}],"output":null}],[11,"add_child_in_window","","Adds a child at fixed coordinates in one of the text widget&#39;s\nwindows.",281,{"inputs":[{"name":"textview"},{"name":"t"},{"name":"textwindowtype"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"backward_display_line","","Moves the given `iter` backward by one display (wrapped) line.\nA display line is different from a paragraph. Paragraphs are\nseparated by newlines or other paragraph separator characters.\nDisplay lines are created by line-wrapping a paragraph. If\nwrapping is turned off, display lines and paragraphs will be the\nsame. Display lines are divided differently for each view, since\nthey depend on the view’s width; paragraphs are the same in all\nviews, since they depend on the contents of the `TextBuffer`.\n## `iter`\na `TextIter`",281,{"inputs":[{"name":"textview"},{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_display_line_start","","Moves the given `iter` backward to the next display line start.\nA display line is different from a paragraph. Paragraphs are\nseparated by newlines or other paragraph separator characters.\nDisplay lines are created by line-wrapping a paragraph. If\nwrapping is turned off, display lines and paragraphs will be the\nsame. Display lines are divided differently for each view, since\nthey depend on the view’s width; paragraphs are the same in all\nviews, since they depend on the contents of the `TextBuffer`.\n## `iter`\na `TextIter`",281,{"inputs":[{"name":"textview"},{"name":"textiter"}],"output":{"name":"bool"}}],[11,"buffer_to_window_coords","","Converts coordinate (`buffer_x`, `buffer_y`) to coordinates for the window\n`win`, and stores the result in (`window_x`, `window_y`).",281,null],[11,"forward_display_line","","Moves the given `iter` forward by one display (wrapped) line.\nA display line is different from a paragraph. Paragraphs are\nseparated by newlines or other paragraph separator characters.\nDisplay lines are created by line-wrapping a paragraph. If\nwrapping is turned off, display lines and paragraphs will be the\nsame. Display lines are divided differently for each view, since\nthey depend on the view’s width; paragraphs are the same in all\nviews, since they depend on the contents of the `TextBuffer`.\n## `iter`\na `TextIter`",281,{"inputs":[{"name":"textview"},{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_display_line_end","","Moves the given `iter` forward to the next display line end.\nA display line is different from a paragraph. Paragraphs are\nseparated by newlines or other paragraph separator characters.\nDisplay lines are created by line-wrapping a paragraph. If\nwrapping is turned off, display lines and paragraphs will be the\nsame. Display lines are divided differently for each view, since\nthey depend on the view’s width; paragraphs are the same in all\nviews, since they depend on the contents of the `TextBuffer`.\n## `iter`\na `TextIter`",281,{"inputs":[{"name":"textview"},{"name":"textiter"}],"output":{"name":"bool"}}],[11,"get_accepts_tab","","Returns whether pressing the Tab key inserts a tab characters.\n`TextView::set_accepts_tab`.",281,{"inputs":[{"name":"textview"}],"output":{"name":"bool"}}],[11,"get_border_window_size","","Gets the width of the specified border window. See\n`TextView::set_border_window_size`.\n## `type_`\nwindow to return size from",281,{"inputs":[{"name":"textview"},{"name":"textwindowtype"}],"output":{"name":"i32"}}],[11,"get_buffer","","Returns the `TextBuffer` being displayed by this text view.\nThe reference count on the buffer is not incremented; the caller\nof this function won’t own a new reference.",281,{"inputs":[{"name":"textview"}],"output":{"name":"option"}}],[11,"get_cursor_locations","","Given an `iter` within a text layout, determine the positions of the\nstrong and weak cursors if the insertion point is at that\niterator. The position of each cursor is stored as a zero-width\nrectangle. The strong cursor location is the location where\ncharacters of the directionality equal to the base direction of the\nparagraph are inserted. The weak cursor location is the location\nwhere characters of the directionality opposite to the base\ndirection of the paragraph are inserted.",281,null],[11,"get_cursor_visible","","Find out whether the cursor is being displayed.",281,{"inputs":[{"name":"textview"}],"output":{"name":"bool"}}],[11,"get_default_attributes","","Obtains a copy of the default text attributes. These are the\nattributes used for text unless a tag overrides them.\nYou’d typically pass the default attributes in to\n`TextIter::get_attributes` in order to get the\nattributes in effect at a given text position.",281,{"inputs":[{"name":"textview"}],"output":{"name":"textattributes"}}],[11,"get_editable","","Returns the default editability of the `TextView`. Tags in the\nbuffer may override this setting for some ranges of text.",281,{"inputs":[{"name":"textview"}],"output":{"name":"bool"}}],[11,"get_hadjustment","","Gets the horizontal-scrolling `Adjustment`.",281,{"inputs":[{"name":"textview"}],"output":{"name":"option"}}],[11,"get_indent","","Gets the default indentation of paragraphs in `self`.\nTags in the view’s buffer may override the default.\nThe indentation may be negative.",281,{"inputs":[{"name":"textview"}],"output":{"name":"i32"}}],[11,"get_input_hints","","Gets the value of the `TextView:input-hints` property.",281,{"inputs":[{"name":"textview"}],"output":{"name":"inputhints"}}],[11,"get_input_purpose","","Gets the value of the `TextView:input-purpose` property.",281,{"inputs":[{"name":"textview"}],"output":{"name":"inputpurpose"}}],[11,"get_iter_at_location","","Retrieves the iterator at buffer coordinates `x` and `y`. Buffer\ncoordinates are coordinates for the entire buffer, not just the\ncurrently-displayed portion. If you have coordinates from an\nevent, you have to convert those to buffer coordinates with\n`TextView::window_to_buffer_coords`.\n## `iter`\na `TextIter`\n## `x`\nx position, in buffer coordinates\n## `y`\ny position, in buffer coordinates",281,{"inputs":[{"name":"textview"},{"name":"i32"},{"name":"i32"}],"output":{"name":"textiter"}}],[11,"get_iter_at_position","","Retrieves the iterator pointing to the character at buffer\ncoordinates `x` and `y`. Buffer coordinates are coordinates for\nthe entire buffer, not just the currently-displayed portion.\nIf you have coordinates from an event, you have to convert\nthose to buffer coordinates with\n`TextView::window_to_buffer_coords`.",281,null],[11,"get_iter_location","","Gets a rectangle which roughly contains the character at `iter`.\nThe rectangle position is in buffer coordinates; use\n`TextView::buffer_to_window_coords` to convert these\ncoordinates to coordinates for one of the windows in the text view.\n## `iter`\na `TextIter`\n## `location`\nbounds of the character at `iter`",281,{"inputs":[{"name":"textview"},{"name":"textiter"}],"output":{"name":"rectangle"}}],[11,"get_justification","","Gets the default justification of paragraphs in `self`.\nTags in the buffer may override the default.",281,{"inputs":[{"name":"textview"}],"output":{"name":"justification"}}],[11,"get_left_margin","","Gets the default left margin size of paragraphs in the `self`.\nTags in the buffer may override the default.",281,{"inputs":[{"name":"textview"}],"output":{"name":"i32"}}],[11,"get_line_at_y","","Gets the `TextIter` at the start of the line containing\nthe coordinate `y`. `y` is in buffer coordinates, convert from\nwindow coordinates with `TextView::window_to_buffer_coords`.\nIf non-`None`, `line_top` will be filled with the coordinate of the top\nedge of the line.\n## `target_iter`\na `TextIter`\n## `y`\na y coordinate\n## `line_top`\nreturn location for top coordinate of the line",281,null],[11,"get_line_yrange","","Gets the y coordinate of the top of the line containing `iter`,\nand the height of the line. The coordinate is a buffer coordinate;\nconvert to window coordinates with `TextView::buffer_to_window_coords`.\n## `iter`\na `TextIter`\n## `y`\nreturn location for a y coordinate\n## `height`\nreturn location for a height",281,null],[11,"get_monospace","","Gets the value of the `TextView:monospace` property.",281,{"inputs":[{"name":"textview"}],"output":{"name":"bool"}}],[11,"get_overwrite","","Returns whether the `TextView` is in overwrite mode or not.",281,{"inputs":[{"name":"textview"}],"output":{"name":"bool"}}],[11,"get_pixels_above_lines","","Gets the default number of pixels to put above paragraphs.",281,{"inputs":[{"name":"textview"}],"output":{"name":"i32"}}],[11,"get_pixels_below_lines","","Gets the value set by `TextView::set_pixels_below_lines`.",281,{"inputs":[{"name":"textview"}],"output":{"name":"i32"}}],[11,"get_pixels_inside_wrap","","Gets the value set by `TextView::set_pixels_inside_wrap`.",281,{"inputs":[{"name":"textview"}],"output":{"name":"i32"}}],[11,"get_right_margin","","Gets the default right margin for text in `self`. Tags\nin the buffer may override the default.",281,{"inputs":[{"name":"textview"}],"output":{"name":"i32"}}],[11,"get_vadjustment","","Gets the vertical-scrolling `Adjustment`.",281,{"inputs":[{"name":"textview"}],"output":{"name":"option"}}],[11,"get_visible_rect","","Fills `visible_rect` with the currently-visible\nregion of the buffer, in buffer coordinates. Convert to window coordinates\nwith `TextView::buffer_to_window_coords`.\n## `visible_rect`\nrectangle to fill",281,{"inputs":[{"name":"textview"}],"output":{"name":"rectangle"}}],[11,"get_window","","Retrieves the `gdk::Window` corresponding to an area of the text view;\npossible windows include the overall widget window, child windows\non the left, right, top, bottom, and the window that displays the\ntext buffer. Windows are `None` and nonexistent if their width or\nheight is 0, and are nonexistent before the widget has been\nrealized.\n## `win`\nwindow to get",281,{"inputs":[{"name":"textview"},{"name":"textwindowtype"}],"output":{"name":"option"}}],[11,"get_window_type","","Usually used to find out which window an event corresponds to.\nIf you connect to an event signal on `self`, this function\nshould be called on `event-&amp;gt;window` to\nsee which window it was.\n## `window`\na window type",281,{"inputs":[{"name":"textview"},{"name":"window"}],"output":{"name":"textwindowtype"}}],[11,"get_wrap_mode","","Gets the line wrapping for the view.",281,{"inputs":[{"name":"textview"}],"output":{"name":"wrapmode"}}],[11,"move_child","","Updates the position of a child, as for `TextView::add_child_in_window`.\n## `child`\nchild widget already added to the text view\n## `xpos`\nnew X position in window coordinates\n## `ypos`\nnew Y position in window coordinates",281,{"inputs":[{"name":"textview"},{"name":"t"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"move_mark_onscreen","","Moves a mark within the buffer so that it&#39;s\nlocated within the currently-visible text area.\n## `mark`\na `TextMark`",281,{"inputs":[{"name":"textview"},{"name":"textmark"}],"output":{"name":"bool"}}],[11,"move_visually","","Move the iterator a given number of characters visually, treating\nit as the strong cursor position. If `count` is positive, then the\nnew strong cursor position will be `count` positions to the right of\nthe old cursor position. If `count` is negative then the new strong\ncursor position will be `count` positions to the left of the old\ncursor position.",281,{"inputs":[{"name":"textview"},{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"place_cursor_onscreen","","Moves the cursor to the currently visible region of the\nbuffer, it it isn’t there already.",281,{"inputs":[{"name":"textview"}],"output":{"name":"bool"}}],[11,"reset_im_context","","Reset the input method context of the text view if needed.",281,{"inputs":[{"name":"textview"}],"output":null}],[11,"scroll_mark_onscreen","","Scrolls `self` the minimum distance such that `mark` is contained\nwithin the visible area of the widget.\n## `mark`\na mark in the buffer for `self`",281,{"inputs":[{"name":"textview"},{"name":"textmark"}],"output":null}],[11,"scroll_to_iter","","Scrolls `self` so that `iter` is on the screen in the position\nindicated by `xalign` and `yalign`. An alignment of 0.0 indicates\nleft or top, 1.0 indicates right or bottom, 0.5 means center.\nIf `use_align` is `false`, the text scrolls the minimal distance to\nget the mark onscreen, possibly not scrolling at all. The effective\nscreen for purposes of this function is reduced by a margin of size\n`within_margin`.",281,{"inputs":[{"name":"textview"},{"name":"textiter"},{"name":"f64"},{"name":"bool"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"scroll_to_mark","","Scrolls `self` so that `mark` is on the screen in the position\nindicated by `xalign` and `yalign`. An alignment of 0.0 indicates\nleft or top, 1.0 indicates right or bottom, 0.5 means center.\nIf `use_align` is `false`, the text scrolls the minimal distance to\nget the mark onscreen, possibly not scrolling at all. The effective\nscreen for purposes of this function is reduced by a margin of size\n`within_margin`.\n## `mark`\na `TextMark`\n## `within_margin`\nmargin as a [0.0,0.5) fraction of screen size\n## `use_align`\nwhether to use alignment arguments (if `false`, just\n get the mark onscreen)\n## `xalign`\nhorizontal alignment of mark within visible area\n## `yalign`\nvertical alignment of mark within visible area",281,{"inputs":[{"name":"textview"},{"name":"textmark"},{"name":"f64"},{"name":"bool"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_accepts_tab","","Sets the behavior of the text widget when the Tab key is pressed.\nIf `accepts_tab` is `true`, a tab character is inserted. If `accepts_tab`\nis `false` the keyboard focus is moved to the next widget in the focus\nchain.\n## `accepts_tab`\n`true` if pressing the Tab key should insert a tab\n character, `false`, if pressing the Tab key should move the\n keyboard focus.",281,{"inputs":[{"name":"textview"},{"name":"bool"}],"output":null}],[11,"set_border_window_size","","Sets the width of `TextWindowType::Left` or `TextWindowType::Right`,\nor the height of `TextWindowType::Top` or `TextWindowType::Bottom`.\nAutomatically destroys the corresponding window if the size is set\nto 0, and creates the window if the size is set to non-zero. This\nfunction can only be used for the “border windows,” it doesn’t work\nwith `TextWindowType::Widget`, `TextWindowType::Text`, or\n`TextWindowType::Private`.\n## `type_`\nwindow to affect\n## `size`\nwidth or height of the window",281,{"inputs":[{"name":"textview"},{"name":"textwindowtype"},{"name":"i32"}],"output":null}],[11,"set_buffer","","Sets `buffer` as the buffer being displayed by `self`. The previous\nbuffer displayed by the text view is unreferenced, and a reference is\nadded to `buffer`. If you owned a reference to `buffer` before passing it\nto this function, you must remove that reference yourself; `TextView`\nwill not “adopt” it.\n## `buffer`\na `TextBuffer`",281,{"inputs":[{"name":"textview"},{"name":"option"}],"output":null}],[11,"set_cursor_visible","","Toggles whether the insertion point is displayed. A buffer with no editable\ntext probably shouldn’t have a visible cursor, so you may want to turn\nthe cursor off.\n## `setting`\nwhether to show the insertion cursor",281,{"inputs":[{"name":"textview"},{"name":"bool"}],"output":null}],[11,"set_editable","","Sets the default editability of the `TextView`. You can override\nthis default setting with tags in the buffer, using the “editable”\nattribute of tags.\n## `setting`\nwhether it’s editable",281,{"inputs":[{"name":"textview"},{"name":"bool"}],"output":null}],[11,"set_indent","","Sets the default indentation for paragraphs in `self`.\nTags in the buffer may override the default.\n## `indent`\nindentation in pixels",281,{"inputs":[{"name":"textview"},{"name":"i32"}],"output":null}],[11,"set_input_hints","","Sets the `TextView:input-hints` property, which\nallows input methods to fine-tune their behaviour.",281,{"inputs":[{"name":"textview"},{"name":"inputhints"}],"output":null}],[11,"set_input_purpose","","Sets the `TextView:input-purpose` property which\ncan be used by on-screen keyboards and other input\nmethods to adjust their behaviour.",281,{"inputs":[{"name":"textview"},{"name":"inputpurpose"}],"output":null}],[11,"set_justification","","Sets the default justification of text in `self`.\nTags in the view’s buffer may override the default.\n## `justification`\njustification",281,{"inputs":[{"name":"textview"},{"name":"justification"}],"output":null}],[11,"set_left_margin","","Sets the default left margin for text in `self`.\nTags in the buffer may override the default.\n## `left_margin`\nleft margin in pixels",281,{"inputs":[{"name":"textview"},{"name":"i32"}],"output":null}],[11,"set_monospace","","Sets the `TextView:monospace` property, which\nindicates that the text view should use monospace\nfonts.",281,{"inputs":[{"name":"textview"},{"name":"bool"}],"output":null}],[11,"set_overwrite","","Changes the `TextView` overwrite mode.\n## `overwrite`\n`true` to turn on overwrite mode, `false` to turn it off",281,{"inputs":[{"name":"textview"},{"name":"bool"}],"output":null}],[11,"set_pixels_above_lines","","Sets the default number of blank pixels above paragraphs in `self`.\nTags in the buffer for `self` may override the defaults.\n## `pixels_above_lines`\npixels above paragraphs",281,{"inputs":[{"name":"textview"},{"name":"i32"}],"output":null}],[11,"set_pixels_below_lines","","Sets the default number of pixels of blank space\nto put below paragraphs in `self`. May be overridden\nby tags applied to `self`’s buffer.\n## `pixels_below_lines`\npixels below paragraphs",281,{"inputs":[{"name":"textview"},{"name":"i32"}],"output":null}],[11,"set_pixels_inside_wrap","","Sets the default number of pixels of blank space to leave between\ndisplay/wrapped lines within a paragraph. May be overridden by\ntags in `self`’s buffer.\n## `pixels_inside_wrap`\ndefault number of pixels between wrapped lines",281,{"inputs":[{"name":"textview"},{"name":"i32"}],"output":null}],[11,"set_right_margin","","Sets the default right margin for text in the text view.\nTags in the buffer may override the default.\n## `right_margin`\nright margin in pixels",281,{"inputs":[{"name":"textview"},{"name":"i32"}],"output":null}],[11,"set_wrap_mode","","Sets the line wrapping for the view.\n## `wrap_mode`\na `WrapMode`",281,{"inputs":[{"name":"textview"},{"name":"wrapmode"}],"output":null}],[11,"starts_display_line","","Determines whether `iter` is at the start of a display line.\nSee `TextView::forward_display_line` for an explanation of\ndisplay lines vs. paragraphs.\n## `iter`\na `TextIter`",281,{"inputs":[{"name":"textview"},{"name":"textiter"}],"output":{"name":"bool"}}],[11,"window_to_buffer_coords","","Converts coordinates on the window identified by `win` to buffer\ncoordinates, storing the result in (`buffer_x`,`buffer_y`).",281,null],[11,"hash","","",282,null],[11,"fmt","","",282,{"inputs":[{"name":"togglebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",282,{"inputs":[{"name":"togglebutton"}],"output":{"name":"togglebutton"}}],[11,"static_type","","",282,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",282,{"inputs":[{"name":"togglebutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new toggle button. A widget should be packed into the button, as in `Button::new`.",282,{"inputs":[],"output":{"name":"togglebutton"}}],[11,"new_with_label","","Creates a new toggle button with a text label.\n## `label`\na string containing the message to be placed in the toggle button.",282,{"inputs":[{"name":"str"}],"output":{"name":"togglebutton"}}],[11,"new_with_mnemonic","","Creates a new `ToggleButton` containing a label. The label\nwill be created using `Label::new_with_mnemonic`, so underscores\nin `label` indicate the mnemonic for the button.\n## `label`\nthe text of the button, with an underscore in front of the\n mnemonic character",282,{"inputs":[{"name":"str"}],"output":{"name":"togglebutton"}}],[11,"hash","","",283,null],[11,"fmt","","",283,{"inputs":[{"name":"toggletoolbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",283,{"inputs":[{"name":"toggletoolbutton"}],"output":{"name":"toggletoolbutton"}}],[11,"static_type","","",283,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",283,{"inputs":[{"name":"toggletoolbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Returns a new `ToggleToolButton`",283,{"inputs":[],"output":{"name":"toggletoolbutton"}}],[11,"new_from_stock","","Creates a new `ToggleToolButton` containing the image and text from a\nstock item. Some stock ids have preprocessor macros like `GTK_STOCK_OK`\nand `GTK_STOCK_APPLY`.",283,{"inputs":[{"name":"str"}],"output":{"name":"toggletoolbutton"}}],[11,"get_active","","Queries a `ToggleToolButton` and returns its current state.\nReturns `true` if the toggle button is pressed in and `false` if it is raised.",283,{"inputs":[{"name":"toggletoolbutton"}],"output":{"name":"bool"}}],[11,"set_active","","Sets the status of the toggle tool button. Set to `true` if you\nwant the `ToggleButton` to be “pressed in”, and `false` to raise it.\nThis action causes the toggled signal to be emitted.\n## `is_active`\nwhether `self` should be active",283,{"inputs":[{"name":"toggletoolbutton"},{"name":"bool"}],"output":null}],[11,"hash","","",284,null],[11,"fmt","","",284,{"inputs":[{"name":"toolbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",284,{"inputs":[{"name":"toolbutton"}],"output":{"name":"toolbutton"}}],[11,"static_type","","",284,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",284,{"inputs":[{"name":"toolbutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ToolButton` using `icon_widget` as contents and `label` as\nlabel.\n## `icon_widget`\na widget that will be used as the button contents, or `None`\n## `label`\na string that will be used as label, or `None`",284,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"toolbutton"}}],[11,"new_from_stock","","Creates a new `ToolButton` containing the image and text from a\nstock item. Some stock ids have preprocessor macros like `GTK_STOCK_OK`\nand `GTK_STOCK_APPLY`.",284,{"inputs":[{"name":"str"}],"output":{"name":"toolbutton"}}],[11,"hash","","",285,null],[11,"fmt","","",285,{"inputs":[{"name":"toolitem"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",285,{"inputs":[{"name":"toolitem"}],"output":{"name":"toolitem"}}],[11,"static_type","","",285,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",285,{"inputs":[{"name":"toolitem"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `ToolItem`",285,{"inputs":[],"output":{"name":"toolitem"}}],[11,"hash","","",286,null],[11,"fmt","","",286,{"inputs":[{"name":"toolitemgroup"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",286,{"inputs":[{"name":"toolitemgroup"}],"output":{"name":"toolitemgroup"}}],[11,"static_type","","",286,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",286,{"inputs":[{"name":"toolitemgroup"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new tool item group with label `label`.\n## `label`\nthe label of the new group",286,{"inputs":[{"name":"str"}],"output":{"name":"toolitemgroup"}}],[11,"get_collapsed","","Gets whether `self` is collapsed or expanded.",286,{"inputs":[{"name":"toolitemgroup"}],"output":{"name":"bool"}}],[11,"get_drop_item","","Gets the tool item at position (x, y).\n## `x`\nthe x position\n## `y`\nthe y position",286,{"inputs":[{"name":"toolitemgroup"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_header_relief","","Gets the relief mode of the header button of `self`.",286,{"inputs":[{"name":"toolitemgroup"}],"output":{"name":"reliefstyle"}}],[11,"get_item_position","","Gets the position of `item` in `self` as index.\n## `item`\na `ToolItem`",286,{"inputs":[{"name":"toolitemgroup"},{"name":"t"}],"output":{"name":"i32"}}],[11,"get_label","","Gets the label of `self`.",286,{"inputs":[{"name":"toolitemgroup"}],"output":{"name":"option"}}],[11,"get_label_widget","","Gets the label widget of `self`.\nSee `ToolItemGroup::set_label_widget`.",286,{"inputs":[{"name":"toolitemgroup"}],"output":{"name":"option"}}],[11,"get_n_items","","Gets the number of tool items in `self`.",286,{"inputs":[{"name":"toolitemgroup"}],"output":{"name":"u32"}}],[11,"get_nth_item","","Gets the tool item at `index` in group.\n## `index`\nthe index",286,{"inputs":[{"name":"toolitemgroup"},{"name":"u32"}],"output":{"name":"option"}}],[11,"insert","","Inserts `item` at `position` in the list of children of `self`.\n## `item`\nthe `ToolItem` to insert into `self`\n## `position`\nthe position of `item` in `self`, starting with 0.\n The position -1 means end of list.",286,{"inputs":[{"name":"toolitemgroup"},{"name":"t"},{"name":"i32"}],"output":null}],[11,"set_collapsed","","Sets whether the `self` should be collapsed or expanded.\n## `collapsed`\nwhether the `self` should be collapsed or expanded",286,{"inputs":[{"name":"toolitemgroup"},{"name":"bool"}],"output":null}],[11,"set_header_relief","","Set the button relief of the group header.\nSee `ButtonExt::set_relief` for details.\n## `style`\nthe `ReliefStyle`",286,{"inputs":[{"name":"toolitemgroup"},{"name":"reliefstyle"}],"output":null}],[11,"set_item_position","","Sets the position of `item` in the list of children of `self`.\n## `item`\nthe `ToolItem` to move to a new position, should\n be a child of `self`.\n## `position`\nthe new position of `item` in `self`, starting with 0.\n The position -1 means end of list.",286,{"inputs":[{"name":"toolitemgroup"},{"name":"t"},{"name":"i32"}],"output":null}],[11,"set_label","","Sets the label of the tool item group. The label is displayed in the header\nof the group.\n## `label`\nthe new human-readable label of of the group",286,{"inputs":[{"name":"toolitemgroup"},{"name":"str"}],"output":null}],[11,"set_label_widget","","Sets the label of the tool item group.\nThe label widget is displayed in the header of the group, in place\nof the usual label.\n## `label_widget`\nthe widget to be displayed in place of the usual label",286,{"inputs":[{"name":"toolitemgroup"},{"name":"t"}],"output":null}],[11,"hash","","",287,null],[11,"fmt","","",287,{"inputs":[{"name":"toolpalette"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",287,{"inputs":[{"name":"toolpalette"}],"output":{"name":"toolpalette"}}],[11,"static_type","","",287,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",287,{"inputs":[{"name":"toolpalette"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new tool palette.",287,{"inputs":[],"output":{"name":"toolpalette"}}],[11,"get_drop_group","","Gets the group at position (x, y).\n## `x`\nthe x position\n## `y`\nthe y position",287,{"inputs":[{"name":"toolpalette"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_drop_item","","Gets the item at position (x, y).\nSee `ToolPalette::get_drop_group`.\n## `x`\nthe x position\n## `y`\nthe y position",287,{"inputs":[{"name":"toolpalette"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_exclusive","","Gets whether `group` is exclusive or not.\nSee `ToolPalette::set_exclusive`.\n## `group`\na `ToolItemGroup` which is a child of palette",287,{"inputs":[{"name":"toolpalette"},{"name":"toolitemgroup"}],"output":{"name":"bool"}}],[11,"get_expand","","Gets whether group should be given extra space.\nSee `ToolPalette::set_expand`.\n## `group`\na `ToolItemGroup` which is a child of palette",287,{"inputs":[{"name":"toolpalette"},{"name":"toolitemgroup"}],"output":{"name":"bool"}}],[11,"get_group_position","","Gets the position of `group` in `self` as index.\nSee `ToolPalette::set_group_position`.\n## `group`\na `ToolItemGroup`",287,{"inputs":[{"name":"toolpalette"},{"name":"toolitemgroup"}],"output":{"name":"i32"}}],[11,"get_hadjustment","","Gets the horizontal adjustment of the tool palette.",287,{"inputs":[{"name":"toolpalette"}],"output":{"name":"option"}}],[11,"get_icon_size","","Gets the size of icons in the tool palette.\nSee `ToolPalette::set_icon_size`.",287,{"inputs":[{"name":"toolpalette"}],"output":{"name":"i32"}}],[11,"get_style","","Gets the style (icons, text or both) of items in the tool palette.",287,{"inputs":[{"name":"toolpalette"}],"output":{"name":"toolbarstyle"}}],[11,"get_vadjustment","","Gets the vertical adjustment of the tool palette.",287,{"inputs":[{"name":"toolpalette"}],"output":{"name":"option"}}],[11,"set_drag_source","","Sets the tool palette as a drag source.\nEnables all groups and items in the tool palette as drag sources\non button 1 and button 3 press with copy and move actions.\nSee `Widget::drag_source_set`.\n## `targets`\nthe `ToolPaletteDragTargets`\n which the widget should support",287,{"inputs":[{"name":"toolpalette"},{"name":"toolpalettedragtargets"}],"output":null}],[11,"set_exclusive","","Sets whether the group should be exclusive or not.\nIf an exclusive group is expanded all other groups are collapsed.\n## `group`\na `ToolItemGroup` which is a child of palette\n## `exclusive`\nwhether the group should be exclusive or not",287,{"inputs":[{"name":"toolpalette"},{"name":"toolitemgroup"},{"name":"bool"}],"output":null}],[11,"set_expand","","Sets whether the group should be given extra space.\n## `group`\na `ToolItemGroup` which is a child of palette\n## `expand`\nwhether the group should be given extra space",287,{"inputs":[{"name":"toolpalette"},{"name":"toolitemgroup"},{"name":"bool"}],"output":null}],[11,"set_group_position","","Sets the position of the group as an index of the tool palette.\nIf position is 0 the group will become the first child, if position is\n-1 it will become the last child.\n## `group`\na `ToolItemGroup` which is a child of palette\n## `position`\na new index for group",287,{"inputs":[{"name":"toolpalette"},{"name":"toolitemgroup"},{"name":"i32"}],"output":null}],[11,"set_icon_size","","Sets the size of icons in the tool palette.\n## `icon_size`\nthe `IconSize` that icons in the tool\n palette shall have",287,{"inputs":[{"name":"toolpalette"},{"name":"i32"}],"output":null}],[11,"set_style","","Sets the style (text, icons or both) of items in the tool palette.\n## `style`\nthe `ToolbarStyle` that items in the tool palette shall have",287,{"inputs":[{"name":"toolpalette"},{"name":"toolbarstyle"}],"output":null}],[11,"unset_icon_size","","Unsets the tool palette icon size set with `ToolPalette::set_icon_size`,\nso that user preferences will be used to determine the icon size.",287,{"inputs":[{"name":"toolpalette"}],"output":null}],[11,"unset_style","","Unsets a toolbar style set with `ToolPalette::set_style`,\nso that user preferences will be used to determine the toolbar style.",287,{"inputs":[{"name":"toolpalette"}],"output":null}],[11,"hash","","",288,null],[11,"fmt","","",288,{"inputs":[{"name":"toolshell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",288,{"inputs":[{"name":"toolshell"}],"output":{"name":"toolshell"}}],[11,"static_type","","",288,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",288,{"inputs":[{"name":"toolshell"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",289,null],[11,"fmt","","",289,{"inputs":[{"name":"toolbar"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"toolbar"}],"output":{"name":"toolbar"}}],[11,"static_type","","",289,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",289,{"inputs":[{"name":"toolbar"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new toolbar.",289,{"inputs":[],"output":{"name":"toolbar"}}],[11,"get_drop_index","","Returns the position corresponding to the indicated point on\n`self`. This is useful when dragging items to the toolbar:\nthis function returns the position a new item should be\ninserted.",289,{"inputs":[{"name":"toolbar"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_icon_size","","Retrieves the icon size for the toolbar. See `Toolbar::set_icon_size`.",289,{"inputs":[{"name":"toolbar"}],"output":{"name":"iconsize"}}],[11,"get_item_index","","Returns the position of `item` on the toolbar, starting from 0.\nIt is an error if `item` is not a child of the toolbar.\n## `item`\na `ToolItem` that is a child of `self`",289,{"inputs":[{"name":"toolbar"},{"name":"t"}],"output":{"name":"i32"}}],[11,"get_n_items","","Returns the number of items on the toolbar.",289,{"inputs":[{"name":"toolbar"}],"output":{"name":"i32"}}],[11,"get_nth_item","","Returns the `n`&#39;th item on `self`, or `None` if the\ntoolbar does not contain an `n`&#39;th item.\n## `n`\nA position on the toolbar",289,{"inputs":[{"name":"toolbar"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_relief_style","","Returns the relief style of buttons on `self`. See\n`ButtonExt::set_relief`.",289,{"inputs":[{"name":"toolbar"}],"output":{"name":"reliefstyle"}}],[11,"get_show_arrow","","Returns whether the toolbar has an overflow menu.\nSee `Toolbar::set_show_arrow`.",289,{"inputs":[{"name":"toolbar"}],"output":{"name":"bool"}}],[11,"get_style","","Retrieves whether the toolbar has text, icons, or both . See\n`Toolbar::set_style`.",289,{"inputs":[{"name":"toolbar"}],"output":{"name":"toolbarstyle"}}],[11,"insert","","Insert a `ToolItem` into the toolbar at position `pos`. If `pos` is\n0 the item is prepended to the start of the toolbar. If `pos` is\nnegative, the item is appended to the end of the toolbar.\n## `item`\na `ToolItem`\n## `pos`\nthe position of the new item",289,{"inputs":[{"name":"toolbar"},{"name":"t"},{"name":"i32"}],"output":null}],[11,"set_drop_highlight_item","","Highlights `self` to give an idea of what it would look like\nif `item` was added to `self` at the position indicated by `index_`.\nIf `item` is `None`, highlighting is turned off. In that case `index_`\nis ignored.",289,{"inputs":[{"name":"toolbar"},{"name":"option"},{"name":"i32"}],"output":null}],[11,"set_icon_size","","This function sets the size of stock icons in the toolbar. You\ncan call it both before you add the icons and after they’ve been\nadded. The size you set will override user preferences for the default\nicon size.",289,{"inputs":[{"name":"toolbar"},{"name":"iconsize"}],"output":null}],[11,"set_show_arrow","","Sets whether to show an overflow menu when\n`self` doesn’t have room for all items on it. If `true`,\nitems that there are not room are available through an\noverflow menu.\n## `show_arrow`\nWhether to show an overflow menu",289,{"inputs":[{"name":"toolbar"},{"name":"bool"}],"output":null}],[11,"set_style","","Alters the view of `self` to display either icons only, text only, or both.\n## `style`\nthe new style for `self`.",289,{"inputs":[{"name":"toolbar"},{"name":"toolbarstyle"}],"output":null}],[11,"unset_icon_size","","Unsets toolbar icon size set with `Toolbar::set_icon_size`, so that\nuser preferences will be used to determine the icon size.",289,{"inputs":[{"name":"toolbar"}],"output":null}],[11,"unset_style","","Unsets a toolbar style set with `Toolbar::set_style`, so that\nuser preferences will be used to determine the toolbar style.",289,{"inputs":[{"name":"toolbar"}],"output":null}],[11,"hash","","",290,null],[11,"fmt","","",290,{"inputs":[{"name":"treemodel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"treemodel"}],"output":{"name":"treemodel"}}],[11,"static_type","","",290,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",290,{"inputs":[{"name":"treemodel"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",291,null],[11,"fmt","","",291,{"inputs":[{"name":"treeselection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"treeselection"}],"output":{"name":"treeselection"}}],[11,"static_type","","",291,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",291,{"inputs":[{"name":"treeselection"},{"name":"t"}],"output":{"name":"bool"}}],[11,"count_selected_rows","","Returns the number of rows that have been selected in `tree`.",291,{"inputs":[{"name":"treeselection"}],"output":{"name":"i32"}}],[11,"get_mode","","Gets the selection mode for `self`. See\n`TreeSelection::set_mode`.",291,{"inputs":[{"name":"treeselection"}],"output":{"name":"selectionmode"}}],[11,"get_selected","","Sets `iter` to the currently selected node if `self` is set to\n`SelectionMode::Single` or `SelectionMode::Browse`. `iter` may be NULL if you\njust want to test if `self` has any selected nodes. `model` is filled\nwith the current model as a convenience. This function will not work if you\nuse `self` is `SelectionMode::Multiple`.\n## `model`\nA pointer to set to the `TreeModel`, or NULL.\n## `iter`\nThe `TreeIter`, or NULL.",291,{"inputs":[{"name":"treeselection"}],"output":{"name":"option"}}],[11,"get_selected_rows","","Creates a list of path of all selected rows. Additionally, if you are\nplanning on modifying the model after calling this function, you may\nwant to convert the returned list into a list of ``GtkTreeRowReferences``.\nTo do this, you can use `TreeRowReference::new`.",291,null],[11,"get_tree_view","","Returns the tree view associated with `self`.",291,{"inputs":[{"name":"treeselection"}],"output":{"name":"option"}}],[11,"iter_is_selected","","Returns `true` if the row at `iter` is currently selected.\n## `iter`\nA valid `TreeIter`",291,{"inputs":[{"name":"treeselection"},{"name":"treeiter"}],"output":{"name":"bool"}}],[11,"path_is_selected","","Returns `true` if the row pointed to by `path` is currently selected. If `path`\ndoes not point to a valid location, `false` is returned\n## `path`\nA `TreePath` to check selection on.",291,{"inputs":[{"name":"treeselection"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"select_all","","Selects all the nodes. `self` must be set to `SelectionMode::Multiple`\nmode.",291,{"inputs":[{"name":"treeselection"}],"output":null}],[11,"select_iter","","Selects the specified iterator.\n## `iter`\nThe `TreeIter` to be selected.",291,{"inputs":[{"name":"treeselection"},{"name":"treeiter"}],"output":null}],[11,"select_path","","Select the row at `path`.\n## `path`\nThe `TreePath` to be selected.",291,{"inputs":[{"name":"treeselection"},{"name":"treepath"}],"output":null}],[11,"select_range","","Selects a range of nodes, determined by `start_path` and `end_path` inclusive.\n`self` must be set to `SelectionMode::Multiple` mode.\n## `start_path`\nThe initial node of the range.\n## `end_path`\nThe final node of the range.",291,{"inputs":[{"name":"treeselection"},{"name":"treepath"},{"name":"treepath"}],"output":null}],[11,"set_mode","","Sets the selection mode of the `self`. If the previous type was\n`SelectionMode::Multiple`, then the anchor is kept selected, if it was\npreviously selected.\n## `type_`\nThe selection mode",291,{"inputs":[{"name":"treeselection"},{"name":"selectionmode"}],"output":null}],[11,"unselect_all","","Unselects all the nodes.",291,{"inputs":[{"name":"treeselection"}],"output":null}],[11,"unselect_iter","","Unselects the specified iterator.\n## `iter`\nThe `TreeIter` to be unselected.",291,{"inputs":[{"name":"treeselection"},{"name":"treeiter"}],"output":null}],[11,"unselect_path","","Unselects the row at `path`.\n## `path`\nThe `TreePath` to be unselected.",291,{"inputs":[{"name":"treeselection"},{"name":"treepath"}],"output":null}],[11,"unselect_range","","Unselects a range of nodes, determined by `start_path` and `end_path`\ninclusive.\n## `start_path`\nThe initial node of the range.\n## `end_path`\nThe initial node of the range.",291,{"inputs":[{"name":"treeselection"},{"name":"treepath"},{"name":"treepath"}],"output":null}],[11,"hash","","",292,null],[11,"fmt","","",292,{"inputs":[{"name":"treesortable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"treesortable"}],"output":{"name":"treesortable"}}],[11,"static_type","","",292,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",292,{"inputs":[{"name":"treesortable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",293,null],[11,"fmt","","",293,{"inputs":[{"name":"treestore"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",293,{"inputs":[{"name":"treestore"}],"output":{"name":"treestore"}}],[11,"static_type","","",293,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",293,{"inputs":[{"name":"treestore"},{"name":"t"}],"output":{"name":"bool"}}],[11,"append","","Appends a new row to `self`. If `parent` is non-`None`, then it will append the\nnew row after the last child of `parent`, otherwise it will append a row to\nthe top level. `iter` will be changed to point to this new row. The row will\nbe empty after this function is called. To fill in values, you need to call\n`TreeStore::set` or `TreeStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the appended row\n## `parent`\nA valid `TreeIter`, or `None`",293,{"inputs":[{"name":"treestore"},{"name":"option"}],"output":{"name":"treeiter"}}],[11,"clear","","Removes all rows from `self`",293,{"inputs":[{"name":"treestore"}],"output":null}],[11,"insert","","Creates a new row at `position`. If parent is non-`None`, then the row will be\nmade a child of `parent`. Otherwise, the row will be created at the toplevel.\nIf `position` is -1 or is larger than the number of rows at that level, then\nthe new row will be inserted to the end of the list. `iter` will be changed\nto point to this new row. The row will be empty after this function is\ncalled. To fill in values, you need to call `TreeStore::set` or\n`TreeStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the new row\n## `parent`\nA valid `TreeIter`, or `None`\n## `position`\nposition to insert the new row, or -1 for last",293,{"inputs":[{"name":"treestore"},{"name":"option"},{"name":"i32"}],"output":{"name":"treeiter"}}],[11,"insert_after","","Inserts a new row after `sibling`. If `sibling` is `None`, then the row will be\nprepended to `parent` ’s children. If `parent` and `sibling` are `None`, then\nthe row will be prepended to the toplevel. If both `sibling` and `parent` are\nset, then `parent` must be the parent of `sibling`. When `sibling` is set,\n`parent` is optional.",293,{"inputs":[{"name":"treestore"},{"name":"option"},{"name":"option"}],"output":{"name":"treeiter"}}],[11,"insert_before","","Inserts a new row before `sibling`. If `sibling` is `None`, then the row will\nbe appended to `parent` ’s children. If `parent` and `sibling` are `None`, then\nthe row will be appended to the toplevel. If both `sibling` and `parent` are\nset, then `parent` must be the parent of `sibling`. When `sibling` is set,\n`parent` is optional.",293,{"inputs":[{"name":"treestore"},{"name":"option"},{"name":"option"}],"output":{"name":"treeiter"}}],[11,"is_ancestor","","Returns `true` if `iter` is an ancestor of `descendant`. That is, `iter` is the\nparent (or grandparent or great-grandparent) of `descendant`.\n## `iter`\nA valid `TreeIter`\n## `descendant`\nA valid `TreeIter`",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"},{"name":"treeiter"}],"output":{"name":"bool"}}],[11,"iter_depth","","Returns the depth of `iter`. This will be 0 for anything on the root level, 1\nfor anything down a level, etc.\n## `iter`\nA valid `TreeIter`",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"}],"output":{"name":"i32"}}],[11,"iter_is_valid","","WARNING: This function is slow. Only use it for debugging and/or testing\npurposes.",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"}],"output":{"name":"bool"}}],[11,"move_after","","Moves `iter` in `self` to the position after `position`. `iter` and\n`position` should be in the same level. Note that this function only\nworks with unsorted stores. If `position` is `None`, `iter` will be moved\nto the start of the level.\n## `iter`\nA `TreeIter`.\n## `position`\nA `TreeIter`.",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"},{"name":"option"}],"output":null}],[11,"move_before","","Moves `iter` in `self` to the position before `position`. `iter` and\n`position` should be in the same level. Note that this function only\nworks with unsorted stores. If `position` is `None`, `iter` will be\nmoved to the end of the level.\n## `iter`\nA `TreeIter`.\n## `position`\nA `TreeIter` or `None`.",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"},{"name":"option"}],"output":null}],[11,"prepend","","Prepends a new row to `self`. If `parent` is non-`None`, then it will prepend\nthe new row before the first child of `parent`, otherwise it will prepend a row\nto the top level. `iter` will be changed to point to this new row. The row\nwill be empty after this function is called. To fill in values, you need to\ncall `TreeStore::set` or `TreeStore::set_value`.\n## `iter`\nAn unset `TreeIter` to set to the prepended row\n## `parent`\nA valid `TreeIter`, or `None`",293,{"inputs":[{"name":"treestore"},{"name":"option"}],"output":{"name":"treeiter"}}],[11,"remove","","Removes `iter` from `self`. After being removed, `iter` is set to the\nnext valid row at that level, or invalidated if it previously pointed to the\nlast one.\n## `iter`\nA valid `TreeIter`",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"}],"output":{"name":"bool"}}],[11,"swap","","Swaps `a` and `b` in the same level of `self`. Note that this function\nonly works with unsorted stores.\n## `a`\nA `TreeIter`.\n## `b`\nAnother `TreeIter`.",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"},{"name":"treeiter"}],"output":null}],[11,"hash","","",294,null],[11,"fmt","","",294,{"inputs":[{"name":"treeview"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",294,{"inputs":[{"name":"treeview"}],"output":{"name":"treeview"}}],[11,"static_type","","",294,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",294,{"inputs":[{"name":"treeview"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TreeView` widget.",294,{"inputs":[],"output":{"name":"treeview"}}],[11,"new_with_model","","Creates a new `TreeView` widget with the model initialized to `model`.\n## `model`\nthe model.",294,{"inputs":[{"name":"t"}],"output":{"name":"treeview"}}],[11,"append_column","","Appends `column` to the list of columns. If `self` has “fixed_height”\nmode enabled, then `column` must have its “sizing” property set to be\nGTK_TREE_VIEW_COLUMN_FIXED.\n## `column`\nThe `TreeViewColumn` to add.",294,{"inputs":[{"name":"treeview"},{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"collapse_all","","Recursively collapses all visible, expanded nodes in `self`.",294,{"inputs":[{"name":"treeview"}],"output":null}],[11,"collapse_row","","Collapses a row (hides its child rows, if they exist).\n## `path`\npath to a row in the `self`",294,{"inputs":[{"name":"treeview"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"columns_autosize","","Resizes all columns to their optimal width. Only works after the\ntreeview has been realized.",294,{"inputs":[{"name":"treeview"}],"output":null}],[11,"convert_bin_window_to_tree_coords","","Converts bin_window coordinates to coordinates for the\ntree (the full scrollable area of the tree).\n## `bx`\nX coordinate relative to bin_window\n## `by`\nY coordinate relative to bin_window\n## `tx`\nreturn location for tree X coordinate\n## `ty`\nreturn location for tree Y coordinate",294,null],[11,"convert_bin_window_to_widget_coords","","Converts bin_window coordinates (see `TreeView::get_bin_window`)\nto widget relative coordinates.\n## `bx`\nbin_window X coordinate\n## `by`\nbin_window Y coordinate\n## `wx`\nreturn location for widget X coordinate\n## `wy`\nreturn location for widget Y coordinate",294,null],[11,"convert_tree_to_bin_window_coords","","Converts tree coordinates (coordinates in full scrollable area of the tree)\nto bin_window coordinates.\n## `tx`\ntree X coordinate\n## `ty`\ntree Y coordinate\n## `bx`\nreturn location for X coordinate relative to bin_window\n## `by`\nreturn location for Y coordinate relative to bin_window",294,null],[11,"convert_tree_to_widget_coords","","Converts tree coordinates (coordinates in full scrollable area of the tree)\nto widget coordinates.\n## `tx`\nX coordinate relative to the tree\n## `ty`\nY coordinate relative to the tree\n## `wx`\nreturn location for widget X coordinate\n## `wy`\nreturn location for widget Y coordinate",294,null],[11,"convert_widget_to_bin_window_coords","","Converts widget coordinates to coordinates for the bin_window\n(see `TreeView::get_bin_window`).\n## `wx`\nX coordinate relative to the widget\n## `wy`\nY coordinate relative to the widget\n## `bx`\nreturn location for bin_window X coordinate\n## `by`\nreturn location for bin_window Y coordinate",294,null],[11,"convert_widget_to_tree_coords","","Converts widget coordinates to coordinates for the\ntree (the full scrollable area of the tree).\n## `wx`\nX coordinate relative to the widget\n## `wy`\nY coordinate relative to the widget\n## `tx`\nreturn location for tree X coordinate\n## `ty`\nreturn location for tree Y coordinate",294,null],[11,"expand_all","","Recursively expands all nodes in the `self`.",294,{"inputs":[{"name":"treeview"}],"output":null}],[11,"expand_row","","Opens the row so its children are visible.\n## `path`\npath to a row\n## `open_all`\nwhether to recursively expand, or just expand immediate children",294,{"inputs":[{"name":"treeview"},{"name":"treepath"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"expand_to_path","","Expands the row at `path`. This will also expand all parent rows of\n`path` as necessary.\n## `path`\npath to a row.",294,{"inputs":[{"name":"treeview"},{"name":"treepath"}],"output":null}],[11,"get_activate_on_single_click","","Gets the setting set by `TreeView::set_activate_on_single_click`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_background_area","","Fills the bounding rectangle in bin_window coordinates for the cell at the\nrow specified by `path` and the column specified by `column`. If `path` is\n`None`, or points to a node not found in the tree, the `y` and `height` fields of\nthe rectangle will be filled with 0. If `column` is `None`, the `x` and `width`\nfields will be filled with 0. The returned rectangle is equivalent to the\n`background_area` passed to `CellRendererExt::render`. These background\nareas tile to cover the entire bin window. Contrast with the `cell_area`,\nreturned by `TreeView::get_cell_area`, which returns only the cell\nitself, excluding surrounding borders and the tree expander area.\n## `path`\na `TreePath` for the row, or `None` to get only horizontal coordinates\n## `column`\na `TreeViewColumn` for the column, or `None` to get only vertical coordiantes\n## `rect`\nrectangle to fill with cell background rect",294,{"inputs":[{"name":"treeview"},{"name":"option"},{"name":"option"}],"output":{"name":"rectangle"}}],[11,"get_bin_window","","Returns the window that `self` renders to.\nThis is used primarily to compare to `event-&gt;window`\nto confirm that the event on `self` is on the right window.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"option"}}],[11,"get_cell_area","","Fills the bounding rectangle in bin_window coordinates for the cell at the\nrow specified by `path` and the column specified by `column`. If `path` is\n`None`, or points to a path not currently displayed, the `y` and `height` fields\nof the rectangle will be filled with 0. If `column` is `None`, the `x` and `width`\nfields will be filled with 0. The sum of all cell rects does not cover the\nentire tree; there are extra pixels in between rows, for example. The\nreturned rectangle is equivalent to the `cell_area` passed to\n`CellRendererExt::render`. This function is only valid if `self` is\nrealized.\n## `path`\na `TreePath` for the row, or `None` to get only horizontal coordinates\n## `column`\na `TreeViewColumn` for the column, or `None` to get only vertical coordinates\n## `rect`\nrectangle to fill with cell rect",294,{"inputs":[{"name":"treeview"},{"name":"option"},{"name":"option"}],"output":{"name":"rectangle"}}],[11,"get_column","","Gets the `TreeViewColumn` at the given position in the `tree_view`.\n## `n`\nThe position of the column, counting from 0.",294,{"inputs":[{"name":"treeview"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_columns","","Returns a `glib::List` of all the `TreeViewColumn` s currently in `self`.\nThe returned list must be freed with g_list_free ().",294,{"inputs":[{"name":"treeview"}],"output":{"name":"vec"}}],[11,"get_cursor","","Fills in `path` and `focus_column` with the current path and focus column. If\nthe cursor isn’t currently set, then *`path` will be `None`. If no column\ncurrently has focus, then *`focus_column` will be `None`.",294,null],[11,"get_dest_row_at_pos","","Determines the destination row for a given position. `drag_x` and\n`drag_y` are expected to be in widget coordinates. This function is only\nmeaningful if `self` is realized. Therefore this function will always\nreturn `false` if `self` is not realized or does not have a model.\n## `drag_x`\nthe position to determine the destination row for\n## `drag_y`\nthe position to determine the destination row for\n## `path`\nReturn location for the path of\n the highlighted row, or `None`.\n## `pos`\nReturn location for the drop position, or\n `None`",294,{"inputs":[{"name":"treeview"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_drag_dest_row","","Gets information about the row that is highlighted for feedback.\n## `path`\nReturn location for the path of the highlighted row, or `None`.\n## `pos`\nReturn location for the drop position, or `None`",294,null],[11,"get_enable_search","","Returns whether or not the tree allows to start interactive searching\nby typing in text.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_enable_tree_lines","","Returns whether or not tree lines are drawn in `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_expander_column","","Returns the column that is the current expander column.\nThis column has the expander arrow drawn next to it.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"option"}}],[11,"get_fixed_height_mode","","Returns whether fixed height mode is turned on for `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_grid_lines","","Returns which grid lines are enabled in `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"treeviewgridlines"}}],[11,"get_hadjustment","","Gets the `Adjustment` currently being used for the horizontal aspect.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"option"}}],[11,"get_headers_clickable","","Returns whether all header columns are clickable.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_headers_visible","","Returns `true` if the headers on the `self` are visible.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_hover_expand","","Returns whether hover expansion mode is turned on for `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_hover_selection","","Returns whether hover selection mode is turned on for `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_level_indentation","","Returns the amount, in pixels, of extra indentation for child levels\nin `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"i32"}}],[11,"get_model","","Returns the model the `TreeView` is based on. Returns `None` if the\nmodel is unset.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"option"}}],[11,"get_n_columns","","Queries the number of columns in the given `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"u32"}}],[11,"get_path_at_pos","","Finds the path at the point (`x`, `y`), relative to bin_window coordinates\n(please see `TreeView::get_bin_window`).\nThat is, `x` and `y` are relative to an events coordinates. `x` and `y` must\ncome from an event on the `self` only where `event-&gt;window ==\ngtk_tree_view_get_bin_window ()`. It is primarily for\nthings like popup menus. If `path` is non-`None`, then it will be filled\nwith the `TreePath` at that point. This path should be freed with\n`TreePath::free`. If `column` is non-`None`, then it will be filled\nwith the column at that point. `cell_x` and `cell_y` return the coordinates\nrelative to the cell background (i.e. the `background_area` passed to\n`CellRendererExt::render`). This function is only meaningful if\n`self` is realized. Therefore this function will always return `false`\nif `self` is not realized or does not have a model.",294,{"inputs":[{"name":"treeview"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_reorderable","","Retrieves whether the user can reorder the tree via drag-and-drop. See\n`TreeView::set_reorderable`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_rubber_banding","","Returns whether rubber banding is turned on for `self`. If the\nselection mode is `SelectionMode::Multiple`, rubber banding will allow the\nuser to select multiple rows by dragging the mouse.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_rules_hint","","Gets the setting set by `TreeView::set_rules_hint`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_search_column","","Gets the column searched on by the interactive search code.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"i32"}}],[11,"get_search_entry","","Returns the `Entry` which is currently in use as interactive search\nentry for `self`. In case the built-in entry is being used, `None`\nwill be returned.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"option"}}],[11,"get_selection","","Gets the `TreeSelection` associated with `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"treeselection"}}],[11,"get_show_expanders","","Returns whether or not expanders are drawn in `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"get_tooltip_column","","Returns the column of `self`’s model which is being used for\ndisplaying tooltips on `self`’s rows.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"i32"}}],[11,"get_tooltip_context","","This function is supposed to be used in a `Widget::query-tooltip`\nsignal handler for `TreeView`. The `x`, `y` and `keyboard_tip` values\nwhich are received in the signal handler, should be passed to this\nfunction without modification.",294,{"inputs":[{"name":"treeview"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"option"}}],[11,"get_vadjustment","","Gets the `Adjustment` currently being used for the vertical aspect.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"option"}}],[11,"get_visible_range","","Sets `start_path` and `end_path` to be the first and last visible path.\nNote that there may be invisible paths in between.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"option"}}],[11,"get_visible_rect","","Fills `visible_rect` with the currently-visible region of the\nbuffer, in tree coordinates. Convert to bin_window coordinates with\n`TreeView::convert_tree_to_bin_window_coords`.\nTree coordinates start at 0,0 for row 0 of the tree, and cover the entire\nscrollable area of the tree.\n## `visible_rect`\nrectangle to fill",294,{"inputs":[{"name":"treeview"}],"output":{"name":"rectangle"}}],[11,"insert_column","","This inserts the `column` into the `self` at `position`. If `position` is\n-1, then the column is inserted at the end. If `self` has\n“fixed_height” mode enabled, then `column` must have its “sizing” property\nset to be GTK_TREE_VIEW_COLUMN_FIXED.\n## `column`\nThe `TreeViewColumn` to be inserted.\n## `position`\nThe position to insert `column` in.",294,{"inputs":[{"name":"treeview"},{"name":"treeviewcolumn"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"is_blank_at_pos","","Determine whether the point (`x`, `y`) in `self` is blank, that is no\ncell content nor an expander arrow is drawn at the location. If so, the\nlocation can be considered as the background. You might wish to take\nspecial action on clicks on the background, such as clearing a current\nselection, having a custom context menu or starting rubber banding.",294,{"inputs":[{"name":"treeview"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"is_rubber_banding_active","","Returns whether a rubber banding operation is currently being done\nin `self`.",294,{"inputs":[{"name":"treeview"}],"output":{"name":"bool"}}],[11,"move_column_after","","Moves `column` to be after to `base_column`. If `base_column` is `None`, then\n`column` is placed in the first position.\n## `column`\nThe `TreeViewColumn` to be moved.\n## `base_column`\nThe `TreeViewColumn` to be moved relative to, or `None`.",294,{"inputs":[{"name":"treeview"},{"name":"treeviewcolumn"},{"name":"option"}],"output":null}],[11,"remove_column","","Removes `column` from `self`.\n## `column`\nThe `TreeViewColumn` to remove.",294,{"inputs":[{"name":"treeview"},{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"row_activated","","Activates the cell determined by `path` and `column`.\n## `path`\nThe `TreePath` to be activated.\n## `column`\nThe `TreeViewColumn` to be activated.",294,{"inputs":[{"name":"treeview"},{"name":"treepath"},{"name":"treeviewcolumn"}],"output":null}],[11,"row_expanded","","Returns `true` if the node pointed to by `path` is expanded in `self`.\n## `path`\nA `TreePath` to test expansion state.",294,{"inputs":[{"name":"treeview"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"scroll_to_cell","","Moves the alignments of `self` to the position specified by `column` and\n`path`. If `column` is `None`, then no horizontal scrolling occurs. Likewise,\nif `path` is `None` no vertical scrolling occurs. At a minimum, one of `column`\nor `path` need to be non-`None`. `row_align` determines where the row is\nplaced, and `col_align` determines where `column` is placed. Both are expected\nto be between 0.0 and 1.0. 0.0 means left/top alignment, 1.0 means\nright/bottom alignment, 0.5 means center.",294,{"inputs":[{"name":"treeview"},{"name":"option"},{"name":"option"},{"name":"bool"},{"name":"f32"},{"name":"f32"}],"output":null}],[11,"scroll_to_point","","Scrolls the tree view such that the top-left corner of the visible\narea is `tree_x`, `tree_y`, where `tree_x` and `tree_y` are specified\nin tree coordinates. The `self` must be realized before\nthis function is called. If it isn&#39;t, you probably want to be\nusing `TreeView::scroll_to_cell`.",294,{"inputs":[{"name":"treeview"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_activate_on_single_click","","Cause the `TreeView::row-activated` signal to be emitted\non a single click instead of a double click.",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_cursor","","Sets the current keyboard focus to be at `path`, and selects it. This is\nuseful when you want to focus the user’s attention on a particular row. If\n`focus_column` is not `None`, then focus is given to the column specified by\nit. Additionally, if `focus_column` is specified, and `start_editing` is\n`true`, then editing should be started in the specified cell.\nThis function is often followed by `Widget::grab_focus` (`self`)\nin order to give keyboard focus to the widget. Please note that editing\ncan only happen when the widget is realized.",294,{"inputs":[{"name":"treeview"},{"name":"treepath"},{"name":"option"},{"name":"bool"}],"output":null}],[11,"set_cursor_on_cell","","Sets the current keyboard focus to be at `path`, and selects it. This is\nuseful when you want to focus the user’s attention on a particular row. If\n`focus_column` is not `None`, then focus is given to the column specified by\nit. If `focus_column` and `focus_cell` are not `None`, and `focus_column`\ncontains 2 or more editable or activatable cells, then focus is given to\nthe cell specified by `focus_cell`. Additionally, if `focus_column` is\nspecified, and `start_editing` is `true`, then editing should be started in\nthe specified cell. This function is often followed by\n`Widget::grab_focus` (`self`) in order to give keyboard focus to the\nwidget. Please note that editing can only happen when the widget is\nrealized.",294,{"inputs":[{"name":"treeview"},{"name":"treepath"},{"name":"option"},{"name":"option"},{"name":"bool"}],"output":null}],[11,"set_drag_dest_row","","Sets the row that is highlighted for feedback.\nIf `path` is `None`, an existing highlight is removed.\n## `path`\nThe path of the row to highlight, or `None`\n## `pos`\nSpecifies whether to drop before, after or into the row",294,{"inputs":[{"name":"treeview"},{"name":"option"},{"name":"treeviewdropposition"}],"output":null}],[11,"set_enable_search","","If `enable_search` is set, then the user can type in text to search through\nthe tree interactively (this is sometimes called &quot;typeahead find&quot;).",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_enable_tree_lines","","Sets whether to draw lines interconnecting the expanders in `self`.\nThis does not have any visible effects for lists.\n## `enabled`\n`true` to enable tree line drawing, `false` otherwise.",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_expander_column","","Sets the column to draw the expander arrow at. It must be in `self`.\nIf `column` is `None`, then the expander arrow is always at the first\nvisible column.",294,{"inputs":[{"name":"treeview"},{"name":"treeviewcolumn"}],"output":null}],[11,"set_fixed_height_mode","","Enables or disables the fixed height mode of `self`.\nFixed height mode speeds up `TreeView` by assuming that all\nrows have the same height.\nOnly enable this option if all rows are the same height and all\ncolumns are of type `TreeViewColumnSizing::Fixed`.\n## `enable`\n`true` to enable fixed height mode",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_grid_lines","","Sets which grid lines to draw in `self`.\n## `grid_lines`\na `TreeViewGridLines` value indicating which grid lines to\nenable.",294,{"inputs":[{"name":"treeview"},{"name":"treeviewgridlines"}],"output":null}],[11,"set_hadjustment","","Sets the `Adjustment` for the current horizontal aspect.",294,{"inputs":[{"name":"treeview"},{"name":"option"}],"output":null}],[11,"set_headers_clickable","","Allow the column title buttons to be clicked.\n## `setting`\n`true` if the columns are clickable.",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_headers_visible","","Sets the visibility state of the headers.\n## `headers_visible`\n`true` if the headers are visible",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_hover_expand","","Enables or disables the hover expansion mode of `self`.\nHover expansion makes rows expand or collapse if the pointer\nmoves over them.\n## `expand`\n`true` to enable hover selection mode",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_hover_selection","","Enables or disables the hover selection mode of `self`.\nHover selection makes the selected row follow the pointer.\nCurrently, this works only for the selection modes\n`SelectionMode::Single` and `SelectionMode::Browse`.\n## `hover`\n`true` to enable hover selection mode",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_level_indentation","","Sets the amount of extra indentation for child levels to use in `self`\nin addition to the default indentation. The value should be specified in\npixels, a value of 0 disables this feature and in this case only the default\nindentation will be used.\nThis does not have any visible effects for lists.\n## `indentation`\nthe amount, in pixels, of extra indentation in `self`.",294,{"inputs":[{"name":"treeview"},{"name":"i32"}],"output":null}],[11,"set_model","","Sets the model for a `TreeView`. If the `self` already has a model\nset, it will remove it before setting the new model. If `model` is `None`,\nthen it will unset the old model.\n## `model`\nThe model.",294,{"inputs":[{"name":"treeview"},{"name":"option"}],"output":null}],[11,"set_reorderable","","This function is a convenience function to allow you to reorder\nmodels that support the `TreeDragSourceIface` and the\n`TreeDragDestIface`. Both `TreeStore` and `ListStore` support\nthese. If `reorderable` is `true`, then the user can reorder the\nmodel by dragging and dropping rows. The developer can listen to\nthese changes by connecting to the model’s `TreeModel::row-inserted`\nand `TreeModel::row-deleted` signals. The reordering is implemented\nby setting up the tree view as a drag source and destination.\nTherefore, drag and drop can not be used in a reorderable view for any\nother purpose.",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_rubber_banding","","Enables or disables rubber banding in `self`. If the selection mode\nis `SelectionMode::Multiple`, rubber banding will allow the user to select\nmultiple rows by dragging the mouse.\n## `enable`\n`true` to enable rubber banding",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_rules_hint","","Sets a hint for the theme to draw even/odd rows in the `self`\nwith different colors, also known as &quot;zebra striping&quot;.",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_search_column","","Sets `column` as the column where the interactive search code should\nsearch in for the current model.",294,{"inputs":[{"name":"treeview"},{"name":"i32"}],"output":null}],[11,"set_search_entry","","Sets the entry which the interactive search code will use for this\n`self`. This is useful when you want to provide a search entry\nin our interface at all time at a fixed position. Passing `None` for\n`entry` will make the interactive search code use the built-in popup\nentry again.\n## `entry`\nthe entry the interactive search code of `self` should use or `None`",294,{"inputs":[{"name":"treeview"},{"name":"option"}],"output":null}],[11,"set_show_expanders","","Sets whether to draw and enable expanders and indent child rows in\n`self`. When disabled there will be no expanders visible in trees\nand there will be no way to expand and collapse rows by default. Also\nnote that hiding the expanders will disable the default indentation. You\ncan set a custom indentation in this case using\n`TreeView::set_level_indentation`.\nThis does not have any visible effects for lists.\n## `enabled`\n`true` to enable expander drawing, `false` otherwise.",294,{"inputs":[{"name":"treeview"},{"name":"bool"}],"output":null}],[11,"set_tooltip_column","","If you only plan to have simple (text-only) tooltips on full rows, you\ncan use this function to have `TreeView` handle these automatically\nfor you. `column` should be set to the column in `self`’s model\ncontaining the tooltip texts, or -1 to disable this feature.",294,{"inputs":[{"name":"treeview"},{"name":"i32"}],"output":null}],[11,"set_vadjustment","","Sets the `Adjustment` for the current vertical aspect.",294,{"inputs":[{"name":"treeview"},{"name":"option"}],"output":null}],[11,"unset_rows_drag_dest","","Undoes the effect of\n`TreeView::enable_model_drag_dest`. Calling this method sets\n`TreeView:reorderable` to `false`.",294,{"inputs":[{"name":"treeview"}],"output":null}],[11,"unset_rows_drag_source","","Undoes the effect of\n`TreeView::enable_model_drag_source`. Calling this method sets\n`TreeView:reorderable` to `false`.",294,{"inputs":[{"name":"treeview"}],"output":null}],[11,"hash","","",295,null],[11,"fmt","","",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"treeviewcolumn"}}],[11,"static_type","","",295,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `TreeViewColumn`.",295,{"inputs":[],"output":{"name":"treeviewcolumn"}}],[11,"new_with_area","","Creates a new `TreeViewColumn` using `area` to render its cells.\n## `area`\nthe `CellArea` that the newly created column should use to layout cells.",295,{"inputs":[{"name":"t"}],"output":{"name":"treeviewcolumn"}}],[11,"add_attribute","","Adds an attribute mapping to the list in `self`. The `column` is the\ncolumn of the model to get a value from, and the `attribute` is the\nparameter on `cell_renderer` to be set from the value. So for example\nif column 2 of the model contains strings, you could have the\n“text” attribute of a `CellRendererText` get its values from\ncolumn 2.\n## `cell_renderer`\nthe `CellRenderer` to set attributes on\n## `attribute`\nAn attribute on the renderer\n## `column`\nThe column position on the model to get the attribute from.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"},{"name":"str"},{"name":"i32"}],"output":null}],[11,"cell_get_position","","Obtains the horizontal position and size of a cell in a column. If the\ncell is not found in the column, `start_pos` and `width` are not changed and\n`false` is returned.\n## `cell_renderer`\na `CellRenderer`\n## `x_offset`\nreturn location for the horizontal\n position of `cell` within `self`, may be `None`\n## `width`\nreturn location for the width of `cell`,\n may be `None`",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"}],"output":{"name":"option"}}],[11,"cell_get_size","","Obtains the width and height needed to render the column. This is used\nprimarily by the `TreeView`.\n## `cell_area`\nThe area a cell in the column will be allocated, or `None`\n## `x_offset`\nlocation to return x offset of a cell relative to `cell_area`, or `None`\n## `y_offset`\nlocation to return y offset of a cell relative to `cell_area`, or `None`\n## `width`\nlocation to return width needed to render a cell, or `None`\n## `height`\nlocation to return height needed to render a cell, or `None`",295,null],[11,"cell_is_visible","","Returns `true` if any of the cells packed into the `self` are visible.\nFor this to be meaningful, you must first initialize the cells with\n`TreeViewColumn::cell_set_cell_data`",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"bool"}}],[11,"cell_set_cell_data","","Sets the cell renderer based on the `tree_model` and `iter`. That is, for\nevery attribute mapping in `self`, it will get a value from the set\ncolumn on the `iter`, and use that value to set the attribute on the cell\nrenderer. This is used primarily by the `TreeView`.\n## `tree_model`\nThe `TreeModel` to to get the cell renderers attributes from.\n## `iter`\nThe `TreeIter` to to get the cell renderer’s attributes from.\n## `is_expander`\n`true`, if the row has children\n## `is_expanded`\n`true`, if the row has visible children",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"},{"name":"treeiter"},{"name":"bool"},{"name":"bool"}],"output":null}],[11,"clear","","Unsets all the mappings on all renderers on the `self`.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":null}],[11,"clear_attributes","","Clears all existing attributes previously set with\n`TreeViewColumn::set_attributes`.\n## `cell_renderer`\na `CellRenderer` to clear the attribute mapping on.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"}],"output":null}],[11,"clicked","","Emits the “clicked” signal on the column. This function will only work if\n`self` is clickable.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":null}],[11,"focus_cell","","Sets the current keyboard focus to be at `cell`, if the column contains\n2 or more editable and activatable cells.\n## `cell`\nA `CellRenderer`",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"}],"output":null}],[11,"get_alignment","","Returns the current x alignment of `self`. This value can range\nbetween 0.0 and 1.0.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"f32"}}],[11,"get_button","","Returns the button used in the treeview column header",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"option"}}],[11,"get_clickable","","Returns `true` if the user can click on the header for the column.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"bool"}}],[11,"get_expand","","Returns `true` if the column expands to fill available space.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"bool"}}],[11,"get_fixed_width","","Gets the fixed width of the column. This may not be the actual displayed\nwidth of the column; for that, use `TreeViewColumn::get_width`.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"get_max_width","","Returns the maximum width in pixels of the `self`, or -1 if no maximum\nwidth is set.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"get_min_width","","Returns the minimum width in pixels of the `self`, or -1 if no minimum\nwidth is set.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"get_reorderable","","Returns `true` if the `self` can be reordered by the user.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"bool"}}],[11,"get_resizable","","Returns `true` if the `self` can be resized by the end user.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"bool"}}],[11,"get_sizing","","Returns the current type of `self`.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"treeviewcolumnsizing"}}],[11,"get_sort_column_id","","Gets the logical `sort_column_id` that the model sorts on when this\ncolumn is selected for sorting.\nSee `TreeViewColumn::set_sort_column_id`.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"get_sort_indicator","","Gets the value set by `TreeViewColumn::set_sort_indicator`.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"bool"}}],[11,"get_sort_order","","Gets the value set by `TreeViewColumn::set_sort_order`.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"sorttype"}}],[11,"get_spacing","","Returns the spacing of `self`.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"get_title","","Returns the title of the widget.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"option"}}],[11,"get_tree_view","","Returns the `TreeView` wherein `self` has been inserted.\nIf `column` is currently not inserted in any tree view, `None` is\nreturned.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"option"}}],[11,"get_visible","","Returns `true` if `self` is visible.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"bool"}}],[11,"get_widget","","Returns the `Widget` in the button on the column header.\nIf a custom widget has not been set then `None` is returned.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"option"}}],[11,"get_width","","Returns the current size of `self` in pixels.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"get_x_offset","","Returns the current X offset of `self` in pixels.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":{"name":"i32"}}],[11,"pack_end","","Adds the `cell` to end of the column. If `expand` is `false`, then the `cell`\nis allocated no more space than it needs. Any unused space is divided\nevenly between cells for which `expand` is `true`.\n## `cell`\nThe `CellRenderer`.\n## `expand`\n`true` if `cell` is to be given extra space allocated to `self`.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"},{"name":"bool"}],"output":null}],[11,"pack_start","","Packs the `cell` into the beginning of the column. If `expand` is `false`, then\nthe `cell` is allocated no more space than it needs. Any unused space is divided\nevenly between cells for which `expand` is `true`.\n## `cell`\nThe `CellRenderer`.\n## `expand`\n`true` if `cell` is to be given extra space allocated to `self`.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"t"},{"name":"bool"}],"output":null}],[11,"queue_resize","","Flags the column, and the cell renderers added to this column, to have\ntheir sizes renegotiated.",295,{"inputs":[{"name":"treeviewcolumn"}],"output":null}],[11,"set_alignment","","Sets the alignment of the title or custom widget inside the column header.\nThe alignment determines its location inside the button -- 0.0 for left, 0.5\nfor center, 1.0 for right.\n## `xalign`\nThe alignment, which is between [0.0 and 1.0] inclusive.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"f32"}],"output":null}],[11,"set_clickable","","Sets the header to be active if `clickable` is `true`. When the header is\nactive, then it can take keyboard focus, and can be clicked.\n## `clickable`\n`true` if the header is active.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"bool"}],"output":null}],[11,"set_expand","","Sets the column to take available extra space. This space is shared equally\namongst all columns that have the expand set to `true`. If no column has this\noption set, then the last column gets all extra space. By default, every\ncolumn is created with this `false`.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"bool"}],"output":null}],[11,"set_fixed_width","","If `fixed_width` is not -1, sets the fixed width of `self`; otherwise\nunsets it. The effective value of `fixed_width` is clamped between the\nminumum and maximum width of the column; however, the value stored in the\n“fixed-width” property is not clamped. If the column sizing is\n`TreeViewColumnSizing::GrowOnly` or `TreeViewColumnSizing::Autosize`, setting a\nfixed width overrides the automatically calculated width. Note that\n`fixed_width` is only a hint to GTK+; the width actually allocated to the\ncolumn may be greater or less than requested.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"i32"}],"output":null}],[11,"set_max_width","","Sets the maximum width of the `self`. If `max_width` is -1, then the\nmaximum width is unset. Note, the column can actually be wider than max\nwidth if it’s the last column in a view. In this case, the column expands to\nfill any extra space.\n## `max_width`\nThe maximum width of the column in pixels, or -1.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"i32"}],"output":null}],[11,"set_min_width","","Sets the minimum width of the `self`. If `min_width` is -1, then the\nminimum width is unset.\n## `min_width`\nThe minimum width of the column in pixels, or -1.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"i32"}],"output":null}],[11,"set_reorderable","","If `reorderable` is `true`, then the column can be reordered by the end user\ndragging the header.\n## `reorderable`\n`true`, if the column can be reordered.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"bool"}],"output":null}],[11,"set_resizable","","If `resizable` is `true`, then the user can explicitly resize the column by\ngrabbing the outer edge of the column button. If resizable is `true` and\nsizing mode of the column is `TreeViewColumnSizing::Autosize`, then the sizing\nmode is changed to `TreeViewColumnSizing::GrowOnly`.\n## `resizable`\n`true`, if the column can be resized",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"bool"}],"output":null}],[11,"set_sizing","","Sets the growth behavior of `self` to `type_`.\n## `type_`\nThe `TreeViewColumnSizing`.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"treeviewcolumnsizing"}],"output":null}],[11,"set_sort_column_id","","Sets the logical `sort_column_id` that this column sorts on when this column\nis selected for sorting. Doing so makes the column header clickable.\n## `sort_column_id`\nThe `sort_column_id` of the model to sort on.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"i32"}],"output":null}],[11,"set_sort_indicator","","Call this function with a `setting` of `true` to display an arrow in\nthe header button indicating the column is sorted. Call\n`TreeViewColumn::set_sort_order` to change the direction of\nthe arrow.\n## `setting`\n`true` to display an indicator that the column is sorted",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"bool"}],"output":null}],[11,"set_sort_order","","Changes the appearance of the sort indicator.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"sorttype"}],"output":null}],[11,"set_spacing","","Sets the spacing field of `self`, which is the number of pixels to\nplace between cell renderers packed into it.\n## `spacing`\ndistance between cell renderers in pixels.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"i32"}],"output":null}],[11,"set_title","","Sets the title of the `self`. If a custom widget has been set, then\nthis value is ignored.\n## `title`\nThe title of the `self`.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"str"}],"output":null}],[11,"set_visible","","Sets the visibility of `self`.\n## `visible`\n`true` if the `self` is visible.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"bool"}],"output":null}],[11,"set_widget","","Sets the widget in the header to be `widget`. If widget is `None`, then the\nheader button is set with a `Label` set to the title of `self`.\n## `widget`\nA child `Widget`, or `None`.",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"option"}],"output":null}],[11,"hash","","",296,null],[11,"fmt","","",296,{"inputs":[{"name":"viewport"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",296,{"inputs":[{"name":"viewport"}],"output":{"name":"viewport"}}],[11,"static_type","","",296,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",296,{"inputs":[{"name":"viewport"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Viewport` with the given adjustments, or with default\nadjustments if none are given.\n## `hadjustment`\nhorizontal adjustment\n## `vadjustment`\nvertical adjustment",296,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"viewport"}}],[11,"get_bin_window","","Gets the bin window of the `Viewport`.",296,{"inputs":[{"name":"viewport"}],"output":{"name":"option"}}],[11,"get_hadjustment","","Returns the horizontal adjustment of the viewport.",296,{"inputs":[{"name":"viewport"}],"output":{"name":"option"}}],[11,"get_shadow_type","","Gets the shadow type of the `Viewport`. See\n`Viewport::set_shadow_type`.",296,{"inputs":[{"name":"viewport"}],"output":{"name":"shadowtype"}}],[11,"get_vadjustment","","Returns the vertical adjustment of the viewport.",296,{"inputs":[{"name":"viewport"}],"output":{"name":"option"}}],[11,"get_view_window","","Gets the view window of the `Viewport`.",296,{"inputs":[{"name":"viewport"}],"output":{"name":"option"}}],[11,"set_hadjustment","","Sets the horizontal adjustment of the viewport.",296,{"inputs":[{"name":"viewport"},{"name":"option"}],"output":null}],[11,"set_shadow_type","","Sets the shadow type of the viewport.\n## `type_`\nthe new shadow type.",296,{"inputs":[{"name":"viewport"},{"name":"shadowtype"}],"output":null}],[11,"set_vadjustment","","Sets the vertical adjustment of the viewport.",296,{"inputs":[{"name":"viewport"},{"name":"option"}],"output":null}],[11,"hash","","",297,null],[11,"fmt","","",297,{"inputs":[{"name":"volumebutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",297,{"inputs":[{"name":"volumebutton"}],"output":{"name":"volumebutton"}}],[11,"static_type","","",297,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",297,{"inputs":[{"name":"volumebutton"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a `VolumeButton`, with a range between 0.0 and 1.0, with\na stepping of 0.02. Volume values can be obtained and modified using\nthe functions from `ScaleButton`.",297,{"inputs":[],"output":{"name":"volumebutton"}}],[11,"hash","","",298,null],[11,"fmt","","",298,{"inputs":[{"name":"widget"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",298,{"inputs":[{"name":"widget"}],"output":{"name":"widget"}}],[11,"static_type","","",298,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",298,{"inputs":[{"name":"widget"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_default_direction","","Obtains the current default reading direction. See\n`Widget::set_default_direction`.",298,{"inputs":[],"output":{"name":"textdirection"}}],[11,"pop_composite_child","","Cancels the effect of a previous call to `Widget::push_composite_child`.",298,{"inputs":[],"output":null}],[11,"push_composite_child","","Makes all newly-created widgets as composite children until\nthe corresponding `Widget::pop_composite_child` call.",298,{"inputs":[],"output":null}],[11,"set_default_direction","","Sets the default reading direction for widgets where the\ndirection has not been explicitly set by `WidgetExt::set_direction`.\n## `dir`\nthe new default direction. This cannot be\n `TextDirection::None`.",298,{"inputs":[{"name":"textdirection"}],"output":null}],[11,"hash","","",299,null],[11,"fmt","","",299,{"inputs":[{"name":"window"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",299,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"static_type","","",299,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",299,{"inputs":[{"name":"window"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Window`, which is a toplevel window that can\ncontain other widgets. Nearly always, the type of the window should\nbe `WindowType::Toplevel`. If you’re implementing something like a\npopup menu from scratch (which is a bad idea, just use `Menu`),\nyou might use `WindowType::Popup`. `WindowType::Popup` is not for\ndialogs, though in some other toolkits dialogs are called “popups”.\nIn GTK+, `WindowType::Popup` means a pop-up menu or pop-up tooltip.\nOn X11, popup windows are not controlled by the\n[window manager][gtk-X11-arch].",299,{"inputs":[{"name":"windowtype"}],"output":{"name":"window"}}],[11,"get_default_icon_list","","Gets the value set by `Window::set_default_icon_list`.\nThe list is a copy and should be freed with `glib::List::free`,\nbut the pixbufs in the list have not had their reference count\nincremented.",299,{"inputs":[],"output":{"name":"vec"}}],[11,"get_default_icon_name","","Returns the fallback icon name for windows that has been set\nwith `Window::set_default_icon_name`. The returned\nstring is owned by GTK+ and should not be modified. It\nis only valid until the next call to\n`Window::set_default_icon_name`.",299,{"inputs":[],"output":{"name":"option"}}],[11,"list_toplevels","","Returns a list of all existing toplevel windows. The widgets\nin the list are not individually referenced. If you want\nto iterate through the list and perform actions involving\ncallbacks that might destroy the widgets, you must call\n`g_list_foreach (result, (GFunc)g_object_ref, NULL)` first, and\nthen unref all the widgets afterwards.",299,{"inputs":[],"output":{"name":"vec"}}],[11,"set_auto_startup_notification","","By default, after showing the first `Window`, GTK+ calls\n`gdk_notify_startup_complete`. Call this function to disable\nthe automatic startup notification. You might do this if your\nfirst window is a splash screen, and you want to delay notification\nuntil after your real main window has been shown, for example.",299,{"inputs":[{"name":"bool"}],"output":null}],[11,"set_default_icon","","Sets an icon to be used as fallback for windows that haven&#39;t\nhad `WindowExt::set_icon` called on them from a pixbuf.\n## `icon`\nthe icon",299,{"inputs":[{"name":"pixbuf"}],"output":null}],[11,"set_default_icon_from_file","","Sets an icon to be used as fallback for windows that haven&#39;t\nhad `WindowExt::set_icon_list` called on them from a file\non disk. Warns on failure if `err` is `None`.\n## `filename`\nlocation of icon file",299,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"set_default_icon_list","","",299,null],[11,"set_default_icon_name","","",299,{"inputs":[{"name":"str"}],"output":null}],[11,"set_interactive_debugging","","",299,{"inputs":[{"name":"bool"}],"output":null}],[11,"fmt","","",300,{"inputs":[{"name":"papersize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",300,{"inputs":[{"name":"papersize"}],"output":{"name":"papersize"}}],[11,"new","","Creates a new `PaperSize` object by parsing a\n[PWG 5101.1-2002](ftp://ftp.pwg.org/pub/pwg/candidates/cs-pwgmsn10-20020226-5101.1.pdf)\npaper name.",300,{"inputs":[{"name":"option"}],"output":{"name":"papersize"}}],[11,"new_custom","","Creates a new `PaperSize` object with the\ngiven parameters.\n## `name`\nthe paper name\n## `display_name`\nthe human-readable name\n## `width`\nthe paper width, in units of `unit`\n## `height`\nthe paper height, in units of `unit`\n## `unit`\nthe unit for `width` and `height`. not `Unit::None`.",300,{"inputs":[{"name":"str"},{"name":"str"},{"name":"f64"},{"name":"f64"},{"name":"unit"}],"output":{"name":"papersize"}}],[11,"new_from_ipp","","Creates a new `PaperSize` object by using\nIPP information.",300,{"inputs":[{"name":"str"},{"name":"f64"},{"name":"f64"}],"output":{"name":"papersize"}}],[11,"new_from_ppd","","Creates a new `PaperSize` object by using\nPPD information.",300,{"inputs":[{"name":"str"},{"name":"str"},{"name":"f64"},{"name":"f64"}],"output":{"name":"papersize"}}],[11,"get_default_bottom_margin","","Gets the default bottom margin for the `PaperSize`.\n## `unit`\nthe unit for the return value, not `Unit::None`",300,{"inputs":[{"name":"papersize"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_default_left_margin","","Gets the default left margin for the `PaperSize`.\n## `unit`\nthe unit for the return value, not `Unit::None`",300,{"inputs":[{"name":"papersize"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_default_right_margin","","Gets the default right margin for the `PaperSize`.\n## `unit`\nthe unit for the return value, not `Unit::None`",300,{"inputs":[{"name":"papersize"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_default_top_margin","","Gets the default top margin for the `PaperSize`.\n## `unit`\nthe unit for the return value, not `Unit::None`",300,{"inputs":[{"name":"papersize"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_display_name","","Gets the human-readable name of the `PaperSize`.",300,{"inputs":[{"name":"papersize"}],"output":{"name":"option"}}],[11,"get_height","","Gets the paper height of the `PaperSize`, in\nunits of `unit`.\n## `unit`\nthe unit for the return value, not `Unit::None`",300,{"inputs":[{"name":"papersize"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"get_name","","Gets the name of the `PaperSize`.",300,{"inputs":[{"name":"papersize"}],"output":{"name":"option"}}],[11,"get_ppd_name","","Gets the PPD name of the `PaperSize`, which\nmay be `None`.",300,{"inputs":[{"name":"papersize"}],"output":{"name":"option"}}],[11,"get_width","","Gets the paper width of the `PaperSize`, in\nunits of `unit`.\n## `unit`\nthe unit for the return value, not `Unit::None`",300,{"inputs":[{"name":"papersize"},{"name":"unit"}],"output":{"name":"f64"}}],[11,"is_custom","","Returns `true` if `self` is not a standard paper size.",300,{"inputs":[{"name":"papersize"}],"output":{"name":"bool"}}],[11,"is_ipp","","Returns `true` if `self` is an IPP standard paper size.",300,{"inputs":[{"name":"papersize"}],"output":{"name":"bool"}}],[11,"set_size","","Changes the dimensions of a `self` to `width` x `height`.\n## `width`\nthe new width in units of `unit`\n## `height`\nthe new height in units of `unit`\n## `unit`\nthe unit for `width` and `height`",300,{"inputs":[{"name":"papersize"},{"name":"f64"},{"name":"f64"},{"name":"unit"}],"output":null}],[11,"get_default","","Returns the name of the default paper size, which\ndepends on the current locale.",300,{"inputs":[],"output":{"name":"option"}}],[11,"get_paper_sizes","","Creates a list of known paper sizes.\n## `include_custom`\nwhether to include custom paper sizes\n as defined in the page setup dialog",300,{"inputs":[{"name":"bool"}],"output":{"name":"vec"}}],[11,"eq","","",300,{"inputs":[{"name":"papersize"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",301,{"inputs":[{"name":"textiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",301,{"inputs":[{"name":"textiter"}],"output":{"name":"textiter"}}],[11,"assign","","Assigns the value of `other` to `self`. This function\nis not useful in applications, because iterators can be assigned\nwith `GtkTextIter i = j;`. The\nfunction is used by language bindings.\n## `other`\nanother `TextIter`",301,{"inputs":[{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"backward_char","","Moves backward by one character offset. Returns `true` if movement\nwas possible; if `self` was the first in the buffer (character\noffset 0), `TextIter::backward_char` returns `false` for convenience when\nwriting loops.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_chars","","Moves `count` characters backward, if possible (if `count` would move\npast the start or end of the buffer, moves to the start or end of\nthe buffer). The return value indicates whether the iterator moved\nonto a dereferenceable position; if the iterator didn’t move, or\nmoved onto the end iterator, then `false` is returned. If `count` is 0,\nthe function does nothing and returns `false`.\n## `count`\nnumber of characters to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_cursor_position","","Like `TextIter::forward_cursor_position`, but moves backward.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_cursor_positions","","Moves up to `count` cursor positions. See\n`TextIter::forward_cursor_position` for details.\n## `count`\nnumber of positions to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_line","","Moves `self` to the start of the previous line. Returns `true` if\n`self` could be moved; i.e. if `self` was at character offset 0, this\nfunction returns `false`. Therefore if `self` was already on line 0,\nbut not at the start of the line, `self` is snapped to the start of\nthe line and the function returns `true`. (Note that this implies that\nin a loop calling this function, the line number may not change on\nevery iteration, if your first iteration is on line 0.)",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_lines","","Moves `count` lines backward, if possible (if `count` would move\npast the start or end of the buffer, moves to the start or end of\nthe buffer). The return value indicates whether the iterator moved\nonto a dereferenceable position; if the iterator didn’t move, or\nmoved onto the end iterator, then `false` is returned. If `count` is 0,\nthe function does nothing and returns `false`. If `count` is negative,\nmoves forward by 0 - `count` lines.\n## `count`\nnumber of lines to move backward",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_search","","Same as `TextIter::forward_search`, but moves backward.",301,{"inputs":[{"name":"textiter"},{"name":"str"},{"name":"textsearchflags"},{"name":"option"}],"output":{"name":"option"}}],[11,"backward_sentence_start","","Moves backward to the previous sentence start; if `self` is already at\nthe start of a sentence, moves backward to the next one. Sentence\nboundaries are determined by Pango and should be correct for nearly\nany language (if not, the correct fix would be to the Pango text\nboundary algorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_sentence_starts","","Calls `TextIter::backward_sentence_start` up to `count` times,\nor until it returns `false`. If `count` is negative, moves forward\ninstead of backward.\n## `count`\nnumber of sentences to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_to_tag_toggle","","Moves backward to the next toggle (on or off) of the\n`TextTag` `tag`, or to the next toggle of any tag if\n`tag` is `None`. If no matching tag toggles are found,\nreturns `false`, otherwise `true`. Does not return toggles\nlocated at `self`, only toggles before `self`. Sets `self`\nto the location of the toggle, or the start of the buffer\nif no toggle is found.\n## `tag`\na `TextTag`, or `None`",301,{"inputs":[{"name":"textiter"},{"name":"option"}],"output":{"name":"bool"}}],[11,"backward_visible_cursor_position","","Moves `self` forward to the previous visible cursor position. See\n`TextIter::backward_cursor_position` for details.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_visible_cursor_positions","","Moves up to `count` visible cursor positions. See\n`TextIter::backward_cursor_position` for details.\n## `count`\nnumber of positions to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_visible_line","","Moves `self` to the start of the previous visible line. Returns `true` if\n`self` could be moved; i.e. if `self` was at character offset 0, this\nfunction returns `false`. Therefore if `self` was already on line 0,\nbut not at the start of the line, `self` is snapped to the start of\nthe line and the function returns `true`. (Note that this implies that\nin a loop calling this function, the line number may not change on\nevery iteration, if your first iteration is on line 0.)",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_visible_lines","","Moves `count` visible lines backward, if possible (if `count` would move\npast the start or end of the buffer, moves to the start or end of\nthe buffer). The return value indicates whether the iterator moved\nonto a dereferenceable position; if the iterator didn’t move, or\nmoved onto the end iterator, then `false` is returned. If `count` is 0,\nthe function does nothing and returns `false`. If `count` is negative,\nmoves forward by 0 - `count` lines.\n## `count`\nnumber of lines to move backward",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_visible_word_start","","Moves backward to the previous visible word start. (If `self` is currently\non a word start, moves backward to the next one after that.) Word breaks\nare determined by Pango and should be correct for nearly any\nlanguage (if not, the correct fix would be to the Pango word break\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_visible_word_starts","","Calls `TextIter::backward_visible_word_start` up to `count` times.\n## `count`\nnumber of times to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"backward_word_start","","Moves backward to the previous word start. (If `self` is currently on a\nword start, moves backward to the next one after that.) Word breaks\nare determined by Pango and should be correct for nearly any\nlanguage (if not, the correct fix would be to the Pango word break\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"backward_word_starts","","Calls `TextIter::backward_word_start` up to `count` times.\n## `count`\nnumber of times to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"begins_tag","","Returns `true` if `tag` is toggled on at exactly this point. If `tag`\nis `None`, returns `true` if any tag is toggled on at this point.",301,{"inputs":[{"name":"textiter"},{"name":"option"}],"output":{"name":"bool"}}],[11,"can_insert","","Considering the default editability of the buffer, and tags that\naffect editability, determines whether text inserted at `self` would\nbe editable. If text inserted at `self` would be editable then the\nuser should be allowed to insert text at `self`.\n`TextBuffer::insert_interactive` uses this function to decide\nwhether insertions are allowed at a given position.\n## `default_editability`\n`true` if text is editable by default",301,{"inputs":[{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"editable","","Returns whether the character at `self` is within an editable region\nof text. Non-editable text is “locked” and can’t be changed by the\nuser via `TextView`. This function is simply a convenience\nwrapper around `TextIter::get_attributes`. If no tags applied\nto this text affect editability, `default_setting` will be returned.",301,{"inputs":[{"name":"textiter"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"ends_line","","Returns `true` if `self` points to the start of the paragraph\ndelimiter characters for a line (delimiters will be either a\nnewline, a carriage return, a carriage return followed by a\nnewline, or a Unicode paragraph separator character). Note that an\niterator pointing to the \\n of a \\r\\n pair will not be counted as\nthe end of a line, the line ends before the \\r. The end iterator is\nconsidered to be at the end of a line, even though there are no\nparagraph delimiter chars there.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"ends_sentence","","Determines whether `self` ends a sentence. Sentence boundaries are\ndetermined by Pango and should be correct for nearly any language\n(if not, the correct fix would be to the Pango text boundary\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"ends_tag","","Returns `true` if `tag` is toggled off at exactly this point. If `tag`\nis `None`, returns `true` if any tag is toggled off at this point.",301,{"inputs":[{"name":"textiter"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ends_word","","Determines whether `self` ends a natural-language word. Word breaks\nare determined by Pango and should be correct for nearly any\nlanguage (if not, the correct fix would be to the Pango word break\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_char","","Moves `self` forward by one character offset. Note that images\nembedded in the buffer occupy 1 character slot, so\n`TextIter::forward_char` may actually move onto an image instead\nof a character, if you have images in your buffer. If `self` is the\nend iterator or one character before it, `self` will now point at\nthe end iterator, and `TextIter::forward_char` returns `false` for\nconvenience when writing loops.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_chars","","Moves `count` characters if possible (if `count` would move past the\nstart or end of the buffer, moves to the start or end of the\nbuffer). The return value indicates whether the new position of\n`self` is different from its original position, and dereferenceable\n(the last iterator in the buffer is not dereferenceable). If `count`\nis 0, the function does nothing and returns `false`.\n## `count`\nnumber of characters to move, may be negative",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_cursor_position","","Moves `self` forward by a single cursor position. Cursor positions\nare (unsurprisingly) positions where the cursor can appear. Perhaps\nsurprisingly, there may not be a cursor position between all\ncharacters. The most common example for European languages would be\na carriage return/newline sequence. For some Unicode characters,\nthe equivalent of say the letter “a” with an accent mark will be\nrepresented as two characters, first the letter then a &quot;combining\nmark&quot; that causes the accent to be rendered; so the cursor can’t go\nbetween those two characters. See also the `pango::LogAttr`-struct and\n`pango_break` function.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_cursor_positions","","Moves up to `count` cursor positions. See\n`TextIter::forward_cursor_position` for details.\n## `count`\nnumber of positions to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_line","","Moves `self` to the start of the next line. If the iter is already on the\nlast line of the buffer, moves the iter to the end of the current line.\nIf after the operation, the iter is at the end of the buffer and not\ndereferencable, returns `false`. Otherwise, returns `true`.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_lines","","Moves `count` lines forward, if possible (if `count` would move\npast the start or end of the buffer, moves to the start or end of\nthe buffer). The return value indicates whether the iterator moved\nonto a dereferenceable position; if the iterator didn’t move, or\nmoved onto the end iterator, then `false` is returned. If `count` is 0,\nthe function does nothing and returns `false`. If `count` is negative,\nmoves backward by 0 - `count` lines.\n## `count`\nnumber of lines to move forward",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_search","","Searches forward for `str`. Any match is returned by setting\n`match_start` to the first character of the match and `match_end` to the\nfirst character after the match. The search will not continue past\n`limit`. Note that a search is a linear or O(n) operation, so you\nmay wish to use `limit` to avoid locking up your UI on large\nbuffers.",301,{"inputs":[{"name":"textiter"},{"name":"str"},{"name":"textsearchflags"},{"name":"option"}],"output":{"name":"option"}}],[11,"forward_sentence_end","","Moves forward to the next sentence end. (If `self` is at the end of\na sentence, moves to the next end of sentence.) Sentence\nboundaries are determined by Pango and should be correct for nearly\nany language (if not, the correct fix would be to the Pango text\nboundary algorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_sentence_ends","","Calls `TextIter::forward_sentence_end` `count` times (or until\n`TextIter::forward_sentence_end` returns `false`). If `count` is\nnegative, moves backward instead of forward.\n## `count`\nnumber of sentences to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_to_end","","Moves `self` forward to the “end iterator,” which points one past the last\nvalid character in the buffer. `TextIter::get_char` called on the\nend iterator returns 0, which is convenient for writing loops.",301,{"inputs":[{"name":"textiter"}],"output":null}],[11,"forward_to_line_end","","Moves the iterator to point to the paragraph delimiter characters,\nwhich will be either a newline, a carriage return, a carriage\nreturn/newline in sequence, or the Unicode paragraph separator\ncharacter. If the iterator is already at the paragraph delimiter\ncharacters, moves to the paragraph delimiter characters for the\nnext line. If `self` is on the last line in the buffer, which does\nnot end in paragraph delimiters, moves to the end iterator (end of\nthe last line), and returns `false`.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_to_tag_toggle","","Moves forward to the next toggle (on or off) of the\n`TextTag` `tag`, or to the next toggle of any tag if\n`tag` is `None`. If no matching tag toggles are found,\nreturns `false`, otherwise `true`. Does not return toggles\nlocated at `self`, only toggles after `self`. Sets `self` to\nthe location of the toggle, or to the end of the buffer\nif no toggle is found.\n## `tag`\na `TextTag`, or `None`",301,{"inputs":[{"name":"textiter"},{"name":"option"}],"output":{"name":"bool"}}],[11,"forward_visible_cursor_position","","Moves `self` forward to the next visible cursor position. See\n`TextIter::forward_cursor_position` for details.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_visible_cursor_positions","","Moves up to `count` visible cursor positions. See\n`TextIter::forward_cursor_position` for details.\n## `count`\nnumber of positions to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_visible_line","","Moves `self` to the start of the next visible line. Returns `true` if there\nwas a next line to move to, and `false` if `self` was simply moved to\nthe end of the buffer and is now not dereferenceable, or if `self` was\nalready at the end of the buffer.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_visible_lines","","Moves `count` visible lines forward, if possible (if `count` would move\npast the start or end of the buffer, moves to the start or end of\nthe buffer). The return value indicates whether the iterator moved\nonto a dereferenceable position; if the iterator didn’t move, or\nmoved onto the end iterator, then `false` is returned. If `count` is 0,\nthe function does nothing and returns `false`. If `count` is negative,\nmoves backward by 0 - `count` lines.\n## `count`\nnumber of lines to move forward",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_visible_word_end","","Moves forward to the next visible word end. (If `self` is currently on a\nword end, moves forward to the next one after that.) Word breaks\nare determined by Pango and should be correct for nearly any\nlanguage (if not, the correct fix would be to the Pango word break\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_visible_word_ends","","Calls `TextIter::forward_visible_word_end` up to `count` times.\n## `count`\nnumber of times to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"forward_word_end","","Moves forward to the next word end. (If `self` is currently on a\nword end, moves forward to the next one after that.) Word breaks\nare determined by Pango and should be correct for nearly any\nlanguage (if not, the correct fix would be to the Pango word break\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"forward_word_ends","","Calls `TextIter::forward_word_end` up to `count` times.\n## `count`\nnumber of times to move",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"get_buffer","","Returns the `TextBuffer` this iterator is associated with.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_bytes_in_line","","Returns the number of bytes in the line containing `self`,\nincluding the paragraph delimiters.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_char","","The Unicode character at this iterator is returned. (Equivalent to\noperator* on a C++ iterator.) If the element at this iterator is a\nnon-character element, such as an image embedded in the buffer, the\nUnicode “unknown” character 0xFFFC is returned. If invoked on\nthe end iterator, zero is returned; zero is not a valid Unicode character.\nSo you can write a loop which ends when `TextIter::get_char`\nreturns 0.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_chars_in_line","","Returns the number of characters in the line containing `self`,\nincluding the paragraph delimiters.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_child_anchor","","If the location at `self` contains a child anchor, the\nanchor is returned (with no new reference count added). Otherwise,\n`None` is returned.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_line","","Returns the line number containing the iterator. Lines in\na `TextBuffer` are numbered beginning with 0 for the first\nline in the buffer.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_line_index","","Returns the byte index of the iterator, counting\nfrom the start of a newline-terminated line.\nRemember that `TextBuffer` encodes text in\nUTF-8, and that characters can require a variable\nnumber of bytes to represent.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_line_offset","","Returns the character offset of the iterator,\ncounting from the start of a newline-terminated line.\nThe first character on the line has offset 0.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_marks","","Returns a list of all `TextMark` at this location. Because marks\nare not iterable (they don’t take up any &quot;space&quot; in the buffer,\nthey are just marks in between iterable locations), multiple marks\ncan exist in the same place. The returned list is not in any\nmeaningful order.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"vec"}}],[11,"get_offset","","Returns the character offset of an iterator.\nEach character in a `TextBuffer` has an offset,\nstarting with 0 for the first character in the buffer.\nUse `TextBuffer::get_iter_at_offset` to convert an\noffset back into an iterator.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_pixbuf","","If the element at `self` is a pixbuf, the pixbuf is returned\n(with no new reference count added). Otherwise,\n`None` is returned.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_slice","","Returns the text in the given range. A “slice” is an array of\ncharacters encoded in UTF-8 format, including the Unicode “unknown”\ncharacter 0xFFFC for iterable non-character elements in the buffer,\nsuch as images. Because images are encoded in the slice, byte and\ncharacter offsets in the returned array will correspond to byte\noffsets in the text buffer. Note that 0xFFFC can occur in normal\ntext as well, so it is not a reliable indicator that a pixbuf or\nwidget is in the buffer.\n## `end`\niterator at end of a range",301,{"inputs":[{"name":"textiter"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_tags","","Returns a list of tags that apply to `self`, in ascending order of\npriority (highest-priority tags are last). The `TextTag` in the\nlist don’t have a reference added, but you have to free the list\nitself.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"vec"}}],[11,"get_text","","Returns text in the given range. If the range\ncontains non-text elements such as images, the character and byte\noffsets in the returned string will not correspond to character and\nbyte offsets in the buffer. If you want offsets to correspond, see\n`TextIter::get_slice`.\n## `end`\niterator at end of a range",301,{"inputs":[{"name":"textiter"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_toggled_tags","","Returns a list of `TextTag` that are toggled on or off at this\npoint. (If `toggled_on` is `true`, the list contains tags that are\ntoggled on.) If a tag is toggled on at `self`, then some non-empty\nrange of characters following `self` has that tag applied to it. If\na tag is toggled off, then some non-empty range following `self`\ndoes not have the tag applied to it.\n## `toggled_on`\n`true` to get toggled-on tags",301,{"inputs":[{"name":"textiter"},{"name":"bool"}],"output":{"name":"vec"}}],[11,"get_visible_line_index","","Returns the number of bytes from the start of the\nline to the given `self`, not counting bytes that\nare invisible due to tags with the “invisible” flag\ntoggled on.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_visible_line_offset","","Returns the offset in characters from the start of the\nline to the given `self`, not counting characters that\nare invisible due to tags with the “invisible” flag\ntoggled on.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"i32"}}],[11,"get_visible_slice","","Like `TextIter::get_slice`, but invisible text is not included.\nInvisible text is usually invisible because a `TextTag` with the\n“invisible” attribute turned on has been applied to it.\n## `end`\niterator at end of range",301,{"inputs":[{"name":"textiter"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"get_visible_text","","Like `TextIter::get_text`, but invisible text is not included.\nInvisible text is usually invisible because a `TextTag` with the\n“invisible” attribute turned on has been applied to it.\n## `end`\niterator at end of range",301,{"inputs":[{"name":"textiter"},{"name":"textiter"}],"output":{"name":"option"}}],[11,"has_tag","","Returns `true` if `self` points to a character that is part of a range tagged\nwith `tag`. See also `TextIter::begins_tag` and `TextIter::ends_tag`.\n## `tag`\na `TextTag`",301,{"inputs":[{"name":"textiter"},{"name":"texttag"}],"output":{"name":"bool"}}],[11,"in_range","","Checks whether `self` falls in the range [`start`, `end`).\n`start` and `end` must be in ascending order.\n## `start`\nstart of range\n## `end`\nend of range",301,{"inputs":[{"name":"textiter"},{"name":"textiter"},{"name":"textiter"}],"output":{"name":"bool"}}],[11,"inside_sentence","","Determines whether `self` is inside a sentence (as opposed to in\nbetween two sentences, e.g. after a period and before the first\nletter of the next sentence). Sentence boundaries are determined\nby Pango and should be correct for nearly any language (if not, the\ncorrect fix would be to the Pango text boundary algorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"inside_word","","Determines whether the character pointed by `self` is part of a\nnatural-language word (as opposed to say inside some whitespace). Word\nbreaks are determined by Pango and should be correct for nearly any language\n(if not, the correct fix would be to the Pango word break algorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"is_cursor_position","","See `TextIter::forward_cursor_position` or `pango::LogAttr` or\n`pango_break` for details on what a cursor position is.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"is_end","","Returns `true` if `self` is the end iterator, i.e. one past the last\ndereferenceable iterator in the buffer. `TextIter::is_end` is\nthe most efficient way to check whether an iterator is the end\niterator.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"is_start","","Returns `true` if `self` is the first iterator in the buffer, that is\nif `self` has a character offset of 0.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"order","","Swaps the value of `self` and `second` if `second` comes before\n`self` in the buffer. That is, ensures that `self` and `second` are\nin sequence. Most text buffer functions that take a range call this\nautomatically on your behalf, so there’s no real reason to call it yourself\nin those cases. There are some exceptions, such as `TextIter::in_range`,\nthat expect a pre-sorted range.\n## `second`\nanother `TextIter`",301,{"inputs":[{"name":"textiter"},{"name":"textiter"}],"output":null}],[11,"set_line","","Moves iterator `self` to the start of the line `line_number`. If\n`line_number` is negative or larger than the number of lines in the\nbuffer, moves `self` to the start of the last line in the buffer.\n## `line_number`\nline number (counted from 0)",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":null}],[11,"set_line_index","","Same as `TextIter::set_line_offset`, but works with a\nbyte index. The given byte index must be at\nthe start of a character, it can’t be in the middle of a UTF-8\nencoded character.\n## `byte_on_line`\na byte index relative to the start of `self`’s current line",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":null}],[11,"set_line_offset","","Moves `self` within a line, to a new character\n(not byte) offset. The given character offset must be less than or\nequal to the number of characters in the line; if equal, `self`\nmoves to the start of the next line. See\n`TextIter::set_line_index` if you have a byte index rather than\na character offset.\n## `char_on_line`\na character offset relative to the start of `self`’s current line",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":null}],[11,"set_offset","","Sets `self` to point to `char_offset`. `char_offset` counts from the start\nof the entire text buffer, starting with 0.\n## `char_offset`\na character number",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":null}],[11,"set_visible_line_index","","Like `TextIter::set_line_index`, but the index is in visible\nbytes, i.e. text with a tag making it invisible is not counted\nin the index.\n## `byte_on_line`\na byte index",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":null}],[11,"set_visible_line_offset","","Like `TextIter::set_line_offset`, but the offset is in visible\ncharacters, i.e. text with a tag making it invisible is not\ncounted in the offset.\n## `char_on_line`\na character offset",301,{"inputs":[{"name":"textiter"},{"name":"i32"}],"output":null}],[11,"starts_line","","Returns `true` if `self` begins a paragraph,\ni.e. if `TextIter::get_line_offset` would return 0.\nHowever this function is potentially more efficient than\n`TextIter::get_line_offset` because it doesn’t have to compute\nthe offset, it just has to see whether it’s 0.",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"starts_sentence","","Determines whether `self` begins a sentence. Sentence boundaries are\ndetermined by Pango and should be correct for nearly any language\n(if not, the correct fix would be to the Pango text boundary\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"starts_word","","Determines whether `self` begins a natural-language word. Word\nbreaks are determined by Pango and should be correct for nearly any\nlanguage (if not, the correct fix would be to the Pango word break\nalgorithms).",301,{"inputs":[{"name":"textiter"}],"output":{"name":"bool"}}],[11,"toggles_tag","","This is equivalent to (`TextIter::begins_tag` ||\n`TextIter::ends_tag`), i.e. it tells you whether a range with\n`tag` applied to it begins or ends at `self`.\n## `tag`\na `TextTag`, or `None`",301,{"inputs":[{"name":"textiter"},{"name":"option"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",301,{"inputs":[{"name":"textiter"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",301,{"inputs":[{"name":"textiter"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"eq","","",301,{"inputs":[{"name":"textiter"},{"name":"self"}],"output":{"name":"bool"}}],[11,"fmt","","",302,{"inputs":[{"name":"treeiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",302,{"inputs":[{"name":"treeiter"}],"output":{"name":"treeiter"}}],[11,"fmt","","",303,{"inputs":[{"name":"treepath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",303,{"inputs":[{"name":"treepath"}],"output":{"name":"treepath"}}],[11,"new","","Creates a new `TreePath`-struct.\nThis refers to a row.",303,{"inputs":[],"output":{"name":"treepath"}}],[11,"new_first","","Creates a new `TreePath`-struct.",303,{"inputs":[],"output":{"name":"treepath"}}],[11,"new_from_string","","Creates a new `TreePath`-struct initialized to `path`.",303,{"inputs":[{"name":"str"}],"output":{"name":"treepath"}}],[11,"append_index","","Appends a new index to a path.",303,{"inputs":[{"name":"treepath"},{"name":"i32"}],"output":null}],[11,"down","","Moves `self` to point to the first child of the current path.",303,{"inputs":[{"name":"treepath"}],"output":null}],[11,"get_depth","","Returns the current depth of `self`.",303,{"inputs":[{"name":"treepath"}],"output":{"name":"i32"}}],[11,"is_ancestor","","Returns `true` if `descendant` is a descendant of `self`.\n## `descendant`\nanother `TreePath`-struct",303,{"inputs":[{"name":"treepath"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"is_descendant","","Returns `true` if `self` is a descendant of `ancestor`.\n## `ancestor`\nanother `TreePath`-struct",303,{"inputs":[{"name":"treepath"},{"name":"treepath"}],"output":{"name":"bool"}}],[11,"next","","Moves the `self` to point to the next node at the current depth.",303,{"inputs":[{"name":"treepath"}],"output":null}],[11,"prepend_index","","Prepends a new index to a path.",303,{"inputs":[{"name":"treepath"},{"name":"i32"}],"output":null}],[11,"prev","","Moves the `self` to point to the previous node at the\ncurrent depth, if it exists.",303,{"inputs":[{"name":"treepath"}],"output":{"name":"bool"}}],[11,"up","","Moves the `self` to point to its parent node, if it has a parent.",303,{"inputs":[{"name":"treepath"}],"output":{"name":"bool"}}],[11,"eq","","",303,{"inputs":[{"name":"treepath"},{"name":"self"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",303,{"inputs":[{"name":"treepath"},{"name":"self"}],"output":{"name":"option"}}],[11,"cmp","","",303,{"inputs":[{"name":"treepath"},{"name":"self"}],"output":{"name":"ordering"}}],[11,"fmt","","",303,{"inputs":[{"name":"treepath"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",304,null],[11,"fmt","","",304,{"inputs":[{"name":"appchooser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",304,{"inputs":[{"name":"appchooser"}],"output":{"name":"appchooser"}}],[11,"static_type","","",304,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",304,{"inputs":[{"name":"appchooser"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Application` instance.",157,{"inputs":[{"name":"option"},{"name":"applicationflags"}],"output":{"name":"result"}}],[11,"hash","","",305,null],[11,"fmt","","",305,{"inputs":[{"name":"buildable"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"buildable"}],"output":{"name":"buildable"}}],[11,"static_type","","",305,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",305,{"inputs":[{"name":"buildable"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","","",306,null],[11,"fmt","","",306,{"inputs":[{"name":"builder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",306,{"inputs":[{"name":"builder"}],"output":{"name":"builder"}}],[11,"static_type","","",306,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",306,{"inputs":[{"name":"builder"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new empty builder object.",306,{"inputs":[],"output":{"name":"builder"}}],[11,"new_from_file","","Builds the [`Builder` UI definition][BUILDER-UI]\nin the file `filename`.",306,{"inputs":[{"name":"str"}],"output":{"name":"builder"}}],[11,"new_from_resource","","Builds the [`Builder` UI definition][BUILDER-UI]\nat `resource_path`.",306,{"inputs":[{"name":"str"}],"output":{"name":"builder"}}],[11,"new_from_string","","Builds the user interface described by `string` (in the\n[`Builder` UI definition][BUILDER-UI] format).",306,{"inputs":[{"name":"str"}],"output":{"name":"builder"}}],[11,"get_object","","Gets the object named `name`. Note that this function does not\nincrement the reference count of the returned object.\n## `name`\nname of object to get",306,{"inputs":[{"name":"builder"},{"name":"str"}],"output":{"name":"option"}}],[11,"new_with_color","","Creates a new color button.",182,{"inputs":[{"name":"color"}],"output":{"name":"colorbutton"}}],[11,"new_with_rgba","","Creates a new color button.\n## `rgba`\nA `gdk::RGBA` to set the current color with",182,{"inputs":[{"name":"rgba"}],"output":{"name":"colorbutton"}}],[11,"get_color","","Sets `color` to be the current color in the `ColorButton` widget.",182,{"inputs":[{"name":"colorbutton"}],"output":{"name":"color"}}],[11,"get_rgba","","Sets `rgba` to be the current color in the `ColorButton` widget.",182,{"inputs":[{"name":"colorbutton"}],"output":{"name":"rgba"}}],[11,"set_color","","Sets the current color to be `color`.",182,{"inputs":[{"name":"colorbutton"},{"name":"color"}],"output":null}],[11,"set_rgba","","Sets the current color to be `rgba`.",182,{"inputs":[{"name":"colorbutton"},{"name":"rgba"}],"output":null}],[11,"hash","","",307,null],[11,"fmt","","",307,{"inputs":[{"name":"colorchooser"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",307,{"inputs":[{"name":"colorchooser"}],"output":{"name":"colorchooser"}}],[11,"static_type","","",307,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",307,{"inputs":[{"name":"colorchooser"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_with_buttons","","Creates a new `Dialog` with title `title` (or `None` for the default\ntitle; see `Window::set_title`) and transient parent `parent` (or\n`None` for none; see `Window::set_transient_for`). The `flags`\nargument can be used to make the dialog modal (`DialogFlags::Modal`)\nand/or to have it destroyed along with its transient parent\n(`DialogFlags::DestroyWithParent`). After `flags`, button\ntext/response ID pairs should be listed, with a `None` pointer ending\nthe list. Button text can be arbitrary text. A response ID can be\nany positive number, or one of the values in the `ResponseType`\nenumeration. If the user clicks one of these dialog buttons,\n`Dialog` will emit the `Dialog::response` signal with the corresponding\nresponse ID. If a `Dialog` receives the `Widget::delete-event` signal,\nit will emit ::response with a response ID of `ResponseType::DeleteEvent`.\nHowever, destroying a dialog does not emit the ::response signal;\nso be careful relying on ::response when using the\n`DialogFlags::DestroyWithParent` flag. Buttons are from left to right,\nso the first button in the list will be the leftmost button in the dialog.",189,null],[11,"hash","","",308,null],[11,"fmt","","",308,{"inputs":[{"name":"entrybuffer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",308,{"inputs":[{"name":"entrybuffer"}],"output":{"name":"entrybuffer"}}],[11,"static_type","","",308,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",308,{"inputs":[{"name":"entrybuffer"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Create a new `EntryBuffer` object.",308,{"inputs":[{"name":"option"}],"output":{"name":"entrybuffer"}}],[11,"delete_text","","Deletes a sequence of characters from the buffer. `n_chars` characters are\ndeleted starting at `position`. If `n_chars` is negative, then all characters\nuntil the end of the text are deleted.",308,{"inputs":[{"name":"entrybuffer"},{"name":"u16"},{"name":"option"}],"output":{"name":"u16"}}],[11,"get_bytes","","Retrieves the length in bytes of the buffer.\nSee `EntryBuffer::get_length`.",308,{"inputs":[{"name":"entrybuffer"}],"output":{"name":"u32"}}],[11,"get_length","","Retrieves the length in characters of the buffer.",308,{"inputs":[{"name":"entrybuffer"}],"output":{"name":"u16"}}],[11,"get_max_length","","Retrieves the maximum allowed length of the text in\n`self`. See `EntryBuffer::set_max_length`.",308,{"inputs":[{"name":"entrybuffer"}],"output":{"name":"option"}}],[11,"get_text","","Retrieves the contents of the buffer.",308,{"inputs":[{"name":"entrybuffer"}],"output":{"name":"string"}}],[11,"insert_text","","Inserts `n_chars` characters of `chars` into the contents of the\nbuffer, at position `position`.",308,{"inputs":[{"name":"entrybuffer"},{"name":"u16"},{"name":"str"}],"output":{"name":"u16"}}],[11,"set_max_length","","Sets the maximum allowed length of the contents of the buffer. If\nthe current contents are longer than the given length, then they\nwill be truncated to fit.\n## `max_length`\nthe maximum length of the entry buffer, or 0 for no maximum.\n (other than the maximum length of entries.) The value passed in will\n be clamped to the range 0-65536.",308,{"inputs":[{"name":"entrybuffer"},{"name":"option"}],"output":null}],[11,"set_text","","Sets the text in the buffer.",308,{"inputs":[{"name":"entrybuffer"},{"name":"str"}],"output":null}],[11,"new","","Creates a new `FileChooserDialog`. This function is analogous to\n`Dialog::new_with_buttons`.\n## `title`\nTitle of the dialog, or `None`\n## `parent`\nTransient parent of the dialog, or `None`\n## `action`\nOpen or save mode for the dialog\n## `first_button_text`\nstock ID or text to go in the first button, or `None`",198,{"inputs":[{"name":"option"},{"name":"option"},{"name":"filechooseraction"}],"output":{"name":"filechooserdialog"}}],[11,"new","","Creates a new list store as with `n_columns` columns each of the types passed\nin. Note that only types derived from standard GObject fundamental types\nare supported.",230,null],[11,"insert_with_values","","Creates a new row at `position`. `iter` will be changed to point to this new\nrow. If `position` is -1, or larger than the number of rows in the list, then\nthe new row will be appended to the list. The row will be filled with the\nvalues given to this function.",230,null],[11,"reorder","","Reorders `self` to follow the order indicated by `new_order`. Note that\nthis function only works with unsorted stores.\n## `new_order`\nan array of integers mapping the new\n position of each child to its old position before the re-ordering,\n i.e. `new_order``[newpos] = oldpos`. It must have\n exactly as many items as the list store’s length.",230,null],[11,"set","","Sets the value of one or more cells in the row referenced by `iter`.\nThe variable argument list should contain integer column numbers,\neach column number followed by the value to be set.\nThe list is terminated by a -1. For example, to set column 0 with type\n`G_TYPE_STRING` to “Foo”, you would write `gtk_list_store_set (store, iter,\n0, &quot;Foo&quot;, -1)`.",230,null],[11,"set_value","","Sets the data in the cell specified by `iter` and `column`.\nThe type of `value` must be convertible to the type of the\ncolumn.\n## `iter`\nA valid `TreeIter` for the row being modified\n## `column`\ncolumn number to modify\n## `value`\nnew value for the cell",230,{"inputs":[{"name":"liststore"},{"name":"treeiter"},{"name":"u32"},{"name":"value"}],"output":null}],[11,"new","","Creates a new message dialog, which is a simple dialog with some text\nthe user may want to see. When the user clicks a button a “response”\nsignal is emitted with response IDs from `ResponseType`. See\n`Dialog` for more details.\n## `parent`\ntransient parent, or `None` for none\n## `flags`\nflags\n## `type_`\ntype of message\n## `buttons`\nset of buttons to use\n## `message_format`\n`printf`-style format string, or `None`",236,{"inputs":[{"name":"option"},{"name":"dialogflags"},{"name":"messagetype"},{"name":"buttonstype"},{"name":"str"}],"output":{"name":"messagedialog"}}],[11,"append_page","","Appends a page to `self`.\n## `child`\nthe `Widget` to use as the contents of the page\n## `tab_label`\nthe `Widget` to be used as the label\n for the page, or `None` to use the default label, “page N”",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"}],"output":{"name":"u32"}}],[11,"append_page_menu","","Appends a page to `self`, specifying the widget to use as the\nlabel in the popup menu.\n## `child`\nthe `Widget` to use as the contents of the page\n## `tab_label`\nthe `Widget` to be used as the label\n for the page, or `None` to use the default label, “page N”\n## `menu_label`\nthe widget to use as a label for the\n page-switch menu, if that is enabled. If `None`, and `tab_label`\n is a `Label` or `None`, then the menu label will be a newly\n created label with the same text as `tab_label`; if `tab_label`\n is not a `Label`, `menu_label` must be specified if the\n page-switch menu is to be used.",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[11,"get_current_page","","Returns the page number of the current page.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"option"}}],[11,"get_n_pages","","Gets the number of pages in a notebook.",238,{"inputs":[{"name":"notebook"}],"output":{"name":"u32"}}],[11,"get_nth_page","","Returns the child widget contained in page number `page_num`.\n## `page_num`\nthe index of a page in the notebook, or -1\n to get the last page",238,{"inputs":[{"name":"notebook"},{"name":"option"}],"output":{"name":"option"}}],[11,"insert_page","","Insert a page into `self` at the given position.\n## `child`\nthe `Widget` to use as the contents of the page\n## `tab_label`\nthe `Widget` to be used as the label\n for the page, or `None` to use the default label, “page N”\n## `position`\nthe index (starting at 0) at which to insert the page,\n or -1 to append the page after all other pages",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[11,"insert_page_menu","","Insert a page into `self` at the given position, specifying\nthe widget to use as the label in the popup menu.\n## `child`\nthe `Widget` to use as the contents of the page\n## `tab_label`\nthe `Widget` to be used as the label\n for the page, or `None` to use the default label, “page N”\n## `menu_label`\nthe widget to use as a label for the\n page-switch menu, if that is enabled. If `None`, and `tab_label`\n is a `Label` or `None`, then the menu label will be a newly\n created label with the same text as `tab_label`; if `tab_label`\n is not a `Label`, `menu_label` must be specified if the\n page-switch menu is to be used.\n## `position`\nthe index (starting at 0) at which to insert the page,\n or -1 to append the page after all other pages.",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[11,"page_num","","Finds the index of the page which contains the given child\nwidget.\n## `child`\na `Widget`",238,{"inputs":[{"name":"notebook"},{"name":"t"}],"output":{"name":"option"}}],[11,"prepend_page","","Prepends a page to `self`.\n## `child`\nthe `Widget` to use as the contents of the page\n## `tab_label`\nthe `Widget` to be used as the label\n for the page, or `None` to use the default label, “page N”",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"}],"output":{"name":"u32"}}],[11,"prepend_page_menu","","Prepends a page to `self`, specifying the widget to use as the\nlabel in the popup menu.\n## `child`\nthe `Widget` to use as the contents of the page\n## `tab_label`\nthe `Widget` to be used as the label\n for the page, or `None` to use the default label, “page N”\n## `menu_label`\nthe widget to use as a label for the\n page-switch menu, if that is enabled. If `None`, and `tab_label`\n is a `Label` or `None`, then the menu label will be a newly\n created label with the same text as `tab_label`; if `tab_label`\n is not a `Label`, `menu_label` must be specified if the\n page-switch menu is to be used.",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"},{"name":"option"}],"output":{"name":"u32"}}],[11,"remove_page","","Removes a page from the notebook given its index\nin the notebook.\n## `page_num`\nthe index of a notebook page, starting\n from 0. If -1, the last page will be removed.",238,{"inputs":[{"name":"notebook"},{"name":"option"}],"output":null}],[11,"reorder_child","","Reorders the page containing `child`, so that it appears in position\n`position`. If `position` is greater than or equal to the number of\nchildren in the list or negative, `child` will be moved to the end\nof the list.\n## `child`\nthe child to move\n## `position`\nthe new position, or -1 to move to the end",238,{"inputs":[{"name":"notebook"},{"name":"t"},{"name":"option"}],"output":null}],[11,"set_current_page","","Switches to the page number `page_num`.",238,{"inputs":[{"name":"notebook"},{"name":"option"}],"output":null}],[11,"new","","Creates a new `RecentChooserDialog`. This function is analogous to\n`Dialog::new_with_buttons`.\n## `title`\nTitle of the dialog, or `None`\n## `parent`\nTransient parent of the dialog, or `None`,\n## `first_button_text`\nstock ID or text to go in the first button, or `None`",251,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"recentchooserdialog"}}],[11,"new_for_manager","","Creates a new `RecentChooserDialog` with a specified recent manager.",251,{"inputs":[{"name":"option"},{"name":"option"},{"name":"recentmanager"}],"output":{"name":"recentchooserdialog"}}],[11,"hash","","",309,null],[11,"eq","","",309,{"inputs":[{"name":"recentinfo"},{"name":"recentinfo"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"recentinfo"},{"name":"recentinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",309,{"inputs":[{"name":"recentinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"recentinfo"}}],[11,"get_uri","","Gets the URI of the resource.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_display_name","","Gets the name of the resource. If none has been defined, the basename\nof the resource is obtained.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_description","","Gets the (short) description of the resource.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_mime_type","","Gets the MIME type of the resource.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_added","","Gets the timestamp (seconds from system’s Epoch) when the resource\nwas added to the recently used resources list.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_modified","","Gets the timestamp (seconds from system’s Epoch) when the meta-data\nfor the resource was last modified.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_visited","","Gets the timestamp (seconds from system’s Epoch) when the meta-data\nfor the resource was last visited.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_private_hint","","Gets the value of the “private” flag. Resources in the recently used\nlist that have this flag set to `true` should only be displayed by the\napplications that have registered them.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"bool"}}],[11,"get_application_info","","Gets the data regarding the application that has registered the resource\npointed by `self`.",309,{"inputs":[{"name":"recentinfo"},{"name":"str"}],"output":{"name":"option"}}],[11,"get_applications","","Retrieves the list of applications that have registered this resource.\n## `length`\nreturn location for the length of the returned list",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"vec"}}],[11,"last_application","","Gets the name of the last application that have registered the\nrecently used resource represented by `self`.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"has_application","","Checks whether an application registered this resource using `app_name`.\n## `app_name`\na string containing an application name",309,{"inputs":[{"name":"recentinfo"},{"name":"str"}],"output":{"name":"bool"}}],[11,"get_groups","","Returns all groups registered for the recently used item `self`.\nThe array of returned group names will be `None` terminated, so\nlength might optionally be `None`.\n## `length`\nreturn location for the number of groups returned",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"vec"}}],[11,"has_group","","Checks whether `group_name` appears inside the groups\nregistered for the recently used item `self`.\n## `group_name`\nname of a group",309,{"inputs":[{"name":"recentinfo"},{"name":"str"}],"output":{"name":"bool"}}],[11,"get_short_name","","Computes a valid UTF-8 string that can be used as the\nname of the item in a menu or list. For example, calling\nthis function on an item that refers to\n“file:///foo/bar.txt” will yield “bar.txt”.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_uri_display","","Gets a displayable version of the resource’s URI. If the resource\nis local, it returns a local path; if the resource is not local,\nit returns the UTF-8 encoded content of `RecentInfo::get_uri`.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"option"}}],[11,"get_age","","Gets the number of days elapsed since the last update\nof the resource pointed by `self`.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"i32"}}],[11,"is_local","","Checks whether the resource is local or not by looking at the\nscheme of its URI.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"bool"}}],[11,"exists","","Checks whether the resource pointed by `self` still exists.\nAt the moment this check is done only on resources pointing\nto local files.",309,{"inputs":[{"name":"recentinfo"}],"output":{"name":"bool"}}],[11,"match_","","",309,{"inputs":[{"name":"recentinfo"},{"name":"recentinfo"}],"output":{"name":"bool"}}],[11,"connect_toggled","","",282,{"inputs":[{"name":"togglebutton"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_toggled","","",179,{"inputs":[{"name":"cellrenderertoggle"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_value_changed","","",267,{"inputs":[{"name":"spinbutton"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_wrapped","","",267,{"inputs":[{"name":"spinbutton"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_columns_changed","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_cursor_changed","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_expand_collapse_cursor_row","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_row_activated","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_row_collapsed","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_row_expanded","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_select_all","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_select_cursor_parent","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_select_cursor_row","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_start_interactive_search","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_test_collapse_row","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_test_expand_row","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_toggle_cursor_row","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_unselect_all","","",294,{"inputs":[{"name":"treeview"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_create_context","","",209,{"inputs":[{"name":"glarea"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_render","","",209,{"inputs":[{"name":"glarea"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_resize","","",209,{"inputs":[{"name":"glarea"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_day_selected","","",165,{"inputs":[{"name":"calendar"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_day_selected_double_click","","",165,{"inputs":[{"name":"calendar"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_month_changed","","",165,{"inputs":[{"name":"calendar"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_next_month","","",165,{"inputs":[{"name":"calendar"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_next_year","","",165,{"inputs":[{"name":"calendar"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_prev_month","","",165,{"inputs":[{"name":"calendar"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_prev_year","","",165,{"inputs":[{"name":"calendar"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_activate","","",272,{"inputs":[{"name":"statusicon"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_button_press_event","","",272,{"inputs":[{"name":"statusicon"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_button_release_event","","",272,{"inputs":[{"name":"statusicon"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_popup_menu","","",272,{"inputs":[{"name":"statusicon"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_query_tooltip","","",272,{"inputs":[{"name":"statusicon"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_scroll_event","","",272,{"inputs":[{"name":"statusicon"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_size_changed","","",272,{"inputs":[{"name":"statusicon"},{"name":"f"}],"output":{"name":"u64"}}],[11,"eq","","",310,{"inputs":[{"name":"inhibit"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"inhibit"},{"name":"inhibit"}],"output":{"name":"bool"}}],[11,"default","","",310,{"inputs":[],"output":{"name":"inhibit"}}],[11,"fmt","","",310,{"inputs":[{"name":"inhibit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",310,{"inputs":[{"name":"inhibit"}],"output":{"name":"inhibit"}}],[11,"connect_value_changed","","",153,{"inputs":[{"name":"adjustment"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_changed","","",291,{"inputs":[{"name":"treeselection"},{"name":"f"}],"output":{"name":"u64"}}],[11,"connect_clicked","","",295,{"inputs":[{"name":"treeviewcolumn"},{"name":"f"}],"output":{"name":"u64"}}],[11,"hash","","",311,null],[11,"fmt","","",311,{"inputs":[{"name":"socket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",311,{"inputs":[{"name":"socket"}],"output":{"name":"socket"}}],[11,"static_type","","",311,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",311,{"inputs":[{"name":"socket"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","",311,{"inputs":[],"output":{"name":"socket"}}],[11,"hash","","",312,null],[11,"eq","","",312,{"inputs":[{"name":"textattributes"},{"name":"textattributes"}],"output":{"name":"bool"}}],[11,"ne","","",312,{"inputs":[{"name":"textattributes"},{"name":"textattributes"}],"output":{"name":"bool"}}],[11,"fmt","","",312,{"inputs":[{"name":"textattributes"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",312,{"inputs":[{"name":"textattributes"}],"output":{"name":"textattributes"}}],[11,"new","","Creates a `TextAttributes`, which describes\na set of properties on some text.",312,{"inputs":[],"output":{"name":"textattributes"}}],[11,"copy","","Copies `self` and returns a new `TextAttributes`.",312,{"inputs":[{"name":"textattributes"}],"output":{"name":"textattributes"}}],[11,"insert","","Inserts `len` bytes of `text` at position `iter`. If `len` is -1,\n`text` must be nul-terminated and will be inserted in its\nentirety. Emits the “insert-text” signal; insertion actually occurs\nin the default handler for the signal. `iter` is invalidated when\ninsertion occurs (because the buffer contents change), but the\ndefault signal handler revalidates it to point to the end of the\ninserted text.\n## `iter`\na position in the buffer\n## `text`\ntext in UTF-8 format\n## `len`\nlength of text in bytes, or -1",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"str"}],"output":null}],[11,"insert_at_cursor","","Simply calls `TextBuffer::insert`, using the current\ncursor position as the insertion point.\n## `text`\ntext in UTF-8 format\n## `len`\nlength of text, in bytes",276,{"inputs":[{"name":"textbuffer"},{"name":"str"}],"output":null}],[11,"insert_interactive","","Like `TextBuffer::insert`, but the insertion will not occur if\n`iter` is at a non-editable location in the buffer. Usually you\nwant to prevent insertions at ineditable locations if the insertion\nresults from a user action (is interactive).",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"insert_interactive_at_cursor","","Calls `TextBuffer::insert_interactive` at the cursor\nposition.",276,{"inputs":[{"name":"textbuffer"},{"name":"str"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"insert_markup","","Inserts the text in `markup` at position `iter`. `markup` will be inserted\nin its entirety and must be nul-terminated and valid UTF-8. Emits the\n`TextBuffer::insert-text` signal, possibly multiple times; insertion\nactually occurs in the default handler for the signal. `iter` will point\nto the end of the inserted text on return.",276,{"inputs":[{"name":"textbuffer"},{"name":"textiter"},{"name":"str"}],"output":null}],[11,"set_text","","Deletes current contents of `self`, and inserts `text` instead. If\n`len` is -1, `text` must be nul-terminated. `text` must be valid UTF-8.\n## `text`\nUTF-8 text to insert\n## `len`\nlength of `text` in bytes",276,{"inputs":[{"name":"textbuffer"},{"name":"str"}],"output":null}],[11,"get_attributes","","Computes the effect of any tags applied to this spot in the\ntext. The `values` parameter should be initialized to the default\nsettings you wish to use if no tags are in effect. You’d typically\nobtain the defaults from `TextView::get_default_attributes`.",301,{"inputs":[{"name":"textiter"},{"name":"textattributes"}],"output":{"name":"bool"}}],[11,"get_indices","","Returns the current indices of `self`.",303,{"inputs":[{"name":"treepath"}],"output":{"name":"vec"}}],[11,"new","","Creates a new tree store as with `n_columns` columns each of the types passed\nin. Note that only types derived from standard GObject fundamental types\nare supported.",293,null],[11,"insert_with_values","","Creates a new row at `position`. `iter` will be changed to point to this\nnew row. If `position` is -1, or larger than the number of rows on the list, then\nthe new row will be appended to the list. The row will be filled with\nthe values given to this function.",293,null],[11,"reorder","","Reorders the children of `parent` in `self` to follow the order\nindicated by `new_order`. Note that this function only works with\nunsorted stores.\n## `parent`\nA `TreeIter`, or `None`\n## `new_order`\nan array of integers mapping the new position of each child\n to its old position before the re-ordering,\n i.e. `new_order``[newpos] = oldpos`.",293,null],[11,"set","","Sets the value of one or more cells in the row referenced by `iter`.\nThe variable argument list should contain integer column numbers,\neach column number followed by the value to be set.\nThe list is terminated by a -1. For example, to set column 0 with type\n`G_TYPE_STRING` to “Foo”, you would write\n`gtk_tree_store_set (store, iter, 0, &quot;Foo&quot;, -1)`.",293,null],[11,"set_value","","Sets the data in the cell specified by `iter` and `column`.\nThe type of `value` must be convertible to the type of the\ncolumn.\n## `iter`\nA valid `TreeIter` for the row being modified\n## `column`\ncolumn number to modify\n## `value`\nnew value for the cell",293,{"inputs":[{"name":"treestore"},{"name":"treeiter"},{"name":"u32"},{"name":"value"}],"output":null}],[0,"prelude","","Traits and essential types inteded for blanket imports.",null,null],[3,"Tooltip","gtk::prelude","",null,null],[3,"Inhibit","","Whether to propagate the signal to the default handler.",null,null],[5,"idle_add","","Adds a closure to be called by the default main loop when it&#39;s idle.",null,{"inputs":[{"name":"f"}],"output":{"name":"u32"}}],[5,"timeout_add","","Adds a closure to be called by the default main loop at regular intervals\nwith millisecond granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"u32"}}],[5,"timeout_add_seconds","","Adds a closure to be called by the default main loop at regular intervals\nwith second granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"u32"}}],[8,"ActionableExt","","Trait containing all `Actionable` methods.",null,null],[10,"get_action_name","","Gets the action name for `self`.",313,{"inputs":[{"name":"actionableext"}],"output":{"name":"option"}}],[10,"set_action_name","","Specifies the name of the action with which this widget should be\nassociated. If `action_name` is `None` then the widget will be\nunassociated from any previous action.",313,{"inputs":[{"name":"actionableext"},{"name":"str"}],"output":null}],[10,"set_detailed_action_name","","Sets the action-name and associated string target value of an\nactionable widget.",313,{"inputs":[{"name":"actionableext"},{"name":"str"}],"output":null}],[8,"BinExt","","Trait containing all `Bin` methods.",null,null],[10,"get_child","","Gets the child of the `Bin`, or `None` if the bin contains\nno child widget. The returned widget does not have a reference\nadded, so you do not need to unref it.",314,{"inputs":[{"name":"binext"}],"output":{"name":"option"}}],[8,"BoxExt","","Trait containing all `Box` methods.",null,null],[10,"get_baseline_position","","Gets the value set by `BoxExt::set_baseline_position`.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"baselineposition"}}],[10,"get_center_widget","","Retrieves the center widget of the box.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"option"}}],[10,"get_homogeneous","","Returns whether the box is homogeneous (all children are the\nsame size). See `BoxExt::set_homogeneous`.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"bool"}}],[10,"get_spacing","","Gets the value set by `BoxExt::set_spacing`.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"i32"}}],[10,"pack_end","","Adds `child` to `self`, packed with reference to the end of `self`.\nThe `child` is packed after (away from end of) any other child\npacked with reference to the end of `self`.\n## `child`\nthe `Widget` to be added to `self`\n## `expand`\n`true` if the new child is to be given extra space allocated\n to `self`. The extra space will be divided evenly between all children\n of `self` that use this option\n## `fill`\n`true` if space given to `child` by the `expand` option is\n actually allocated to `child`, rather than just padding it. This\n parameter has no effect if `expand` is set to `false`. A child is\n always allocated the full height of a horizontal `Box` and the full width\n of a vertical `Box`. This option affects the other dimension\n## `padding`\nextra space in pixels to put between this child and its\n neighbors, over and above the global amount specified by\n `Box:spacing` property. If `child` is a widget at one of the\n reference ends of `self`, then `padding` pixels are also put between\n `child` and the reference edge of `self`",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"pack_start","","Adds `child` to `self`, packed with reference to the start of `self`.\nThe `child` is packed after any other child packed with reference\nto the start of `self`.\n## `child`\nthe `Widget` to be added to `self`\n## `expand`\n`true` if the new child is to be given extra space allocated\n to `self`. The extra space will be divided evenly between all children\n that use this option\n## `fill`\n`true` if space given to `child` by the `expand` option is\n actually allocated to `child`, rather than just padding it. This\n parameter has no effect if `expand` is set to `false`. A child is\n always allocated the full height of a horizontal `Box` and the full width\n of a vertical `Box`. This option affects the other dimension\n## `padding`\nextra space in pixels to put between this child and its\n neighbors, over and above the global amount specified by\n `Box:spacing` property. If `child` is a widget at one of the\n reference ends of `self`, then `padding` pixels are also put between\n `child` and the reference edge of `self`",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"query_child_packing","","Obtains information about how `child` is packed into `self`.\n## `child`\nthe `Widget` of the child to query\n## `expand`\npointer to return location for expand child\n property\n## `fill`\npointer to return location for fill child\n property\n## `padding`\npointer to return location for padding\n child property\n## `pack_type`\npointer to return location for pack-type\n child property",315,null],[10,"reorder_child","","Moves `child` to a new `position` in the list of `self` children.\nThe list contains widgets packed `PackType::Start`\nas well as widgets packed `PackType::End`, in the order that these\nwidgets were added to `self`.",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"set_baseline_position","","Sets the baseline position of a box. This affects\nonly horizontal boxes with at least one baseline aligned\nchild. If there is more vertical space available than requested,\nand the baseline is not allocated by the parent then\n`position` is used to allocate the baseline wrt the\nextra space available.",315,{"inputs":[{"name":"boxext"},{"name":"baselineposition"}],"output":null}],[10,"set_center_widget","","Sets a center widget; that is a child widget that will be\ncentered with respect to the full width of the box, even\nif the children at either side take up different amounts\nof space.",315,{"inputs":[{"name":"boxext"},{"name":"option"}],"output":null}],[10,"set_child_packing","","Sets the way `child` is packed into `self`.\n## `child`\nthe `Widget` of the child to set\n## `expand`\nthe new value of the expand child property\n## `fill`\nthe new value of the fill child property\n## `padding`\nthe new value of the padding child property\n## `pack_type`\nthe new value of the pack-type child property",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"u32"},{"name":"packtype"}],"output":null}],[10,"set_homogeneous","","Sets the `Box:homogeneous` property of `self`, controlling\nwhether or not all children of `self` are given equal space\nin the box.\n## `homogeneous`\na boolean value, `true` to create equal allotments,\n `false` for variable allotments",315,{"inputs":[{"name":"boxext"},{"name":"bool"}],"output":null}],[10,"set_spacing","","Sets the `Box:spacing` property of `self`, which is the\nnumber of pixels to place between children of `self`.\n## `spacing`\nthe number of pixels to put between children",315,{"inputs":[{"name":"boxext"},{"name":"i32"}],"output":null}],[8,"ButtonExt","","Trait containing all `Button` methods.",null,null],[10,"clicked","","Emits a `Button::clicked` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"enter","","Emits a `Button::enter` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"get_alignment","","Gets the alignment of the child in the button.",316,null],[10,"get_always_show_image","","Returns whether the button will ignore the `Settings:gtk-button-images`\nsetting and always show the image, if available.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"get_event_window","","Returns the button’s event window if it is realized, `None` otherwise.\nThis function should be rarely needed.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"option"}}],[10,"get_focus_on_click","","Returns whether the button grabs focus when it is clicked with the mouse.\nSee `ButtonExt::set_focus_on_click`.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"get_image","","Gets the widget that is currenty set as the image of `self`.\nThis may have been explicitly set by `ButtonExt::set_image`\nor constructed by `Button::new_from_stock`.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"option"}}],[10,"get_image_position","","Gets the position of the image relative to the text\ninside the button.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"positiontype"}}],[10,"get_label","","Fetches the text from the label of the button, as set by\n`ButtonExt::set_label`. If the label text has not\nbeen set the return value will be `None`. This will be the\ncase if you create an empty button with `Button::new` to\nuse as a container.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"option"}}],[10,"get_relief","","Returns the current relief style of the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"reliefstyle"}}],[10,"get_use_stock","","Returns whether the button label is a stock item.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"get_use_underline","","Returns whether an embedded underline in the button label indicates a\nmnemonic. See gtk_button_set_use_underline ().",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"leave","","Emits a `Button::leave` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"pressed","","Emits a `Button::pressed` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"released","","Emits a `Button::released` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"set_alignment","","Sets the alignment of the child. This property has no effect unless\nthe child is a `Misc` or a `Alignment`.",316,{"inputs":[{"name":"buttonext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_always_show_image","","If `true`, the button will ignore the `Settings:gtk-button-images`\nsetting and always show the image, if available.",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[10,"set_focus_on_click","","Sets whether the button will grab focus when it is clicked with the mouse.\nMaking mouse clicks not grab focus is useful in places like toolbars where\nyou don’t want the keyboard focus removed from the main area of the\napplication.\n## `focus_on_click`\nwhether the button grabs focus when clicked with the mouse",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[10,"set_image","","Set the image of `self` to the given widget. The image will be\ndisplayed if the label text is `None` or if\n`Button:always-show-image` is `true`. You don’t have to call\n`Widget::show` on `image` yourself.\n## `image`\na widget to set as the image for the button",316,{"inputs":[{"name":"buttonext"},{"name":"t"}],"output":null}],[10,"set_image_position","","Sets the position of the image relative to the text\ninside the button.\n## `position`\nthe position",316,{"inputs":[{"name":"buttonext"},{"name":"positiontype"}],"output":null}],[10,"set_label","","Sets the text of the label of the button to `str`. This text is\nalso used to select the stock item if `ButtonExt::set_use_stock`\nis used.",316,{"inputs":[{"name":"buttonext"},{"name":"str"}],"output":null}],[10,"set_relief","","Sets the relief style of the edges of the given `Button` widget.\nTwo styles exist, `ReliefStyle::Normal` and `ReliefStyle::None`.\nThe default style is, as one can guess, `ReliefStyle::Normal`.\nThe deprecated value `ReliefStyle::Half` behaves the same as\n`ReliefStyle::Normal`.\n## `relief`\nThe `ReliefStyle` as described above",316,{"inputs":[{"name":"buttonext"},{"name":"reliefstyle"}],"output":null}],[10,"set_use_stock","","If `true`, the label set on the button is used as a\nstock id to select the stock item for the button.",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text of the button label indicates\nthe next character should be used for the mnemonic accelerator key.\n## `use_underline`\n`true` if underlines in the text indicate mnemonics",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[8,"CellAreaExt","","Trait containing all `CellArea` methods.",null,null],[10,"activate","","Activates `self`, usually by activating the currently focused\ncell, however some subclasses which embed widgets in the area\ncan also activate a widget if it currently has the focus.\n## `context`\nthe `CellAreaContext` in context with the current row data\n## `widget`\nthe `Widget` that `self` is rendering on\n## `cell_area`\nthe size and location of `self` relative to `widget`’s allocation\n## `flags`\nthe `CellRendererState` flags for `self` for this row of data.\n## `edit_only`\nif `true` then only cell renderers that are `CellRendererMode::Editable`\n will be activated.",317,{"inputs":[{"name":"cellareaext"},{"name":"cellareacontext"},{"name":"t"},{"name":"rectangle"},{"name":"cellrendererstate"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"add","","Adds `renderer` to `self` with the default child cell properties.\n## `renderer`\nthe `CellRenderer` to add to `self`",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":null}],[10,"add_focus_sibling","","Adds `sibling` to `renderer`’s focusable area, focus will be drawn\naround `renderer` and all of its siblings if `renderer` can\nfocus for a given row.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"u"}],"output":null}],[10,"apply_attributes","","Applies any connected attributes to the renderers in\n`self` by pulling the values from `tree_model`.\n## `tree_model`\nthe `TreeModel` to pull values from\n## `iter`\nthe `TreeIter` in `tree_model` to apply values for\n## `is_expander`\nwhether `iter` has children\n## `is_expanded`\nwhether `iter` is expanded in the view and\n children are visible",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"treeiter"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"attribute_connect","","Connects an `attribute` to apply values from `column` for the\n`TreeModel` in use.\n## `renderer`\nthe `CellRenderer` to connect an attribute for\n## `attribute`\nthe attribute name\n## `column`\nthe `TreeModel` column to fetch attribute values from",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"attribute_disconnect","","Disconnects `attribute` for the `renderer` in `self` so that\nattribute will no longer be updated with values from the\nmodel.\n## `renderer`\nthe `CellRenderer` to disconnect an attribute for\n## `attribute`\nthe attribute name",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"str"}],"output":null}],[10,"attribute_get_column","","Returns the model column that an attribute has been mapped to,\nor -1 if the attribute is not mapped.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"str"}],"output":{"name":"i32"}}],[10,"copy_context","","This is sometimes needed for cases where rows need to share\nalignments in one orientation but may be separately grouped\nin the opposing orientation.",317,{"inputs":[{"name":"cellareaext"},{"name":"cellareacontext"}],"output":{"name":"option"}}],[10,"create_context","","Creates a `CellAreaContext` to be used with `self` for\nall purposes. `CellAreaContext` stores geometry information\nfor rows for which it was operated on, it is important to use\nthe same context for the same row of data at all times (i.e.\none should render and handle events with the same `CellAreaContext`\nwhich was used to request the size of those rows of data).",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"focus","","This should be called by the `self`’s owning layout widget\nwhen focus is to be passed to `self`, or moved within `self`\nfor a given `direction` and row data.",317,{"inputs":[{"name":"cellareaext"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"get_cell_allocation","","Derives the allocation of `renderer` inside `self` if `self`\nwere to be renderered in `cell_area`.\n## `context`\nthe `CellAreaContext` used to hold sizes for `self`.\n## `widget`\nthe `Widget` that `self` is rendering on\n## `renderer`\nthe `CellRenderer` to get the allocation for\n## `cell_area`\nthe whole allocated area for `self` in `widget`\n for this row\n## `allocation`\nwhere to store the allocation for `renderer`",317,{"inputs":[{"name":"cellareaext"},{"name":"cellareacontext"},{"name":"t"},{"name":"u"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_cell_at_position","","Gets the `CellRenderer` at `x` and `y` coordinates inside `self` and optionally\nreturns the full cell allocation for it inside `cell_area`.\n## `context`\nthe `CellAreaContext` used to hold sizes for `self`.\n## `widget`\nthe `Widget` that `self` is rendering on\n## `cell_area`\nthe whole allocated area for `self` in `widget`\n for this row\n## `x`\nthe x position\n## `y`\nthe y position\n## `alloc_area`\nwhere to store the inner allocated area of the\n returned cell renderer, or `None`.",317,null],[10,"get_current_path_string","","Gets the current `TreePath` string for the currently\napplied `TreeIter`, this is implicitly updated when\n`CellAreaExt::apply_attributes` is called and can be\nused to interact with renderers from `CellArea`\nsubclasses.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_edit_widget","","Gets the `CellEditable` widget currently used\nto edit the currently edited cell.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_edited_cell","","Gets the `CellRenderer` in `self` that is currently\nbeing edited.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_focus_cell","","Retrieves the currently focused cell for `self`",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_focus_from_sibling","","Gets the `CellRenderer` which is expected to be focusable\nfor which `renderer` is, or may be a sibling.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":{"name":"option"}}],[10,"get_focus_siblings","","Gets the focus sibling cell renderers for `renderer`.\n## `renderer`\nthe `CellRenderer` expected to have focus",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":{"name":"vec"}}],[10,"get_preferred_height","","Retrieves a cell area’s initial minimum and natural height.",317,null],[10,"get_preferred_height_for_width","","Retrieves a cell area’s minimum and natural height if it would be given\nthe specified `width`.",317,null],[10,"get_preferred_width","","Retrieves a cell area’s initial minimum and natural width.",317,null],[10,"get_preferred_width_for_height","","Retrieves a cell area’s minimum and natural width if it would be given\nthe specified `height`.",317,null],[10,"get_request_mode","","Gets whether the area prefers a height-for-width layout\nor a width-for-height layout.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"sizerequestmode"}}],[10,"has_renderer","","Checks if `self` contains `renderer`.\n## `renderer`\nthe `CellRenderer` to check",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"inner_cell_area","","This is a convenience function for `CellArea` implementations\nto get the inner area where a given `CellRenderer` will be\nrendered. It removes any padding previously added by `CellAreaExt::request_renderer`.\n## `widget`\nthe `Widget` that `self` is rendering onto\n## `cell_area`\nthe `widget` relative coordinates where one of `self`’s cells\n is to be placed\n## `inner_area`\nthe return location for the inner cell area",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"is_activatable","","Returns whether the area can do anything when activated,\nafter applying new attributes to `self`.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"bool"}}],[10,"is_focus_sibling","","Returns whether `sibling` is one of `renderer`’s focus siblings\n(see `CellAreaExt::add_focus_sibling`).\n## `renderer`\nthe `CellRenderer` expected to have focus\n## `sibling`\nthe `CellRenderer` to check against `renderer`’s sibling list",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"u"}],"output":{"name":"bool"}}],[10,"remove","","Removes `renderer` from `self`.\n## `renderer`\nthe `CellRenderer` to remove from `self`",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":null}],[10,"remove_focus_sibling","","Removes `sibling` from `renderer`’s focus sibling list\n(see `CellAreaExt::add_focus_sibling`).\n## `renderer`\nthe `CellRenderer` expected to have focus\n## `sibling`\nthe `CellRenderer` to remove from `renderer`’s focus area",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"u"}],"output":null}],[10,"request_renderer","","This is a convenience function for `CellArea` implementations\nto request size for cell renderers. It’s important to use this\nfunction to request size and then use `CellAreaExt::inner_cell_area`\nat render and event time since this function will add padding\naround the cell for focus painting.\n## `renderer`\nthe `CellRenderer` to request size for\n## `orientation`\nthe `Orientation` in which to request size\n## `widget`\nthe `Widget` that `self` is rendering onto\n## `for_size`\nthe allocation contextual size to request for, or -1 if\nthe base request for the orientation is to be returned.\n## `minimum_size`\nlocation to store the minimum size, or `None`\n## `natural_size`\nlocation to store the natural size, or `None`",317,null],[10,"set_focus_cell","","Explicitly sets the currently focused cell to `renderer`.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":null}],[10,"stop_editing","","Explicitly stops the editing of the currently edited cell.",317,{"inputs":[{"name":"cellareaext"},{"name":"bool"}],"output":null}],[8,"CellEditableExt","","Trait containing all `CellEditable` methods.",null,null],[10,"editing_done","","Emits the `CellEditable::editing-done` signal.",318,{"inputs":[{"name":"celleditableext"}],"output":null}],[10,"remove_widget","","Emits the `CellEditable::remove-widget` signal.",318,{"inputs":[{"name":"celleditableext"}],"output":null}],[8,"CellLayoutExt","","Trait containing all `CellLayout` methods.",null,null],[10,"add_attribute","","Adds an attribute mapping to the list in `self`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"clear","","Unsets all the mappings on all renderers on `self` and\nremoves all renderers from `self`.",319,{"inputs":[{"name":"celllayoutext"}],"output":null}],[10,"clear_attributes","","Clears all existing attributes previously set with\n`CellLayout::set_attributes`.\n## `cell`\na `CellRenderer` to clear the attribute mapping on",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"}],"output":null}],[10,"get_area","","Returns the underlying `CellArea` which might be `self`\nif called on a `CellArea` or might be `None` if no `CellArea`\nis used by `self`.",319,{"inputs":[{"name":"celllayoutext"}],"output":{"name":"option"}}],[10,"get_cells","","Returns the cell renderers which have been added to `self`.",319,{"inputs":[{"name":"celllayoutext"}],"output":{"name":"vec"}}],[10,"pack_end","","Adds the `cell` to the end of `self`. If `expand` is `false`, then the\n`cell` is allocated no more space than it needs. Any unused space is\ndivided evenly between cells for which `expand` is `true`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"pack_start","","Packs the `cell` into the beginning of `self`. If `expand` is `false`,\nthen the `cell` is allocated no more space than it needs. Any unused space\nis divided evenly between cells for which `expand` is `true`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"reorder","","Re-inserts `cell` at `position`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"CellRendererExt","","Trait containing all `CellRenderer` methods.",null,null],[10,"get_aligned_area","","Gets the aligned area used by `self` inside `cell_area`. Used for finding\nthe appropriate edit and focus rectangle.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `flags`\nrender flags\n## `cell_area`\ncell area which would be passed to `CellRendererExt::render`\n## `aligned_area`\nthe return location for the space inside `cell_area`\n that would acually be used to render.",320,{"inputs":[{"name":"cellrendererext"},{"name":"t"},{"name":"cellrendererstate"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_alignment","","Fills in `xalign` and `yalign` with the appropriate values of `self`.\n## `xalign`\nlocation to fill in with the x alignment of the cell, or `None`\n## `yalign`\nlocation to fill in with the y alignment of the cell, or `None`",320,null],[10,"get_fixed_size","","Fills in `width` and `height` with the appropriate size of `self`.\n## `width`\nlocation to fill in with the fixed width of the cell, or `None`\n## `height`\nlocation to fill in with the fixed height of the cell, or `None`",320,null],[10,"get_padding","","Fills in `xpad` and `ypad` with the appropriate values of `self`.\n## `xpad`\nlocation to fill in with the x padding of the cell, or `None`\n## `ypad`\nlocation to fill in with the y padding of the cell, or `None`",320,null],[10,"get_preferred_height","","Retreives a renderer’s natural size when rendered to `widget`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `minimum_size`\nlocation to store the minimum size, or `None`\n## `natural_size`\nlocation to store the natural size, or `None`",320,null],[10,"get_preferred_height_for_width","","Retreives a cell renderers’s minimum and natural height if it were rendered to\n`widget` with the specified `width`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `width`\nthe size which is available for allocation\n## `minimum_height`\nlocation for storing the minimum size, or `None`\n## `natural_height`\nlocation for storing the preferred size, or `None`",320,null],[10,"get_preferred_size","","Retrieves the minimum and natural size of a cell taking\ninto account the widget’s preference for height-for-width management.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `minimum_size`\nlocation for storing the minimum size, or `None`\n## `natural_size`\nlocation for storing the natural size, or `None`",320,null],[10,"get_preferred_width","","Retreives a renderer’s natural size when rendered to `widget`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `minimum_size`\nlocation to store the minimum size, or `None`\n## `natural_size`\nlocation to store the natural size, or `None`",320,null],[10,"get_preferred_width_for_height","","Retreives a cell renderers’s minimum and natural width if it were rendered to\n`widget` with the specified `height`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `height`\nthe size which is available for allocation\n## `minimum_width`\nlocation for storing the minimum size, or `None`\n## `natural_width`\nlocation for storing the preferred size, or `None`",320,null],[10,"get_request_mode","","Gets whether the cell renderer prefers a height-for-width layout\nor a width-for-height layout.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"sizerequestmode"}}],[10,"get_sensitive","","Returns the cell renderer’s sensitivity.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"bool"}}],[10,"get_state","","Translates the cell renderer state to `StateFlags`,\nbased on the cell renderer and widget sensitivity, and\nthe given `CellRendererState`.\n## `widget`\na `Widget`, or `None`\n## `cell_state`\ncell renderer state",320,{"inputs":[{"name":"cellrendererext"},{"name":"t"},{"name":"cellrendererstate"}],"output":{"name":"stateflags"}}],[10,"get_visible","","Returns the cell renderer’s visibility.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"bool"}}],[10,"is_activatable","","Checks whether the cell renderer can do something when activated.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"bool"}}],[10,"set_alignment","","Sets the renderer’s alignment within its available space.\n## `xalign`\nthe x alignment of the cell renderer\n## `yalign`\nthe y alignment of the cell renderer",320,{"inputs":[{"name":"cellrendererext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_fixed_size","","Sets the renderer size to be explicit, independent of the properties set.\n## `width`\nthe width of the cell renderer, or -1\n## `height`\nthe height of the cell renderer, or -1",320,{"inputs":[{"name":"cellrendererext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_padding","","Sets the renderer’s padding.\n## `xpad`\nthe x padding of the cell renderer\n## `ypad`\nthe y padding of the cell renderer",320,{"inputs":[{"name":"cellrendererext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_sensitive","","Sets the cell renderer’s sensitivity.\n## `sensitive`\nthe sensitivity of the cell",320,{"inputs":[{"name":"cellrendererext"},{"name":"bool"}],"output":null}],[10,"set_visible","","Sets the cell renderer’s visibility.\n## `visible`\nthe visibility of the cell",320,{"inputs":[{"name":"cellrendererext"},{"name":"bool"}],"output":null}],[10,"stop_editing","","Informs the cell renderer that the editing is stopped.\nIf `canceled` is `true`, the cell renderer will emit the\n`CellRenderer::editing-canceled` signal.",320,{"inputs":[{"name":"cellrendererext"},{"name":"bool"}],"output":null}],[8,"CellRendererTextExt","","Trait containing all `CellRendererText` methods.",null,null],[10,"set_fixed_height_from_font","","Sets the height of a renderer to explicitly be determined by the “font” and\n“y_pad” property set on it. Further changes in these properties do not\naffect the height, so they must be accompanied by a subsequent call to this\nfunction. Using this function is unflexible, and should really only be used\nif calculating the size of a cell is too slow (ie, a massive number of cells\ndisplayed). If `number_of_rows` is -1, then the fixed height is unset, and\nthe height is determined by the properties again.\n## `number_of_rows`\nNumber of rows of text each cell renderer is allocated, or -1",321,{"inputs":[{"name":"cellrenderertextext"},{"name":"i32"}],"output":null}],[8,"CheckButtonExt","","Trait containing all `CheckButton` methods.",null,null],[8,"ComboBoxExt","","Trait containing all `ComboBox` methods.",null,null],[10,"get_active","","Returns the index of the currently active item, or -1 if there’s no\nactive item. If the model is a non-flat treemodel, and the active item\nis not an immediate child of the root of the tree, this function returns\n`gtk_tree_path_get_indices (path)[0]`, where\n`path` is the `TreePath` of the active item.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_active_id","","Returns the ID of the active row of `self`. This value is taken\nfrom the active row and the column specified by the `ComboBox:id-column`\nproperty of `self` (see `ComboBoxExt::set_id_column`).",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_active_iter","","Sets `iter` to point to the current active item, if it exists.\n## `iter`\nThe uninitialized `TreeIter`",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_add_tearoffs","","Gets the current value of the :add-tearoffs property.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_button_sensitivity","","Returns whether the combo box sets the dropdown button\nsensitive or not when there are no items in the model.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"sensitivitytype"}}],[10,"get_column_span_column","","Returns the column with column span information for `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_entry_text_column","","Returns the column which `self` is using to get the strings\nfrom to display in the internal entry.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_focus_on_click","","Returns whether the combo box grabs focus when it is clicked\nwith the mouse. See `ComboBoxExt::set_focus_on_click`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_has_entry","","Returns whether the combo box has an entry.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_id_column","","Returns the column which `self` is using to get string IDs\nfor values from.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_model","","Returns the `TreeModel` which is acting as data source for `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_popup_fixed_width","","Gets whether the popup uses a fixed width matching\nthe allocated width of the combo box.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_row_span_column","","Returns the column with row span information for `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_title","","Gets the current title of the menu in tearoff mode. See\n`ComboBoxExt::set_add_tearoffs`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_wrap_width","","Returns the wrap width which is used to determine the number of columns\nfor the popup menu. If the wrap width is larger than 1, the combo box\nis in table mode.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"popdown","","Hides the menu or dropdown list of `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":null}],[10,"popup","","Pops up the menu or dropdown list of `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":null}],[10,"set_active","","Sets the active item of `self` to be the item at `index`.\n## `index_`\nAn index in the model passed during construction, or -1 to have\nno active item",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_active_id","","Changes the active row of `self` to the one that has an ID equal to\n`active_id`, or unsets the active row if `active_id` is `None`. Rows having\na `None` ID string cannot be made active by this function.",322,{"inputs":[{"name":"comboboxext"},{"name":"option"}],"output":{"name":"bool"}}],[10,"set_active_iter","","Sets the current active item to be the one referenced by `iter`, or\nunsets the active item if `iter` is `None`.\n## `iter`\nThe `TreeIter`, or `None`",322,{"inputs":[{"name":"comboboxext"},{"name":"option"}],"output":null}],[10,"set_add_tearoffs","","Sets whether the popup menu should have a tearoff\nmenu item.",322,{"inputs":[{"name":"comboboxext"},{"name":"bool"}],"output":null}],[10,"set_button_sensitivity","","Sets whether the dropdown button of the combo box should be\nalways sensitive (`SensitivityType::On`), never sensitive (`SensitivityType::Off`)\nor only if there is at least one item to display (`SensitivityType::Auto`).\n## `sensitivity`\nspecify the sensitivity of the dropdown button",322,{"inputs":[{"name":"comboboxext"},{"name":"sensitivitytype"}],"output":null}],[10,"set_column_span_column","","Sets the column with column span information for `self` to be\n`column_span`. The column span column contains integers which indicate\nhow many columns an item should span.\n## `column_span`\nA column in the model passed during construction",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_entry_text_column","","Sets the model column which `self` should use to get strings from\nto be `text_column`. The column `text_column` in the model of `self`\nmust be of type `G_TYPE_STRING`.",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_focus_on_click","","Sets whether the combo box will grab focus when it is clicked with\nthe mouse. Making mouse clicks not grab focus is useful in places\nlike toolbars where you don’t want the keyboard focus removed from\nthe main area of the application.\n## `focus_on_click`\nwhether the combo box grabs focus when clicked\n with the mouse",322,{"inputs":[{"name":"comboboxext"},{"name":"bool"}],"output":null}],[10,"set_id_column","","Sets the model column which `self` should use to get string IDs\nfor values from. The column `id_column` in the model of `self`\nmust be of type `G_TYPE_STRING`.\n## `id_column`\nA column in `model` to get string IDs for values from",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_model","","Sets the model used by `self` to be `model`. Will unset a previously set\nmodel (if applicable). If model is `None`, then it will unset the model.",322,{"inputs":[{"name":"comboboxext"},{"name":"option"}],"output":null}],[10,"set_popup_fixed_width","","Specifies whether the popup’s width should be a fixed width\nmatching the allocated width of the combo box.\n## `fixed`\nwhether to use a fixed popup width",322,{"inputs":[{"name":"comboboxext"},{"name":"bool"}],"output":null}],[10,"set_row_span_column","","Sets the column with row span information for `self` to be `row_span`.\nThe row span column contains integers which indicate how many rows\nan item should span.\n## `row_span`\nA column in the model passed during construction.",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_title","","Sets the menu’s title in tearoff mode.",322,{"inputs":[{"name":"comboboxext"},{"name":"str"}],"output":null}],[10,"set_wrap_width","","Sets the wrap width of `self` to be `width`. The wrap width is basically\nthe preferred number of columns when you want the popup to be layed out\nin a table.\n## `width`\nPreferred number of columns",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[8,"ContainerExt","","Trait containing all `Container` methods.",null,null],[10,"add","","Adds `widget` to `self`. Typically used for simple containers\nsuch as `Window`, `Frame`, or `Button`; for more complicated\nlayout containers such as `Box` or `Grid`, this function will\npick default packing parameters that may not be correct. So\nconsider functions such as `BoxExt::pack_start` and\n`Grid::attach` as an alternative to `ContainerExt::add` in\nthose cases. A widget may be added to only one container at a time;\nyou can’t place the same widget inside two different containers.",323,{"inputs":[{"name":"containerext"},{"name":"t"}],"output":null}],[10,"check_resize","","",323,{"inputs":[{"name":"containerext"}],"output":null}],[10,"child_notify","","Emits a `Widget::child-notify` signal for the\n[child property][child-properties]\n`child_property` on widget.",323,{"inputs":[{"name":"containerext"},{"name":"t"},{"name":"str"}],"output":null}],[10,"child_type","","Returns the type of the children supported by the container.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"type"}}],[10,"get_border_width","","Retrieves the border width of the container. See\n`ContainerExt::set_border_width`.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"u32"}}],[10,"get_children","","Returns the container’s non-internal children. See\n`ContainerExt::forall` for details on what constitutes an &quot;internal&quot; child.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"vec"}}],[10,"get_focus_child","","Returns the current focus child widget inside `self`. This is not the\ncurrently focused widget. That can be obtained by calling\n`Window::get_focus`.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"option"}}],[10,"get_focus_hadjustment","","Retrieves the horizontal focus adjustment for the container. See\ngtk_container_set_focus_hadjustment ().",323,{"inputs":[{"name":"containerext"}],"output":{"name":"option"}}],[10,"get_focus_vadjustment","","Retrieves the vertical focus adjustment for the container. See\n`ContainerExt::set_focus_vadjustment`.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"option"}}],[10,"get_resize_mode","","Returns the resize mode for the container. See\ngtk_container_set_resize_mode ().",323,{"inputs":[{"name":"containerext"}],"output":{"name":"resizemode"}}],[10,"remove","","Removes `widget` from `self`. `widget` must be inside `self`.\nNote that `self` will own a reference to `widget`, and that this\nmay be the last reference held; so removing a widget from its\ncontainer can destroy that widget. If you want to use `widget`\nagain, you need to add a reference to it while it’s not inside\na container, using `gobject::Object::ref`. If you don’t want to use `widget`\nagain it’s usually more efficient to simply destroy it directly\nusing `Widget::destroy` since this will remove it from the\ncontainer and help break any circular reference count cycles.\n## `widget`\na current child of `self`",323,{"inputs":[{"name":"containerext"},{"name":"t"}],"output":null}],[10,"resize_children","","",323,{"inputs":[{"name":"containerext"}],"output":null}],[10,"set_border_width","","Sets the border width of the container.",323,{"inputs":[{"name":"containerext"},{"name":"u32"}],"output":null}],[10,"set_focus_chain","","Sets a focus chain, overriding the one computed automatically by GTK+.",323,null],[10,"set_focus_child","","Sets, or unsets if `child` is `None`, the focused child of `self`.",323,{"inputs":[{"name":"containerext"},{"name":"option"}],"output":null}],[10,"set_focus_hadjustment","","Hooks up an adjustment to focus handling in a container, so when a child\nof the container is focused, the adjustment is scrolled to show that\nwidget. This function sets the horizontal alignment.\nSee `ScrolledWindow::get_hadjustment` for a typical way of obtaining\nthe adjustment and `ContainerExt::set_focus_vadjustment` for setting\nthe vertical adjustment.",323,{"inputs":[{"name":"containerext"},{"name":"adjustment"}],"output":null}],[10,"set_focus_vadjustment","","Hooks up an adjustment to focus handling in a container, so when a\nchild of the container is focused, the adjustment is scrolled to\nshow that widget. This function sets the vertical alignment. See\n`ScrolledWindow::get_vadjustment` for a typical way of obtaining\nthe adjustment and `ContainerExt::set_focus_hadjustment` for setting\nthe horizontal adjustment.",323,{"inputs":[{"name":"containerext"},{"name":"adjustment"}],"output":null}],[10,"set_reallocate_redraws","","Sets the `reallocate_redraws` flag of the container to the given value.",323,{"inputs":[{"name":"containerext"},{"name":"bool"}],"output":null}],[10,"set_resize_mode","","Sets the resize mode for the container.",323,{"inputs":[{"name":"containerext"},{"name":"resizemode"}],"output":null}],[10,"unset_focus_chain","","Removes a focus chain explicitly set with `ContainerExt::set_focus_chain`.",323,{"inputs":[{"name":"containerext"}],"output":null}],[8,"EditableExt","","Trait containing all `Editable` methods.",null,null],[10,"copy_clipboard","","Copies the contents of the currently selected content in the editable and\nputs it on the clipboard.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"cut_clipboard","","Removes the contents of the currently selected content in the editable and\nputs it on the clipboard.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"delete_selection","","Deletes the currently selected text of the editable.\nThis call doesn’t do anything if there is no selected text.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"delete_text","","Deletes a sequence of characters. The characters that are deleted are\nthose characters at positions from `start_pos` up to, but not including\n`end_pos`. If `end_pos` is negative, then the characters deleted\nare those from `start_pos` to the end of the text.",324,{"inputs":[{"name":"editableext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_chars","","Retrieves a sequence of characters. The characters that are retrieved\nare those characters at positions from `start_pos` up to, but not\nincluding `end_pos`. If `end_pos` is negative, then the characters\nretrieved are those characters from `start_pos` to the end of the text.",324,{"inputs":[{"name":"editableext"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_editable","","Retrieves whether `self` is editable. See\n`Editable::set_editable`.",324,{"inputs":[{"name":"editableext"}],"output":{"name":"bool"}}],[10,"get_position","","Retrieves the current position of the cursor relative to the start\nof the content of the editable.",324,{"inputs":[{"name":"editableext"}],"output":{"name":"i32"}}],[10,"get_selection_bounds","","Retrieves the selection bound of the editable. start_pos will be filled\nwith the start of the selection and `end_pos` with end. If no text was\nselected both will be identical and `false` will be returned.",324,{"inputs":[{"name":"editableext"}],"output":{"name":"option"}}],[10,"insert_text","","Inserts `new_text_length` bytes of `new_text` into the contents of the\nwidget, at position `position`.",324,{"inputs":[{"name":"editableext"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"paste_clipboard","","Pastes the content of the clipboard to the current position of the\ncursor in the editable.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"select_region","","Selects a region of text. The characters that are selected are\nthose characters at positions from `start_pos` up to, but not\nincluding `end_pos`. If `end_pos` is negative, then the\ncharacters selected are those characters from `start_pos` to\nthe end of the text.",324,{"inputs":[{"name":"editableext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_editable","","Determines if the user can edit the text in the editable\nwidget or not.\n## `is_editable`\n`true` if the user is allowed to edit the text\n in the widget",324,{"inputs":[{"name":"editableext"},{"name":"bool"}],"output":null}],[10,"set_position","","Sets the cursor position in the editable to the given value.",324,{"inputs":[{"name":"editableext"},{"name":"i32"}],"output":null}],[8,"EntryExt","","Trait containing all `Entry` methods.",null,null],[10,"get_activates_default","","Retrieves the value set by `EntryExt::set_activates_default`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_alignment","","Gets the value set by `EntryExt::set_alignment`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"f32"}}],[10,"get_buffer","","Get the `EntryBuffer` object which holds the text for\nthis widget.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"entrybuffer"}}],[10,"get_completion","","Returns the auxiliary completion object currently in use by `self`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_current_icon_drag_source","","Returns the index of the icon which is the source of the current\nDND operation, or -1.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"get_cursor_hadjustment","","Retrieves the horizontal cursor adjustment for the entry.\nSee `EntryExt::set_cursor_hadjustment`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_has_frame","","Gets the value set by `EntryExt::set_has_frame`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_icon_activatable","","Returns whether the icon is activatable.\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_area","","Gets the area where entry’s icon at `icon_pos` is drawn.\nThis function is useful when drawing something to the\nentry in a draw callback.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"rectangle"}}],[10,"get_icon_at_pos","","Finds the icon at the given position and return its index. The\nposition’s coordinates are relative to the `self`’s top left corner.\nIf `x`, `y` doesn’t lie inside an icon, -1 is returned.\nThis function is intended for use in a `Widget::query-tooltip`\nsignal handler.\n## `x`\nthe x coordinate of the position to find\n## `y`\nthe y coordinate of the position to find",325,{"inputs":[{"name":"entryext"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_icon_name","","Retrieves the icon name used for the icon, or `None` if there is\nno icon or if the icon was set by some other method (e.g., by\npixbuf, stock or gicon).\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_pixbuf","","Retrieves the image used for the icon.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_sensitive","","Returns whether the icon appears sensitive or insensitive.\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_stock","","Retrieves the stock id used for the icon, or `None` if there is\nno icon or if the icon was set by some other method (e.g., by\npixbuf, icon name or gicon).",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_storage_type","","Gets the type of representation being used by the icon\nto store image data. If the icon has no image data,\nthe return value will be `ImageType::Empty`.\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"imagetype"}}],[10,"get_icon_tooltip_markup","","Gets the contents of the tooltip on the icon at the specified\nposition in `self`.\n## `icon_pos`\nthe icon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_tooltip_text","","Gets the contents of the tooltip on the icon at the specified\nposition in `self`.\n## `icon_pos`\nthe icon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_input_hints","","Gets the value of the `Entry:input-hints` property.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"inputhints"}}],[10,"get_input_purpose","","Gets the value of the `Entry:input-purpose` property.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"inputpurpose"}}],[10,"get_invisible_char","","Retrieves the character displayed in place of the real characters\nfor entries with visibility set to false. See `EntryExt::set_invisible_char`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","Obtains the position of the `pango::Layout` used to render text\nin the entry, in widget coordinates. Useful if you want to line\nup the text in an entry with some other text, e.g. when using the\nentry to implement editable cells in a sheet widget.",325,null],[10,"get_max_length","","Retrieves the maximum allowed length of the text in\n`self`. See `EntryExt::set_max_length`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"get_max_width_chars","","Retrieves the desired maximum width of `self`, in characters.\nSee `EntryExt::set_max_width_chars`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"get_overwrite_mode","","Gets the value set by `EntryExt::set_overwrite_mode`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_placeholder_text","","Retrieves the text that will be displayed when `self` is empty and unfocused",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_progress_fraction","","Returns the current fraction of the task that’s been completed.\nSee `EntryExt::set_progress_fraction`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"f64"}}],[10,"get_progress_pulse_step","","Retrieves the pulse step set with `EntryExt::set_progress_pulse_step`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"f64"}}],[10,"get_text","","Retrieves the contents of the entry widget.\nSee also `Editable::get_chars`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_text_area","","Gets the area where the entry’s text is drawn. This function is\nuseful when drawing something to the entry in a draw callback.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"rectangle"}}],[10,"get_text_length","","Retrieves the current length of the text in\n`self`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"u16"}}],[10,"get_visibility","","Retrieves whether the text in `self` is visible. See\n`EntryExt::set_visibility`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_width_chars","","Gets the value set by `EntryExt::set_width_chars`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"grab_focus_without_selecting","","Causes `self` to have keyboard focus.",325,{"inputs":[{"name":"entryext"}],"output":null}],[10,"layout_index_to_text_index","","Converts from a position in the entry contents (returned\nby `EntryExt::get_text`) to a position in the\nentry’s `pango::Layout` (returned by `EntryExt::get_layout`,\nwith text retrieved via `pango::Layout::get_text`).\n## `layout_index`\nbyte index into the entry layout text",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"progress_pulse","","Indicates that some progress is made, but you don’t know how much.\nCauses the entry’s progress indicator to enter “activity mode,”\nwhere a block bounces back and forth. Each call to\n`EntryExt::progress_pulse` causes the block to move by a little bit\n(the amount of movement per pulse is determined by\n`EntryExt::set_progress_pulse_step`).",325,{"inputs":[{"name":"entryext"}],"output":null}],[10,"reset_im_context","","Reset the input method context of the entry if needed.",325,{"inputs":[{"name":"entryext"}],"output":null}],[10,"set_activates_default","","If `setting` is `true`, pressing Enter in the `self` will activate the default\nwidget for the window containing the entry. This usually means that\nthe dialog box containing the entry will be closed, since the default\nwidget is usually one of the dialog buttons.",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_alignment","","Sets the alignment for the contents of the entry. This controls\nthe horizontal positioning of the contents when the displayed\ntext is shorter than the width of the entry.\n## `xalign`\nThe horizontal alignment, from 0 (left) to 1 (right).\n Reversed for RTL layouts",325,{"inputs":[{"name":"entryext"},{"name":"f32"}],"output":null}],[10,"set_buffer","","Set the `EntryBuffer` object which holds the text for\nthis widget.\n## `buffer`\na `EntryBuffer`",325,{"inputs":[{"name":"entryext"},{"name":"entrybuffer"}],"output":null}],[10,"set_completion","","Sets `completion` to be the auxiliary completion object to use with `self`.\nAll further configuration of the completion mechanism is done on\n`completion` using the `EntryCompletion` API. Completion is disabled if\n`completion` is set to `None`.\n## `completion`\nThe `EntryCompletion` or `None`",325,{"inputs":[{"name":"entryext"},{"name":"option"}],"output":null}],[10,"set_cursor_hadjustment","","Hooks up an adjustment to the cursor position in an entry, so that when\nthe cursor is moved, the adjustment is scrolled to show that position.\nSee `ScrolledWindow::get_hadjustment` for a typical way of obtaining\nthe adjustment.",325,{"inputs":[{"name":"entryext"},{"name":"adjustment"}],"output":null}],[10,"set_has_frame","","Sets whether the entry has a beveled frame around it.\n## `setting`\nnew value",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_icon_activatable","","Sets whether the icon is activatable.\n## `icon_pos`\nIcon position\n## `activatable`\n`true` if the icon should be activatable",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_from_icon_name","","Sets the icon shown in the entry at the specified position\nfrom the current icon theme.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_from_pixbuf","","Sets the icon shown in the specified position using a pixbuf.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_from_stock","","Sets the icon shown in the entry at the specified position from\na stock image.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_sensitive","","Sets the sensitivity for the specified icon.\n## `icon_pos`\nIcon position\n## `sensitive`\nSpecifies whether the icon should appear\n sensitive or insensitive",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_tooltip_markup","","Sets `tooltip` as the contents of the tooltip for the icon at\nthe specified position. `tooltip` is assumed to be marked up with\nthe [Pango text markup language][PangoMarkupFormat].",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_tooltip_text","","Sets `tooltip` as the contents of the tooltip for the icon\nat the specified position.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_input_hints","","Sets the `Entry:input-hints` property, which\nallows input methods to fine-tune their behaviour.",325,{"inputs":[{"name":"entryext"},{"name":"inputhints"}],"output":null}],[10,"set_input_purpose","","Sets the `Entry:input-purpose` property which\ncan be used by on-screen keyboards and other input\nmethods to adjust their behaviour.",325,{"inputs":[{"name":"entryext"},{"name":"inputpurpose"}],"output":null}],[10,"set_invisible_char","","Sets the character to use in place of the actual text when\n`EntryExt::set_visibility` has been called to set text visibility\nto `false`. i.e. this is the character used in “password mode” to\nshow the user how many characters have been typed. By default, GTK+\npicks the best invisible char available in the current font. If you\nset the invisible char to 0, then the user will get no feedback\nat all; there will be no text on the screen as they type.\n## `ch`\na Unicode character",325,{"inputs":[{"name":"entryext"},{"name":"option"}],"output":null}],[10,"set_max_length","","Sets the maximum allowed length of the contents of the widget. If\nthe current contents are longer than the given length, then they\nwill be truncated to fit.",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":null}],[10,"set_max_width_chars","","Sets the desired maximum width in characters of `self`.",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":null}],[10,"set_overwrite_mode","","Sets whether the text is overwritten when typing in the `Entry`.\n## `overwrite`\nnew value",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_placeholder_text","","Sets text to be displayed in `self` when it is empty and unfocused.\nThis can be used to give a visual hint of the expected contents of\nthe `Entry`.",325,{"inputs":[{"name":"entryext"},{"name":"option"}],"output":null}],[10,"set_progress_fraction","","Causes the entry’s progress indicator to “fill in” the given\nfraction of the bar. The fraction should be between 0.0 and 1.0,\ninclusive.\n## `fraction`\nfraction of the task that’s been completed",325,{"inputs":[{"name":"entryext"},{"name":"f64"}],"output":null}],[10,"set_progress_pulse_step","","Sets the fraction of total entry width to move the progress\nbouncing block for each call to `EntryExt::progress_pulse`.\n## `fraction`\nfraction between 0.0 and 1.0",325,{"inputs":[{"name":"entryext"},{"name":"f64"}],"output":null}],[10,"set_text","","Sets the text in the widget to the given\nvalue, replacing the current contents.",325,{"inputs":[{"name":"entryext"},{"name":"str"}],"output":null}],[10,"set_visibility","","Sets whether the contents of the entry are visible or not.\nWhen visibility is set to `false`, characters are displayed\nas the invisible char, and will also appear that way when\nthe text in the entry widget is copied elsewhere.",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_width_chars","","Changes the size request of the entry to be about the right size\nfor `n_chars` characters. Note that it changes the size\nrequest, the size can still be affected by\nhow you pack the widget into containers. If `n_chars` is -1, the\nsize reverts to the default entry size.\n## `n_chars`\nwidth in chars",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":null}],[10,"text_index_to_layout_index","","Converts from a position in the entry’s `pango::Layout` (returned by\n`EntryExt::get_layout`) to a position in the entry contents\n(returned by `EntryExt::get_text`).\n## `text_index`\nbyte index into the entry contents",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"unset_invisible_char","","Unsets the invisible char previously set with\n`EntryExt::set_invisible_char`. So that the\ndefault invisible char is used again.",325,{"inputs":[{"name":"entryext"}],"output":null}],[8,"EventControllerExt","","Trait containing all `EventController` methods.",null,null],[10,"get_propagation_phase","","Gets the propagation phase at which `self` handles events.",326,{"inputs":[{"name":"eventcontrollerext"}],"output":{"name":"propagationphase"}}],[10,"get_widget","","Returns the `Widget` this controller relates to.",326,{"inputs":[{"name":"eventcontrollerext"}],"output":{"name":"option"}}],[10,"reset","","Resets the `self` to a clean state. Every interaction\nthe controller did through `EventController::handle-event`\nwill be dropped at this point.",326,{"inputs":[{"name":"eventcontrollerext"}],"output":null}],[10,"set_propagation_phase","","Sets the propagation phase at which a controller handles events.",326,{"inputs":[{"name":"eventcontrollerext"},{"name":"propagationphase"}],"output":null}],[8,"FileChooserExt","","Trait containing all `FileChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of filters that the user can select between.\nWhen a filter is selected, only files that are passed by that\nfilter are displayed.",327,{"inputs":[{"name":"filechooserext"},{"name":"filefilter"}],"output":null}],[10,"add_shortcut_folder","","Adds a folder to be displayed with the shortcut folders in a file chooser.\nNote that shortcut folders do not get saved, as they are provided by the\napplication. For example, you can use this to add a\n“/usr/share/mydrawprogram/Clipart” folder to the volume list.\n## `folder`\nfilename of the folder to add",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"result"}}],[10,"add_shortcut_folder_uri","","Adds a folder URI to be displayed with the shortcut folders in a file\nchooser. Note that shortcut folders do not get saved, as they are provided\nby the application. For example, you can use this to add a\n“file:///usr/share/mydrawprogram/Clipart” folder to the volume list.\n## `uri`\nURI of the folder to add",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_action","","Gets the type of operation that the file chooser is performing; see\n`FileChooser::set_action`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"filechooseraction"}}],[10,"get_create_folders","","Gets whether file choser will offer to create new folders.\nSee `FileChooser::set_create_folders`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_current_folder","","Gets the current folder of `self` as a local filename.\nSee `FileChooser::set_current_folder`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_current_folder_uri","","Gets the current folder of `self` as an URI.\nSee `FileChooser::set_current_folder_uri`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_current_name","","Gets the current name in the file selector, as entered by the user in the\ntext entry for “Name”.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_do_overwrite_confirmation","","Queries whether a file chooser is set to confirm for overwriting when the user\ntypes a file name that already exists.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_extra_widget","","Gets the current preview widget; see\n`FileChooser::set_extra_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_filename","","Gets the filename for the currently selected file in\nthe file selector. The filename is returned as an absolute path. If\nmultiple files are selected, one of the filenames will be returned at\nrandom.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_filenames","","Lists all the selected files and subfolders in the current folder of\n`self`. The returned names are full absolute paths. If files in the current\nfolder cannot be represented as local filenames they will be ignored. (See\n`FileChooser::get_uris`)",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"get_filter","","Gets the current filter; see `FileChooser::set_filter`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_local_only","","Gets whether only local files can be selected in the\nfile selector. See `FileChooser::set_local_only`",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_preview_filename","","Gets the filename that should be previewed in a custom preview\nwidget. See `FileChooser::set_preview_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_preview_uri","","Gets the URI that should be previewed in a custom preview\nwidget. See `FileChooser::set_preview_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_preview_widget","","Gets the current preview widget; see\n`FileChooser::set_preview_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_preview_widget_active","","Gets whether the preview widget set by `FileChooser::set_preview_widget`\nshould be shown for the current filename. See\n`FileChooser::set_preview_widget_active`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether multiple files can be selected in the file\nselector. See `FileChooser::set_select_multiple`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_show_hidden","","Gets whether hidden files and folders are displayed in the file selector.\nSee `FileChooser::set_show_hidden`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_uri","","Gets the URI for the currently selected file in\nthe file selector. If multiple files are selected,\none of the filenames will be returned at random.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_uris","","Lists all the selected files and subfolders in the current folder of\n`self`. The returned names are full absolute URIs.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"get_use_preview_label","","Gets whether a stock label should be drawn with the name of the previewed\nfile. See `FileChooser::set_use_preview_label`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"list_filters","","Lists the current set of user-selectable filters; see\n`FileChooser::add_filter`, `FileChooser::remove_filter`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"list_shortcut_folder_uris","","Queries the list of shortcut folders in the file chooser, as set by\n`FileChooser::add_shortcut_folder_uri`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"list_shortcut_folders","","Queries the list of shortcut folders in the file chooser, as set by\n`FileChooser::add_shortcut_folder`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"remove_filter","","Removes `filter` from the list of filters that the user can select between.\n## `filter`\na `FileFilter`",327,{"inputs":[{"name":"filechooserext"},{"name":"filefilter"}],"output":null}],[10,"remove_shortcut_folder","","Removes a folder from a file chooser’s list of shortcut folders.\n## `folder`\nfilename of the folder to remove",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"result"}}],[10,"remove_shortcut_folder_uri","","Removes a folder URI from a file chooser’s list of shortcut folders.\n## `uri`\nURI of the folder to remove",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"select_all","","Selects all the files in the current folder of a file chooser.",327,{"inputs":[{"name":"filechooserext"}],"output":null}],[10,"select_filename","","Selects a filename. If the file name isn’t in the current\nfolder of `self`, then the current folder of `self` will\nbe changed to the folder containing `filename`.\n## `filename`\nthe filename to select",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"select_uri","","Selects the file to by `uri`. If the URI doesn’t refer to a\nfile in the current folder of `self`, then the current folder of\n`self` will be changed to the folder containing `filename`.\n## `uri`\nthe URI to select",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_action","","Sets the type of operation that the chooser is performing; the\nuser interface is adapted to suit the selected action. For example,\nan option to create a new folder might be shown if the action is\n`FileChooserAction::Save` but not if the action is\n`FileChooserAction::Open`.\n## `action`\nthe action that the file selector is performing",327,{"inputs":[{"name":"filechooserext"},{"name":"filechooseraction"}],"output":null}],[10,"set_create_folders","","Sets whether file choser will offer to create new folders.\nThis is only relevant if the action is not set to be\n`FileChooserAction::Open`.\n## `create_folders`\n`true` if the Create Folder button should be displayed",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_current_folder","","Sets the current folder for `self` from a local filename.\nThe user will be shown the full contents of the current folder,\nplus user interface elements for navigating to other folders.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_current_folder_uri","","Sets the current folder for `self` from an URI.\nThe user will be shown the full contents of the current folder,\nplus user interface elements for navigating to other folders.",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_current_name","","Sets the current name in the file selector, as if entered\nby the user. Note that the name passed in here is a UTF-8\nstring rather than a filename. This function is meant for\nsuch uses as a suggested name in a “Save As...” dialog. You can\npass “Untitled.doc” or a similarly suitable suggestion for the `name`.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"set_do_overwrite_confirmation","","Sets whether a file chooser in `FileChooserAction::Save` mode will present\na confirmation dialog if the user types a file name that already exists. This\nis `false` by default.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_extra_widget","","Sets an application-supplied widget to provide extra options to the user.\n## `extra_widget`\nwidget for extra options",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"set_filename","","Sets `filename` as the current filename for the file chooser, by changing to\nthe file’s parent folder and actually selecting the file in list; all other\nfiles will be unselected. If the `self` is in\n`FileChooserAction::Save` mode, the file’s base name will also appear in\nthe dialog’s file name entry.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_filter","","Sets the current filter; only the files that pass the\nfilter will be displayed. If the user-selectable list of filters\nis non-empty, then the filter should be one of the filters\nin that list. Setting the current filter when the list of\nfilters is empty is useful if you want to restrict the displayed\nset of files without letting the user change it.\n## `filter`\na `FileFilter`",327,{"inputs":[{"name":"filechooserext"},{"name":"filefilter"}],"output":null}],[10,"set_local_only","","Sets whether only local files can be selected in the\nfile selector. If `local_only` is `true` (the default),\nthen the selected file or files are guaranteed to be\naccessible through the operating systems native file\nsystem and therefore the application only\nneeds to worry about the filename functions in\n`FileChooser`, like `FileChooser::get_filename`,\nrather than the URI functions like\n`FileChooser::get_uri`,",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_preview_widget","","Sets an application-supplied widget to use to display a custom preview\nof the currently selected file. To implement a preview, after setting the\npreview widget, you connect to the `FileChooser::update-preview`\nsignal, and call `FileChooser::get_preview_filename` or\n`FileChooser::get_preview_uri` on each change. If you can\ndisplay a preview of the new file, update your widget and\nset the preview active using `FileChooser::set_preview_widget_active`.\nOtherwise, set the preview inactive.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"set_preview_widget_active","","Sets whether the preview widget set by\n`FileChooser::set_preview_widget` should be shown for the\ncurrent filename. When `active` is set to false, the file chooser\nmay display an internally generated preview of the current file\nor it may display no preview at all. See\n`FileChooser::set_preview_widget` for more details.\n## `active`\nwhether to display the user-specified preview widget",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether multiple files can be selected in the file selector. This is\nonly relevant if the action is set to be `FileChooserAction::Open` or\n`FileChooserAction::SelectFolder`.\n## `select_multiple`\n`true` if multiple files can be selected.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_show_hidden","","Sets whether hidden files and folders are displayed in the file selector.\n## `show_hidden`\n`true` if hidden files and folders should be displayed.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_uri","","Sets the file referred to by `uri` as the current file for the file chooser,\nby changing to the URI’s parent folder and actually selecting the URI in the\nlist. If the `self` is `FileChooserAction::Save` mode, the URI’s base\nname will also appear in the dialog’s file name entry.",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_use_preview_label","","Sets whether the file chooser should display a stock label with the name of\nthe file that is being previewed; the default is `true`. Applications that\nwant to draw the whole preview area themselves should set this to `false` and\ndisplay the name themselves in their preview widget.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"unselect_all","","Unselects all the files in the current folder of a file chooser.",327,{"inputs":[{"name":"filechooserext"}],"output":null}],[10,"unselect_filename","","Unselects a currently selected filename. If the filename\nis not in the current directory, does not exist, or\nis otherwise not currently selected, does nothing.\n## `filename`\nthe filename to unselect",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"unselect_uri","","Unselects the file referred to by `uri`. If the file\nis not in the current directory, does not exist, or\nis otherwise not currently selected, does nothing.\n## `uri`\nthe URI to unselect",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":null}],[8,"FontChooserExt","","Trait containing all `FontChooser` methods.",null,null],[10,"get_font","","Gets the currently-selected font name.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"option"}}],[10,"get_font_size","","The selected font size.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"i32"}}],[10,"get_preview_text","","Gets the text displayed in the preview area.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"option"}}],[10,"get_show_preview_entry","","Returns whether the preview entry is shown or not.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"bool"}}],[10,"set_font","","Sets the currently-selected font.\n## `fontname`\na font name like “Helvetica 12” or “Times Bold 18”",328,{"inputs":[{"name":"fontchooserext"},{"name":"str"}],"output":null}],[10,"set_preview_text","","Sets the text displayed in the preview area.\nThe `text` is used to show how the selected font looks.\n## `text`\nthe text to display in the preview area",328,{"inputs":[{"name":"fontchooserext"},{"name":"str"}],"output":null}],[10,"set_show_preview_entry","","Shows or hides the editable preview entry.\n## `show_preview_entry`\nwhether to show the editable preview entry or not",328,{"inputs":[{"name":"fontchooserext"},{"name":"bool"}],"output":null}],[8,"FrameExt","","Trait containing all `Frame` methods.",null,null],[10,"get_label","","If the frame’s label widget is a `Label`, returns the\ntext in the label widget. (The frame will have a `Label`\nfor the label widget if a non-`None` argument was passed\nto `Frame::new`.)",329,{"inputs":[{"name":"frameext"}],"output":{"name":"option"}}],[10,"get_label_align","","Retrieves the X and Y alignment of the frame’s label. See\n`FrameExt::set_label_align`.\n## `xalign`\nlocation to store X alignment of\n frame’s label, or `None`\n## `yalign`\nlocation to store X alignment of\n frame’s label, or `None`",329,null],[10,"get_label_widget","","Retrieves the label widget for the frame. See\n`FrameExt::set_label_widget`.",329,{"inputs":[{"name":"frameext"}],"output":{"name":"option"}}],[10,"get_shadow_type","","Retrieves the shadow type of the frame. See\n`FrameExt::set_shadow_type`.",329,{"inputs":[{"name":"frameext"}],"output":{"name":"shadowtype"}}],[10,"set_label","","Sets the text of the label. If `label` is `None`,\nthe current label is removed.\n## `label`\nthe text to use as the label of the frame",329,{"inputs":[{"name":"frameext"},{"name":"option"}],"output":null}],[10,"set_label_align","","Sets the alignment of the frame widget’s label. The\ndefault values for a newly created frame are 0.0 and 0.5.\n## `xalign`\nThe position of the label along the top edge\n of the widget. A value of 0.0 represents left alignment;\n 1.0 represents right alignment.\n## `yalign`\nThe y alignment of the label. A value of 0.0 aligns under\n the frame; 1.0 aligns above the frame. If the values are exactly\n 0.0 or 1.0 the gap in the frame won’t be painted because the label\n will be completely above or below the frame.",329,{"inputs":[{"name":"frameext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_label_widget","","Sets the label widget for the frame. This is the widget that\nwill appear embedded in the top edge of the frame as a\ntitle.\n## `label_widget`\nthe new label widget",329,{"inputs":[{"name":"frameext"},{"name":"option"}],"output":null}],[10,"set_shadow_type","","Sets the shadow type for `self`.\n## `type_`\nthe new `ShadowType`",329,{"inputs":[{"name":"frameext"},{"name":"shadowtype"}],"output":null}],[8,"GestureExt","","Trait containing all `Gesture` methods.",null,null],[10,"get_bounding_box","","If there are touch sequences being currently handled by `self`,\nthis function returns `true` and fills in `rect` with the bounding\nbox containing all active touches. Otherwise, `false` will be\nreturned.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"option"}}],[10,"get_bounding_box_center","","If there are touch sequences being currently handled by `self`,\nthis function returns `true` and fills in `x` and `y` with the center\nof the bounding box containing all active touches. Otherwise, `false`\nwill be returned.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"option"}}],[10,"get_group","","Returns all gestures in the group of `self`",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"vec"}}],[10,"get_window","","Returns the user-defined window that receives the events\nhandled by `self`. See `GestureExt::set_window` for more\ninformation.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"option"}}],[10,"group","","Adds `gesture` to the same group than `self`. Gestures\nare by default isolated in their own groups.",330,{"inputs":[{"name":"gestureext"},{"name":"t"}],"output":null}],[10,"is_active","","Returns `true` if the gesture is currently active.\nA gesture is active meanwhile there are touch sequences\ninteracting with it.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"bool"}}],[10,"is_grouped_with","","Returns `true` if both gestures pertain to the same group.",330,{"inputs":[{"name":"gestureext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"is_recognized","","Returns `true` if the gesture is currently recognized.\nA gesture is recognized if there are as many interacting\ntouch sequences as required by `self`, and `Gesture::check`\nreturned `true` for the sequences being currently interpreted.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"bool"}}],[10,"set_state","","Sets the state of all sequences that `self` is currently\ninteracting with. See `GestureExt::set_sequence_state`\nfor more details on sequence states.",330,{"inputs":[{"name":"gestureext"},{"name":"eventsequencestate"}],"output":{"name":"bool"}}],[10,"set_window","","Sets a specific window to receive events about, so `self`\nwill effectively handle only events targeting `window`, or\na child of it. `window` must pertain to `EventControllerExt::get_widget`.",330,{"inputs":[{"name":"gestureext"},{"name":"option"}],"output":null}],[10,"ungroup","","Separates `self` into an isolated group.",330,{"inputs":[{"name":"gestureext"}],"output":null}],[8,"GestureDragExt","","Trait containing all `GestureDrag` methods.",null,null],[10,"get_offset","","If the `self` is active, this function returns `true` and\nfills in `x` and `y` with the coordinates of the current point,\nas an offset to the starting drag point.",331,{"inputs":[{"name":"gesturedragext"}],"output":{"name":"option"}}],[10,"get_start_point","","If the `self` is active, this function returns `true`\nand fills in `x` and `y` with the drag start coordinates,\nin window-relative coordinates.",331,{"inputs":[{"name":"gesturedragext"}],"output":{"name":"option"}}],[8,"GestureSingleExt","","Trait containing all `GestureSingle` methods.",null,null],[10,"get_button","","Returns the button number `self` listens for, or 0 if `self`\nreacts to any button press.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"u32"}}],[10,"get_current_button","","Returns the button number currently interacting with `self`, or 0 if there\nis none.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"u32"}}],[10,"get_exclusive","","Gets whether a gesture is exclusive. For more information, see\n`GestureSingleExt::set_exclusive`.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"bool"}}],[10,"get_touch_only","","Returns `true` if the gesture is only triggered by touch events.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"bool"}}],[10,"set_button","","Sets the button number `self` listens to. If non-0, every\nbutton press from a different button number will be ignored.\nTouch events implicitly match with button 1.",332,{"inputs":[{"name":"gesturesingleext"},{"name":"u32"}],"output":null}],[10,"set_exclusive","","Sets whether `self` is exclusive. An exclusive gesture will\nonly handle pointer and &quot;pointer emulated&quot; touch events, so at\nany given time, there is only one sequence able to interact with\nthose.",332,{"inputs":[{"name":"gesturesingleext"},{"name":"bool"}],"output":null}],[10,"set_touch_only","","If `touch_only` is `true`, `self` will only handle events of type\n`gdk::EventType::TouchBegin`, `gdk::EventType::TouchUpdate` or `gdk::EventType::TouchEnd`. If `false`,\nmouse events will be handled too.",332,{"inputs":[{"name":"gesturesingleext"},{"name":"bool"}],"output":null}],[8,"MenuItemExt","","Trait containing all `MenuItem` methods.",null,null],[10,"deselect","","Emits the `MenuItem::deselect` signal on the given item.",333,{"inputs":[{"name":"menuitemext"}],"output":null}],[10,"get_accel_path","","Retrieve the accelerator path that was previously set on `self`.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"option"}}],[10,"get_label","","Sets `text` on the `self` label",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"option"}}],[10,"get_reserve_indicator","","Returns whether the `self` reserves space for\nthe submenu indicator, regardless if it has a submenu\nor not.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"bool"}}],[10,"get_right_justified","","Gets whether the menu item appears justified at the right\nside of the menu bar.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"bool"}}],[10,"get_submenu","","Gets the submenu underneath this menu item, if any.\nSee `MenuItemExt::set_submenu`.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"option"}}],[10,"get_use_underline","","Checks if an underline in the text indicates the next character\nshould be used for the mnemonic accelerator key.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"bool"}}],[10,"select","","Emits the `MenuItem::select` signal on the given item.",333,{"inputs":[{"name":"menuitemext"}],"output":null}],[10,"set_accel_path","","Set the accelerator path on `self`, through which runtime\nchanges of the menu item’s accelerator caused by the user can be\nidentified and saved to persistent storage (see `AccelMap::save`\non this). To set up a default accelerator for this menu item, call\n`AccelMap::add_entry` with the same `accel_path`. See also\n`AccelMap::add_entry` on the specifics of accelerator paths,\nand `Menu::set_accel_path` for a more convenient variant of\nthis function.",333,{"inputs":[{"name":"menuitemext"},{"name":"option"}],"output":null}],[10,"set_label","","Sets `text` on the `self` label\n## `label`\nthe text you want to set",333,{"inputs":[{"name":"menuitemext"},{"name":"str"}],"output":null}],[10,"set_reserve_indicator","","Sets whether the `self` should reserve space for\nthe submenu indicator, regardless if it actually has\na submenu or not.",333,{"inputs":[{"name":"menuitemext"},{"name":"bool"}],"output":null}],[10,"set_right_justified","","Sets whether the menu item appears justified at the right\nside of a menu bar. This was traditionally done for “Help”\nmenu items, but is now considered a bad idea. (If the widget\nlayout is reversed for a right-to-left language like Hebrew\nor Arabic, right-justified-menu-items appear at the left.)",333,{"inputs":[{"name":"menuitemext"},{"name":"bool"}],"output":null}],[10,"set_submenu","","Sets or replaces the menu item’s submenu, or removes it when a `None`\nsubmenu is passed.\n## `submenu`\nthe submenu, or `None`",333,{"inputs":[{"name":"menuitemext"},{"name":"option"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text indicates the next character\nshould be used for the mnemonic accelerator key.\n## `setting`\n`true` if underlines in the text indicate mnemonics",333,{"inputs":[{"name":"menuitemext"},{"name":"bool"}],"output":null}],[10,"toggle_size_allocate","","Emits the `MenuItem::toggle-size-allocate` signal on the given item.\n## `allocation`\nthe allocation to use as signal data.",333,{"inputs":[{"name":"menuitemext"},{"name":"i32"}],"output":null}],[10,"toggle_size_request","","Emits the `MenuItem::toggle-size-request` signal on the given item.\n## `requisition`\nthe requisition to use as signal data.",333,{"inputs":[{"name":"menuitemext"},{"name":"i32"}],"output":null}],[8,"MenuShellExt","","Trait containing all `MenuShell` methods.",null,null],[10,"activate_item","","Activates the menu item within the menu shell.\n## `menu_item`\nthe `MenuItem` to activate\n## `force_deactivate`\nif `true`, force the deactivation of the\n menu shell after the menu item is activated",334,{"inputs":[{"name":"menushellext"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"append","","Adds a new `MenuItem` to the end of the menu shell&#39;s\nitem list.\n## `child`\nThe `MenuItem` to add",334,{"inputs":[{"name":"menushellext"},{"name":"t"}],"output":null}],[10,"cancel","","Cancels the selection within the menu shell.",334,{"inputs":[{"name":"menushellext"}],"output":null}],[10,"deactivate","","Deactivates the menu shell.",334,{"inputs":[{"name":"menushellext"}],"output":null}],[10,"deselect","","Deselects the currently selected item from the menu shell,\nif any.",334,{"inputs":[{"name":"menushellext"}],"output":null}],[10,"get_parent_shell","","Gets the parent menu shell.",334,{"inputs":[{"name":"menushellext"}],"output":{"name":"option"}}],[10,"get_selected_item","","Gets the currently selected item.",334,{"inputs":[{"name":"menushellext"}],"output":{"name":"option"}}],[10,"get_take_focus","","Returns `true` if the menu shell will take the keyboard focus on popup.",334,{"inputs":[{"name":"menushellext"}],"output":{"name":"bool"}}],[10,"insert","","Adds a new `MenuItem` to the menu shell’s item list\nat the position indicated by `position`.\n## `child`\nThe `MenuItem` to add\n## `position`\nThe position in the item list where `child`\n is added. Positions are numbered from 0 to n-1",334,{"inputs":[{"name":"menushellext"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"prepend","","Adds a new `MenuItem` to the beginning of the menu shell&#39;s\nitem list.\n## `child`\nThe `MenuItem` to add",334,{"inputs":[{"name":"menushellext"},{"name":"t"}],"output":null}],[10,"select_first","","Select the first visible or selectable child of the menu shell;\ndon’t select tearoff items unless the only item is a tearoff\nitem.\n## `search_sensitive`\nif `true`, search for the first selectable\n menu item, otherwise select nothing if\n the first item isn’t sensitive. This\n should be `false` if the menu is being\n popped up initially.",334,{"inputs":[{"name":"menushellext"},{"name":"bool"}],"output":null}],[10,"select_item","","Selects the menu item from the menu shell.\n## `menu_item`\nThe `MenuItem` to select",334,{"inputs":[{"name":"menushellext"},{"name":"t"}],"output":null}],[10,"set_take_focus","","If `take_focus` is `true` (the default) the menu shell will take\nthe keyboard focus so that it will receive all keyboard events\nwhich is needed to enable keyboard navigation in menus.",334,{"inputs":[{"name":"menushellext"},{"name":"bool"}],"output":null}],[8,"MiscExt","","`[Deprecated since 3.14]` Trait containing all `Misc` methods.",null,null],[10,"get_alignment","","Gets the X and Y alignment of the widget within its allocation.\nSee `MiscExt::set_alignment`.",335,null],[10,"get_padding","","Gets the padding in the X and Y directions of the widget.\nSee `MiscExt::set_padding`.",335,null],[10,"set_alignment","","Sets the alignment of the widget.",335,{"inputs":[{"name":"miscext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_padding","","Sets the amount of space to add around the widget.",335,{"inputs":[{"name":"miscext"},{"name":"i32"},{"name":"i32"}],"output":null}],[8,"OrientableExt","","Trait containing all `Orientable` methods.",null,null],[10,"get_orientation","","Retrieves the orientation of the `self`.",336,{"inputs":[{"name":"orientableext"}],"output":{"name":"orientation"}}],[10,"set_orientation","","Sets the orientation of the `self`.\n## `orientation`\nthe orientable’s new orientation.",336,{"inputs":[{"name":"orientableext"},{"name":"orientation"}],"output":null}],[8,"PopoverExt","","Trait containing all `Popover` methods.",null,null],[10,"get_modal","","Returns whether the popover is modal, see gtk_popover_set_modal to\nsee the implications of this.",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"bool"}}],[10,"get_pointing_to","","If a rectangle to point to has been set, this function will\nreturn `true` and fill in `rect` with such rectangle, otherwise\nit will return `false` and fill in `rect` with the attached\nwidget coordinates.\n## `rect`\nlocation to store the rectangle",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"option"}}],[10,"get_position","","Returns the preferred position of `self`.",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"positiontype"}}],[10,"get_relative_to","","Returns the widget `self` is currently attached to",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"option"}}],[10,"get_transitions_enabled","","Returns whether show/hide transitions are enabled on this popover.",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"bool"}}],[10,"set_modal","","Sets whether `self` is modal, a modal popover will grab all input\nwithin the toplevel and grab the keyboard focus on it when being\ndisplayed. Clicking outside the popover area or pressing Esc will\ndismiss the popover and ungrab input.",337,{"inputs":[{"name":"popoverext"},{"name":"bool"}],"output":null}],[10,"set_pointing_to","","Sets the rectangle that `self` will point to, in the\ncoordinate space of the widget `self` is attached to,\nsee `PopoverExt::set_relative_to`.",337,{"inputs":[{"name":"popoverext"},{"name":"rectangle"}],"output":null}],[10,"set_position","","Sets the preferred position for `self` to appear. If the `self`\nis currently visible, it will be immediately updated.",337,{"inputs":[{"name":"popoverext"},{"name":"positiontype"}],"output":null}],[10,"set_relative_to","","Sets a new widget to be attached to `self`. If `self` is\nvisible, the position will be updated.",337,{"inputs":[{"name":"popoverext"},{"name":"option"}],"output":null}],[10,"set_transitions_enabled","","Sets whether show/hide transitions are enabled on this popover",337,{"inputs":[{"name":"popoverext"},{"name":"bool"}],"output":null}],[8,"RangeExt","","Trait containing all `Range` methods.",null,null],[10,"get_adjustment","","Get the `Adjustment` which is the “model” object for `Range`.\nSee `RangeExt::set_adjustment` for details.\nThe return value does not have a reference added, so should not\nbe unreferenced.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"adjustment"}}],[10,"get_fill_level","","Gets the current position of the fill level indicator.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"f64"}}],[10,"get_flippable","","Gets the value set by `RangeExt::set_flippable`.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_inverted","","Gets the value set by `RangeExt::set_inverted`.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_lower_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the\n&#39;lower&#39; end of the `Range`’s adjustment.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"sensitivitytype"}}],[10,"get_min_slider_size","","This function is useful mainly for `Range` subclasses.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"i32"}}],[10,"get_range_rect","","This function returns the area that contains the range’s trough\nand its steppers, in widget-&gt;window coordinates.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"rectangle"}}],[10,"get_restrict_to_fill_level","","Gets whether the range is restricted to the fill level.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_round_digits","","Gets the number of digits to round the value to when\nit changes. See `Range::change-value`.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"i32"}}],[10,"get_show_fill_level","","Gets whether the range displays the fill level graphically.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_slider_range","","This function returns sliders range along the long dimension,\nin widget-&gt;window coordinates.",338,null],[10,"get_slider_size_fixed","","This function is useful mainly for `Range` subclasses.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_upper_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the\n&#39;upper&#39; end of the `Range`’s adjustment.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"sensitivitytype"}}],[10,"get_value","","Gets the current value of the range.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the adjustment to be used as the “model” object for this range\nwidget. The adjustment indicates the current range value, the\nminimum and maximum range values, the step/page increments used\nfor keybindings and scrolling, and the page size. The page size\nis normally 0 for `Scale` and nonzero for `Scrollbar`, and\nindicates the size of the visible area of the widget being scrolled.\nThe page size affects the size of the scrollbar slider.\n## `adjustment`\na `Adjustment`",338,{"inputs":[{"name":"rangeext"},{"name":"adjustment"}],"output":null}],[10,"set_fill_level","","Set the new position of the fill level indicator.",338,{"inputs":[{"name":"rangeext"},{"name":"f64"}],"output":null}],[10,"set_flippable","","If a range is flippable, it will switch its direction if it is\nhorizontal and its direction is `TextDirection::Rtl`.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_increments","","Sets the step and page sizes for the range.\nThe step size is used when the user clicks the `Scrollbar`\narrows or moves `Scale` via arrow keys. The page size\nis used for example when moving via Page Up or Page Down keys.\n## `step`\nstep size\n## `page`\npage size",338,{"inputs":[{"name":"rangeext"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_inverted","","Ranges normally move from lower to higher values as the\nslider moves from top to bottom or left to right. Inverted\nranges have higher values at the top or on the right rather than\non the bottom or left.\n## `setting`\n`true` to invert the range",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_lower_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the\n&#39;lower&#39; end of the `Range`’s adjustment.\n## `sensitivity`\nthe lower stepper’s sensitivity policy.",338,{"inputs":[{"name":"rangeext"},{"name":"sensitivitytype"}],"output":null}],[10,"set_min_slider_size","","Sets the minimum size of the range’s slider.",338,{"inputs":[{"name":"rangeext"},{"name":"i32"}],"output":null}],[10,"set_range","","Sets the allowable values in the `Range`, and clamps the range\nvalue to be between `min` and `max`. (If the range has a non-zero\npage size, it is clamped between `min` and `max` - page-size.)\n## `min`\nminimum range value\n## `max`\nmaximum range value",338,{"inputs":[{"name":"rangeext"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_restrict_to_fill_level","","Sets whether the slider is restricted to the fill level. See\n`RangeExt::set_fill_level` for a general description of the fill\nlevel concept.\n## `restrict_to_fill_level`\nWhether the fill level restricts slider movement.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_round_digits","","Sets the number of digits to round the value to when\nit changes. See `Range::change-value`.\n## `round_digits`\nthe precision in digits, or -1",338,{"inputs":[{"name":"rangeext"},{"name":"i32"}],"output":null}],[10,"set_show_fill_level","","Sets whether a graphical fill level is show on the trough. See\n`RangeExt::set_fill_level` for a general description of the fill\nlevel concept.\n## `show_fill_level`\nWhether a fill level indicator graphics is shown.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_slider_size_fixed","","Sets whether the range’s slider has a fixed size, or a size that\ndepends on its adjustment’s page size.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_upper_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the\n&#39;upper&#39; end of the `Range`’s adjustment.\n## `sensitivity`\nthe upper stepper’s sensitivity policy.",338,{"inputs":[{"name":"rangeext"},{"name":"sensitivitytype"}],"output":null}],[10,"set_value","","Sets the current value of the range; if the value is outside the\nminimum or maximum range values, it will be clamped to fit inside\nthem. The range emits the `Range::value-changed` signal if the\nvalue changes.\n## `value`\nnew value of the range",338,{"inputs":[{"name":"rangeext"},{"name":"f64"}],"output":null}],[8,"RecentChooserExt","","Trait containing all `RecentChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of `RecentFilter` objects held by `self`.",339,{"inputs":[{"name":"recentchooserext"},{"name":"recentfilter"}],"output":null}],[10,"get_current_item","","Gets the `RecentInfo` currently selected by `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"recentinfo"}}],[10,"get_current_uri","","Gets the URI currently selected by `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"option"}}],[10,"get_filter","","Gets the `RecentFilter` object currently used by `self` to affect\nthe display of the recently used resources.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"option"}}],[10,"get_items","","Gets the list of recently used resources in form of `RecentInfo` objects.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"vec"}}],[10,"get_limit","","Gets the number of items returned by `RecentChooser::get_items`\nand `RecentChooser::get_uris`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"i32"}}],[10,"get_local_only","","Gets whether only local resources should be shown in the recently used\nresources selector. See `RecentChooser::set_local_only`",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether `self` can select multiple items.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_icons","","Retrieves whether `self` should show an icon near the resource.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_not_found","","Retrieves whether `self` should show the recently used resources that\nwere not found.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_private","","Returns whether `self` should display recently used resources\nregistered as private.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_tips","","Gets whether `self` should display tooltips containing the full path\nof a recently user resource.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_sort_type","","Gets the value set by `RecentChooser::set_sort_type`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"recentsorttype"}}],[10,"list_filters","","Gets the `RecentFilter` objects held by `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"vec"}}],[10,"remove_filter","","Removes `filter` from the list of `RecentFilter` objects held by `self`.\n## `filter`\na `RecentFilter`",339,{"inputs":[{"name":"recentchooserext"},{"name":"recentfilter"}],"output":null}],[10,"select_all","","Selects all the items inside `self`, if the `self` supports\nmultiple selection.",339,{"inputs":[{"name":"recentchooserext"}],"output":null}],[10,"select_uri","","Selects `uri` inside `self`.\n## `uri`\na URI",339,{"inputs":[{"name":"recentchooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_current_uri","","Sets `uri` as the current URI for `self`.\n## `uri`\na URI",339,{"inputs":[{"name":"recentchooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_filter","","Sets `filter` as the current `RecentFilter` object used by `self`\nto affect the displayed recently used resources.\n## `filter`\na `RecentFilter`",339,{"inputs":[{"name":"recentchooserext"},{"name":"option"}],"output":null}],[10,"set_limit","","Sets the number of items that should be returned by\n`RecentChooser::get_items` and `RecentChooser::get_uris`.\n## `limit`\na positive integer, or -1 for all items",339,{"inputs":[{"name":"recentchooserext"},{"name":"i32"}],"output":null}],[10,"set_local_only","","Sets whether only local resources, that is resources using the file:// URI\nscheme, should be shown in the recently used resources selector. If\n`local_only` is `true` (the default) then the shown resources are guaranteed\nto be accessible through the operating system native file system.\n## `local_only`\n`true` if only local files can be shown",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether `self` can select multiple items.\n## `select_multiple`\n`true` if `self` can select more than one item",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_icons","","Sets whether `self` should show an icon near the resource when\ndisplaying it.\n## `show_icons`\nwhether to show an icon near the resource",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_not_found","","Sets whether `self` should display the recently used resources that\nit didn’t find. This only applies to local resources.\n## `show_not_found`\nwhether to show the local items we didn’t find",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_private","","Whether to show recently used resources marked registered as private.\n## `show_private`\n`true` to show private items, `false` otherwise",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_tips","","Sets whether to show a tooltips containing the full path of each\nrecently used resource in a `RecentChooser` widget.\n## `show_tips`\n`true` if tooltips should be shown",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_sort_type","","Changes the sorting order of the recently used resources list displayed by\n`self`.\n## `sort_type`\nsort order that the chooser should use",339,{"inputs":[{"name":"recentchooserext"},{"name":"recentsorttype"}],"output":null}],[10,"unselect_all","","Unselects all the items inside `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":null}],[10,"unselect_uri","","Unselects `uri` inside `self`.\n## `uri`\na URI",339,{"inputs":[{"name":"recentchooserext"},{"name":"str"}],"output":null}],[8,"ScaleButtonExt","","Trait containing all `ScaleButton` methods.",null,null],[10,"get_adjustment","","Gets the `Adjustment` associated with the `ScaleButton`’s scale.\nSee `RangeExt::get_adjustment` for details.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"adjustment"}}],[10,"get_minus_button","","Retrieves the minus button of the `ScaleButton`.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"option"}}],[10,"get_plus_button","","Retrieves the plus button of the `ScaleButton`.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"option"}}],[10,"get_popup","","Retrieves the popup of the `ScaleButton`.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"option"}}],[10,"get_value","","Gets the current value of the scale button.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the `Adjustment` to be used as a model\nfor the `ScaleButton`’s scale.\nSee `RangeExt::set_adjustment` for details.\n## `adjustment`\na `Adjustment`",340,{"inputs":[{"name":"scalebuttonext"},{"name":"adjustment"}],"output":null}],[10,"set_icons","","Sets the icons to be used by the scale button.\nFor details, see the `ScaleButton:icons` property.\n## `icons`\na `None`-terminated array of icon names",340,null],[10,"set_value","","Sets the current value of the scale; if the value is outside\nthe minimum or maximum range values, it will be clamped to fit\ninside them. The scale button emits the `ScaleButton::value-changed`\nsignal if the value changes.\n## `value`\nnew value of the scale button",340,{"inputs":[{"name":"scalebuttonext"},{"name":"f64"}],"output":null}],[8,"ScrollableExt","","Trait containing all `Scrollable` methods.",null,null],[10,"get_hadjustment","","Retrieves the `Adjustment` used for horizontal scrolling.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"option"}}],[10,"get_hscroll_policy","","Gets the horizontal `ScrollablePolicy`.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"scrollablepolicy"}}],[10,"get_vadjustment","","Retrieves the `Adjustment` used for vertical scrolling.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"option"}}],[10,"get_vscroll_policy","","Gets the vertical `ScrollablePolicy`.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"scrollablepolicy"}}],[10,"set_hadjustment","","Sets the horizontal adjustment of the `Scrollable`.\n## `hadjustment`\na `Adjustment`",341,{"inputs":[{"name":"scrollableext"},{"name":"option"}],"output":null}],[10,"set_hscroll_policy","","Sets the `ScrollablePolicy` to determine whether\nhorizontal scrolling should start below the minimum width or\nbelow the natural width.\n## `policy`\nthe horizontal `ScrollablePolicy`",341,{"inputs":[{"name":"scrollableext"},{"name":"scrollablepolicy"}],"output":null}],[10,"set_vadjustment","","Sets the vertical adjustment of the `Scrollable`.\n## `vadjustment`\na `Adjustment`",341,{"inputs":[{"name":"scrollableext"},{"name":"option"}],"output":null}],[10,"set_vscroll_policy","","Sets the `ScrollablePolicy` to determine whether\nvertical scrolling should start below the minimum height or\nbelow the natural height.\n## `policy`\nthe vertical `ScrollablePolicy`",341,{"inputs":[{"name":"scrollableext"},{"name":"scrollablepolicy"}],"output":null}],[8,"ScrolledWindowExt","","Trait containing all `ScrolledWindow` methods.",null,null],[10,"add_with_viewport","","Used to add children without native scrolling capabilities. This\nis simply a convenience function; it is equivalent to adding the\nunscrollable child to a viewport, then adding the viewport to the\nscrolled window. If a child has native scrolling, use\n`ContainerExt::add` instead of this function.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"t"}],"output":null}],[10,"get_capture_button_press","","Return whether button presses are captured during kinetic\nscrolling. See `ScrolledWindowExt::set_capture_button_press`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"bool"}}],[10,"get_hadjustment","","Returns the horizontal scrollbar’s adjustment, used to connect the\nhorizontal scrollbar to the child widget’s horizontal scroll\nfunctionality.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"get_hscrollbar","","Returns the horizontal scrollbar of `self`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"get_kinetic_scrolling","","Returns the specified kinetic scrolling behavior.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"bool"}}],[10,"get_min_content_height","","Gets the minimal content height of `self`, or -1 if not set.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"i32"}}],[10,"get_min_content_width","","Gets the minimum content width of `self`, or -1 if not set.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"i32"}}],[10,"get_overlay_scrolling","","Returns whether overlay scrolling is enabled for this scrolled window.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"bool"}}],[10,"get_placement","","Gets the placement of the contents with respect to the scrollbars\nfor the scrolled window. See `ScrolledWindowExt::set_placement`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"cornertype"}}],[10,"get_policy","","Retrieves the current policy values for the horizontal and vertical\nscrollbars. See `ScrolledWindowExt::set_policy`.\n## `hscrollbar_policy`\nlocation to store the policy\n for the horizontal scrollbar, or `None`\n## `vscrollbar_policy`\nlocation to store the policy\n for the vertical scrollbar, or `None`",342,null],[10,"get_shadow_type","","Gets the shadow type of the scrolled window. See\n`ScrolledWindowExt::set_shadow_type`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"shadowtype"}}],[10,"get_vadjustment","","Returns the vertical scrollbar’s adjustment, used to connect the\nvertical scrollbar to the child widget’s vertical scroll functionality.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"get_vscrollbar","","Returns the vertical scrollbar of `self`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"set_capture_button_press","","Changes the behaviour of `self` wrt. to the initial\nevent that possibly starts kinetic scrolling. When `capture_button_press`\nis set to `true`, the event is captured by the scrolled window, and\nthen later replayed if it is meant to go to the child widget.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"bool"}],"output":null}],[10,"set_hadjustment","","Sets the `Adjustment` for the horizontal scrollbar.\n## `hadjustment`\nhorizontal scroll adjustment",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"adjustment"}],"output":null}],[10,"set_kinetic_scrolling","","Turns kinetic scrolling on or off.\nKinetic scrolling only applies to devices with source\n`gdk::InputSource::Touchscreen`.\n## `kinetic_scrolling`\n`true` to enable kinetic scrolling",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"bool"}],"output":null}],[10,"set_min_content_height","","Sets the minimum height that `self` should keep visible.\nNote that this can and (usually will) be smaller than the minimum\nsize of the content.\n## `height`\nthe minimal content height",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"i32"}],"output":null}],[10,"set_min_content_width","","Sets the minimum width that `self` should keep visible.\nNote that this can and (usually will) be smaller than the minimum\nsize of the content.\n## `width`\nthe minimal content width",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"i32"}],"output":null}],[10,"set_overlay_scrolling","","Enables or disables overlay scrolling for this scrolled window.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"bool"}],"output":null}],[10,"set_placement","","Sets the placement of the contents with respect to the scrollbars\nfor the scrolled window.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"cornertype"}],"output":null}],[10,"set_policy","","Sets the scrollbar policy for the horizontal and vertical scrollbars.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"policytype"},{"name":"policytype"}],"output":null}],[10,"set_shadow_type","","Changes the type of shadow drawn around the contents of\n`self`.\n## `type_`\nkind of shadow to draw around scrolled window contents",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"shadowtype"}],"output":null}],[10,"set_vadjustment","","Sets the `Adjustment` for the vertical scrollbar.\n## `vadjustment`\nvertical scroll adjustment",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"adjustment"}],"output":null}],[10,"unset_placement","","Unsets the placement of the contents with respect to the scrollbars\nfor the scrolled window. If no window placement is set for a scrolled\nwindow, it defaults to `CornerType::TopLeft`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":null}],[8,"ToggleButtonExt","","Trait containing all `ToggleButton` methods.",null,null],[10,"get_active","","Queries a `ToggleButton` and returns its current state. Returns `true` if\nthe toggle button is pressed in and `false` if it is raised.",343,{"inputs":[{"name":"togglebuttonext"}],"output":{"name":"bool"}}],[10,"get_inconsistent","","Gets the value set by `ToggleButtonExt::set_inconsistent`.",343,{"inputs":[{"name":"togglebuttonext"}],"output":{"name":"bool"}}],[10,"get_mode","","Retrieves whether the button is displayed as a separate indicator\nand label. See `ToggleButtonExt::set_mode`.",343,{"inputs":[{"name":"togglebuttonext"}],"output":{"name":"bool"}}],[10,"set_active","","Sets the status of the toggle button. Set to `true` if you want the\n`ToggleButton` to be “pressed in”, and `false` to raise it.\nThis action causes the `ToggleButton::toggled` signal and the\n`Button::clicked` signal to be emitted.\n## `is_active`\n`true` or `false`.",343,{"inputs":[{"name":"togglebuttonext"},{"name":"bool"}],"output":null}],[10,"set_inconsistent","","If the user has selected a range of elements (such as some text or\nspreadsheet cells) that are affected by a toggle button, and the\ncurrent values in that range are inconsistent, you may want to\ndisplay the toggle in an “in between” state. This function turns on\n“in between” display. Normally you would turn off the inconsistent\nstate again if the user toggles the toggle button. This has to be\ndone manually, `ToggleButtonExt::set_inconsistent` only affects\nvisual appearance, it doesn’t affect the semantics of the button.\n## `setting`\n`true` if state is inconsistent",343,{"inputs":[{"name":"togglebuttonext"},{"name":"bool"}],"output":null}],[10,"set_mode","","Sets whether the button is displayed as a separate indicator and label.\nYou can call this function on a checkbutton or a radiobutton with\n`draw_indicator` = `false` to make the button look like a normal button",343,{"inputs":[{"name":"togglebuttonext"},{"name":"bool"}],"output":null}],[10,"toggled","","Emits the `ToggleButton::toggled` signal on the\n`ToggleButton`. There is no good reason for an\napplication ever to call this function.",343,{"inputs":[{"name":"togglebuttonext"}],"output":null}],[8,"ToolButtonExt","","Trait containing all `ToolButton` methods.",null,null],[10,"get_icon_name","","Returns the name of the themed icon for the tool button,\nsee `ToolButtonExt::set_icon_name`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_icon_widget","","Return the widget used as icon widget on `self`.\nSee `ToolButtonExt::set_icon_widget`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_label","","Returns the label used by the tool button, or `None` if the tool button\ndoesn’t have a label. or uses a the label from a stock item. The returned\nstring is owned by GTK+, and must not be modified or freed.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_label_widget","","Returns the widget used as label on `self`.\nSee `ToolButtonExt::set_label_widget`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_stock_id","","Returns the name of the stock item. See `ToolButtonExt::set_stock_id`.\nThe returned string is owned by GTK+ and must not be freed or modifed.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_use_underline","","Returns whether underscores in the label property are used as mnemonics\non menu items on the overflow menu. See `ToolButtonExt::set_use_underline`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"bool"}}],[10,"set_icon_name","","Sets the icon for the tool button from a named themed icon.\nSee the docs for `IconTheme` for more details.\nThe “icon_name” property only has an effect if not\noverridden by non-`None` “label”, “icon_widget” and “stock_id”\nproperties.\n## `icon_name`\nthe name of the themed icon",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_icon_widget","","Sets `icon` as the widget used as icon on `self`. If `icon_widget` is\n`None` the icon is determined by the “stock_id” property. If the\n“stock_id” property is also `None`, `self` will not have an icon.\n## `icon_widget`\nthe widget used as icon, or `None`",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_label","","Sets `label` as the label used for the tool button. The “label” property\nonly has an effect if not overridden by a non-`None` “label_widget” property.\nIf both the “label_widget” and “label” properties are `None`, the label\nis determined by the “stock_id” property. If the “stock_id” property is also\n`None`, `self` will not have a label.\n## `label`\na string that will be used as label, or `None`.",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_label_widget","","Sets `label_widget` as the widget that will be used as the label\nfor `self`. If `label_widget` is `None` the “label” property is used\nas label. If “label” is also `None`, the label in the stock item\ndetermined by the “stock_id” property is used as label. If\n“stock_id” is also `None`, `self` does not have a label.\n## `label_widget`\nthe widget used as label, or `None`",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_stock_id","","Sets the name of the stock item. See `ToolButton::new_from_stock`.\nThe stock_id property only has an effect if not\noverridden by non-`None` “label” and “icon_widget” properties.",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_use_underline","","If set, an underline in the label property indicates that the next character\nshould be used for the mnemonic accelerator key in the overflow menu. For\nexample, if the label property is “_Open” and `use_underline` is `true`,\nthe label on the tool button will be “Open” and the item on the overflow\nmenu will have an underlined “O”.",344,{"inputs":[{"name":"toolbuttonext"},{"name":"bool"}],"output":null}],[8,"ToolItemExt","","Trait containing all `ToolItem` methods.",null,null],[10,"get_expand","","Returns whether `self` is allocated extra space.\nSee `ToolItemExt::set_expand`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_homogeneous","","Returns whether `self` is the same size as other homogeneous\nitems. See `ToolItemExt::set_homogeneous`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_icon_size","","Returns the icon size used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out what size icons\nthey should use.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"i32"}}],[10,"get_is_important","","Returns whether `self` is considered important. See\n`ToolItemExt::set_is_important`",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_orientation","","Returns the orientation used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out what size icons\nthey should use.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"orientation"}}],[10,"get_proxy_menu_item","","If `menu_item_id` matches the string passed to\n`ToolItemExt::set_proxy_menu_item` return the corresponding `MenuItem`.",345,{"inputs":[{"name":"toolitemext"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_relief_style","","Returns the relief style of `self`. See `ButtonExt::set_relief`.\nCustom subclasses of `ToolItem` should call this function in the handler\nof the `ToolItem::toolbar_reconfigured` signal to find out the\nrelief style of buttons.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"reliefstyle"}}],[10,"get_text_alignment","","Returns the text alignment used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out how text should\nbe aligned.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Returns the text orientation used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out how text should\nbe orientated.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Returns the size group used for labels in `self`.\nCustom subclasses of `ToolItem` should call this function\nand use the size group for labels.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"option"}}],[10,"get_toolbar_style","","Returns the toolbar style used for `self`. Custom subclasses of\n`ToolItem` should call this function in the handler of the\n`ToolItem`::toolbar_reconfigured signal to find out in what style\nthe toolbar is displayed and change themselves accordingly",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"toolbarstyle"}}],[10,"get_use_drag_window","","Returns whether `self` has a drag window. See\n`ToolItemExt::set_use_drag_window`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_visible_horizontal","","Returns whether the `self` is visible on toolbars that are\ndocked horizontally.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_visible_vertical","","Returns whether `self` is visible when the toolbar is docked vertically.\nSee `ToolItemExt::set_visible_vertical`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"rebuild_menu","","Calling this function signals to the toolbar that the\noverflow menu item for `self` has changed. If the\noverflow menu is visible when this function it called,\nthe menu will be rebuilt.",345,{"inputs":[{"name":"toolitemext"}],"output":null}],[10,"retrieve_proxy_menu_item","","Returns the `MenuItem` that was last set by\n`ToolItemExt::set_proxy_menu_item`, ie. the `MenuItem`\nthat is going to appear in the overflow menu.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"option"}}],[10,"set_expand","","Sets whether `self` is allocated extra space when there\nis more room on the toolbar then needed for the items. The\neffect is that the item gets bigger when the toolbar gets bigger\nand smaller when the toolbar gets smaller.\n## `expand`\nWhether `self` is allocated extra space",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_homogeneous","","Sets whether `self` is to be allocated the same size as other\nhomogeneous items. The effect is that all homogeneous items will have\nthe same width as the widest of the items.\n## `homogeneous`\nwhether `self` is the same size as other homogeneous items",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_is_important","","Sets whether `self` should be considered important. The `ToolButton`\nclass uses this property to determine whether to show or hide its label\nwhen the toolbar style is `ToolbarStyle::BothHoriz`. The result is that\nonly tool buttons with the “is_important” property set have labels, an\neffect known as “priority text”\n## `is_important`\nwhether the tool item should be considered important",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_proxy_menu_item","","Sets the `MenuItem` used in the toolbar overflow menu. The\n`menu_item_id` is used to identify the caller of this function and\nshould also be used with `ToolItemExt::get_proxy_menu_item`.\n## `menu_item_id`\na string used to identify `menu_item`\n## `menu_item`\na `MenuItem` to be used in the overflow menu",345,{"inputs":[{"name":"toolitemext"},{"name":"str"},{"name":"t"}],"output":null}],[10,"set_tooltip_markup","","Sets the markup text to be displayed as tooltip on the item.\nSee `Widget::set_tooltip_markup`.\n## `markup`\nmarkup text to be used as tooltip for `self`",345,{"inputs":[{"name":"toolitemext"},{"name":"str"}],"output":null}],[10,"set_tooltip_text","","Sets the text to be displayed as tooltip on the item.\nSee `Widget::set_tooltip_text`.\n## `text`\ntext to be used as tooltip for `self`",345,{"inputs":[{"name":"toolitemext"},{"name":"str"}],"output":null}],[10,"set_use_drag_window","","Sets whether `self` has a drag window. When `true` the\ntoolitem can be used as a drag source through `Widget::drag_source_set`.\nWhen `self` has a drag window it will intercept all events,\neven those that would otherwise be sent to a child of `self`.\n## `use_drag_window`\nWhether `self` has a drag window.",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_visible_horizontal","","Sets whether `self` is visible when the toolbar is docked horizontally.\n## `visible_horizontal`\nWhether `self` is visible when in horizontal mode",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_visible_vertical","","Sets whether `self` is visible when the toolbar is docked\nvertically. Some tool items, such as text entries, are too wide to be\nuseful on a vertically docked toolbar. If `visible_vertical` is `false`\n`self` will not appear on toolbars that are docked vertically.\n## `visible_vertical`\nwhether `self` is visible when the toolbar\nis in vertical mode",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"toolbar_reconfigured","","Emits the signal `ToolItem::toolbar_reconfigured` on `self`.\n`Toolbar` and other `ToolShell` implementations use this function\nto notify children, when some aspect of their configuration changes.",345,{"inputs":[{"name":"toolitemext"}],"output":null}],[8,"ToolShellExt","","Trait containing all `ToolShell` methods.",null,null],[10,"get_icon_size","","Retrieves the icon size for the tool shell. Tool items must not call this\nfunction directly, but rely on `ToolItemExt::get_icon_size` instead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"i32"}}],[10,"get_orientation","","Retrieves the current orientation for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_orientation`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"orientation"}}],[10,"get_relief_style","","Returns the relief style of buttons on `self`. Tool items must not call this\nfunction directly, but rely on `ToolItemExt::get_relief_style` instead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"reliefstyle"}}],[10,"get_style","","Retrieves whether the tool shell has text, icons, or both. Tool items must\nnot call this function directly, but rely on `ToolItemExt::get_toolbar_style`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"toolbarstyle"}}],[10,"get_text_alignment","","Retrieves the current text alignment for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_text_alignment`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Retrieves the current text orientation for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_text_orientation`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Retrieves the current text size group for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_text_size_group`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"option"}}],[10,"rebuild_menu","","Calling this function signals the tool shell that the overflow menu item for\ntool items have changed. If there is an overflow menu and if it is visible\nwhen this function it called, the menu will be rebuilt.",346,{"inputs":[{"name":"toolshellext"}],"output":null}],[8,"WindowExt","","Trait containing all `Window` methods.",null,null],[10,"activate_default","","Activates the default widget for the window, unless the current\nfocused widget has been configured to receive the default action\n(see `WidgetExt::set_receives_default`), in which case the\nfocused widget is activated.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"activate_focus","","Activates the current focused widget within the window.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"add_accel_group","","Associate `accel_group` with `self`, such that calling\n`gtk_accel_groups_activate` on `self` will activate accelerators\nin `accel_group`.\n## `accel_group`\na `AccelGroup`",347,{"inputs":[{"name":"windowext"},{"name":"accelgroup"}],"output":null}],[10,"add_mnemonic","","Adds a mnemonic to this window.\n## `keyval`\nthe mnemonic\n## `target`\nthe widget that gets activated by the mnemonic",347,{"inputs":[{"name":"windowext"},{"name":"u32"},{"name":"t"}],"output":null}],[10,"begin_move_drag","","Starts moving a window. This function is used if an application has\nwindow movement grips. When GDK can support it, the window movement\nwill be done using the standard mechanism for the\n[window manager][gtk-X11-arch] or windowing\nsystem. Otherwise, GDK will try to emulate window movement,\npotentially not all that well, depending on the windowing system.\n## `button`\nmouse button that initiated the drag\n## `root_x`\nX position where the user clicked to initiate the drag, in root window coordinates\n## `root_y`\nY position where the user clicked to initiate the drag\n## `timestamp`\ntimestamp from the click event that initiated the drag",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_resize_drag","","Starts resizing a window. This function is used if an application\nhas window resizing controls. When GDK can support it, the resize\nwill be done using the standard mechanism for the\n[window manager][gtk-X11-arch] or windowing\nsystem. Otherwise, GDK will try to emulate window resizing,\npotentially not all that well, depending on the windowing system.\n## `edge`\nposition of the resize control\n## `button`\nmouse button that initiated the drag\n## `root_x`\nX position where the user clicked to initiate the drag, in root window coordinates\n## `root_y`\nY position where the user clicked to initiate the drag\n## `timestamp`\ntimestamp from the click event that initiated the drag",347,{"inputs":[{"name":"windowext"},{"name":"windowedge"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"close","","Requests that the window is closed, similar to what happens\nwhen a window manager close button is clicked.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"deiconify","","Asks to deiconify (i.e. unminimize) the specified `self`. Note\nthat you shouldn’t assume the window is definitely deiconified\nafterward, because other entities (e.g. the user or\n[window manager][gtk-X11-arch])) could iconify it\nagain before your code which assumes deiconification gets to run.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"fullscreen","","Asks to place `self` in the fullscreen state. Note that you\nshouldn’t assume the window is definitely full screen afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could unfullscreen it\nagain, and not all window managers honor requests to fullscreen\nwindows. But normally the window will end up fullscreen. Just\ndon’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"get_accept_focus","","Gets the value set by `WindowExt::set_accept_focus`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_application","","Gets the `Application` associated with the window (if any).",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_attached_to","","Fetches the attach widget for this window. See\n`WindowExt::set_attached_to`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_decorated","","Returns whether the window has been set to have decorations\nsuch as a title bar via `WindowExt::set_decorated`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_default_size","","Gets the default size of the window. A value of -1 for the width or\nheight indicates that a default size has not been explicitly set\nfor that dimension, so the “natural” size of the window will be\nused.\n## `width`\nlocation to store the default width, or `None`\n## `height`\nlocation to store the default height, or `None`",347,null],[10,"get_default_widget","","Returns the default widget for `self`. See `WindowExt::set_default`\nfor more details.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_deletable","","Returns whether the window has been set to have a close button\nvia `WindowExt::set_deletable`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_destroy_with_parent","","Returns whether the window will be destroyed with its transient parent. See\ngtk_window_set_destroy_with_parent ().",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_focus","","Retrieves the current focused widget within the window.\nNote that this is the widget that would have the focus\nif the toplevel window focused; if the toplevel window\nis not focused then `gtk_widget_has_focus (widget)` will\nnot be `true` for the widget.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_focus_on_map","","Gets the value set by `WindowExt::set_focus_on_map`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_focus_visible","","Gets the value of the `Window:focus-visible` property.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_gravity","","Gets the value set by `WindowExt::set_gravity`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"gravity"}}],[10,"get_has_resize_grip","","Determines whether the window may have a resize grip.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_hide_titlebar_when_maximized","","Returns whether the window has requested to have its titlebar hidden\nwhen maximized. See gtk_window_set_hide_titlebar_when_maximized ().",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_icon","","Gets the value set by `WindowExt::set_icon` (or if you&#39;ve\ncalled `WindowExt::set_icon_list`, gets the first icon in\nthe icon list).",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_icon_list","","Retrieves the list of icons set by `WindowExt::set_icon_list`.\nThe list is copied, but the reference count on each\nmember won’t be incremented.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"vec"}}],[10,"get_icon_name","","Returns the name of the themed icon for the window,\nsee `WindowExt::set_icon_name`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_mnemonic_modifier","","Returns the mnemonic modifier for this window. See\n`WindowExt::set_mnemonic_modifier`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"modifiertype"}}],[10,"get_mnemonics_visible","","Gets the value of the `Window:mnemonics-visible` property.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_modal","","Returns whether the window is modal. See `WindowExt::set_modal`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_opacity","","Fetches the requested opacity for this window. See\n`WindowExt::set_opacity`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"f64"}}],[10,"get_position","","This function returns the position you need to pass to\n`WindowExt::move` to keep `self` in its current position.\nThis means that the meaning of the returned value varies with\nwindow gravity. See `WindowExt::move` for more details.",347,null],[10,"get_resizable","","Gets the value set by `WindowExt::set_resizable`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_resize_grip_area","","If a window has a resize grip, this will retrieve the grip\nposition, width and height into the specified `gdk::Rectangle`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_role","","Returns the role of the window. See `WindowExt::set_role` for\nfurther explanation.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_screen","","Returns the `gdk::Screen` associated with `self`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_size","","Obtains the current size of `self`. If `self` is not onscreen,\nit returns the size GTK+ will suggest to the\n[window manager][gtk-X11-arch]\nfor the initial window\nsize (but this is not reliably the same as the size the window\nmanager will actually select). The size obtained by\n`WindowExt::get_size` is the last size received in a\n`gdk::EventConfigure`, that is, GTK+ uses its locally-stored size,\nrather than querying the X server for the size. As a result, if you\ncall `WindowExt::resize` then immediately call\n`WindowExt::get_size`, the size won’t have taken effect yet. After\nthe window manager processes the resize request, GTK+ receives\nnotification that the size has changed via a configure event, and\nthe size of the window gets updated.",347,null],[10,"get_skip_pager_hint","","Gets the value set by `WindowExt::set_skip_pager_hint`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_skip_taskbar_hint","","Gets the value set by `WindowExt::set_skip_taskbar_hint`",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_title","","Retrieves the title of the window. See `WindowExt::set_title`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_titlebar","","Returns the custom titlebar that has been set with\n`WindowExt::set_titlebar`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_transient_for","","Fetches the transient parent for this window. See\n`WindowExt::set_transient_for`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_type_hint","","Gets the type hint for this window. See `WindowExt::set_type_hint`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"windowtypehint"}}],[10,"get_urgency_hint","","Gets the value set by `WindowExt::set_urgency_hint`",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_window_type","","Gets the type of the window. See `WindowType`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"windowtype"}}],[10,"has_group","","Returns whether `self` has an explicit window group.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"has_toplevel_focus","","Returns whether the input focus is within this `Window`.\nFor real toplevel windows, this is identical to `WindowExt::is_active`,\nbut for embedded windows, like `Plug`, the results will differ.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"iconify","","Asks to iconify (i.e. minimize) the specified `self`. Note that\nyou shouldn’t assume the window is definitely iconified afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could deiconify it\nagain, or there may not be a window manager in which case\niconification isn’t possible, etc. But normally the window will end\nup iconified. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"is_active","","Returns whether the window is part of the current active toplevel.\n(That is, the toplevel window receiving keystrokes.)\nThe return value is `true` if the window is active toplevel\nitself, but also if it is, say, a `Plug` embedded in the active toplevel.\nYou might use this function if you wanted to draw a widget\ndifferently in an active window from a widget in an inactive window.\nSee `WindowExt::has_toplevel_focus`",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"is_maximized","","Retrieves the current maximized state of `self`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"maximize","","Asks to maximize `self`, so that it becomes full-screen. Note that\nyou shouldn’t assume the window is definitely maximized afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could unmaximize it\nagain, and not all window managers support maximization. But\nnormally the window will end up maximized. Just don’t write code\nthat crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"mnemonic_activate","","Activates the targets associated with the mnemonic.\n## `keyval`\nthe mnemonic\n## `modifier`\nthe modifiers",347,{"inputs":[{"name":"windowext"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"move_","","",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"parse_geometry","","Parses a standard X Window System geometry string - see the\nmanual page for X (type “man X”) for details on this.\n`WindowExt::parse_geometry` does work on all GTK+ ports\nincluding Win32 but is primarily intended for an X environment.",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"present","","Presents a window to the user. This may mean raising the window\nin the stacking order, deiconifying it, moving it to the current\ndesktop, and/or giving it the keyboard focus, possibly dependent\non the user’s platform, window manager, and preferences.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"present_with_time","","Presents a window to the user in response to a user interaction.\nIf you need to present a window without a timestamp, use\n`WindowExt::present`. See `WindowExt::present` for details.\n## `timestamp`\nthe timestamp of the user interaction (typically a\n button or key press event) which triggered this call",347,{"inputs":[{"name":"windowext"},{"name":"u32"}],"output":null}],[10,"remove_accel_group","","Reverses the effects of `WindowExt::add_accel_group`.\n## `accel_group`\na `AccelGroup`",347,{"inputs":[{"name":"windowext"},{"name":"accelgroup"}],"output":null}],[10,"remove_mnemonic","","Removes a mnemonic from this window.\n## `keyval`\nthe mnemonic\n## `target`\nthe widget that gets activated by the mnemonic",347,{"inputs":[{"name":"windowext"},{"name":"u32"},{"name":"t"}],"output":null}],[10,"reshow_with_initial_size","","Hides `self`, then reshows it, resetting the\ndefault size and position of the window. Used\nby GUI builders only.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"resize","","Resizes the window as if the user had done so, obeying geometry\nconstraints. The default geometry constraint is that windows may\nnot be smaller than their size request; to override this\nconstraint, call `WidgetExt::set_size_request` to set the window&#39;s\nrequest to a smaller value.",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"resize_grip_is_visible","","Determines whether a resize grip is visible for the specified window.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"resize_to_geometry","","Like `WindowExt::resize`, but `width` and `height` are interpreted\nin terms of the base size and increment set with\ngtk_window_set_geometry_hints.\n## `width`\nwidth in resize increments to resize the window to\n## `height`\nheight in resize increments to resize the window to",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_accept_focus","","Windows may set a hint asking the desktop environment not to receive\nthe input focus. This function sets this hint.\n## `setting`\n`true` to let this window receive input focus",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_application","","Sets or unsets the `Application` associated with the window.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_attached_to","","Marks `self` as attached to `attach_widget`. This creates a logical binding\nbetween the window and the widget it belongs to, which is used by GTK+ to\npropagate information such as styling or accessibility to `self` as if it\nwas a children of `attach_widget`.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_decorated","","By default, windows are decorated with a title bar, resize\ncontrols, etc. Some [window managers][gtk-X11-arch]\nallow GTK+ to disable these decorations, creating a\nborderless window. If you set the decorated property to `false`\nusing this function, GTK+ will do its best to convince the window\nmanager not to decorate the window. Depending on the system, this\nfunction may not have any effect when called on a window that is\nalready visible, so you should call it before calling `WidgetExt::show`.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_default","","The default widget is the widget that’s activated when the user\npresses Enter in a dialog (for example). This function sets or\nunsets the default widget for a `Window`. When setting (rather\nthan unsetting) the default widget it’s generally easier to call\n`WidgetExt::grab_default` on the widget. Before making a widget\nthe default widget, you must call `WidgetExt::set_can_default` on\nthe widget you’d like to make the default.\n## `default_widget`\nwidget to be the default, or `None`\n to unset the default widget for the toplevel",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_default_geometry","","Like `WindowExt::set_default_size`, but `width` and `height` are interpreted\nin terms of the base size and increment set with\ngtk_window_set_geometry_hints.\n## `width`\nwidth in resize increments, or -1 to unset the default width\n## `height`\nheight in resize increments, or -1 to unset the default height",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_default_size","","Sets the default size of a window. If the window’s “natural” size\n(its size request) is larger than the default, the default will be\nignored. More generally, if the default size does not obey the\ngeometry hints for the window (`WindowExt::set_geometry_hints` can\nbe used to set these explicitly), the default size will be clamped\nto the nearest permitted size.",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_deletable","","By default, windows have a close button in the window frame. Some\n[window managers][gtk-X11-arch] allow GTK+ to\ndisable this button. If you set the deletable property to `false`\nusing this function, GTK+ will do its best to convince the window\nmanager not to show a close button. Depending on the system, this\nfunction may not have any effect when called on a window that is\nalready visible, so you should call it before calling `WidgetExt::show`.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_destroy_with_parent","","If `setting` is `true`, then destroying the transient parent of `self`\nwill also destroy `self` itself. This is useful for dialogs that\nshouldn’t persist beyond the lifetime of the main window they&#39;re\nassociated with, for example.\n## `setting`\nwhether to destroy `self` with its transient parent",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_focus","","If `focus` is not the current focus widget, and is focusable, sets\nit as the focus widget for the window. If `focus` is `None`, unsets\nthe focus widget for this window. To set the focus to a particular\nwidget in the toplevel, it is usually more convenient to use\n`WidgetExt::grab_focus` instead of this function.\n## `focus`\nwidget to be the new focus widget, or `None` to unset\n any focus widget for the toplevel window.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_focus_on_map","","Windows may set a hint asking the desktop environment not to receive\nthe input focus when the window is mapped. This function sets this\nhint.\n## `setting`\n`true` to let this window receive input focus on map",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_focus_visible","","Sets the `Window:focus-visible` property.\n## `setting`\nthe new value",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_gravity","","Window gravity defines the meaning of coordinates passed to\n`WindowExt::move`. See `WindowExt::move` and `gdk::Gravity` for\nmore details.",347,{"inputs":[{"name":"windowext"},{"name":"gravity"}],"output":null}],[10,"set_has_resize_grip","","Sets whether `self` has a corner resize grip.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_has_user_ref_count","","Tells GTK+ whether to drop its extra reference to the window\nwhen `WidgetExt::destroy` is called.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_hide_titlebar_when_maximized","","If `setting` is `true`, then `self` will request that it’s titlebar\nshould be hidden when maximized.\nThis is useful for windows that don’t convey any information other\nthan the application name in the titlebar, to put the available\nscreen space to better use. If the underlying window system does not\nsupport the request, the setting will not have any effect.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_icon","","Sets up the icon representing a `Window`. This icon is used when\nthe window is minimized (also known as iconified). Some window\nmanagers or desktop environments may also place it in the window\nframe, or display it in other contexts.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_icon_from_file","","Sets the icon for `self`.\nWarns on failure if `err` is `None`.",347,{"inputs":[{"name":"windowext"},{"name":"t"}],"output":{"name":"result"}}],[10,"set_icon_list","","Sets up the icon representing a `Window`. The icon is used when\nthe window is minimized (also known as iconified). Some window\nmanagers or desktop environments may also place it in the window\nframe, or display it in other contexts.",347,null],[10,"set_icon_name","","Sets the icon for the window from a named themed icon. See\nthe docs for `IconTheme` for more details.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_keep_above","","Asks to keep `self` above, so that it stays on top. Note that\nyou shouldn’t assume the window is definitely above afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could not keep it above,\nand not all window managers support keeping windows above. But\nnormally the window will end kept above. Just don’t write code\nthat crashes if not.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_keep_below","","Asks to keep `self` below, so that it stays in bottom. Note that\nyou shouldn’t assume the window is definitely below afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could not keep it below,\nand not all window managers support putting windows below. But\nnormally the window will be kept below. Just don’t write code\nthat crashes if not.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_mnemonic_modifier","","Sets the mnemonic modifier for this window.\n## `modifier`\nthe modifier mask used to activate\n mnemonics on this window.",347,{"inputs":[{"name":"windowext"},{"name":"modifiertype"}],"output":null}],[10,"set_mnemonics_visible","","Sets the `Window:mnemonics-visible` property.\n## `setting`\nthe new value",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_modal","","Sets a window modal or non-modal. Modal windows prevent interaction\nwith other windows in the same application. To keep modal dialogs\non top of main application windows, use\n`WindowExt::set_transient_for` to make the dialog transient for the\nparent; most [window managers][gtk-X11-arch]\nwill then disallow lowering the dialog below the parent.\n## `modal`\nwhether the window is modal",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_opacity","","Request the windowing system to make `self` partially transparent,\nwith opacity 0 being fully transparent and 1 fully opaque. (Values\nof the opacity parameter are clamped to the [0,1] range.) On X11\nthis has any effect only on X screens with a compositing manager\nrunning. See `WidgetExt::is_composited`. On Windows it should work\nalways.",347,{"inputs":[{"name":"windowext"},{"name":"f64"}],"output":null}],[10,"set_position","","Sets a position constraint for this window. If the old or new\nconstraint is `WindowPosition::CenterAlways`, this will also cause\nthe window to be repositioned to satisfy the new constraint.\n## `position`\na position constraint.",347,{"inputs":[{"name":"windowext"},{"name":"windowposition"}],"output":null}],[10,"set_resizable","","Sets whether the user can resize a window. Windows are user resizable\nby default.\n## `resizable`\n`true` if the user can resize this window",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_role","","This function is only useful on X11, not with other GTK+ targets.",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":null}],[10,"set_screen","","Sets the `gdk::Screen` where the `self` is displayed; if\nthe window is already mapped, it will be unmapped, and\nthen remapped on the new screen.\n## `screen`\na `gdk::Screen`.",347,{"inputs":[{"name":"windowext"},{"name":"screen"}],"output":null}],[10,"set_skip_pager_hint","","Windows may set a hint asking the desktop environment not to display\nthe window in the pager. This function sets this hint.\n(A &quot;pager&quot; is any desktop navigation tool such as a workspace\nswitcher that displays a thumbnail representation of the windows\non the screen.)\n## `setting`\n`true` to keep this window from appearing in the pager",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_skip_taskbar_hint","","Windows may set a hint asking the desktop environment not to display\nthe window in the task bar. This function sets this hint.\n## `setting`\n`true` to keep this window from appearing in the task bar",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_startup_id","","Startup notification identifiers are used by desktop environment to\ntrack application startup, to provide user feedback and other\nfeatures. This function changes the corresponding property on the\nunderlying `gdk::Window`. Normally, startup identifier is managed\nautomatically and you should only use this function in special cases\nlike transferring focus from other processes. You should use this\nfunction before calling `WindowExt::present` or any equivalent\nfunction generating a window map event.",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":null}],[10,"set_title","","Sets the title of the `Window`. The title of a window will be\ndisplayed in its title bar; on the X Window System, the title bar\nis rendered by the [window manager][gtk-X11-arch],\nso exactly how the title appears to users may vary\naccording to a user’s exact configuration. The title should help a\nuser distinguish this window from other windows they may have\nopen. A good title might include the application name and current\ndocument filename, for example.\n## `title`\ntitle of the window",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":null}],[10,"set_titlebar","","Sets a custom titlebar for `self`.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_transient_for","","Dialog windows should be set transient for the main application\nwindow they were spawned from. This allows\n[window managers][gtk-X11-arch] to e.g. keep the\ndialog on top of the main window, or center the dialog over the\nmain window. `Dialog::new_with_buttons` and other convenience\nfunctions in GTK+ will sometimes call\n`WindowExt::set_transient_for` on your behalf.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_type_hint","","By setting the type hint for the window, you allow the window\nmanager to decorate and handle the window in a way which is\nsuitable to the function of the window in your application.",347,{"inputs":[{"name":"windowext"},{"name":"windowtypehint"}],"output":null}],[10,"set_urgency_hint","","Windows may set a hint asking the desktop environment to draw\nthe users attention to the window. This function sets this hint.\n## `setting`\n`true` to mark this window as urgent",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_wmclass","","Don’t use this function. It sets the X Window System “class” and\n“name” hints for a window. According to the ICCCM, you should\nalways set these to the same value for all windows in an\napplication, and GTK+ sets them to that value by default, so calling\nthis function is sort of pointless. However, you may want to call\n`WindowExt::set_role` on each window in your application, for the\nbenefit of the session manager. Setting the role allows the window\nmanager to restore window positions when loading a saved session.\n## `wmclass_name`\nwindow name hint\n## `wmclass_class`\nwindow class hint",347,{"inputs":[{"name":"windowext"},{"name":"str"},{"name":"str"}],"output":null}],[10,"stick","","Asks to stick `self`, which means that it will appear on all user\ndesktops. Note that you shouldn’t assume the window is definitely\nstuck afterward, because other entities (e.g. the user or\n[window manager][gtk-X11-arch] could unstick it\nagain, and some window managers do not support sticking\nwindows. But normally the window will end up stuck. Just don&#39;t\nwrite code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"unfullscreen","","Asks to toggle off the fullscreen state for `self`. Note that you\nshouldn’t assume the window is definitely not full screen\nafterward, because other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could fullscreen it\nagain, and not all window managers honor requests to unfullscreen\nwindows. But normally the window will end up restored to its normal\nstate. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"unmaximize","","Asks to unmaximize `self`. Note that you shouldn’t assume the\nwindow is definitely unmaximized afterward, because other entities\n(e.g. the user or [window manager][gtk-X11-arch])\ncould maximize it again, and not all window\nmanagers honor requests to unmaximize. But normally the window will\nend up unmaximized. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"unstick","","Asks to unstick `self`, which means that it will appear on only\none of the user’s desktops. Note that you shouldn’t assume the\nwindow is definitely unstuck afterward, because other entities\n(e.g. the user or [window manager][gtk-X11-arch]) could\nstick it again. But normally the window will\nend up stuck. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[8,"AppChooserExt","","Trait containing all `AppChooser` methods.",null,null],[10,"get_app_info","","Returns the currently selected application.",348,{"inputs":[{"name":"appchooserext"}],"output":{"name":"option"}}],[10,"get_content_type","","Returns the current value of the `AppChooser:content-type` property.",348,{"inputs":[{"name":"appchooserext"}],"output":{"name":"option"}}],[10,"refresh","","Reloads the list of applications.",348,{"inputs":[{"name":"appchooserext"}],"output":null}],[8,"ColorChooserExt","","Trait containing all `ColorChooser` methods.",null,null],[10,"get_rgba","","Gets the currently-selected color.\n## `color`\na `gdk::RGBA` to fill in with the current color",349,{"inputs":[{"name":"colorchooserext"}],"output":{"name":"gdkrgba"}}],[10,"set_rgba","","Sets the color.\n## `color`\nthe new color",349,{"inputs":[{"name":"colorchooserext"},{"name":"gdkrgba"}],"output":null}],[10,"get_use_alpha","","Returns whether the color chooser shows the alpha channel.",349,{"inputs":[{"name":"colorchooserext"}],"output":{"name":"bool"}}],[10,"set_use_alpha","","Sets whether or not the color chooser should use the alpha channel.\n## `use_alpha`\n`true` if color chooser should use alpha channel, `false` if not",349,{"inputs":[{"name":"colorchooserext"},{"name":"bool"}],"output":null}],[10,"add_palette","","Adds a palette to the color chooser. If `orientation` is horizontal,\nthe colors are grouped in rows, with `colors_per_line` colors\nin each row. If `horizontal` is `false`, the colors are grouped\nin columns instead.",349,{"inputs":[{"name":"colorchooserext"},{"name":"orientation"},{"name":"i32"},{"name":"vec"}],"output":null}],[8,"DialogExt","","",null,null],[10,"add_buttons","","Adds more buttons, same as calling `DialogExt::add_button`\nrepeatedly. The variable argument list should be `None`-terminated\nas with `Dialog::new_with_buttons`. Each button must have both\ntext and response ID.\n## `first_button_text`\nbutton text",350,null],[10,"add_action_widget","","",350,{"inputs":[{"name":"dialogext"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"add_button","","",350,{"inputs":[{"name":"dialogext"},{"name":"str"},{"name":"i32"}],"output":{"name":"widget"}}],[10,"get_action_area","","",350,{"inputs":[{"name":"dialogext"}],"output":{"name":"widget"}}],[10,"get_content_area","","",350,{"inputs":[{"name":"dialogext"}],"output":{"name":"box"}}],[10,"get_header_bar","","",350,{"inputs":[{"name":"dialogext"}],"output":{"name":"option"}}],[10,"get_response_for_widget","","",350,{"inputs":[{"name":"dialogext"},{"name":"t"}],"output":{"name":"i32"}}],[10,"get_widget_for_response","","",350,{"inputs":[{"name":"dialogext"},{"name":"i32"}],"output":{"name":"option"}}],[10,"response","","",350,{"inputs":[{"name":"dialogext"},{"name":"i32"}],"output":null}],[10,"run","","",350,{"inputs":[{"name":"dialogext"}],"output":{"name":"i32"}}],[10,"set_default_response","","",350,{"inputs":[{"name":"dialogext"},{"name":"i32"}],"output":null}],[10,"set_response_sensitive","","",350,{"inputs":[{"name":"dialogext"},{"name":"i32"},{"name":"bool"}],"output":null}],[8,"TreeModelExt","","",null,null],[10,"get_value","","Initializes and sets `value` to that at `column`.",351,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"},{"name":"i32"}],"output":{"name":"value"}}],[10,"filter_new","","",351,{"inputs":[{"name":"treemodelext"},{"name":"option"}],"output":{"name":"option"}}],[10,"get_column_type","","",351,{"inputs":[{"name":"treemodelext"},{"name":"i32"}],"output":{"name":"type"}}],[10,"get_flags","","",351,{"inputs":[{"name":"treemodelext"}],"output":{"name":"treemodelflags"}}],[10,"get_iter","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_iter_first","","",351,{"inputs":[{"name":"treemodelext"}],"output":{"name":"option"}}],[10,"get_iter_from_string","","",351,{"inputs":[{"name":"treemodelext"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_n_columns","","",351,{"inputs":[{"name":"treemodelext"}],"output":{"name":"i32"}}],[10,"get_path","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"treepath"}}],[10,"get_string_from_iter","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"iter_children","","",351,{"inputs":[{"name":"treemodelext"},{"name":"option"}],"output":{"name":"option"}}],[10,"iter_has_child","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_n_children","","",351,{"inputs":[{"name":"treemodelext"},{"name":"option"}],"output":{"name":"i32"}}],[10,"iter_next","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_nth_child","","",351,{"inputs":[{"name":"treemodelext"},{"name":"option"},{"name":"i32"}],"output":{"name":"option"}}],[10,"iter_parent","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"iter_previous","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"row_changed","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_deleted","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treepath"}],"output":null}],[10,"row_has_child_toggled","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_inserted","","",351,{"inputs":[{"name":"treemodelext"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"sort_new_with_model","","",351,{"inputs":[{"name":"treemodelext"}],"output":{"name":"option"}}],[8,"TreeSortableExt","","",null,null],[10,"set_default_sort_func","","Sets the default comparison function used when sorting to be `sort_func`.\nIf the current sort column id of `self` is\n`GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID`, then the model will sort using\nthis function.",352,{"inputs":[{"name":"treesortableext"},{"name":"f"}],"output":null}],[10,"set_sort_func","","Sets the comparison function used when sorting to be `sort_func`. If the\ncurrent sort column id of `self` is the same as `sort_column_id`, then\nthe model will sort using this function.\n## `sort_column_id`\nthe sort column id to set the function for\n## `sort_func`\nThe comparison function\n## `user_data`\nUser data to pass to `sort_func`, or `None`\n## `destroy`\nDestroy notifier of `user_data`, or `None`",352,{"inputs":[{"name":"treesortableext"},{"name":"sortcolumn"},{"name":"f"}],"output":null}],[10,"get_sort_column_id","","",352,{"inputs":[{"name":"treesortableext"}],"output":{"name":"option"}}],[10,"set_sort_column_id","","",352,{"inputs":[{"name":"treesortableext"},{"name":"sortcolumn"},{"name":"sorttype"}],"output":null}],[10,"set_unsorted","","",352,{"inputs":[{"name":"treesortableext"}],"output":null}],[10,"has_default_sort_func","","",352,{"inputs":[{"name":"treesortableext"}],"output":{"name":"bool"}}],[10,"sort_column_changed","","",352,{"inputs":[{"name":"treesortableext"}],"output":null}],[8,"WidgetExt","","",null,null],[10,"intersect","","Computes the intersection of a `self`’s area and `area`, storing\nthe intersection in `intersection`, and returns `true` if there was\nan intersection. `intersection` may be `None` if you’re only\ninterested in whether there was an intersection.\n## `area`\na rectangle\n## `intersection`\nrectangle to store intersection of `self` and `area`",353,{"inputs":[{"name":"widgetext"},{"name":"rectangle"},{"name":"option"}],"output":{"name":"bool"}}],[10,"override_background_color","","Sets the background color to use for a widget.",353,{"inputs":[{"name":"widgetext"},{"name":"stateflags"},{"name":"gdkrgba"}],"output":null}],[10,"override_color","","Sets the color to use for a widget.",353,{"inputs":[{"name":"widgetext"},{"name":"stateflags"},{"name":"gdkrgba"}],"output":null}],[10,"override_cursor","","Sets the cursor color to use in a widget, overriding the\ncursor-color and secondary-cursor-color\nstyle properties. All other style values are left untouched.\nSee also `WidgetExt::modify_style`.",353,{"inputs":[{"name":"widgetext"},{"name":"gdkrgba"},{"name":"gdkrgba"}],"output":null}],[10,"override_font","","Sets the font to use for a widget. All other style values are\nleft untouched. See `WidgetExt::override_color`.",353,{"inputs":[{"name":"widgetext"},{"name":"fontdescription"}],"output":null}],[10,"override_symbolic_color","","Sets a symbolic color for a widget.",353,{"inputs":[{"name":"widgetext"},{"name":"str"},{"name":"gdkrgba"}],"output":null}],[10,"activate","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"add_accelerator","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"},{"name":"accelflags"}],"output":null}],[10,"add_events","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"add_mnemonic_label","","",353,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"can_activate_accel","","",353,{"inputs":[{"name":"widgetext"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"child_focus","","",353,{"inputs":[{"name":"widgetext"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"child_notify","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"compute_expand","","",353,{"inputs":[{"name":"widgetext"},{"name":"orientation"}],"output":{"name":"bool"}}],[10,"destroy","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_check_threshold","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"drag_dest_add_image_targets","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_dest_add_text_targets","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_dest_add_uri_targets","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_dest_get_track_motion","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"drag_dest_set_track_motion","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"drag_dest_unset","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_highlight","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_add_image_targets","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_add_text_targets","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_add_uri_targets","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_set_icon_name","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"drag_source_set_icon_pixbuf","","",353,{"inputs":[{"name":"widgetext"},{"name":"pixbuf"}],"output":null}],[10,"drag_source_set_icon_stock","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"drag_source_unset","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_unhighlight","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"ensure_style","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"error_bell","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"freeze_child_notify","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"get_allocated_baseline","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_allocated_height","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_allocated_width","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_allocation","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"allocation"}}],[10,"get_ancestor","","",353,{"inputs":[{"name":"widgetext"},{"name":"type"}],"output":{"name":"option"}}],[10,"get_app_paintable","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_can_default","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_can_focus","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_child_requisition","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"requisition"}}],[10,"get_child_visible","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_clip","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"allocation"}}],[10,"get_composite_name","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_direction","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"textdirection"}}],[10,"get_double_buffered","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_events","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_halign","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"align"}}],[10,"get_has_tooltip","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_has_window","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_hexpand","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_hexpand_set","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_mapped","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_margin_bottom","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_end","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_left","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_right","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_start","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_top","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_modifier_mask","","",353,{"inputs":[{"name":"widgetext"},{"name":"modifierintent"}],"output":{"name":"modifiertype"}}],[10,"get_name","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_no_show_all","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_opacity","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"f64"}}],[10,"get_parent","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_parent_window","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_pointer","","",353,null],[10,"get_preferred_height","","",353,null],[10,"get_preferred_height_and_baseline_for_width","","",353,null],[10,"get_preferred_height_for_width","","",353,null],[10,"get_preferred_size","","",353,null],[10,"get_preferred_width","","",353,null],[10,"get_preferred_width_for_height","","",353,null],[10,"get_realized","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_receives_default","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_request_mode","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"sizerequestmode"}}],[10,"get_requisition","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"requisition"}}],[10,"get_root_window","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_scale_factor","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_screen","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_sensitive","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_size_request","","",353,null],[10,"get_state","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"statetype"}}],[10,"get_state_flags","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"stateflags"}}],[10,"get_style_context","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_support_multidevice","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_tooltip_markup","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_tooltip_window","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_toplevel","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_valign","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"align"}}],[10,"get_valign_with_baseline","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"align"}}],[10,"get_vexpand","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_vexpand_set","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_visible","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_window","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"grab_add","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"grab_default","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"grab_focus","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"grab_remove","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"has_default","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_focus","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_grab","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_rc_style","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_screen","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_visible_focus","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"hide","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"hide_on_delete","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"in_destruction","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"init_template","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"is_ancestor","","",353,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"is_composited","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_drawable","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_focus","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_sensitive","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_toplevel","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_visible","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"keynav_failed","","",353,{"inputs":[{"name":"widgetext"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"list_action_prefixes","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"vec"}}],[10,"list_mnemonic_labels","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"vec"}}],[10,"map","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"mnemonic_activate","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"queue_compute_expand","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"queue_draw","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"queue_draw_area","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"queue_resize","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"queue_resize_no_redraw","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"realize","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"register_window","","",353,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"remove_accelerator","","",353,{"inputs":[{"name":"widgetext"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"remove_mnemonic_label","","",353,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"remove_tick_callback","","",353,{"inputs":[{"name":"widgetext"},{"name":"u32"}],"output":null}],[10,"render_icon","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"},{"name":"i32"},{"name":"option"}],"output":{"name":"option"}}],[10,"render_icon_pixbuf","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[10,"reparent","","",353,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"reset_rc_styles","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"reset_style","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"set_accel_path","","",353,{"inputs":[{"name":"widgetext"},{"name":"option"},{"name":"option"}],"output":null}],[10,"set_allocation","","",353,{"inputs":[{"name":"widgetext"},{"name":"allocation"}],"output":null}],[10,"set_app_paintable","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_can_default","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_can_focus","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_child_visible","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_clip","","",353,{"inputs":[{"name":"widgetext"},{"name":"allocation"}],"output":null}],[10,"set_composite_name","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"set_direction","","",353,{"inputs":[{"name":"widgetext"},{"name":"textdirection"}],"output":null}],[10,"set_double_buffered","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_events","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_halign","","",353,{"inputs":[{"name":"widgetext"},{"name":"align"}],"output":null}],[10,"set_has_tooltip","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_has_window","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_hexpand","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_hexpand_set","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_mapped","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_margin_bottom","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_end","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_left","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_right","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_start","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_top","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_name","","",353,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"set_no_show_all","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_opacity","","",353,{"inputs":[{"name":"widgetext"},{"name":"f64"}],"output":null}],[10,"set_parent","","",353,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"set_parent_window","","",353,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"set_realized","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_receives_default","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_redraw_on_allocate","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_sensitive","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_size_request","","",353,{"inputs":[{"name":"widgetext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_state","","",353,{"inputs":[{"name":"widgetext"},{"name":"statetype"}],"output":null}],[10,"set_state_flags","","",353,{"inputs":[{"name":"widgetext"},{"name":"stateflags"},{"name":"bool"}],"output":null}],[10,"set_support_multidevice","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_tooltip_markup","","",353,{"inputs":[{"name":"widgetext"},{"name":"option"}],"output":null}],[10,"set_tooltip_text","","",353,{"inputs":[{"name":"widgetext"},{"name":"option"}],"output":null}],[10,"set_tooltip_window","","",353,{"inputs":[{"name":"widgetext"},{"name":"option"}],"output":null}],[10,"set_valign","","",353,{"inputs":[{"name":"widgetext"},{"name":"align"}],"output":null}],[10,"set_vexpand","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_vexpand_set","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_visible","","",353,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_window","","",353,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"show","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"show_all","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"show_now","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"size_allocate","","",353,{"inputs":[{"name":"widgetext"},{"name":"allocation"}],"output":null}],[10,"size_allocate_with_baseline","","",353,{"inputs":[{"name":"widgetext"},{"name":"allocation"},{"name":"i32"}],"output":null}],[10,"size_request","","",353,{"inputs":[{"name":"widgetext"}],"output":{"name":"requisition"}}],[10,"style_attach","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"thaw_child_notify","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"translate_coordinates","","",353,{"inputs":[{"name":"widgetext"},{"name":"t"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"trigger_tooltip_query","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unmap","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unparent","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unrealize","","",353,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unregister_window","","",353,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"unset_state_flags","","",353,{"inputs":[{"name":"widgetext"},{"name":"stateflags"}],"output":null}],[8,"WidgetSignals","","",null,null],[10,"connect_accel_closures_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_can_activate_accel","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_composited_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_configure_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_damage_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_direction_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_draw","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_enter_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event_after","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_in_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_out_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_broken_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_focus","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_notify","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hide","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_press_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_release_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_keynav_failed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_leave_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_map","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_map_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mnemonic_activate","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_motion_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_in_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_out_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_realize","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_screen_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_help","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_allocate","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_state_flags_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_style_updated","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_touch_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unmap","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unmap_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unrealize","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_window_state_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EntrySignals","","",null,null],[10,"connect_activate","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_backspace","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cut_clipboard","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_clipboard","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_overwrite","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_from_cursor","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_at_cursor","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ButtonSignals","","",null,null],[10,"connect_activate","","",356,{"inputs":[{"name":"buttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_clicked","","",356,{"inputs":[{"name":"buttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ComboBoxSignals","","",null,null],[10,"connect_changed","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_active","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popdown","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolButtonSignals","","",null,null],[10,"connect_clicked","","",358,{"inputs":[{"name":"toolbuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToggleButtonSignals","","",null,null],[10,"connect_toggled","","",359,{"inputs":[{"name":"togglebuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererToggleSignals","","",null,null],[10,"connect_toggled","","",360,{"inputs":[{"name":"cellrenderertogglesignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinButtonSignals","","",null,null],[10,"connect_value_changed","","",361,{"inputs":[{"name":"spinbuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_wrapped","","",361,{"inputs":[{"name":"spinbuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DialogSignals","","",null,null],[10,"connect_close","","",362,{"inputs":[{"name":"dialogsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_response","","",362,{"inputs":[{"name":"dialogsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeViewSignals","","",null,null],[10,"connect_columns_changed","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cursor_changed","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_expand_collapse_cursor_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_activated","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_collapsed","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_expanded","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_parent","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_start_interactive_search","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_collapse_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_expand_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RangeSignals","","",null,null],[10,"connect_adjust_bounds","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_value","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_slider","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CalendarSignals","","",null,null],[10,"connect_day_selected","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_day_selected_double_click","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_month_changed","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_month","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_year","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_month","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_year","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StatusIconSignals","","",null,null],[10,"connect_activate","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_changed","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[17,"DIALOG_MODAL","gtk","",null,null],[17,"STYLE_PROVIDER_PRIORITY_FALLBACK","","",null,null],[17,"STYLE_PROVIDER_PRIORITY_THEME","","",null,null],[17,"STYLE_PROVIDER_PRIORITY_SETTINGS","","",null,null],[17,"STYLE_PROVIDER_PRIORITY_APPLICATION","","",null,null],[17,"STYLE_PROVIDER_PRIORITY_USER","","",null,null],[8,"ActionableExt","","Trait containing all `Actionable` methods.",null,null],[10,"get_action_name","","Gets the action name for `self`.",313,{"inputs":[{"name":"actionableext"}],"output":{"name":"option"}}],[10,"set_action_name","","Specifies the name of the action with which this widget should be\nassociated. If `action_name` is `None` then the widget will be\nunassociated from any previous action.",313,{"inputs":[{"name":"actionableext"},{"name":"str"}],"output":null}],[10,"set_detailed_action_name","","Sets the action-name and associated string target value of an\nactionable widget.",313,{"inputs":[{"name":"actionableext"},{"name":"str"}],"output":null}],[8,"BinExt","","Trait containing all `Bin` methods.",null,null],[10,"get_child","","Gets the child of the `Bin`, or `None` if the bin contains\nno child widget. The returned widget does not have a reference\nadded, so you do not need to unref it.",314,{"inputs":[{"name":"binext"}],"output":{"name":"option"}}],[8,"BoxExt","","Trait containing all `Box` methods.",null,null],[10,"get_baseline_position","","Gets the value set by `BoxExt::set_baseline_position`.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"baselineposition"}}],[10,"get_center_widget","","Retrieves the center widget of the box.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"option"}}],[10,"get_homogeneous","","Returns whether the box is homogeneous (all children are the\nsame size). See `BoxExt::set_homogeneous`.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"bool"}}],[10,"get_spacing","","Gets the value set by `BoxExt::set_spacing`.",315,{"inputs":[{"name":"boxext"}],"output":{"name":"i32"}}],[10,"pack_end","","Adds `child` to `self`, packed with reference to the end of `self`.\nThe `child` is packed after (away from end of) any other child\npacked with reference to the end of `self`.\n## `child`\nthe `Widget` to be added to `self`\n## `expand`\n`true` if the new child is to be given extra space allocated\n to `self`. The extra space will be divided evenly between all children\n of `self` that use this option\n## `fill`\n`true` if space given to `child` by the `expand` option is\n actually allocated to `child`, rather than just padding it. This\n parameter has no effect if `expand` is set to `false`. A child is\n always allocated the full height of a horizontal `Box` and the full width\n of a vertical `Box`. This option affects the other dimension\n## `padding`\nextra space in pixels to put between this child and its\n neighbors, over and above the global amount specified by\n `Box:spacing` property. If `child` is a widget at one of the\n reference ends of `self`, then `padding` pixels are also put between\n `child` and the reference edge of `self`",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"pack_start","","Adds `child` to `self`, packed with reference to the start of `self`.\nThe `child` is packed after any other child packed with reference\nto the start of `self`.\n## `child`\nthe `Widget` to be added to `self`\n## `expand`\n`true` if the new child is to be given extra space allocated\n to `self`. The extra space will be divided evenly between all children\n that use this option\n## `fill`\n`true` if space given to `child` by the `expand` option is\n actually allocated to `child`, rather than just padding it. This\n parameter has no effect if `expand` is set to `false`. A child is\n always allocated the full height of a horizontal `Box` and the full width\n of a vertical `Box`. This option affects the other dimension\n## `padding`\nextra space in pixels to put between this child and its\n neighbors, over and above the global amount specified by\n `Box:spacing` property. If `child` is a widget at one of the\n reference ends of `self`, then `padding` pixels are also put between\n `child` and the reference edge of `self`",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"u32"}],"output":null}],[10,"query_child_packing","","Obtains information about how `child` is packed into `self`.\n## `child`\nthe `Widget` of the child to query\n## `expand`\npointer to return location for expand child\n property\n## `fill`\npointer to return location for fill child\n property\n## `padding`\npointer to return location for padding\n child property\n## `pack_type`\npointer to return location for pack-type\n child property",315,null],[10,"reorder_child","","Moves `child` to a new `position` in the list of `self` children.\nThe list contains widgets packed `PackType::Start`\nas well as widgets packed `PackType::End`, in the order that these\nwidgets were added to `self`.",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"set_baseline_position","","Sets the baseline position of a box. This affects\nonly horizontal boxes with at least one baseline aligned\nchild. If there is more vertical space available than requested,\nand the baseline is not allocated by the parent then\n`position` is used to allocate the baseline wrt the\nextra space available.",315,{"inputs":[{"name":"boxext"},{"name":"baselineposition"}],"output":null}],[10,"set_center_widget","","Sets a center widget; that is a child widget that will be\ncentered with respect to the full width of the box, even\nif the children at either side take up different amounts\nof space.",315,{"inputs":[{"name":"boxext"},{"name":"option"}],"output":null}],[10,"set_child_packing","","Sets the way `child` is packed into `self`.\n## `child`\nthe `Widget` of the child to set\n## `expand`\nthe new value of the expand child property\n## `fill`\nthe new value of the fill child property\n## `padding`\nthe new value of the padding child property\n## `pack_type`\nthe new value of the pack-type child property",315,{"inputs":[{"name":"boxext"},{"name":"t"},{"name":"bool"},{"name":"bool"},{"name":"u32"},{"name":"packtype"}],"output":null}],[10,"set_homogeneous","","Sets the `Box:homogeneous` property of `self`, controlling\nwhether or not all children of `self` are given equal space\nin the box.\n## `homogeneous`\na boolean value, `true` to create equal allotments,\n `false` for variable allotments",315,{"inputs":[{"name":"boxext"},{"name":"bool"}],"output":null}],[10,"set_spacing","","Sets the `Box:spacing` property of `self`, which is the\nnumber of pixels to place between children of `self`.\n## `spacing`\nthe number of pixels to put between children",315,{"inputs":[{"name":"boxext"},{"name":"i32"}],"output":null}],[8,"ButtonExt","","Trait containing all `Button` methods.",null,null],[10,"clicked","","Emits a `Button::clicked` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"enter","","Emits a `Button::enter` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"get_alignment","","Gets the alignment of the child in the button.",316,null],[10,"get_always_show_image","","Returns whether the button will ignore the `Settings:gtk-button-images`\nsetting and always show the image, if available.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"get_event_window","","Returns the button’s event window if it is realized, `None` otherwise.\nThis function should be rarely needed.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"option"}}],[10,"get_focus_on_click","","Returns whether the button grabs focus when it is clicked with the mouse.\nSee `ButtonExt::set_focus_on_click`.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"get_image","","Gets the widget that is currenty set as the image of `self`.\nThis may have been explicitly set by `ButtonExt::set_image`\nor constructed by `Button::new_from_stock`.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"option"}}],[10,"get_image_position","","Gets the position of the image relative to the text\ninside the button.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"positiontype"}}],[10,"get_label","","Fetches the text from the label of the button, as set by\n`ButtonExt::set_label`. If the label text has not\nbeen set the return value will be `None`. This will be the\ncase if you create an empty button with `Button::new` to\nuse as a container.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"option"}}],[10,"get_relief","","Returns the current relief style of the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"reliefstyle"}}],[10,"get_use_stock","","Returns whether the button label is a stock item.",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"get_use_underline","","Returns whether an embedded underline in the button label indicates a\nmnemonic. See gtk_button_set_use_underline ().",316,{"inputs":[{"name":"buttonext"}],"output":{"name":"bool"}}],[10,"leave","","Emits a `Button::leave` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"pressed","","Emits a `Button::pressed` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"released","","Emits a `Button::released` signal to the given `Button`.",316,{"inputs":[{"name":"buttonext"}],"output":null}],[10,"set_alignment","","Sets the alignment of the child. This property has no effect unless\nthe child is a `Misc` or a `Alignment`.",316,{"inputs":[{"name":"buttonext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_always_show_image","","If `true`, the button will ignore the `Settings:gtk-button-images`\nsetting and always show the image, if available.",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[10,"set_focus_on_click","","Sets whether the button will grab focus when it is clicked with the mouse.\nMaking mouse clicks not grab focus is useful in places like toolbars where\nyou don’t want the keyboard focus removed from the main area of the\napplication.\n## `focus_on_click`\nwhether the button grabs focus when clicked with the mouse",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[10,"set_image","","Set the image of `self` to the given widget. The image will be\ndisplayed if the label text is `None` or if\n`Button:always-show-image` is `true`. You don’t have to call\n`Widget::show` on `image` yourself.\n## `image`\na widget to set as the image for the button",316,{"inputs":[{"name":"buttonext"},{"name":"t"}],"output":null}],[10,"set_image_position","","Sets the position of the image relative to the text\ninside the button.\n## `position`\nthe position",316,{"inputs":[{"name":"buttonext"},{"name":"positiontype"}],"output":null}],[10,"set_label","","Sets the text of the label of the button to `str`. This text is\nalso used to select the stock item if `ButtonExt::set_use_stock`\nis used.",316,{"inputs":[{"name":"buttonext"},{"name":"str"}],"output":null}],[10,"set_relief","","Sets the relief style of the edges of the given `Button` widget.\nTwo styles exist, `ReliefStyle::Normal` and `ReliefStyle::None`.\nThe default style is, as one can guess, `ReliefStyle::Normal`.\nThe deprecated value `ReliefStyle::Half` behaves the same as\n`ReliefStyle::Normal`.\n## `relief`\nThe `ReliefStyle` as described above",316,{"inputs":[{"name":"buttonext"},{"name":"reliefstyle"}],"output":null}],[10,"set_use_stock","","If `true`, the label set on the button is used as a\nstock id to select the stock item for the button.",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text of the button label indicates\nthe next character should be used for the mnemonic accelerator key.\n## `use_underline`\n`true` if underlines in the text indicate mnemonics",316,{"inputs":[{"name":"buttonext"},{"name":"bool"}],"output":null}],[8,"CellAreaExt","","Trait containing all `CellArea` methods.",null,null],[10,"activate","","Activates `self`, usually by activating the currently focused\ncell, however some subclasses which embed widgets in the area\ncan also activate a widget if it currently has the focus.\n## `context`\nthe `CellAreaContext` in context with the current row data\n## `widget`\nthe `Widget` that `self` is rendering on\n## `cell_area`\nthe size and location of `self` relative to `widget`’s allocation\n## `flags`\nthe `CellRendererState` flags for `self` for this row of data.\n## `edit_only`\nif `true` then only cell renderers that are `CellRendererMode::Editable`\n will be activated.",317,{"inputs":[{"name":"cellareaext"},{"name":"cellareacontext"},{"name":"t"},{"name":"rectangle"},{"name":"cellrendererstate"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"add","","Adds `renderer` to `self` with the default child cell properties.\n## `renderer`\nthe `CellRenderer` to add to `self`",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":null}],[10,"add_focus_sibling","","Adds `sibling` to `renderer`’s focusable area, focus will be drawn\naround `renderer` and all of its siblings if `renderer` can\nfocus for a given row.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"u"}],"output":null}],[10,"apply_attributes","","Applies any connected attributes to the renderers in\n`self` by pulling the values from `tree_model`.\n## `tree_model`\nthe `TreeModel` to pull values from\n## `iter`\nthe `TreeIter` in `tree_model` to apply values for\n## `is_expander`\nwhether `iter` has children\n## `is_expanded`\nwhether `iter` is expanded in the view and\n children are visible",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"treeiter"},{"name":"bool"},{"name":"bool"}],"output":null}],[10,"attribute_connect","","Connects an `attribute` to apply values from `column` for the\n`TreeModel` in use.\n## `renderer`\nthe `CellRenderer` to connect an attribute for\n## `attribute`\nthe attribute name\n## `column`\nthe `TreeModel` column to fetch attribute values from",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"attribute_disconnect","","Disconnects `attribute` for the `renderer` in `self` so that\nattribute will no longer be updated with values from the\nmodel.\n## `renderer`\nthe `CellRenderer` to disconnect an attribute for\n## `attribute`\nthe attribute name",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"str"}],"output":null}],[10,"attribute_get_column","","Returns the model column that an attribute has been mapped to,\nor -1 if the attribute is not mapped.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"str"}],"output":{"name":"i32"}}],[10,"copy_context","","This is sometimes needed for cases where rows need to share\nalignments in one orientation but may be separately grouped\nin the opposing orientation.",317,{"inputs":[{"name":"cellareaext"},{"name":"cellareacontext"}],"output":{"name":"option"}}],[10,"create_context","","Creates a `CellAreaContext` to be used with `self` for\nall purposes. `CellAreaContext` stores geometry information\nfor rows for which it was operated on, it is important to use\nthe same context for the same row of data at all times (i.e.\none should render and handle events with the same `CellAreaContext`\nwhich was used to request the size of those rows of data).",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"focus","","This should be called by the `self`’s owning layout widget\nwhen focus is to be passed to `self`, or moved within `self`\nfor a given `direction` and row data.",317,{"inputs":[{"name":"cellareaext"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"get_cell_allocation","","Derives the allocation of `renderer` inside `self` if `self`\nwere to be renderered in `cell_area`.\n## `context`\nthe `CellAreaContext` used to hold sizes for `self`.\n## `widget`\nthe `Widget` that `self` is rendering on\n## `renderer`\nthe `CellRenderer` to get the allocation for\n## `cell_area`\nthe whole allocated area for `self` in `widget`\n for this row\n## `allocation`\nwhere to store the allocation for `renderer`",317,{"inputs":[{"name":"cellareaext"},{"name":"cellareacontext"},{"name":"t"},{"name":"u"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_cell_at_position","","Gets the `CellRenderer` at `x` and `y` coordinates inside `self` and optionally\nreturns the full cell allocation for it inside `cell_area`.\n## `context`\nthe `CellAreaContext` used to hold sizes for `self`.\n## `widget`\nthe `Widget` that `self` is rendering on\n## `cell_area`\nthe whole allocated area for `self` in `widget`\n for this row\n## `x`\nthe x position\n## `y`\nthe y position\n## `alloc_area`\nwhere to store the inner allocated area of the\n returned cell renderer, or `None`.",317,null],[10,"get_current_path_string","","Gets the current `TreePath` string for the currently\napplied `TreeIter`, this is implicitly updated when\n`CellAreaExt::apply_attributes` is called and can be\nused to interact with renderers from `CellArea`\nsubclasses.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_edit_widget","","Gets the `CellEditable` widget currently used\nto edit the currently edited cell.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_edited_cell","","Gets the `CellRenderer` in `self` that is currently\nbeing edited.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_focus_cell","","Retrieves the currently focused cell for `self`",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"option"}}],[10,"get_focus_from_sibling","","Gets the `CellRenderer` which is expected to be focusable\nfor which `renderer` is, or may be a sibling.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":{"name":"option"}}],[10,"get_focus_siblings","","Gets the focus sibling cell renderers for `renderer`.\n## `renderer`\nthe `CellRenderer` expected to have focus",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":{"name":"vec"}}],[10,"get_preferred_height","","Retrieves a cell area’s initial minimum and natural height.",317,null],[10,"get_preferred_height_for_width","","Retrieves a cell area’s minimum and natural height if it would be given\nthe specified `width`.",317,null],[10,"get_preferred_width","","Retrieves a cell area’s initial minimum and natural width.",317,null],[10,"get_preferred_width_for_height","","Retrieves a cell area’s minimum and natural width if it would be given\nthe specified `height`.",317,null],[10,"get_request_mode","","Gets whether the area prefers a height-for-width layout\nor a width-for-height layout.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"sizerequestmode"}}],[10,"has_renderer","","Checks if `self` contains `renderer`.\n## `renderer`\nthe `CellRenderer` to check",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"inner_cell_area","","This is a convenience function for `CellArea` implementations\nto get the inner area where a given `CellRenderer` will be\nrendered. It removes any padding previously added by `CellAreaExt::request_renderer`.\n## `widget`\nthe `Widget` that `self` is rendering onto\n## `cell_area`\nthe `widget` relative coordinates where one of `self`’s cells\n is to be placed\n## `inner_area`\nthe return location for the inner cell area",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"is_activatable","","Returns whether the area can do anything when activated,\nafter applying new attributes to `self`.",317,{"inputs":[{"name":"cellareaext"}],"output":{"name":"bool"}}],[10,"is_focus_sibling","","Returns whether `sibling` is one of `renderer`’s focus siblings\n(see `CellAreaExt::add_focus_sibling`).\n## `renderer`\nthe `CellRenderer` expected to have focus\n## `sibling`\nthe `CellRenderer` to check against `renderer`’s sibling list",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"u"}],"output":{"name":"bool"}}],[10,"remove","","Removes `renderer` from `self`.\n## `renderer`\nthe `CellRenderer` to remove from `self`",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":null}],[10,"remove_focus_sibling","","Removes `sibling` from `renderer`’s focus sibling list\n(see `CellAreaExt::add_focus_sibling`).\n## `renderer`\nthe `CellRenderer` expected to have focus\n## `sibling`\nthe `CellRenderer` to remove from `renderer`’s focus area",317,{"inputs":[{"name":"cellareaext"},{"name":"t"},{"name":"u"}],"output":null}],[10,"request_renderer","","This is a convenience function for `CellArea` implementations\nto request size for cell renderers. It’s important to use this\nfunction to request size and then use `CellAreaExt::inner_cell_area`\nat render and event time since this function will add padding\naround the cell for focus painting.\n## `renderer`\nthe `CellRenderer` to request size for\n## `orientation`\nthe `Orientation` in which to request size\n## `widget`\nthe `Widget` that `self` is rendering onto\n## `for_size`\nthe allocation contextual size to request for, or -1 if\nthe base request for the orientation is to be returned.\n## `minimum_size`\nlocation to store the minimum size, or `None`\n## `natural_size`\nlocation to store the natural size, or `None`",317,null],[10,"set_focus_cell","","Explicitly sets the currently focused cell to `renderer`.",317,{"inputs":[{"name":"cellareaext"},{"name":"t"}],"output":null}],[10,"stop_editing","","Explicitly stops the editing of the currently edited cell.",317,{"inputs":[{"name":"cellareaext"},{"name":"bool"}],"output":null}],[8,"CellEditableExt","","Trait containing all `CellEditable` methods.",null,null],[10,"editing_done","","Emits the `CellEditable::editing-done` signal.",318,{"inputs":[{"name":"celleditableext"}],"output":null}],[10,"remove_widget","","Emits the `CellEditable::remove-widget` signal.",318,{"inputs":[{"name":"celleditableext"}],"output":null}],[8,"CellLayoutExt","","Trait containing all `CellLayout` methods.",null,null],[10,"add_attribute","","Adds an attribute mapping to the list in `self`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"str"},{"name":"i32"}],"output":null}],[10,"clear","","Unsets all the mappings on all renderers on `self` and\nremoves all renderers from `self`.",319,{"inputs":[{"name":"celllayoutext"}],"output":null}],[10,"clear_attributes","","Clears all existing attributes previously set with\n`CellLayout::set_attributes`.\n## `cell`\na `CellRenderer` to clear the attribute mapping on",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"}],"output":null}],[10,"get_area","","Returns the underlying `CellArea` which might be `self`\nif called on a `CellArea` or might be `None` if no `CellArea`\nis used by `self`.",319,{"inputs":[{"name":"celllayoutext"}],"output":{"name":"option"}}],[10,"get_cells","","Returns the cell renderers which have been added to `self`.",319,{"inputs":[{"name":"celllayoutext"}],"output":{"name":"vec"}}],[10,"pack_end","","Adds the `cell` to the end of `self`. If `expand` is `false`, then the\n`cell` is allocated no more space than it needs. Any unused space is\ndivided evenly between cells for which `expand` is `true`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"pack_start","","Packs the `cell` into the beginning of `self`. If `expand` is `false`,\nthen the `cell` is allocated no more space than it needs. Any unused space\nis divided evenly between cells for which `expand` is `true`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"reorder","","Re-inserts `cell` at `position`.",319,{"inputs":[{"name":"celllayoutext"},{"name":"t"},{"name":"i32"}],"output":null}],[8,"CellRendererExt","","Trait containing all `CellRenderer` methods.",null,null],[10,"get_aligned_area","","Gets the aligned area used by `self` inside `cell_area`. Used for finding\nthe appropriate edit and focus rectangle.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `flags`\nrender flags\n## `cell_area`\ncell area which would be passed to `CellRendererExt::render`\n## `aligned_area`\nthe return location for the space inside `cell_area`\n that would acually be used to render.",320,{"inputs":[{"name":"cellrendererext"},{"name":"t"},{"name":"cellrendererstate"},{"name":"rectangle"}],"output":{"name":"rectangle"}}],[10,"get_alignment","","Fills in `xalign` and `yalign` with the appropriate values of `self`.\n## `xalign`\nlocation to fill in with the x alignment of the cell, or `None`\n## `yalign`\nlocation to fill in with the y alignment of the cell, or `None`",320,null],[10,"get_fixed_size","","Fills in `width` and `height` with the appropriate size of `self`.\n## `width`\nlocation to fill in with the fixed width of the cell, or `None`\n## `height`\nlocation to fill in with the fixed height of the cell, or `None`",320,null],[10,"get_padding","","Fills in `xpad` and `ypad` with the appropriate values of `self`.\n## `xpad`\nlocation to fill in with the x padding of the cell, or `None`\n## `ypad`\nlocation to fill in with the y padding of the cell, or `None`",320,null],[10,"get_preferred_height","","Retreives a renderer’s natural size when rendered to `widget`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `minimum_size`\nlocation to store the minimum size, or `None`\n## `natural_size`\nlocation to store the natural size, or `None`",320,null],[10,"get_preferred_height_for_width","","Retreives a cell renderers’s minimum and natural height if it were rendered to\n`widget` with the specified `width`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `width`\nthe size which is available for allocation\n## `minimum_height`\nlocation for storing the minimum size, or `None`\n## `natural_height`\nlocation for storing the preferred size, or `None`",320,null],[10,"get_preferred_size","","Retrieves the minimum and natural size of a cell taking\ninto account the widget’s preference for height-for-width management.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `minimum_size`\nlocation for storing the minimum size, or `None`\n## `natural_size`\nlocation for storing the natural size, or `None`",320,null],[10,"get_preferred_width","","Retreives a renderer’s natural size when rendered to `widget`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `minimum_size`\nlocation to store the minimum size, or `None`\n## `natural_size`\nlocation to store the natural size, or `None`",320,null],[10,"get_preferred_width_for_height","","Retreives a cell renderers’s minimum and natural width if it were rendered to\n`widget` with the specified `height`.\n## `widget`\nthe `Widget` this cell will be rendering to\n## `height`\nthe size which is available for allocation\n## `minimum_width`\nlocation for storing the minimum size, or `None`\n## `natural_width`\nlocation for storing the preferred size, or `None`",320,null],[10,"get_request_mode","","Gets whether the cell renderer prefers a height-for-width layout\nor a width-for-height layout.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"sizerequestmode"}}],[10,"get_sensitive","","Returns the cell renderer’s sensitivity.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"bool"}}],[10,"get_state","","Translates the cell renderer state to `StateFlags`,\nbased on the cell renderer and widget sensitivity, and\nthe given `CellRendererState`.\n## `widget`\na `Widget`, or `None`\n## `cell_state`\ncell renderer state",320,{"inputs":[{"name":"cellrendererext"},{"name":"t"},{"name":"cellrendererstate"}],"output":{"name":"stateflags"}}],[10,"get_visible","","Returns the cell renderer’s visibility.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"bool"}}],[10,"is_activatable","","Checks whether the cell renderer can do something when activated.",320,{"inputs":[{"name":"cellrendererext"}],"output":{"name":"bool"}}],[10,"set_alignment","","Sets the renderer’s alignment within its available space.\n## `xalign`\nthe x alignment of the cell renderer\n## `yalign`\nthe y alignment of the cell renderer",320,{"inputs":[{"name":"cellrendererext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_fixed_size","","Sets the renderer size to be explicit, independent of the properties set.\n## `width`\nthe width of the cell renderer, or -1\n## `height`\nthe height of the cell renderer, or -1",320,{"inputs":[{"name":"cellrendererext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_padding","","Sets the renderer’s padding.\n## `xpad`\nthe x padding of the cell renderer\n## `ypad`\nthe y padding of the cell renderer",320,{"inputs":[{"name":"cellrendererext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_sensitive","","Sets the cell renderer’s sensitivity.\n## `sensitive`\nthe sensitivity of the cell",320,{"inputs":[{"name":"cellrendererext"},{"name":"bool"}],"output":null}],[10,"set_visible","","Sets the cell renderer’s visibility.\n## `visible`\nthe visibility of the cell",320,{"inputs":[{"name":"cellrendererext"},{"name":"bool"}],"output":null}],[10,"stop_editing","","Informs the cell renderer that the editing is stopped.\nIf `canceled` is `true`, the cell renderer will emit the\n`CellRenderer::editing-canceled` signal.",320,{"inputs":[{"name":"cellrendererext"},{"name":"bool"}],"output":null}],[8,"CellRendererTextExt","","Trait containing all `CellRendererText` methods.",null,null],[10,"set_fixed_height_from_font","","Sets the height of a renderer to explicitly be determined by the “font” and\n“y_pad” property set on it. Further changes in these properties do not\naffect the height, so they must be accompanied by a subsequent call to this\nfunction. Using this function is unflexible, and should really only be used\nif calculating the size of a cell is too slow (ie, a massive number of cells\ndisplayed). If `number_of_rows` is -1, then the fixed height is unset, and\nthe height is determined by the properties again.\n## `number_of_rows`\nNumber of rows of text each cell renderer is allocated, or -1",321,{"inputs":[{"name":"cellrenderertextext"},{"name":"i32"}],"output":null}],[8,"CheckButtonExt","","Trait containing all `CheckButton` methods.",null,null],[8,"ComboBoxExt","","Trait containing all `ComboBox` methods.",null,null],[10,"get_active","","Returns the index of the currently active item, or -1 if there’s no\nactive item. If the model is a non-flat treemodel, and the active item\nis not an immediate child of the root of the tree, this function returns\n`gtk_tree_path_get_indices (path)[0]`, where\n`path` is the `TreePath` of the active item.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_active_id","","Returns the ID of the active row of `self`. This value is taken\nfrom the active row and the column specified by the `ComboBox:id-column`\nproperty of `self` (see `ComboBoxExt::set_id_column`).",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_active_iter","","Sets `iter` to point to the current active item, if it exists.\n## `iter`\nThe uninitialized `TreeIter`",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_add_tearoffs","","Gets the current value of the :add-tearoffs property.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_button_sensitivity","","Returns whether the combo box sets the dropdown button\nsensitive or not when there are no items in the model.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"sensitivitytype"}}],[10,"get_column_span_column","","Returns the column with column span information for `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_entry_text_column","","Returns the column which `self` is using to get the strings\nfrom to display in the internal entry.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_focus_on_click","","Returns whether the combo box grabs focus when it is clicked\nwith the mouse. See `ComboBoxExt::set_focus_on_click`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_has_entry","","Returns whether the combo box has an entry.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_id_column","","Returns the column which `self` is using to get string IDs\nfor values from.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_model","","Returns the `TreeModel` which is acting as data source for `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_popup_fixed_width","","Gets whether the popup uses a fixed width matching\nthe allocated width of the combo box.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"bool"}}],[10,"get_row_span_column","","Returns the column with row span information for `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"get_title","","Gets the current title of the menu in tearoff mode. See\n`ComboBoxExt::set_add_tearoffs`.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"option"}}],[10,"get_wrap_width","","Returns the wrap width which is used to determine the number of columns\nfor the popup menu. If the wrap width is larger than 1, the combo box\nis in table mode.",322,{"inputs":[{"name":"comboboxext"}],"output":{"name":"i32"}}],[10,"popdown","","Hides the menu or dropdown list of `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":null}],[10,"popup","","Pops up the menu or dropdown list of `self`.",322,{"inputs":[{"name":"comboboxext"}],"output":null}],[10,"set_active","","Sets the active item of `self` to be the item at `index`.\n## `index_`\nAn index in the model passed during construction, or -1 to have\nno active item",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_active_id","","Changes the active row of `self` to the one that has an ID equal to\n`active_id`, or unsets the active row if `active_id` is `None`. Rows having\na `None` ID string cannot be made active by this function.",322,{"inputs":[{"name":"comboboxext"},{"name":"option"}],"output":{"name":"bool"}}],[10,"set_active_iter","","Sets the current active item to be the one referenced by `iter`, or\nunsets the active item if `iter` is `None`.\n## `iter`\nThe `TreeIter`, or `None`",322,{"inputs":[{"name":"comboboxext"},{"name":"option"}],"output":null}],[10,"set_add_tearoffs","","Sets whether the popup menu should have a tearoff\nmenu item.",322,{"inputs":[{"name":"comboboxext"},{"name":"bool"}],"output":null}],[10,"set_button_sensitivity","","Sets whether the dropdown button of the combo box should be\nalways sensitive (`SensitivityType::On`), never sensitive (`SensitivityType::Off`)\nor only if there is at least one item to display (`SensitivityType::Auto`).\n## `sensitivity`\nspecify the sensitivity of the dropdown button",322,{"inputs":[{"name":"comboboxext"},{"name":"sensitivitytype"}],"output":null}],[10,"set_column_span_column","","Sets the column with column span information for `self` to be\n`column_span`. The column span column contains integers which indicate\nhow many columns an item should span.\n## `column_span`\nA column in the model passed during construction",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_entry_text_column","","Sets the model column which `self` should use to get strings from\nto be `text_column`. The column `text_column` in the model of `self`\nmust be of type `G_TYPE_STRING`.",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_focus_on_click","","Sets whether the combo box will grab focus when it is clicked with\nthe mouse. Making mouse clicks not grab focus is useful in places\nlike toolbars where you don’t want the keyboard focus removed from\nthe main area of the application.\n## `focus_on_click`\nwhether the combo box grabs focus when clicked\n with the mouse",322,{"inputs":[{"name":"comboboxext"},{"name":"bool"}],"output":null}],[10,"set_id_column","","Sets the model column which `self` should use to get string IDs\nfor values from. The column `id_column` in the model of `self`\nmust be of type `G_TYPE_STRING`.\n## `id_column`\nA column in `model` to get string IDs for values from",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_model","","Sets the model used by `self` to be `model`. Will unset a previously set\nmodel (if applicable). If model is `None`, then it will unset the model.",322,{"inputs":[{"name":"comboboxext"},{"name":"option"}],"output":null}],[10,"set_popup_fixed_width","","Specifies whether the popup’s width should be a fixed width\nmatching the allocated width of the combo box.\n## `fixed`\nwhether to use a fixed popup width",322,{"inputs":[{"name":"comboboxext"},{"name":"bool"}],"output":null}],[10,"set_row_span_column","","Sets the column with row span information for `self` to be `row_span`.\nThe row span column contains integers which indicate how many rows\nan item should span.\n## `row_span`\nA column in the model passed during construction.",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[10,"set_title","","Sets the menu’s title in tearoff mode.",322,{"inputs":[{"name":"comboboxext"},{"name":"str"}],"output":null}],[10,"set_wrap_width","","Sets the wrap width of `self` to be `width`. The wrap width is basically\nthe preferred number of columns when you want the popup to be layed out\nin a table.\n## `width`\nPreferred number of columns",322,{"inputs":[{"name":"comboboxext"},{"name":"i32"}],"output":null}],[8,"ContainerExt","","Trait containing all `Container` methods.",null,null],[10,"add","","Adds `widget` to `self`. Typically used for simple containers\nsuch as `Window`, `Frame`, or `Button`; for more complicated\nlayout containers such as `Box` or `Grid`, this function will\npick default packing parameters that may not be correct. So\nconsider functions such as `BoxExt::pack_start` and\n`Grid::attach` as an alternative to `ContainerExt::add` in\nthose cases. A widget may be added to only one container at a time;\nyou can’t place the same widget inside two different containers.",323,{"inputs":[{"name":"containerext"},{"name":"t"}],"output":null}],[10,"check_resize","","",323,{"inputs":[{"name":"containerext"}],"output":null}],[10,"child_notify","","Emits a `Widget::child-notify` signal for the\n[child property][child-properties]\n`child_property` on widget.",323,{"inputs":[{"name":"containerext"},{"name":"t"},{"name":"str"}],"output":null}],[10,"child_type","","Returns the type of the children supported by the container.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"type"}}],[10,"get_border_width","","Retrieves the border width of the container. See\n`ContainerExt::set_border_width`.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"u32"}}],[10,"get_children","","Returns the container’s non-internal children. See\n`ContainerExt::forall` for details on what constitutes an &quot;internal&quot; child.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"vec"}}],[10,"get_focus_child","","Returns the current focus child widget inside `self`. This is not the\ncurrently focused widget. That can be obtained by calling\n`Window::get_focus`.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"option"}}],[10,"get_focus_hadjustment","","Retrieves the horizontal focus adjustment for the container. See\ngtk_container_set_focus_hadjustment ().",323,{"inputs":[{"name":"containerext"}],"output":{"name":"option"}}],[10,"get_focus_vadjustment","","Retrieves the vertical focus adjustment for the container. See\n`ContainerExt::set_focus_vadjustment`.",323,{"inputs":[{"name":"containerext"}],"output":{"name":"option"}}],[10,"get_resize_mode","","Returns the resize mode for the container. See\ngtk_container_set_resize_mode ().",323,{"inputs":[{"name":"containerext"}],"output":{"name":"resizemode"}}],[10,"remove","","Removes `widget` from `self`. `widget` must be inside `self`.\nNote that `self` will own a reference to `widget`, and that this\nmay be the last reference held; so removing a widget from its\ncontainer can destroy that widget. If you want to use `widget`\nagain, you need to add a reference to it while it’s not inside\na container, using `gobject::Object::ref`. If you don’t want to use `widget`\nagain it’s usually more efficient to simply destroy it directly\nusing `Widget::destroy` since this will remove it from the\ncontainer and help break any circular reference count cycles.\n## `widget`\na current child of `self`",323,{"inputs":[{"name":"containerext"},{"name":"t"}],"output":null}],[10,"resize_children","","",323,{"inputs":[{"name":"containerext"}],"output":null}],[10,"set_border_width","","Sets the border width of the container.",323,{"inputs":[{"name":"containerext"},{"name":"u32"}],"output":null}],[10,"set_focus_chain","","Sets a focus chain, overriding the one computed automatically by GTK+.",323,null],[10,"set_focus_child","","Sets, or unsets if `child` is `None`, the focused child of `self`.",323,{"inputs":[{"name":"containerext"},{"name":"option"}],"output":null}],[10,"set_focus_hadjustment","","Hooks up an adjustment to focus handling in a container, so when a child\nof the container is focused, the adjustment is scrolled to show that\nwidget. This function sets the horizontal alignment.\nSee `ScrolledWindow::get_hadjustment` for a typical way of obtaining\nthe adjustment and `ContainerExt::set_focus_vadjustment` for setting\nthe vertical adjustment.",323,{"inputs":[{"name":"containerext"},{"name":"adjustment"}],"output":null}],[10,"set_focus_vadjustment","","Hooks up an adjustment to focus handling in a container, so when a\nchild of the container is focused, the adjustment is scrolled to\nshow that widget. This function sets the vertical alignment. See\n`ScrolledWindow::get_vadjustment` for a typical way of obtaining\nthe adjustment and `ContainerExt::set_focus_hadjustment` for setting\nthe horizontal adjustment.",323,{"inputs":[{"name":"containerext"},{"name":"adjustment"}],"output":null}],[10,"set_reallocate_redraws","","Sets the `reallocate_redraws` flag of the container to the given value.",323,{"inputs":[{"name":"containerext"},{"name":"bool"}],"output":null}],[10,"set_resize_mode","","Sets the resize mode for the container.",323,{"inputs":[{"name":"containerext"},{"name":"resizemode"}],"output":null}],[10,"unset_focus_chain","","Removes a focus chain explicitly set with `ContainerExt::set_focus_chain`.",323,{"inputs":[{"name":"containerext"}],"output":null}],[8,"DialogExt","","Trait containing all `Dialog` methods.",null,null],[10,"add_action_widget","","Adds an activatable widget to the action area of a `Dialog`,\nconnecting a signal handler that will emit the `Dialog::response`\nsignal on the dialog when the widget is activated. The widget is\nappended to the end of the dialog’s action area. If you want to add a\nnon-activatable widget, simply pack it into the `action_area` field\nof the `Dialog` struct.\n## `child`\nan activatable widget\n## `response_id`\nresponse ID for `child`",367,{"inputs":[{"name":"dialogext"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"add_button","","Adds a button with the given text and sets things up so that\nclicking the button will emit the `Dialog::response` signal with\nthe given `response_id`. The button is appended to the end of the\ndialog’s action area. The button widget is returned, but usually\nyou don’t need it.\n## `button_text`\ntext of button\n## `response_id`\nresponse ID for the button",367,{"inputs":[{"name":"dialogext"},{"name":"str"},{"name":"i32"}],"output":{"name":"widget"}}],[10,"get_action_area","","Returns the action area of `self`.",367,{"inputs":[{"name":"dialogext"}],"output":{"name":"widget"}}],[10,"get_content_area","","Returns the content area of `self`.",367,{"inputs":[{"name":"dialogext"}],"output":{"name":"box"}}],[10,"get_header_bar","","Returns the header bar of `self`. Note that the\nheaderbar is only used by the dialog if the\n`Dialog:use-header-bar` property is `true`.",367,{"inputs":[{"name":"dialogext"}],"output":{"name":"option"}}],[10,"get_response_for_widget","","Gets the response id of a widget in the action area\nof a dialog.\n## `widget`\na widget in the action area of `self`",367,{"inputs":[{"name":"dialogext"},{"name":"t"}],"output":{"name":"i32"}}],[10,"get_widget_for_response","","Gets the widget button that uses the given response ID in the action area\nof a dialog.\n## `response_id`\nthe response ID used by the `self` widget",367,{"inputs":[{"name":"dialogext"},{"name":"i32"}],"output":{"name":"option"}}],[10,"response","","Emits the `Dialog::response` signal with the given response ID.\nUsed to indicate that the user has responded to the dialog in some way;\ntypically either you or `DialogExt::run` will be monitoring the\n::response signal and take appropriate action.\n## `response_id`\nresponse ID",367,{"inputs":[{"name":"dialogext"},{"name":"i32"}],"output":null}],[10,"run","","Blocks in a recursive main loop until the `self` either emits the\n`Dialog::response` signal, or is destroyed. If the dialog is\ndestroyed during the call to `DialogExt::run`, `DialogExt::run` returns\n`ResponseType::None`. Otherwise, it returns the response ID from the\n::response signal emission.",367,{"inputs":[{"name":"dialogext"}],"output":{"name":"i32"}}],[10,"set_default_response","","Sets the last widget in the dialog’s action area with the given `response_id`\nas the default widget for the dialog. Pressing “Enter” normally activates\nthe default widget.\n## `response_id`\na response ID",367,{"inputs":[{"name":"dialogext"},{"name":"i32"}],"output":null}],[10,"set_response_sensitive","","Calls `gtk_widget_set_sensitive (widget, @setting)`\nfor each widget in the dialog’s action area with the given `response_id`.\nA convenient way to sensitize/desensitize dialog buttons.\n## `response_id`\na response ID\n## `setting`\n`true` for sensitive",367,{"inputs":[{"name":"dialogext"},{"name":"i32"},{"name":"bool"}],"output":null}],[8,"EditableExt","","Trait containing all `Editable` methods.",null,null],[10,"copy_clipboard","","Copies the contents of the currently selected content in the editable and\nputs it on the clipboard.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"cut_clipboard","","Removes the contents of the currently selected content in the editable and\nputs it on the clipboard.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"delete_selection","","Deletes the currently selected text of the editable.\nThis call doesn’t do anything if there is no selected text.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"delete_text","","Deletes a sequence of characters. The characters that are deleted are\nthose characters at positions from `start_pos` up to, but not including\n`end_pos`. If `end_pos` is negative, then the characters deleted\nare those from `start_pos` to the end of the text.",324,{"inputs":[{"name":"editableext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"get_chars","","Retrieves a sequence of characters. The characters that are retrieved\nare those characters at positions from `start_pos` up to, but not\nincluding `end_pos`. If `end_pos` is negative, then the characters\nretrieved are those characters from `start_pos` to the end of the text.",324,{"inputs":[{"name":"editableext"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"get_editable","","Retrieves whether `self` is editable. See\n`Editable::set_editable`.",324,{"inputs":[{"name":"editableext"}],"output":{"name":"bool"}}],[10,"get_position","","Retrieves the current position of the cursor relative to the start\nof the content of the editable.",324,{"inputs":[{"name":"editableext"}],"output":{"name":"i32"}}],[10,"get_selection_bounds","","Retrieves the selection bound of the editable. start_pos will be filled\nwith the start of the selection and `end_pos` with end. If no text was\nselected both will be identical and `false` will be returned.",324,{"inputs":[{"name":"editableext"}],"output":{"name":"option"}}],[10,"insert_text","","Inserts `new_text_length` bytes of `new_text` into the contents of the\nwidget, at position `position`.",324,{"inputs":[{"name":"editableext"},{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"paste_clipboard","","Pastes the content of the clipboard to the current position of the\ncursor in the editable.",324,{"inputs":[{"name":"editableext"}],"output":null}],[10,"select_region","","Selects a region of text. The characters that are selected are\nthose characters at positions from `start_pos` up to, but not\nincluding `end_pos`. If `end_pos` is negative, then the\ncharacters selected are those characters from `start_pos` to\nthe end of the text.",324,{"inputs":[{"name":"editableext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_editable","","Determines if the user can edit the text in the editable\nwidget or not.\n## `is_editable`\n`true` if the user is allowed to edit the text\n in the widget",324,{"inputs":[{"name":"editableext"},{"name":"bool"}],"output":null}],[10,"set_position","","Sets the cursor position in the editable to the given value.",324,{"inputs":[{"name":"editableext"},{"name":"i32"}],"output":null}],[8,"EntryExt","","Trait containing all `Entry` methods.",null,null],[10,"get_activates_default","","Retrieves the value set by `EntryExt::set_activates_default`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_alignment","","Gets the value set by `EntryExt::set_alignment`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"f32"}}],[10,"get_buffer","","Get the `EntryBuffer` object which holds the text for\nthis widget.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"entrybuffer"}}],[10,"get_completion","","Returns the auxiliary completion object currently in use by `self`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_current_icon_drag_source","","Returns the index of the icon which is the source of the current\nDND operation, or -1.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"get_cursor_hadjustment","","Retrieves the horizontal cursor adjustment for the entry.\nSee `EntryExt::set_cursor_hadjustment`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_has_frame","","Gets the value set by `EntryExt::set_has_frame`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_icon_activatable","","Returns whether the icon is activatable.\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_area","","Gets the area where entry’s icon at `icon_pos` is drawn.\nThis function is useful when drawing something to the\nentry in a draw callback.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"rectangle"}}],[10,"get_icon_at_pos","","Finds the icon at the given position and return its index. The\nposition’s coordinates are relative to the `self`’s top left corner.\nIf `x`, `y` doesn’t lie inside an icon, -1 is returned.\nThis function is intended for use in a `Widget::query-tooltip`\nsignal handler.\n## `x`\nthe x coordinate of the position to find\n## `y`\nthe y coordinate of the position to find",325,{"inputs":[{"name":"entryext"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"get_icon_name","","Retrieves the icon name used for the icon, or `None` if there is\nno icon or if the icon was set by some other method (e.g., by\npixbuf, stock or gicon).\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_pixbuf","","Retrieves the image used for the icon.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_sensitive","","Returns whether the icon appears sensitive or insensitive.\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"bool"}}],[10,"get_icon_stock","","Retrieves the stock id used for the icon, or `None` if there is\nno icon or if the icon was set by some other method (e.g., by\npixbuf, icon name or gicon).",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_storage_type","","Gets the type of representation being used by the icon\nto store image data. If the icon has no image data,\nthe return value will be `ImageType::Empty`.\n## `icon_pos`\nIcon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"imagetype"}}],[10,"get_icon_tooltip_markup","","Gets the contents of the tooltip on the icon at the specified\nposition in `self`.\n## `icon_pos`\nthe icon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_icon_tooltip_text","","Gets the contents of the tooltip on the icon at the specified\nposition in `self`.\n## `icon_pos`\nthe icon position",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"}],"output":{"name":"option"}}],[10,"get_input_hints","","Gets the value of the `Entry:input-hints` property.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"inputhints"}}],[10,"get_input_purpose","","Gets the value of the `Entry:input-purpose` property.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"inputpurpose"}}],[10,"get_invisible_char","","Retrieves the character displayed in place of the real characters\nfor entries with visibility set to false. See `EntryExt::set_invisible_char`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_layout_offsets","","Obtains the position of the `pango::Layout` used to render text\nin the entry, in widget coordinates. Useful if you want to line\nup the text in an entry with some other text, e.g. when using the\nentry to implement editable cells in a sheet widget.",325,null],[10,"get_max_length","","Retrieves the maximum allowed length of the text in\n`self`. See `EntryExt::set_max_length`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"get_max_width_chars","","Retrieves the desired maximum width of `self`, in characters.\nSee `EntryExt::set_max_width_chars`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"get_overwrite_mode","","Gets the value set by `EntryExt::set_overwrite_mode`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_placeholder_text","","Retrieves the text that will be displayed when `self` is empty and unfocused",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_progress_fraction","","Returns the current fraction of the task that’s been completed.\nSee `EntryExt::set_progress_fraction`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"f64"}}],[10,"get_progress_pulse_step","","Retrieves the pulse step set with `EntryExt::set_progress_pulse_step`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"f64"}}],[10,"get_text","","Retrieves the contents of the entry widget.\nSee also `Editable::get_chars`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"option"}}],[10,"get_text_area","","Gets the area where the entry’s text is drawn. This function is\nuseful when drawing something to the entry in a draw callback.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"rectangle"}}],[10,"get_text_length","","Retrieves the current length of the text in\n`self`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"u16"}}],[10,"get_visibility","","Retrieves whether the text in `self` is visible. See\n`EntryExt::set_visibility`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"bool"}}],[10,"get_width_chars","","Gets the value set by `EntryExt::set_width_chars`.",325,{"inputs":[{"name":"entryext"}],"output":{"name":"i32"}}],[10,"grab_focus_without_selecting","","Causes `self` to have keyboard focus.",325,{"inputs":[{"name":"entryext"}],"output":null}],[10,"layout_index_to_text_index","","Converts from a position in the entry contents (returned\nby `EntryExt::get_text`) to a position in the\nentry’s `pango::Layout` (returned by `EntryExt::get_layout`,\nwith text retrieved via `pango::Layout::get_text`).\n## `layout_index`\nbyte index into the entry layout text",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"progress_pulse","","Indicates that some progress is made, but you don’t know how much.\nCauses the entry’s progress indicator to enter “activity mode,”\nwhere a block bounces back and forth. Each call to\n`EntryExt::progress_pulse` causes the block to move by a little bit\n(the amount of movement per pulse is determined by\n`EntryExt::set_progress_pulse_step`).",325,{"inputs":[{"name":"entryext"}],"output":null}],[10,"reset_im_context","","Reset the input method context of the entry if needed.",325,{"inputs":[{"name":"entryext"}],"output":null}],[10,"set_activates_default","","If `setting` is `true`, pressing Enter in the `self` will activate the default\nwidget for the window containing the entry. This usually means that\nthe dialog box containing the entry will be closed, since the default\nwidget is usually one of the dialog buttons.",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_alignment","","Sets the alignment for the contents of the entry. This controls\nthe horizontal positioning of the contents when the displayed\ntext is shorter than the width of the entry.\n## `xalign`\nThe horizontal alignment, from 0 (left) to 1 (right).\n Reversed for RTL layouts",325,{"inputs":[{"name":"entryext"},{"name":"f32"}],"output":null}],[10,"set_buffer","","Set the `EntryBuffer` object which holds the text for\nthis widget.\n## `buffer`\na `EntryBuffer`",325,{"inputs":[{"name":"entryext"},{"name":"entrybuffer"}],"output":null}],[10,"set_completion","","Sets `completion` to be the auxiliary completion object to use with `self`.\nAll further configuration of the completion mechanism is done on\n`completion` using the `EntryCompletion` API. Completion is disabled if\n`completion` is set to `None`.\n## `completion`\nThe `EntryCompletion` or `None`",325,{"inputs":[{"name":"entryext"},{"name":"option"}],"output":null}],[10,"set_cursor_hadjustment","","Hooks up an adjustment to the cursor position in an entry, so that when\nthe cursor is moved, the adjustment is scrolled to show that position.\nSee `ScrolledWindow::get_hadjustment` for a typical way of obtaining\nthe adjustment.",325,{"inputs":[{"name":"entryext"},{"name":"adjustment"}],"output":null}],[10,"set_has_frame","","Sets whether the entry has a beveled frame around it.\n## `setting`\nnew value",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_icon_activatable","","Sets whether the icon is activatable.\n## `icon_pos`\nIcon position\n## `activatable`\n`true` if the icon should be activatable",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_from_icon_name","","Sets the icon shown in the entry at the specified position\nfrom the current icon theme.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_from_pixbuf","","Sets the icon shown in the specified position using a pixbuf.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_from_stock","","Sets the icon shown in the entry at the specified position from\na stock image.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_sensitive","","Sets the sensitivity for the specified icon.\n## `icon_pos`\nIcon position\n## `sensitive`\nSpecifies whether the icon should appear\n sensitive or insensitive",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"bool"}],"output":null}],[10,"set_icon_tooltip_markup","","Sets `tooltip` as the contents of the tooltip for the icon at\nthe specified position. `tooltip` is assumed to be marked up with\nthe [Pango text markup language][PangoMarkupFormat].",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_icon_tooltip_text","","Sets `tooltip` as the contents of the tooltip for the icon\nat the specified position.",325,{"inputs":[{"name":"entryext"},{"name":"entryiconposition"},{"name":"option"}],"output":null}],[10,"set_input_hints","","Sets the `Entry:input-hints` property, which\nallows input methods to fine-tune their behaviour.",325,{"inputs":[{"name":"entryext"},{"name":"inputhints"}],"output":null}],[10,"set_input_purpose","","Sets the `Entry:input-purpose` property which\ncan be used by on-screen keyboards and other input\nmethods to adjust their behaviour.",325,{"inputs":[{"name":"entryext"},{"name":"inputpurpose"}],"output":null}],[10,"set_invisible_char","","Sets the character to use in place of the actual text when\n`EntryExt::set_visibility` has been called to set text visibility\nto `false`. i.e. this is the character used in “password mode” to\nshow the user how many characters have been typed. By default, GTK+\npicks the best invisible char available in the current font. If you\nset the invisible char to 0, then the user will get no feedback\nat all; there will be no text on the screen as they type.\n## `ch`\na Unicode character",325,{"inputs":[{"name":"entryext"},{"name":"option"}],"output":null}],[10,"set_max_length","","Sets the maximum allowed length of the contents of the widget. If\nthe current contents are longer than the given length, then they\nwill be truncated to fit.",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":null}],[10,"set_max_width_chars","","Sets the desired maximum width in characters of `self`.",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":null}],[10,"set_overwrite_mode","","Sets whether the text is overwritten when typing in the `Entry`.\n## `overwrite`\nnew value",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_placeholder_text","","Sets text to be displayed in `self` when it is empty and unfocused.\nThis can be used to give a visual hint of the expected contents of\nthe `Entry`.",325,{"inputs":[{"name":"entryext"},{"name":"option"}],"output":null}],[10,"set_progress_fraction","","Causes the entry’s progress indicator to “fill in” the given\nfraction of the bar. The fraction should be between 0.0 and 1.0,\ninclusive.\n## `fraction`\nfraction of the task that’s been completed",325,{"inputs":[{"name":"entryext"},{"name":"f64"}],"output":null}],[10,"set_progress_pulse_step","","Sets the fraction of total entry width to move the progress\nbouncing block for each call to `EntryExt::progress_pulse`.\n## `fraction`\nfraction between 0.0 and 1.0",325,{"inputs":[{"name":"entryext"},{"name":"f64"}],"output":null}],[10,"set_text","","Sets the text in the widget to the given\nvalue, replacing the current contents.",325,{"inputs":[{"name":"entryext"},{"name":"str"}],"output":null}],[10,"set_visibility","","Sets whether the contents of the entry are visible or not.\nWhen visibility is set to `false`, characters are displayed\nas the invisible char, and will also appear that way when\nthe text in the entry widget is copied elsewhere.",325,{"inputs":[{"name":"entryext"},{"name":"bool"}],"output":null}],[10,"set_width_chars","","Changes the size request of the entry to be about the right size\nfor `n_chars` characters. Note that it changes the size\nrequest, the size can still be affected by\nhow you pack the widget into containers. If `n_chars` is -1, the\nsize reverts to the default entry size.\n## `n_chars`\nwidth in chars",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":null}],[10,"text_index_to_layout_index","","Converts from a position in the entry’s `pango::Layout` (returned by\n`EntryExt::get_layout`) to a position in the entry contents\n(returned by `EntryExt::get_text`).\n## `text_index`\nbyte index into the entry contents",325,{"inputs":[{"name":"entryext"},{"name":"i32"}],"output":{"name":"i32"}}],[10,"unset_invisible_char","","Unsets the invisible char previously set with\n`EntryExt::set_invisible_char`. So that the\ndefault invisible char is used again.",325,{"inputs":[{"name":"entryext"}],"output":null}],[8,"EventControllerExt","","Trait containing all `EventController` methods.",null,null],[10,"get_propagation_phase","","Gets the propagation phase at which `self` handles events.",326,{"inputs":[{"name":"eventcontrollerext"}],"output":{"name":"propagationphase"}}],[10,"get_widget","","Returns the `Widget` this controller relates to.",326,{"inputs":[{"name":"eventcontrollerext"}],"output":{"name":"option"}}],[10,"reset","","Resets the `self` to a clean state. Every interaction\nthe controller did through `EventController::handle-event`\nwill be dropped at this point.",326,{"inputs":[{"name":"eventcontrollerext"}],"output":null}],[10,"set_propagation_phase","","Sets the propagation phase at which a controller handles events.",326,{"inputs":[{"name":"eventcontrollerext"},{"name":"propagationphase"}],"output":null}],[8,"FileChooserExt","","Trait containing all `FileChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of filters that the user can select between.\nWhen a filter is selected, only files that are passed by that\nfilter are displayed.",327,{"inputs":[{"name":"filechooserext"},{"name":"filefilter"}],"output":null}],[10,"add_shortcut_folder","","Adds a folder to be displayed with the shortcut folders in a file chooser.\nNote that shortcut folders do not get saved, as they are provided by the\napplication. For example, you can use this to add a\n“/usr/share/mydrawprogram/Clipart” folder to the volume list.\n## `folder`\nfilename of the folder to add",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"result"}}],[10,"add_shortcut_folder_uri","","Adds a folder URI to be displayed with the shortcut folders in a file\nchooser. Note that shortcut folders do not get saved, as they are provided\nby the application. For example, you can use this to add a\n“file:///usr/share/mydrawprogram/Clipart” folder to the volume list.\n## `uri`\nURI of the folder to add",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"get_action","","Gets the type of operation that the file chooser is performing; see\n`FileChooser::set_action`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"filechooseraction"}}],[10,"get_create_folders","","Gets whether file choser will offer to create new folders.\nSee `FileChooser::set_create_folders`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_current_folder","","Gets the current folder of `self` as a local filename.\nSee `FileChooser::set_current_folder`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_current_folder_uri","","Gets the current folder of `self` as an URI.\nSee `FileChooser::set_current_folder_uri`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_current_name","","Gets the current name in the file selector, as entered by the user in the\ntext entry for “Name”.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_do_overwrite_confirmation","","Queries whether a file chooser is set to confirm for overwriting when the user\ntypes a file name that already exists.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_extra_widget","","Gets the current preview widget; see\n`FileChooser::set_extra_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_filename","","Gets the filename for the currently selected file in\nthe file selector. The filename is returned as an absolute path. If\nmultiple files are selected, one of the filenames will be returned at\nrandom.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_filenames","","Lists all the selected files and subfolders in the current folder of\n`self`. The returned names are full absolute paths. If files in the current\nfolder cannot be represented as local filenames they will be ignored. (See\n`FileChooser::get_uris`)",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"get_filter","","Gets the current filter; see `FileChooser::set_filter`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_local_only","","Gets whether only local files can be selected in the\nfile selector. See `FileChooser::set_local_only`",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_preview_filename","","Gets the filename that should be previewed in a custom preview\nwidget. See `FileChooser::set_preview_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_preview_uri","","Gets the URI that should be previewed in a custom preview\nwidget. See `FileChooser::set_preview_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_preview_widget","","Gets the current preview widget; see\n`FileChooser::set_preview_widget`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_preview_widget_active","","Gets whether the preview widget set by `FileChooser::set_preview_widget`\nshould be shown for the current filename. See\n`FileChooser::set_preview_widget_active`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether multiple files can be selected in the file\nselector. See `FileChooser::set_select_multiple`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_show_hidden","","Gets whether hidden files and folders are displayed in the file selector.\nSee `FileChooser::set_show_hidden`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"get_uri","","Gets the URI for the currently selected file in\nthe file selector. If multiple files are selected,\none of the filenames will be returned at random.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"option"}}],[10,"get_uris","","Lists all the selected files and subfolders in the current folder of\n`self`. The returned names are full absolute URIs.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"get_use_preview_label","","Gets whether a stock label should be drawn with the name of the previewed\nfile. See `FileChooser::set_use_preview_label`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"bool"}}],[10,"list_filters","","Lists the current set of user-selectable filters; see\n`FileChooser::add_filter`, `FileChooser::remove_filter`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"list_shortcut_folder_uris","","Queries the list of shortcut folders in the file chooser, as set by\n`FileChooser::add_shortcut_folder_uri`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"list_shortcut_folders","","Queries the list of shortcut folders in the file chooser, as set by\n`FileChooser::add_shortcut_folder`.",327,{"inputs":[{"name":"filechooserext"}],"output":{"name":"vec"}}],[10,"remove_filter","","Removes `filter` from the list of filters that the user can select between.\n## `filter`\na `FileFilter`",327,{"inputs":[{"name":"filechooserext"},{"name":"filefilter"}],"output":null}],[10,"remove_shortcut_folder","","Removes a folder from a file chooser’s list of shortcut folders.\n## `folder`\nfilename of the folder to remove",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"result"}}],[10,"remove_shortcut_folder_uri","","Removes a folder URI from a file chooser’s list of shortcut folders.\n## `uri`\nURI of the folder to remove",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"select_all","","Selects all the files in the current folder of a file chooser.",327,{"inputs":[{"name":"filechooserext"}],"output":null}],[10,"select_filename","","Selects a filename. If the file name isn’t in the current\nfolder of `self`, then the current folder of `self` will\nbe changed to the folder containing `filename`.\n## `filename`\nthe filename to select",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"select_uri","","Selects the file to by `uri`. If the URI doesn’t refer to a\nfile in the current folder of `self`, then the current folder of\n`self` will be changed to the folder containing `filename`.\n## `uri`\nthe URI to select",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_action","","Sets the type of operation that the chooser is performing; the\nuser interface is adapted to suit the selected action. For example,\nan option to create a new folder might be shown if the action is\n`FileChooserAction::Save` but not if the action is\n`FileChooserAction::Open`.\n## `action`\nthe action that the file selector is performing",327,{"inputs":[{"name":"filechooserext"},{"name":"filechooseraction"}],"output":null}],[10,"set_create_folders","","Sets whether file choser will offer to create new folders.\nThis is only relevant if the action is not set to be\n`FileChooserAction::Open`.\n## `create_folders`\n`true` if the Create Folder button should be displayed",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_current_folder","","Sets the current folder for `self` from a local filename.\nThe user will be shown the full contents of the current folder,\nplus user interface elements for navigating to other folders.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_current_folder_uri","","Sets the current folder for `self` from an URI.\nThe user will be shown the full contents of the current folder,\nplus user interface elements for navigating to other folders.",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_current_name","","Sets the current name in the file selector, as if entered\nby the user. Note that the name passed in here is a UTF-8\nstring rather than a filename. This function is meant for\nsuch uses as a suggested name in a “Save As...” dialog. You can\npass “Untitled.doc” or a similarly suitable suggestion for the `name`.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"set_do_overwrite_confirmation","","Sets whether a file chooser in `FileChooserAction::Save` mode will present\na confirmation dialog if the user types a file name that already exists. This\nis `false` by default.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_extra_widget","","Sets an application-supplied widget to provide extra options to the user.\n## `extra_widget`\nwidget for extra options",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"set_filename","","Sets `filename` as the current filename for the file chooser, by changing to\nthe file’s parent folder and actually selecting the file in list; all other\nfiles will be unselected. If the `self` is in\n`FileChooserAction::Save` mode, the file’s base name will also appear in\nthe dialog’s file name entry.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"set_filter","","Sets the current filter; only the files that pass the\nfilter will be displayed. If the user-selectable list of filters\nis non-empty, then the filter should be one of the filters\nin that list. Setting the current filter when the list of\nfilters is empty is useful if you want to restrict the displayed\nset of files without letting the user change it.\n## `filter`\na `FileFilter`",327,{"inputs":[{"name":"filechooserext"},{"name":"filefilter"}],"output":null}],[10,"set_local_only","","Sets whether only local files can be selected in the\nfile selector. If `local_only` is `true` (the default),\nthen the selected file or files are guaranteed to be\naccessible through the operating systems native file\nsystem and therefore the application only\nneeds to worry about the filename functions in\n`FileChooser`, like `FileChooser::get_filename`,\nrather than the URI functions like\n`FileChooser::get_uri`,",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_preview_widget","","Sets an application-supplied widget to use to display a custom preview\nof the currently selected file. To implement a preview, after setting the\npreview widget, you connect to the `FileChooser::update-preview`\nsignal, and call `FileChooser::get_preview_filename` or\n`FileChooser::get_preview_uri` on each change. If you can\ndisplay a preview of the new file, update your widget and\nset the preview active using `FileChooser::set_preview_widget_active`.\nOtherwise, set the preview inactive.",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"set_preview_widget_active","","Sets whether the preview widget set by\n`FileChooser::set_preview_widget` should be shown for the\ncurrent filename. When `active` is set to false, the file chooser\nmay display an internally generated preview of the current file\nor it may display no preview at all. See\n`FileChooser::set_preview_widget` for more details.\n## `active`\nwhether to display the user-specified preview widget",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether multiple files can be selected in the file selector. This is\nonly relevant if the action is set to be `FileChooserAction::Open` or\n`FileChooserAction::SelectFolder`.\n## `select_multiple`\n`true` if multiple files can be selected.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_show_hidden","","Sets whether hidden files and folders are displayed in the file selector.\n## `show_hidden`\n`true` if hidden files and folders should be displayed.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"set_uri","","Sets the file referred to by `uri` as the current file for the file chooser,\nby changing to the URI’s parent folder and actually selecting the URI in the\nlist. If the `self` is `FileChooserAction::Save` mode, the URI’s base\nname will also appear in the dialog’s file name entry.",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"set_use_preview_label","","Sets whether the file chooser should display a stock label with the name of\nthe file that is being previewed; the default is `true`. Applications that\nwant to draw the whole preview area themselves should set this to `false` and\ndisplay the name themselves in their preview widget.",327,{"inputs":[{"name":"filechooserext"},{"name":"bool"}],"output":null}],[10,"unselect_all","","Unselects all the files in the current folder of a file chooser.",327,{"inputs":[{"name":"filechooserext"}],"output":null}],[10,"unselect_filename","","Unselects a currently selected filename. If the filename\nis not in the current directory, does not exist, or\nis otherwise not currently selected, does nothing.\n## `filename`\nthe filename to unselect",327,{"inputs":[{"name":"filechooserext"},{"name":"t"}],"output":null}],[10,"unselect_uri","","Unselects the file referred to by `uri`. If the file\nis not in the current directory, does not exist, or\nis otherwise not currently selected, does nothing.\n## `uri`\nthe URI to unselect",327,{"inputs":[{"name":"filechooserext"},{"name":"str"}],"output":null}],[8,"FontChooserExt","","Trait containing all `FontChooser` methods.",null,null],[10,"get_font","","Gets the currently-selected font name.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"option"}}],[10,"get_font_size","","The selected font size.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"i32"}}],[10,"get_preview_text","","Gets the text displayed in the preview area.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"option"}}],[10,"get_show_preview_entry","","Returns whether the preview entry is shown or not.",328,{"inputs":[{"name":"fontchooserext"}],"output":{"name":"bool"}}],[10,"set_font","","Sets the currently-selected font.\n## `fontname`\na font name like “Helvetica 12” or “Times Bold 18”",328,{"inputs":[{"name":"fontchooserext"},{"name":"str"}],"output":null}],[10,"set_preview_text","","Sets the text displayed in the preview area.\nThe `text` is used to show how the selected font looks.\n## `text`\nthe text to display in the preview area",328,{"inputs":[{"name":"fontchooserext"},{"name":"str"}],"output":null}],[10,"set_show_preview_entry","","Shows or hides the editable preview entry.\n## `show_preview_entry`\nwhether to show the editable preview entry or not",328,{"inputs":[{"name":"fontchooserext"},{"name":"bool"}],"output":null}],[8,"FrameExt","","Trait containing all `Frame` methods.",null,null],[10,"get_label","","If the frame’s label widget is a `Label`, returns the\ntext in the label widget. (The frame will have a `Label`\nfor the label widget if a non-`None` argument was passed\nto `Frame::new`.)",329,{"inputs":[{"name":"frameext"}],"output":{"name":"option"}}],[10,"get_label_align","","Retrieves the X and Y alignment of the frame’s label. See\n`FrameExt::set_label_align`.\n## `xalign`\nlocation to store X alignment of\n frame’s label, or `None`\n## `yalign`\nlocation to store X alignment of\n frame’s label, or `None`",329,null],[10,"get_label_widget","","Retrieves the label widget for the frame. See\n`FrameExt::set_label_widget`.",329,{"inputs":[{"name":"frameext"}],"output":{"name":"option"}}],[10,"get_shadow_type","","Retrieves the shadow type of the frame. See\n`FrameExt::set_shadow_type`.",329,{"inputs":[{"name":"frameext"}],"output":{"name":"shadowtype"}}],[10,"set_label","","Sets the text of the label. If `label` is `None`,\nthe current label is removed.\n## `label`\nthe text to use as the label of the frame",329,{"inputs":[{"name":"frameext"},{"name":"option"}],"output":null}],[10,"set_label_align","","Sets the alignment of the frame widget’s label. The\ndefault values for a newly created frame are 0.0 and 0.5.\n## `xalign`\nThe position of the label along the top edge\n of the widget. A value of 0.0 represents left alignment;\n 1.0 represents right alignment.\n## `yalign`\nThe y alignment of the label. A value of 0.0 aligns under\n the frame; 1.0 aligns above the frame. If the values are exactly\n 0.0 or 1.0 the gap in the frame won’t be painted because the label\n will be completely above or below the frame.",329,{"inputs":[{"name":"frameext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_label_widget","","Sets the label widget for the frame. This is the widget that\nwill appear embedded in the top edge of the frame as a\ntitle.\n## `label_widget`\nthe new label widget",329,{"inputs":[{"name":"frameext"},{"name":"option"}],"output":null}],[10,"set_shadow_type","","Sets the shadow type for `self`.\n## `type_`\nthe new `ShadowType`",329,{"inputs":[{"name":"frameext"},{"name":"shadowtype"}],"output":null}],[8,"GestureExt","","Trait containing all `Gesture` methods.",null,null],[10,"get_bounding_box","","If there are touch sequences being currently handled by `self`,\nthis function returns `true` and fills in `rect` with the bounding\nbox containing all active touches. Otherwise, `false` will be\nreturned.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"option"}}],[10,"get_bounding_box_center","","If there are touch sequences being currently handled by `self`,\nthis function returns `true` and fills in `x` and `y` with the center\nof the bounding box containing all active touches. Otherwise, `false`\nwill be returned.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"option"}}],[10,"get_group","","Returns all gestures in the group of `self`",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"vec"}}],[10,"get_window","","Returns the user-defined window that receives the events\nhandled by `self`. See `GestureExt::set_window` for more\ninformation.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"option"}}],[10,"group","","Adds `gesture` to the same group than `self`. Gestures\nare by default isolated in their own groups.",330,{"inputs":[{"name":"gestureext"},{"name":"t"}],"output":null}],[10,"is_active","","Returns `true` if the gesture is currently active.\nA gesture is active meanwhile there are touch sequences\ninteracting with it.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"bool"}}],[10,"is_grouped_with","","Returns `true` if both gestures pertain to the same group.",330,{"inputs":[{"name":"gestureext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"is_recognized","","Returns `true` if the gesture is currently recognized.\nA gesture is recognized if there are as many interacting\ntouch sequences as required by `self`, and `Gesture::check`\nreturned `true` for the sequences being currently interpreted.",330,{"inputs":[{"name":"gestureext"}],"output":{"name":"bool"}}],[10,"set_state","","Sets the state of all sequences that `self` is currently\ninteracting with. See `GestureExt::set_sequence_state`\nfor more details on sequence states.",330,{"inputs":[{"name":"gestureext"},{"name":"eventsequencestate"}],"output":{"name":"bool"}}],[10,"set_window","","Sets a specific window to receive events about, so `self`\nwill effectively handle only events targeting `window`, or\na child of it. `window` must pertain to `EventControllerExt::get_widget`.",330,{"inputs":[{"name":"gestureext"},{"name":"option"}],"output":null}],[10,"ungroup","","Separates `self` into an isolated group.",330,{"inputs":[{"name":"gestureext"}],"output":null}],[8,"GestureDragExt","","Trait containing all `GestureDrag` methods.",null,null],[10,"get_offset","","If the `self` is active, this function returns `true` and\nfills in `x` and `y` with the coordinates of the current point,\nas an offset to the starting drag point.",331,{"inputs":[{"name":"gesturedragext"}],"output":{"name":"option"}}],[10,"get_start_point","","If the `self` is active, this function returns `true`\nand fills in `x` and `y` with the drag start coordinates,\nin window-relative coordinates.",331,{"inputs":[{"name":"gesturedragext"}],"output":{"name":"option"}}],[8,"GestureSingleExt","","Trait containing all `GestureSingle` methods.",null,null],[10,"get_button","","Returns the button number `self` listens for, or 0 if `self`\nreacts to any button press.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"u32"}}],[10,"get_current_button","","Returns the button number currently interacting with `self`, or 0 if there\nis none.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"u32"}}],[10,"get_exclusive","","Gets whether a gesture is exclusive. For more information, see\n`GestureSingleExt::set_exclusive`.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"bool"}}],[10,"get_touch_only","","Returns `true` if the gesture is only triggered by touch events.",332,{"inputs":[{"name":"gesturesingleext"}],"output":{"name":"bool"}}],[10,"set_button","","Sets the button number `self` listens to. If non-0, every\nbutton press from a different button number will be ignored.\nTouch events implicitly match with button 1.",332,{"inputs":[{"name":"gesturesingleext"},{"name":"u32"}],"output":null}],[10,"set_exclusive","","Sets whether `self` is exclusive. An exclusive gesture will\nonly handle pointer and &quot;pointer emulated&quot; touch events, so at\nany given time, there is only one sequence able to interact with\nthose.",332,{"inputs":[{"name":"gesturesingleext"},{"name":"bool"}],"output":null}],[10,"set_touch_only","","If `touch_only` is `true`, `self` will only handle events of type\n`gdk::EventType::TouchBegin`, `gdk::EventType::TouchUpdate` or `gdk::EventType::TouchEnd`. If `false`,\nmouse events will be handled too.",332,{"inputs":[{"name":"gesturesingleext"},{"name":"bool"}],"output":null}],[8,"MenuItemExt","","Trait containing all `MenuItem` methods.",null,null],[10,"deselect","","Emits the `MenuItem::deselect` signal on the given item.",333,{"inputs":[{"name":"menuitemext"}],"output":null}],[10,"get_accel_path","","Retrieve the accelerator path that was previously set on `self`.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"option"}}],[10,"get_label","","Sets `text` on the `self` label",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"option"}}],[10,"get_reserve_indicator","","Returns whether the `self` reserves space for\nthe submenu indicator, regardless if it has a submenu\nor not.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"bool"}}],[10,"get_right_justified","","Gets whether the menu item appears justified at the right\nside of the menu bar.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"bool"}}],[10,"get_submenu","","Gets the submenu underneath this menu item, if any.\nSee `MenuItemExt::set_submenu`.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"option"}}],[10,"get_use_underline","","Checks if an underline in the text indicates the next character\nshould be used for the mnemonic accelerator key.",333,{"inputs":[{"name":"menuitemext"}],"output":{"name":"bool"}}],[10,"select","","Emits the `MenuItem::select` signal on the given item.",333,{"inputs":[{"name":"menuitemext"}],"output":null}],[10,"set_accel_path","","Set the accelerator path on `self`, through which runtime\nchanges of the menu item’s accelerator caused by the user can be\nidentified and saved to persistent storage (see `AccelMap::save`\non this). To set up a default accelerator for this menu item, call\n`AccelMap::add_entry` with the same `accel_path`. See also\n`AccelMap::add_entry` on the specifics of accelerator paths,\nand `Menu::set_accel_path` for a more convenient variant of\nthis function.",333,{"inputs":[{"name":"menuitemext"},{"name":"option"}],"output":null}],[10,"set_label","","Sets `text` on the `self` label\n## `label`\nthe text you want to set",333,{"inputs":[{"name":"menuitemext"},{"name":"str"}],"output":null}],[10,"set_reserve_indicator","","Sets whether the `self` should reserve space for\nthe submenu indicator, regardless if it actually has\na submenu or not.",333,{"inputs":[{"name":"menuitemext"},{"name":"bool"}],"output":null}],[10,"set_right_justified","","Sets whether the menu item appears justified at the right\nside of a menu bar. This was traditionally done for “Help”\nmenu items, but is now considered a bad idea. (If the widget\nlayout is reversed for a right-to-left language like Hebrew\nor Arabic, right-justified-menu-items appear at the left.)",333,{"inputs":[{"name":"menuitemext"},{"name":"bool"}],"output":null}],[10,"set_submenu","","Sets or replaces the menu item’s submenu, or removes it when a `None`\nsubmenu is passed.\n## `submenu`\nthe submenu, or `None`",333,{"inputs":[{"name":"menuitemext"},{"name":"option"}],"output":null}],[10,"set_use_underline","","If true, an underline in the text indicates the next character\nshould be used for the mnemonic accelerator key.\n## `setting`\n`true` if underlines in the text indicate mnemonics",333,{"inputs":[{"name":"menuitemext"},{"name":"bool"}],"output":null}],[10,"toggle_size_allocate","","Emits the `MenuItem::toggle-size-allocate` signal on the given item.\n## `allocation`\nthe allocation to use as signal data.",333,{"inputs":[{"name":"menuitemext"},{"name":"i32"}],"output":null}],[10,"toggle_size_request","","Emits the `MenuItem::toggle-size-request` signal on the given item.\n## `requisition`\nthe requisition to use as signal data.",333,{"inputs":[{"name":"menuitemext"},{"name":"i32"}],"output":null}],[8,"MenuShellExt","","Trait containing all `MenuShell` methods.",null,null],[10,"activate_item","","Activates the menu item within the menu shell.\n## `menu_item`\nthe `MenuItem` to activate\n## `force_deactivate`\nif `true`, force the deactivation of the\n menu shell after the menu item is activated",334,{"inputs":[{"name":"menushellext"},{"name":"t"},{"name":"bool"}],"output":null}],[10,"append","","Adds a new `MenuItem` to the end of the menu shell&#39;s\nitem list.\n## `child`\nThe `MenuItem` to add",334,{"inputs":[{"name":"menushellext"},{"name":"t"}],"output":null}],[10,"cancel","","Cancels the selection within the menu shell.",334,{"inputs":[{"name":"menushellext"}],"output":null}],[10,"deactivate","","Deactivates the menu shell.",334,{"inputs":[{"name":"menushellext"}],"output":null}],[10,"deselect","","Deselects the currently selected item from the menu shell,\nif any.",334,{"inputs":[{"name":"menushellext"}],"output":null}],[10,"get_parent_shell","","Gets the parent menu shell.",334,{"inputs":[{"name":"menushellext"}],"output":{"name":"option"}}],[10,"get_selected_item","","Gets the currently selected item.",334,{"inputs":[{"name":"menushellext"}],"output":{"name":"option"}}],[10,"get_take_focus","","Returns `true` if the menu shell will take the keyboard focus on popup.",334,{"inputs":[{"name":"menushellext"}],"output":{"name":"bool"}}],[10,"insert","","Adds a new `MenuItem` to the menu shell’s item list\nat the position indicated by `position`.\n## `child`\nThe `MenuItem` to add\n## `position`\nThe position in the item list where `child`\n is added. Positions are numbered from 0 to n-1",334,{"inputs":[{"name":"menushellext"},{"name":"t"},{"name":"i32"}],"output":null}],[10,"prepend","","Adds a new `MenuItem` to the beginning of the menu shell&#39;s\nitem list.\n## `child`\nThe `MenuItem` to add",334,{"inputs":[{"name":"menushellext"},{"name":"t"}],"output":null}],[10,"select_first","","Select the first visible or selectable child of the menu shell;\ndon’t select tearoff items unless the only item is a tearoff\nitem.\n## `search_sensitive`\nif `true`, search for the first selectable\n menu item, otherwise select nothing if\n the first item isn’t sensitive. This\n should be `false` if the menu is being\n popped up initially.",334,{"inputs":[{"name":"menushellext"},{"name":"bool"}],"output":null}],[10,"select_item","","Selects the menu item from the menu shell.\n## `menu_item`\nThe `MenuItem` to select",334,{"inputs":[{"name":"menushellext"},{"name":"t"}],"output":null}],[10,"set_take_focus","","If `take_focus` is `true` (the default) the menu shell will take\nthe keyboard focus so that it will receive all keyboard events\nwhich is needed to enable keyboard navigation in menus.",334,{"inputs":[{"name":"menushellext"},{"name":"bool"}],"output":null}],[8,"MiscExt","","`[Deprecated since 3.14]` Trait containing all `Misc` methods.",null,null],[10,"get_alignment","","Gets the X and Y alignment of the widget within its allocation.\nSee `MiscExt::set_alignment`.",335,null],[10,"get_padding","","Gets the padding in the X and Y directions of the widget.\nSee `MiscExt::set_padding`.",335,null],[10,"set_alignment","","Sets the alignment of the widget.",335,{"inputs":[{"name":"miscext"},{"name":"f32"},{"name":"f32"}],"output":null}],[10,"set_padding","","Sets the amount of space to add around the widget.",335,{"inputs":[{"name":"miscext"},{"name":"i32"},{"name":"i32"}],"output":null}],[8,"OrientableExt","","Trait containing all `Orientable` methods.",null,null],[10,"get_orientation","","Retrieves the orientation of the `self`.",336,{"inputs":[{"name":"orientableext"}],"output":{"name":"orientation"}}],[10,"set_orientation","","Sets the orientation of the `self`.\n## `orientation`\nthe orientable’s new orientation.",336,{"inputs":[{"name":"orientableext"},{"name":"orientation"}],"output":null}],[8,"PopoverExt","","Trait containing all `Popover` methods.",null,null],[10,"get_modal","","Returns whether the popover is modal, see gtk_popover_set_modal to\nsee the implications of this.",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"bool"}}],[10,"get_pointing_to","","If a rectangle to point to has been set, this function will\nreturn `true` and fill in `rect` with such rectangle, otherwise\nit will return `false` and fill in `rect` with the attached\nwidget coordinates.\n## `rect`\nlocation to store the rectangle",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"option"}}],[10,"get_position","","Returns the preferred position of `self`.",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"positiontype"}}],[10,"get_relative_to","","Returns the widget `self` is currently attached to",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"option"}}],[10,"get_transitions_enabled","","Returns whether show/hide transitions are enabled on this popover.",337,{"inputs":[{"name":"popoverext"}],"output":{"name":"bool"}}],[10,"set_modal","","Sets whether `self` is modal, a modal popover will grab all input\nwithin the toplevel and grab the keyboard focus on it when being\ndisplayed. Clicking outside the popover area or pressing Esc will\ndismiss the popover and ungrab input.",337,{"inputs":[{"name":"popoverext"},{"name":"bool"}],"output":null}],[10,"set_pointing_to","","Sets the rectangle that `self` will point to, in the\ncoordinate space of the widget `self` is attached to,\nsee `PopoverExt::set_relative_to`.",337,{"inputs":[{"name":"popoverext"},{"name":"rectangle"}],"output":null}],[10,"set_position","","Sets the preferred position for `self` to appear. If the `self`\nis currently visible, it will be immediately updated.",337,{"inputs":[{"name":"popoverext"},{"name":"positiontype"}],"output":null}],[10,"set_relative_to","","Sets a new widget to be attached to `self`. If `self` is\nvisible, the position will be updated.",337,{"inputs":[{"name":"popoverext"},{"name":"option"}],"output":null}],[10,"set_transitions_enabled","","Sets whether show/hide transitions are enabled on this popover",337,{"inputs":[{"name":"popoverext"},{"name":"bool"}],"output":null}],[8,"RangeExt","","Trait containing all `Range` methods.",null,null],[10,"get_adjustment","","Get the `Adjustment` which is the “model” object for `Range`.\nSee `RangeExt::set_adjustment` for details.\nThe return value does not have a reference added, so should not\nbe unreferenced.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"adjustment"}}],[10,"get_fill_level","","Gets the current position of the fill level indicator.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"f64"}}],[10,"get_flippable","","Gets the value set by `RangeExt::set_flippable`.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_inverted","","Gets the value set by `RangeExt::set_inverted`.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_lower_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the\n&#39;lower&#39; end of the `Range`’s adjustment.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"sensitivitytype"}}],[10,"get_min_slider_size","","This function is useful mainly for `Range` subclasses.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"i32"}}],[10,"get_range_rect","","This function returns the area that contains the range’s trough\nand its steppers, in widget-&gt;window coordinates.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"rectangle"}}],[10,"get_restrict_to_fill_level","","Gets whether the range is restricted to the fill level.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_round_digits","","Gets the number of digits to round the value to when\nit changes. See `Range::change-value`.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"i32"}}],[10,"get_show_fill_level","","Gets whether the range displays the fill level graphically.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_slider_range","","This function returns sliders range along the long dimension,\nin widget-&gt;window coordinates.",338,null],[10,"get_slider_size_fixed","","This function is useful mainly for `Range` subclasses.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"bool"}}],[10,"get_upper_stepper_sensitivity","","Gets the sensitivity policy for the stepper that points to the\n&#39;upper&#39; end of the `Range`’s adjustment.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"sensitivitytype"}}],[10,"get_value","","Gets the current value of the range.",338,{"inputs":[{"name":"rangeext"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the adjustment to be used as the “model” object for this range\nwidget. The adjustment indicates the current range value, the\nminimum and maximum range values, the step/page increments used\nfor keybindings and scrolling, and the page size. The page size\nis normally 0 for `Scale` and nonzero for `Scrollbar`, and\nindicates the size of the visible area of the widget being scrolled.\nThe page size affects the size of the scrollbar slider.\n## `adjustment`\na `Adjustment`",338,{"inputs":[{"name":"rangeext"},{"name":"adjustment"}],"output":null}],[10,"set_fill_level","","Set the new position of the fill level indicator.",338,{"inputs":[{"name":"rangeext"},{"name":"f64"}],"output":null}],[10,"set_flippable","","If a range is flippable, it will switch its direction if it is\nhorizontal and its direction is `TextDirection::Rtl`.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_increments","","Sets the step and page sizes for the range.\nThe step size is used when the user clicks the `Scrollbar`\narrows or moves `Scale` via arrow keys. The page size\nis used for example when moving via Page Up or Page Down keys.\n## `step`\nstep size\n## `page`\npage size",338,{"inputs":[{"name":"rangeext"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_inverted","","Ranges normally move from lower to higher values as the\nslider moves from top to bottom or left to right. Inverted\nranges have higher values at the top or on the right rather than\non the bottom or left.\n## `setting`\n`true` to invert the range",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_lower_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the\n&#39;lower&#39; end of the `Range`’s adjustment.\n## `sensitivity`\nthe lower stepper’s sensitivity policy.",338,{"inputs":[{"name":"rangeext"},{"name":"sensitivitytype"}],"output":null}],[10,"set_min_slider_size","","Sets the minimum size of the range’s slider.",338,{"inputs":[{"name":"rangeext"},{"name":"i32"}],"output":null}],[10,"set_range","","Sets the allowable values in the `Range`, and clamps the range\nvalue to be between `min` and `max`. (If the range has a non-zero\npage size, it is clamped between `min` and `max` - page-size.)\n## `min`\nminimum range value\n## `max`\nmaximum range value",338,{"inputs":[{"name":"rangeext"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_restrict_to_fill_level","","Sets whether the slider is restricted to the fill level. See\n`RangeExt::set_fill_level` for a general description of the fill\nlevel concept.\n## `restrict_to_fill_level`\nWhether the fill level restricts slider movement.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_round_digits","","Sets the number of digits to round the value to when\nit changes. See `Range::change-value`.\n## `round_digits`\nthe precision in digits, or -1",338,{"inputs":[{"name":"rangeext"},{"name":"i32"}],"output":null}],[10,"set_show_fill_level","","Sets whether a graphical fill level is show on the trough. See\n`RangeExt::set_fill_level` for a general description of the fill\nlevel concept.\n## `show_fill_level`\nWhether a fill level indicator graphics is shown.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_slider_size_fixed","","Sets whether the range’s slider has a fixed size, or a size that\ndepends on its adjustment’s page size.",338,{"inputs":[{"name":"rangeext"},{"name":"bool"}],"output":null}],[10,"set_upper_stepper_sensitivity","","Sets the sensitivity policy for the stepper that points to the\n&#39;upper&#39; end of the `Range`’s adjustment.\n## `sensitivity`\nthe upper stepper’s sensitivity policy.",338,{"inputs":[{"name":"rangeext"},{"name":"sensitivitytype"}],"output":null}],[10,"set_value","","Sets the current value of the range; if the value is outside the\nminimum or maximum range values, it will be clamped to fit inside\nthem. The range emits the `Range::value-changed` signal if the\nvalue changes.\n## `value`\nnew value of the range",338,{"inputs":[{"name":"rangeext"},{"name":"f64"}],"output":null}],[8,"RecentChooserExt","","Trait containing all `RecentChooser` methods.",null,null],[10,"add_filter","","Adds `filter` to the list of `RecentFilter` objects held by `self`.",339,{"inputs":[{"name":"recentchooserext"},{"name":"recentfilter"}],"output":null}],[10,"get_current_item","","Gets the `RecentInfo` currently selected by `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"recentinfo"}}],[10,"get_current_uri","","Gets the URI currently selected by `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"option"}}],[10,"get_filter","","Gets the `RecentFilter` object currently used by `self` to affect\nthe display of the recently used resources.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"option"}}],[10,"get_items","","Gets the list of recently used resources in form of `RecentInfo` objects.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"vec"}}],[10,"get_limit","","Gets the number of items returned by `RecentChooser::get_items`\nand `RecentChooser::get_uris`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"i32"}}],[10,"get_local_only","","Gets whether only local resources should be shown in the recently used\nresources selector. See `RecentChooser::set_local_only`",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_select_multiple","","Gets whether `self` can select multiple items.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_icons","","Retrieves whether `self` should show an icon near the resource.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_not_found","","Retrieves whether `self` should show the recently used resources that\nwere not found.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_private","","Returns whether `self` should display recently used resources\nregistered as private.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_show_tips","","Gets whether `self` should display tooltips containing the full path\nof a recently user resource.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"bool"}}],[10,"get_sort_type","","Gets the value set by `RecentChooser::set_sort_type`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"recentsorttype"}}],[10,"list_filters","","Gets the `RecentFilter` objects held by `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":{"name":"vec"}}],[10,"remove_filter","","Removes `filter` from the list of `RecentFilter` objects held by `self`.\n## `filter`\na `RecentFilter`",339,{"inputs":[{"name":"recentchooserext"},{"name":"recentfilter"}],"output":null}],[10,"select_all","","Selects all the items inside `self`, if the `self` supports\nmultiple selection.",339,{"inputs":[{"name":"recentchooserext"}],"output":null}],[10,"select_uri","","Selects `uri` inside `self`.\n## `uri`\na URI",339,{"inputs":[{"name":"recentchooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_current_uri","","Sets `uri` as the current URI for `self`.\n## `uri`\na URI",339,{"inputs":[{"name":"recentchooserext"},{"name":"str"}],"output":{"name":"result"}}],[10,"set_filter","","Sets `filter` as the current `RecentFilter` object used by `self`\nto affect the displayed recently used resources.\n## `filter`\na `RecentFilter`",339,{"inputs":[{"name":"recentchooserext"},{"name":"option"}],"output":null}],[10,"set_limit","","Sets the number of items that should be returned by\n`RecentChooser::get_items` and `RecentChooser::get_uris`.\n## `limit`\na positive integer, or -1 for all items",339,{"inputs":[{"name":"recentchooserext"},{"name":"i32"}],"output":null}],[10,"set_local_only","","Sets whether only local resources, that is resources using the file:// URI\nscheme, should be shown in the recently used resources selector. If\n`local_only` is `true` (the default) then the shown resources are guaranteed\nto be accessible through the operating system native file system.\n## `local_only`\n`true` if only local files can be shown",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_select_multiple","","Sets whether `self` can select multiple items.\n## `select_multiple`\n`true` if `self` can select more than one item",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_icons","","Sets whether `self` should show an icon near the resource when\ndisplaying it.\n## `show_icons`\nwhether to show an icon near the resource",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_not_found","","Sets whether `self` should display the recently used resources that\nit didn’t find. This only applies to local resources.\n## `show_not_found`\nwhether to show the local items we didn’t find",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_private","","Whether to show recently used resources marked registered as private.\n## `show_private`\n`true` to show private items, `false` otherwise",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_show_tips","","Sets whether to show a tooltips containing the full path of each\nrecently used resource in a `RecentChooser` widget.\n## `show_tips`\n`true` if tooltips should be shown",339,{"inputs":[{"name":"recentchooserext"},{"name":"bool"}],"output":null}],[10,"set_sort_type","","Changes the sorting order of the recently used resources list displayed by\n`self`.\n## `sort_type`\nsort order that the chooser should use",339,{"inputs":[{"name":"recentchooserext"},{"name":"recentsorttype"}],"output":null}],[10,"unselect_all","","Unselects all the items inside `self`.",339,{"inputs":[{"name":"recentchooserext"}],"output":null}],[10,"unselect_uri","","Unselects `uri` inside `self`.\n## `uri`\na URI",339,{"inputs":[{"name":"recentchooserext"},{"name":"str"}],"output":null}],[8,"ScaleButtonExt","","Trait containing all `ScaleButton` methods.",null,null],[10,"get_adjustment","","Gets the `Adjustment` associated with the `ScaleButton`’s scale.\nSee `RangeExt::get_adjustment` for details.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"adjustment"}}],[10,"get_minus_button","","Retrieves the minus button of the `ScaleButton`.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"option"}}],[10,"get_plus_button","","Retrieves the plus button of the `ScaleButton`.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"option"}}],[10,"get_popup","","Retrieves the popup of the `ScaleButton`.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"option"}}],[10,"get_value","","Gets the current value of the scale button.",340,{"inputs":[{"name":"scalebuttonext"}],"output":{"name":"f64"}}],[10,"set_adjustment","","Sets the `Adjustment` to be used as a model\nfor the `ScaleButton`’s scale.\nSee `RangeExt::set_adjustment` for details.\n## `adjustment`\na `Adjustment`",340,{"inputs":[{"name":"scalebuttonext"},{"name":"adjustment"}],"output":null}],[10,"set_icons","","Sets the icons to be used by the scale button.\nFor details, see the `ScaleButton:icons` property.\n## `icons`\na `None`-terminated array of icon names",340,null],[10,"set_value","","Sets the current value of the scale; if the value is outside\nthe minimum or maximum range values, it will be clamped to fit\ninside them. The scale button emits the `ScaleButton::value-changed`\nsignal if the value changes.\n## `value`\nnew value of the scale button",340,{"inputs":[{"name":"scalebuttonext"},{"name":"f64"}],"output":null}],[8,"ScrollableExt","","Trait containing all `Scrollable` methods.",null,null],[10,"get_hadjustment","","Retrieves the `Adjustment` used for horizontal scrolling.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"option"}}],[10,"get_hscroll_policy","","Gets the horizontal `ScrollablePolicy`.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"scrollablepolicy"}}],[10,"get_vadjustment","","Retrieves the `Adjustment` used for vertical scrolling.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"option"}}],[10,"get_vscroll_policy","","Gets the vertical `ScrollablePolicy`.",341,{"inputs":[{"name":"scrollableext"}],"output":{"name":"scrollablepolicy"}}],[10,"set_hadjustment","","Sets the horizontal adjustment of the `Scrollable`.\n## `hadjustment`\na `Adjustment`",341,{"inputs":[{"name":"scrollableext"},{"name":"option"}],"output":null}],[10,"set_hscroll_policy","","Sets the `ScrollablePolicy` to determine whether\nhorizontal scrolling should start below the minimum width or\nbelow the natural width.\n## `policy`\nthe horizontal `ScrollablePolicy`",341,{"inputs":[{"name":"scrollableext"},{"name":"scrollablepolicy"}],"output":null}],[10,"set_vadjustment","","Sets the vertical adjustment of the `Scrollable`.\n## `vadjustment`\na `Adjustment`",341,{"inputs":[{"name":"scrollableext"},{"name":"option"}],"output":null}],[10,"set_vscroll_policy","","Sets the `ScrollablePolicy` to determine whether\nvertical scrolling should start below the minimum height or\nbelow the natural height.\n## `policy`\nthe vertical `ScrollablePolicy`",341,{"inputs":[{"name":"scrollableext"},{"name":"scrollablepolicy"}],"output":null}],[8,"ScrolledWindowExt","","Trait containing all `ScrolledWindow` methods.",null,null],[10,"add_with_viewport","","Used to add children without native scrolling capabilities. This\nis simply a convenience function; it is equivalent to adding the\nunscrollable child to a viewport, then adding the viewport to the\nscrolled window. If a child has native scrolling, use\n`ContainerExt::add` instead of this function.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"t"}],"output":null}],[10,"get_capture_button_press","","Return whether button presses are captured during kinetic\nscrolling. See `ScrolledWindowExt::set_capture_button_press`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"bool"}}],[10,"get_hadjustment","","Returns the horizontal scrollbar’s adjustment, used to connect the\nhorizontal scrollbar to the child widget’s horizontal scroll\nfunctionality.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"get_hscrollbar","","Returns the horizontal scrollbar of `self`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"get_kinetic_scrolling","","Returns the specified kinetic scrolling behavior.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"bool"}}],[10,"get_min_content_height","","Gets the minimal content height of `self`, or -1 if not set.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"i32"}}],[10,"get_min_content_width","","Gets the minimum content width of `self`, or -1 if not set.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"i32"}}],[10,"get_overlay_scrolling","","Returns whether overlay scrolling is enabled for this scrolled window.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"bool"}}],[10,"get_placement","","Gets the placement of the contents with respect to the scrollbars\nfor the scrolled window. See `ScrolledWindowExt::set_placement`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"cornertype"}}],[10,"get_policy","","Retrieves the current policy values for the horizontal and vertical\nscrollbars. See `ScrolledWindowExt::set_policy`.\n## `hscrollbar_policy`\nlocation to store the policy\n for the horizontal scrollbar, or `None`\n## `vscrollbar_policy`\nlocation to store the policy\n for the vertical scrollbar, or `None`",342,null],[10,"get_shadow_type","","Gets the shadow type of the scrolled window. See\n`ScrolledWindowExt::set_shadow_type`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"shadowtype"}}],[10,"get_vadjustment","","Returns the vertical scrollbar’s adjustment, used to connect the\nvertical scrollbar to the child widget’s vertical scroll functionality.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"get_vscrollbar","","Returns the vertical scrollbar of `self`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":{"name":"option"}}],[10,"set_capture_button_press","","Changes the behaviour of `self` wrt. to the initial\nevent that possibly starts kinetic scrolling. When `capture_button_press`\nis set to `true`, the event is captured by the scrolled window, and\nthen later replayed if it is meant to go to the child widget.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"bool"}],"output":null}],[10,"set_hadjustment","","Sets the `Adjustment` for the horizontal scrollbar.\n## `hadjustment`\nhorizontal scroll adjustment",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"adjustment"}],"output":null}],[10,"set_kinetic_scrolling","","Turns kinetic scrolling on or off.\nKinetic scrolling only applies to devices with source\n`gdk::InputSource::Touchscreen`.\n## `kinetic_scrolling`\n`true` to enable kinetic scrolling",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"bool"}],"output":null}],[10,"set_min_content_height","","Sets the minimum height that `self` should keep visible.\nNote that this can and (usually will) be smaller than the minimum\nsize of the content.\n## `height`\nthe minimal content height",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"i32"}],"output":null}],[10,"set_min_content_width","","Sets the minimum width that `self` should keep visible.\nNote that this can and (usually will) be smaller than the minimum\nsize of the content.\n## `width`\nthe minimal content width",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"i32"}],"output":null}],[10,"set_overlay_scrolling","","Enables or disables overlay scrolling for this scrolled window.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"bool"}],"output":null}],[10,"set_placement","","Sets the placement of the contents with respect to the scrollbars\nfor the scrolled window.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"cornertype"}],"output":null}],[10,"set_policy","","Sets the scrollbar policy for the horizontal and vertical scrollbars.",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"policytype"},{"name":"policytype"}],"output":null}],[10,"set_shadow_type","","Changes the type of shadow drawn around the contents of\n`self`.\n## `type_`\nkind of shadow to draw around scrolled window contents",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"shadowtype"}],"output":null}],[10,"set_vadjustment","","Sets the `Adjustment` for the vertical scrollbar.\n## `vadjustment`\nvertical scroll adjustment",342,{"inputs":[{"name":"scrolledwindowext"},{"name":"adjustment"}],"output":null}],[10,"unset_placement","","Unsets the placement of the contents with respect to the scrollbars\nfor the scrolled window. If no window placement is set for a scrolled\nwindow, it defaults to `CornerType::TopLeft`.",342,{"inputs":[{"name":"scrolledwindowext"}],"output":null}],[8,"ToggleButtonExt","","Trait containing all `ToggleButton` methods.",null,null],[10,"get_active","","Queries a `ToggleButton` and returns its current state. Returns `true` if\nthe toggle button is pressed in and `false` if it is raised.",343,{"inputs":[{"name":"togglebuttonext"}],"output":{"name":"bool"}}],[10,"get_inconsistent","","Gets the value set by `ToggleButtonExt::set_inconsistent`.",343,{"inputs":[{"name":"togglebuttonext"}],"output":{"name":"bool"}}],[10,"get_mode","","Retrieves whether the button is displayed as a separate indicator\nand label. See `ToggleButtonExt::set_mode`.",343,{"inputs":[{"name":"togglebuttonext"}],"output":{"name":"bool"}}],[10,"set_active","","Sets the status of the toggle button. Set to `true` if you want the\n`ToggleButton` to be “pressed in”, and `false` to raise it.\nThis action causes the `ToggleButton::toggled` signal and the\n`Button::clicked` signal to be emitted.\n## `is_active`\n`true` or `false`.",343,{"inputs":[{"name":"togglebuttonext"},{"name":"bool"}],"output":null}],[10,"set_inconsistent","","If the user has selected a range of elements (such as some text or\nspreadsheet cells) that are affected by a toggle button, and the\ncurrent values in that range are inconsistent, you may want to\ndisplay the toggle in an “in between” state. This function turns on\n“in between” display. Normally you would turn off the inconsistent\nstate again if the user toggles the toggle button. This has to be\ndone manually, `ToggleButtonExt::set_inconsistent` only affects\nvisual appearance, it doesn’t affect the semantics of the button.\n## `setting`\n`true` if state is inconsistent",343,{"inputs":[{"name":"togglebuttonext"},{"name":"bool"}],"output":null}],[10,"set_mode","","Sets whether the button is displayed as a separate indicator and label.\nYou can call this function on a checkbutton or a radiobutton with\n`draw_indicator` = `false` to make the button look like a normal button",343,{"inputs":[{"name":"togglebuttonext"},{"name":"bool"}],"output":null}],[10,"toggled","","Emits the `ToggleButton::toggled` signal on the\n`ToggleButton`. There is no good reason for an\napplication ever to call this function.",343,{"inputs":[{"name":"togglebuttonext"}],"output":null}],[8,"ToolButtonExt","","Trait containing all `ToolButton` methods.",null,null],[10,"get_icon_name","","Returns the name of the themed icon for the tool button,\nsee `ToolButtonExt::set_icon_name`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_icon_widget","","Return the widget used as icon widget on `self`.\nSee `ToolButtonExt::set_icon_widget`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_label","","Returns the label used by the tool button, or `None` if the tool button\ndoesn’t have a label. or uses a the label from a stock item. The returned\nstring is owned by GTK+, and must not be modified or freed.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_label_widget","","Returns the widget used as label on `self`.\nSee `ToolButtonExt::set_label_widget`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_stock_id","","Returns the name of the stock item. See `ToolButtonExt::set_stock_id`.\nThe returned string is owned by GTK+ and must not be freed or modifed.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"option"}}],[10,"get_use_underline","","Returns whether underscores in the label property are used as mnemonics\non menu items on the overflow menu. See `ToolButtonExt::set_use_underline`.",344,{"inputs":[{"name":"toolbuttonext"}],"output":{"name":"bool"}}],[10,"set_icon_name","","Sets the icon for the tool button from a named themed icon.\nSee the docs for `IconTheme` for more details.\nThe “icon_name” property only has an effect if not\noverridden by non-`None` “label”, “icon_widget” and “stock_id”\nproperties.\n## `icon_name`\nthe name of the themed icon",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_icon_widget","","Sets `icon` as the widget used as icon on `self`. If `icon_widget` is\n`None` the icon is determined by the “stock_id” property. If the\n“stock_id” property is also `None`, `self` will not have an icon.\n## `icon_widget`\nthe widget used as icon, or `None`",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_label","","Sets `label` as the label used for the tool button. The “label” property\nonly has an effect if not overridden by a non-`None` “label_widget” property.\nIf both the “label_widget” and “label” properties are `None`, the label\nis determined by the “stock_id” property. If the “stock_id” property is also\n`None`, `self` will not have a label.\n## `label`\na string that will be used as label, or `None`.",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_label_widget","","Sets `label_widget` as the widget that will be used as the label\nfor `self`. If `label_widget` is `None` the “label” property is used\nas label. If “label” is also `None`, the label in the stock item\ndetermined by the “stock_id” property is used as label. If\n“stock_id” is also `None`, `self` does not have a label.\n## `label_widget`\nthe widget used as label, or `None`",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_stock_id","","Sets the name of the stock item. See `ToolButton::new_from_stock`.\nThe stock_id property only has an effect if not\noverridden by non-`None` “label” and “icon_widget” properties.",344,{"inputs":[{"name":"toolbuttonext"},{"name":"option"}],"output":null}],[10,"set_use_underline","","If set, an underline in the label property indicates that the next character\nshould be used for the mnemonic accelerator key in the overflow menu. For\nexample, if the label property is “_Open” and `use_underline` is `true`,\nthe label on the tool button will be “Open” and the item on the overflow\nmenu will have an underlined “O”.",344,{"inputs":[{"name":"toolbuttonext"},{"name":"bool"}],"output":null}],[8,"ToolItemExt","","Trait containing all `ToolItem` methods.",null,null],[10,"get_expand","","Returns whether `self` is allocated extra space.\nSee `ToolItemExt::set_expand`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_homogeneous","","Returns whether `self` is the same size as other homogeneous\nitems. See `ToolItemExt::set_homogeneous`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_icon_size","","Returns the icon size used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out what size icons\nthey should use.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"i32"}}],[10,"get_is_important","","Returns whether `self` is considered important. See\n`ToolItemExt::set_is_important`",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_orientation","","Returns the orientation used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out what size icons\nthey should use.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"orientation"}}],[10,"get_proxy_menu_item","","If `menu_item_id` matches the string passed to\n`ToolItemExt::set_proxy_menu_item` return the corresponding `MenuItem`.",345,{"inputs":[{"name":"toolitemext"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_relief_style","","Returns the relief style of `self`. See `ButtonExt::set_relief`.\nCustom subclasses of `ToolItem` should call this function in the handler\nof the `ToolItem::toolbar_reconfigured` signal to find out the\nrelief style of buttons.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"reliefstyle"}}],[10,"get_text_alignment","","Returns the text alignment used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out how text should\nbe aligned.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Returns the text orientation used for `self`. Custom subclasses of\n`ToolItem` should call this function to find out how text should\nbe orientated.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Returns the size group used for labels in `self`.\nCustom subclasses of `ToolItem` should call this function\nand use the size group for labels.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"option"}}],[10,"get_toolbar_style","","Returns the toolbar style used for `self`. Custom subclasses of\n`ToolItem` should call this function in the handler of the\n`ToolItem`::toolbar_reconfigured signal to find out in what style\nthe toolbar is displayed and change themselves accordingly",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"toolbarstyle"}}],[10,"get_use_drag_window","","Returns whether `self` has a drag window. See\n`ToolItemExt::set_use_drag_window`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_visible_horizontal","","Returns whether the `self` is visible on toolbars that are\ndocked horizontally.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"get_visible_vertical","","Returns whether `self` is visible when the toolbar is docked vertically.\nSee `ToolItemExt::set_visible_vertical`.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"bool"}}],[10,"rebuild_menu","","Calling this function signals to the toolbar that the\noverflow menu item for `self` has changed. If the\noverflow menu is visible when this function it called,\nthe menu will be rebuilt.",345,{"inputs":[{"name":"toolitemext"}],"output":null}],[10,"retrieve_proxy_menu_item","","Returns the `MenuItem` that was last set by\n`ToolItemExt::set_proxy_menu_item`, ie. the `MenuItem`\nthat is going to appear in the overflow menu.",345,{"inputs":[{"name":"toolitemext"}],"output":{"name":"option"}}],[10,"set_expand","","Sets whether `self` is allocated extra space when there\nis more room on the toolbar then needed for the items. The\neffect is that the item gets bigger when the toolbar gets bigger\nand smaller when the toolbar gets smaller.\n## `expand`\nWhether `self` is allocated extra space",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_homogeneous","","Sets whether `self` is to be allocated the same size as other\nhomogeneous items. The effect is that all homogeneous items will have\nthe same width as the widest of the items.\n## `homogeneous`\nwhether `self` is the same size as other homogeneous items",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_is_important","","Sets whether `self` should be considered important. The `ToolButton`\nclass uses this property to determine whether to show or hide its label\nwhen the toolbar style is `ToolbarStyle::BothHoriz`. The result is that\nonly tool buttons with the “is_important” property set have labels, an\neffect known as “priority text”\n## `is_important`\nwhether the tool item should be considered important",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_proxy_menu_item","","Sets the `MenuItem` used in the toolbar overflow menu. The\n`menu_item_id` is used to identify the caller of this function and\nshould also be used with `ToolItemExt::get_proxy_menu_item`.\n## `menu_item_id`\na string used to identify `menu_item`\n## `menu_item`\na `MenuItem` to be used in the overflow menu",345,{"inputs":[{"name":"toolitemext"},{"name":"str"},{"name":"t"}],"output":null}],[10,"set_tooltip_markup","","Sets the markup text to be displayed as tooltip on the item.\nSee `Widget::set_tooltip_markup`.\n## `markup`\nmarkup text to be used as tooltip for `self`",345,{"inputs":[{"name":"toolitemext"},{"name":"str"}],"output":null}],[10,"set_tooltip_text","","Sets the text to be displayed as tooltip on the item.\nSee `Widget::set_tooltip_text`.\n## `text`\ntext to be used as tooltip for `self`",345,{"inputs":[{"name":"toolitemext"},{"name":"str"}],"output":null}],[10,"set_use_drag_window","","Sets whether `self` has a drag window. When `true` the\ntoolitem can be used as a drag source through `Widget::drag_source_set`.\nWhen `self` has a drag window it will intercept all events,\neven those that would otherwise be sent to a child of `self`.\n## `use_drag_window`\nWhether `self` has a drag window.",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_visible_horizontal","","Sets whether `self` is visible when the toolbar is docked horizontally.\n## `visible_horizontal`\nWhether `self` is visible when in horizontal mode",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"set_visible_vertical","","Sets whether `self` is visible when the toolbar is docked\nvertically. Some tool items, such as text entries, are too wide to be\nuseful on a vertically docked toolbar. If `visible_vertical` is `false`\n`self` will not appear on toolbars that are docked vertically.\n## `visible_vertical`\nwhether `self` is visible when the toolbar\nis in vertical mode",345,{"inputs":[{"name":"toolitemext"},{"name":"bool"}],"output":null}],[10,"toolbar_reconfigured","","Emits the signal `ToolItem::toolbar_reconfigured` on `self`.\n`Toolbar` and other `ToolShell` implementations use this function\nto notify children, when some aspect of their configuration changes.",345,{"inputs":[{"name":"toolitemext"}],"output":null}],[8,"ToolShellExt","","Trait containing all `ToolShell` methods.",null,null],[10,"get_icon_size","","Retrieves the icon size for the tool shell. Tool items must not call this\nfunction directly, but rely on `ToolItemExt::get_icon_size` instead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"i32"}}],[10,"get_orientation","","Retrieves the current orientation for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_orientation`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"orientation"}}],[10,"get_relief_style","","Returns the relief style of buttons on `self`. Tool items must not call this\nfunction directly, but rely on `ToolItemExt::get_relief_style` instead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"reliefstyle"}}],[10,"get_style","","Retrieves whether the tool shell has text, icons, or both. Tool items must\nnot call this function directly, but rely on `ToolItemExt::get_toolbar_style`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"toolbarstyle"}}],[10,"get_text_alignment","","Retrieves the current text alignment for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_text_alignment`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"f32"}}],[10,"get_text_orientation","","Retrieves the current text orientation for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_text_orientation`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"orientation"}}],[10,"get_text_size_group","","Retrieves the current text size group for the tool shell. Tool items must not\ncall this function directly, but rely on `ToolItemExt::get_text_size_group`\ninstead.",346,{"inputs":[{"name":"toolshellext"}],"output":{"name":"option"}}],[10,"rebuild_menu","","Calling this function signals the tool shell that the overflow menu item for\ntool items have changed. If there is an overflow menu and if it is visible\nwhen this function it called, the menu will be rebuilt.",346,{"inputs":[{"name":"toolshellext"}],"output":null}],[8,"TreeModelExt","","Trait containing all `TreeModel` methods.",null,null],[10,"filter_new","","Creates a new `TreeModel`, with `self` as the child_model\nand `root` as the virtual root.\n## `root`\nA `TreePath` or `None`.",368,{"inputs":[{"name":"treemodelext"},{"name":"option"}],"output":{"name":"option"}}],[10,"get_column_type","","Returns the type of the column.\n## `index_`\nthe column index",368,{"inputs":[{"name":"treemodelext"},{"name":"i32"}],"output":{"name":"type"}}],[10,"get_flags","","Returns a set of flags supported by this interface.",368,{"inputs":[{"name":"treemodelext"}],"output":{"name":"treemodelflags"}}],[10,"get_iter","","Sets `iter` to a valid iterator pointing to `path`. If `path` does\nnot exist, `iter` is set to an invalid iterator and `false` is returned.\n## `iter`\nthe uninitialized `TreeIter`-struct\n## `path`\nthe `TreePath`-struct",368,{"inputs":[{"name":"treemodelext"},{"name":"treepath"}],"output":{"name":"option"}}],[10,"get_iter_first","","Initializes `iter` with the first iterator in the tree\n(the one at the path &quot;0&quot;) and returns `true`. Returns\n`false` if the tree is empty.\n## `iter`\nthe uninitialized `TreeIter`-struct",368,{"inputs":[{"name":"treemodelext"}],"output":{"name":"option"}}],[10,"get_iter_from_string","","Sets `iter` to a valid iterator pointing to `path_string`, if it\nexists. Otherwise, `iter` is left invalid and `false` is returned.\n## `iter`\nan uninitialized `TreeIter`-struct\n## `path_string`\na string representation of a `TreePath`-struct",368,{"inputs":[{"name":"treemodelext"},{"name":"str"}],"output":{"name":"option"}}],[10,"get_n_columns","","Returns the number of columns supported by `self`.",368,{"inputs":[{"name":"treemodelext"}],"output":{"name":"i32"}}],[10,"get_path","","Returns a newly-created `TreePath`-struct referenced by `iter`.",368,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"treepath"}}],[10,"get_string_from_iter","","Generates a string representation of the iter.",368,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"iter_children","","Sets `iter` to point to the first child of `parent`.",368,{"inputs":[{"name":"treemodelext"},{"name":"option"}],"output":{"name":"option"}}],[10,"iter_has_child","","Returns `true` if `iter` has children, `false` otherwise.\n## `iter`\nthe `TreeIter`-struct to test for children",368,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_n_children","","Returns the number of children that `iter` has.",368,{"inputs":[{"name":"treemodelext"},{"name":"option"}],"output":{"name":"i32"}}],[10,"iter_next","","Sets `iter` to point to the node following it at the current level.",368,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"iter_nth_child","","Sets `iter` to be the child of `parent`, using the given index.",368,{"inputs":[{"name":"treemodelext"},{"name":"option"},{"name":"i32"}],"output":{"name":"option"}}],[10,"iter_parent","","Sets `iter` to be the parent of `child`.",368,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"option"}}],[10,"iter_previous","","Sets `iter` to point to the previous node at the current level.",368,{"inputs":[{"name":"treemodelext"},{"name":"treeiter"}],"output":{"name":"bool"}}],[10,"row_changed","","Emits the `TreeModel::row-changed` signal on `self`.\n## `path`\na `TreePath`-struct pointing to the changed row\n## `iter`\na valid `TreeIter`-struct pointing to the changed row",368,{"inputs":[{"name":"treemodelext"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_deleted","","Emits the `TreeModel::row-deleted` signal on `self`.",368,{"inputs":[{"name":"treemodelext"},{"name":"treepath"}],"output":null}],[10,"row_has_child_toggled","","Emits the `TreeModel::row-has-child-toggled` signal on\n`self`. This should be called by models after the child\nstate of a node changes.\n## `path`\na `TreePath`-struct pointing to the changed row\n## `iter`\na valid `TreeIter`-struct pointing to the changed row",368,{"inputs":[{"name":"treemodelext"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"row_inserted","","Emits the `TreeModel::row-inserted` signal on `self`.\n## `path`\na `TreePath`-struct pointing to the inserted row\n## `iter`\na valid `TreeIter`-struct pointing to the inserted row",368,{"inputs":[{"name":"treemodelext"},{"name":"treepath"},{"name":"treeiter"}],"output":null}],[10,"sort_new_with_model","","Creates a new `TreeModel`, with `self` as the child model.",368,{"inputs":[{"name":"treemodelext"}],"output":{"name":"option"}}],[8,"TreeSortableExt","","Trait containing all `TreeSortable` methods.",null,null],[10,"get_sort_column_id","","Fills in `sort_column_id` and `order` with the current sort column and the\norder. It returns `true` unless the `sort_column_id` is\n`GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID` or\n`GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID`.\n## `sort_column_id`\nThe sort column id to be filled in\n## `order`\nThe `SortType` to be filled in",369,{"inputs":[{"name":"treesortableext"}],"output":{"name":"option"}}],[10,"has_default_sort_func","","Returns `true` if the model has a default sort function. This is used\nprimarily by `GtkTreeViewColumns` in order to determine if a model can\ngo back to the default state, or not.",369,{"inputs":[{"name":"treesortableext"}],"output":{"name":"bool"}}],[10,"set_sort_column_id","","Sets the current sort column to be `sort_column_id`. The `self` will\nresort itself to reflect this change, after emitting a\n`TreeSortable::sort-column-changed` signal. `sort_column_id` may either be\na regular column id, or one of the following special values:",369,{"inputs":[{"name":"treesortableext"},{"name":"i32"},{"name":"sorttype"}],"output":null}],[10,"sort_column_changed","","Emits a `TreeSortable::sort-column-changed` signal on `self`.",369,{"inputs":[{"name":"treesortableext"}],"output":null}],[8,"WidgetExt","","Trait containing all `Widget` methods.",null,null],[10,"activate","","For widgets that can be “activated” (buttons, menu items, etc.)\nthis function activates them. Activation is what happens when you\npress Enter on a widget during key navigation. If `self` isn&#39;t\nactivatable, the function returns `false`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"add_accelerator","","Installs an accelerator for this `self` in `accel_group` that causes\n`accel_signal` to be emitted if the accelerator is activated.\nThe `accel_group` needs to be added to the widget’s toplevel via\n`Window::add_accel_group`, and the signal must be of type `gobject::SignalFlags::Action`.\nAccelerators added through this function are not user changeable during\nruntime. If you want to support accelerators that can be changed by the\nuser, use `AccelMap::add_entry` and `WidgetExt::set_accel_path` or\n`MenuItemExt::set_accel_path` instead.\n## `accel_signal`\nwidget signal to emit on accelerator activation\n## `accel_group`\naccel group for this widget, added to its toplevel\n## `accel_key`\nGDK keyval of the accelerator\n## `accel_mods`\nmodifier key combination of the accelerator\n## `accel_flags`\nflag accelerators, e.g. `AccelFlags::Visible`",370,{"inputs":[{"name":"widgetext"},{"name":"str"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"},{"name":"accelflags"}],"output":null}],[10,"add_events","","Adds the events in the bitfield `events` to the event mask for\n`self`. See `WidgetExt::set_events` and the\n[input handling overview][event-masks] for details.\n## `events`\nan event mask, see `gdk::EventMask`",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"add_mnemonic_label","","Adds a widget to the list of mnemonic labels for\nthis widget. (See `WidgetExt::list_mnemonic_labels`). Note the\nlist of mnemonic labels for the widget is cleared when the\nwidget is destroyed, so the caller must make sure to update\nits internal state at this point as well, by using a connection\nto the `Widget::destroy` signal or a weak notifier.\n## `label`\na `Widget` that acts as a mnemonic label for `self`",370,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"can_activate_accel","","Determines whether an accelerator that activates the signal\nidentified by `signal_id` can currently be activated.\nThis is done by emitting the `Widget::can-activate-accel`\nsignal on `self`; if the signal isn’t overridden by a\nhandler or in a derived widget, then the default check is\nthat the widget must be sensitive, and the widget and all\nits ancestors mapped.\n## `signal_id`\nthe ID of a signal installed on `self`",370,{"inputs":[{"name":"widgetext"},{"name":"u32"}],"output":{"name":"bool"}}],[10,"child_focus","","This function is used by custom widget implementations; if you&#39;re\nwriting an app, you’d use `WidgetExt::grab_focus` to move the focus\nto a particular widget, and `ContainerExt::set_focus_chain` to\nchange the focus tab order. So you may want to investigate those\nfunctions instead.",370,{"inputs":[{"name":"widgetext"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"child_notify","","Emits a `Widget::child-notify` signal for the\n[child property][child-properties] `child_property`\non `self`.",370,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"compute_expand","","Computes whether a container should give this widget extra space\nwhen possible. Containers should check this, rather than\nlooking at `WidgetExt::get_hexpand` or `WidgetExt::get_vexpand`.",370,{"inputs":[{"name":"widgetext"},{"name":"orientation"}],"output":{"name":"bool"}}],[10,"destroy","","Destroys a widget.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_check_threshold","","Checks to see if a mouse drag starting at (`start_x`, `start_y`) and ending\nat (`current_x`, `current_y`) has passed the GTK+ drag threshold, and thus\nshould trigger the beginning of a drag-and-drop operation.\n## `start_x`\nX coordinate of start of drag\n## `start_y`\nY coordinate of start of drag\n## `current_x`\ncurrent X coordinate\n## `current_y`\ncurrent Y coordinate",370,{"inputs":[{"name":"widgetext"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"bool"}}],[10,"drag_dest_add_image_targets","","Add the image targets supported by `SelectionData` to\nthe target list of the drag destination. The targets\nare added with `info` = 0. If you need another value,\nuse `TargetList::add_image_targets` and\n`WidgetExt::drag_dest_set_target_list`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_dest_add_text_targets","","Add the text targets supported by `SelectionData` to\nthe target list of the drag destination. The targets\nare added with `info` = 0. If you need another value,\nuse `TargetList::add_text_targets` and\n`WidgetExt::drag_dest_set_target_list`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_dest_add_uri_targets","","Add the URI targets supported by `SelectionData` to\nthe target list of the drag destination. The targets\nare added with `info` = 0. If you need another value,\nuse `TargetList::add_uri_targets` and\n`WidgetExt::drag_dest_set_target_list`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_dest_get_track_motion","","Returns whether the widget has been configured to always\nemit `Widget::drag-motion` signals.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"drag_dest_set_track_motion","","Tells the widget to emit `Widget::drag-motion` and\n`Widget::drag-leave` events regardless of the targets and the\n`DestDefaults::Motion` flag.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"drag_dest_unset","","Clears information about a drop destination set with\n`WidgetExt::drag_dest_set`. The widget will no longer receive\nnotification of drags.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_highlight","","Draws a highlight around a widget. This will attach\nhandlers to `Widget::draw`, so the highlight\nwill continue to be displayed until `WidgetExt::drag_unhighlight`\nis called.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_add_image_targets","","Add the writable image targets supported by `SelectionData` to\nthe target list of the drag source. The targets\nare added with `info` = 0. If you need another value,\nuse `TargetList::add_image_targets` and\n`WidgetExt::drag_source_set_target_list`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_add_text_targets","","Add the text targets supported by `SelectionData` to\nthe target list of the drag source. The targets\nare added with `info` = 0. If you need another value,\nuse `TargetList::add_text_targets` and\n`WidgetExt::drag_source_set_target_list`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_add_uri_targets","","Add the URI targets supported by `SelectionData` to\nthe target list of the drag source. The targets\nare added with `info` = 0. If you need another value,\nuse `TargetList::add_uri_targets` and\n`WidgetExt::drag_source_set_target_list`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_source_set_icon_name","","Sets the icon that will be used for drags from a particular source\nto a themed icon. See the docs for `IconTheme` for more details.\n## `icon_name`\nname of icon to use",370,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"drag_source_set_icon_pixbuf","","Sets the icon that will be used for drags from a particular widget\nfrom a `gdk_pixbuf::Pixbuf`. GTK+ retains a reference for `pixbuf` and will\nrelease it when it is no longer needed.\n## `pixbuf`\nthe `gdk_pixbuf::Pixbuf` for the drag icon",370,{"inputs":[{"name":"widgetext"},{"name":"pixbuf"}],"output":null}],[10,"drag_source_set_icon_stock","","Sets the icon that will be used for drags from a particular source\nto a stock icon.",370,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"drag_source_unset","","Undoes the effects of `WidgetExt::drag_source_set`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"drag_unhighlight","","Removes a highlight set by `WidgetExt::drag_highlight` from\na widget.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"ensure_style","","Ensures that `self` has a style (`self`-&gt;style).",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"error_bell","","Notifies the user about an input-related error on this widget.\nIf the `Settings:gtk-error-bell` setting is `true`, it calls\n`gdk::Window::beep`, otherwise it does nothing.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"freeze_child_notify","","Stops emission of `Widget::child-notify` signals on `self`. The\nsignals are queued until `WidgetExt::thaw_child_notify` is called\non `self`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"get_allocated_baseline","","Returns the baseline that has currently been allocated to `self`.\nThis function is intended to be used when implementing handlers\nfor the `Widget::draw` function, and when allocating child\nwidgets in `Widget::size_allocate`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_allocated_height","","Returns the height that has currently been allocated to `self`.\nThis function is intended to be used when implementing handlers\nfor the `Widget::draw` function.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_allocated_width","","Returns the width that has currently been allocated to `self`.\nThis function is intended to be used when implementing handlers\nfor the `Widget::draw` function.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_allocation","","Retrieves the widget’s allocation.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"allocation"}}],[10,"get_ancestor","","Gets the first ancestor of `self` with type `widget_type`. For example,\n`gtk_widget_get_ancestor (widget, GTK_TYPE_BOX)` gets\nthe first `Box` that’s an ancestor of `self`. No reference will be\nadded to the returned widget; it should not be unreferenced. See note\nabout checking for a toplevel `Window` in the docs for\n`WidgetExt::get_toplevel`.",370,{"inputs":[{"name":"widgetext"},{"name":"type"}],"output":{"name":"option"}}],[10,"get_app_paintable","","Determines whether the application intends to draw on the widget in\nan `Widget::draw` handler.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_can_default","","Determines whether `self` can be a default widget. See\n`WidgetExt::set_can_default`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_can_focus","","Determines whether `self` can own the input focus. See\n`WidgetExt::set_can_focus`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_child_requisition","","This function is only for use in widget implementations. Obtains\n`self`-&gt;requisition, unless someone has forced a particular\ngeometry on the widget (e.g. with `WidgetExt::set_size_request`),\nin which case it returns that geometry instead of the widget&#39;s\nrequisition.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"requisition"}}],[10,"get_child_visible","","Gets the value set with `WidgetExt::set_child_visible`.\nIf you feel a need to use this function, your code probably\nneeds reorganization.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_clip","","Retrieves the widget’s clip area.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"allocation"}}],[10,"get_composite_name","","Obtains the composite name of a widget.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_direction","","Gets the reading direction for a particular widget. See\n`WidgetExt::set_direction`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"textdirection"}}],[10,"get_double_buffered","","Determines whether the widget is double buffered.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_events","","Returns the event mask (see `gdk::EventMask`) for the widget. These are the\nevents that the widget will receive.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_halign","","Gets the value of the `Widget:halign` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"align"}}],[10,"get_has_tooltip","","Returns the current value of the has-tooltip property. See\n`Widget:has-tooltip` for more information.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_has_window","","Determines whether `self` has a `gdk::Window` of its own. See\n`WidgetExt::set_has_window`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_hexpand","","Gets whether the widget would like any available extra horizontal\nspace. When a user resizes a `Window`, widgets with expand=TRUE\ngenerally receive the extra space. For example, a list or\nscrollable area or document in your window would often be set to\nexpand.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_hexpand_set","","Gets whether `WidgetExt::set_hexpand` has been used to\nexplicitly set the expand flag on this widget.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_mapped","","Whether the widget is mapped.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_margin_bottom","","Gets the value of the `Widget:margin-bottom` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_end","","Gets the value of the `Widget:margin-end` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_left","","Gets the value of the `Widget:margin-left` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_right","","Gets the value of the `Widget:margin-right` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_start","","Gets the value of the `Widget:margin-start` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_margin_top","","Gets the value of the `Widget:margin-top` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_modifier_mask","","Returns the modifier mask the `self`’s windowing system backend\nuses for a particular purpose.",370,{"inputs":[{"name":"widgetext"},{"name":"modifierintent"}],"output":{"name":"modifiertype"}}],[10,"get_name","","Retrieves the name of a widget. See `WidgetExt::set_name` for the\nsignificance of widget names.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_no_show_all","","Returns the current value of the `Widget:no-show-all` property,\nwhich determines whether calls to `WidgetExt::show_all`\nwill affect this widget.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_opacity","","Fetches the requested opacity for this widget.\nSee `WidgetExt::set_opacity`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"f64"}}],[10,"get_parent","","Returns the parent container of `self`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_parent_window","","Gets `self`’s parent window.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_pointer","","Obtains the location of the mouse pointer in widget coordinates.\nWidget coordinates are a bit odd; for historical reasons, they are\ndefined as `self`-&gt;window coordinates for widgets that return `true` for\n`WidgetExt::get_has_window`; and are relative to `self`-&gt;allocation.x,\n`self`-&gt;allocation.y otherwise.",370,null],[10,"get_preferred_height","","Retrieves a widget’s initial minimum and natural height.",370,null],[10,"get_preferred_height_and_baseline_for_width","","Retrieves a widget’s minimum and natural height and the corresponding baselines if it would be given\nthe specified `width`, or the default height if `width` is -1. The baselines may be -1 which means\nthat no baseline is requested for this widget.",370,null],[10,"get_preferred_height_for_width","","Retrieves a widget’s minimum and natural height if it would be given\nthe specified `width`.",370,null],[10,"get_preferred_size","","Retrieves the minimum and natural size of a widget, taking\ninto account the widget’s preference for height-for-width management.",370,null],[10,"get_preferred_width","","Retrieves a widget’s initial minimum and natural width.",370,null],[10,"get_preferred_width_for_height","","Retrieves a widget’s minimum and natural width if it would be given\nthe specified `height`.",370,null],[10,"get_realized","","Determines whether `self` is realized.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_receives_default","","Determines whether `self` is always treated as the default widget\nwithin its toplevel when it has the focus, even if another widget\nis the default.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_request_mode","","Gets whether the widget prefers a height-for-width layout\nor a width-for-height layout.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"sizerequestmode"}}],[10,"get_requisition","","Retrieves the widget’s requisition.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"requisition"}}],[10,"get_root_window","","Get the root window where this widget is located. This function can\nonly be called after the widget has been added to a widget\nhierarchy with `Window` at the top.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_scale_factor","","Retrieves the internal scale factor that maps from window coordinates\nto the actual device pixels. On traditional systems this is 1, on\nhigh density outputs, it can be a higher value (typically 2).",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"i32"}}],[10,"get_screen","","Get the `gdk::Screen` from the toplevel window associated with\nthis widget. This function can only be called after the widget\nhas been added to a widget hierarchy with a `Window`\nat the top.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_sensitive","","Returns the widget’s sensitivity (in the sense of returning\nthe value that has been set using `WidgetExt::set_sensitive`).",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_size_request","","Gets the size request that was explicitly set for the widget using\n`WidgetExt::set_size_request`. A value of -1 stored in `width` or\n`height` indicates that that dimension has not been set explicitly\nand the natural requisition of the widget will be used intead. See\n`WidgetExt::set_size_request`. To get the size a widget will\nactually request, call `WidgetExt::get_preferred_size` instead of\nthis function.\n## `width`\nreturn location for width, or `None`\n## `height`\nreturn location for height, or `None`",370,null],[10,"get_state","","Returns the widget’s state. See `WidgetExt::set_state`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"statetype"}}],[10,"get_state_flags","","Returns the widget state as a flag set. It is worth mentioning\nthat the effective `StateFlags::Insensitive` state will be\nreturned, that is, also based on parent insensitivity, even if\n`self` itself is sensitive.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"stateflags"}}],[10,"get_style_context","","Returns the style context associated to `self`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_support_multidevice","","Returns `true` if `self` is multiple pointer aware. See\n`WidgetExt::set_support_multidevice` for more information.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_tooltip_markup","","Gets the contents of the tooltip for `self`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_tooltip_text","","Gets the contents of the tooltip for `self`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_tooltip_window","","Returns the `Window` of the current tooltip. This can be the\n`Window` created by default, or the custom tooltip window set\nusing `WidgetExt::set_tooltip_window`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_toplevel","","This function returns the topmost widget in the container hierarchy\n`self` is a part of. If `self` has no parent widgets, it will be\nreturned as the topmost widget. No reference will be added to the\nreturned widget; it should not be unreferenced.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"get_valign","","Gets the value of the `Widget:valign` property.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"align"}}],[10,"get_valign_with_baseline","","Gets the value of the `Widget:valign` property, including\n`Align::Baseline`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"align"}}],[10,"get_vexpand","","Gets whether the widget would like any available extra vertical\nspace.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_vexpand_set","","Gets whether `WidgetExt::set_vexpand` has been used to\nexplicitly set the expand flag on this widget.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_visible","","Determines whether the widget is visible. If you want to\ntake into account whether the widget’s parent is also marked as\nvisible, use `WidgetExt::is_visible` instead.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"get_window","","Returns the widget’s window if it is realized, `None` otherwise",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"option"}}],[10,"grab_add","","Makes `self` the current grabbed widget.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"grab_default","","Causes `self` to become the default widget. `self` must be able to be\na default widget; typically you would ensure this yourself\nby calling `WidgetExt::set_can_default` with a `true` value.\nThe default widget is activated when\nthe user presses Enter in a window. Default widgets must be\nactivatable, that is, `WidgetExt::activate` should affect them. Note\nthat `Entry` widgets require the “activates-default” property\nset to `true` before they activate the default widget when Enter\nis pressed and the `Entry` is focused.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"grab_focus","","Causes `self` to have the keyboard focus for the `Window` it&#39;s\ninside. `self` must be a focusable widget, such as a `Entry`;\nsomething like `Frame` won’t work.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"grab_remove","","Removes the grab from the given widget.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"has_default","","Determines whether `self` is the current default widget within its\ntoplevel. See `WidgetExt::set_can_default`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_focus","","Determines if the widget has the global input focus. See\n`WidgetExt::is_focus` for the difference between having the global\ninput focus, and only having the focus within a toplevel.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_grab","","Determines whether the widget is currently grabbing events, so it\nis the only widget receiving input events (keyboard and mouse).",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_rc_style","","Determines if the widget style has been looked up through the rc mechanism.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_screen","","Checks whether there is a `gdk::Screen` is associated with\nthis widget. All toplevel widgets have an associated\nscreen, and all widgets added into a hierarchy with a toplevel\nwindow at the top.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"has_visible_focus","","Determines if the widget should show a visible indication that\nit has the global input focus. This is a convenience function for\nuse in ::draw handlers that takes into account whether focus\nindication should currently be shown in the toplevel window of\n`self`. See `Window::get_focus_visible` for more information\nabout focus indication.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"hide","","Reverses the effects of `WidgetExt::show`, causing the widget to be\nhidden (invisible to the user).",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"hide_on_delete","","Utility function; intended to be connected to the `Widget::delete-event`\nsignal on a `Window`. The function calls `WidgetExt::hide` on its\nargument, then returns `true`. If connected to ::delete-event, the\nresult is that clicking the close button for a window (on the\nwindow frame, top right corner usually) will hide but not destroy\nthe window. By default, GTK+ destroys windows when ::delete-event\nis received.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"in_destruction","","Returns whether the widget is currently being destroyed.\nThis information can sometimes be used to avoid doing\nunnecessary work.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"init_template","","Creates and initializes child widgets defined in templates. This\nfunction must be called in the instance initializer for any\nclass which assigned itself a template using `WidgetClass::set_template`",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"is_ancestor","","Determines whether `self` is somewhere inside `ancestor`, possibly with\nintermediate containers.\n## `ancestor`\nanother `Widget`",370,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":{"name":"bool"}}],[10,"is_composited","","Whether `self` can rely on having its alpha channel\ndrawn correctly. On X11 this function returns whether a\ncompositing manager is running for `self`’s screen.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_drawable","","Determines whether `self` can be drawn to. A widget can be drawn\nto if it is mapped and visible.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_focus","","Determines if the widget is the focus widget within its\ntoplevel. (This does not mean that the `Widget:has-focus` property is\nnecessarily set; `Widget:has-focus` will only be set if the\ntoplevel widget additionally has the global input focus.)",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_sensitive","","Returns the widget’s effective sensitivity, which means\nit is sensitive itself and also its parent widget is sensitive",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_toplevel","","Determines whether `self` is a toplevel widget.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"is_visible","","Determines whether the widget and all its parents are marked as\nvisible.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"bool"}}],[10,"keynav_failed","","This function should be called whenever keyboard navigation within\na single widget hits a boundary. The function emits the\n`Widget::keynav-failed` signal on the widget and its return\nvalue should be interpreted in a way similar to the return value of\n`WidgetExt::child_focus`:",370,{"inputs":[{"name":"widgetext"},{"name":"directiontype"}],"output":{"name":"bool"}}],[10,"list_action_prefixes","","Retrieves a `None`-terminated array of strings containing the prefixes of\n`gio::ActionGroup`&#39;s available to `self`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"vec"}}],[10,"list_mnemonic_labels","","Returns a newly allocated list of the widgets, normally labels, for\nwhich this widget is the target of a mnemonic (see for example,\n`Label::set_mnemonic_widget`).",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"vec"}}],[10,"map","","This function is only for use in widget implementations. Causes\na widget to be mapped if it isn’t already.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"mnemonic_activate","","Emits the `Widget::mnemonic-activate` signal.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":{"name":"bool"}}],[10,"queue_compute_expand","","Mark `self` as needing to recompute its expand flags. Call\nthis function when setting legacy expand child properties\non the child of a container.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"queue_draw","","Equivalent to calling `WidgetExt::queue_draw_area` for the\nentire area of a widget.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"queue_draw_area","","Convenience function that calls `WidgetExt::queue_draw_region` on\nthe region created from the given coordinates.",370,{"inputs":[{"name":"widgetext"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"queue_resize","","This function is only for use in widget implementations.\nFlags a widget to have its size renegotiated; should\nbe called when a widget for some reason has a new size request.\nFor example, when you change the text in a `Label`, `Label`\nqueues a resize to ensure there’s enough space for the new text.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"queue_resize_no_redraw","","This function works like `WidgetExt::queue_resize`,\nexcept that the widget is not invalidated.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"realize","","Creates the GDK (windowing system) resources associated with a\nwidget. For example, `self`-&gt;window will be created when a widget\nis realized. Normally realization happens implicitly; if you show\na widget and all its parent containers, then the widget will be\nrealized and mapped automatically.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"register_window","","Registers a `gdk::Window` with the widget and sets it up so that\nthe widget receives events for it. Call `WidgetExt::unregister_window`\nwhen destroying the window.",370,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"remove_accelerator","","Removes an accelerator from `self`, previously installed with\n`WidgetExt::add_accelerator`.\n## `accel_group`\naccel group for this widget\n## `accel_key`\nGDK keyval of the accelerator\n## `accel_mods`\nmodifier key combination of the accelerator",370,{"inputs":[{"name":"widgetext"},{"name":"accelgroup"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"remove_mnemonic_label","","Removes a widget from the list of mnemonic labels for\nthis widget. (See `WidgetExt::list_mnemonic_labels`). The widget\nmust have previously been added to the list with\n`WidgetExt::add_mnemonic_label`.\n## `label`\na `Widget` that was previously set as a mnemnic label for\n `self` with `WidgetExt::add_mnemonic_label`.",370,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"remove_tick_callback","","Removes a tick callback previously registered with\n`WidgetExt::add_tick_callback`.",370,{"inputs":[{"name":"widgetext"},{"name":"u32"}],"output":null}],[10,"render_icon","","A convenience function that uses the theme settings for `self`\nto look up `stock_id` and render it to a pixbuf. `stock_id` should\nbe a stock icon ID such as `GTK_STOCK_OPEN` or `GTK_STOCK_OK`. `size`\nshould be a size such as `IconSize::Menu`. `detail` should be a\nstring that identifies the widget or code doing the rendering, so\nthat theme engines can special-case rendering for that widget or\ncode.",370,{"inputs":[{"name":"widgetext"},{"name":"str"},{"name":"i32"},{"name":"option"}],"output":{"name":"option"}}],[10,"render_icon_pixbuf","","A convenience function that uses the theme engine and style\nsettings for `self` to look up `stock_id` and render it to\na pixbuf. `stock_id` should be a stock icon ID such as\n`GTK_STOCK_OPEN` or `GTK_STOCK_OK`. `size` should be a size\nsuch as `IconSize::Menu`.",370,{"inputs":[{"name":"widgetext"},{"name":"str"},{"name":"i32"}],"output":{"name":"option"}}],[10,"reparent","","Moves a widget from one `Container` to another, handling reference\ncount issues to avoid destroying the widget.",370,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"reset_rc_styles","","Reset the styles of `self` and all descendents, so when\nthey are looked up again, they get the correct values\nfor the currently loaded RC file settings.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"reset_style","","Updates the style context of `self` and all descendents\nby updating its widget path. ``GtkContainers`` may want\nto use this on a child when reordering it in a way that a different\nstyle might apply to it. See also `ContainerExt::get_path_for_child`.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"set_accel_path","","Given an accelerator group, `accel_group`, and an accelerator path,\n`accel_path`, sets up an accelerator in `accel_group` so whenever the\nkey binding that is defined for `accel_path` is pressed, `self`\nwill be activated. This removes any accelerators (for any\naccelerator group) installed by previous calls to\n`WidgetExt::set_accel_path`. Associating accelerators with\npaths allows them to be modified by the user and the modifications\nto be saved for future use. (See `AccelMap::save`.)",370,{"inputs":[{"name":"widgetext"},{"name":"option"},{"name":"option"}],"output":null}],[10,"set_allocation","","Sets the widget’s allocation. This should not be used\ndirectly, but from within a widget’s size_allocate method.",370,{"inputs":[{"name":"widgetext"},{"name":"allocation"}],"output":null}],[10,"set_app_paintable","","Sets whether the application intends to draw on the widget in\nan `Widget::draw` handler.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_can_default","","Specifies whether `self` can be a default widget. See\n`WidgetExt::grab_default` for details about the meaning of\n“default”.\n## `can_default`\nwhether or not `self` can be a default widget.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_can_focus","","Specifies whether `self` can own the input focus. See\n`WidgetExt::grab_focus` for actually setting the input focus on a\nwidget.\n## `can_focus`\nwhether or not `self` can own the input focus.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_child_visible","","Sets whether `self` should be mapped along with its when its parent\nis mapped and `self` has been shown with `WidgetExt::show`.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_clip","","Sets the widget’s clip. This must not be used directly,\nbut from within a widget’s size_allocate method.\nIt must be called after `WidgetExt::set_allocation` (or after chaning up\nto the parent class), because that function resets the clip.",370,{"inputs":[{"name":"widgetext"},{"name":"allocation"}],"output":null}],[10,"set_composite_name","","Sets a widgets composite name. The widget must be\na composite child of its parent; see `Widget::push_composite_child`.",370,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"set_direction","","Sets the reading direction on a particular widget. This direction\ncontrols the primary direction for widgets containing text,\nand also the direction in which the children of a container are\npacked. The ability to set the direction is present in order\nso that correct localization into languages with right-to-left\nreading directions can be done. Generally, applications will\nlet the default reading direction present, except for containers\nwhere the containers are arranged in an order that is explicitly\nvisual rather than logical (such as buttons for text justification).",370,{"inputs":[{"name":"widgetext"},{"name":"textdirection"}],"output":null}],[10,"set_double_buffered","","Widgets are double buffered by default; you can use this function\nto turn off the buffering. “Double buffered” simply means that\n`gdk::Window::begin_paint_region` and `gdk::Window::end_paint` are called\nautomatically around expose events sent to the\nwidget. `gdk::Window::begin_paint_region` diverts all drawing to a widget&#39;s\nwindow to an offscreen buffer, and `gdk::Window::end_paint` draws the\nbuffer to the screen. The result is that users see the window\nupdate in one smooth step, and don’t see individual graphics\nprimitives being rendered.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_events","","Sets the event mask (see `gdk::EventMask`) for a widget. The event\nmask determines which events a widget will receive. Keep in mind\nthat different widgets have different default event masks, and by\nchanging the event mask you may disrupt a widget’s functionality,\nso be careful. This function must be called while a widget is\nunrealized. Consider `WidgetExt::add_events` for widgets that are\nalready realized, or if you want to preserve the existing event\nmask. This function can’t be used with widgets that have no window.\n(See `WidgetExt::get_has_window`). To get events on those widgets,\nplace them inside a `EventBox` and receive events on the event\nbox.\n## `events`\nevent mask",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_halign","","Sets the horizontal alignment of `self`.\nSee the `Widget:halign` property.\n## `align`\nthe horizontal alignment",370,{"inputs":[{"name":"widgetext"},{"name":"align"}],"output":null}],[10,"set_has_tooltip","","Sets the has-tooltip property on `self` to `has_tooltip`. See\n`Widget:has-tooltip` for more information.\n## `has_tooltip`\nwhether or not `self` has a tooltip.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_has_window","","Specifies whether `self` has a `gdk::Window` of its own. Note that\nall realized widgets have a non-`None` “window” pointer\n(`WidgetExt::get_window` never returns a `None` window when a widget\nis realized), but for many of them it’s actually the `gdk::Window` of\none of its parent widgets. Widgets that do not create a `window` for\nthemselves in `Widget::realize` must announce this by\ncalling this function with `has_window` = `false`.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_hexpand","","Sets whether the widget would like any available extra horizontal\nspace. When a user resizes a `Window`, widgets with expand=TRUE\ngenerally receive the extra space. For example, a list or\nscrollable area or document in your window would often be set to\nexpand.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_hexpand_set","","Sets whether the hexpand flag (see `WidgetExt::get_hexpand`) will\nbe used.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_mapped","","Marks the widget as being realized.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_margin_bottom","","Sets the bottom margin of `self`.\nSee the `Widget:margin-bottom` property.\n## `margin`\nthe bottom margin",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_end","","Sets the end margin of `self`.\nSee the `Widget:margin-end` property.",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_left","","Sets the left margin of `self`.\nSee the `Widget:margin-left` property.",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_right","","Sets the right margin of `self`.\nSee the `Widget:margin-right` property.",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_start","","Sets the start margin of `self`.\nSee the `Widget:margin-start` property.",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_margin_top","","Sets the top margin of `self`.\nSee the `Widget:margin-top` property.\n## `margin`\nthe top margin",370,{"inputs":[{"name":"widgetext"},{"name":"i32"}],"output":null}],[10,"set_name","","Widgets can be named, which allows you to refer to them from a\nCSS file. You can apply a style to widgets with a particular name\nin the CSS file. See the documentation for the CSS syntax (on the\nsame page as the docs for `StyleContext`).",370,{"inputs":[{"name":"widgetext"},{"name":"str"}],"output":null}],[10,"set_no_show_all","","Sets the `Widget:no-show-all` property, which determines whether\ncalls to `WidgetExt::show_all` will affect this widget.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_opacity","","Request the `self` to be rendered partially transparent,\nwith opacity 0 being fully transparent and 1 fully opaque. (Opacity values\nare clamped to the [0,1] range.).\nThis works on both toplevel widget, and child widgets, although there\nare some limitations:",370,{"inputs":[{"name":"widgetext"},{"name":"f64"}],"output":null}],[10,"set_parent","","This function is useful only when implementing subclasses of\n`Container`.\nSets the container as the parent of `self`, and takes care of\nsome details such as updating the state and style of the child\nto reflect its new location. The opposite function is\n`WidgetExt::unparent`.\n## `parent`\nparent container",370,{"inputs":[{"name":"widgetext"},{"name":"t"}],"output":null}],[10,"set_parent_window","","Sets a non default parent window for `self`.",370,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"set_realized","","Marks the widget as being realized. This function must only be\ncalled after all ``GdkWindows`` for the `self` have been created\nand registered.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_receives_default","","Specifies whether `self` will be treated as the default widget\nwithin its toplevel when it has the focus, even if another widget\nis the default.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_redraw_on_allocate","","Sets whether the entire widget is queued for drawing when its size\nallocation changes. By default, this setting is `true` and\nthe entire widget is redrawn on every size change. If your widget\nleaves the upper left unchanged when made bigger, turning this\nsetting off will improve performance.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_sensitive","","Sets the sensitivity of a widget. A widget is sensitive if the user\ncan interact with it. Insensitive widgets are “grayed out” and the\nuser can’t interact with them. Insensitive widgets are known as\n“inactive”, “disabled”, or “ghosted” in some other toolkits.\n## `sensitive`\n`true` to make the widget sensitive",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_size_request","","Sets the minimum size of a widget; that is, the widget’s size\nrequest will be at least `width` by `height`. You can use this\nfunction to force a widget to be larger than it normally would be.",370,{"inputs":[{"name":"widgetext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_state","","This function is for use in widget implementations. Sets the state\nof a widget (insensitive, prelighted, etc.) Usually you should set\nthe state using wrapper functions such as `WidgetExt::set_sensitive`.",370,{"inputs":[{"name":"widgetext"},{"name":"statetype"}],"output":null}],[10,"set_state_flags","","This function is for use in widget implementations. Turns on flag\nvalues in the current widget state (insensitive, prelighted, etc.).",370,{"inputs":[{"name":"widgetext"},{"name":"stateflags"},{"name":"bool"}],"output":null}],[10,"set_support_multidevice","","Enables or disables multiple pointer awareness. If this setting is `true`,\n`self` will start receiving multiple, per device enter/leave events. Note\nthat if custom ``GdkWindows`` are created in `Widget::realize`,\n`gdk::Window::set_support_multidevice` will have to be called manually on them.\n## `support_multidevice`\n`true` to support input from multiple devices.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_tooltip_markup","","Sets `markup` as the contents of the tooltip, which is marked up with\n the [Pango text markup language][PangoMarkupFormat].",370,{"inputs":[{"name":"widgetext"},{"name":"option"}],"output":null}],[10,"set_tooltip_text","","Sets `text` as the contents of the tooltip. This function will take\ncare of setting `Widget:has-tooltip` to `true` and of the default\nhandler for the `Widget::query-tooltip` signal.",370,{"inputs":[{"name":"widgetext"},{"name":"option"}],"output":null}],[10,"set_tooltip_window","","Replaces the default, usually yellow, window used for displaying\ntooltips with `custom_window`. GTK+ will take care of showing and\nhiding `custom_window` at the right moment, to behave likewise as\nthe default tooltip window. If `custom_window` is `None`, the default\ntooltip window will be used.",370,{"inputs":[{"name":"widgetext"},{"name":"option"}],"output":null}],[10,"set_valign","","Sets the vertical alignment of `self`.\nSee the `Widget:valign` property.\n## `align`\nthe vertical alignment",370,{"inputs":[{"name":"widgetext"},{"name":"align"}],"output":null}],[10,"set_vexpand","","Sets whether the widget would like any available extra vertical\nspace.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_vexpand_set","","Sets whether the vexpand flag (see `WidgetExt::get_vexpand`) will\nbe used.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_visible","","Sets the visibility state of `self`. Note that setting this to\n`true` doesn’t mean the widget is actually viewable, see\n`WidgetExt::get_visible`.",370,{"inputs":[{"name":"widgetext"},{"name":"bool"}],"output":null}],[10,"set_window","","Sets a widget’s window. This function should only be used in a\nwidget’s `Widget::realize` implementation. The `window` passed is\nusually either new window created with `gdk::Window::new`, or the\nwindow of its parent widget as returned by\n`WidgetExt::get_parent_window`.",370,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"show","","Flags a widget to be displayed. Any widget that isn’t shown will\nnot appear on the screen. If you want to show all the widgets in a\ncontainer, it’s easier to call `WidgetExt::show_all` on the\ncontainer, instead of individually showing the widgets.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"show_all","","Recursively shows a widget, and any child widgets (if the widget is\na container).",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"show_now","","Shows a widget. If the widget is an unmapped toplevel widget\n(i.e. a `Window` that has not yet been shown), enter the main\nloop and wait for the window to actually be mapped. Be careful;\nbecause the main loop is running, anything can happen during\nthis function.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"size_allocate","","This function is only used by `Container` subclasses, to assign a size\nand position to their child widgets.",370,{"inputs":[{"name":"widgetext"},{"name":"allocation"}],"output":null}],[10,"size_allocate_with_baseline","","This function is only used by `Container` subclasses, to assign a size,\nposition and (optionally) baseline to their child widgets.",370,{"inputs":[{"name":"widgetext"},{"name":"allocation"},{"name":"i32"}],"output":null}],[10,"size_request","","This function is typically used when implementing a `Container`\nsubclass. Obtains the preferred size of a widget. The container\nuses this information to arrange its child widgets and decide what\nsize allocations to give them with `WidgetExt::size_allocate`.",370,{"inputs":[{"name":"widgetext"}],"output":{"name":"requisition"}}],[10,"style_attach","","This function attaches the widget’s `Style` to the widget&#39;s\n`gdk::Window`. It is a replacement for",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"thaw_child_notify","","Reverts the effect of a previous call to `WidgetExt::freeze_child_notify`.\nThis causes all queued `Widget::child-notify` signals on `self` to be\nemitted.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"translate_coordinates","","Translate coordinates relative to `self`’s allocation to coordinates\nrelative to `dest_widget`’s allocations. In order to perform this\noperation, both widgets must be realized, and must share a common\ntoplevel.\n## `dest_widget`\na `Widget`\n## `src_x`\nX position relative to `self`\n## `src_y`\nY position relative to `self`\n## `dest_x`\nlocation to store X position relative to `dest_widget`\n## `dest_y`\nlocation to store Y position relative to `dest_widget`",370,{"inputs":[{"name":"widgetext"},{"name":"t"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[10,"trigger_tooltip_query","","Triggers a tooltip query on the display where the toplevel of `self`\nis located. See `Tooltip::trigger_tooltip_query` for more\ninformation.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unmap","","This function is only for use in widget implementations. Causes\na widget to be unmapped if it’s currently mapped.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unparent","","This function is only for use in widget implementations.\nShould be called by implementations of the remove method\non `Container`, to dissociate a child from the container.",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unrealize","","This function is only useful in widget implementations.\nCauses a widget to be unrealized (frees all GDK resources\nassociated with the widget, such as `self`-&gt;window).",370,{"inputs":[{"name":"widgetext"}],"output":null}],[10,"unregister_window","","Unregisters a `gdk::Window` from the widget that was previously set up with\n`WidgetExt::register_window`. You need to call this when the window is\nno longer used by the widget, such as when you destroy it.",370,{"inputs":[{"name":"widgetext"},{"name":"window"}],"output":null}],[10,"unset_state_flags","","This function is for use in widget implementations. Turns off flag\nvalues for the current widget state (insensitive, prelighted, etc.).\nSee `WidgetExt::set_state_flags`.\n## `flags`\nState flags to turn off",370,{"inputs":[{"name":"widgetext"},{"name":"stateflags"}],"output":null}],[8,"WindowExt","","Trait containing all `Window` methods.",null,null],[10,"activate_default","","Activates the default widget for the window, unless the current\nfocused widget has been configured to receive the default action\n(see `WidgetExt::set_receives_default`), in which case the\nfocused widget is activated.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"activate_focus","","Activates the current focused widget within the window.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"add_accel_group","","Associate `accel_group` with `self`, such that calling\n`gtk_accel_groups_activate` on `self` will activate accelerators\nin `accel_group`.\n## `accel_group`\na `AccelGroup`",347,{"inputs":[{"name":"windowext"},{"name":"accelgroup"}],"output":null}],[10,"add_mnemonic","","Adds a mnemonic to this window.\n## `keyval`\nthe mnemonic\n## `target`\nthe widget that gets activated by the mnemonic",347,{"inputs":[{"name":"windowext"},{"name":"u32"},{"name":"t"}],"output":null}],[10,"begin_move_drag","","Starts moving a window. This function is used if an application has\nwindow movement grips. When GDK can support it, the window movement\nwill be done using the standard mechanism for the\n[window manager][gtk-X11-arch] or windowing\nsystem. Otherwise, GDK will try to emulate window movement,\npotentially not all that well, depending on the windowing system.\n## `button`\nmouse button that initiated the drag\n## `root_x`\nX position where the user clicked to initiate the drag, in root window coordinates\n## `root_y`\nY position where the user clicked to initiate the drag\n## `timestamp`\ntimestamp from the click event that initiated the drag",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"begin_resize_drag","","Starts resizing a window. This function is used if an application\nhas window resizing controls. When GDK can support it, the resize\nwill be done using the standard mechanism for the\n[window manager][gtk-X11-arch] or windowing\nsystem. Otherwise, GDK will try to emulate window resizing,\npotentially not all that well, depending on the windowing system.\n## `edge`\nposition of the resize control\n## `button`\nmouse button that initiated the drag\n## `root_x`\nX position where the user clicked to initiate the drag, in root window coordinates\n## `root_y`\nY position where the user clicked to initiate the drag\n## `timestamp`\ntimestamp from the click event that initiated the drag",347,{"inputs":[{"name":"windowext"},{"name":"windowedge"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[10,"close","","Requests that the window is closed, similar to what happens\nwhen a window manager close button is clicked.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"deiconify","","Asks to deiconify (i.e. unminimize) the specified `self`. Note\nthat you shouldn’t assume the window is definitely deiconified\nafterward, because other entities (e.g. the user or\n[window manager][gtk-X11-arch])) could iconify it\nagain before your code which assumes deiconification gets to run.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"fullscreen","","Asks to place `self` in the fullscreen state. Note that you\nshouldn’t assume the window is definitely full screen afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could unfullscreen it\nagain, and not all window managers honor requests to fullscreen\nwindows. But normally the window will end up fullscreen. Just\ndon’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"get_accept_focus","","Gets the value set by `WindowExt::set_accept_focus`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_application","","Gets the `Application` associated with the window (if any).",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_attached_to","","Fetches the attach widget for this window. See\n`WindowExt::set_attached_to`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_decorated","","Returns whether the window has been set to have decorations\nsuch as a title bar via `WindowExt::set_decorated`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_default_size","","Gets the default size of the window. A value of -1 for the width or\nheight indicates that a default size has not been explicitly set\nfor that dimension, so the “natural” size of the window will be\nused.\n## `width`\nlocation to store the default width, or `None`\n## `height`\nlocation to store the default height, or `None`",347,null],[10,"get_default_widget","","Returns the default widget for `self`. See `WindowExt::set_default`\nfor more details.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_deletable","","Returns whether the window has been set to have a close button\nvia `WindowExt::set_deletable`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_destroy_with_parent","","Returns whether the window will be destroyed with its transient parent. See\ngtk_window_set_destroy_with_parent ().",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_focus","","Retrieves the current focused widget within the window.\nNote that this is the widget that would have the focus\nif the toplevel window focused; if the toplevel window\nis not focused then `gtk_widget_has_focus (widget)` will\nnot be `true` for the widget.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_focus_on_map","","Gets the value set by `WindowExt::set_focus_on_map`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_focus_visible","","Gets the value of the `Window:focus-visible` property.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_gravity","","Gets the value set by `WindowExt::set_gravity`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"gravity"}}],[10,"get_has_resize_grip","","Determines whether the window may have a resize grip.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_hide_titlebar_when_maximized","","Returns whether the window has requested to have its titlebar hidden\nwhen maximized. See gtk_window_set_hide_titlebar_when_maximized ().",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_icon","","Gets the value set by `WindowExt::set_icon` (or if you&#39;ve\ncalled `WindowExt::set_icon_list`, gets the first icon in\nthe icon list).",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_icon_list","","Retrieves the list of icons set by `WindowExt::set_icon_list`.\nThe list is copied, but the reference count on each\nmember won’t be incremented.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"vec"}}],[10,"get_icon_name","","Returns the name of the themed icon for the window,\nsee `WindowExt::set_icon_name`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_mnemonic_modifier","","Returns the mnemonic modifier for this window. See\n`WindowExt::set_mnemonic_modifier`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"modifiertype"}}],[10,"get_mnemonics_visible","","Gets the value of the `Window:mnemonics-visible` property.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_modal","","Returns whether the window is modal. See `WindowExt::set_modal`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_opacity","","Fetches the requested opacity for this window. See\n`WindowExt::set_opacity`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"f64"}}],[10,"get_position","","This function returns the position you need to pass to\n`WindowExt::move` to keep `self` in its current position.\nThis means that the meaning of the returned value varies with\nwindow gravity. See `WindowExt::move` for more details.",347,null],[10,"get_resizable","","Gets the value set by `WindowExt::set_resizable`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_resize_grip_area","","If a window has a resize grip, this will retrieve the grip\nposition, width and height into the specified `gdk::Rectangle`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_role","","Returns the role of the window. See `WindowExt::set_role` for\nfurther explanation.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_screen","","Returns the `gdk::Screen` associated with `self`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_size","","Obtains the current size of `self`. If `self` is not onscreen,\nit returns the size GTK+ will suggest to the\n[window manager][gtk-X11-arch]\nfor the initial window\nsize (but this is not reliably the same as the size the window\nmanager will actually select). The size obtained by\n`WindowExt::get_size` is the last size received in a\n`gdk::EventConfigure`, that is, GTK+ uses its locally-stored size,\nrather than querying the X server for the size. As a result, if you\ncall `WindowExt::resize` then immediately call\n`WindowExt::get_size`, the size won’t have taken effect yet. After\nthe window manager processes the resize request, GTK+ receives\nnotification that the size has changed via a configure event, and\nthe size of the window gets updated.",347,null],[10,"get_skip_pager_hint","","Gets the value set by `WindowExt::set_skip_pager_hint`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_skip_taskbar_hint","","Gets the value set by `WindowExt::set_skip_taskbar_hint`",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_title","","Retrieves the title of the window. See `WindowExt::set_title`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_titlebar","","Returns the custom titlebar that has been set with\n`WindowExt::set_titlebar`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_transient_for","","Fetches the transient parent for this window. See\n`WindowExt::set_transient_for`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"option"}}],[10,"get_type_hint","","Gets the type hint for this window. See `WindowExt::set_type_hint`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"windowtypehint"}}],[10,"get_urgency_hint","","Gets the value set by `WindowExt::set_urgency_hint`",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"get_window_type","","Gets the type of the window. See `WindowType`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"windowtype"}}],[10,"has_group","","Returns whether `self` has an explicit window group.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"has_toplevel_focus","","Returns whether the input focus is within this `Window`.\nFor real toplevel windows, this is identical to `WindowExt::is_active`,\nbut for embedded windows, like `Plug`, the results will differ.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"iconify","","Asks to iconify (i.e. minimize) the specified `self`. Note that\nyou shouldn’t assume the window is definitely iconified afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could deiconify it\nagain, or there may not be a window manager in which case\niconification isn’t possible, etc. But normally the window will end\nup iconified. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"is_active","","Returns whether the window is part of the current active toplevel.\n(That is, the toplevel window receiving keystrokes.)\nThe return value is `true` if the window is active toplevel\nitself, but also if it is, say, a `Plug` embedded in the active toplevel.\nYou might use this function if you wanted to draw a widget\ndifferently in an active window from a widget in an inactive window.\nSee `WindowExt::has_toplevel_focus`",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"is_maximized","","Retrieves the current maximized state of `self`.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"maximize","","Asks to maximize `self`, so that it becomes full-screen. Note that\nyou shouldn’t assume the window is definitely maximized afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could unmaximize it\nagain, and not all window managers support maximization. But\nnormally the window will end up maximized. Just don’t write code\nthat crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"mnemonic_activate","","Activates the targets associated with the mnemonic.\n## `keyval`\nthe mnemonic\n## `modifier`\nthe modifiers",347,{"inputs":[{"name":"windowext"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[10,"move_","","",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"parse_geometry","","Parses a standard X Window System geometry string - see the\nmanual page for X (type “man X”) for details on this.\n`WindowExt::parse_geometry` does work on all GTK+ ports\nincluding Win32 but is primarily intended for an X environment.",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":{"name":"bool"}}],[10,"present","","Presents a window to the user. This may mean raising the window\nin the stacking order, deiconifying it, moving it to the current\ndesktop, and/or giving it the keyboard focus, possibly dependent\non the user’s platform, window manager, and preferences.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"present_with_time","","Presents a window to the user in response to a user interaction.\nIf you need to present a window without a timestamp, use\n`WindowExt::present`. See `WindowExt::present` for details.\n## `timestamp`\nthe timestamp of the user interaction (typically a\n button or key press event) which triggered this call",347,{"inputs":[{"name":"windowext"},{"name":"u32"}],"output":null}],[10,"remove_accel_group","","Reverses the effects of `WindowExt::add_accel_group`.\n## `accel_group`\na `AccelGroup`",347,{"inputs":[{"name":"windowext"},{"name":"accelgroup"}],"output":null}],[10,"remove_mnemonic","","Removes a mnemonic from this window.\n## `keyval`\nthe mnemonic\n## `target`\nthe widget that gets activated by the mnemonic",347,{"inputs":[{"name":"windowext"},{"name":"u32"},{"name":"t"}],"output":null}],[10,"reshow_with_initial_size","","Hides `self`, then reshows it, resetting the\ndefault size and position of the window. Used\nby GUI builders only.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"resize","","Resizes the window as if the user had done so, obeying geometry\nconstraints. The default geometry constraint is that windows may\nnot be smaller than their size request; to override this\nconstraint, call `WidgetExt::set_size_request` to set the window&#39;s\nrequest to a smaller value.",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"resize_grip_is_visible","","Determines whether a resize grip is visible for the specified window.",347,{"inputs":[{"name":"windowext"}],"output":{"name":"bool"}}],[10,"resize_to_geometry","","Like `WindowExt::resize`, but `width` and `height` are interpreted\nin terms of the base size and increment set with\ngtk_window_set_geometry_hints.\n## `width`\nwidth in resize increments to resize the window to\n## `height`\nheight in resize increments to resize the window to",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_accept_focus","","Windows may set a hint asking the desktop environment not to receive\nthe input focus. This function sets this hint.\n## `setting`\n`true` to let this window receive input focus",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_application","","Sets or unsets the `Application` associated with the window.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_attached_to","","Marks `self` as attached to `attach_widget`. This creates a logical binding\nbetween the window and the widget it belongs to, which is used by GTK+ to\npropagate information such as styling or accessibility to `self` as if it\nwas a children of `attach_widget`.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_decorated","","By default, windows are decorated with a title bar, resize\ncontrols, etc. Some [window managers][gtk-X11-arch]\nallow GTK+ to disable these decorations, creating a\nborderless window. If you set the decorated property to `false`\nusing this function, GTK+ will do its best to convince the window\nmanager not to decorate the window. Depending on the system, this\nfunction may not have any effect when called on a window that is\nalready visible, so you should call it before calling `WidgetExt::show`.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_default","","The default widget is the widget that’s activated when the user\npresses Enter in a dialog (for example). This function sets or\nunsets the default widget for a `Window`. When setting (rather\nthan unsetting) the default widget it’s generally easier to call\n`WidgetExt::grab_default` on the widget. Before making a widget\nthe default widget, you must call `WidgetExt::set_can_default` on\nthe widget you’d like to make the default.\n## `default_widget`\nwidget to be the default, or `None`\n to unset the default widget for the toplevel",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_default_geometry","","Like `WindowExt::set_default_size`, but `width` and `height` are interpreted\nin terms of the base size and increment set with\ngtk_window_set_geometry_hints.\n## `width`\nwidth in resize increments, or -1 to unset the default width\n## `height`\nheight in resize increments, or -1 to unset the default height",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_default_size","","Sets the default size of a window. If the window’s “natural” size\n(its size request) is larger than the default, the default will be\nignored. More generally, if the default size does not obey the\ngeometry hints for the window (`WindowExt::set_geometry_hints` can\nbe used to set these explicitly), the default size will be clamped\nto the nearest permitted size.",347,{"inputs":[{"name":"windowext"},{"name":"i32"},{"name":"i32"}],"output":null}],[10,"set_deletable","","By default, windows have a close button in the window frame. Some\n[window managers][gtk-X11-arch] allow GTK+ to\ndisable this button. If you set the deletable property to `false`\nusing this function, GTK+ will do its best to convince the window\nmanager not to show a close button. Depending on the system, this\nfunction may not have any effect when called on a window that is\nalready visible, so you should call it before calling `WidgetExt::show`.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_destroy_with_parent","","If `setting` is `true`, then destroying the transient parent of `self`\nwill also destroy `self` itself. This is useful for dialogs that\nshouldn’t persist beyond the lifetime of the main window they&#39;re\nassociated with, for example.\n## `setting`\nwhether to destroy `self` with its transient parent",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_focus","","If `focus` is not the current focus widget, and is focusable, sets\nit as the focus widget for the window. If `focus` is `None`, unsets\nthe focus widget for this window. To set the focus to a particular\nwidget in the toplevel, it is usually more convenient to use\n`WidgetExt::grab_focus` instead of this function.\n## `focus`\nwidget to be the new focus widget, or `None` to unset\n any focus widget for the toplevel window.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_focus_on_map","","Windows may set a hint asking the desktop environment not to receive\nthe input focus when the window is mapped. This function sets this\nhint.\n## `setting`\n`true` to let this window receive input focus on map",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_focus_visible","","Sets the `Window:focus-visible` property.\n## `setting`\nthe new value",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_gravity","","Window gravity defines the meaning of coordinates passed to\n`WindowExt::move`. See `WindowExt::move` and `gdk::Gravity` for\nmore details.",347,{"inputs":[{"name":"windowext"},{"name":"gravity"}],"output":null}],[10,"set_has_resize_grip","","Sets whether `self` has a corner resize grip.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_has_user_ref_count","","Tells GTK+ whether to drop its extra reference to the window\nwhen `WidgetExt::destroy` is called.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_hide_titlebar_when_maximized","","If `setting` is `true`, then `self` will request that it’s titlebar\nshould be hidden when maximized.\nThis is useful for windows that don’t convey any information other\nthan the application name in the titlebar, to put the available\nscreen space to better use. If the underlying window system does not\nsupport the request, the setting will not have any effect.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_icon","","Sets up the icon representing a `Window`. This icon is used when\nthe window is minimized (also known as iconified). Some window\nmanagers or desktop environments may also place it in the window\nframe, or display it in other contexts.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_icon_from_file","","Sets the icon for `self`.\nWarns on failure if `err` is `None`.",347,{"inputs":[{"name":"windowext"},{"name":"t"}],"output":{"name":"result"}}],[10,"set_icon_list","","Sets up the icon representing a `Window`. The icon is used when\nthe window is minimized (also known as iconified). Some window\nmanagers or desktop environments may also place it in the window\nframe, or display it in other contexts.",347,null],[10,"set_icon_name","","Sets the icon for the window from a named themed icon. See\nthe docs for `IconTheme` for more details.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_keep_above","","Asks to keep `self` above, so that it stays on top. Note that\nyou shouldn’t assume the window is definitely above afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could not keep it above,\nand not all window managers support keeping windows above. But\nnormally the window will end kept above. Just don’t write code\nthat crashes if not.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_keep_below","","Asks to keep `self` below, so that it stays in bottom. Note that\nyou shouldn’t assume the window is definitely below afterward,\nbecause other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could not keep it below,\nand not all window managers support putting windows below. But\nnormally the window will be kept below. Just don’t write code\nthat crashes if not.",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_mnemonic_modifier","","Sets the mnemonic modifier for this window.\n## `modifier`\nthe modifier mask used to activate\n mnemonics on this window.",347,{"inputs":[{"name":"windowext"},{"name":"modifiertype"}],"output":null}],[10,"set_mnemonics_visible","","Sets the `Window:mnemonics-visible` property.\n## `setting`\nthe new value",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_modal","","Sets a window modal or non-modal. Modal windows prevent interaction\nwith other windows in the same application. To keep modal dialogs\non top of main application windows, use\n`WindowExt::set_transient_for` to make the dialog transient for the\nparent; most [window managers][gtk-X11-arch]\nwill then disallow lowering the dialog below the parent.\n## `modal`\nwhether the window is modal",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_opacity","","Request the windowing system to make `self` partially transparent,\nwith opacity 0 being fully transparent and 1 fully opaque. (Values\nof the opacity parameter are clamped to the [0,1] range.) On X11\nthis has any effect only on X screens with a compositing manager\nrunning. See `WidgetExt::is_composited`. On Windows it should work\nalways.",347,{"inputs":[{"name":"windowext"},{"name":"f64"}],"output":null}],[10,"set_position","","Sets a position constraint for this window. If the old or new\nconstraint is `WindowPosition::CenterAlways`, this will also cause\nthe window to be repositioned to satisfy the new constraint.\n## `position`\na position constraint.",347,{"inputs":[{"name":"windowext"},{"name":"windowposition"}],"output":null}],[10,"set_resizable","","Sets whether the user can resize a window. Windows are user resizable\nby default.\n## `resizable`\n`true` if the user can resize this window",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_role","","This function is only useful on X11, not with other GTK+ targets.",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":null}],[10,"set_screen","","Sets the `gdk::Screen` where the `self` is displayed; if\nthe window is already mapped, it will be unmapped, and\nthen remapped on the new screen.\n## `screen`\na `gdk::Screen`.",347,{"inputs":[{"name":"windowext"},{"name":"screen"}],"output":null}],[10,"set_skip_pager_hint","","Windows may set a hint asking the desktop environment not to display\nthe window in the pager. This function sets this hint.\n(A &quot;pager&quot; is any desktop navigation tool such as a workspace\nswitcher that displays a thumbnail representation of the windows\non the screen.)\n## `setting`\n`true` to keep this window from appearing in the pager",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_skip_taskbar_hint","","Windows may set a hint asking the desktop environment not to display\nthe window in the task bar. This function sets this hint.\n## `setting`\n`true` to keep this window from appearing in the task bar",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_startup_id","","Startup notification identifiers are used by desktop environment to\ntrack application startup, to provide user feedback and other\nfeatures. This function changes the corresponding property on the\nunderlying `gdk::Window`. Normally, startup identifier is managed\nautomatically and you should only use this function in special cases\nlike transferring focus from other processes. You should use this\nfunction before calling `WindowExt::present` or any equivalent\nfunction generating a window map event.",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":null}],[10,"set_title","","Sets the title of the `Window`. The title of a window will be\ndisplayed in its title bar; on the X Window System, the title bar\nis rendered by the [window manager][gtk-X11-arch],\nso exactly how the title appears to users may vary\naccording to a user’s exact configuration. The title should help a\nuser distinguish this window from other windows they may have\nopen. A good title might include the application name and current\ndocument filename, for example.\n## `title`\ntitle of the window",347,{"inputs":[{"name":"windowext"},{"name":"str"}],"output":null}],[10,"set_titlebar","","Sets a custom titlebar for `self`.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_transient_for","","Dialog windows should be set transient for the main application\nwindow they were spawned from. This allows\n[window managers][gtk-X11-arch] to e.g. keep the\ndialog on top of the main window, or center the dialog over the\nmain window. `Dialog::new_with_buttons` and other convenience\nfunctions in GTK+ will sometimes call\n`WindowExt::set_transient_for` on your behalf.",347,{"inputs":[{"name":"windowext"},{"name":"option"}],"output":null}],[10,"set_type_hint","","By setting the type hint for the window, you allow the window\nmanager to decorate and handle the window in a way which is\nsuitable to the function of the window in your application.",347,{"inputs":[{"name":"windowext"},{"name":"windowtypehint"}],"output":null}],[10,"set_urgency_hint","","Windows may set a hint asking the desktop environment to draw\nthe users attention to the window. This function sets this hint.\n## `setting`\n`true` to mark this window as urgent",347,{"inputs":[{"name":"windowext"},{"name":"bool"}],"output":null}],[10,"set_wmclass","","Don’t use this function. It sets the X Window System “class” and\n“name” hints for a window. According to the ICCCM, you should\nalways set these to the same value for all windows in an\napplication, and GTK+ sets them to that value by default, so calling\nthis function is sort of pointless. However, you may want to call\n`WindowExt::set_role` on each window in your application, for the\nbenefit of the session manager. Setting the role allows the window\nmanager to restore window positions when loading a saved session.\n## `wmclass_name`\nwindow name hint\n## `wmclass_class`\nwindow class hint",347,{"inputs":[{"name":"windowext"},{"name":"str"},{"name":"str"}],"output":null}],[10,"stick","","Asks to stick `self`, which means that it will appear on all user\ndesktops. Note that you shouldn’t assume the window is definitely\nstuck afterward, because other entities (e.g. the user or\n[window manager][gtk-X11-arch] could unstick it\nagain, and some window managers do not support sticking\nwindows. But normally the window will end up stuck. Just don&#39;t\nwrite code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"unfullscreen","","Asks to toggle off the fullscreen state for `self`. Note that you\nshouldn’t assume the window is definitely not full screen\nafterward, because other entities (e.g. the user or\n[window manager][gtk-X11-arch]) could fullscreen it\nagain, and not all window managers honor requests to unfullscreen\nwindows. But normally the window will end up restored to its normal\nstate. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"unmaximize","","Asks to unmaximize `self`. Note that you shouldn’t assume the\nwindow is definitely unmaximized afterward, because other entities\n(e.g. the user or [window manager][gtk-X11-arch])\ncould maximize it again, and not all window\nmanagers honor requests to unmaximize. But normally the window will\nend up unmaximized. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[10,"unstick","","Asks to unstick `self`, which means that it will appear on only\none of the user’s desktops. Note that you shouldn’t assume the\nwindow is definitely unstuck afterward, because other entities\n(e.g. the user or [window manager][gtk-X11-arch]) could\nstick it again. But normally the window will\nend up stuck. Just don’t write code that crashes if not.",347,{"inputs":[{"name":"windowext"}],"output":null}],[8,"WidgetSignals","","",null,null],[10,"connect_accel_closures_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_can_activate_accel","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_composited_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_configure_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_damage_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_destroy_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_direction_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_draw","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_enter_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_event_after","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_in_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_focus_out_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_broken_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_focus","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_grab_notify","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_hide","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_press_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_key_release_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_keynav_failed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_leave_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_map","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_map_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_mnemonic_activate","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_motion_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_focus","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_property_notify_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_in_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_proximity_out_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_realize","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_screen_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_show_help","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_allocate","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_state_flags_changed","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_style_updated","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_touch_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unmap","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unmap_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unrealize","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_window_state_event","","",354,{"inputs":[{"name":"widgetsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"EntrySignals","","",null,null],[10,"connect_activate","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_backspace","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_copy_clipboard","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cut_clipboard","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_paste_clipboard","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_overwrite","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_delete_from_cursor","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_cursor","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_insert_at_cursor","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_preedit_changed","","",355,{"inputs":[{"name":"entrysignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ButtonSignals","","",null,null],[10,"connect_activate","","",356,{"inputs":[{"name":"buttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_clicked","","",356,{"inputs":[{"name":"buttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ComboBoxSignals","","",null,null],[10,"connect_changed","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_active","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popdown","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup","","",357,{"inputs":[{"name":"comboboxsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToolButtonSignals","","",null,null],[10,"connect_clicked","","",358,{"inputs":[{"name":"toolbuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"ToggleButtonSignals","","",null,null],[10,"connect_toggled","","",359,{"inputs":[{"name":"togglebuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CellRendererToggleSignals","","",null,null],[10,"connect_toggled","","",360,{"inputs":[{"name":"cellrenderertogglesignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"SpinButtonSignals","","",null,null],[10,"connect_value_changed","","",361,{"inputs":[{"name":"spinbuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_wrapped","","",361,{"inputs":[{"name":"spinbuttonsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"DialogSignals","","",null,null],[10,"connect_close","","",362,{"inputs":[{"name":"dialogsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_response","","",362,{"inputs":[{"name":"dialogsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"TreeViewSignals","","",null,null],[10,"connect_columns_changed","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_cursor_changed","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_expand_collapse_cursor_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_activated","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_collapsed","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_row_expanded","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_all","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_parent","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_select_cursor_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_start_interactive_search","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_collapse_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_test_expand_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_toggle_cursor_row","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_unselect_all","","",363,{"inputs":[{"name":"treeviewsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"RangeSignals","","",null,null],[10,"connect_adjust_bounds","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_change_value","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_move_slider","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_value_changed","","",364,{"inputs":[{"name":"rangesignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"CalendarSignals","","",null,null],[10,"connect_day_selected","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_day_selected_double_click","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_month_changed","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_month","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_next_year","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_month","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_prev_year","","",365,{"inputs":[{"name":"calendarsignals"},{"name":"f"}],"output":{"name":"u64"}}],[8,"StatusIconSignals","","",null,null],[10,"connect_activate","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_press_event","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_button_release_event","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_popup_menu","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_query_tooltip","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_scroll_event","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}],[10,"connect_size_changed","","",366,{"inputs":[{"name":"statusiconsignals"},{"name":"f"}],"output":{"name":"u64"}}]],"paths":[[8,"Cast"],[4,"AnyBox"],[3,"Boxed"],[3,"Shared"],[3,"ObjectRef"],[3,"MemoryManager"],[3,"Object"],[3,"AppInfo"],[3,"Error"],[3,"MemoryManager"],[4,"FileError"],[3,"Continue"],[3,"CallbackGuard"],[4,"Option"],[4,"Ordering"],[3,"String"],[3,"Path"],[3,"PtrArray"],[3,"List"],[3,"SList"],[3,"HashMap"],[3,"HashTable"],[3,"PathBuf"],[3,"Vec"],[4,"Type"],[3,"Value"],[3,"ValueArray"],[3,"TypedValue"],[8,"StaticType"],[8,"ToValue"],[3,"AccelFlags"],[4,"Align"],[4,"ArrowPlacement"],[4,"ArrowType"],[4,"GtkAssistantPageType"],[4,"BaselinePosition"],[4,"BorderStyle"],[4,"BuilderError"],[4,"ButtonBoxStyle"],[4,"GtkButtonRole"],[4,"ButtonsType"],[4,"GtkCellRendererAccelMode"],[4,"GtkCellRendererMode"],[4,"CornerType"],[4,"GtkCssProviderError"],[4,"GtkCssSectionType"],[4,"DeleteType"],[4,"DirectionType"],[4,"DragResult"],[4,"EntryIconPosition"],[4,"EventSequenceState"],[4,"ExpanderStyle"],[4,"FileChooserAction"],[4,"GtkFileChooserConfirmation"],[4,"GtkFileChooserError"],[4,"IMPreeditStyle"],[4,"IMStatusStyle"],[4,"IconSize"],[4,"GtkIconThemeError"],[4,"IconViewDropPosition"],[4,"ImageType"],[4,"InputPurpose"],[4,"Justification"],[4,"LevelBarMode"],[4,"License"],[4,"GtkMenuDirectionType"],[4,"MessageType"],[4,"MovementStep"],[4,"GtkNotebookTab"],[4,"NumberUpLayout"],[4,"Orientation"],[4,"GtkPackDirection"],[4,"PackType"],[4,"PageOrientation"],[4,"PageSet"],[4,"GtkPanDirection"],[4,"PathPriorityType"],[4,"PathType"],[4,"PolicyType"],[4,"PositionType"],[4,"PrintDuplex"],[4,"GtkPrintError"],[4,"GtkPrintOperationAction"],[4,"GtkPrintOperationResult"],[4,"PrintPages"],[4,"PrintQuality"],[4,"GtkPrintStatus"],[4,"PropagationPhase"],[4,"GtkRcTokenType"],[4,"GtkRecentChooserError"],[4,"GtkRecentManagerError"],[4,"RecentSortType"],[4,"ReliefStyle"],[4,"ResizeMode"],[4,"ResponseType"],[4,"RevealerTransitionType"],[4,"ScrollStep"],[4,"ScrollType"],[4,"ScrollablePolicy"],[4,"SelectionMode"],[4,"SensitivityType"],[4,"ShadowType"],[4,"SizeGroupMode"],[4,"SizeRequestMode"],[4,"SortType"],[4,"SpinButtonUpdatePolicy"],[4,"SpinType"],[4,"StackTransitionType"],[4,"StateType"],[4,"GtkTextBufferTargetInfo"],[4,"TextDirection"],[4,"GtkTextExtendSelection"],[4,"GtkTextViewLayer"],[4,"TextWindowType"],[4,"GtkToolbarSpaceStyle"],[4,"ToolbarStyle"],[4,"TreeViewColumnSizing"],[4,"TreeViewDropPosition"],[4,"TreeViewGridLines"],[4,"Unit"],[4,"WidgetHelpType"],[4,"WindowPosition"],[4,"WindowType"],[4,"WrapMode"],[3,"ApplicationInhibitFlags"],[3,"AttachOptions"],[3,"CalendarDisplayOptions"],[3,"CellRendererState"],[3,"GtkDebugFlag"],[3,"DestDefaults"],[3,"DialogFlags"],[3,"FileFilterFlags"],[3,"GtkIconLookupFlags"],[3,"InputHints"],[3,"JunctionSides"],[3,"PlacesOpenFlags"],[3,"GtkRcFlags"],[3,"RecentFilterFlags"],[3,"RegionFlags"],[3,"StateFlags"],[3,"GtkTargetFlags"],[3,"TextSearchFlags"],[3,"ToolPaletteDragTargets"],[3,"TreeModelFlags"],[3,"GtkUIManagerItemType"],[3,"Allocation"],[3,"RecentData"],[3,"Requisition"],[4,"SortColumn"],[3,"AboutDialog"],[3,"AccelGroup"],[3,"ActionBar"],[3,"Actionable"],[3,"Adjustment"],[3,"Alignment"],[3,"AppChooserDialog"],[3,"AppChooserWidget"],[3,"Application"],[3,"ApplicationWindow"],[3,"Arrow"],[3,"AspectFrame"],[3,"Bin"],[3,"Box"],[3,"Button"],[3,"ButtonBox"],[3,"Calendar"],[3,"CellArea"],[3,"CellAreaBox"],[3,"CellAreaContext"],[3,"CellEditable"],[3,"CellLayout"],[3,"CellRenderer"],[3,"CellRendererAccel"],[3,"CellRendererCombo"],[3,"CellRendererPixbuf"],[3,"CellRendererProgress"],[3,"CellRendererSpin"],[3,"CellRendererSpinner"],[3,"CellRendererText"],[3,"CellRendererToggle"],[3,"CheckButton"],[3,"CheckMenuItem"],[3,"ColorButton"],[3,"ColorChooserDialog"],[3,"ColorChooserWidget"],[3,"ComboBox"],[3,"ComboBoxText"],[3,"Container"],[3,"CssProvider"],[3,"Dialog"],[3,"DrawingArea"],[3,"Editable"],[3,"Entry"],[3,"EntryCompletion"],[3,"EventBox"],[3,"EventController"],[3,"Expander"],[3,"FileChooser"],[3,"FileChooserDialog"],[3,"FileChooserWidget"],[3,"FileFilter"],[3,"Fixed"],[3,"FlowBox"],[3,"FlowBoxChild"],[3,"FontButton"],[3,"FontChooser"],[3,"FontChooserDialog"],[3,"FontChooserWidget"],[3,"Frame"],[3,"GLArea"],[3,"Gesture"],[3,"GestureDrag"],[3,"GestureLongPress"],[3,"GestureMultiPress"],[3,"GesturePan"],[3,"GestureRotate"],[3,"GestureSingle"],[3,"GestureSwipe"],[3,"GestureZoom"],[3,"Grid"],[3,"HeaderBar"],[3,"IconView"],[3,"Image"],[3,"InfoBar"],[3,"Label"],[3,"Layout"],[3,"LevelBar"],[3,"LinkButton"],[3,"ListBox"],[3,"ListBoxRow"],[3,"ListStore"],[3,"Menu"],[3,"MenuButton"],[3,"MenuItem"],[3,"MenuShell"],[3,"MenuToolButton"],[3,"MessageDialog"],[3,"Misc"],[3,"Notebook"],[3,"Orientable"],[3,"Overlay"],[3,"PageSetup"],[3,"Paned"],[3,"PlacesSidebar"],[3,"Popover"],[3,"PopoverMenu"],[3,"PrintSettings"],[3,"ProgressBar"],[3,"RadioButton"],[3,"Range"],[3,"RecentChooser"],[3,"RecentChooserDialog"],[3,"RecentChooserWidget"],[3,"RecentFilter"],[3,"RecentManager"],[3,"Revealer"],[3,"Scale"],[3,"ScaleButton"],[3,"Scrollable"],[3,"Scrollbar"],[3,"ScrolledWindow"],[3,"SearchBar"],[3,"SearchEntry"],[3,"Separator"],[3,"SeparatorMenuItem"],[3,"SeparatorToolItem"],[3,"SizeGroup"],[3,"SpinButton"],[3,"Spinner"],[3,"Stack"],[3,"StackSidebar"],[3,"StackSwitcher"],[3,"StatusIcon"],[3,"Statusbar"],[3,"StyleContext"],[3,"Switch"],[3,"TextBuffer"],[3,"TextChildAnchor"],[3,"TextMark"],[3,"TextTag"],[3,"TextTagTable"],[3,"TextView"],[3,"ToggleButton"],[3,"ToggleToolButton"],[3,"ToolButton"],[3,"ToolItem"],[3,"ToolItemGroup"],[3,"ToolPalette"],[3,"ToolShell"],[3,"Toolbar"],[3,"TreeModel"],[3,"TreeSelection"],[3,"TreeSortable"],[3,"TreeStore"],[3,"TreeView"],[3,"TreeViewColumn"],[3,"Viewport"],[3,"VolumeButton"],[3,"Widget"],[3,"Window"],[3,"PaperSize"],[3,"TextIter"],[3,"TreeIter"],[3,"TreePath"],[3,"AppChooser"],[3,"Buildable"],[3,"Builder"],[3,"ColorChooser"],[3,"EntryBuffer"],[3,"RecentInfo"],[3,"Inhibit"],[3,"Socket"],[3,"TextAttributes"],[8,"ActionableExt"],[8,"BinExt"],[8,"BoxExt"],[8,"ButtonExt"],[8,"CellAreaExt"],[8,"CellEditableExt"],[8,"CellLayoutExt"],[8,"CellRendererExt"],[8,"CellRendererTextExt"],[8,"ComboBoxExt"],[8,"ContainerExt"],[8,"EditableExt"],[8,"EntryExt"],[8,"EventControllerExt"],[8,"FileChooserExt"],[8,"FontChooserExt"],[8,"FrameExt"],[8,"GestureExt"],[8,"GestureDragExt"],[8,"GestureSingleExt"],[8,"MenuItemExt"],[8,"MenuShellExt"],[8,"MiscExt"],[8,"OrientableExt"],[8,"PopoverExt"],[8,"RangeExt"],[8,"RecentChooserExt"],[8,"ScaleButtonExt"],[8,"ScrollableExt"],[8,"ScrolledWindowExt"],[8,"ToggleButtonExt"],[8,"ToolButtonExt"],[8,"ToolItemExt"],[8,"ToolShellExt"],[8,"WindowExt"],[8,"AppChooserExt"],[8,"ColorChooserExt"],[8,"DialogExt"],[8,"TreeModelExt"],[8,"TreeSortableExt"],[8,"WidgetExt"],[8,"WidgetSignals"],[8,"EntrySignals"],[8,"ButtonSignals"],[8,"ComboBoxSignals"],[8,"ToolButtonSignals"],[8,"ToggleButtonSignals"],[8,"CellRendererToggleSignals"],[8,"SpinButtonSignals"],[8,"DialogSignals"],[8,"TreeViewSignals"],[8,"RangeSignals"],[8,"CalendarSignals"],[8,"StatusIconSignals"],[8,"DialogExt"],[8,"TreeModelExt"],[8,"TreeSortableExt"],[8,"WidgetExt"]]};
searchIndex["gtk_sys"] = {"doc":"","items":[[3,"GtkAccelFlags","gtk_sys","Accelerator flags used with `AccelGroup::connect`.",null,null],[3,"GtkApplicationInhibitFlags","","Types of user actions that may be blocked by `Application::inhibit`.",null,null],[3,"GtkAttachOptions","","Denotes the expansion properties that a widget will have when it (or its\nparent) is resized.",null,null],[3,"GtkCalendarDisplayOptions","","These options can be used to influence the display and behaviour of a `Calendar`.",null,null],[3,"GtkCellRendererState","","Tells how a cell is to be rendered.",null,null],[3,"GtkDebugFlag","","",null,null],[3,"GtkDestDefaults","","The `DestDefaults` enumeration specifies the various\ntypes of action that will be taken on behalf\nof the user for a drag destination site.",null,null],[3,"GtkDialogFlags","","Flags used to influence dialog construction.",null,null],[3,"GtkFileFilterFlags","","These flags indicate what parts of a `FileFilterInfo` struct\nare filled or need to be filled.",null,null],[3,"GtkIconLookupFlags","","Used to specify options for `IconTheme::lookup_icon`",null,null],[3,"GtkInputHints","","Describes hints that might be taken into account by input methods\nor applications. Note that input methods may already tailor their\nbehaviour according to the `InputPurpose` of the entry.",null,null],[3,"GtkJunctionSides","","Describes how a rendered element connects to adjacent elements.",null,null],[3,"GtkPlacesOpenFlags","","These flags serve two purposes. First, the application can call `PlacesSidebar::set_open_flags`\nusing these flags as a bitmask. This tells the sidebar that the application is able to open\nfolders selected from the sidebar in various ways, for example, in new tabs or in new windows in\naddition to the normal mode.",null,null],[3,"GtkRcFlags","","Deprecated",null,null],[3,"GtkRecentFilterFlags","","These flags indicate what parts of a `RecentFilterInfo` struct\nare filled or need to be filled.",null,null],[3,"GtkRegionFlags","","Describes a region within a widget.",null,null],[3,"GtkStateFlags","","Describes a widget state. Widget states are used to match the widget\nagainst CSS pseudo-classes. Note that GTK extends the regular CSS\nclasses and sometimes uses different names.",null,null],[3,"GtkTargetFlags","","The `TargetFlags` enumeration is used to specify\nconstraints on a `TargetEntry`.",null,null],[3,"GtkTextSearchFlags","","Flags affecting how a search is done.",null,null],[3,"GtkToolPaletteDragTargets","","Flags used to specify the supported drag targets.",null,null],[3,"GtkTreeModelFlags","","These flags indicate various properties of a `TreeModel`.",null,null],[3,"GtkUIManagerItemType","","These enumeration values are used by `UIManager::add_ui` to determine\nwhat UI element to create.",null,null],[3,"GtkAboutDialogClass","","",null,null],[12,"parent_class","","",0,null],[12,"activate_link","","",0,null],[12,"_gtk_reserved1","","",0,null],[12,"_gtk_reserved2","","",0,null],[12,"_gtk_reserved3","","",0,null],[12,"_gtk_reserved4","","",0,null],[3,"GtkAboutDialogPrivate","","",null,null],[3,"GtkAccelGroupClass","","",null,null],[12,"parent_class","","",1,null],[12,"accel_changed","","",1,null],[12,"_gtk_reserved1","","",1,null],[12,"_gtk_reserved2","","",1,null],[12,"_gtk_reserved3","","",1,null],[12,"_gtk_reserved4","","",1,null],[3,"GtkAccelGroupEntry","","",null,null],[12,"key","","",2,null],[12,"closure","","",2,null],[12,"accel_path_quark","","",2,null],[3,"GtkAccelGroupPrivate","","",null,null],[3,"GtkAccelKey","","",null,null],[12,"accel_key","","",3,null],[12,"accel_mods","","",3,null],[3,"GtkAccelLabelClass","","",null,null],[12,"parent_class","","",4,null],[12,"signal_quote1","","",4,null],[12,"signal_quote2","","",4,null],[12,"mod_name_shift","","",4,null],[12,"mod_name_control","","",4,null],[12,"mod_name_alt","","",4,null],[12,"mod_separator","","",4,null],[12,"_gtk_reserved1","","",4,null],[12,"_gtk_reserved2","","",4,null],[12,"_gtk_reserved3","","",4,null],[12,"_gtk_reserved4","","",4,null],[3,"GtkAccelLabelPrivate","","",null,null],[3,"GtkAccelMapClass","","",null,null],[3,"GtkAccessibleClass","","",null,null],[12,"parent_class","","",5,null],[12,"connect_widget_destroyed","","",5,null],[12,"widget_set","","",5,null],[12,"widget_unset","","",5,null],[12,"_gtk_reserved3","","",5,null],[12,"_gtk_reserved4","","",5,null],[3,"GtkAccessiblePrivate","","",null,null],[3,"GtkActionBarClass","","",null,null],[12,"_gtk_reserved1","","",6,null],[12,"_gtk_reserved2","","",6,null],[12,"_gtk_reserved3","","",6,null],[12,"_gtk_reserved4","","",6,null],[3,"GtkActionBarPrivate","","",null,null],[3,"GtkActionClass","","",null,null],[12,"parent_class","","",7,null],[12,"activate","","",7,null],[12,"create_menu_item","","",7,null],[12,"create_tool_item","","",7,null],[12,"connect_proxy","","",7,null],[12,"disconnect_proxy","","",7,null],[12,"create_menu","","",7,null],[12,"_gtk_reserved1","","",7,null],[12,"_gtk_reserved2","","",7,null],[12,"_gtk_reserved3","","",7,null],[12,"_gtk_reserved4","","",7,null],[3,"GtkActionEntry","","",null,null],[12,"name","","",8,null],[12,"stock_id","","",8,null],[12,"label","","",8,null],[12,"accelerator","","",8,null],[12,"tooltip","","",8,null],[12,"callback","","",8,null],[3,"GtkActionGroupClass","","",null,null],[12,"parent_class","","",9,null],[12,"get_action","","",9,null],[12,"_gtk_reserved1","","",9,null],[12,"_gtk_reserved2","","",9,null],[12,"_gtk_reserved3","","",9,null],[12,"_gtk_reserved4","","",9,null],[3,"GtkActionGroupPrivate","","",null,null],[3,"GtkActionPrivate","","",null,null],[3,"GtkActionableInterface","","",null,null],[12,"get_action_name","","",10,null],[12,"set_action_name","","",10,null],[12,"get_action_target_value","","",10,null],[12,"set_action_target_value","","",10,null],[3,"GtkActivatableIface","","",null,null],[12,"update","","",11,null],[12,"sync_action_properties","","",11,null],[3,"GtkAdjustmentClass","","",null,null],[12,"parent_class","","",12,null],[12,"changed","","",12,null],[12,"value_changed","","",12,null],[12,"_gtk_reserved1","","",12,null],[12,"_gtk_reserved2","","",12,null],[12,"_gtk_reserved3","","",12,null],[12,"_gtk_reserved4","","",12,null],[3,"GtkAdjustmentPrivate","","",null,null],[3,"GtkAlignmentClass","","",null,null],[12,"parent_class","","",13,null],[12,"_gtk_reserved1","","",13,null],[12,"_gtk_reserved2","","",13,null],[12,"_gtk_reserved3","","",13,null],[12,"_gtk_reserved4","","",13,null],[3,"GtkAlignmentPrivate","","",null,null],[3,"GtkAppChooserButtonClass","","",null,null],[12,"parent_class","","",14,null],[12,"custom_item_activated","","",14,null],[3,"GtkAppChooserButtonPrivate","","",null,null],[3,"GtkAppChooserDialogClass","","",null,null],[12,"parent_class","","",15,null],[3,"GtkAppChooserDialogPrivate","","",null,null],[3,"GtkAppChooserWidgetClass","","",null,null],[12,"parent_class","","",16,null],[12,"application_selected","","",16,null],[12,"application_activated","","",16,null],[12,"populate_popup","","",16,null],[3,"GtkAppChooserWidgetPrivate","","",null,null],[3,"GtkApplicationClass","","",null,null],[12,"parent_class","","",17,null],[12,"window_added","","",17,null],[12,"window_removed","","",17,null],[3,"GtkApplicationPrivate","","",null,null],[3,"GtkApplicationWindowClass","","",null,null],[12,"parent_class","","",18,null],[3,"GtkApplicationWindowPrivate","","",null,null],[3,"GtkArrowAccessibleClass","","",null,null],[12,"parent_class","","",19,null],[3,"GtkArrowAccessiblePrivate","","",null,null],[3,"GtkArrowClass","","",null,null],[12,"parent_class","","",20,null],[12,"_gtk_reserved1","","",20,null],[12,"_gtk_reserved2","","",20,null],[12,"_gtk_reserved3","","",20,null],[12,"_gtk_reserved4","","",20,null],[3,"GtkArrowPrivate","","",null,null],[3,"GtkAspectFrameClass","","",null,null],[12,"parent_class","","",21,null],[12,"_gtk_reserved1","","",21,null],[12,"_gtk_reserved2","","",21,null],[12,"_gtk_reserved3","","",21,null],[12,"_gtk_reserved4","","",21,null],[3,"GtkAspectFramePrivate","","",null,null],[3,"GtkAssistantClass","","",null,null],[12,"parent_class","","",22,null],[12,"prepare","","",22,null],[12,"apply","","",22,null],[12,"close","","",22,null],[12,"cancel","","",22,null],[12,"_gtk_reserved1","","",22,null],[12,"_gtk_reserved2","","",22,null],[12,"_gtk_reserved3","","",22,null],[12,"_gtk_reserved4","","",22,null],[12,"_gtk_reserved5","","",22,null],[3,"GtkAssistantPrivate","","",null,null],[3,"GtkBinClass","","",null,null],[12,"parent_class","","",23,null],[12,"_gtk_reserved1","","",23,null],[12,"_gtk_reserved2","","",23,null],[12,"_gtk_reserved3","","",23,null],[12,"_gtk_reserved4","","",23,null],[3,"GtkBinPrivate","","",null,null],[3,"GtkBindingArg","","",null,null],[12,"arg_type","","",24,null],[3,"GtkBindingEntry","","",null,null],[12,"keyval","","",25,null],[12,"modifiers","","",25,null],[12,"binding_set","","",25,null],[3,"GtkBindingSet","","",null,null],[12,"set_name","","",26,null],[12,"priority","","",26,null],[12,"widget_path_pspecs","","",26,null],[12,"widget_class_pspecs","","",26,null],[12,"class_branch_pspecs","","",26,null],[12,"entries","","",26,null],[12,"current","","",26,null],[3,"GtkBindingSignal","","",null,null],[12,"next","","",27,null],[12,"signal_name","","",27,null],[12,"n_args","","",27,null],[12,"args","","",27,null],[3,"GtkBooleanCellAccessibleClass","","",null,null],[12,"parent_class","","",28,null],[3,"GtkBooleanCellAccessiblePrivate","","",null,null],[3,"GtkBorder","","",null,null],[12,"left","","",29,null],[12,"right","","",29,null],[12,"top","","",29,null],[12,"bottom","","",29,null],[3,"GtkBoxClass","","",null,null],[12,"parent_class","","",30,null],[12,"_gtk_reserved1","","",30,null],[12,"_gtk_reserved2","","",30,null],[12,"_gtk_reserved3","","",30,null],[12,"_gtk_reserved4","","",30,null],[3,"GtkBoxPrivate","","",null,null],[3,"GtkBuildableIface","","",null,null],[12,"g_iface","","",31,null],[12,"set_name","","",31,null],[12,"get_name","","",31,null],[12,"add_child","","",31,null],[12,"set_buildable_property","","",31,null],[12,"construct_child","","",31,null],[12,"custom_tag_start","","",31,null],[12,"custom_tag_end","","",31,null],[12,"custom_finished","","",31,null],[12,"parser_finished","","",31,null],[12,"get_internal_child","","",31,null],[3,"GtkBuilderClass","","",null,null],[12,"parent_class","","",32,null],[12,"get_type_from_name","","",32,null],[12,"_gtk_reserved1","","",32,null],[12,"_gtk_reserved2","","",32,null],[12,"_gtk_reserved3","","",32,null],[12,"_gtk_reserved4","","",32,null],[12,"_gtk_reserved5","","",32,null],[12,"_gtk_reserved6","","",32,null],[12,"_gtk_reserved7","","",32,null],[12,"_gtk_reserved8","","",32,null],[3,"GtkBuilderPrivate","","",null,null],[3,"GtkButtonAccessibleClass","","",null,null],[12,"parent_class","","",33,null],[3,"GtkButtonAccessiblePrivate","","",null,null],[3,"GtkButtonBoxClass","","",null,null],[12,"parent_class","","",34,null],[12,"_gtk_reserved1","","",34,null],[12,"_gtk_reserved2","","",34,null],[12,"_gtk_reserved3","","",34,null],[12,"_gtk_reserved4","","",34,null],[3,"GtkButtonBoxPrivate","","",null,null],[3,"GtkButtonClass","","",null,null],[12,"parent_class","","",35,null],[12,"pressed","","",35,null],[12,"released","","",35,null],[12,"clicked","","",35,null],[12,"enter","","",35,null],[12,"leave","","",35,null],[12,"activate","","",35,null],[12,"_gtk_reserved1","","",35,null],[12,"_gtk_reserved2","","",35,null],[12,"_gtk_reserved3","","",35,null],[12,"_gtk_reserved4","","",35,null],[3,"GtkButtonPrivate","","",null,null],[3,"GtkCalendarClass","","",null,null],[12,"parent_class","","",36,null],[12,"month_changed","","",36,null],[12,"day_selected","","",36,null],[12,"day_selected_double_click","","",36,null],[12,"prev_month","","",36,null],[12,"next_month","","",36,null],[12,"prev_year","","",36,null],[12,"next_year","","",36,null],[12,"_gtk_reserved1","","",36,null],[12,"_gtk_reserved2","","",36,null],[12,"_gtk_reserved3","","",36,null],[12,"_gtk_reserved4","","",36,null],[3,"GtkCalendarPrivate","","",null,null],[3,"GtkCellAccessibleClass","","",null,null],[12,"parent_class","","",37,null],[12,"update_cache","","",37,null],[3,"GtkCellAccessibleParentIface","","",null,null],[12,"parent","","",38,null],[12,"get_cell_extents","","",38,null],[12,"get_cell_area","","",38,null],[12,"grab_focus","","",38,null],[12,"get_child_index","","",38,null],[12,"get_renderer_state","","",38,null],[12,"expand_collapse","","",38,null],[12,"activate","","",38,null],[12,"edit","","",38,null],[12,"update_relationset","","",38,null],[3,"GtkCellAccessiblePrivate","","",null,null],[3,"GtkCellAreaBoxClass","","",null,null],[12,"_gtk_reserved1","","",39,null],[12,"_gtk_reserved2","","",39,null],[12,"_gtk_reserved3","","",39,null],[12,"_gtk_reserved4","","",39,null],[3,"GtkCellAreaBoxPrivate","","",null,null],[3,"GtkCellAreaClass","","",null,null],[12,"add","","",40,null],[12,"remove","","",40,null],[12,"foreach","","",40,null],[12,"foreach_alloc","","",40,null],[12,"event","","",40,null],[12,"render","","",40,null],[12,"apply_attributes","","",40,null],[12,"create_context","","",40,null],[12,"copy_context","","",40,null],[12,"get_request_mode","","",40,null],[12,"get_preferred_width","","",40,null],[12,"get_preferred_height_for_width","","",40,null],[12,"get_preferred_height","","",40,null],[12,"get_preferred_width_for_height","","",40,null],[12,"set_cell_property","","",40,null],[12,"get_cell_property","","",40,null],[12,"focus","","",40,null],[12,"is_activatable","","",40,null],[12,"activate","","",40,null],[12,"_gtk_reserved1","","",40,null],[12,"_gtk_reserved2","","",40,null],[12,"_gtk_reserved3","","",40,null],[12,"_gtk_reserved4","","",40,null],[12,"_gtk_reserved5","","",40,null],[12,"_gtk_reserved6","","",40,null],[12,"_gtk_reserved7","","",40,null],[12,"_gtk_reserved8","","",40,null],[3,"GtkCellAreaContextClass","","",null,null],[12,"allocate","","",41,null],[12,"reset","","",41,null],[12,"get_preferred_height_for_width","","",41,null],[12,"get_preferred_width_for_height","","",41,null],[12,"_gtk_reserved1","","",41,null],[12,"_gtk_reserved2","","",41,null],[12,"_gtk_reserved3","","",41,null],[12,"_gtk_reserved4","","",41,null],[12,"_gtk_reserved5","","",41,null],[12,"_gtk_reserved6","","",41,null],[3,"GtkCellAreaContextPrivate","","",null,null],[3,"GtkCellAreaPrivate","","",null,null],[3,"GtkCellEditableIface","","",null,null],[12,"editing_done","","",42,null],[12,"remove_widget","","",42,null],[12,"start_editing","","",42,null],[3,"GtkCellLayoutIface","","",null,null],[12,"pack_start","","",43,null],[12,"pack_end","","",43,null],[12,"clear","","",43,null],[12,"add_attribute","","",43,null],[12,"set_cell_data_func","","",43,null],[12,"clear_attributes","","",43,null],[12,"reorder","","",43,null],[12,"get_cells","","",43,null],[12,"get_area","","",43,null],[3,"GtkCellRendererAccelClass","","",null,null],[12,"parent_class","","",44,null],[12,"accel_edited","","",44,null],[12,"accel_cleared","","",44,null],[12,"_gtk_reserved0","","",44,null],[12,"_gtk_reserved1","","",44,null],[12,"_gtk_reserved2","","",44,null],[12,"_gtk_reserved3","","",44,null],[12,"_gtk_reserved4","","",44,null],[3,"GtkCellRendererAccelPrivate","","",null,null],[3,"GtkCellRendererClass","","",null,null],[12,"get_request_mode","","",45,null],[12,"get_preferred_width","","",45,null],[12,"get_preferred_height_for_width","","",45,null],[12,"get_preferred_height","","",45,null],[12,"get_preferred_width_for_height","","",45,null],[12,"get_aligned_area","","",45,null],[12,"get_size","","",45,null],[12,"render","","",45,null],[12,"activate","","",45,null],[12,"start_editing","","",45,null],[12,"editing_canceled","","",45,null],[12,"editing_started","","",45,null],[12,"_gtk_reserved2","","",45,null],[12,"_gtk_reserved3","","",45,null],[12,"_gtk_reserved4","","",45,null],[3,"GtkCellRendererClassPrivate","","",null,null],[3,"GtkCellRendererComboClass","","",null,null],[12,"parent","","",46,null],[12,"_gtk_reserved1","","",46,null],[12,"_gtk_reserved2","","",46,null],[12,"_gtk_reserved3","","",46,null],[12,"_gtk_reserved4","","",46,null],[3,"GtkCellRendererComboPrivate","","",null,null],[3,"GtkCellRendererPixbufClass","","",null,null],[12,"parent_class","","",47,null],[12,"_gtk_reserved1","","",47,null],[12,"_gtk_reserved2","","",47,null],[12,"_gtk_reserved3","","",47,null],[12,"_gtk_reserved4","","",47,null],[3,"GtkCellRendererPixbufPrivate","","",null,null],[3,"GtkCellRendererPrivate","","",null,null],[3,"GtkCellRendererProgressClass","","",null,null],[12,"parent_class","","",48,null],[12,"_gtk_reserved1","","",48,null],[12,"_gtk_reserved2","","",48,null],[12,"_gtk_reserved3","","",48,null],[12,"_gtk_reserved4","","",48,null],[3,"GtkCellRendererProgressPrivate","","",null,null],[3,"GtkCellRendererSpinClass","","",null,null],[12,"parent","","",49,null],[12,"_gtk_reserved1","","",49,null],[12,"_gtk_reserved2","","",49,null],[12,"_gtk_reserved3","","",49,null],[12,"_gtk_reserved4","","",49,null],[3,"GtkCellRendererSpinPrivate","","",null,null],[3,"GtkCellRendererSpinnerClass","","",null,null],[12,"parent_class","","",50,null],[12,"_gtk_reserved1","","",50,null],[12,"_gtk_reserved2","","",50,null],[12,"_gtk_reserved3","","",50,null],[12,"_gtk_reserved4","","",50,null],[3,"GtkCellRendererSpinnerPrivate","","",null,null],[3,"GtkCellRendererTextClass","","",null,null],[12,"parent_class","","",51,null],[12,"edited","","",51,null],[12,"_gtk_reserved1","","",51,null],[12,"_gtk_reserved2","","",51,null],[12,"_gtk_reserved3","","",51,null],[12,"_gtk_reserved4","","",51,null],[3,"GtkCellRendererTextPrivate","","",null,null],[3,"GtkCellRendererToggleClass","","",null,null],[12,"parent_class","","",52,null],[12,"toggled","","",52,null],[12,"_gtk_reserved1","","",52,null],[12,"_gtk_reserved2","","",52,null],[12,"_gtk_reserved3","","",52,null],[12,"_gtk_reserved4","","",52,null],[3,"GtkCellRendererTogglePrivate","","",null,null],[3,"GtkCellViewClass","","",null,null],[12,"parent_class","","",53,null],[12,"_gtk_reserved1","","",53,null],[12,"_gtk_reserved2","","",53,null],[12,"_gtk_reserved3","","",53,null],[12,"_gtk_reserved4","","",53,null],[3,"GtkCellViewPrivate","","",null,null],[3,"GtkCheckButtonClass","","",null,null],[12,"parent_class","","",54,null],[12,"draw_indicator","","",54,null],[12,"_gtk_reserved1","","",54,null],[12,"_gtk_reserved2","","",54,null],[12,"_gtk_reserved3","","",54,null],[12,"_gtk_reserved4","","",54,null],[3,"GtkCheckMenuItemAccessibleClass","","",null,null],[12,"parent_class","","",55,null],[3,"GtkCheckMenuItemAccessiblePrivate","","",null,null],[3,"GtkCheckMenuItemClass","","",null,null],[12,"parent_class","","",56,null],[12,"toggled","","",56,null],[12,"draw_indicator","","",56,null],[12,"_gtk_reserved1","","",56,null],[12,"_gtk_reserved2","","",56,null],[12,"_gtk_reserved3","","",56,null],[12,"_gtk_reserved4","","",56,null],[3,"GtkCheckMenuItemPrivate","","",null,null],[3,"GtkColorButtonClass","","",null,null],[12,"parent_class","","",57,null],[12,"color_set","","",57,null],[12,"_gtk_reserved1","","",57,null],[12,"_gtk_reserved2","","",57,null],[12,"_gtk_reserved3","","",57,null],[12,"_gtk_reserved4","","",57,null],[3,"GtkColorButtonPrivate","","",null,null],[3,"GtkColorChooserDialogClass","","",null,null],[12,"parent_class","","",58,null],[12,"_gtk_reserved1","","",58,null],[12,"_gtk_reserved2","","",58,null],[12,"_gtk_reserved3","","",58,null],[12,"_gtk_reserved4","","",58,null],[3,"GtkColorChooserDialogPrivate","","",null,null],[3,"GtkColorChooserInterface","","",null,null],[12,"base_interface","","",59,null],[12,"get_rgba","","",59,null],[12,"set_rgba","","",59,null],[12,"add_palette","","",59,null],[12,"color_activated","","",59,null],[12,"padding","","",59,null],[3,"GtkColorChooserWidgetClass","","",null,null],[12,"parent_class","","",60,null],[12,"_gtk_reserved1","","",60,null],[12,"_gtk_reserved2","","",60,null],[12,"_gtk_reserved3","","",60,null],[12,"_gtk_reserved4","","",60,null],[12,"_gtk_reserved5","","",60,null],[12,"_gtk_reserved6","","",60,null],[12,"_gtk_reserved7","","",60,null],[12,"_gtk_reserved8","","",60,null],[3,"GtkColorChooserWidgetPrivate","","",null,null],[3,"GtkColorSelectionClass","","",null,null],[12,"parent_class","","",61,null],[12,"color_changed","","",61,null],[12,"_gtk_reserved1","","",61,null],[12,"_gtk_reserved2","","",61,null],[12,"_gtk_reserved3","","",61,null],[12,"_gtk_reserved4","","",61,null],[3,"GtkColorSelectionDialogClass","","",null,null],[12,"parent_class","","",62,null],[12,"_gtk_reserved1","","",62,null],[12,"_gtk_reserved2","","",62,null],[12,"_gtk_reserved3","","",62,null],[12,"_gtk_reserved4","","",62,null],[3,"GtkColorSelectionDialogPrivate","","",null,null],[3,"GtkColorSelectionPrivate","","",null,null],[3,"GtkComboBoxAccessibleClass","","",null,null],[12,"parent_class","","",63,null],[3,"GtkComboBoxAccessiblePrivate","","",null,null],[3,"GtkComboBoxClass","","",null,null],[12,"parent_class","","",64,null],[12,"changed","","",64,null],[12,"format_entry_text","","",64,null],[12,"_gtk_reserved1","","",64,null],[12,"_gtk_reserved2","","",64,null],[12,"_gtk_reserved3","","",64,null],[3,"GtkComboBoxPrivate","","",null,null],[3,"GtkComboBoxTextClass","","",null,null],[12,"parent_class","","",65,null],[12,"_gtk_reserved1","","",65,null],[12,"_gtk_reserved2","","",65,null],[12,"_gtk_reserved3","","",65,null],[12,"_gtk_reserved4","","",65,null],[3,"GtkComboBoxTextPrivate","","",null,null],[3,"GtkContainerAccessibleClass","","",null,null],[12,"parent_class","","",66,null],[12,"add_gtk","","",66,null],[12,"remove_gtk","","",66,null],[3,"GtkContainerAccessiblePrivate","","",null,null],[3,"GtkContainerCellAccessibleClass","","",null,null],[12,"parent_class","","",67,null],[3,"GtkContainerCellAccessiblePrivate","","",null,null],[3,"GtkContainerClass","","",null,null],[12,"parent_class","","",68,null],[12,"add","","",68,null],[12,"remove","","",68,null],[12,"check_resize","","",68,null],[12,"forall","","",68,null],[12,"set_focus_child","","",68,null],[12,"child_type","","",68,null],[12,"composite_name","","",68,null],[12,"set_child_property","","",68,null],[12,"get_child_property","","",68,null],[12,"get_path_for_child","","",68,null],[3,"GtkContainerPrivate","","",null,null],[3,"GtkCssProviderClass","","",null,null],[12,"parent_class","","",69,null],[12,"parsing_error","","",69,null],[12,"_gtk_reserved2","","",69,null],[12,"_gtk_reserved3","","",69,null],[12,"_gtk_reserved4","","",69,null],[3,"GtkCssProviderPrivate","","",null,null],[3,"GtkCssSection","","",null,null],[3,"GtkDialogClass","","",null,null],[12,"parent_class","","",70,null],[12,"response","","",70,null],[12,"close","","",70,null],[12,"_gtk_reserved1","","",70,null],[12,"_gtk_reserved2","","",70,null],[12,"_gtk_reserved3","","",70,null],[12,"_gtk_reserved4","","",70,null],[3,"GtkDialogPrivate","","",null,null],[3,"GtkDrawingAreaClass","","",null,null],[12,"parent_class","","",71,null],[12,"_gtk_reserved1","","",71,null],[12,"_gtk_reserved2","","",71,null],[12,"_gtk_reserved3","","",71,null],[12,"_gtk_reserved4","","",71,null],[3,"GtkEditableInterface","","",null,null],[12,"base_iface","","",72,null],[12,"insert_text","","",72,null],[12,"delete_text","","",72,null],[12,"changed","","",72,null],[12,"do_insert_text","","",72,null],[12,"do_delete_text","","",72,null],[12,"get_chars","","",72,null],[12,"set_selection_bounds","","",72,null],[12,"get_selection_bounds","","",72,null],[12,"set_position","","",72,null],[12,"get_position","","",72,null],[3,"GtkEntryAccessibleClass","","",null,null],[12,"parent_class","","",73,null],[3,"GtkEntryAccessiblePrivate","","",null,null],[3,"GtkEntryBufferClass","","",null,null],[12,"parent_class","","",74,null],[12,"inserted_text","","",74,null],[12,"deleted_text","","",74,null],[12,"get_text","","",74,null],[12,"get_length","","",74,null],[12,"insert_text","","",74,null],[12,"delete_text","","",74,null],[12,"_gtk_reserved1","","",74,null],[12,"_gtk_reserved2","","",74,null],[12,"_gtk_reserved3","","",74,null],[12,"_gtk_reserved4","","",74,null],[12,"_gtk_reserved5","","",74,null],[12,"_gtk_reserved6","","",74,null],[12,"_gtk_reserved7","","",74,null],[12,"_gtk_reserved8","","",74,null],[3,"GtkEntryBufferPrivate","","",null,null],[3,"GtkEntryClass","","",null,null],[12,"parent_class","","",75,null],[12,"populate_popup","","",75,null],[12,"activate","","",75,null],[12,"move_cursor","","",75,null],[12,"insert_at_cursor","","",75,null],[12,"delete_from_cursor","","",75,null],[12,"backspace","","",75,null],[12,"cut_clipboard","","",75,null],[12,"copy_clipboard","","",75,null],[12,"paste_clipboard","","",75,null],[12,"toggle_overwrite","","",75,null],[12,"get_text_area_size","","",75,null],[12,"get_frame_size","","",75,null],[12,"_gtk_reserved1","","",75,null],[12,"_gtk_reserved2","","",75,null],[12,"_gtk_reserved3","","",75,null],[12,"_gtk_reserved4","","",75,null],[12,"_gtk_reserved5","","",75,null],[12,"_gtk_reserved6","","",75,null],[12,"_gtk_reserved7","","",75,null],[3,"GtkEntryCompletionClass","","",null,null],[12,"parent_class","","",76,null],[12,"match_selected","","",76,null],[12,"action_activated","","",76,null],[12,"insert_prefix","","",76,null],[12,"cursor_on_match","","",76,null],[12,"no_matches","","",76,null],[12,"_gtk_reserved0","","",76,null],[12,"_gtk_reserved1","","",76,null],[12,"_gtk_reserved2","","",76,null],[3,"GtkEntryCompletionPrivate","","",null,null],[3,"GtkEntryPrivate","","",null,null],[3,"GtkEventBoxClass","","",null,null],[12,"parent_class","","",77,null],[12,"_gtk_reserved1","","",77,null],[12,"_gtk_reserved2","","",77,null],[12,"_gtk_reserved3","","",77,null],[12,"_gtk_reserved4","","",77,null],[3,"GtkEventBoxPrivate","","",null,null],[3,"GtkEventControllerClass","","",null,null],[3,"GtkExpanderAccessibleClass","","",null,null],[12,"parent_class","","",78,null],[3,"GtkExpanderAccessiblePrivate","","",null,null],[3,"GtkExpanderClass","","",null,null],[12,"parent_class","","",79,null],[12,"activate","","",79,null],[12,"_gtk_reserved1","","",79,null],[12,"_gtk_reserved2","","",79,null],[12,"_gtk_reserved3","","",79,null],[12,"_gtk_reserved4","","",79,null],[3,"GtkExpanderPrivate","","",null,null],[3,"GtkFileChooserButtonClass","","",null,null],[12,"parent_class","","",80,null],[12,"file_set","","",80,null],[3,"GtkFileChooserButtonPrivate","","",null,null],[3,"GtkFileChooserDialogClass","","",null,null],[12,"parent_class","","",81,null],[12,"_gtk_reserved1","","",81,null],[12,"_gtk_reserved2","","",81,null],[12,"_gtk_reserved3","","",81,null],[12,"_gtk_reserved4","","",81,null],[3,"GtkFileChooserDialogPrivate","","",null,null],[3,"GtkFileChooserWidgetClass","","",null,null],[12,"parent_class","","",82,null],[12,"_gtk_reserved1","","",82,null],[12,"_gtk_reserved2","","",82,null],[12,"_gtk_reserved3","","",82,null],[12,"_gtk_reserved4","","",82,null],[3,"GtkFileChooserWidgetPrivate","","",null,null],[3,"GtkFileFilterInfo","","",null,null],[12,"contains","","",83,null],[12,"filename","","",83,null],[12,"uri","","",83,null],[12,"display_name","","",83,null],[12,"mime_type","","",83,null],[3,"GtkFixedChild","","",null,null],[12,"widget","","",84,null],[12,"x","","",84,null],[12,"y","","",84,null],[3,"GtkFixedClass","","",null,null],[12,"parent_class","","",85,null],[12,"_gtk_reserved1","","",85,null],[12,"_gtk_reserved2","","",85,null],[12,"_gtk_reserved3","","",85,null],[12,"_gtk_reserved4","","",85,null],[3,"GtkFixedPrivate","","",null,null],[3,"GtkFlowBoxAccessibleClass","","",null,null],[12,"parent_class","","",86,null],[3,"GtkFlowBoxAccessiblePrivate","","",null,null],[3,"GtkFlowBoxChildAccessibleClass","","",null,null],[12,"parent_class","","",87,null],[3,"GtkFlowBoxChildClass","","",null,null],[12,"parent_class","","",88,null],[12,"activate","","",88,null],[12,"_gtk_reserved1","","",88,null],[12,"_gtk_reserved2","","",88,null],[3,"GtkFlowBoxClass","","",null,null],[12,"parent_class","","",89,null],[12,"child_activated","","",89,null],[12,"selected_children_changed","","",89,null],[12,"activate_cursor_child","","",89,null],[12,"toggle_cursor_child","","",89,null],[12,"move_cursor","","",89,null],[12,"select_all","","",89,null],[12,"unselect_all","","",89,null],[12,"_gtk_reserved1","","",89,null],[12,"_gtk_reserved2","","",89,null],[12,"_gtk_reserved3","","",89,null],[12,"_gtk_reserved4","","",89,null],[12,"_gtk_reserved5","","",89,null],[12,"_gtk_reserved6","","",89,null],[3,"GtkFontButtonClass","","",null,null],[12,"parent_class","","",90,null],[12,"font_set","","",90,null],[12,"_gtk_reserved1","","",90,null],[12,"_gtk_reserved2","","",90,null],[12,"_gtk_reserved3","","",90,null],[12,"_gtk_reserved4","","",90,null],[3,"GtkFontButtonPrivate","","",null,null],[3,"GtkFontChooserDialogClass","","",null,null],[12,"parent_class","","",91,null],[12,"_gtk_reserved1","","",91,null],[12,"_gtk_reserved2","","",91,null],[12,"_gtk_reserved3","","",91,null],[12,"_gtk_reserved4","","",91,null],[3,"GtkFontChooserDialogPrivate","","",null,null],[3,"GtkFontChooserIface","","",null,null],[12,"base_iface","","",92,null],[12,"get_font_family","","",92,null],[12,"get_font_face","","",92,null],[12,"get_font_size","","",92,null],[12,"set_filter_func","","",92,null],[12,"font_activated","","",92,null],[12,"padding","","",92,null],[3,"GtkFontChooserWidgetClass","","",null,null],[12,"parent_class","","",93,null],[12,"_gtk_reserved1","","",93,null],[12,"_gtk_reserved2","","",93,null],[12,"_gtk_reserved3","","",93,null],[12,"_gtk_reserved4","","",93,null],[12,"_gtk_reserved5","","",93,null],[12,"_gtk_reserved6","","",93,null],[12,"_gtk_reserved7","","",93,null],[12,"_gtk_reserved8","","",93,null],[3,"GtkFontChooserWidgetPrivate","","",null,null],[3,"GtkFontSelectionClass","","",null,null],[12,"parent_class","","",94,null],[12,"_gtk_reserved1","","",94,null],[12,"_gtk_reserved2","","",94,null],[12,"_gtk_reserved3","","",94,null],[12,"_gtk_reserved4","","",94,null],[3,"GtkFontSelectionDialogClass","","",null,null],[12,"parent_class","","",95,null],[12,"_gtk_reserved1","","",95,null],[12,"_gtk_reserved2","","",95,null],[12,"_gtk_reserved3","","",95,null],[12,"_gtk_reserved4","","",95,null],[3,"GtkFontSelectionDialogPrivate","","",null,null],[3,"GtkFontSelectionPrivate","","",null,null],[3,"GtkFrameAccessibleClass","","",null,null],[12,"parent_class","","",96,null],[3,"GtkFrameAccessiblePrivate","","",null,null],[3,"GtkFrameClass","","",null,null],[12,"parent_class","","",97,null],[12,"compute_child_allocation","","",97,null],[12,"_gtk_reserved1","","",97,null],[12,"_gtk_reserved2","","",97,null],[12,"_gtk_reserved3","","",97,null],[12,"_gtk_reserved4","","",97,null],[3,"GtkFramePrivate","","",null,null],[3,"GtkGLAreaClass","","",null,null],[12,"render","","",98,null],[12,"resize","","",98,null],[12,"create_context","","",98,null],[3,"GtkGestureClass","","",null,null],[3,"GtkGestureDragClass","","",null,null],[3,"GtkGestureLongPressClass","","",null,null],[3,"GtkGestureMultiPressClass","","",null,null],[3,"GtkGesturePanClass","","",null,null],[3,"GtkGestureRotateClass","","",null,null],[3,"GtkGestureSingleClass","","",null,null],[3,"GtkGestureSwipeClass","","",null,null],[3,"GtkGestureZoomClass","","",null,null],[3,"GtkGradient","","",null,null],[3,"GtkGridClass","","",null,null],[12,"parent_class","","",99,null],[12,"_gtk_reserved1","","",99,null],[12,"_gtk_reserved2","","",99,null],[12,"_gtk_reserved3","","",99,null],[12,"_gtk_reserved4","","",99,null],[12,"_gtk_reserved5","","",99,null],[12,"_gtk_reserved6","","",99,null],[12,"_gtk_reserved7","","",99,null],[12,"_gtk_reserved8","","",99,null],[3,"GtkGridPrivate","","",null,null],[3,"GtkHBoxClass","","",null,null],[12,"parent_class","","",100,null],[3,"GtkHButtonBoxClass","","",null,null],[12,"parent_class","","",101,null],[3,"GtkHPanedClass","","",null,null],[12,"parent_class","","",102,null],[3,"GtkHSVClass","","",null,null],[12,"parent_class","","",103,null],[12,"changed","","",103,null],[12,"move_","","",103,null],[12,"_gtk_reserved1","","",103,null],[12,"_gtk_reserved2","","",103,null],[12,"_gtk_reserved3","","",103,null],[12,"_gtk_reserved4","","",103,null],[3,"GtkHSVPrivate","","",null,null],[3,"GtkHScaleClass","","",null,null],[12,"parent_class","","",104,null],[3,"GtkHScrollbarClass","","",null,null],[12,"parent_class","","",105,null],[3,"GtkHSeparatorClass","","",null,null],[12,"parent_class","","",106,null],[3,"GtkHandleBoxClass","","",null,null],[12,"parent_class","","",107,null],[12,"child_attached","","",107,null],[12,"child_detached","","",107,null],[12,"_gtk_reserved1","","",107,null],[12,"_gtk_reserved2","","",107,null],[12,"_gtk_reserved3","","",107,null],[12,"_gtk_reserved4","","",107,null],[3,"GtkHandleBoxPrivate","","",null,null],[3,"GtkHeaderBarClass","","",null,null],[12,"parent_class","","",108,null],[12,"_gtk_reserved1","","",108,null],[12,"_gtk_reserved2","","",108,null],[12,"_gtk_reserved3","","",108,null],[12,"_gtk_reserved4","","",108,null],[3,"GtkHeaderBarPrivate","","",null,null],[3,"GtkIMContextClass","","",null,null],[12,"preedit_start","","",109,null],[12,"preedit_end","","",109,null],[12,"preedit_changed","","",109,null],[12,"commit","","",109,null],[12,"retrieve_surrounding","","",109,null],[12,"delete_surrounding","","",109,null],[12,"set_client_window","","",109,null],[12,"get_preedit_string","","",109,null],[12,"filter_keypress","","",109,null],[12,"focus_in","","",109,null],[12,"focus_out","","",109,null],[12,"reset","","",109,null],[12,"set_cursor_location","","",109,null],[12,"set_use_preedit","","",109,null],[12,"set_surrounding","","",109,null],[12,"get_surrounding","","",109,null],[12,"_gtk_reserved1","","",109,null],[12,"_gtk_reserved2","","",109,null],[12,"_gtk_reserved3","","",109,null],[12,"_gtk_reserved4","","",109,null],[12,"_gtk_reserved5","","",109,null],[12,"_gtk_reserved6","","",109,null],[3,"GtkIMContextInfo","","",null,null],[12,"context_id","","",110,null],[12,"context_name","","",110,null],[12,"domain","","",110,null],[12,"domain_dirname","","",110,null],[12,"default_locales","","",110,null],[3,"GtkIMContextSimpleClass","","",null,null],[12,"parent_class","","",111,null],[3,"GtkIMContextSimplePrivate","","",null,null],[3,"GtkIMMulticontextClass","","",null,null],[12,"parent_class","","",112,null],[12,"_gtk_reserved1","","",112,null],[12,"_gtk_reserved2","","",112,null],[12,"_gtk_reserved3","","",112,null],[12,"_gtk_reserved4","","",112,null],[3,"GtkIMMulticontextPrivate","","",null,null],[3,"GtkIconFactoryClass","","",null,null],[12,"parent_class","","",113,null],[12,"_gtk_reserved1","","",113,null],[12,"_gtk_reserved2","","",113,null],[12,"_gtk_reserved3","","",113,null],[12,"_gtk_reserved4","","",113,null],[3,"GtkIconFactoryPrivate","","",null,null],[3,"GtkIconInfoClass","","",null,null],[3,"GtkIconSet","","",null,null],[3,"GtkIconSource","","",null,null],[3,"GtkIconThemeClass","","",null,null],[12,"parent_class","","",114,null],[12,"changed","","",114,null],[12,"_gtk_reserved1","","",114,null],[12,"_gtk_reserved2","","",114,null],[12,"_gtk_reserved3","","",114,null],[12,"_gtk_reserved4","","",114,null],[3,"GtkIconThemePrivate","","",null,null],[3,"GtkIconViewAccessibleClass","","",null,null],[12,"parent_class","","",115,null],[3,"GtkIconViewAccessiblePrivate","","",null,null],[3,"GtkIconViewClass","","",null,null],[12,"parent_class","","",116,null],[12,"item_activated","","",116,null],[12,"selection_changed","","",116,null],[12,"select_all","","",116,null],[12,"unselect_all","","",116,null],[12,"select_cursor_item","","",116,null],[12,"toggle_cursor_item","","",116,null],[12,"move_cursor","","",116,null],[12,"activate_cursor_item","","",116,null],[12,"_gtk_reserved1","","",116,null],[12,"_gtk_reserved2","","",116,null],[12,"_gtk_reserved3","","",116,null],[12,"_gtk_reserved4","","",116,null],[3,"GtkIconViewPrivate","","",null,null],[3,"GtkImageAccessibleClass","","",null,null],[12,"parent_class","","",117,null],[3,"GtkImageAccessiblePrivate","","",null,null],[3,"GtkImageCellAccessibleClass","","",null,null],[12,"parent_class","","",118,null],[3,"GtkImageCellAccessiblePrivate","","",null,null],[3,"GtkImageClass","","",null,null],[12,"parent_class","","",119,null],[12,"_gtk_reserved1","","",119,null],[12,"_gtk_reserved2","","",119,null],[12,"_gtk_reserved3","","",119,null],[12,"_gtk_reserved4","","",119,null],[3,"GtkImageMenuItemClass","","",null,null],[12,"parent_class","","",120,null],[12,"_gtk_reserved1","","",120,null],[12,"_gtk_reserved2","","",120,null],[12,"_gtk_reserved3","","",120,null],[12,"_gtk_reserved4","","",120,null],[3,"GtkImageMenuItemPrivate","","",null,null],[3,"GtkImagePrivate","","",null,null],[3,"GtkInfoBarClass","","",null,null],[12,"parent_class","","",121,null],[12,"response","","",121,null],[12,"close","","",121,null],[12,"_gtk_reserved1","","",121,null],[12,"_gtk_reserved2","","",121,null],[12,"_gtk_reserved3","","",121,null],[12,"_gtk_reserved4","","",121,null],[3,"GtkInfoBarPrivate","","",null,null],[3,"GtkInvisibleClass","","",null,null],[12,"parent_class","","",122,null],[12,"_gtk_reserved1","","",122,null],[12,"_gtk_reserved2","","",122,null],[12,"_gtk_reserved3","","",122,null],[12,"_gtk_reserved4","","",122,null],[3,"GtkInvisiblePrivate","","",null,null],[3,"GtkLabelAccessibleClass","","",null,null],[12,"parent_class","","",123,null],[3,"GtkLabelAccessiblePrivate","","",null,null],[3,"GtkLabelClass","","",null,null],[12,"parent_class","","",124,null],[12,"move_cursor","","",124,null],[12,"copy_clipboard","","",124,null],[12,"populate_popup","","",124,null],[12,"activate_link","","",124,null],[12,"_gtk_reserved1","","",124,null],[12,"_gtk_reserved2","","",124,null],[12,"_gtk_reserved3","","",124,null],[12,"_gtk_reserved4","","",124,null],[12,"_gtk_reserved5","","",124,null],[12,"_gtk_reserved6","","",124,null],[12,"_gtk_reserved7","","",124,null],[12,"_gtk_reserved8","","",124,null],[3,"GtkLabelPrivate","","",null,null],[3,"GtkLabelSelectionInfo","","",null,null],[3,"GtkLayoutClass","","",null,null],[12,"parent_class","","",125,null],[12,"_gtk_reserved1","","",125,null],[12,"_gtk_reserved2","","",125,null],[12,"_gtk_reserved3","","",125,null],[12,"_gtk_reserved4","","",125,null],[3,"GtkLayoutPrivate","","",null,null],[3,"GtkLevelBarAccessibleClass","","",null,null],[12,"parent_class","","",126,null],[3,"GtkLevelBarAccessiblePrivate","","",null,null],[3,"GtkLevelBarClass","","",null,null],[12,"offset_changed","","",127,null],[3,"GtkLevelBarPrivate","","",null,null],[3,"GtkLinkButtonAccessibleClass","","",null,null],[12,"parent_class","","",128,null],[3,"GtkLinkButtonAccessiblePrivate","","",null,null],[3,"GtkLinkButtonClass","","",null,null],[12,"activate_link","","",129,null],[12,"_gtk_padding1","","",129,null],[12,"_gtk_padding2","","",129,null],[12,"_gtk_padding3","","",129,null],[12,"_gtk_padding4","","",129,null],[3,"GtkLinkButtonPrivate","","",null,null],[3,"GtkListBoxAccessibleClass","","",null,null],[12,"parent_class","","",130,null],[3,"GtkListBoxAccessiblePrivate","","",null,null],[3,"GtkListBoxClass","","",null,null],[12,"parent_class","","",131,null],[12,"row_selected","","",131,null],[12,"row_activated","","",131,null],[12,"activate_cursor_row","","",131,null],[12,"toggle_cursor_row","","",131,null],[12,"move_cursor","","",131,null],[12,"selected_rows_changed","","",131,null],[12,"select_all","","",131,null],[12,"unselect_all","","",131,null],[12,"_gtk_reserved1","","",131,null],[12,"_gtk_reserved2","","",131,null],[12,"_gtk_reserved3","","",131,null],[3,"GtkListBoxRowAccessibleClass","","",null,null],[12,"parent_class","","",132,null],[3,"GtkListBoxRowClass","","",null,null],[12,"parent_class","","",133,null],[12,"activate","","",133,null],[12,"_gtk_reserved1","","",133,null],[12,"_gtk_reserved2","","",133,null],[3,"GtkListStoreClass","","",null,null],[12,"parent_class","","",134,null],[12,"_gtk_reserved1","","",134,null],[12,"_gtk_reserved2","","",134,null],[12,"_gtk_reserved3","","",134,null],[12,"_gtk_reserved4","","",134,null],[3,"GtkListStorePrivate","","",null,null],[3,"GtkLockButtonAccessibleClass","","",null,null],[12,"parent_class","","",135,null],[3,"GtkLockButtonAccessiblePrivate","","",null,null],[3,"GtkLockButtonClass","","",null,null],[12,"parent_class","","",136,null],[12,"reserved0","","",136,null],[12,"reserved1","","",136,null],[12,"reserved2","","",136,null],[12,"reserved3","","",136,null],[12,"reserved4","","",136,null],[12,"reserved5","","",136,null],[12,"reserved6","","",136,null],[12,"reserved7","","",136,null],[3,"GtkLockButtonPrivate","","",null,null],[3,"GtkMenuAccessibleClass","","",null,null],[12,"parent_class","","",137,null],[3,"GtkMenuAccessiblePrivate","","",null,null],[3,"GtkMenuBarClass","","",null,null],[12,"parent_class","","",138,null],[12,"_gtk_reserved1","","",138,null],[12,"_gtk_reserved2","","",138,null],[12,"_gtk_reserved3","","",138,null],[12,"_gtk_reserved4","","",138,null],[3,"GtkMenuBarPrivate","","",null,null],[3,"GtkMenuButtonAccessibleClass","","",null,null],[12,"parent_class","","",139,null],[3,"GtkMenuButtonAccessiblePrivate","","",null,null],[3,"GtkMenuButtonClass","","",null,null],[12,"parent_class","","",140,null],[12,"_gtk_reserved1","","",140,null],[12,"_gtk_reserved2","","",140,null],[12,"_gtk_reserved3","","",140,null],[12,"_gtk_reserved4","","",140,null],[3,"GtkMenuButtonPrivate","","",null,null],[3,"GtkMenuClass","","",null,null],[12,"parent_class","","",141,null],[12,"_gtk_reserved1","","",141,null],[12,"_gtk_reserved2","","",141,null],[12,"_gtk_reserved3","","",141,null],[12,"_gtk_reserved4","","",141,null],[3,"GtkMenuItemAccessibleClass","","",null,null],[12,"parent_class","","",142,null],[3,"GtkMenuItemAccessiblePrivate","","",null,null],[3,"GtkMenuItemClass","","",null,null],[12,"parent_class","","",143,null],[3,"GtkMenuItemPrivate","","",null,null],[3,"GtkMenuPrivate","","",null,null],[3,"GtkMenuShellAccessibleClass","","",null,null],[12,"parent_class","","",144,null],[3,"GtkMenuShellAccessiblePrivate","","",null,null],[3,"GtkMenuShellClass","","",null,null],[12,"parent_class","","",145,null],[3,"GtkMenuShellPrivate","","",null,null],[3,"GtkMenuToolButtonClass","","",null,null],[12,"parent_class","","",146,null],[12,"show_menu","","",146,null],[12,"_gtk_reserved1","","",146,null],[12,"_gtk_reserved2","","",146,null],[12,"_gtk_reserved3","","",146,null],[12,"_gtk_reserved4","","",146,null],[3,"GtkMenuToolButtonPrivate","","",null,null],[3,"GtkMessageDialogClass","","",null,null],[12,"parent_class","","",147,null],[12,"_gtk_reserved1","","",147,null],[12,"_gtk_reserved2","","",147,null],[12,"_gtk_reserved3","","",147,null],[12,"_gtk_reserved4","","",147,null],[3,"GtkMessageDialogPrivate","","",null,null],[3,"GtkMiscClass","","",null,null],[12,"parent_class","","",148,null],[12,"_gtk_reserved1","","",148,null],[12,"_gtk_reserved2","","",148,null],[12,"_gtk_reserved3","","",148,null],[12,"_gtk_reserved4","","",148,null],[3,"GtkMiscPrivate","","",null,null],[3,"GtkMountOperationClass","","",null,null],[12,"parent_class","","",149,null],[12,"_gtk_reserved1","","",149,null],[12,"_gtk_reserved2","","",149,null],[12,"_gtk_reserved3","","",149,null],[12,"_gtk_reserved4","","",149,null],[3,"GtkMountOperationPrivate","","",null,null],[3,"GtkNotebookAccessibleClass","","",null,null],[12,"parent_class","","",150,null],[3,"GtkNotebookAccessiblePrivate","","",null,null],[3,"GtkNotebookClass","","",null,null],[12,"parent_class","","",151,null],[12,"switch_page","","",151,null],[12,"select_page","","",151,null],[12,"focus_tab","","",151,null],[12,"change_current_page","","",151,null],[12,"move_focus_out","","",151,null],[12,"reorder_tab","","",151,null],[12,"insert_page","","",151,null],[12,"create_window","","",151,null],[12,"page_reordered","","",151,null],[12,"page_removed","","",151,null],[12,"page_added","","",151,null],[12,"_gtk_reserved1","","",151,null],[12,"_gtk_reserved2","","",151,null],[12,"_gtk_reserved3","","",151,null],[12,"_gtk_reserved4","","",151,null],[12,"_gtk_reserved5","","",151,null],[12,"_gtk_reserved6","","",151,null],[12,"_gtk_reserved7","","",151,null],[12,"_gtk_reserved8","","",151,null],[3,"GtkNotebookPageAccessibleClass","","",null,null],[12,"parent_class","","",152,null],[3,"GtkNotebookPageAccessiblePrivate","","",null,null],[3,"GtkNotebookPrivate","","",null,null],[3,"GtkNumerableIconClass","","",null,null],[12,"parent_class","","",153,null],[12,"padding","","",153,null],[3,"GtkNumerableIconPrivate","","",null,null],[3,"GtkOffscreenWindowClass","","",null,null],[12,"parent_class","","",154,null],[12,"_gtk_reserved1","","",154,null],[12,"_gtk_reserved2","","",154,null],[12,"_gtk_reserved3","","",154,null],[12,"_gtk_reserved4","","",154,null],[3,"GtkOrientableIface","","",null,null],[12,"base_iface","","",155,null],[3,"GtkOverlayClass","","",null,null],[12,"parent_class","","",156,null],[12,"get_child_position","","",156,null],[12,"_gtk_reserved1","","",156,null],[12,"_gtk_reserved2","","",156,null],[12,"_gtk_reserved3","","",156,null],[12,"_gtk_reserved4","","",156,null],[12,"_gtk_reserved5","","",156,null],[12,"_gtk_reserved6","","",156,null],[12,"_gtk_reserved7","","",156,null],[12,"_gtk_reserved8","","",156,null],[3,"GtkOverlayPrivate","","",null,null],[3,"GtkPageRange","","",null,null],[12,"start","","",157,null],[12,"end","","",157,null],[3,"GtkPanedAccessibleClass","","",null,null],[12,"parent_class","","",158,null],[3,"GtkPanedAccessiblePrivate","","",null,null],[3,"GtkPanedClass","","",null,null],[12,"parent_class","","",159,null],[12,"cycle_child_focus","","",159,null],[12,"toggle_handle_focus","","",159,null],[12,"move_handle","","",159,null],[12,"cycle_handle_focus","","",159,null],[12,"accept_position","","",159,null],[12,"cancel_position","","",159,null],[12,"_gtk_reserved1","","",159,null],[12,"_gtk_reserved2","","",159,null],[12,"_gtk_reserved3","","",159,null],[12,"_gtk_reserved4","","",159,null],[3,"GtkPanedPrivate","","",null,null],[3,"GtkPaperSize","","",null,null],[3,"GtkPlacesSidebarClass","","",null,null],[3,"GtkPlugClass","","",null,null],[12,"parent_class","","",160,null],[12,"embedded","","",160,null],[12,"_gtk_reserved1","","",160,null],[12,"_gtk_reserved2","","",160,null],[12,"_gtk_reserved3","","",160,null],[12,"_gtk_reserved4","","",160,null],[3,"GtkPlugPrivate","","",null,null],[3,"GtkPopoverAccessibleClass","","",null,null],[12,"parent_class","","",161,null],[3,"GtkPopoverClass","","",null,null],[12,"parent_class","","",162,null],[12,"closed","","",162,null],[3,"GtkPopoverMenuClass","","",null,null],[12,"parent_class","","",163,null],[3,"GtkPopoverPrivate","","",null,null],[3,"GtkPrintOperationClass","","",null,null],[12,"parent_class","","",164,null],[12,"done","","",164,null],[12,"begin_print","","",164,null],[12,"paginate","","",164,null],[12,"request_page_setup","","",164,null],[12,"draw_page","","",164,null],[12,"end_print","","",164,null],[12,"status_changed","","",164,null],[12,"create_custom_widget","","",164,null],[12,"custom_widget_apply","","",164,null],[12,"preview","","",164,null],[12,"update_custom_widget","","",164,null],[12,"_gtk_reserved1","","",164,null],[12,"_gtk_reserved2","","",164,null],[12,"_gtk_reserved3","","",164,null],[12,"_gtk_reserved4","","",164,null],[12,"_gtk_reserved5","","",164,null],[12,"_gtk_reserved6","","",164,null],[12,"_gtk_reserved7","","",164,null],[12,"_gtk_reserved8","","",164,null],[3,"GtkPrintOperationPreviewIface","","",null,null],[12,"g_iface","","",165,null],[12,"ready","","",165,null],[12,"got_page_size","","",165,null],[12,"render_page","","",165,null],[12,"is_selected","","",165,null],[12,"end_preview","","",165,null],[12,"_gtk_reserved1","","",165,null],[12,"_gtk_reserved2","","",165,null],[12,"_gtk_reserved3","","",165,null],[12,"_gtk_reserved4","","",165,null],[12,"_gtk_reserved5","","",165,null],[12,"_gtk_reserved6","","",165,null],[12,"_gtk_reserved7","","",165,null],[12,"_gtk_reserved8","","",165,null],[3,"GtkPrintOperationPrivate","","",null,null],[3,"GtkProgressBarAccessibleClass","","",null,null],[12,"parent_class","","",166,null],[3,"GtkProgressBarAccessiblePrivate","","",null,null],[3,"GtkProgressBarClass","","",null,null],[12,"parent_class","","",167,null],[12,"_gtk_reserved1","","",167,null],[12,"_gtk_reserved2","","",167,null],[12,"_gtk_reserved3","","",167,null],[12,"_gtk_reserved4","","",167,null],[3,"GtkProgressBarPrivate","","",null,null],[3,"GtkRadioActionClass","","",null,null],[12,"parent_class","","",168,null],[12,"changed","","",168,null],[12,"_gtk_reserved1","","",168,null],[12,"_gtk_reserved2","","",168,null],[12,"_gtk_reserved3","","",168,null],[12,"_gtk_reserved4","","",168,null],[3,"GtkRadioActionEntry","","",null,null],[12,"name","","",169,null],[12,"stock_id","","",169,null],[12,"label","","",169,null],[12,"accelerator","","",169,null],[12,"tooltip","","",169,null],[12,"value","","",169,null],[3,"GtkRadioActionPrivate","","",null,null],[3,"GtkRadioButtonAccessibleClass","","",null,null],[12,"parent_class","","",170,null],[3,"GtkRadioButtonAccessiblePrivate","","",null,null],[3,"GtkRadioButtonClass","","",null,null],[12,"parent_class","","",171,null],[12,"group_changed","","",171,null],[12,"_gtk_reserved1","","",171,null],[12,"_gtk_reserved2","","",171,null],[12,"_gtk_reserved3","","",171,null],[12,"_gtk_reserved4","","",171,null],[3,"GtkRadioButtonPrivate","","",null,null],[3,"GtkRadioMenuItemAccessibleClass","","",null,null],[12,"parent_class","","",172,null],[3,"GtkRadioMenuItemAccessiblePrivate","","",null,null],[3,"GtkRadioMenuItemClass","","",null,null],[12,"parent_class","","",173,null],[12,"group_changed","","",173,null],[12,"_gtk_reserved1","","",173,null],[12,"_gtk_reserved2","","",173,null],[12,"_gtk_reserved3","","",173,null],[12,"_gtk_reserved4","","",173,null],[3,"GtkRadioMenuItemPrivate","","",null,null],[3,"GtkRadioToolButtonClass","","",null,null],[12,"parent_class","","",174,null],[12,"_gtk_reserved1","","",174,null],[12,"_gtk_reserved2","","",174,null],[12,"_gtk_reserved3","","",174,null],[12,"_gtk_reserved4","","",174,null],[3,"GtkRangeAccessibleClass","","",null,null],[12,"parent_class","","",175,null],[3,"GtkRangeAccessiblePrivate","","",null,null],[3,"GtkRangeClass","","",null,null],[12,"parent_class","","",176,null],[12,"slider_detail","","",176,null],[12,"stepper_detail","","",176,null],[12,"value_changed","","",176,null],[12,"adjust_bounds","","",176,null],[12,"move_slider","","",176,null],[12,"get_range_border","","",176,null],[12,"change_value","","",176,null],[12,"_gtk_reserved1","","",176,null],[12,"_gtk_reserved2","","",176,null],[12,"_gtk_reserved3","","",176,null],[12,"_gtk_reserved4","","",176,null],[3,"GtkRangePrivate","","",null,null],[3,"GtkRcContext","","",null,null],[3,"GtkRcProperty","","",null,null],[12,"type_name","","",177,null],[12,"property_name","","",177,null],[12,"origin","","",177,null],[12,"value","","",177,null],[3,"GtkRcStyleClass","","",null,null],[12,"parent_class","","",178,null],[12,"create_rc_style","","",178,null],[12,"parse","","",178,null],[12,"merge","","",178,null],[12,"create_style","","",178,null],[12,"_gtk_reserved1","","",178,null],[12,"_gtk_reserved2","","",178,null],[12,"_gtk_reserved3","","",178,null],[12,"_gtk_reserved4","","",178,null],[3,"GtkRecentActionClass","","",null,null],[12,"parent_class","","",179,null],[12,"_gtk_reserved1","","",179,null],[12,"_gtk_reserved2","","",179,null],[12,"_gtk_reserved3","","",179,null],[12,"_gtk_reserved4","","",179,null],[3,"GtkRecentActionPrivate","","",null,null],[3,"GtkRecentChooserDialogClass","","",null,null],[12,"parent_class","","",180,null],[12,"_gtk_reserved1","","",180,null],[12,"_gtk_reserved2","","",180,null],[12,"_gtk_reserved3","","",180,null],[12,"_gtk_reserved4","","",180,null],[3,"GtkRecentChooserDialogPrivate","","",null,null],[3,"GtkRecentChooserIface","","",null,null],[12,"set_current_uri","","",181,null],[12,"get_current_uri","","",181,null],[12,"select_uri","","",181,null],[12,"unselect_uri","","",181,null],[12,"select_all","","",181,null],[12,"unselect_all","","",181,null],[12,"get_items","","",181,null],[12,"get_recent_manager","","",181,null],[12,"add_filter","","",181,null],[12,"remove_filter","","",181,null],[12,"list_filters","","",181,null],[12,"set_sort_func","","",181,null],[12,"item_activated","","",181,null],[12,"selection_changed","","",181,null],[3,"GtkRecentChooserMenuClass","","",null,null],[12,"parent_class","","",182,null],[12,"gtk_recent1","","",182,null],[12,"gtk_recent2","","",182,null],[12,"gtk_recent3","","",182,null],[12,"gtk_recent4","","",182,null],[3,"GtkRecentChooserMenuPrivate","","",null,null],[3,"GtkRecentChooserWidgetClass","","",null,null],[12,"parent_class","","",183,null],[12,"_gtk_reserved1","","",183,null],[12,"_gtk_reserved2","","",183,null],[12,"_gtk_reserved3","","",183,null],[12,"_gtk_reserved4","","",183,null],[3,"GtkRecentChooserWidgetPrivate","","",null,null],[3,"GtkRecentData","","",null,null],[12,"display_name","","",184,null],[12,"description","","",184,null],[12,"mime_type","","",184,null],[12,"app_name","","",184,null],[12,"app_exec","","",184,null],[12,"groups","","",184,null],[12,"is_private","","",184,null],[3,"GtkRecentFilterInfo","","",null,null],[12,"contains","","",185,null],[12,"uri","","",185,null],[12,"display_name","","",185,null],[12,"mime_type","","",185,null],[12,"applications","","",185,null],[12,"groups","","",185,null],[12,"age","","",185,null],[3,"GtkRecentInfo","","",null,null],[3,"GtkRecentManagerClass","","",null,null],[12,"changed","","",186,null],[12,"_gtk_recent1","","",186,null],[12,"_gtk_recent2","","",186,null],[12,"_gtk_recent3","","",186,null],[12,"_gtk_recent4","","",186,null],[3,"GtkRecentManagerPrivate","","",null,null],[3,"GtkRendererCellAccessibleClass","","",null,null],[12,"parent_class","","",187,null],[3,"GtkRendererCellAccessiblePrivate","","",null,null],[3,"GtkRequestedSize","","",null,null],[12,"data","","",188,null],[12,"minimum_size","","",188,null],[12,"natural_size","","",188,null],[3,"GtkRequisition","","",null,null],[12,"width","","",189,null],[12,"height","","",189,null],[3,"GtkRevealerClass","","",null,null],[12,"parent_class","","",190,null],[3,"GtkScaleAccessibleClass","","",null,null],[12,"parent_class","","",191,null],[3,"GtkScaleAccessiblePrivate","","",null,null],[3,"GtkScaleButtonAccessibleClass","","",null,null],[12,"parent_class","","",192,null],[3,"GtkScaleButtonAccessiblePrivate","","",null,null],[3,"GtkScaleButtonClass","","",null,null],[12,"parent_class","","",193,null],[12,"value_changed","","",193,null],[12,"_gtk_reserved1","","",193,null],[12,"_gtk_reserved2","","",193,null],[12,"_gtk_reserved3","","",193,null],[12,"_gtk_reserved4","","",193,null],[3,"GtkScaleButtonPrivate","","",null,null],[3,"GtkScaleClass","","",null,null],[12,"parent_class","","",194,null],[12,"format_value","","",194,null],[12,"draw_value","","",194,null],[12,"get_layout_offsets","","",194,null],[12,"_gtk_reserved1","","",194,null],[12,"_gtk_reserved2","","",194,null],[12,"_gtk_reserved3","","",194,null],[12,"_gtk_reserved4","","",194,null],[3,"GtkScalePrivate","","",null,null],[3,"GtkScrollableInterface","","",null,null],[12,"base_iface","","",195,null],[12,"get_border","","",195,null],[3,"GtkScrollbarClass","","",null,null],[12,"parent_class","","",196,null],[12,"_gtk_reserved1","","",196,null],[12,"_gtk_reserved2","","",196,null],[12,"_gtk_reserved3","","",196,null],[12,"_gtk_reserved4","","",196,null],[3,"GtkScrolledWindowAccessibleClass","","",null,null],[12,"parent_class","","",197,null],[3,"GtkScrolledWindowAccessiblePrivate","","",null,null],[3,"GtkScrolledWindowClass","","",null,null],[12,"parent_class","","",198,null],[12,"scrollbar_spacing","","",198,null],[12,"scroll_child","","",198,null],[12,"move_focus_out","","",198,null],[12,"_gtk_reserved1","","",198,null],[12,"_gtk_reserved2","","",198,null],[12,"_gtk_reserved3","","",198,null],[12,"_gtk_reserved4","","",198,null],[3,"GtkScrolledWindowPrivate","","",null,null],[3,"GtkSearchBarClass","","",null,null],[12,"parent_class","","",199,null],[12,"_gtk_reserved1","","",199,null],[12,"_gtk_reserved2","","",199,null],[12,"_gtk_reserved3","","",199,null],[12,"_gtk_reserved4","","",199,null],[3,"GtkSearchEntryClass","","",null,null],[12,"parent_class","","",200,null],[12,"search_changed","","",200,null],[12,"next_match","","",200,null],[12,"previous_match","","",200,null],[12,"stop_search","","",200,null],[3,"GtkSelectionData","","",null,null],[3,"GtkSeparatorClass","","",null,null],[12,"parent_class","","",201,null],[12,"_gtk_reserved1","","",201,null],[12,"_gtk_reserved2","","",201,null],[12,"_gtk_reserved3","","",201,null],[12,"_gtk_reserved4","","",201,null],[3,"GtkSeparatorMenuItemClass","","",null,null],[12,"parent_class","","",202,null],[12,"_gtk_reserved1","","",202,null],[12,"_gtk_reserved2","","",202,null],[12,"_gtk_reserved3","","",202,null],[12,"_gtk_reserved4","","",202,null],[3,"GtkSeparatorPrivate","","",null,null],[3,"GtkSeparatorToolItemClass","","",null,null],[12,"parent_class","","",203,null],[12,"_gtk_reserved1","","",203,null],[12,"_gtk_reserved2","","",203,null],[12,"_gtk_reserved3","","",203,null],[12,"_gtk_reserved4","","",203,null],[3,"GtkSeparatorToolItemPrivate","","",null,null],[3,"GtkSettingsClass","","",null,null],[12,"parent_class","","",204,null],[12,"_gtk_reserved1","","",204,null],[12,"_gtk_reserved2","","",204,null],[12,"_gtk_reserved3","","",204,null],[12,"_gtk_reserved4","","",204,null],[3,"GtkSettingsPrivate","","",null,null],[3,"GtkSettingsValue","","",null,null],[12,"origin","","",205,null],[12,"value","","",205,null],[3,"GtkSizeGroupClass","","",null,null],[12,"parent_class","","",206,null],[12,"_gtk_reserved1","","",206,null],[12,"_gtk_reserved2","","",206,null],[12,"_gtk_reserved3","","",206,null],[12,"_gtk_reserved4","","",206,null],[3,"GtkSizeGroupPrivate","","",null,null],[3,"GtkSocketClass","","",null,null],[12,"parent_class","","",207,null],[12,"plug_added","","",207,null],[12,"plug_removed","","",207,null],[12,"_gtk_reserved1","","",207,null],[12,"_gtk_reserved2","","",207,null],[12,"_gtk_reserved3","","",207,null],[12,"_gtk_reserved4","","",207,null],[3,"GtkSocketPrivate","","",null,null],[3,"GtkSpinButtonAccessibleClass","","",null,null],[12,"parent_class","","",208,null],[3,"GtkSpinButtonAccessiblePrivate","","",null,null],[3,"GtkSpinButtonClass","","",null,null],[12,"parent_class","","",209,null],[12,"input","","",209,null],[12,"output","","",209,null],[12,"value_changed","","",209,null],[12,"change_value","","",209,null],[12,"wrapped","","",209,null],[12,"_gtk_reserved1","","",209,null],[12,"_gtk_reserved2","","",209,null],[12,"_gtk_reserved3","","",209,null],[12,"_gtk_reserved4","","",209,null],[3,"GtkSpinButtonPrivate","","",null,null],[3,"GtkSpinnerAccessibleClass","","",null,null],[12,"parent_class","","",210,null],[3,"GtkSpinnerAccessiblePrivate","","",null,null],[3,"GtkSpinnerClass","","",null,null],[12,"parent_class","","",211,null],[12,"_gtk_reserved1","","",211,null],[12,"_gtk_reserved2","","",211,null],[12,"_gtk_reserved3","","",211,null],[12,"_gtk_reserved4","","",211,null],[3,"GtkSpinnerPrivate","","",null,null],[3,"GtkStackClass","","",null,null],[12,"parent_class","","",212,null],[3,"GtkStackSidebarClass","","",null,null],[12,"parent_class","","",213,null],[12,"_gtk_reserved1","","",213,null],[12,"_gtk_reserved2","","",213,null],[12,"_gtk_reserved3","","",213,null],[12,"_gtk_reserved4","","",213,null],[3,"GtkStackSidebarPrivate","","",null,null],[3,"GtkStackSwitcherClass","","",null,null],[12,"parent_class","","",214,null],[12,"_gtk_reserved1","","",214,null],[12,"_gtk_reserved2","","",214,null],[12,"_gtk_reserved3","","",214,null],[12,"_gtk_reserved4","","",214,null],[3,"GtkStatusIconClass","","",null,null],[12,"parent_class","","",215,null],[12,"activate","","",215,null],[12,"popup_menu","","",215,null],[12,"size_changed","","",215,null],[12,"button_press_event","","",215,null],[12,"button_release_event","","",215,null],[12,"scroll_event","","",215,null],[12,"query_tooltip","","",215,null],[12,"__gtk_reserved1","","",215,null],[12,"__gtk_reserved2","","",215,null],[12,"__gtk_reserved3","","",215,null],[12,"__gtk_reserved4","","",215,null],[3,"GtkStatusIconPrivate","","",null,null],[3,"GtkStatusbarAccessibleClass","","",null,null],[12,"parent_class","","",216,null],[3,"GtkStatusbarAccessiblePrivate","","",null,null],[3,"GtkStatusbarClass","","",null,null],[12,"parent_class","","",217,null],[12,"reserved","","",217,null],[12,"text_pushed","","",217,null],[12,"text_popped","","",217,null],[12,"_gtk_reserved1","","",217,null],[12,"_gtk_reserved2","","",217,null],[12,"_gtk_reserved3","","",217,null],[12,"_gtk_reserved4","","",217,null],[3,"GtkStatusbarPrivate","","",null,null],[3,"GtkStockItem","","",null,null],[12,"stock_id","","",218,null],[12,"label","","",218,null],[12,"modifier","","",218,null],[12,"keyval","","",218,null],[12,"translation_domain","","",218,null],[3,"GtkStyleClass","","",null,null],[12,"parent_class","","",219,null],[12,"realize","","",219,null],[12,"unrealize","","",219,null],[12,"copy","","",219,null],[12,"clone","","",219,null],[12,"init_from_rc","","",219,null],[12,"set_background","","",219,null],[12,"render_icon","","",219,null],[12,"draw_hline","","",219,null],[12,"draw_vline","","",219,null],[12,"draw_shadow","","",219,null],[12,"draw_arrow","","",219,null],[12,"draw_diamond","","",219,null],[12,"draw_box","","",219,null],[12,"draw_flat_box","","",219,null],[12,"draw_check","","",219,null],[12,"draw_option","","",219,null],[12,"draw_tab","","",219,null],[12,"draw_shadow_gap","","",219,null],[12,"draw_box_gap","","",219,null],[12,"draw_extension","","",219,null],[12,"draw_focus","","",219,null],[12,"draw_slider","","",219,null],[12,"draw_handle","","",219,null],[12,"draw_expander","","",219,null],[12,"draw_layout","","",219,null],[12,"draw_resize_grip","","",219,null],[12,"draw_spinner","","",219,null],[12,"_gtk_reserved1","","",219,null],[12,"_gtk_reserved2","","",219,null],[12,"_gtk_reserved3","","",219,null],[12,"_gtk_reserved4","","",219,null],[12,"_gtk_reserved5","","",219,null],[12,"_gtk_reserved6","","",219,null],[12,"_gtk_reserved7","","",219,null],[12,"_gtk_reserved8","","",219,null],[12,"_gtk_reserved9","","",219,null],[12,"_gtk_reserved10","","",219,null],[12,"_gtk_reserved11","","",219,null],[3,"GtkStyleContextClass","","",null,null],[12,"parent_class","","",220,null],[12,"changed","","",220,null],[12,"_gtk_reserved1","","",220,null],[12,"_gtk_reserved2","","",220,null],[12,"_gtk_reserved3","","",220,null],[12,"_gtk_reserved4","","",220,null],[3,"GtkStyleContextPrivate","","",null,null],[3,"GtkStylePropertiesClass","","",null,null],[12,"_gtk_reserved1","","",221,null],[12,"_gtk_reserved2","","",221,null],[12,"_gtk_reserved3","","",221,null],[12,"_gtk_reserved4","","",221,null],[3,"GtkStylePropertiesPrivate","","",null,null],[3,"GtkStyleProviderIface","","",null,null],[12,"get_style","","",222,null],[12,"get_style_property","","",222,null],[12,"get_icon_factory","","",222,null],[3,"GtkSwitchAccessibleClass","","",null,null],[12,"parent_class","","",223,null],[3,"GtkSwitchAccessiblePrivate","","",null,null],[3,"GtkSwitchClass","","",null,null],[12,"parent_class","","",224,null],[12,"activate","","",224,null],[12,"state_set","","",224,null],[12,"_switch_padding_1","","",224,null],[12,"_switch_padding_2","","",224,null],[12,"_switch_padding_3","","",224,null],[12,"_switch_padding_4","","",224,null],[12,"_switch_padding_5","","",224,null],[3,"GtkSwitchPrivate","","",null,null],[3,"GtkSymbolicColor","","",null,null],[3,"GtkTableChild","","",null,null],[12,"widget","","",225,null],[12,"left_attach","","",225,null],[12,"right_attach","","",225,null],[12,"top_attach","","",225,null],[12,"bottom_attach","","",225,null],[12,"xpadding","","",225,null],[12,"ypadding","","",225,null],[3,"GtkTableClass","","",null,null],[12,"parent_class","","",226,null],[12,"_gtk_reserved1","","",226,null],[12,"_gtk_reserved2","","",226,null],[12,"_gtk_reserved3","","",226,null],[12,"_gtk_reserved4","","",226,null],[3,"GtkTablePrivate","","",null,null],[3,"GtkTableRowCol","","",null,null],[12,"requisition","","",227,null],[12,"allocation","","",227,null],[12,"spacing","","",227,null],[3,"GtkTargetEntry","","",null,null],[12,"target","","",228,null],[12,"flags","","",228,null],[12,"info","","",228,null],[3,"GtkTargetList","","",null,null],[3,"GtkTargetPair","","",null,null],[12,"target","","",229,null],[12,"flags","","",229,null],[12,"info","","",229,null],[3,"GtkTearoffMenuItemClass","","",null,null],[12,"parent_class","","",230,null],[12,"_gtk_reserved1","","",230,null],[12,"_gtk_reserved2","","",230,null],[12,"_gtk_reserved3","","",230,null],[12,"_gtk_reserved4","","",230,null],[3,"GtkTearoffMenuItemPrivate","","",null,null],[3,"GtkTextAppearance","","",null,null],[12,"bg_color","","",231,null],[12,"fg_color","","",231,null],[12,"rise","","",231,null],[3,"GtkTextAttributes","","",null,null],[12,"appearance","","",232,null],[12,"justification","","",232,null],[12,"direction","","",232,null],[12,"font","","",232,null],[12,"font_scale","","",232,null],[12,"left_margin","","",232,null],[12,"right_margin","","",232,null],[12,"indent","","",232,null],[12,"pixels_above_lines","","",232,null],[12,"pixels_below_lines","","",232,null],[12,"pixels_inside_wrap","","",232,null],[12,"tabs","","",232,null],[12,"wrap_mode","","",232,null],[12,"language","","",232,null],[3,"GtkTextBTree","","",null,null],[3,"GtkTextBufferClass","","",null,null],[12,"parent_class","","",233,null],[12,"insert_text","","",233,null],[12,"insert_pixbuf","","",233,null],[12,"insert_child_anchor","","",233,null],[12,"delete_range","","",233,null],[12,"changed","","",233,null],[12,"modified_changed","","",233,null],[12,"mark_set","","",233,null],[12,"mark_deleted","","",233,null],[12,"apply_tag","","",233,null],[12,"remove_tag","","",233,null],[12,"begin_user_action","","",233,null],[12,"end_user_action","","",233,null],[12,"paste_done","","",233,null],[12,"_gtk_reserved1","","",233,null],[12,"_gtk_reserved2","","",233,null],[12,"_gtk_reserved3","","",233,null],[12,"_gtk_reserved4","","",233,null],[3,"GtkTextBufferPrivate","","",null,null],[3,"GtkTextCellAccessibleClass","","",null,null],[12,"parent_class","","",234,null],[3,"GtkTextCellAccessiblePrivate","","",null,null],[3,"GtkTextChildAnchorClass","","",null,null],[12,"parent_class","","",235,null],[12,"_gtk_reserved1","","",235,null],[12,"_gtk_reserved2","","",235,null],[12,"_gtk_reserved3","","",235,null],[12,"_gtk_reserved4","","",235,null],[3,"GtkTextIter","","",null,null],[3,"GtkTextMarkClass","","",null,null],[12,"parent_class","","",236,null],[12,"_gtk_reserved1","","",236,null],[12,"_gtk_reserved2","","",236,null],[12,"_gtk_reserved3","","",236,null],[12,"_gtk_reserved4","","",236,null],[3,"GtkTextTagClass","","",null,null],[12,"parent_class","","",237,null],[12,"event","","",237,null],[12,"_gtk_reserved1","","",237,null],[12,"_gtk_reserved2","","",237,null],[12,"_gtk_reserved3","","",237,null],[12,"_gtk_reserved4","","",237,null],[3,"GtkTextTagPrivate","","",null,null],[3,"GtkTextTagTableClass","","",null,null],[12,"parent_class","","",238,null],[12,"tag_changed","","",238,null],[12,"tag_added","","",238,null],[12,"tag_removed","","",238,null],[12,"_gtk_reserved1","","",238,null],[12,"_gtk_reserved2","","",238,null],[12,"_gtk_reserved3","","",238,null],[12,"_gtk_reserved4","","",238,null],[3,"GtkTextTagTablePrivate","","",null,null],[3,"GtkTextViewAccessibleClass","","",null,null],[12,"parent_class","","",239,null],[3,"GtkTextViewAccessiblePrivate","","",null,null],[3,"GtkTextViewClass","","",null,null],[12,"parent_class","","",240,null],[12,"populate_popup","","",240,null],[12,"move_cursor","","",240,null],[12,"set_anchor","","",240,null],[12,"insert_at_cursor","","",240,null],[12,"delete_from_cursor","","",240,null],[12,"backspace","","",240,null],[12,"cut_clipboard","","",240,null],[12,"copy_clipboard","","",240,null],[12,"paste_clipboard","","",240,null],[12,"toggle_overwrite","","",240,null],[12,"create_buffer","","",240,null],[12,"draw_layer","","",240,null],[12,"extend_selection","","",240,null],[12,"_gtk_reserved1","","",240,null],[12,"_gtk_reserved2","","",240,null],[12,"_gtk_reserved3","","",240,null],[12,"_gtk_reserved4","","",240,null],[12,"_gtk_reserved5","","",240,null],[3,"GtkTextViewPrivate","","",null,null],[3,"GtkThemeEngine","","",null,null],[3,"GtkThemingEngineClass","","",null,null],[12,"parent_class","","",241,null],[12,"render_line","","",241,null],[12,"render_background","","",241,null],[12,"render_frame","","",241,null],[12,"render_frame_gap","","",241,null],[12,"render_extension","","",241,null],[12,"render_check","","",241,null],[12,"render_option","","",241,null],[12,"render_arrow","","",241,null],[12,"render_expander","","",241,null],[12,"render_focus","","",241,null],[12,"render_layout","","",241,null],[12,"render_slider","","",241,null],[12,"render_handle","","",241,null],[12,"render_activity","","",241,null],[12,"render_icon_pixbuf","","",241,null],[12,"render_icon","","",241,null],[12,"render_icon_surface","","",241,null],[3,"GtkThemingEnginePrivate","","",null,null],[3,"GtkToggleActionClass","","",null,null],[12,"parent_class","","",242,null],[12,"toggled","","",242,null],[12,"_gtk_reserved1","","",242,null],[12,"_gtk_reserved2","","",242,null],[12,"_gtk_reserved3","","",242,null],[12,"_gtk_reserved4","","",242,null],[3,"GtkToggleActionEntry","","",null,null],[12,"name","","",243,null],[12,"stock_id","","",243,null],[12,"label","","",243,null],[12,"accelerator","","",243,null],[12,"tooltip","","",243,null],[12,"callback","","",243,null],[12,"is_active","","",243,null],[3,"GtkToggleActionPrivate","","",null,null],[3,"GtkToggleButtonAccessibleClass","","",null,null],[12,"parent_class","","",244,null],[3,"GtkToggleButtonAccessiblePrivate","","",null,null],[3,"GtkToggleButtonClass","","",null,null],[12,"parent_class","","",245,null],[12,"toggled","","",245,null],[12,"_gtk_reserved1","","",245,null],[12,"_gtk_reserved2","","",245,null],[12,"_gtk_reserved3","","",245,null],[12,"_gtk_reserved4","","",245,null],[3,"GtkToggleButtonPrivate","","",null,null],[3,"GtkToggleToolButtonClass","","",null,null],[12,"parent_class","","",246,null],[12,"toggled","","",246,null],[12,"_gtk_reserved1","","",246,null],[12,"_gtk_reserved2","","",246,null],[12,"_gtk_reserved3","","",246,null],[12,"_gtk_reserved4","","",246,null],[3,"GtkToggleToolButtonPrivate","","",null,null],[3,"GtkToolButtonClass","","",null,null],[12,"parent_class","","",247,null],[12,"button_type","","",247,null],[12,"clicked","","",247,null],[12,"_gtk_reserved1","","",247,null],[12,"_gtk_reserved2","","",247,null],[12,"_gtk_reserved3","","",247,null],[12,"_gtk_reserved4","","",247,null],[3,"GtkToolButtonPrivate","","",null,null],[3,"GtkToolItemClass","","",null,null],[12,"parent_class","","",248,null],[12,"create_menu_proxy","","",248,null],[12,"toolbar_reconfigured","","",248,null],[12,"_gtk_reserved1","","",248,null],[12,"_gtk_reserved2","","",248,null],[12,"_gtk_reserved3","","",248,null],[12,"_gtk_reserved4","","",248,null],[3,"GtkToolItemGroupClass","","",null,null],[12,"parent_class","","",249,null],[12,"_gtk_reserved1","","",249,null],[12,"_gtk_reserved2","","",249,null],[12,"_gtk_reserved3","","",249,null],[12,"_gtk_reserved4","","",249,null],[3,"GtkToolItemGroupPrivate","","",null,null],[3,"GtkToolItemPrivate","","",null,null],[3,"GtkToolPaletteClass","","",null,null],[12,"parent_class","","",250,null],[12,"_gtk_reserved1","","",250,null],[12,"_gtk_reserved2","","",250,null],[12,"_gtk_reserved3","","",250,null],[12,"_gtk_reserved4","","",250,null],[3,"GtkToolPalettePrivate","","",null,null],[3,"GtkToolShellIface","","",null,null],[12,"get_icon_size","","",251,null],[12,"get_orientation","","",251,null],[12,"get_style","","",251,null],[12,"get_relief_style","","",251,null],[12,"rebuild_menu","","",251,null],[12,"get_text_orientation","","",251,null],[12,"get_text_alignment","","",251,null],[12,"get_ellipsize_mode","","",251,null],[12,"get_text_size_group","","",251,null],[3,"GtkToolbarClass","","",null,null],[12,"parent_class","","",252,null],[12,"orientation_changed","","",252,null],[12,"style_changed","","",252,null],[12,"popup_context_menu","","",252,null],[12,"_gtk_reserved1","","",252,null],[12,"_gtk_reserved2","","",252,null],[12,"_gtk_reserved3","","",252,null],[12,"_gtk_reserved4","","",252,null],[3,"GtkToolbarPrivate","","",null,null],[3,"GtkToplevelAccessibleClass","","",null,null],[12,"parent_class","","",253,null],[3,"GtkToplevelAccessiblePrivate","","",null,null],[3,"GtkTreeDragDestIface","","",null,null],[12,"drag_data_received","","",254,null],[12,"row_drop_possible","","",254,null],[3,"GtkTreeDragSourceIface","","",null,null],[12,"row_draggable","","",255,null],[12,"drag_data_get","","",255,null],[12,"drag_data_delete","","",255,null],[3,"GtkTreeIter","","",null,null],[12,"stamp","","",256,null],[12,"user_data","","",256,null],[12,"user_data2","","",256,null],[12,"user_data3","","",256,null],[3,"GtkTreeModelFilterClass","","",null,null],[12,"parent_class","","",257,null],[12,"visible","","",257,null],[12,"modify","","",257,null],[12,"_gtk_reserved1","","",257,null],[12,"_gtk_reserved2","","",257,null],[12,"_gtk_reserved3","","",257,null],[12,"_gtk_reserved4","","",257,null],[3,"GtkTreeModelFilterPrivate","","",null,null],[3,"GtkTreeModelIface","","",null,null],[12,"row_changed","","",258,null],[12,"row_inserted","","",258,null],[12,"row_has_child_toggled","","",258,null],[12,"row_deleted","","",258,null],[12,"rows_reordered","","",258,null],[12,"get_flags","","",258,null],[12,"get_n_columns","","",258,null],[12,"get_column_type","","",258,null],[12,"get_iter","","",258,null],[12,"get_path","","",258,null],[12,"get_value","","",258,null],[12,"iter_next","","",258,null],[12,"iter_previous","","",258,null],[12,"iter_children","","",258,null],[12,"iter_has_child","","",258,null],[12,"iter_n_children","","",258,null],[12,"iter_nth_child","","",258,null],[12,"iter_parent","","",258,null],[12,"ref_node","","",258,null],[12,"unref_node","","",258,null],[3,"GtkTreeModelSortClass","","",null,null],[12,"parent_class","","",259,null],[12,"_gtk_reserved1","","",259,null],[12,"_gtk_reserved2","","",259,null],[12,"_gtk_reserved3","","",259,null],[12,"_gtk_reserved4","","",259,null],[3,"GtkTreeModelSortPrivate","","",null,null],[3,"GtkTreePath","","",null,null],[3,"GtkTreeRowReference","","",null,null],[3,"GtkTreeSelectionClass","","",null,null],[12,"parent_class","","",260,null],[12,"changed","","",260,null],[12,"_gtk_reserved1","","",260,null],[12,"_gtk_reserved2","","",260,null],[12,"_gtk_reserved3","","",260,null],[12,"_gtk_reserved4","","",260,null],[3,"GtkTreeSelectionPrivate","","",null,null],[3,"GtkTreeSortableIface","","",null,null],[12,"sort_column_changed","","",261,null],[12,"get_sort_column_id","","",261,null],[12,"set_sort_column_id","","",261,null],[12,"set_sort_func","","",261,null],[12,"set_default_sort_func","","",261,null],[12,"has_default_sort_func","","",261,null],[3,"GtkTreeStoreClass","","",null,null],[12,"parent_class","","",262,null],[12,"_gtk_reserved1","","",262,null],[12,"_gtk_reserved2","","",262,null],[12,"_gtk_reserved3","","",262,null],[12,"_gtk_reserved4","","",262,null],[3,"GtkTreeStorePrivate","","",null,null],[3,"GtkTreeViewAccessibleClass","","",null,null],[12,"parent_class","","",263,null],[3,"GtkTreeViewAccessiblePrivate","","",null,null],[3,"GtkTreeViewClass","","",null,null],[12,"parent_class","","",264,null],[12,"row_activated","","",264,null],[12,"test_expand_row","","",264,null],[12,"test_collapse_row","","",264,null],[12,"row_expanded","","",264,null],[12,"row_collapsed","","",264,null],[12,"columns_changed","","",264,null],[12,"cursor_changed","","",264,null],[12,"move_cursor","","",264,null],[12,"select_all","","",264,null],[12,"unselect_all","","",264,null],[12,"select_cursor_row","","",264,null],[12,"toggle_cursor_row","","",264,null],[12,"expand_collapse_cursor_row","","",264,null],[12,"select_cursor_parent","","",264,null],[12,"start_interactive_search","","",264,null],[12,"_gtk_reserved1","","",264,null],[12,"_gtk_reserved2","","",264,null],[12,"_gtk_reserved3","","",264,null],[12,"_gtk_reserved4","","",264,null],[12,"_gtk_reserved5","","",264,null],[12,"_gtk_reserved6","","",264,null],[12,"_gtk_reserved7","","",264,null],[12,"_gtk_reserved8","","",264,null],[3,"GtkTreeViewColumnClass","","",null,null],[12,"parent_class","","",265,null],[12,"clicked","","",265,null],[12,"_gtk_reserved1","","",265,null],[12,"_gtk_reserved2","","",265,null],[12,"_gtk_reserved3","","",265,null],[12,"_gtk_reserved4","","",265,null],[3,"GtkTreeViewColumnPrivate","","",null,null],[3,"GtkTreeViewPrivate","","",null,null],[3,"GtkUIManagerClass","","",null,null],[12,"parent_class","","",266,null],[12,"add_widget","","",266,null],[12,"actions_changed","","",266,null],[12,"connect_proxy","","",266,null],[12,"disconnect_proxy","","",266,null],[12,"pre_activate","","",266,null],[12,"post_activate","","",266,null],[12,"get_widget","","",266,null],[12,"get_action","","",266,null],[12,"_gtk_reserved1","","",266,null],[12,"_gtk_reserved2","","",266,null],[12,"_gtk_reserved3","","",266,null],[12,"_gtk_reserved4","","",266,null],[3,"GtkUIManagerPrivate","","",null,null],[3,"GtkVBoxClass","","",null,null],[12,"parent_class","","",267,null],[3,"GtkVButtonBoxClass","","",null,null],[12,"parent_class","","",268,null],[3,"GtkVPanedClass","","",null,null],[12,"parent_class","","",269,null],[3,"GtkVScaleClass","","",null,null],[12,"parent_class","","",270,null],[3,"GtkVScrollbarClass","","",null,null],[12,"parent_class","","",271,null],[3,"GtkVSeparatorClass","","",null,null],[12,"parent_class","","",272,null],[3,"GtkViewportClass","","",null,null],[12,"parent_class","","",273,null],[12,"_gtk_reserved1","","",273,null],[12,"_gtk_reserved2","","",273,null],[12,"_gtk_reserved3","","",273,null],[12,"_gtk_reserved4","","",273,null],[3,"GtkViewportPrivate","","",null,null],[3,"GtkVolumeButtonClass","","",null,null],[12,"parent_class","","",274,null],[12,"_gtk_reserved1","","",274,null],[12,"_gtk_reserved2","","",274,null],[12,"_gtk_reserved3","","",274,null],[12,"_gtk_reserved4","","",274,null],[3,"GtkWidgetAccessibleClass","","",null,null],[12,"parent_class","","",275,null],[12,"notify_gtk","","",275,null],[3,"GtkWidgetAccessiblePrivate","","",null,null],[3,"GtkWidgetAuxInfo","","",null,null],[12,"width","","",276,null],[12,"height","","",276,null],[3,"GtkWidgetClass","","",null,null],[12,"parent_class","","",277,null],[12,"activate_signal","","",277,null],[12,"dispatch_child_properties_changed","","",277,null],[12,"destroy","","",277,null],[12,"show","","",277,null],[12,"show_all","","",277,null],[12,"hide","","",277,null],[12,"map","","",277,null],[12,"unmap","","",277,null],[12,"realize","","",277,null],[12,"unrealize","","",277,null],[12,"size_allocate","","",277,null],[12,"state_changed","","",277,null],[12,"state_flags_changed","","",277,null],[12,"parent_set","","",277,null],[12,"hierarchy_changed","","",277,null],[12,"style_set","","",277,null],[12,"direction_changed","","",277,null],[12,"grab_notify","","",277,null],[12,"child_notify","","",277,null],[12,"draw","","",277,null],[12,"get_request_mode","","",277,null],[12,"get_preferred_height","","",277,null],[12,"get_preferred_width_for_height","","",277,null],[12,"get_preferred_width","","",277,null],[12,"get_preferred_height_for_width","","",277,null],[12,"mnemonic_activate","","",277,null],[12,"grab_focus","","",277,null],[12,"focus","","",277,null],[12,"move_focus","","",277,null],[12,"keynav_failed","","",277,null],[12,"event","","",277,null],[12,"button_press_event","","",277,null],[12,"button_release_event","","",277,null],[12,"scroll_event","","",277,null],[12,"motion_notify_event","","",277,null],[12,"delete_event","","",277,null],[12,"destroy_event","","",277,null],[12,"key_press_event","","",277,null],[12,"key_release_event","","",277,null],[12,"enter_notify_event","","",277,null],[12,"leave_notify_event","","",277,null],[12,"configure_event","","",277,null],[12,"focus_in_event","","",277,null],[12,"focus_out_event","","",277,null],[12,"map_event","","",277,null],[12,"unmap_event","","",277,null],[12,"property_notify_event","","",277,null],[12,"selection_clear_event","","",277,null],[12,"selection_request_event","","",277,null],[12,"selection_notify_event","","",277,null],[12,"proximity_in_event","","",277,null],[12,"proximity_out_event","","",277,null],[12,"visibility_notify_event","","",277,null],[12,"window_state_event","","",277,null],[12,"damage_event","","",277,null],[12,"grab_broken_event","","",277,null],[12,"selection_get","","",277,null],[12,"selection_received","","",277,null],[12,"drag_begin","","",277,null],[12,"drag_end","","",277,null],[12,"drag_data_get","","",277,null],[12,"drag_data_delete","","",277,null],[12,"drag_leave","","",277,null],[12,"drag_motion","","",277,null],[12,"drag_drop","","",277,null],[12,"drag_data_received","","",277,null],[12,"drag_failed","","",277,null],[12,"popup_menu","","",277,null],[12,"show_help","","",277,null],[12,"get_accessible","","",277,null],[12,"screen_changed","","",277,null],[12,"can_activate_accel","","",277,null],[12,"composited_changed","","",277,null],[12,"query_tooltip","","",277,null],[12,"compute_expand","","",277,null],[12,"adjust_size_request","","",277,null],[12,"adjust_size_allocation","","",277,null],[12,"style_updated","","",277,null],[12,"touch_event","","",277,null],[12,"get_preferred_height_and_baseline_for_width","","",277,null],[12,"adjust_baseline_request","","",277,null],[12,"adjust_baseline_allocation","","",277,null],[12,"queue_draw_region","","",277,null],[12,"_gtk_reserved6","","",277,null],[12,"_gtk_reserved7","","",277,null],[3,"GtkWidgetClassPrivate","","",null,null],[3,"GtkWidgetPath","","",null,null],[3,"GtkWidgetPrivate","","",null,null],[3,"GtkWindowAccessibleClass","","",null,null],[12,"parent_class","","",278,null],[3,"GtkWindowAccessiblePrivate","","",null,null],[3,"GtkWindowClass","","",null,null],[12,"parent_class","","",279,null],[12,"set_focus","","",279,null],[12,"activate_focus","","",279,null],[12,"activate_default","","",279,null],[12,"keys_changed","","",279,null],[12,"enable_debugging","","",279,null],[12,"_gtk_reserved1","","",279,null],[12,"_gtk_reserved2","","",279,null],[12,"_gtk_reserved3","","",279,null],[3,"GtkWindowGeometryInfo","","",null,null],[3,"GtkWindowGroupClass","","",null,null],[12,"parent_class","","",280,null],[12,"_gtk_reserved1","","",280,null],[12,"_gtk_reserved2","","",280,null],[12,"_gtk_reserved3","","",280,null],[12,"_gtk_reserved4","","",280,null],[3,"GtkWindowGroupPrivate","","",null,null],[3,"GtkWindowPrivate","","",null,null],[3,"GtkAboutDialog","","",null,null],[3,"GtkAccelGroup","","",null,null],[3,"GtkAccelLabel","","",null,null],[3,"GtkAccelMap","","",null,null],[3,"GtkAccessible","","",null,null],[3,"GtkAction","","",null,null],[3,"GtkActionBar","","",null,null],[3,"GtkActionGroup","","",null,null],[3,"GtkAdjustment","","",null,null],[3,"GtkAlignment","","",null,null],[3,"GtkAppChooserButton","","",null,null],[3,"GtkAppChooserDialog","","",null,null],[3,"GtkAppChooserWidget","","",null,null],[3,"GtkApplication","","",null,null],[3,"GtkApplicationWindow","","",null,null],[3,"GtkArrow","","",null,null],[3,"GtkArrowAccessible","","",null,null],[3,"GtkAspectFrame","","",null,null],[3,"GtkAssistant","","",null,null],[3,"GtkBin","","",null,null],[3,"GtkBooleanCellAccessible","","",null,null],[3,"GtkBox","","",null,null],[3,"GtkBuilder","","",null,null],[3,"GtkButton","","",null,null],[3,"GtkButtonAccessible","","",null,null],[3,"GtkButtonBox","","",null,null],[3,"GtkCalendar","","",null,null],[3,"GtkCellAccessible","","",null,null],[3,"GtkCellArea","","",null,null],[3,"GtkCellAreaBox","","",null,null],[3,"GtkCellAreaContext","","",null,null],[3,"GtkCellRenderer","","",null,null],[3,"GtkCellRendererAccel","","",null,null],[3,"GtkCellRendererCombo","","",null,null],[3,"GtkCellRendererPixbuf","","",null,null],[3,"GtkCellRendererProgress","","",null,null],[3,"GtkCellRendererSpin","","",null,null],[3,"GtkCellRendererSpinner","","",null,null],[3,"GtkCellRendererText","","",null,null],[3,"GtkCellRendererToggle","","",null,null],[3,"GtkCellView","","",null,null],[3,"GtkCheckButton","","",null,null],[3,"GtkCheckMenuItem","","",null,null],[3,"GtkCheckMenuItemAccessible","","",null,null],[3,"GtkClipboard","","",null,null],[3,"GtkColorButton","","",null,null],[3,"GtkColorChooserDialog","","",null,null],[3,"GtkColorChooserWidget","","",null,null],[3,"GtkColorSelection","","",null,null],[3,"GtkColorSelectionDialog","","",null,null],[3,"GtkComboBox","","",null,null],[3,"GtkComboBoxAccessible","","",null,null],[3,"GtkComboBoxText","","",null,null],[3,"GtkContainer","","",null,null],[3,"GtkContainerAccessible","","",null,null],[3,"GtkContainerCellAccessible","","",null,null],[3,"GtkCssProvider","","",null,null],[3,"GtkDialog","","",null,null],[3,"GtkDrawingArea","","",null,null],[3,"GtkEntry","","",null,null],[3,"GtkEntryAccessible","","",null,null],[3,"GtkEntryBuffer","","",null,null],[3,"GtkEntryCompletion","","",null,null],[3,"GtkEntryIconAccessible","","",null,null],[3,"GtkEventBox","","",null,null],[3,"GtkEventController","","",null,null],[3,"GtkExpander","","",null,null],[3,"GtkExpanderAccessible","","",null,null],[3,"GtkFileChooserButton","","",null,null],[3,"GtkFileChooserDialog","","",null,null],[3,"GtkFileChooserWidget","","",null,null],[3,"GtkFileFilter","","",null,null],[3,"GtkFixed","","",null,null],[3,"GtkFlowBox","","",null,null],[3,"GtkFlowBoxAccessible","","",null,null],[3,"GtkFlowBoxChild","","",null,null],[3,"GtkFlowBoxChildAccessible","","",null,null],[3,"GtkFontButton","","",null,null],[3,"GtkFontChooserDialog","","",null,null],[3,"GtkFontChooserWidget","","",null,null],[3,"GtkFontSelection","","",null,null],[3,"GtkFontSelectionDialog","","",null,null],[3,"GtkFrame","","",null,null],[3,"GtkFrameAccessible","","",null,null],[3,"GtkGLArea","","",null,null],[3,"GtkGesture","","",null,null],[3,"GtkGestureDrag","","",null,null],[3,"GtkGestureLongPress","","",null,null],[3,"GtkGestureMultiPress","","",null,null],[3,"GtkGesturePan","","",null,null],[3,"GtkGestureRotate","","",null,null],[3,"GtkGestureSingle","","",null,null],[3,"GtkGestureSwipe","","",null,null],[3,"GtkGestureZoom","","",null,null],[3,"GtkGrid","","",null,null],[3,"GtkHBox","","",null,null],[3,"GtkHButtonBox","","",null,null],[3,"GtkHPaned","","",null,null],[3,"GtkHSV","","",null,null],[3,"GtkHScale","","",null,null],[3,"GtkHScrollbar","","",null,null],[3,"GtkHSeparator","","",null,null],[3,"GtkHandleBox","","",null,null],[3,"GtkHeaderBar","","",null,null],[3,"GtkIMContext","","",null,null],[3,"GtkIMContextSimple","","",null,null],[3,"GtkIMMulticontext","","",null,null],[3,"GtkIconFactory","","",null,null],[3,"GtkIconInfo","","",null,null],[3,"GtkIconTheme","","",null,null],[3,"GtkIconView","","",null,null],[3,"GtkIconViewAccessible","","",null,null],[3,"GtkImage","","",null,null],[3,"GtkImageAccessible","","",null,null],[3,"GtkImageCellAccessible","","",null,null],[3,"GtkImageMenuItem","","",null,null],[3,"GtkInfoBar","","",null,null],[3,"GtkInvisible","","",null,null],[3,"GtkLabel","","",null,null],[3,"GtkLabelAccessible","","",null,null],[3,"GtkLayout","","",null,null],[3,"GtkLevelBar","","",null,null],[3,"GtkLevelBarAccessible","","",null,null],[3,"GtkLinkButton","","",null,null],[3,"GtkLinkButtonAccessible","","",null,null],[3,"GtkListBox","","",null,null],[3,"GtkListBoxAccessible","","",null,null],[3,"GtkListBoxRow","","",null,null],[3,"GtkListBoxRowAccessible","","",null,null],[3,"GtkListStore","","",null,null],[3,"GtkLockButton","","",null,null],[3,"GtkLockButtonAccessible","","",null,null],[3,"GtkMenu","","",null,null],[3,"GtkMenuAccessible","","",null,null],[3,"GtkMenuBar","","",null,null],[3,"GtkMenuButton","","",null,null],[3,"GtkMenuButtonAccessible","","",null,null],[3,"GtkMenuItem","","",null,null],[3,"GtkMenuItemAccessible","","",null,null],[3,"GtkMenuShell","","",null,null],[3,"GtkMenuShellAccessible","","",null,null],[3,"GtkMenuToolButton","","",null,null],[3,"GtkMessageDialog","","",null,null],[3,"GtkMisc","","",null,null],[3,"GtkModelButton","","",null,null],[3,"GtkMountOperation","","",null,null],[3,"GtkNotebook","","",null,null],[3,"GtkNotebookAccessible","","",null,null],[3,"GtkNotebookPageAccessible","","",null,null],[3,"GtkNumerableIcon","","",null,null],[3,"GtkOffscreenWindow","","",null,null],[3,"GtkOverlay","","",null,null],[3,"GtkPageSetup","","",null,null],[3,"GtkPaned","","",null,null],[3,"GtkPanedAccessible","","",null,null],[3,"GtkPlacesSidebar","","",null,null],[3,"GtkPlug","","",null,null],[3,"GtkPopover","","",null,null],[3,"GtkPopoverAccessible","","",null,null],[3,"GtkPopoverMenu","","",null,null],[3,"GtkPrintContext","","",null,null],[3,"GtkPrintOperation","","",null,null],[3,"GtkPrintSettings","","",null,null],[3,"GtkProgressBar","","",null,null],[3,"GtkProgressBarAccessible","","",null,null],[3,"GtkRadioAction","","",null,null],[3,"GtkRadioButton","","",null,null],[3,"GtkRadioButtonAccessible","","",null,null],[3,"GtkRadioMenuItem","","",null,null],[3,"GtkRadioMenuItemAccessible","","",null,null],[3,"GtkRadioToolButton","","",null,null],[3,"GtkRange","","",null,null],[3,"GtkRangeAccessible","","",null,null],[3,"GtkRcStyle","","",null,null],[3,"GtkRecentAction","","",null,null],[3,"GtkRecentChooserDialog","","",null,null],[3,"GtkRecentChooserMenu","","",null,null],[3,"GtkRecentChooserWidget","","",null,null],[3,"GtkRecentFilter","","",null,null],[3,"GtkRecentManager","","",null,null],[3,"GtkRendererCellAccessible","","",null,null],[3,"GtkRevealer","","",null,null],[3,"GtkScale","","",null,null],[3,"GtkScaleAccessible","","",null,null],[3,"GtkScaleButton","","",null,null],[3,"GtkScaleButtonAccessible","","",null,null],[3,"GtkScrollbar","","",null,null],[3,"GtkScrolledWindow","","",null,null],[3,"GtkScrolledWindowAccessible","","",null,null],[3,"GtkSearchBar","","",null,null],[3,"GtkSearchEntry","","",null,null],[3,"GtkSeparator","","",null,null],[3,"GtkSeparatorMenuItem","","",null,null],[3,"GtkSeparatorToolItem","","",null,null],[3,"GtkSettings","","",null,null],[3,"GtkSizeGroup","","",null,null],[3,"GtkSocket","","",null,null],[3,"GtkSpinButton","","",null,null],[3,"GtkSpinButtonAccessible","","",null,null],[3,"GtkSpinner","","",null,null],[3,"GtkSpinnerAccessible","","",null,null],[3,"GtkStack","","",null,null],[3,"GtkStackSidebar","","",null,null],[3,"GtkStackSwitcher","","",null,null],[3,"GtkStatusIcon","","",null,null],[3,"GtkStatusbar","","",null,null],[3,"GtkStatusbarAccessible","","",null,null],[3,"GtkStyle","","",null,null],[3,"GtkStyleContext","","",null,null],[3,"GtkStyleProperties","","",null,null],[3,"GtkSwitch","","",null,null],[3,"GtkSwitchAccessible","","",null,null],[3,"GtkTable","","",null,null],[3,"GtkTearoffMenuItem","","",null,null],[3,"GtkTextBuffer","","",null,null],[3,"GtkTextCellAccessible","","",null,null],[3,"GtkTextChildAnchor","","",null,null],[3,"GtkTextMark","","",null,null],[3,"GtkTextTag","","",null,null],[3,"GtkTextTagTable","","",null,null],[3,"GtkTextView","","",null,null],[3,"GtkTextViewAccessible","","",null,null],[3,"GtkThemingEngine","","",null,null],[3,"GtkToggleAction","","",null,null],[3,"GtkToggleButton","","",null,null],[3,"GtkToggleButtonAccessible","","",null,null],[3,"GtkToggleToolButton","","",null,null],[3,"GtkToolButton","","",null,null],[3,"GtkToolItem","","",null,null],[3,"GtkToolItemGroup","","",null,null],[3,"GtkToolPalette","","",null,null],[3,"GtkToolbar","","",null,null],[3,"GtkTooltip","","",null,null],[3,"GtkToplevelAccessible","","",null,null],[3,"GtkTreeModelFilter","","",null,null],[3,"GtkTreeModelSort","","",null,null],[3,"GtkTreeSelection","","",null,null],[3,"GtkTreeStore","","",null,null],[3,"GtkTreeView","","",null,null],[3,"GtkTreeViewAccessible","","",null,null],[3,"GtkTreeViewColumn","","",null,null],[3,"GtkUIManager","","",null,null],[3,"GtkVBox","","",null,null],[3,"GtkVButtonBox","","",null,null],[3,"GtkVPaned","","",null,null],[3,"GtkVScale","","",null,null],[3,"GtkVScrollbar","","",null,null],[3,"GtkVSeparator","","",null,null],[3,"GtkViewport","","",null,null],[3,"GtkVolumeButton","","",null,null],[3,"GtkWidget","","",null,null],[3,"GtkWidgetAccessible","","",null,null],[3,"GtkWindow","","",null,null],[3,"GtkWindowAccessible","","",null,null],[3,"GtkWindowGroup","","",null,null],[3,"GtkActionable","","",null,null],[3,"GtkActivatable","","",null,null],[3,"GtkAppChooser","","",null,null],[3,"GtkBuildable","","",null,null],[3,"GtkCellAccessibleParent","","",null,null],[3,"GtkCellEditable","","",null,null],[3,"GtkCellLayout","","",null,null],[3,"GtkColorChooser","","",null,null],[3,"GtkEditable","","",null,null],[3,"GtkFileChooser","","",null,null],[3,"GtkFontChooser","","",null,null],[3,"GtkOrientable","","",null,null],[3,"GtkPrintOperationPreview","","",null,null],[3,"GtkRecentChooser","","",null,null],[3,"GtkScrollable","","",null,null],[3,"GtkStyleProvider","","",null,null],[3,"GtkToolShell","","",null,null],[3,"GtkTreeDragDest","","",null,null],[3,"GtkTreeDragSource","","",null,null],[3,"GtkTreeModel","","",null,null],[3,"GtkTreeSortable","","",null,null],[4,"GtkAlign","","Controls how a widget deals with extra space in a single (x or y)\ndimension.",null,null],[13,"Fill","","stretch to fill all space if possible, center if\nno meaningful way to stretch",281,null],[13,"Start","","snap to left or top side, leaving space on right\nor bottom",281,null],[13,"End","","snap to right or bottom side, leaving space on left\nor top",281,null],[13,"Center","","center natural width of widget inside the\nallocation",281,null],[13,"Baseline","","align the widget according to the baseline. Since 3.10.",281,null],[4,"GtkArrowPlacement","","Used to specify the placement of scroll arrows in scrolling menus.",null,null],[13,"Both","","Place one arrow on each end of the menu.",282,null],[13,"Start","","Place both arrows at the top of the menu.",282,null],[13,"End","","Place both arrows at the bottom of the menu.",282,null],[4,"GtkArrowType","","Used to indicate the direction in which an arrow should point.",null,null],[13,"Up","","Represents an upward pointing arrow.",283,null],[13,"Down","","Represents a downward pointing arrow.",283,null],[13,"Left","","Represents a left pointing arrow.",283,null],[13,"Right","","Represents a right pointing arrow.",283,null],[13,"None","","No arrow. Since 2.10.",283,null],[4,"GtkAssistantPageType","","An enum for determining the page role inside the `Assistant`. It&#39;s\nused to handle buttons sensitivity and visibility.",null,null],[13,"Content","","The page has regular contents. Both the\nBack and forward buttons will be shown.",284,null],[13,"Intro","","The page contains an introduction to the\nassistant task. Only the Forward button will be shown if there is a\nnext page.",284,null],[13,"Confirm","","The page lets the user confirm or deny the\nchanges. The Back and Apply buttons will be shown.",284,null],[13,"Summary","","The page informs the user of the changes\ndone. Only the Close button will be shown.",284,null],[13,"Progress","","Used for tasks that take a long time to\ncomplete, blocks the assistant until the page is marked as complete.\nOnly the back button will be shown.",284,null],[13,"Custom","","Used for when other page types are not\nappropriate. No buttons will be shown, and the application must\nadd its own buttons through `Assistant::add_action_widget`.",284,null],[4,"GtkBaselinePosition","","Whenever a container has some form of natural row it may align\nchildren in that row along a common typographical baseline. If\nthe amount of verical space in the row is taller than the total\nrequested height of the baseline-aligned children then it can use a\n`BaselinePosition` to select where to put the baseline inside the\nextra availible space.",null,null],[13,"Top","","Align the baseline at the top",285,null],[13,"Center","","Center the baseline",285,null],[13,"Bottom","","Align the baseline at the bottom",285,null],[4,"GtkBorderStyle","","Describes how the border of a UI element should be rendered.",null,null],[13,"None","","No visible border",286,null],[13,"Solid","","A single line segment",286,null],[13,"Inset","","Looks as if the content is sunken into the canvas",286,null],[13,"Outset","","Looks as if the content is coming out of the canvas",286,null],[13,"Hidden","","Same as `BorderStyle::None`",286,null],[13,"Dotted","","A series of round dots",286,null],[13,"Dashed","","A series of square-ended dashes",286,null],[13,"Double","","Two parallel lines with some space between them",286,null],[13,"Groove","","Looks as if it were carved in the canvas",286,null],[13,"Ridge","","Looks as if it were coming out of the canvas",286,null],[4,"GtkBuilderError","","Error codes that identify various errors that can occur while using\n`Builder`.",null,null],[13,"InvalidTypeFunction","","A type-func attribute didn’t name\na function that returns a `glib::Type`.",287,null],[13,"UnhandledTag","","The input contained a tag that `Builder`\ncan’t handle.",287,null],[13,"MissingAttribute","","An attribute that is required by\n`Builder` was missing.",287,null],[13,"InvalidAttribute","","`Builder` found an attribute that\nit doesn’t understand.",287,null],[13,"InvalidTag","","`Builder` found a tag that\nit doesn’t understand.",287,null],[13,"MissingPropertyValue","","A required property value was\nmissing.",287,null],[13,"InvalidValue","","`Builder` couldn’t parse\nsome attribute value.",287,null],[13,"VersionMismatch","","The input file requires a newer version\nof GTK+.",287,null],[13,"DuplicateId","","An object id occurred twice.",287,null],[13,"ObjectTypeRefused","","A specified object type is of the same type or\nderived from the type of the composite class being extended with builder XML.",287,null],[13,"TemplateMismatch","","The wrong type was specified in a composite class’s template XML",287,null],[13,"InvalidProperty","","The specified property is unknown for the object class.",287,null],[13,"InvalidSignal","","The specified signal is unknown for the object class.",287,null],[4,"GtkButtonBoxStyle","","Used to dictate the style that a `ButtonBox` uses to layout the buttons it\ncontains.",null,null],[13,"Spread","","Buttons are evenly spread across the box.",288,null],[13,"Edge","","Buttons are placed at the edges of the box.",288,null],[13,"Start","","Buttons are grouped towards the start of the box,\n(on the left for a HBox, or the top for a VBox).",288,null],[13,"End","","Buttons are grouped towards the end of the box,\n(on the right for a HBox, or the bottom for a VBox).",288,null],[13,"Center","","Buttons are centered in the box. Since 2.12.",288,null],[13,"Expand","","Buttons expand to fill the box. Since 3.12.",288,null],[4,"GtkButtonRole","","The role specifies the desired appearance of a `ModelButton`.",null,null],[13,"Normal","","A plain button",289,null],[13,"Check","","A check button",289,null],[13,"Radio","","A radio button",289,null],[4,"GtkButtonsType","","Prebuilt sets of buttons for the dialog. If\nnone of these choices are appropriate, simply use `ButtonsType::None`\nthen call `Dialog::add_buttons`.",null,null],[13,"None","","no buttons at all",290,null],[13,"Ok","","an OK button",290,null],[13,"Close","","a Close button",290,null],[13,"Cancel","","a Cancel button",290,null],[13,"YesNo","","Yes and No buttons",290,null],[13,"OkCancel","","OK and Cancel buttons",290,null],[4,"GtkCellRendererAccelMode","","Determines if the edited accelerators are GTK+ accelerators. If\nthey are, consumed modifiers are suppressed, only accelerators\naccepted by GTK+ are allowed, and the accelerators are rendered\nin the same way as they are in menus.",null,null],[13,"Gtk","","GTK+ accelerators mode",291,null],[13,"Other","","Other accelerator mode\nGTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP: Bare modifiers mode",291,null],[13,"ModifierTap","","",291,null],[4,"GtkCellRendererMode","","Identifies how the user can interact with a particular cell.",null,null],[13,"Inert","","The cell is just for display\nand cannot be interacted with. Note that this doesn’t mean that eg. the\nrow being drawn can’t be selected -- just that a particular element of\nit cannot be individually modified.",292,null],[13,"Activatable","","The cell can be clicked.",292,null],[13,"Editable","","The cell can be edited or otherwise modified.",292,null],[4,"GtkCornerType","","Specifies which corner a child widget should be placed in when packed into\na `ScrolledWindow`. This is effectively the opposite of where the scroll\nbars are placed.",null,null],[13,"TopLeft","","Place the scrollbars on the right and bottom of the\nwidget (default behaviour).",293,null],[13,"BottomLeft","","Place the scrollbars on the top and right of the\nwidget.",293,null],[13,"TopRight","","Place the scrollbars on the left and bottom of the\nwidget.",293,null],[13,"BottomRight","","Place the scrollbars on the top and left of the\nwidget.",293,null],[4,"GtkCssProviderError","","Error codes for `GTK_CSS_PROVIDER_ERROR`.",null,null],[13,"Failed","","Failed.",294,null],[13,"Syntax","","Syntax error.",294,null],[13,"Import","","Import error.",294,null],[13,"Name","","Name error.",294,null],[13,"Deprecated","","Deprecation error.",294,null],[13,"UnknownValue","","Unknown value.",294,null],[4,"GtkCssSectionType","","The different types of sections indicate parts of a CSS document as\nparsed by GTK’s CSS parser. They are oriented towards the\n[CSS Grammar](http://www.w3.org/TR/CSS21/grammar.html),\nbut may contain extensions.",null,null],[13,"Document","","The section describes a complete document.\nThis section time is the only one where `CssSection::get_parent`\nmight return `None`.",295,null],[13,"Import","","The section defines an import rule.",295,null],[13,"ColorDefinition","","The section defines a color. This\nis a GTK extension to CSS.",295,null],[13,"BindingSet","","The section defines a binding set. This\nis a GTK extension to CSS.",295,null],[13,"Ruleset","","The section defines a CSS ruleset.",295,null],[13,"Selector","","The section defines a CSS selector.",295,null],[13,"Declaration","","The section defines the declaration of\na CSS variable.",295,null],[13,"Value","","The section defines the value of a CSS declaration.",295,null],[13,"Keyframes","","The section defines keyframes. See [CSS\nAnimations](http://dev.w3.org/csswg/css3-animations/`keyframes`) for details. Since 3.6",295,null],[4,"GtkDeleteType","","See also: `Entry::delete-from-cursor`.",null,null],[13,"Chars","","Delete characters.",296,null],[13,"WordEnds","","Delete only the portion of the word to the\nleft/right of cursor if we’re in the middle of a word.",296,null],[13,"Words","","Delete words.",296,null],[13,"DisplayLines","","Delete display-lines. Display-lines\nrefers to the visible lines, with respect to to the current line\nbreaks. As opposed to paragraphs, which are defined by line\nbreaks in the input.",296,null],[13,"DisplayLineEnds","","Delete only the portion of the\ndisplay-line to the left/right of cursor.",296,null],[13,"ParagraphEnds","","Delete to the end of the\nparagraph. Like C-k in Emacs (or its reverse).",296,null],[13,"Paragraphs","","Delete entire line. Like C-k in pico.",296,null],[13,"Whitespace","","Delete only whitespace. Like M-\\ in Emacs.",296,null],[4,"GtkDirectionType","","Focus movement types.",null,null],[13,"TabForward","","Move forward.",297,null],[13,"TabBackward","","Move backward.",297,null],[13,"Up","","Move up.",297,null],[13,"Down","","Move down.",297,null],[13,"Left","","Move left.",297,null],[13,"Right","","Move right.",297,null],[4,"GtkDragResult","","Gives an indication why a drag operation failed.\nThe value can by obtained by connecting to the\n`Widget::drag-failed` signal.",null,null],[13,"Success","","The drag operation was successful.",298,null],[13,"NoTarget","","No suitable drag target.",298,null],[13,"UserCancelled","","The user cancelled the drag operation.",298,null],[13,"TimeoutExpired","","The drag operation timed out.",298,null],[13,"GrabBroken","","The pointer or keyboard grab used\nfor the drag operation was broken.",298,null],[13,"Error","","The drag operation failed due to some\nunspecified error.",298,null],[4,"GtkEntryIconPosition","","Specifies the side of the entry at which an icon is placed.",null,null],[13,"Primary","","At the beginning of the entry (depending on the text direction).",299,null],[13,"Secondary","","At the end of the entry (depending on the text direction).",299,null],[4,"GtkEventSequenceState","","Describes the state of a `gdk::EventSequence` in a `Gesture`.",null,null],[13,"None","","The sequence is handled, but not grabbed.",300,null],[13,"Claimed","","The sequence is handled and grabbed.",300,null],[13,"Denied","","The sequence is denied.",300,null],[4,"GtkExpanderStyle","","Used to specify the style of the expanders drawn by a `TreeView`.",null,null],[13,"Collapsed","","The style used for a collapsed subtree.",301,null],[13,"SemiCollapsed","","Intermediate style used during animation.",301,null],[13,"SemiExpanded","","Intermediate style used during animation.",301,null],[13,"Expanded","","The style used for an expanded subtree.",301,null],[4,"GtkFileChooserAction","","Describes whether a `FileChooser` is being used to open existing files\nor to save to a possibly new file.",null,null],[13,"Open","","Indicates open mode. The file chooser\nwill only let the user pick an existing file.",302,null],[13,"Save","","Indicates save mode. The file chooser\nwill let the user pick an existing file, or type in a new\nfilename.",302,null],[13,"SelectFolder","","Indicates an Open mode for\nselecting folders. The file chooser will let the user pick an\nexisting folder.",302,null],[13,"CreateFolder","","Indicates a mode for creating a\nnew folder. The file chooser will let the user name an existing or\nnew folder.",302,null],[4,"GtkFileChooserConfirmation","","Used as a return value of handlers for the\n`FileChooser::confirm-overwrite` signal of a `FileChooser`. This\nvalue determines whether the file chooser will present the stock\nconfirmation dialog, accept the user’s choice of a filename, or\nlet the user choose another filename.",null,null],[13,"Confirm","","The file chooser will present\nits stock dialog to confirm about overwriting an existing file.",303,null],[13,"AcceptFilename","","The file chooser will\nterminate and accept the user’s choice of a file name.",303,null],[13,"SelectAgain","","The file chooser will\ncontinue running, so as to let the user select another file name.",303,null],[4,"GtkFileChooserError","","These identify the various errors that can occur while calling\n`FileChooser` functions.",null,null],[13,"Nonexistent","","Indicates that a file does not exist.",304,null],[13,"BadFilename","","Indicates a malformed filename.",304,null],[13,"AlreadyExists","","Indicates a duplicate path (e.g. when\nadding a bookmark).",304,null],[13,"IncompleteHostname","","Indicates an incomplete hostname (e.g. &quot;http://foo&quot; without a slash after that).",304,null],[4,"GtkIMPreeditStyle","","Style for input method preedit. See also\n`Settings:gtk-im-preedit-style`",null,null],[13,"Nothing","","Deprecated",305,null],[13,"Callback","","Deprecated",305,null],[13,"None","","Deprecated",305,null],[4,"GtkIMStatusStyle","","Style for input method status. See also\n`Settings:gtk-im-status-style`",null,null],[13,"Nothing","","Deprecated",306,null],[13,"Callback","","Deprecated",306,null],[13,"None","","Deprecated",306,null],[4,"GtkIconSize","","Built-in stock icon sizes.",null,null],[13,"Invalid","","Invalid size.",307,null],[13,"Menu","","Size appropriate for menus (16px).",307,null],[13,"SmallToolbar","","Size appropriate for small toolbars (16px).",307,null],[13,"LargeToolbar","","Size appropriate for large toolbars (24px)",307,null],[13,"Button","","Size appropriate for buttons (16px)",307,null],[13,"Dnd","","Size appropriate for drag and drop (32px)",307,null],[13,"Dialog","","Size appropriate for dialogs (48px)",307,null],[4,"GtkIconThemeError","","Error codes for `IconTheme` operations.",null,null],[13,"NotFound","","The icon specified does not exist in the theme",308,null],[13,"Failed","","An unspecified error occurred.",308,null],[4,"GtkIconViewDropPosition","","An enum for determining where a dropped item goes.",null,null],[13,"NoDrop","","no drop possible",309,null],[13,"DropInto","","dropped item replaces the item",309,null],[13,"DropLeft","","droppped item is inserted to the left",309,null],[13,"DropRight","","dropped item is inserted to the right",309,null],[13,"DropAbove","","dropped item is inserted above",309,null],[13,"DropBelow","","dropped item is inserted below",309,null],[4,"GtkImageType","","Describes the image data representation used by a `Image`. If you\nwant to get the image from the widget, you can only get the\ncurrently-stored representation. e.g. if the\n`Image::get_storage_type` returns `ImageType::Pixbuf`, then you can\ncall `Image::get_pixbuf` but not `Image::get_stock`. For empty\nimages, you can request any storage type (call any of the &quot;get&quot;\nfunctions), but they will all return `None` values.",null,null],[13,"Empty","","there is no image displayed by the widget",310,null],[13,"Pixbuf","","the widget contains a `gdk_pixbuf::Pixbuf`",310,null],[13,"Stock","","the widget contains a [stock item name][gtkstock]",310,null],[13,"IconSet","","the widget contains a `IconSet`",310,null],[13,"Animation","","the widget contains a `gdk_pixbuf::PixbufAnimation`",310,null],[13,"IconName","","the widget contains a named icon.\nThis image type was added in GTK+ 2.6",310,null],[13,"Gicon","","the widget contains a `gio::Icon`.\nThis image type was added in GTK+ 2.14",310,null],[13,"Surface","","the widget contains a `cairo::Surface`.\nThis image type was added in GTK+ 3.10",310,null],[4,"GtkInputPurpose","","Describes primary purpose of the input widget. This information is\nuseful for on-screen keyboards and similar input methods to decide\nwhich keys should be presented to the user.",null,null],[13,"FreeForm","","Allow any character",311,null],[13,"Alpha","","Allow only alphabetic characters",311,null],[13,"Digits","","Allow only digits",311,null],[13,"Number","","Edited field expects numbers",311,null],[13,"Phone","","Edited field expects phone number",311,null],[13,"Url","","Edited field expects URL",311,null],[13,"Email","","Edited field expects email address",311,null],[13,"Name","","Edited field expects the name of a person",311,null],[13,"Password","","Like `InputPurpose::FreeForm`, but characters are hidden",311,null],[13,"Pin","","Like `InputPurpose::Digits`, but characters are hidden",311,null],[4,"GtkJustification","","Used for justifying the text inside a `Label` widget. (See also\n`Alignment`).",null,null],[13,"Left","","The text is placed at the left edge of the label.",312,null],[13,"Right","","The text is placed at the right edge of the label.",312,null],[13,"Center","","The text is placed in the center of the label.",312,null],[13,"Fill","","The text is placed is distributed across the label.",312,null],[4,"GtkLevelBarMode","","Describes how `LevelBar` contents should be rendered.\nNote that this enumeration could be extended with additional modes\nin the future.",null,null],[13,"Continuous","","the bar has a continuous mode",313,null],[13,"Discrete","","the bar has a discrete mode",313,null],[4,"GtkLicense","","The type of license for an application.",null,null],[13,"Unknown","","No license specified",314,null],[13,"Custom","","A license text is going to be specified by the\ndeveloper",314,null],[13,"Gpl20","","The GNU General Public License, version 2.0 or later",314,null],[13,"Gpl30","","The GNU General Public License, version 3.0 or later",314,null],[13,"Lgpl21","","The GNU Lesser General Public License, version 2.1 or later",314,null],[13,"Lgpl30","","The GNU Lesser General Public License, version 3.0 or later",314,null],[13,"Bsd","","The BSD standard license",314,null],[13,"MitX11","","The MIT/X11 standard license",314,null],[13,"Artistic","","The Artistic License, version 2.0",314,null],[13,"Gpl20Only","","The GNU General Public License, version 2.0 only. Since 3.12.",314,null],[13,"Gpl30Only","","The GNU General Public License, version 3.0 only. Since 3.12.",314,null],[13,"Lgpl21Only","","The GNU Lesser General Public License, version 2.1 only. Since 3.12.",314,null],[13,"Lgpl30Only","","The GNU Lesser General Public License, version 3.0 only. Since 3.12.",314,null],[4,"GtkMenuDirectionType","","An enumeration representing directional movements within a menu.",null,null],[13,"Parent","","To the parent menu shell",315,null],[13,"Child","","To the submenu, if any, associated with the item",315,null],[13,"Next","","To the next menu item",315,null],[13,"Prev","","To the previous menu item",315,null],[4,"GtkMessageType","","The type of message being displayed in the dialog.",null,null],[13,"Info","","Informational message",316,null],[13,"Warning","","Non-fatal warning message",316,null],[13,"Question","","Question requiring a choice",316,null],[13,"Error","","Fatal error message",316,null],[13,"Other","","None of the above",316,null],[4,"GtkMovementStep","","",null,null],[13,"LogicalPositions","","Move forward or back by graphemes",317,null],[13,"VisualPositions","","Move left or right by graphemes",317,null],[13,"Words","","Move forward or back by words",317,null],[13,"DisplayLines","","Move up or down lines (wrapped lines)",317,null],[13,"DisplayLineEnds","","Move to either end of a line",317,null],[13,"Paragraphs","","Move up or down paragraphs (newline-ended lines)",317,null],[13,"ParagraphEnds","","Move to either end of a paragraph",317,null],[13,"Pages","","Move by pages",317,null],[13,"BufferEnds","","Move to ends of the buffer",317,null],[13,"HorizontalPages","","Move horizontally by pages",317,null],[4,"GtkNotebookTab","","",null,null],[13,"First","","",318,null],[13,"Last","","",318,null],[4,"GtkNumberUpLayout","","Used to determine the layout of pages on a sheet when printing\nmultiple pages per sheet.",null,null],[13,"Lrtb","","![](layout-lrtb.png)",319,null],[13,"Lrbt","","![](layout-lrbt.png)",319,null],[13,"Rltb","","![](layout-rltb.png)",319,null],[13,"Rlbt","","![](layout-rlbt.png)",319,null],[13,"Tblr","","![](layout-tblr.png)",319,null],[13,"Tbrl","","![](layout-tbrl.png)",319,null],[13,"Btlr","","![](layout-btlr.png)",319,null],[13,"Btrl","","![](layout-btrl.png)",319,null],[4,"GtkOrientation","","Represents the orientation of widgets and other objects which can be switched\nbetween horizontal and vertical orientation on the fly, like `Toolbar` or\n`GesturePan`.",null,null],[13,"Horizontal","","The element is in horizontal orientation.",320,null],[13,"Vertical","","The element is in vertical orientation.",320,null],[4,"GtkPackDirection","","Determines how widgets should be packed inside menubars\nand menuitems contained in menubars.",null,null],[13,"Ltr","","Widgets are packed left-to-right",321,null],[13,"Rtl","","Widgets are packed right-to-left",321,null],[13,"Ttb","","Widgets are packed top-to-bottom",321,null],[13,"Btt","","Widgets are packed bottom-to-top",321,null],[4,"GtkPackType","","Represents the packing location `Box` children. (See: `VBox`,\n`HBox`, and `ButtonBox`).",null,null],[13,"Start","","The child is packed into the start of the box",322,null],[13,"End","","The child is packed into the end of the box",322,null],[4,"GtkPageOrientation","","See also `PrintSettings::set_orientation`.",null,null],[13,"Portrait","","Portrait mode.",323,null],[13,"Landscape","","Landscape mode.",323,null],[13,"ReversePortrait","","Reverse portrait mode.",323,null],[13,"ReverseLandscape","","Reverse landscape mode.",323,null],[4,"GtkPageSet","","See also `gtk_print_job_set_page_set`.",null,null],[13,"All","","All pages.",324,null],[13,"Even","","Even pages.",324,null],[13,"Odd","","Odd pages.",324,null],[4,"GtkPanDirection","","Describes the panning direction of a `GesturePan`",null,null],[13,"Left","","panned towards the left",325,null],[13,"Right","","panned towards the right",325,null],[13,"Up","","panned upwards",325,null],[13,"Down","","panned downwards",325,null],[4,"GtkPathPriorityType","","Priorities for path lookups.\nSee also `BindingSet::add_path`.",null,null],[13,"Lowest","","Deprecated",326,null],[13,"Gtk","","Deprecated",326,null],[13,"Application","","Deprecated",326,null],[13,"Theme","","Deprecated",326,null],[13,"Rc","","Deprecated",326,null],[13,"Highest","","Deprecated",326,null],[4,"GtkPathType","","Widget path types.\nSee also `BindingSet::add_path`.",null,null],[13,"Widget","","Deprecated",327,null],[13,"WidgetClass","","Deprecated",327,null],[13,"Class","","Deprecated",327,null],[4,"GtkPolicyType","","Determines how the size should be computed to achieve the one of the\nvisibility mode for the scrollbars.",null,null],[13,"Always","","The scrollbar is always visible. The view size is\nindependent of the content.",328,null],[13,"Automatic","","The scrollbar will appear and disappear as necessary.\nFor example, when all of a `TreeView` can not be seen.",328,null],[13,"Never","","The scrollbar should never appear. In this mode the\ncontent determines the size.",328,null],[13,"External","","Don&#39;t show a scrollbar, but don&#39;t force the\nsize to follow the content. This can be used e.g. to make multiple\nscrolled windows share a scrollbar. Since: 3.16",328,null],[4,"GtkPositionType","","Describes which edge of a widget a certain feature is positioned at, e.g. the\ntabs of a `Notebook`, the handle of a `HandleBox` or the label of a\n`Scale`.",null,null],[13,"Left","","The feature is at the left edge.",329,null],[13,"Right","","The feature is at the right edge.",329,null],[13,"Top","","The feature is at the top edge.",329,null],[13,"Bottom","","The feature is at the bottom edge.",329,null],[4,"GtkPrintDuplex","","See also `PrintSettings::set_duplex`.",null,null],[13,"Simplex","","No duplex.",330,null],[13,"Horizontal","","Horizontal duplex.",330,null],[13,"Vertical","","Vertical duplex.",330,null],[4,"GtkPrintError","","Error codes that identify various errors that can occur while\nusing the GTK+ printing support.",null,null],[13,"General","","An unspecified error occurred.",331,null],[13,"InternalError","","An internal error occurred.",331,null],[13,"Nomem","","A memory allocation failed.",331,null],[13,"InvalidFile","","An error occurred while loading a page setup\nor paper size from a key file.",331,null],[4,"GtkPrintOperationAction","","The `action` parameter to `PrintOperation::run`\ndetermines what action the print operation should perform.",null,null],[13,"PrintDialog","","Show the print dialog.",332,null],[13,"Print","","Start to print without showing\nthe print dialog, based on the current print settings.",332,null],[13,"Preview","","Show the print preview.",332,null],[13,"Export","","Export to a file. This requires\nthe export-filename property to be set.",332,null],[4,"GtkPrintOperationResult","","A value of this type is returned by `PrintOperation::run`.",null,null],[13,"Error","","An error has occured.",333,null],[13,"Apply","","The print settings should be stored.",333,null],[13,"Cancel","","The print operation has been canceled,\nthe print settings should not be stored.",333,null],[13,"InProgress","","The print operation is not complete\nyet. This value will only be returned when running asynchronously.",333,null],[4,"GtkPrintPages","","See also `gtk_print_job_set_pages`",null,null],[13,"All","","All pages.",334,null],[13,"Current","","Current page.",334,null],[13,"Ranges","","Range of pages.",334,null],[13,"Selection","","Selected pages.",334,null],[4,"GtkPrintQuality","","See also `PrintSettings::set_quality`.",null,null],[13,"Low","","Low quality.",335,null],[13,"Normal","","Normal quality.",335,null],[13,"High","","High quality.",335,null],[13,"Draft","","Draft quality.",335,null],[4,"GtkPrintStatus","","The status gives a rough indication of the completion of a running\nprint operation.",null,null],[13,"Initial","","The printing has not started yet; this\nstatus is set initially, and while the print dialog is shown.",336,null],[13,"Preparing","","This status is set while the begin-print\nsignal is emitted and during pagination.",336,null],[13,"GeneratingData","","This status is set while the\npages are being rendered.",336,null],[13,"SendingData","","The print job is being sent off to the\nprinter.",336,null],[13,"Pending","","The print job has been sent to the printer,\nbut is not printed for some reason, e.g. the printer may be stopped.",336,null],[13,"PendingIssue","","Some problem has occurred during\nprinting, e.g. a paper jam.",336,null],[13,"Printing","","The printer is processing the print job.",336,null],[13,"Finished","","The printing has been completed successfully.",336,null],[13,"FinishedAborted","","The printing has been aborted.",336,null],[4,"GtkPropagationPhase","","Describes the stage at which events are fed into a `EventController`.",null,null],[13,"None","","Events are not delivered automatically. Those can be\nmanually fed through `EventControllerExt::handle_event`. This should\nonly be used when full control about when, or whether the controller\nhandles the event is needed.",337,null],[13,"Capture","","Events are delivered in the capture phase. The\ncapture phase happens before the bubble phase, runs from the toplevel down\nto the event widget. This option should only be used on containers that\nmight possibly handle events before their children do.",337,null],[13,"Bubble","","Events are delivered in the bubble phase. The bubble\nphase happens after the capture phase, and before the default handlers\nare run. This phase runs from the event widget, up to the toplevel.",337,null],[13,"Target","","Events are delivered in the default widget event handlers,\n note that widget implementations must chain up on button, motion, touch and\n grab broken handlers for controllers in this phase to be run.",337,null],[4,"GtkRcTokenType","","The `RcTokenType` enumeration represents the tokens\nin the RC file. It is exposed so that theme engines\ncan reuse these tokens when parsing the theme-engine\nspecific portions of a RC file.",null,null],[13,"Invalid","","Deprecated",338,null],[13,"Include","","Deprecated",338,null],[13,"Normal","","Deprecated",338,null],[13,"Active","","Deprecated",338,null],[13,"Prelight","","Deprecated",338,null],[13,"Selected","","Deprecated",338,null],[13,"Insensitive","","Deprecated",338,null],[13,"Fg","","Deprecated",338,null],[13,"Bg","","Deprecated",338,null],[13,"Text","","Deprecated",338,null],[13,"Base","","Deprecated",338,null],[13,"Xthickness","","Deprecated",338,null],[13,"Ythickness","","Deprecated",338,null],[13,"Font","","Deprecated",338,null],[13,"Fontset","","Deprecated",338,null],[13,"FontName","","Deprecated",338,null],[13,"BgPixmap","","Deprecated",338,null],[13,"PixmapPath","","Deprecated",338,null],[13,"Style","","Deprecated",338,null],[13,"Binding","","Deprecated",338,null],[13,"Bind","","Deprecated",338,null],[13,"Widget","","Deprecated",338,null],[13,"WidgetClass","","Deprecated",338,null],[13,"Class","","Deprecated",338,null],[13,"Lowest","","Deprecated",338,null],[13,"Gtk","","Deprecated",338,null],[13,"Application","","Deprecated",338,null],[13,"Theme","","Deprecated",338,null],[13,"Rc","","Deprecated",338,null],[13,"Highest","","Deprecated",338,null],[13,"Engine","","Deprecated",338,null],[13,"ModulePath","","Deprecated",338,null],[13,"ImModulePath","","Deprecated",338,null],[13,"ImModuleFile","","Deprecated",338,null],[13,"Stock","","Deprecated",338,null],[13,"Ltr","","Deprecated",338,null],[13,"Rtl","","Deprecated",338,null],[13,"Color","","Deprecated",338,null],[13,"Unbind","","Deprecated",338,null],[13,"Last","","Deprecated",338,null],[4,"GtkRecentChooserError","","These identify the various errors that can occur while calling\n`RecentChooser` functions.",null,null],[13,"NotFound","","Indicates that a file does not exist",339,null],[13,"InvalidUri","","Indicates a malformed URI",339,null],[4,"GtkRecentManagerError","","Error codes for `RecentManager` operations",null,null],[13,"NotFound","","the URI specified does not exists in\nthe recently used resources list.",340,null],[13,"InvalidUri","","the URI specified is not valid.",340,null],[13,"InvalidEncoding","","the supplied string is not\nUTF-8 encoded.",340,null],[13,"NotRegistered","","no application has registered\nthe specified item.",340,null],[13,"Read","","failure while reading the recently used\nresources file.",340,null],[13,"Write","","failure while writing the recently used\nresources file.",340,null],[13,"Unknown","","unspecified error.",340,null],[4,"GtkRecentSortType","","Used to specify the sorting method to be applyed to the recently\nused resource list.",null,null],[13,"None","","Do not sort the returned list of recently used\nresources.",341,null],[13,"Mru","","Sort the returned list with the most recently used\nitems first.",341,null],[13,"Lru","","Sort the returned list with the least recently used\nitems first.",341,null],[13,"Custom","","Sort the returned list using a custom sorting\nfunction passed using `RecentChooser::set_sort_func`.",341,null],[4,"GtkReliefStyle","","Indicated the relief to be drawn around a `Button`.",null,null],[13,"Normal","","Draw a normal relief.",342,null],[13,"Half","","A half relief. Deprecated in 3.14, does the same as `ReliefStyle::Normal`",342,null],[13,"None","","No relief.",342,null],[4,"GtkResizeMode","","",null,null],[13,"Parent","","Pass resize request to the parent",343,null],[13,"Queue","","Queue resizes on this widget",343,null],[13,"Immediate","","Resize immediately. Deprecated.",343,null],[4,"GtkResponseType","","Predefined values for use as response ids in `DialogExt::add_button`.\nAll predefined values are negative, GTK+ leaves positive values for\napplication-defined response ids.",null,null],[13,"None","","Returned if an action widget has no response id,\nor if the dialog gets programmatically hidden or destroyed",344,null],[13,"Reject","","Generic response id, not used by GTK+ dialogs",344,null],[13,"Accept","","Generic response id, not used by GTK+ dialogs",344,null],[13,"DeleteEvent","","Returned if the dialog is deleted",344,null],[13,"Ok","","Returned by OK buttons in GTK+ dialogs",344,null],[13,"Cancel","","Returned by Cancel buttons in GTK+ dialogs",344,null],[13,"Close","","Returned by Close buttons in GTK+ dialogs",344,null],[13,"Yes","","Returned by Yes buttons in GTK+ dialogs",344,null],[13,"No","","Returned by No buttons in GTK+ dialogs",344,null],[13,"Apply","","Returned by Apply buttons in GTK+ dialogs",344,null],[13,"Help","","Returned by Help buttons in GTK+ dialogs",344,null],[4,"GtkRevealerTransitionType","","These enumeration values describe the possible transitions\nwhen the child of a `Revealer` widget is shown or hidden.",null,null],[13,"None","","No transition",345,null],[13,"Crossfade","","Fade in",345,null],[13,"SlideRight","","Slide in from the left",345,null],[13,"SlideLeft","","Slide in from the right",345,null],[13,"SlideUp","","Slide in from the bottom",345,null],[13,"SlideDown","","Slide in from the top",345,null],[4,"GtkScrollStep","","",null,null],[13,"Steps","","Scroll in steps.",346,null],[13,"Pages","","Scroll by pages.",346,null],[13,"Ends","","Scroll to ends.",346,null],[13,"HorizontalSteps","","Scroll in horizontal steps.",346,null],[13,"HorizontalPages","","Scroll by horizontal pages.",346,null],[13,"HorizontalEnds","","Scroll to the horizontal ends.",346,null],[4,"GtkScrollType","","Scrolling types.",null,null],[13,"None","","No scrolling.",347,null],[13,"Jump","","Jump to new location.",347,null],[13,"StepBackward","","Step backward.",347,null],[13,"StepForward","","Step forward.",347,null],[13,"PageBackward","","Page backward.",347,null],[13,"PageForward","","Page forward.",347,null],[13,"StepUp","","Step up.",347,null],[13,"StepDown","","Step down.",347,null],[13,"PageUp","","Page up.",347,null],[13,"PageDown","","Page down.",347,null],[13,"StepLeft","","Step to the left.",347,null],[13,"StepRight","","Step to the right.",347,null],[13,"PageLeft","","Page to the left.",347,null],[13,"PageRight","","Page to the right.",347,null],[13,"Start","","Scroll to start.",347,null],[13,"End","","Scroll to end.",347,null],[4,"GtkScrollablePolicy","","Defines the policy to be used in a scrollable widget when updating\nthe scrolled window adjustments in a given orientation.",null,null],[13,"Minimum","","Scrollable adjustments are based on the minimum size",348,null],[13,"Natural","","Scrollable adjustments are based on the natural size",348,null],[4,"GtkSelectionMode","","Used to control what selections users are allowed to make.",null,null],[13,"None","","No selection is possible.",349,null],[13,"Single","","Zero or one element may be selected.",349,null],[13,"Browse","","Exactly one element is selected.\nIn some circumstances, such as initially or during a search\noperation, it’s possible for no element to be selected with\n`SelectionMode::Browse`. What is really enforced is that the user\ncan’t deselect a currently selected element except by selecting\nanother element.",349,null],[13,"Multiple","","Any number of elements may be selected.\nThe Ctrl key may be used to enlarge the selection, and Shift\nkey to select between the focus and the child pointed to.\nSome widgets may also allow Click-drag to select a range of elements.",349,null],[4,"GtkSensitivityType","","Determines how GTK+ handles the sensitivity of stepper arrows\nat the end of range widgets.",null,null],[13,"Auto","","The arrow is made insensitive if the\nthumb is at the end",350,null],[13,"On","","The arrow is always sensitive",350,null],[13,"Off","","The arrow is always insensitive",350,null],[4,"GtkShadowType","","Used to change the appearance of an outline typically provided by a `Frame`.",null,null],[13,"None","","No outline.",351,null],[13,"In","","The outline is bevelled inwards.",351,null],[13,"Out","","The outline is bevelled outwards like a button.",351,null],[13,"EtchedIn","","The outline has a sunken 3d appearance.",351,null],[13,"EtchedOut","","The outline has a raised 3d appearance.",351,null],[4,"GtkSizeGroupMode","","The mode of the size group determines the directions in which the size\ngroup affects the requested sizes of its component widgets.",null,null],[13,"None","","group has no effect",352,null],[13,"Horizontal","","group affects horizontal requisition",352,null],[13,"Vertical","","group affects vertical requisition",352,null],[13,"Both","","group affects both horizontal and vertical requisition",352,null],[4,"GtkSizeRequestMode","","Specifies a preference for height-for-width or\nwidth-for-height geometry management.",null,null],[13,"HeightForWidth","","Prefer height-for-width geometry management",353,null],[13,"WidthForHeight","","Prefer width-for-height geometry management",353,null],[13,"ConstantSize","","Don’t trade height-for-width or width-for-height",353,null],[4,"GtkSortType","","Determines the direction of a sort.",null,null],[13,"Ascending","","Sorting is in ascending order.",354,null],[13,"Descending","","Sorting is in descending order.",354,null],[4,"GtkSpinButtonUpdatePolicy","","The spin button update policy determines whether the spin button displays\nvalues even if they are outside the bounds of its adjustment.\nSee `SpinButton::set_update_policy`.",null,null],[13,"Always","","When refreshing your `SpinButton`, the value is\nalways displayed",355,null],[13,"IfValid","","When refreshing your `SpinButton`, the value is\nonly displayed if it is valid within the bounds of the spin button&#39;s\nadjustment",355,null],[4,"GtkSpinType","","The values of the `SpinType` enumeration are used to specify the\nchange to make in `SpinButton::spin`.",null,null],[13,"StepForward","","Increment by the adjustments step increment.",356,null],[13,"StepBackward","","Decrement by the adjustments step increment.",356,null],[13,"PageForward","","Increment by the adjustments page increment.",356,null],[13,"PageBackward","","Decrement by the adjustments page increment.",356,null],[13,"Home","","Go to the adjustments lower bound.",356,null],[13,"End","","Go to the adjustments upper bound.",356,null],[13,"UserDefined","","Change by a specified amount.",356,null],[4,"GtkStackTransitionType","","These enumeration values describe the possible transitions\nbetween pages in a `Stack` widget.",null,null],[13,"None","","No transition",357,null],[13,"Crossfade","","A cross-fade",357,null],[13,"SlideRight","","Slide from left to right",357,null],[13,"SlideLeft","","Slide from right to left",357,null],[13,"SlideUp","","Slide from bottom up",357,null],[13,"SlideDown","","Slide from top down",357,null],[13,"SlideLeftRight","","Slide from left or right according to the children order",357,null],[13,"SlideUpDown","","Slide from top down or bottom up according to the order",357,null],[13,"OverUp","","Cover the old page by sliding up. Since 3.12",357,null],[13,"OverDown","","Cover the old page by sliding down. Since: 3.12",357,null],[13,"OverLeft","","Cover the old page by sliding to the left. Since: 3.12",357,null],[13,"OverRight","","Cover the old page by sliding to the right. Since: 3.12",357,null],[13,"UnderUp","","Uncover the new page by sliding up. Since 3.12",357,null],[13,"UnderDown","","Uncover the new page by sliding down. Since: 3.12",357,null],[13,"UnderLeft","","Uncover the new page by sliding to the left. Since: 3.12",357,null],[13,"UnderRight","","Uncover the new page by sliding to the right. Since: 3.12",357,null],[13,"OverUpDown","","Cover the old page sliding up or uncover the new page sliding down, according to order. Since: 3.12",357,null],[13,"OverDownUp","","Cover the old page sliding down or uncover the new page sliding up, according to order. Since: 3.14",357,null],[13,"OverLeftRight","","Cover the old page sliding left or uncover the new page sliding right, according to order. Since: 3.14",357,null],[13,"OverRightLeft","","Cover the old page sliding right or uncover the new page sliding left, according to order. Since: 3.14",357,null],[4,"GtkStateType","","This type indicates the current state of a widget; the state determines how\nthe widget is drawn. The `StateType` enumeration is also used to\nidentify different colors in a `Style` for drawing, so states can be\nused for subparts of a widget as well as entire widgets.",null,null],[13,"Normal","","State during normal operation.",358,null],[13,"Active","","State of a currently active widget, such as a depressed button.",358,null],[13,"Prelight","","State indicating that the mouse pointer is over\nthe widget and the widget will respond to mouse clicks.",358,null],[13,"Selected","","State of a selected item, such the selected row in a list.",358,null],[13,"Insensitive","","State indicating that the widget is\nunresponsive to user actions.",358,null],[13,"Inconsistent","","The widget is inconsistent, such as checkbuttons\nor radiobuttons that aren’t either set to `true` nor `false`,\nor buttons requiring the user attention.",358,null],[13,"Focused","","The widget has the keyboard focus.",358,null],[4,"GtkTextBufferTargetInfo","","These values are used as “info” for the targets contained in the\nlists returned by `TextBuffer::get_copy_target_list` and\n`TextBuffer::get_paste_target_list`.",null,null],[13,"BufferContents","","Buffer contents",359,null],[13,"RichText","","Rich text",359,null],[13,"Text","","Text",359,null],[4,"GtkTextDirection","","Reading directions for text.",null,null],[13,"None","","No direction.",360,null],[13,"Ltr","","Left to right text direction.",360,null],[13,"Rtl","","Right to left text direction.",360,null],[4,"GtkTextExtendSelection","","Granularity types that extend the text selection. Use the\n`TextView::extend-selection` signal to customize the selection.",null,null],[13,"Word","","Selects the current word. It is triggered by\na double-click for example.",361,null],[13,"Line","","Selects the current line. It is triggered by\n a triple-click for example.",361,null],[4,"GtkTextViewLayer","","Used to reference the layers of `TextView` for the purpose of customized\ndrawing with the ::draw_layer vfunc.",null,null],[13,"Below","","The layer rendered below the text (but above the background).",362,null],[13,"Above","","The layer rendered above the text.",362,null],[4,"GtkTextWindowType","","Used to reference the parts of `TextView`.",null,null],[13,"Private","","",363,null],[13,"Widget","","Window that floats over scrolling areas.",363,null],[13,"Text","","Scrollable text window.",363,null],[13,"Left","","Left side border window.",363,null],[13,"Right","","Right side border window.",363,null],[13,"Top","","Top border window.",363,null],[13,"Bottom","","Bottom border window.",363,null],[4,"GtkToolbarSpaceStyle","","Whether spacers are vertical lines or just blank.",null,null],[13,"Empty","","Use blank spacers.",364,null],[13,"Line","","Use vertical lines for spacers.",364,null],[4,"GtkToolbarStyle","","Used to customize the appearance of a `Toolbar`. Note that\nsetting the toolbar style overrides the user’s preferences\nfor the default toolbar style. Note that if the button has only\na label set and GTK_TOOLBAR_ICONS is used, the label will be\nvisible, and vice versa.",null,null],[13,"Icons","","Buttons display only icons in the toolbar.",365,null],[13,"Text","","Buttons display only text labels in the toolbar.",365,null],[13,"Both","","Buttons display text and icons in the toolbar.",365,null],[13,"BothHoriz","","Buttons display icons and text alongside each\nother, rather than vertically stacked",365,null],[4,"GtkTreeViewColumnSizing","","The sizing method the column uses to determine its width. Please note\nthat `TreeViewColumnSizing::Autosize` are inefficient for large views, and\ncan make columns appear choppy.",null,null],[13,"GrowOnly","","Columns only get bigger in reaction to changes in the model",366,null],[13,"Autosize","","Columns resize to be the optimal size everytime the model changes.",366,null],[13,"Fixed","","Columns are a fixed numbers of pixels wide.",366,null],[4,"GtkTreeViewDropPosition","","An enum for determining where a dropped row goes.",null,null],[13,"Before","","dropped row is inserted before",367,null],[13,"After","","dropped row is inserted after",367,null],[13,"IntoOrBefore","","dropped row becomes a child or is inserted before",367,null],[13,"IntoOrAfter","","dropped row becomes a child or is inserted after",367,null],[4,"GtkTreeViewGridLines","","Used to indicate which grid lines to draw in a tree view.",null,null],[13,"None","","No grid lines.",368,null],[13,"Horizontal","","Horizontal grid lines.",368,null],[13,"Vertical","","Vertical grid lines.",368,null],[13,"Both","","Horizontal and vertical grid lines.",368,null],[4,"GtkUnit","","See also `PrintSettings::set_paper_width`.",null,null],[13,"None","","No units.",369,null],[13,"Points","","Dimensions in points.",369,null],[13,"Inch","","Dimensions in inches.",369,null],[13,"Mm","","Dimensions in millimeters",369,null],[4,"GtkWidgetHelpType","","Kinds of widget-specific help. Used by the ::show-help signal.",null,null],[13,"Tooltip","","Tooltip.",370,null],[13,"WhatsThis","","What’s this.",370,null],[4,"GtkWindowPosition","","Window placement can be influenced using this enumeration. Note that\nusing `WindowPosition::CenterAlways` is almost always a bad idea.\nIt won’t necessarily work well with all window managers or on all windowing systems.",null,null],[13,"None","","No influence is made on placement.",371,null],[13,"Center","","Windows should be placed in the center of the screen.",371,null],[13,"Mouse","","Windows should be placed at the current mouse position.",371,null],[13,"CenterAlways","","Keep window centered as it changes size, etc.",371,null],[13,"CenterOnParent","","Center the window on its transient\nparent (see `WindowExt::set_transient_for`).",371,null],[4,"GtkWindowType","","A `Window` can be one of these types. Most things you’d consider a\n“window” should have type `WindowType::Toplevel`; windows with this type\nare managed by the window manager and have a frame by default (call\n`WindowExt::set_decorated` to toggle the frame). Windows with type\n`WindowType::Popup` are ignored by the window manager; window manager\nkeybindings won’t work on them, the window manager won’t decorate the\nwindow with a frame, many GTK+ features that rely on the window\nmanager will not work (e.g. resize grips and\nmaximization/minimization). `WindowType::Popup` is used to implement\nwidgets such as `Menu` or tooltips that you normally don’t think of\nas windows per se. Nearly all windows should be `WindowType::Toplevel`.\nIn particular, do not use `WindowType::Popup` just to turn off\nthe window borders; use `WindowExt::set_decorated` for that.",null,null],[13,"Toplevel","","A regular window, such as a dialog.",372,null],[13,"Popup","","A special window such as a tooltip.",372,null],[4,"GtkWrapMode","","Describes a type of line wrapping.",null,null],[13,"None","","do not wrap lines; just make the text area wider",373,null],[13,"Char","","wrap text, breaking lines anywhere the cursor can\nappear (between characters, usually - if you want to be technical,\nbetween graphemes, see `pango_get_log_attrs`)",373,null],[13,"Word","","wrap text, breaking lines in between words",373,null],[13,"WordChar","","wrap text, breaking lines in between words, or if\nthat is not enough, also between graphemes",373,null],[5,"gtk_builder_error_quark","","",null,null],[5,"gtk_css_provider_error_quark","","",null,null],[5,"gtk_file_chooser_error_quark","","",null,null],[5,"gtk_icon_size_from_name","","",null,null],[5,"gtk_icon_size_get_name","","",null,null],[5,"gtk_icon_size_lookup","","",null,null],[5,"gtk_icon_size_lookup_for_settings","","",null,null],[5,"gtk_icon_size_register","","",null,null],[5,"gtk_icon_size_register_alias","","",null,null],[5,"gtk_icon_theme_error_quark","","",null,null],[5,"gtk_print_error_quark","","",null,null],[5,"gtk_recent_chooser_error_quark","","",null,null],[5,"gtk_recent_manager_error_quark","","",null,null],[5,"gtk_binding_entry_add_signal","","",null,null],[5,"gtk_binding_entry_add_signal_from_string","","",null,null],[5,"gtk_binding_entry_add_signall","","",null,null],[5,"gtk_binding_entry_remove","","",null,null],[5,"gtk_binding_entry_skip","","",null,null],[5,"gtk_binding_set_activate","","",null,null],[5,"gtk_binding_set_add_path","","",null,null],[5,"gtk_binding_set_by_class","","",null,null],[5,"gtk_binding_set_find","","",null,null],[5,"gtk_binding_set_new","","",null,null],[5,"gtk_border_get_type","","",null,null],[5,"gtk_border_new","","",null,null],[5,"gtk_border_copy","","",null,null],[5,"gtk_border_free","","",null,null],[5,"gtk_cell_area_class_find_cell_property","","",null,null],[5,"gtk_cell_area_class_install_cell_property","","",null,null],[5,"gtk_cell_area_class_list_cell_properties","","",null,null],[5,"gtk_cell_renderer_class_set_accessible_type","","",null,null],[5,"gtk_container_class_handle_border_width","","",null,null],[5,"gtk_container_class_install_child_property","","",null,null],[5,"gtk_css_section_get_type","","",null,null],[5,"gtk_css_section_get_end_line","","",null,null],[5,"gtk_css_section_get_end_position","","",null,null],[5,"gtk_css_section_get_file","","",null,null],[5,"gtk_css_section_get_parent","","",null,null],[5,"gtk_css_section_get_section_type","","",null,null],[5,"gtk_css_section_get_start_line","","",null,null],[5,"gtk_css_section_get_start_position","","",null,null],[5,"gtk_css_section_ref","","",null,null],[5,"gtk_css_section_unref","","",null,null],[5,"gtk_gradient_get_type","","",null,null],[5,"gtk_gradient_new_linear","","",null,null],[5,"gtk_gradient_new_radial","","",null,null],[5,"gtk_gradient_add_color_stop","","",null,null],[5,"gtk_gradient_ref","","",null,null],[5,"gtk_gradient_resolve","","",null,null],[5,"gtk_gradient_resolve_for_context","","",null,null],[5,"gtk_gradient_to_string","","",null,null],[5,"gtk_gradient_unref","","",null,null],[5,"gtk_icon_set_get_type","","",null,null],[5,"gtk_icon_set_new","","",null,null],[5,"gtk_icon_set_new_from_pixbuf","","",null,null],[5,"gtk_icon_set_add_source","","",null,null],[5,"gtk_icon_set_copy","","",null,null],[5,"gtk_icon_set_get_sizes","","",null,null],[5,"gtk_icon_set_ref","","",null,null],[5,"gtk_icon_set_render_icon","","",null,null],[5,"gtk_icon_set_render_icon_pixbuf","","",null,null],[5,"gtk_icon_set_render_icon_surface","","",null,null],[5,"gtk_icon_set_unref","","",null,null],[5,"gtk_icon_source_get_type","","",null,null],[5,"gtk_icon_source_new","","",null,null],[5,"gtk_icon_source_copy","","",null,null],[5,"gtk_icon_source_free","","",null,null],[5,"gtk_icon_source_get_direction","","",null,null],[5,"gtk_icon_source_get_direction_wildcarded","","",null,null],[5,"gtk_icon_source_get_filename","","",null,null],[5,"gtk_icon_source_get_icon_name","","",null,null],[5,"gtk_icon_source_get_pixbuf","","",null,null],[5,"gtk_icon_source_get_size","","",null,null],[5,"gtk_icon_source_get_size_wildcarded","","",null,null],[5,"gtk_icon_source_get_state","","",null,null],[5,"gtk_icon_source_get_state_wildcarded","","",null,null],[5,"gtk_icon_source_set_direction","","",null,null],[5,"gtk_icon_source_set_direction_wildcarded","","",null,null],[5,"gtk_icon_source_set_filename","","",null,null],[5,"gtk_icon_source_set_icon_name","","",null,null],[5,"gtk_icon_source_set_pixbuf","","",null,null],[5,"gtk_icon_source_set_size","","",null,null],[5,"gtk_icon_source_set_size_wildcarded","","",null,null],[5,"gtk_icon_source_set_state","","",null,null],[5,"gtk_icon_source_set_state_wildcarded","","",null,null],[5,"gtk_paper_size_get_type","","",null,null],[5,"gtk_paper_size_new","","",null,null],[5,"gtk_paper_size_new_custom","","",null,null],[5,"gtk_paper_size_new_from_ipp","","",null,null],[5,"gtk_paper_size_new_from_key_file","","",null,null],[5,"gtk_paper_size_new_from_ppd","","",null,null],[5,"gtk_paper_size_copy","","",null,null],[5,"gtk_paper_size_free","","",null,null],[5,"gtk_paper_size_get_default_bottom_margin","","",null,null],[5,"gtk_paper_size_get_default_left_margin","","",null,null],[5,"gtk_paper_size_get_default_right_margin","","",null,null],[5,"gtk_paper_size_get_default_top_margin","","",null,null],[5,"gtk_paper_size_get_display_name","","",null,null],[5,"gtk_paper_size_get_height","","",null,null],[5,"gtk_paper_size_get_name","","",null,null],[5,"gtk_paper_size_get_ppd_name","","",null,null],[5,"gtk_paper_size_get_width","","",null,null],[5,"gtk_paper_size_is_custom","","",null,null],[5,"gtk_paper_size_is_equal","","",null,null],[5,"gtk_paper_size_is_ipp","","",null,null],[5,"gtk_paper_size_set_size","","",null,null],[5,"gtk_paper_size_to_key_file","","",null,null],[5,"gtk_paper_size_get_default","","",null,null],[5,"gtk_paper_size_get_paper_sizes","","",null,null],[5,"gtk_rc_property_parse_border","","",null,null],[5,"gtk_rc_property_parse_color","","",null,null],[5,"gtk_rc_property_parse_enum","","",null,null],[5,"gtk_rc_property_parse_flags","","",null,null],[5,"gtk_rc_property_parse_requisition","","",null,null],[5,"gtk_recent_info_get_type","","",null,null],[5,"gtk_recent_info_create_app_info","","",null,null],[5,"gtk_recent_info_exists","","",null,null],[5,"gtk_recent_info_get_added","","",null,null],[5,"gtk_recent_info_get_age","","",null,null],[5,"gtk_recent_info_get_application_info","","",null,null],[5,"gtk_recent_info_get_applications","","",null,null],[5,"gtk_recent_info_get_description","","",null,null],[5,"gtk_recent_info_get_display_name","","",null,null],[5,"gtk_recent_info_get_gicon","","",null,null],[5,"gtk_recent_info_get_groups","","",null,null],[5,"gtk_recent_info_get_icon","","",null,null],[5,"gtk_recent_info_get_mime_type","","",null,null],[5,"gtk_recent_info_get_modified","","",null,null],[5,"gtk_recent_info_get_private_hint","","",null,null],[5,"gtk_recent_info_get_short_name","","",null,null],[5,"gtk_recent_info_get_uri","","",null,null],[5,"gtk_recent_info_get_uri_display","","",null,null],[5,"gtk_recent_info_get_visited","","",null,null],[5,"gtk_recent_info_has_application","","",null,null],[5,"gtk_recent_info_has_group","","",null,null],[5,"gtk_recent_info_is_local","","",null,null],[5,"gtk_recent_info_last_application","","",null,null],[5,"gtk_recent_info_match","","",null,null],[5,"gtk_recent_info_ref","","",null,null],[5,"gtk_recent_info_unref","","",null,null],[5,"gtk_requisition_get_type","","",null,null],[5,"gtk_requisition_new","","",null,null],[5,"gtk_requisition_copy","","",null,null],[5,"gtk_requisition_free","","",null,null],[5,"gtk_selection_data_get_type","","",null,null],[5,"gtk_selection_data_copy","","",null,null],[5,"gtk_selection_data_free","","",null,null],[5,"gtk_selection_data_get_data","","",null,null],[5,"gtk_selection_data_get_data_type","","",null,null],[5,"gtk_selection_data_get_data_with_length","","",null,null],[5,"gtk_selection_data_get_display","","",null,null],[5,"gtk_selection_data_get_format","","",null,null],[5,"gtk_selection_data_get_length","","",null,null],[5,"gtk_selection_data_get_pixbuf","","",null,null],[5,"gtk_selection_data_get_selection","","",null,null],[5,"gtk_selection_data_get_target","","",null,null],[5,"gtk_selection_data_get_targets","","",null,null],[5,"gtk_selection_data_get_text","","",null,null],[5,"gtk_selection_data_get_uris","","",null,null],[5,"gtk_selection_data_set","","",null,null],[5,"gtk_selection_data_set_pixbuf","","",null,null],[5,"gtk_selection_data_set_text","","",null,null],[5,"gtk_selection_data_set_uris","","",null,null],[5,"gtk_selection_data_targets_include_image","","",null,null],[5,"gtk_selection_data_targets_include_rich_text","","",null,null],[5,"gtk_selection_data_targets_include_text","","",null,null],[5,"gtk_selection_data_targets_include_uri","","",null,null],[5,"gtk_stock_item_copy","","",null,null],[5,"gtk_stock_item_free","","",null,null],[5,"gtk_symbolic_color_get_type","","",null,null],[5,"gtk_symbolic_color_new_alpha","","",null,null],[5,"gtk_symbolic_color_new_literal","","",null,null],[5,"gtk_symbolic_color_new_mix","","",null,null],[5,"gtk_symbolic_color_new_name","","",null,null],[5,"gtk_symbolic_color_new_shade","","",null,null],[5,"gtk_symbolic_color_new_win32","","",null,null],[5,"gtk_symbolic_color_ref","","",null,null],[5,"gtk_symbolic_color_resolve","","",null,null],[5,"gtk_symbolic_color_to_string","","",null,null],[5,"gtk_symbolic_color_unref","","",null,null],[5,"gtk_target_entry_get_type","","",null,null],[5,"gtk_target_entry_new","","",null,null],[5,"gtk_target_entry_copy","","",null,null],[5,"gtk_target_entry_free","","",null,null],[5,"gtk_target_list_get_type","","",null,null],[5,"gtk_target_list_new","","",null,null],[5,"gtk_target_list_add","","",null,null],[5,"gtk_target_list_add_image_targets","","",null,null],[5,"gtk_target_list_add_rich_text_targets","","",null,null],[5,"gtk_target_list_add_table","","",null,null],[5,"gtk_target_list_add_text_targets","","",null,null],[5,"gtk_target_list_add_uri_targets","","",null,null],[5,"gtk_target_list_find","","",null,null],[5,"gtk_target_list_ref","","",null,null],[5,"gtk_target_list_remove","","",null,null],[5,"gtk_target_list_unref","","",null,null],[5,"gtk_text_attributes_get_type","","",null,null],[5,"gtk_text_attributes_new","","",null,null],[5,"gtk_text_attributes_copy","","",null,null],[5,"gtk_text_attributes_copy_values","","",null,null],[5,"gtk_text_attributes_ref","","",null,null],[5,"gtk_text_attributes_unref","","",null,null],[5,"gtk_text_iter_get_type","","",null,null],[5,"gtk_text_iter_assign","","",null,null],[5,"gtk_text_iter_backward_char","","",null,null],[5,"gtk_text_iter_backward_chars","","",null,null],[5,"gtk_text_iter_backward_cursor_position","","",null,null],[5,"gtk_text_iter_backward_cursor_positions","","",null,null],[5,"gtk_text_iter_backward_find_char","","",null,null],[5,"gtk_text_iter_backward_line","","",null,null],[5,"gtk_text_iter_backward_lines","","",null,null],[5,"gtk_text_iter_backward_search","","",null,null],[5,"gtk_text_iter_backward_sentence_start","","",null,null],[5,"gtk_text_iter_backward_sentence_starts","","",null,null],[5,"gtk_text_iter_backward_to_tag_toggle","","",null,null],[5,"gtk_text_iter_backward_visible_cursor_position","","",null,null],[5,"gtk_text_iter_backward_visible_cursor_positions","","",null,null],[5,"gtk_text_iter_backward_visible_line","","",null,null],[5,"gtk_text_iter_backward_visible_lines","","",null,null],[5,"gtk_text_iter_backward_visible_word_start","","",null,null],[5,"gtk_text_iter_backward_visible_word_starts","","",null,null],[5,"gtk_text_iter_backward_word_start","","",null,null],[5,"gtk_text_iter_backward_word_starts","","",null,null],[5,"gtk_text_iter_begins_tag","","",null,null],[5,"gtk_text_iter_can_insert","","",null,null],[5,"gtk_text_iter_compare","","",null,null],[5,"gtk_text_iter_copy","","",null,null],[5,"gtk_text_iter_editable","","",null,null],[5,"gtk_text_iter_ends_line","","",null,null],[5,"gtk_text_iter_ends_sentence","","",null,null],[5,"gtk_text_iter_ends_tag","","",null,null],[5,"gtk_text_iter_ends_word","","",null,null],[5,"gtk_text_iter_equal","","",null,null],[5,"gtk_text_iter_forward_char","","",null,null],[5,"gtk_text_iter_forward_chars","","",null,null],[5,"gtk_text_iter_forward_cursor_position","","",null,null],[5,"gtk_text_iter_forward_cursor_positions","","",null,null],[5,"gtk_text_iter_forward_find_char","","",null,null],[5,"gtk_text_iter_forward_line","","",null,null],[5,"gtk_text_iter_forward_lines","","",null,null],[5,"gtk_text_iter_forward_search","","",null,null],[5,"gtk_text_iter_forward_sentence_end","","",null,null],[5,"gtk_text_iter_forward_sentence_ends","","",null,null],[5,"gtk_text_iter_forward_to_end","","",null,null],[5,"gtk_text_iter_forward_to_line_end","","",null,null],[5,"gtk_text_iter_forward_to_tag_toggle","","",null,null],[5,"gtk_text_iter_forward_visible_cursor_position","","",null,null],[5,"gtk_text_iter_forward_visible_cursor_positions","","",null,null],[5,"gtk_text_iter_forward_visible_line","","",null,null],[5,"gtk_text_iter_forward_visible_lines","","",null,null],[5,"gtk_text_iter_forward_visible_word_end","","",null,null],[5,"gtk_text_iter_forward_visible_word_ends","","",null,null],[5,"gtk_text_iter_forward_word_end","","",null,null],[5,"gtk_text_iter_forward_word_ends","","",null,null],[5,"gtk_text_iter_free","","",null,null],[5,"gtk_text_iter_get_attributes","","",null,null],[5,"gtk_text_iter_get_buffer","","",null,null],[5,"gtk_text_iter_get_bytes_in_line","","",null,null],[5,"gtk_text_iter_get_char","","",null,null],[5,"gtk_text_iter_get_chars_in_line","","",null,null],[5,"gtk_text_iter_get_child_anchor","","",null,null],[5,"gtk_text_iter_get_language","","",null,null],[5,"gtk_text_iter_get_line","","",null,null],[5,"gtk_text_iter_get_line_index","","",null,null],[5,"gtk_text_iter_get_line_offset","","",null,null],[5,"gtk_text_iter_get_marks","","",null,null],[5,"gtk_text_iter_get_offset","","",null,null],[5,"gtk_text_iter_get_pixbuf","","",null,null],[5,"gtk_text_iter_get_slice","","",null,null],[5,"gtk_text_iter_get_tags","","",null,null],[5,"gtk_text_iter_get_text","","",null,null],[5,"gtk_text_iter_get_toggled_tags","","",null,null],[5,"gtk_text_iter_get_visible_line_index","","",null,null],[5,"gtk_text_iter_get_visible_line_offset","","",null,null],[5,"gtk_text_iter_get_visible_slice","","",null,null],[5,"gtk_text_iter_get_visible_text","","",null,null],[5,"gtk_text_iter_has_tag","","",null,null],[5,"gtk_text_iter_in_range","","",null,null],[5,"gtk_text_iter_inside_sentence","","",null,null],[5,"gtk_text_iter_inside_word","","",null,null],[5,"gtk_text_iter_is_cursor_position","","",null,null],[5,"gtk_text_iter_is_end","","",null,null],[5,"gtk_text_iter_is_start","","",null,null],[5,"gtk_text_iter_order","","",null,null],[5,"gtk_text_iter_set_line","","",null,null],[5,"gtk_text_iter_set_line_index","","",null,null],[5,"gtk_text_iter_set_line_offset","","",null,null],[5,"gtk_text_iter_set_offset","","",null,null],[5,"gtk_text_iter_set_visible_line_index","","",null,null],[5,"gtk_text_iter_set_visible_line_offset","","",null,null],[5,"gtk_text_iter_starts_line","","",null,null],[5,"gtk_text_iter_starts_sentence","","",null,null],[5,"gtk_text_iter_starts_word","","",null,null],[5,"gtk_text_iter_toggles_tag","","",null,null],[5,"gtk_tree_iter_get_type","","",null,null],[5,"gtk_tree_iter_copy","","",null,null],[5,"gtk_tree_iter_free","","",null,null],[5,"gtk_tree_path_get_type","","",null,null],[5,"gtk_tree_path_new","","",null,null],[5,"gtk_tree_path_new_first","","",null,null],[5,"gtk_tree_path_new_from_indices","","",null,null],[5,"gtk_tree_path_new_from_indicesv","","",null,null],[5,"gtk_tree_path_new_from_string","","",null,null],[5,"gtk_tree_path_append_index","","",null,null],[5,"gtk_tree_path_compare","","",null,null],[5,"gtk_tree_path_copy","","",null,null],[5,"gtk_tree_path_down","","",null,null],[5,"gtk_tree_path_free","","",null,null],[5,"gtk_tree_path_get_depth","","",null,null],[5,"gtk_tree_path_get_indices","","",null,null],[5,"gtk_tree_path_get_indices_with_depth","","",null,null],[5,"gtk_tree_path_is_ancestor","","",null,null],[5,"gtk_tree_path_is_descendant","","",null,null],[5,"gtk_tree_path_next","","",null,null],[5,"gtk_tree_path_prepend_index","","",null,null],[5,"gtk_tree_path_prev","","",null,null],[5,"gtk_tree_path_to_string","","",null,null],[5,"gtk_tree_path_up","","",null,null],[5,"gtk_tree_row_reference_get_type","","",null,null],[5,"gtk_tree_row_reference_new","","",null,null],[5,"gtk_tree_row_reference_new_proxy","","",null,null],[5,"gtk_tree_row_reference_copy","","",null,null],[5,"gtk_tree_row_reference_free","","",null,null],[5,"gtk_tree_row_reference_get_model","","",null,null],[5,"gtk_tree_row_reference_get_path","","",null,null],[5,"gtk_tree_row_reference_valid","","",null,null],[5,"gtk_tree_row_reference_deleted","","",null,null],[5,"gtk_tree_row_reference_inserted","","",null,null],[5,"gtk_tree_row_reference_reordered","","",null,null],[5,"gtk_widget_class_bind_template_callback_full","","",null,null],[5,"gtk_widget_class_bind_template_child_full","","",null,null],[5,"gtk_widget_class_find_style_property","","",null,null],[5,"gtk_widget_class_install_style_property","","",null,null],[5,"gtk_widget_class_install_style_property_parser","","",null,null],[5,"gtk_widget_class_list_style_properties","","",null,null],[5,"gtk_widget_class_set_accessible_role","","",null,null],[5,"gtk_widget_class_set_accessible_type","","",null,null],[5,"gtk_widget_class_set_connect_func","","",null,null],[5,"gtk_widget_class_set_template","","",null,null],[5,"gtk_widget_class_set_template_from_resource","","",null,null],[5,"gtk_widget_path_get_type","","",null,null],[5,"gtk_widget_path_new","","",null,null],[5,"gtk_widget_path_append_for_widget","","",null,null],[5,"gtk_widget_path_append_type","","",null,null],[5,"gtk_widget_path_append_with_siblings","","",null,null],[5,"gtk_widget_path_copy","","",null,null],[5,"gtk_widget_path_free","","",null,null],[5,"gtk_widget_path_get_object_type","","",null,null],[5,"gtk_widget_path_has_parent","","",null,null],[5,"gtk_widget_path_is_type","","",null,null],[5,"gtk_widget_path_iter_add_class","","",null,null],[5,"gtk_widget_path_iter_add_region","","",null,null],[5,"gtk_widget_path_iter_clear_classes","","",null,null],[5,"gtk_widget_path_iter_clear_regions","","",null,null],[5,"gtk_widget_path_iter_get_name","","",null,null],[5,"gtk_widget_path_iter_get_object_type","","",null,null],[5,"gtk_widget_path_iter_get_sibling_index","","",null,null],[5,"gtk_widget_path_iter_get_siblings","","",null,null],[5,"gtk_widget_path_iter_get_state","","",null,null],[5,"gtk_widget_path_iter_has_class","","",null,null],[5,"gtk_widget_path_iter_has_name","","",null,null],[5,"gtk_widget_path_iter_has_qclass","","",null,null],[5,"gtk_widget_path_iter_has_qname","","",null,null],[5,"gtk_widget_path_iter_has_qregion","","",null,null],[5,"gtk_widget_path_iter_has_region","","",null,null],[5,"gtk_widget_path_iter_list_classes","","",null,null],[5,"gtk_widget_path_iter_list_regions","","",null,null],[5,"gtk_widget_path_iter_remove_class","","",null,null],[5,"gtk_widget_path_iter_remove_region","","",null,null],[5,"gtk_widget_path_iter_set_name","","",null,null],[5,"gtk_widget_path_iter_set_object_type","","",null,null],[5,"gtk_widget_path_iter_set_state","","",null,null],[5,"gtk_widget_path_length","","",null,null],[5,"gtk_widget_path_prepend_type","","",null,null],[5,"gtk_widget_path_ref","","",null,null],[5,"gtk_widget_path_to_string","","",null,null],[5,"gtk_widget_path_unref","","",null,null],[5,"gtk_about_dialog_get_type","","",null,null],[5,"gtk_about_dialog_new","","",null,null],[5,"gtk_about_dialog_add_credit_section","","",null,null],[5,"gtk_about_dialog_get_artists","","",null,null],[5,"gtk_about_dialog_get_authors","","",null,null],[5,"gtk_about_dialog_get_comments","","",null,null],[5,"gtk_about_dialog_get_copyright","","",null,null],[5,"gtk_about_dialog_get_documenters","","",null,null],[5,"gtk_about_dialog_get_license","","",null,null],[5,"gtk_about_dialog_get_license_type","","",null,null],[5,"gtk_about_dialog_get_logo","","",null,null],[5,"gtk_about_dialog_get_logo_icon_name","","",null,null],[5,"gtk_about_dialog_get_program_name","","",null,null],[5,"gtk_about_dialog_get_translator_credits","","",null,null],[5,"gtk_about_dialog_get_version","","",null,null],[5,"gtk_about_dialog_get_website","","",null,null],[5,"gtk_about_dialog_get_website_label","","",null,null],[5,"gtk_about_dialog_get_wrap_license","","",null,null],[5,"gtk_about_dialog_set_artists","","",null,null],[5,"gtk_about_dialog_set_authors","","",null,null],[5,"gtk_about_dialog_set_comments","","",null,null],[5,"gtk_about_dialog_set_copyright","","",null,null],[5,"gtk_about_dialog_set_documenters","","",null,null],[5,"gtk_about_dialog_set_license","","",null,null],[5,"gtk_about_dialog_set_license_type","","",null,null],[5,"gtk_about_dialog_set_logo","","",null,null],[5,"gtk_about_dialog_set_logo_icon_name","","",null,null],[5,"gtk_about_dialog_set_program_name","","",null,null],[5,"gtk_about_dialog_set_translator_credits","","",null,null],[5,"gtk_about_dialog_set_version","","",null,null],[5,"gtk_about_dialog_set_website","","",null,null],[5,"gtk_about_dialog_set_website_label","","",null,null],[5,"gtk_about_dialog_set_wrap_license","","",null,null],[5,"gtk_accel_group_get_type","","",null,null],[5,"gtk_accel_group_new","","",null,null],[5,"gtk_accel_group_from_accel_closure","","",null,null],[5,"gtk_accel_group_activate","","",null,null],[5,"gtk_accel_group_connect","","",null,null],[5,"gtk_accel_group_connect_by_path","","",null,null],[5,"gtk_accel_group_disconnect","","",null,null],[5,"gtk_accel_group_disconnect_key","","",null,null],[5,"gtk_accel_group_find","","",null,null],[5,"gtk_accel_group_get_is_locked","","",null,null],[5,"gtk_accel_group_get_modifier_mask","","",null,null],[5,"gtk_accel_group_lock","","",null,null],[5,"gtk_accel_group_query","","",null,null],[5,"gtk_accel_group_unlock","","",null,null],[5,"gtk_accel_label_get_type","","",null,null],[5,"gtk_accel_label_new","","",null,null],[5,"gtk_accel_label_get_accel","","",null,null],[5,"gtk_accel_label_get_accel_widget","","",null,null],[5,"gtk_accel_label_get_accel_width","","",null,null],[5,"gtk_accel_label_refetch","","",null,null],[5,"gtk_accel_label_set_accel","","",null,null],[5,"gtk_accel_label_set_accel_closure","","",null,null],[5,"gtk_accel_label_set_accel_widget","","",null,null],[5,"gtk_accel_map_get_type","","",null,null],[5,"gtk_accel_map_add_entry","","",null,null],[5,"gtk_accel_map_add_filter","","",null,null],[5,"gtk_accel_map_change_entry","","",null,null],[5,"gtk_accel_map_foreach","","",null,null],[5,"gtk_accel_map_foreach_unfiltered","","",null,null],[5,"gtk_accel_map_get","","",null,null],[5,"gtk_accel_map_load","","",null,null],[5,"gtk_accel_map_load_fd","","",null,null],[5,"gtk_accel_map_load_scanner","","",null,null],[5,"gtk_accel_map_lock_path","","",null,null],[5,"gtk_accel_map_lookup_entry","","",null,null],[5,"gtk_accel_map_save","","",null,null],[5,"gtk_accel_map_save_fd","","",null,null],[5,"gtk_accel_map_unlock_path","","",null,null],[5,"gtk_accessible_get_type","","",null,null],[5,"gtk_accessible_connect_widget_destroyed","","",null,null],[5,"gtk_accessible_get_widget","","",null,null],[5,"gtk_accessible_set_widget","","",null,null],[5,"gtk_action_get_type","","",null,null],[5,"gtk_action_new","","",null,null],[5,"gtk_action_activate","","",null,null],[5,"gtk_action_block_activate","","",null,null],[5,"gtk_action_connect_accelerator","","",null,null],[5,"gtk_action_create_icon","","",null,null],[5,"gtk_action_create_menu","","",null,null],[5,"gtk_action_create_menu_item","","",null,null],[5,"gtk_action_create_tool_item","","",null,null],[5,"gtk_action_disconnect_accelerator","","",null,null],[5,"gtk_action_get_accel_closure","","",null,null],[5,"gtk_action_get_accel_path","","",null,null],[5,"gtk_action_get_always_show_image","","",null,null],[5,"gtk_action_get_gicon","","",null,null],[5,"gtk_action_get_icon_name","","",null,null],[5,"gtk_action_get_is_important","","",null,null],[5,"gtk_action_get_label","","",null,null],[5,"gtk_action_get_name","","",null,null],[5,"gtk_action_get_proxies","","",null,null],[5,"gtk_action_get_sensitive","","",null,null],[5,"gtk_action_get_short_label","","",null,null],[5,"gtk_action_get_stock_id","","",null,null],[5,"gtk_action_get_tooltip","","",null,null],[5,"gtk_action_get_visible","","",null,null],[5,"gtk_action_get_visible_horizontal","","",null,null],[5,"gtk_action_get_visible_vertical","","",null,null],[5,"gtk_action_is_sensitive","","",null,null],[5,"gtk_action_is_visible","","",null,null],[5,"gtk_action_set_accel_group","","",null,null],[5,"gtk_action_set_accel_path","","",null,null],[5,"gtk_action_set_always_show_image","","",null,null],[5,"gtk_action_set_gicon","","",null,null],[5,"gtk_action_set_icon_name","","",null,null],[5,"gtk_action_set_is_important","","",null,null],[5,"gtk_action_set_label","","",null,null],[5,"gtk_action_set_sensitive","","",null,null],[5,"gtk_action_set_short_label","","",null,null],[5,"gtk_action_set_stock_id","","",null,null],[5,"gtk_action_set_tooltip","","",null,null],[5,"gtk_action_set_visible","","",null,null],[5,"gtk_action_set_visible_horizontal","","",null,null],[5,"gtk_action_set_visible_vertical","","",null,null],[5,"gtk_action_unblock_activate","","",null,null],[5,"gtk_action_bar_get_type","","",null,null],[5,"gtk_action_bar_new","","",null,null],[5,"gtk_action_bar_get_center_widget","","",null,null],[5,"gtk_action_bar_pack_end","","",null,null],[5,"gtk_action_bar_pack_start","","",null,null],[5,"gtk_action_bar_set_center_widget","","",null,null],[5,"gtk_action_group_get_type","","",null,null],[5,"gtk_action_group_new","","",null,null],[5,"gtk_action_group_add_action","","",null,null],[5,"gtk_action_group_add_action_with_accel","","",null,null],[5,"gtk_action_group_add_actions","","",null,null],[5,"gtk_action_group_add_actions_full","","",null,null],[5,"gtk_action_group_add_radio_actions","","",null,null],[5,"gtk_action_group_add_radio_actions_full","","",null,null],[5,"gtk_action_group_add_toggle_actions","","",null,null],[5,"gtk_action_group_add_toggle_actions_full","","",null,null],[5,"gtk_action_group_get_accel_group","","",null,null],[5,"gtk_action_group_get_action","","",null,null],[5,"gtk_action_group_get_name","","",null,null],[5,"gtk_action_group_get_sensitive","","",null,null],[5,"gtk_action_group_get_visible","","",null,null],[5,"gtk_action_group_list_actions","","",null,null],[5,"gtk_action_group_remove_action","","",null,null],[5,"gtk_action_group_set_accel_group","","",null,null],[5,"gtk_action_group_set_sensitive","","",null,null],[5,"gtk_action_group_set_translate_func","","",null,null],[5,"gtk_action_group_set_translation_domain","","",null,null],[5,"gtk_action_group_set_visible","","",null,null],[5,"gtk_action_group_translate_string","","",null,null],[5,"gtk_adjustment_get_type","","",null,null],[5,"gtk_adjustment_new","","",null,null],[5,"gtk_adjustment_changed","","",null,null],[5,"gtk_adjustment_clamp_page","","",null,null],[5,"gtk_adjustment_configure","","",null,null],[5,"gtk_adjustment_get_lower","","",null,null],[5,"gtk_adjustment_get_minimum_increment","","",null,null],[5,"gtk_adjustment_get_page_increment","","",null,null],[5,"gtk_adjustment_get_page_size","","",null,null],[5,"gtk_adjustment_get_step_increment","","",null,null],[5,"gtk_adjustment_get_upper","","",null,null],[5,"gtk_adjustment_get_value","","",null,null],[5,"gtk_adjustment_set_lower","","",null,null],[5,"gtk_adjustment_set_page_increment","","",null,null],[5,"gtk_adjustment_set_page_size","","",null,null],[5,"gtk_adjustment_set_step_increment","","",null,null],[5,"gtk_adjustment_set_upper","","",null,null],[5,"gtk_adjustment_set_value","","",null,null],[5,"gtk_adjustment_value_changed","","",null,null],[5,"gtk_alignment_get_type","","",null,null],[5,"gtk_alignment_new","","",null,null],[5,"gtk_alignment_get_padding","","",null,null],[5,"gtk_alignment_set","","",null,null],[5,"gtk_alignment_set_padding","","",null,null],[5,"gtk_app_chooser_button_get_type","","",null,null],[5,"gtk_app_chooser_button_new","","",null,null],[5,"gtk_app_chooser_button_append_custom_item","","",null,null],[5,"gtk_app_chooser_button_append_separator","","",null,null],[5,"gtk_app_chooser_button_get_heading","","",null,null],[5,"gtk_app_chooser_button_get_show_default_item","","",null,null],[5,"gtk_app_chooser_button_get_show_dialog_item","","",null,null],[5,"gtk_app_chooser_button_set_active_custom_item","","",null,null],[5,"gtk_app_chooser_button_set_heading","","",null,null],[5,"gtk_app_chooser_button_set_show_default_item","","",null,null],[5,"gtk_app_chooser_button_set_show_dialog_item","","",null,null],[5,"gtk_app_chooser_dialog_get_type","","",null,null],[5,"gtk_app_chooser_dialog_new","","",null,null],[5,"gtk_app_chooser_dialog_new_for_content_type","","",null,null],[5,"gtk_app_chooser_dialog_get_heading","","",null,null],[5,"gtk_app_chooser_dialog_get_widget","","",null,null],[5,"gtk_app_chooser_dialog_set_heading","","",null,null],[5,"gtk_app_chooser_widget_get_type","","",null,null],[5,"gtk_app_chooser_widget_new","","",null,null],[5,"gtk_app_chooser_widget_get_default_text","","",null,null],[5,"gtk_app_chooser_widget_get_show_all","","",null,null],[5,"gtk_app_chooser_widget_get_show_default","","",null,null],[5,"gtk_app_chooser_widget_get_show_fallback","","",null,null],[5,"gtk_app_chooser_widget_get_show_other","","",null,null],[5,"gtk_app_chooser_widget_get_show_recommended","","",null,null],[5,"gtk_app_chooser_widget_set_default_text","","",null,null],[5,"gtk_app_chooser_widget_set_show_all","","",null,null],[5,"gtk_app_chooser_widget_set_show_default","","",null,null],[5,"gtk_app_chooser_widget_set_show_fallback","","",null,null],[5,"gtk_app_chooser_widget_set_show_other","","",null,null],[5,"gtk_app_chooser_widget_set_show_recommended","","",null,null],[5,"gtk_application_get_type","","",null,null],[5,"gtk_application_new","","",null,null],[5,"gtk_application_add_accelerator","","",null,null],[5,"gtk_application_add_window","","",null,null],[5,"gtk_application_get_accels_for_action","","",null,null],[5,"gtk_application_get_actions_for_accel","","",null,null],[5,"gtk_application_get_active_window","","",null,null],[5,"gtk_application_get_app_menu","","",null,null],[5,"gtk_application_get_menu_by_id","","",null,null],[5,"gtk_application_get_menubar","","",null,null],[5,"gtk_application_get_window_by_id","","",null,null],[5,"gtk_application_get_windows","","",null,null],[5,"gtk_application_inhibit","","",null,null],[5,"gtk_application_is_inhibited","","",null,null],[5,"gtk_application_list_action_descriptions","","",null,null],[5,"gtk_application_prefers_app_menu","","",null,null],[5,"gtk_application_remove_accelerator","","",null,null],[5,"gtk_application_remove_window","","",null,null],[5,"gtk_application_set_accels_for_action","","",null,null],[5,"gtk_application_set_app_menu","","",null,null],[5,"gtk_application_set_menubar","","",null,null],[5,"gtk_application_uninhibit","","",null,null],[5,"gtk_application_window_get_type","","",null,null],[5,"gtk_application_window_new","","",null,null],[5,"gtk_application_window_get_id","","",null,null],[5,"gtk_application_window_get_show_menubar","","",null,null],[5,"gtk_application_window_set_show_menubar","","",null,null],[5,"gtk_arrow_get_type","","",null,null],[5,"gtk_arrow_new","","",null,null],[5,"gtk_arrow_set","","",null,null],[5,"gtk_arrow_accessible_get_type","","",null,null],[5,"gtk_aspect_frame_get_type","","",null,null],[5,"gtk_aspect_frame_new","","",null,null],[5,"gtk_aspect_frame_set","","",null,null],[5,"gtk_assistant_get_type","","",null,null],[5,"gtk_assistant_new","","",null,null],[5,"gtk_assistant_add_action_widget","","",null,null],[5,"gtk_assistant_append_page","","",null,null],[5,"gtk_assistant_commit","","",null,null],[5,"gtk_assistant_get_current_page","","",null,null],[5,"gtk_assistant_get_n_pages","","",null,null],[5,"gtk_assistant_get_nth_page","","",null,null],[5,"gtk_assistant_get_page_complete","","",null,null],[5,"gtk_assistant_get_page_header_image","","",null,null],[5,"gtk_assistant_get_page_side_image","","",null,null],[5,"gtk_assistant_get_page_title","","",null,null],[5,"gtk_assistant_get_page_type","","",null,null],[5,"gtk_assistant_insert_page","","",null,null],[5,"gtk_assistant_next_page","","",null,null],[5,"gtk_assistant_prepend_page","","",null,null],[5,"gtk_assistant_previous_page","","",null,null],[5,"gtk_assistant_remove_action_widget","","",null,null],[5,"gtk_assistant_remove_page","","",null,null],[5,"gtk_assistant_set_current_page","","",null,null],[5,"gtk_assistant_set_forward_page_func","","",null,null],[5,"gtk_assistant_set_page_complete","","",null,null],[5,"gtk_assistant_set_page_header_image","","",null,null],[5,"gtk_assistant_set_page_side_image","","",null,null],[5,"gtk_assistant_set_page_title","","",null,null],[5,"gtk_assistant_set_page_type","","",null,null],[5,"gtk_assistant_update_buttons_state","","",null,null],[5,"gtk_bin_get_type","","",null,null],[5,"gtk_bin_get_child","","",null,null],[5,"gtk_boolean_cell_accessible_get_type","","",null,null],[5,"gtk_box_get_type","","",null,null],[5,"gtk_box_new","","",null,null],[5,"gtk_box_get_baseline_position","","",null,null],[5,"gtk_box_get_center_widget","","",null,null],[5,"gtk_box_get_homogeneous","","",null,null],[5,"gtk_box_get_spacing","","",null,null],[5,"gtk_box_pack_end","","",null,null],[5,"gtk_box_pack_start","","",null,null],[5,"gtk_box_query_child_packing","","",null,null],[5,"gtk_box_reorder_child","","",null,null],[5,"gtk_box_set_baseline_position","","",null,null],[5,"gtk_box_set_center_widget","","",null,null],[5,"gtk_box_set_child_packing","","",null,null],[5,"gtk_box_set_homogeneous","","",null,null],[5,"gtk_box_set_spacing","","",null,null],[5,"gtk_builder_get_type","","",null,null],[5,"gtk_builder_new","","",null,null],[5,"gtk_builder_new_from_file","","",null,null],[5,"gtk_builder_new_from_resource","","",null,null],[5,"gtk_builder_new_from_string","","",null,null],[5,"gtk_builder_add_callback_symbol","","",null,null],[5,"gtk_builder_add_callback_symbols","","",null,null],[5,"gtk_builder_add_from_file","","",null,null],[5,"gtk_builder_add_from_resource","","",null,null],[5,"gtk_builder_add_from_string","","",null,null],[5,"gtk_builder_add_objects_from_file","","",null,null],[5,"gtk_builder_add_objects_from_resource","","",null,null],[5,"gtk_builder_add_objects_from_string","","",null,null],[5,"gtk_builder_connect_signals","","",null,null],[5,"gtk_builder_connect_signals_full","","",null,null],[5,"gtk_builder_expose_object","","",null,null],[5,"gtk_builder_get_application","","",null,null],[5,"gtk_builder_get_object","","",null,null],[5,"gtk_builder_get_objects","","",null,null],[5,"gtk_builder_get_translation_domain","","",null,null],[5,"gtk_builder_get_type_from_name","","",null,null],[5,"gtk_builder_lookup_callback_symbol","","",null,null],[5,"gtk_builder_set_application","","",null,null],[5,"gtk_builder_set_translation_domain","","",null,null],[5,"gtk_builder_value_from_string","","",null,null],[5,"gtk_builder_value_from_string_type","","",null,null],[5,"gtk_button_get_type","","",null,null],[5,"gtk_button_new","","",null,null],[5,"gtk_button_new_from_icon_name","","",null,null],[5,"gtk_button_new_from_stock","","",null,null],[5,"gtk_button_new_with_label","","",null,null],[5,"gtk_button_new_with_mnemonic","","",null,null],[5,"gtk_button_clicked","","",null,null],[5,"gtk_button_enter","","",null,null],[5,"gtk_button_get_alignment","","",null,null],[5,"gtk_button_get_always_show_image","","",null,null],[5,"gtk_button_get_event_window","","",null,null],[5,"gtk_button_get_focus_on_click","","",null,null],[5,"gtk_button_get_image","","",null,null],[5,"gtk_button_get_image_position","","",null,null],[5,"gtk_button_get_label","","",null,null],[5,"gtk_button_get_relief","","",null,null],[5,"gtk_button_get_use_stock","","",null,null],[5,"gtk_button_get_use_underline","","",null,null],[5,"gtk_button_leave","","",null,null],[5,"gtk_button_pressed","","",null,null],[5,"gtk_button_released","","",null,null],[5,"gtk_button_set_alignment","","",null,null],[5,"gtk_button_set_always_show_image","","",null,null],[5,"gtk_button_set_focus_on_click","","",null,null],[5,"gtk_button_set_image","","",null,null],[5,"gtk_button_set_image_position","","",null,null],[5,"gtk_button_set_label","","",null,null],[5,"gtk_button_set_relief","","",null,null],[5,"gtk_button_set_use_stock","","",null,null],[5,"gtk_button_set_use_underline","","",null,null],[5,"gtk_button_accessible_get_type","","",null,null],[5,"gtk_button_box_get_type","","",null,null],[5,"gtk_button_box_new","","",null,null],[5,"gtk_button_box_get_child_non_homogeneous","","",null,null],[5,"gtk_button_box_get_child_secondary","","",null,null],[5,"gtk_button_box_get_layout","","",null,null],[5,"gtk_button_box_set_child_non_homogeneous","","",null,null],[5,"gtk_button_box_set_child_secondary","","",null,null],[5,"gtk_button_box_set_layout","","",null,null],[5,"gtk_calendar_get_type","","",null,null],[5,"gtk_calendar_new","","",null,null],[5,"gtk_calendar_clear_marks","","",null,null],[5,"gtk_calendar_get_date","","",null,null],[5,"gtk_calendar_get_day_is_marked","","",null,null],[5,"gtk_calendar_get_detail_height_rows","","",null,null],[5,"gtk_calendar_get_detail_width_chars","","",null,null],[5,"gtk_calendar_get_display_options","","",null,null],[5,"gtk_calendar_mark_day","","",null,null],[5,"gtk_calendar_select_day","","",null,null],[5,"gtk_calendar_select_month","","",null,null],[5,"gtk_calendar_set_detail_func","","",null,null],[5,"gtk_calendar_set_detail_height_rows","","",null,null],[5,"gtk_calendar_set_detail_width_chars","","",null,null],[5,"gtk_calendar_set_display_options","","",null,null],[5,"gtk_calendar_unmark_day","","",null,null],[5,"gtk_cell_accessible_get_type","","",null,null],[5,"gtk_cell_area_get_type","","",null,null],[5,"gtk_cell_area_activate","","",null,null],[5,"gtk_cell_area_activate_cell","","",null,null],[5,"gtk_cell_area_add","","",null,null],[5,"gtk_cell_area_add_focus_sibling","","",null,null],[5,"gtk_cell_area_add_with_properties","","",null,null],[5,"gtk_cell_area_apply_attributes","","",null,null],[5,"gtk_cell_area_attribute_connect","","",null,null],[5,"gtk_cell_area_attribute_disconnect","","",null,null],[5,"gtk_cell_area_attribute_get_column","","",null,null],[5,"gtk_cell_area_cell_get","","",null,null],[5,"gtk_cell_area_cell_get_property","","",null,null],[5,"gtk_cell_area_cell_set","","",null,null],[5,"gtk_cell_area_cell_set_property","","",null,null],[5,"gtk_cell_area_copy_context","","",null,null],[5,"gtk_cell_area_create_context","","",null,null],[5,"gtk_cell_area_event","","",null,null],[5,"gtk_cell_area_focus","","",null,null],[5,"gtk_cell_area_foreach","","",null,null],[5,"gtk_cell_area_foreach_alloc","","",null,null],[5,"gtk_cell_area_get_cell_allocation","","",null,null],[5,"gtk_cell_area_get_cell_at_position","","",null,null],[5,"gtk_cell_area_get_current_path_string","","",null,null],[5,"gtk_cell_area_get_edit_widget","","",null,null],[5,"gtk_cell_area_get_edited_cell","","",null,null],[5,"gtk_cell_area_get_focus_cell","","",null,null],[5,"gtk_cell_area_get_focus_from_sibling","","",null,null],[5,"gtk_cell_area_get_focus_siblings","","",null,null],[5,"gtk_cell_area_get_preferred_height","","",null,null],[5,"gtk_cell_area_get_preferred_height_for_width","","",null,null],[5,"gtk_cell_area_get_preferred_width","","",null,null],[5,"gtk_cell_area_get_preferred_width_for_height","","",null,null],[5,"gtk_cell_area_get_request_mode","","",null,null],[5,"gtk_cell_area_has_renderer","","",null,null],[5,"gtk_cell_area_inner_cell_area","","",null,null],[5,"gtk_cell_area_is_activatable","","",null,null],[5,"gtk_cell_area_is_focus_sibling","","",null,null],[5,"gtk_cell_area_remove","","",null,null],[5,"gtk_cell_area_remove_focus_sibling","","",null,null],[5,"gtk_cell_area_render","","",null,null],[5,"gtk_cell_area_request_renderer","","",null,null],[5,"gtk_cell_area_set_focus_cell","","",null,null],[5,"gtk_cell_area_stop_editing","","",null,null],[5,"gtk_cell_area_box_get_type","","",null,null],[5,"gtk_cell_area_box_new","","",null,null],[5,"gtk_cell_area_box_get_spacing","","",null,null],[5,"gtk_cell_area_box_pack_end","","",null,null],[5,"gtk_cell_area_box_pack_start","","",null,null],[5,"gtk_cell_area_box_set_spacing","","",null,null],[5,"gtk_cell_area_context_get_type","","",null,null],[5,"gtk_cell_area_context_allocate","","",null,null],[5,"gtk_cell_area_context_get_allocation","","",null,null],[5,"gtk_cell_area_context_get_area","","",null,null],[5,"gtk_cell_area_context_get_preferred_height","","",null,null],[5,"gtk_cell_area_context_get_preferred_height_for_width","","",null,null],[5,"gtk_cell_area_context_get_preferred_width","","",null,null],[5,"gtk_cell_area_context_get_preferred_width_for_height","","",null,null],[5,"gtk_cell_area_context_push_preferred_height","","",null,null],[5,"gtk_cell_area_context_push_preferred_width","","",null,null],[5,"gtk_cell_area_context_reset","","",null,null],[5,"gtk_cell_renderer_get_type","","",null,null],[5,"gtk_cell_renderer_activate","","",null,null],[5,"gtk_cell_renderer_get_aligned_area","","",null,null],[5,"gtk_cell_renderer_get_alignment","","",null,null],[5,"gtk_cell_renderer_get_fixed_size","","",null,null],[5,"gtk_cell_renderer_get_padding","","",null,null],[5,"gtk_cell_renderer_get_preferred_height","","",null,null],[5,"gtk_cell_renderer_get_preferred_height_for_width","","",null,null],[5,"gtk_cell_renderer_get_preferred_size","","",null,null],[5,"gtk_cell_renderer_get_preferred_width","","",null,null],[5,"gtk_cell_renderer_get_preferred_width_for_height","","",null,null],[5,"gtk_cell_renderer_get_request_mode","","",null,null],[5,"gtk_cell_renderer_get_sensitive","","",null,null],[5,"gtk_cell_renderer_get_size","","",null,null],[5,"gtk_cell_renderer_get_state","","",null,null],[5,"gtk_cell_renderer_get_visible","","",null,null],[5,"gtk_cell_renderer_is_activatable","","",null,null],[5,"gtk_cell_renderer_render","","",null,null],[5,"gtk_cell_renderer_set_alignment","","",null,null],[5,"gtk_cell_renderer_set_fixed_size","","",null,null],[5,"gtk_cell_renderer_set_padding","","",null,null],[5,"gtk_cell_renderer_set_sensitive","","",null,null],[5,"gtk_cell_renderer_set_visible","","",null,null],[5,"gtk_cell_renderer_start_editing","","",null,null],[5,"gtk_cell_renderer_stop_editing","","",null,null],[5,"gtk_cell_renderer_accel_get_type","","",null,null],[5,"gtk_cell_renderer_accel_new","","",null,null],[5,"gtk_cell_renderer_combo_get_type","","",null,null],[5,"gtk_cell_renderer_combo_new","","",null,null],[5,"gtk_cell_renderer_pixbuf_get_type","","",null,null],[5,"gtk_cell_renderer_pixbuf_new","","",null,null],[5,"gtk_cell_renderer_progress_get_type","","",null,null],[5,"gtk_cell_renderer_progress_new","","",null,null],[5,"gtk_cell_renderer_spin_get_type","","",null,null],[5,"gtk_cell_renderer_spin_new","","",null,null],[5,"gtk_cell_renderer_spinner_get_type","","",null,null],[5,"gtk_cell_renderer_spinner_new","","",null,null],[5,"gtk_cell_renderer_text_get_type","","",null,null],[5,"gtk_cell_renderer_text_new","","",null,null],[5,"gtk_cell_renderer_text_set_fixed_height_from_font","","",null,null],[5,"gtk_cell_renderer_toggle_get_type","","",null,null],[5,"gtk_cell_renderer_toggle_new","","",null,null],[5,"gtk_cell_renderer_toggle_get_activatable","","",null,null],[5,"gtk_cell_renderer_toggle_get_active","","",null,null],[5,"gtk_cell_renderer_toggle_get_radio","","",null,null],[5,"gtk_cell_renderer_toggle_set_activatable","","",null,null],[5,"gtk_cell_renderer_toggle_set_active","","",null,null],[5,"gtk_cell_renderer_toggle_set_radio","","",null,null],[5,"gtk_cell_view_get_type","","",null,null],[5,"gtk_cell_view_new","","",null,null],[5,"gtk_cell_view_new_with_context","","",null,null],[5,"gtk_cell_view_new_with_markup","","",null,null],[5,"gtk_cell_view_new_with_pixbuf","","",null,null],[5,"gtk_cell_view_new_with_text","","",null,null],[5,"gtk_cell_view_get_displayed_row","","",null,null],[5,"gtk_cell_view_get_draw_sensitive","","",null,null],[5,"gtk_cell_view_get_fit_model","","",null,null],[5,"gtk_cell_view_get_model","","",null,null],[5,"gtk_cell_view_get_size_of_row","","",null,null],[5,"gtk_cell_view_set_background_color","","",null,null],[5,"gtk_cell_view_set_background_rgba","","",null,null],[5,"gtk_cell_view_set_displayed_row","","",null,null],[5,"gtk_cell_view_set_draw_sensitive","","",null,null],[5,"gtk_cell_view_set_fit_model","","",null,null],[5,"gtk_cell_view_set_model","","",null,null],[5,"gtk_check_button_get_type","","",null,null],[5,"gtk_check_button_new","","",null,null],[5,"gtk_check_button_new_with_label","","",null,null],[5,"gtk_check_button_new_with_mnemonic","","",null,null],[5,"gtk_check_menu_item_get_type","","",null,null],[5,"gtk_check_menu_item_new","","",null,null],[5,"gtk_check_menu_item_new_with_label","","",null,null],[5,"gtk_check_menu_item_new_with_mnemonic","","",null,null],[5,"gtk_check_menu_item_get_active","","",null,null],[5,"gtk_check_menu_item_get_draw_as_radio","","",null,null],[5,"gtk_check_menu_item_get_inconsistent","","",null,null],[5,"gtk_check_menu_item_set_active","","",null,null],[5,"gtk_check_menu_item_set_draw_as_radio","","",null,null],[5,"gtk_check_menu_item_set_inconsistent","","",null,null],[5,"gtk_check_menu_item_toggled","","",null,null],[5,"gtk_check_menu_item_accessible_get_type","","",null,null],[5,"gtk_clipboard_get_type","","",null,null],[5,"gtk_clipboard_get","","",null,null],[5,"gtk_clipboard_get_default","","",null,null],[5,"gtk_clipboard_get_for_display","","",null,null],[5,"gtk_clipboard_clear","","",null,null],[5,"gtk_clipboard_get_display","","",null,null],[5,"gtk_clipboard_get_owner","","",null,null],[5,"gtk_clipboard_request_contents","","",null,null],[5,"gtk_clipboard_request_image","","",null,null],[5,"gtk_clipboard_request_rich_text","","",null,null],[5,"gtk_clipboard_request_targets","","",null,null],[5,"gtk_clipboard_request_text","","",null,null],[5,"gtk_clipboard_request_uris","","",null,null],[5,"gtk_clipboard_set_can_store","","",null,null],[5,"gtk_clipboard_set_image","","",null,null],[5,"gtk_clipboard_set_text","","",null,null],[5,"gtk_clipboard_set_with_data","","",null,null],[5,"gtk_clipboard_set_with_owner","","",null,null],[5,"gtk_clipboard_store","","",null,null],[5,"gtk_clipboard_wait_for_contents","","",null,null],[5,"gtk_clipboard_wait_for_image","","",null,null],[5,"gtk_clipboard_wait_for_rich_text","","",null,null],[5,"gtk_clipboard_wait_for_targets","","",null,null],[5,"gtk_clipboard_wait_for_text","","",null,null],[5,"gtk_clipboard_wait_for_uris","","",null,null],[5,"gtk_clipboard_wait_is_image_available","","",null,null],[5,"gtk_clipboard_wait_is_rich_text_available","","",null,null],[5,"gtk_clipboard_wait_is_target_available","","",null,null],[5,"gtk_clipboard_wait_is_text_available","","",null,null],[5,"gtk_clipboard_wait_is_uris_available","","",null,null],[5,"gtk_color_button_get_type","","",null,null],[5,"gtk_color_button_new","","",null,null],[5,"gtk_color_button_new_with_color","","",null,null],[5,"gtk_color_button_new_with_rgba","","",null,null],[5,"gtk_color_button_get_alpha","","",null,null],[5,"gtk_color_button_get_color","","",null,null],[5,"gtk_color_button_get_rgba","","",null,null],[5,"gtk_color_button_get_title","","",null,null],[5,"gtk_color_button_get_use_alpha","","",null,null],[5,"gtk_color_button_set_alpha","","",null,null],[5,"gtk_color_button_set_color","","",null,null],[5,"gtk_color_button_set_rgba","","",null,null],[5,"gtk_color_button_set_title","","",null,null],[5,"gtk_color_button_set_use_alpha","","",null,null],[5,"gtk_color_chooser_dialog_get_type","","",null,null],[5,"gtk_color_chooser_dialog_new","","",null,null],[5,"gtk_color_chooser_widget_get_type","","",null,null],[5,"gtk_color_chooser_widget_new","","",null,null],[5,"gtk_color_selection_get_type","","",null,null],[5,"gtk_color_selection_new","","",null,null],[5,"gtk_color_selection_palette_from_string","","",null,null],[5,"gtk_color_selection_palette_to_string","","",null,null],[5,"gtk_color_selection_set_change_palette_with_screen_hook","","",null,null],[5,"gtk_color_selection_get_current_alpha","","",null,null],[5,"gtk_color_selection_get_current_color","","",null,null],[5,"gtk_color_selection_get_current_rgba","","",null,null],[5,"gtk_color_selection_get_has_opacity_control","","",null,null],[5,"gtk_color_selection_get_has_palette","","",null,null],[5,"gtk_color_selection_get_previous_alpha","","",null,null],[5,"gtk_color_selection_get_previous_color","","",null,null],[5,"gtk_color_selection_get_previous_rgba","","",null,null],[5,"gtk_color_selection_is_adjusting","","",null,null],[5,"gtk_color_selection_set_current_alpha","","",null,null],[5,"gtk_color_selection_set_current_color","","",null,null],[5,"gtk_color_selection_set_current_rgba","","",null,null],[5,"gtk_color_selection_set_has_opacity_control","","",null,null],[5,"gtk_color_selection_set_has_palette","","",null,null],[5,"gtk_color_selection_set_previous_alpha","","",null,null],[5,"gtk_color_selection_set_previous_color","","",null,null],[5,"gtk_color_selection_set_previous_rgba","","",null,null],[5,"gtk_color_selection_dialog_get_type","","",null,null],[5,"gtk_color_selection_dialog_new","","",null,null],[5,"gtk_color_selection_dialog_get_color_selection","","",null,null],[5,"gtk_combo_box_get_type","","",null,null],[5,"gtk_combo_box_new","","",null,null],[5,"gtk_combo_box_new_with_area","","",null,null],[5,"gtk_combo_box_new_with_area_and_entry","","",null,null],[5,"gtk_combo_box_new_with_entry","","",null,null],[5,"gtk_combo_box_new_with_model","","",null,null],[5,"gtk_combo_box_new_with_model_and_entry","","",null,null],[5,"gtk_combo_box_get_active","","",null,null],[5,"gtk_combo_box_get_active_id","","",null,null],[5,"gtk_combo_box_get_active_iter","","",null,null],[5,"gtk_combo_box_get_add_tearoffs","","",null,null],[5,"gtk_combo_box_get_button_sensitivity","","",null,null],[5,"gtk_combo_box_get_column_span_column","","",null,null],[5,"gtk_combo_box_get_entry_text_column","","",null,null],[5,"gtk_combo_box_get_focus_on_click","","",null,null],[5,"gtk_combo_box_get_has_entry","","",null,null],[5,"gtk_combo_box_get_id_column","","",null,null],[5,"gtk_combo_box_get_model","","",null,null],[5,"gtk_combo_box_get_popup_accessible","","",null,null],[5,"gtk_combo_box_get_popup_fixed_width","","",null,null],[5,"gtk_combo_box_get_row_separator_func","","",null,null],[5,"gtk_combo_box_get_row_span_column","","",null,null],[5,"gtk_combo_box_get_title","","",null,null],[5,"gtk_combo_box_get_wrap_width","","",null,null],[5,"gtk_combo_box_popdown","","",null,null],[5,"gtk_combo_box_popup","","",null,null],[5,"gtk_combo_box_popup_for_device","","",null,null],[5,"gtk_combo_box_set_active","","",null,null],[5,"gtk_combo_box_set_active_id","","",null,null],[5,"gtk_combo_box_set_active_iter","","",null,null],[5,"gtk_combo_box_set_add_tearoffs","","",null,null],[5,"gtk_combo_box_set_button_sensitivity","","",null,null],[5,"gtk_combo_box_set_column_span_column","","",null,null],[5,"gtk_combo_box_set_entry_text_column","","",null,null],[5,"gtk_combo_box_set_focus_on_click","","",null,null],[5,"gtk_combo_box_set_id_column","","",null,null],[5,"gtk_combo_box_set_model","","",null,null],[5,"gtk_combo_box_set_popup_fixed_width","","",null,null],[5,"gtk_combo_box_set_row_separator_func","","",null,null],[5,"gtk_combo_box_set_row_span_column","","",null,null],[5,"gtk_combo_box_set_title","","",null,null],[5,"gtk_combo_box_set_wrap_width","","",null,null],[5,"gtk_combo_box_accessible_get_type","","",null,null],[5,"gtk_combo_box_text_get_type","","",null,null],[5,"gtk_combo_box_text_new","","",null,null],[5,"gtk_combo_box_text_new_with_entry","","",null,null],[5,"gtk_combo_box_text_append","","",null,null],[5,"gtk_combo_box_text_append_text","","",null,null],[5,"gtk_combo_box_text_get_active_text","","",null,null],[5,"gtk_combo_box_text_insert","","",null,null],[5,"gtk_combo_box_text_insert_text","","",null,null],[5,"gtk_combo_box_text_prepend","","",null,null],[5,"gtk_combo_box_text_prepend_text","","",null,null],[5,"gtk_combo_box_text_remove","","",null,null],[5,"gtk_combo_box_text_remove_all","","",null,null],[5,"gtk_container_get_type","","",null,null],[5,"gtk_container_add","","",null,null],[5,"gtk_container_add_with_properties","","",null,null],[5,"gtk_container_check_resize","","",null,null],[5,"gtk_container_child_get","","",null,null],[5,"gtk_container_child_get_property","","",null,null],[5,"gtk_container_child_notify","","",null,null],[5,"gtk_container_child_set","","",null,null],[5,"gtk_container_child_set_property","","",null,null],[5,"gtk_container_child_type","","",null,null],[5,"gtk_container_forall","","",null,null],[5,"gtk_container_foreach","","",null,null],[5,"gtk_container_get_border_width","","",null,null],[5,"gtk_container_get_children","","",null,null],[5,"gtk_container_get_focus_chain","","",null,null],[5,"gtk_container_get_focus_child","","",null,null],[5,"gtk_container_get_focus_hadjustment","","",null,null],[5,"gtk_container_get_focus_vadjustment","","",null,null],[5,"gtk_container_get_path_for_child","","",null,null],[5,"gtk_container_get_resize_mode","","",null,null],[5,"gtk_container_propagate_draw","","",null,null],[5,"gtk_container_remove","","",null,null],[5,"gtk_container_resize_children","","",null,null],[5,"gtk_container_set_border_width","","",null,null],[5,"gtk_container_set_focus_chain","","",null,null],[5,"gtk_container_set_focus_child","","",null,null],[5,"gtk_container_set_focus_hadjustment","","",null,null],[5,"gtk_container_set_focus_vadjustment","","",null,null],[5,"gtk_container_set_reallocate_redraws","","",null,null],[5,"gtk_container_set_resize_mode","","",null,null],[5,"gtk_container_unset_focus_chain","","",null,null],[5,"gtk_container_accessible_get_type","","",null,null],[5,"gtk_container_cell_accessible_get_type","","",null,null],[5,"gtk_container_cell_accessible_new","","",null,null],[5,"gtk_container_cell_accessible_add_child","","",null,null],[5,"gtk_container_cell_accessible_get_children","","",null,null],[5,"gtk_container_cell_accessible_remove_child","","",null,null],[5,"gtk_css_provider_get_type","","",null,null],[5,"gtk_css_provider_new","","",null,null],[5,"gtk_css_provider_get_default","","",null,null],[5,"gtk_css_provider_get_named","","",null,null],[5,"gtk_css_provider_load_from_data","","",null,null],[5,"gtk_css_provider_load_from_file","","",null,null],[5,"gtk_css_provider_load_from_path","","",null,null],[5,"gtk_css_provider_load_from_resource","","",null,null],[5,"gtk_css_provider_to_string","","",null,null],[5,"gtk_dialog_get_type","","",null,null],[5,"gtk_dialog_new","","",null,null],[5,"gtk_dialog_new_with_buttons","","",null,null],[5,"gtk_dialog_add_action_widget","","",null,null],[5,"gtk_dialog_add_button","","",null,null],[5,"gtk_dialog_add_buttons","","",null,null],[5,"gtk_dialog_get_action_area","","",null,null],[5,"gtk_dialog_get_content_area","","",null,null],[5,"gtk_dialog_get_header_bar","","",null,null],[5,"gtk_dialog_get_response_for_widget","","",null,null],[5,"gtk_dialog_get_widget_for_response","","",null,null],[5,"gtk_dialog_response","","",null,null],[5,"gtk_dialog_run","","",null,null],[5,"gtk_dialog_set_alternative_button_order","","",null,null],[5,"gtk_dialog_set_alternative_button_order_from_array","","",null,null],[5,"gtk_dialog_set_default_response","","",null,null],[5,"gtk_dialog_set_response_sensitive","","",null,null],[5,"gtk_drawing_area_get_type","","",null,null],[5,"gtk_drawing_area_new","","",null,null],[5,"gtk_entry_get_type","","",null,null],[5,"gtk_entry_new","","",null,null],[5,"gtk_entry_new_with_buffer","","",null,null],[5,"gtk_entry_get_activates_default","","",null,null],[5,"gtk_entry_get_alignment","","",null,null],[5,"gtk_entry_get_attributes","","",null,null],[5,"gtk_entry_get_buffer","","",null,null],[5,"gtk_entry_get_completion","","",null,null],[5,"gtk_entry_get_current_icon_drag_source","","",null,null],[5,"gtk_entry_get_cursor_hadjustment","","",null,null],[5,"gtk_entry_get_has_frame","","",null,null],[5,"gtk_entry_get_icon_activatable","","",null,null],[5,"gtk_entry_get_icon_area","","",null,null],[5,"gtk_entry_get_icon_at_pos","","",null,null],[5,"gtk_entry_get_icon_gicon","","",null,null],[5,"gtk_entry_get_icon_name","","",null,null],[5,"gtk_entry_get_icon_pixbuf","","",null,null],[5,"gtk_entry_get_icon_sensitive","","",null,null],[5,"gtk_entry_get_icon_stock","","",null,null],[5,"gtk_entry_get_icon_storage_type","","",null,null],[5,"gtk_entry_get_icon_tooltip_markup","","",null,null],[5,"gtk_entry_get_icon_tooltip_text","","",null,null],[5,"gtk_entry_get_inner_border","","",null,null],[5,"gtk_entry_get_input_hints","","",null,null],[5,"gtk_entry_get_input_purpose","","",null,null],[5,"gtk_entry_get_invisible_char","","",null,null],[5,"gtk_entry_get_layout","","",null,null],[5,"gtk_entry_get_layout_offsets","","",null,null],[5,"gtk_entry_get_max_length","","",null,null],[5,"gtk_entry_get_max_width_chars","","",null,null],[5,"gtk_entry_get_overwrite_mode","","",null,null],[5,"gtk_entry_get_placeholder_text","","",null,null],[5,"gtk_entry_get_progress_fraction","","",null,null],[5,"gtk_entry_get_progress_pulse_step","","",null,null],[5,"gtk_entry_get_tabs","","",null,null],[5,"gtk_entry_get_text","","",null,null],[5,"gtk_entry_get_text_area","","",null,null],[5,"gtk_entry_get_text_length","","",null,null],[5,"gtk_entry_get_visibility","","",null,null],[5,"gtk_entry_get_width_chars","","",null,null],[5,"gtk_entry_grab_focus_without_selecting","","",null,null],[5,"gtk_entry_im_context_filter_keypress","","",null,null],[5,"gtk_entry_layout_index_to_text_index","","",null,null],[5,"gtk_entry_progress_pulse","","",null,null],[5,"gtk_entry_reset_im_context","","",null,null],[5,"gtk_entry_set_activates_default","","",null,null],[5,"gtk_entry_set_alignment","","",null,null],[5,"gtk_entry_set_attributes","","",null,null],[5,"gtk_entry_set_buffer","","",null,null],[5,"gtk_entry_set_completion","","",null,null],[5,"gtk_entry_set_cursor_hadjustment","","",null,null],[5,"gtk_entry_set_has_frame","","",null,null],[5,"gtk_entry_set_icon_activatable","","",null,null],[5,"gtk_entry_set_icon_drag_source","","",null,null],[5,"gtk_entry_set_icon_from_gicon","","",null,null],[5,"gtk_entry_set_icon_from_icon_name","","",null,null],[5,"gtk_entry_set_icon_from_pixbuf","","",null,null],[5,"gtk_entry_set_icon_from_stock","","",null,null],[5,"gtk_entry_set_icon_sensitive","","",null,null],[5,"gtk_entry_set_icon_tooltip_markup","","",null,null],[5,"gtk_entry_set_icon_tooltip_text","","",null,null],[5,"gtk_entry_set_inner_border","","",null,null],[5,"gtk_entry_set_input_hints","","",null,null],[5,"gtk_entry_set_input_purpose","","",null,null],[5,"gtk_entry_set_invisible_char","","",null,null],[5,"gtk_entry_set_max_length","","",null,null],[5,"gtk_entry_set_max_width_chars","","",null,null],[5,"gtk_entry_set_overwrite_mode","","",null,null],[5,"gtk_entry_set_placeholder_text","","",null,null],[5,"gtk_entry_set_progress_fraction","","",null,null],[5,"gtk_entry_set_progress_pulse_step","","",null,null],[5,"gtk_entry_set_tabs","","",null,null],[5,"gtk_entry_set_text","","",null,null],[5,"gtk_entry_set_visibility","","",null,null],[5,"gtk_entry_set_width_chars","","",null,null],[5,"gtk_entry_text_index_to_layout_index","","",null,null],[5,"gtk_entry_unset_invisible_char","","",null,null],[5,"gtk_entry_accessible_get_type","","",null,null],[5,"gtk_entry_buffer_get_type","","",null,null],[5,"gtk_entry_buffer_new","","",null,null],[5,"gtk_entry_buffer_delete_text","","",null,null],[5,"gtk_entry_buffer_emit_deleted_text","","",null,null],[5,"gtk_entry_buffer_emit_inserted_text","","",null,null],[5,"gtk_entry_buffer_get_bytes","","",null,null],[5,"gtk_entry_buffer_get_length","","",null,null],[5,"gtk_entry_buffer_get_max_length","","",null,null],[5,"gtk_entry_buffer_get_text","","",null,null],[5,"gtk_entry_buffer_insert_text","","",null,null],[5,"gtk_entry_buffer_set_max_length","","",null,null],[5,"gtk_entry_buffer_set_text","","",null,null],[5,"gtk_entry_completion_get_type","","",null,null],[5,"gtk_entry_completion_new","","",null,null],[5,"gtk_entry_completion_new_with_area","","",null,null],[5,"gtk_entry_completion_complete","","",null,null],[5,"gtk_entry_completion_compute_prefix","","",null,null],[5,"gtk_entry_completion_delete_action","","",null,null],[5,"gtk_entry_completion_get_completion_prefix","","",null,null],[5,"gtk_entry_completion_get_entry","","",null,null],[5,"gtk_entry_completion_get_inline_completion","","",null,null],[5,"gtk_entry_completion_get_inline_selection","","",null,null],[5,"gtk_entry_completion_get_minimum_key_length","","",null,null],[5,"gtk_entry_completion_get_model","","",null,null],[5,"gtk_entry_completion_get_popup_completion","","",null,null],[5,"gtk_entry_completion_get_popup_set_width","","",null,null],[5,"gtk_entry_completion_get_popup_single_match","","",null,null],[5,"gtk_entry_completion_get_text_column","","",null,null],[5,"gtk_entry_completion_insert_action_markup","","",null,null],[5,"gtk_entry_completion_insert_action_text","","",null,null],[5,"gtk_entry_completion_insert_prefix","","",null,null],[5,"gtk_entry_completion_set_inline_completion","","",null,null],[5,"gtk_entry_completion_set_inline_selection","","",null,null],[5,"gtk_entry_completion_set_match_func","","",null,null],[5,"gtk_entry_completion_set_minimum_key_length","","",null,null],[5,"gtk_entry_completion_set_model","","",null,null],[5,"gtk_entry_completion_set_popup_completion","","",null,null],[5,"gtk_entry_completion_set_popup_set_width","","",null,null],[5,"gtk_entry_completion_set_popup_single_match","","",null,null],[5,"gtk_entry_completion_set_text_column","","",null,null],[5,"gtk_entry_icon_accessible_get_type","","",null,null],[5,"gtk_event_box_get_type","","",null,null],[5,"gtk_event_box_new","","",null,null],[5,"gtk_event_box_get_above_child","","",null,null],[5,"gtk_event_box_get_visible_window","","",null,null],[5,"gtk_event_box_set_above_child","","",null,null],[5,"gtk_event_box_set_visible_window","","",null,null],[5,"gtk_event_controller_get_type","","",null,null],[5,"gtk_event_controller_get_propagation_phase","","",null,null],[5,"gtk_event_controller_get_widget","","",null,null],[5,"gtk_event_controller_handle_event","","",null,null],[5,"gtk_event_controller_reset","","",null,null],[5,"gtk_event_controller_set_propagation_phase","","",null,null],[5,"gtk_expander_get_type","","",null,null],[5,"gtk_expander_new","","",null,null],[5,"gtk_expander_new_with_mnemonic","","",null,null],[5,"gtk_expander_get_expanded","","",null,null],[5,"gtk_expander_get_label","","",null,null],[5,"gtk_expander_get_label_fill","","",null,null],[5,"gtk_expander_get_label_widget","","",null,null],[5,"gtk_expander_get_resize_toplevel","","",null,null],[5,"gtk_expander_get_spacing","","",null,null],[5,"gtk_expander_get_use_markup","","",null,null],[5,"gtk_expander_get_use_underline","","",null,null],[5,"gtk_expander_set_expanded","","",null,null],[5,"gtk_expander_set_label","","",null,null],[5,"gtk_expander_set_label_fill","","",null,null],[5,"gtk_expander_set_label_widget","","",null,null],[5,"gtk_expander_set_resize_toplevel","","",null,null],[5,"gtk_expander_set_spacing","","",null,null],[5,"gtk_expander_set_use_markup","","",null,null],[5,"gtk_expander_set_use_underline","","",null,null],[5,"gtk_expander_accessible_get_type","","",null,null],[5,"gtk_file_chooser_button_get_type","","",null,null],[5,"gtk_file_chooser_button_new","","",null,null],[5,"gtk_file_chooser_button_new_with_dialog","","",null,null],[5,"gtk_file_chooser_button_get_focus_on_click","","",null,null],[5,"gtk_file_chooser_button_get_title","","",null,null],[5,"gtk_file_chooser_button_get_width_chars","","",null,null],[5,"gtk_file_chooser_button_set_focus_on_click","","",null,null],[5,"gtk_file_chooser_button_set_title","","",null,null],[5,"gtk_file_chooser_button_set_width_chars","","",null,null],[5,"gtk_file_chooser_dialog_get_type","","",null,null],[5,"gtk_file_chooser_dialog_new","","",null,null],[5,"gtk_file_chooser_widget_get_type","","",null,null],[5,"gtk_file_chooser_widget_new","","",null,null],[5,"gtk_file_filter_get_type","","",null,null],[5,"gtk_file_filter_new","","",null,null],[5,"gtk_file_filter_add_custom","","",null,null],[5,"gtk_file_filter_add_mime_type","","",null,null],[5,"gtk_file_filter_add_pattern","","",null,null],[5,"gtk_file_filter_add_pixbuf_formats","","",null,null],[5,"gtk_file_filter_filter","","",null,null],[5,"gtk_file_filter_get_name","","",null,null],[5,"gtk_file_filter_get_needed","","",null,null],[5,"gtk_file_filter_set_name","","",null,null],[5,"gtk_fixed_get_type","","",null,null],[5,"gtk_fixed_new","","",null,null],[5,"gtk_fixed_move","","",null,null],[5,"gtk_fixed_put","","",null,null],[5,"gtk_flow_box_get_type","","",null,null],[5,"gtk_flow_box_new","","",null,null],[5,"gtk_flow_box_get_activate_on_single_click","","",null,null],[5,"gtk_flow_box_get_child_at_index","","",null,null],[5,"gtk_flow_box_get_column_spacing","","",null,null],[5,"gtk_flow_box_get_homogeneous","","",null,null],[5,"gtk_flow_box_get_max_children_per_line","","",null,null],[5,"gtk_flow_box_get_min_children_per_line","","",null,null],[5,"gtk_flow_box_get_row_spacing","","",null,null],[5,"gtk_flow_box_get_selected_children","","",null,null],[5,"gtk_flow_box_get_selection_mode","","",null,null],[5,"gtk_flow_box_insert","","",null,null],[5,"gtk_flow_box_invalidate_filter","","",null,null],[5,"gtk_flow_box_invalidate_sort","","",null,null],[5,"gtk_flow_box_select_all","","",null,null],[5,"gtk_flow_box_select_child","","",null,null],[5,"gtk_flow_box_selected_foreach","","",null,null],[5,"gtk_flow_box_set_activate_on_single_click","","",null,null],[5,"gtk_flow_box_set_column_spacing","","",null,null],[5,"gtk_flow_box_set_filter_func","","",null,null],[5,"gtk_flow_box_set_hadjustment","","",null,null],[5,"gtk_flow_box_set_homogeneous","","",null,null],[5,"gtk_flow_box_set_max_children_per_line","","",null,null],[5,"gtk_flow_box_set_min_children_per_line","","",null,null],[5,"gtk_flow_box_set_row_spacing","","",null,null],[5,"gtk_flow_box_set_selection_mode","","",null,null],[5,"gtk_flow_box_set_sort_func","","",null,null],[5,"gtk_flow_box_set_vadjustment","","",null,null],[5,"gtk_flow_box_unselect_all","","",null,null],[5,"gtk_flow_box_unselect_child","","",null,null],[5,"gtk_flow_box_accessible_get_type","","",null,null],[5,"gtk_flow_box_child_get_type","","",null,null],[5,"gtk_flow_box_child_new","","",null,null],[5,"gtk_flow_box_child_changed","","",null,null],[5,"gtk_flow_box_child_get_index","","",null,null],[5,"gtk_flow_box_child_is_selected","","",null,null],[5,"gtk_flow_box_child_accessible_get_type","","",null,null],[5,"gtk_font_button_get_type","","",null,null],[5,"gtk_font_button_new","","",null,null],[5,"gtk_font_button_new_with_font","","",null,null],[5,"gtk_font_button_get_font_name","","",null,null],[5,"gtk_font_button_get_show_size","","",null,null],[5,"gtk_font_button_get_show_style","","",null,null],[5,"gtk_font_button_get_title","","",null,null],[5,"gtk_font_button_get_use_font","","",null,null],[5,"gtk_font_button_get_use_size","","",null,null],[5,"gtk_font_button_set_font_name","","",null,null],[5,"gtk_font_button_set_show_size","","",null,null],[5,"gtk_font_button_set_show_style","","",null,null],[5,"gtk_font_button_set_title","","",null,null],[5,"gtk_font_button_set_use_font","","",null,null],[5,"gtk_font_button_set_use_size","","",null,null],[5,"gtk_font_chooser_dialog_get_type","","",null,null],[5,"gtk_font_chooser_dialog_new","","",null,null],[5,"gtk_font_chooser_widget_get_type","","",null,null],[5,"gtk_font_chooser_widget_new","","",null,null],[5,"gtk_font_selection_get_type","","",null,null],[5,"gtk_font_selection_new","","",null,null],[5,"gtk_font_selection_get_face","","",null,null],[5,"gtk_font_selection_get_face_list","","",null,null],[5,"gtk_font_selection_get_family","","",null,null],[5,"gtk_font_selection_get_family_list","","",null,null],[5,"gtk_font_selection_get_font_name","","",null,null],[5,"gtk_font_selection_get_preview_entry","","",null,null],[5,"gtk_font_selection_get_preview_text","","",null,null],[5,"gtk_font_selection_get_size","","",null,null],[5,"gtk_font_selection_get_size_entry","","",null,null],[5,"gtk_font_selection_get_size_list","","",null,null],[5,"gtk_font_selection_set_font_name","","",null,null],[5,"gtk_font_selection_set_preview_text","","",null,null],[5,"gtk_font_selection_dialog_get_type","","",null,null],[5,"gtk_font_selection_dialog_new","","",null,null],[5,"gtk_font_selection_dialog_get_cancel_button","","",null,null],[5,"gtk_font_selection_dialog_get_font_name","","",null,null],[5,"gtk_font_selection_dialog_get_font_selection","","",null,null],[5,"gtk_font_selection_dialog_get_ok_button","","",null,null],[5,"gtk_font_selection_dialog_get_preview_text","","",null,null],[5,"gtk_font_selection_dialog_set_font_name","","",null,null],[5,"gtk_font_selection_dialog_set_preview_text","","",null,null],[5,"gtk_frame_get_type","","",null,null],[5,"gtk_frame_new","","",null,null],[5,"gtk_frame_get_label","","",null,null],[5,"gtk_frame_get_label_align","","",null,null],[5,"gtk_frame_get_label_widget","","",null,null],[5,"gtk_frame_get_shadow_type","","",null,null],[5,"gtk_frame_set_label","","",null,null],[5,"gtk_frame_set_label_align","","",null,null],[5,"gtk_frame_set_label_widget","","",null,null],[5,"gtk_frame_set_shadow_type","","",null,null],[5,"gtk_frame_accessible_get_type","","",null,null],[5,"gtk_gl_area_get_type","","",null,null],[5,"gtk_gl_area_new","","",null,null],[5,"gtk_gl_area_attach_buffers","","",null,null],[5,"gtk_gl_area_get_auto_render","","",null,null],[5,"gtk_gl_area_get_context","","",null,null],[5,"gtk_gl_area_get_error","","",null,null],[5,"gtk_gl_area_get_has_alpha","","",null,null],[5,"gtk_gl_area_get_has_depth_buffer","","",null,null],[5,"gtk_gl_area_get_has_stencil_buffer","","",null,null],[5,"gtk_gl_area_get_required_version","","",null,null],[5,"gtk_gl_area_make_current","","",null,null],[5,"gtk_gl_area_queue_render","","",null,null],[5,"gtk_gl_area_set_auto_render","","",null,null],[5,"gtk_gl_area_set_error","","",null,null],[5,"gtk_gl_area_set_has_alpha","","",null,null],[5,"gtk_gl_area_set_has_depth_buffer","","",null,null],[5,"gtk_gl_area_set_has_stencil_buffer","","",null,null],[5,"gtk_gl_area_set_required_version","","",null,null],[5,"gtk_gesture_get_type","","",null,null],[5,"gtk_gesture_get_bounding_box","","",null,null],[5,"gtk_gesture_get_bounding_box_center","","",null,null],[5,"gtk_gesture_get_device","","",null,null],[5,"gtk_gesture_get_group","","",null,null],[5,"gtk_gesture_get_last_event","","",null,null],[5,"gtk_gesture_get_last_updated_sequence","","",null,null],[5,"gtk_gesture_get_point","","",null,null],[5,"gtk_gesture_get_sequence_state","","",null,null],[5,"gtk_gesture_get_sequences","","",null,null],[5,"gtk_gesture_get_window","","",null,null],[5,"gtk_gesture_group","","",null,null],[5,"gtk_gesture_handles_sequence","","",null,null],[5,"gtk_gesture_is_active","","",null,null],[5,"gtk_gesture_is_grouped_with","","",null,null],[5,"gtk_gesture_is_recognized","","",null,null],[5,"gtk_gesture_set_sequence_state","","",null,null],[5,"gtk_gesture_set_state","","",null,null],[5,"gtk_gesture_set_window","","",null,null],[5,"gtk_gesture_ungroup","","",null,null],[5,"gtk_gesture_drag_get_type","","",null,null],[5,"gtk_gesture_drag_new","","",null,null],[5,"gtk_gesture_drag_get_offset","","",null,null],[5,"gtk_gesture_drag_get_start_point","","",null,null],[5,"gtk_gesture_long_press_get_type","","",null,null],[5,"gtk_gesture_long_press_new","","",null,null],[5,"gtk_gesture_multi_press_get_type","","",null,null],[5,"gtk_gesture_multi_press_new","","",null,null],[5,"gtk_gesture_multi_press_get_area","","",null,null],[5,"gtk_gesture_multi_press_set_area","","",null,null],[5,"gtk_gesture_pan_get_type","","",null,null],[5,"gtk_gesture_pan_new","","",null,null],[5,"gtk_gesture_pan_get_orientation","","",null,null],[5,"gtk_gesture_pan_set_orientation","","",null,null],[5,"gtk_gesture_rotate_get_type","","",null,null],[5,"gtk_gesture_rotate_new","","",null,null],[5,"gtk_gesture_rotate_get_angle_delta","","",null,null],[5,"gtk_gesture_single_get_type","","",null,null],[5,"gtk_gesture_single_get_button","","",null,null],[5,"gtk_gesture_single_get_current_button","","",null,null],[5,"gtk_gesture_single_get_current_sequence","","",null,null],[5,"gtk_gesture_single_get_exclusive","","",null,null],[5,"gtk_gesture_single_get_touch_only","","",null,null],[5,"gtk_gesture_single_set_button","","",null,null],[5,"gtk_gesture_single_set_exclusive","","",null,null],[5,"gtk_gesture_single_set_touch_only","","",null,null],[5,"gtk_gesture_swipe_get_type","","",null,null],[5,"gtk_gesture_swipe_new","","",null,null],[5,"gtk_gesture_swipe_get_velocity","","",null,null],[5,"gtk_gesture_zoom_get_type","","",null,null],[5,"gtk_gesture_zoom_new","","",null,null],[5,"gtk_gesture_zoom_get_scale_delta","","",null,null],[5,"gtk_grid_get_type","","",null,null],[5,"gtk_grid_new","","",null,null],[5,"gtk_grid_attach","","",null,null],[5,"gtk_grid_attach_next_to","","",null,null],[5,"gtk_grid_get_baseline_row","","",null,null],[5,"gtk_grid_get_child_at","","",null,null],[5,"gtk_grid_get_column_homogeneous","","",null,null],[5,"gtk_grid_get_column_spacing","","",null,null],[5,"gtk_grid_get_row_baseline_position","","",null,null],[5,"gtk_grid_get_row_homogeneous","","",null,null],[5,"gtk_grid_get_row_spacing","","",null,null],[5,"gtk_grid_insert_column","","",null,null],[5,"gtk_grid_insert_next_to","","",null,null],[5,"gtk_grid_insert_row","","",null,null],[5,"gtk_grid_remove_column","","",null,null],[5,"gtk_grid_remove_row","","",null,null],[5,"gtk_grid_set_baseline_row","","",null,null],[5,"gtk_grid_set_column_homogeneous","","",null,null],[5,"gtk_grid_set_column_spacing","","",null,null],[5,"gtk_grid_set_row_baseline_position","","",null,null],[5,"gtk_grid_set_row_homogeneous","","",null,null],[5,"gtk_grid_set_row_spacing","","",null,null],[5,"gtk_hbox_get_type","","",null,null],[5,"gtk_hbox_new","","",null,null],[5,"gtk_hbutton_box_get_type","","",null,null],[5,"gtk_hbutton_box_new","","",null,null],[5,"gtk_hpaned_get_type","","",null,null],[5,"gtk_hpaned_new","","",null,null],[5,"gtk_hsv_get_type","","",null,null],[5,"gtk_hsv_new","","",null,null],[5,"gtk_hsv_to_rgb","","",null,null],[5,"gtk_hsv_get_color","","",null,null],[5,"gtk_hsv_get_metrics","","",null,null],[5,"gtk_hsv_is_adjusting","","",null,null],[5,"gtk_hsv_set_color","","",null,null],[5,"gtk_hsv_set_metrics","","",null,null],[5,"gtk_hscale_get_type","","",null,null],[5,"gtk_hscale_new","","",null,null],[5,"gtk_hscale_new_with_range","","",null,null],[5,"gtk_hscrollbar_get_type","","",null,null],[5,"gtk_hscrollbar_new","","",null,null],[5,"gtk_hseparator_get_type","","",null,null],[5,"gtk_hseparator_new","","",null,null],[5,"gtk_handle_box_get_type","","",null,null],[5,"gtk_handle_box_new","","",null,null],[5,"gtk_handle_box_get_child_detached","","",null,null],[5,"gtk_handle_box_get_handle_position","","",null,null],[5,"gtk_handle_box_get_shadow_type","","",null,null],[5,"gtk_handle_box_get_snap_edge","","",null,null],[5,"gtk_handle_box_set_handle_position","","",null,null],[5,"gtk_handle_box_set_shadow_type","","",null,null],[5,"gtk_handle_box_set_snap_edge","","",null,null],[5,"gtk_header_bar_get_type","","",null,null],[5,"gtk_header_bar_new","","",null,null],[5,"gtk_header_bar_get_custom_title","","",null,null],[5,"gtk_header_bar_get_decoration_layout","","",null,null],[5,"gtk_header_bar_get_has_subtitle","","",null,null],[5,"gtk_header_bar_get_show_close_button","","",null,null],[5,"gtk_header_bar_get_subtitle","","",null,null],[5,"gtk_header_bar_get_title","","",null,null],[5,"gtk_header_bar_pack_end","","",null,null],[5,"gtk_header_bar_pack_start","","",null,null],[5,"gtk_header_bar_set_custom_title","","",null,null],[5,"gtk_header_bar_set_decoration_layout","","",null,null],[5,"gtk_header_bar_set_has_subtitle","","",null,null],[5,"gtk_header_bar_set_show_close_button","","",null,null],[5,"gtk_header_bar_set_subtitle","","",null,null],[5,"gtk_header_bar_set_title","","",null,null],[5,"gtk_im_context_get_type","","",null,null],[5,"gtk_im_context_delete_surrounding","","",null,null],[5,"gtk_im_context_filter_keypress","","",null,null],[5,"gtk_im_context_focus_in","","",null,null],[5,"gtk_im_context_focus_out","","",null,null],[5,"gtk_im_context_get_preedit_string","","",null,null],[5,"gtk_im_context_get_surrounding","","",null,null],[5,"gtk_im_context_reset","","",null,null],[5,"gtk_im_context_set_client_window","","",null,null],[5,"gtk_im_context_set_cursor_location","","",null,null],[5,"gtk_im_context_set_surrounding","","",null,null],[5,"gtk_im_context_set_use_preedit","","",null,null],[5,"gtk_im_context_simple_get_type","","",null,null],[5,"gtk_im_context_simple_new","","",null,null],[5,"gtk_im_context_simple_add_table","","",null,null],[5,"gtk_im_multicontext_get_type","","",null,null],[5,"gtk_im_multicontext_new","","",null,null],[5,"gtk_im_multicontext_append_menuitems","","",null,null],[5,"gtk_im_multicontext_get_context_id","","",null,null],[5,"gtk_im_multicontext_set_context_id","","",null,null],[5,"gtk_icon_factory_get_type","","",null,null],[5,"gtk_icon_factory_new","","",null,null],[5,"gtk_icon_factory_lookup_default","","",null,null],[5,"gtk_icon_factory_add","","",null,null],[5,"gtk_icon_factory_add_default","","",null,null],[5,"gtk_icon_factory_lookup","","",null,null],[5,"gtk_icon_factory_remove_default","","",null,null],[5,"gtk_icon_info_get_type","","",null,null],[5,"gtk_icon_info_new_for_pixbuf","","",null,null],[5,"gtk_icon_info_copy","","",null,null],[5,"gtk_icon_info_free","","",null,null],[5,"gtk_icon_info_get_attach_points","","",null,null],[5,"gtk_icon_info_get_base_scale","","",null,null],[5,"gtk_icon_info_get_base_size","","",null,null],[5,"gtk_icon_info_get_builtin_pixbuf","","",null,null],[5,"gtk_icon_info_get_display_name","","",null,null],[5,"gtk_icon_info_get_embedded_rect","","",null,null],[5,"gtk_icon_info_get_filename","","",null,null],[5,"gtk_icon_info_is_symbolic","","",null,null],[5,"gtk_icon_info_load_icon","","",null,null],[5,"gtk_icon_info_load_icon_async","","",null,null],[5,"gtk_icon_info_load_icon_finish","","",null,null],[5,"gtk_icon_info_load_surface","","",null,null],[5,"gtk_icon_info_load_symbolic","","",null,null],[5,"gtk_icon_info_load_symbolic_async","","",null,null],[5,"gtk_icon_info_load_symbolic_finish","","",null,null],[5,"gtk_icon_info_load_symbolic_for_context","","",null,null],[5,"gtk_icon_info_load_symbolic_for_context_async","","",null,null],[5,"gtk_icon_info_load_symbolic_for_context_finish","","",null,null],[5,"gtk_icon_info_load_symbolic_for_style","","",null,null],[5,"gtk_icon_info_set_raw_coordinates","","",null,null],[5,"gtk_icon_theme_get_type","","",null,null],[5,"gtk_icon_theme_new","","",null,null],[5,"gtk_icon_theme_add_builtin_icon","","",null,null],[5,"gtk_icon_theme_get_default","","",null,null],[5,"gtk_icon_theme_get_for_screen","","",null,null],[5,"gtk_icon_theme_add_resource_path","","",null,null],[5,"gtk_icon_theme_append_search_path","","",null,null],[5,"gtk_icon_theme_choose_icon","","",null,null],[5,"gtk_icon_theme_choose_icon_for_scale","","",null,null],[5,"gtk_icon_theme_get_example_icon_name","","",null,null],[5,"gtk_icon_theme_get_icon_sizes","","",null,null],[5,"gtk_icon_theme_get_search_path","","",null,null],[5,"gtk_icon_theme_has_icon","","",null,null],[5,"gtk_icon_theme_list_contexts","","",null,null],[5,"gtk_icon_theme_list_icons","","",null,null],[5,"gtk_icon_theme_load_icon","","",null,null],[5,"gtk_icon_theme_load_icon_for_scale","","",null,null],[5,"gtk_icon_theme_load_surface","","",null,null],[5,"gtk_icon_theme_lookup_by_gicon","","",null,null],[5,"gtk_icon_theme_lookup_by_gicon_for_scale","","",null,null],[5,"gtk_icon_theme_lookup_icon","","",null,null],[5,"gtk_icon_theme_lookup_icon_for_scale","","",null,null],[5,"gtk_icon_theme_prepend_search_path","","",null,null],[5,"gtk_icon_theme_rescan_if_needed","","",null,null],[5,"gtk_icon_theme_set_custom_theme","","",null,null],[5,"gtk_icon_theme_set_screen","","",null,null],[5,"gtk_icon_theme_set_search_path","","",null,null],[5,"gtk_icon_view_get_type","","",null,null],[5,"gtk_icon_view_new","","",null,null],[5,"gtk_icon_view_new_with_area","","",null,null],[5,"gtk_icon_view_new_with_model","","",null,null],[5,"gtk_icon_view_convert_widget_to_bin_window_coords","","",null,null],[5,"gtk_icon_view_create_drag_icon","","",null,null],[5,"gtk_icon_view_enable_model_drag_dest","","",null,null],[5,"gtk_icon_view_enable_model_drag_source","","",null,null],[5,"gtk_icon_view_get_activate_on_single_click","","",null,null],[5,"gtk_icon_view_get_cell_rect","","",null,null],[5,"gtk_icon_view_get_column_spacing","","",null,null],[5,"gtk_icon_view_get_columns","","",null,null],[5,"gtk_icon_view_get_cursor","","",null,null],[5,"gtk_icon_view_get_dest_item_at_pos","","",null,null],[5,"gtk_icon_view_get_drag_dest_item","","",null,null],[5,"gtk_icon_view_get_item_at_pos","","",null,null],[5,"gtk_icon_view_get_item_column","","",null,null],[5,"gtk_icon_view_get_item_orientation","","",null,null],[5,"gtk_icon_view_get_item_padding","","",null,null],[5,"gtk_icon_view_get_item_row","","",null,null],[5,"gtk_icon_view_get_item_width","","",null,null],[5,"gtk_icon_view_get_margin","","",null,null],[5,"gtk_icon_view_get_markup_column","","",null,null],[5,"gtk_icon_view_get_model","","",null,null],[5,"gtk_icon_view_get_path_at_pos","","",null,null],[5,"gtk_icon_view_get_pixbuf_column","","",null,null],[5,"gtk_icon_view_get_reorderable","","",null,null],[5,"gtk_icon_view_get_row_spacing","","",null,null],[5,"gtk_icon_view_get_selected_items","","",null,null],[5,"gtk_icon_view_get_selection_mode","","",null,null],[5,"gtk_icon_view_get_spacing","","",null,null],[5,"gtk_icon_view_get_text_column","","",null,null],[5,"gtk_icon_view_get_tooltip_column","","",null,null],[5,"gtk_icon_view_get_tooltip_context","","",null,null],[5,"gtk_icon_view_get_visible_range","","",null,null],[5,"gtk_icon_view_item_activated","","",null,null],[5,"gtk_icon_view_path_is_selected","","",null,null],[5,"gtk_icon_view_scroll_to_path","","",null,null],[5,"gtk_icon_view_select_all","","",null,null],[5,"gtk_icon_view_select_path","","",null,null],[5,"gtk_icon_view_selected_foreach","","",null,null],[5,"gtk_icon_view_set_activate_on_single_click","","",null,null],[5,"gtk_icon_view_set_column_spacing","","",null,null],[5,"gtk_icon_view_set_columns","","",null,null],[5,"gtk_icon_view_set_cursor","","",null,null],[5,"gtk_icon_view_set_drag_dest_item","","",null,null],[5,"gtk_icon_view_set_item_orientation","","",null,null],[5,"gtk_icon_view_set_item_padding","","",null,null],[5,"gtk_icon_view_set_item_width","","",null,null],[5,"gtk_icon_view_set_margin","","",null,null],[5,"gtk_icon_view_set_markup_column","","",null,null],[5,"gtk_icon_view_set_model","","",null,null],[5,"gtk_icon_view_set_pixbuf_column","","",null,null],[5,"gtk_icon_view_set_reorderable","","",null,null],[5,"gtk_icon_view_set_row_spacing","","",null,null],[5,"gtk_icon_view_set_selection_mode","","",null,null],[5,"gtk_icon_view_set_spacing","","",null,null],[5,"gtk_icon_view_set_text_column","","",null,null],[5,"gtk_icon_view_set_tooltip_cell","","",null,null],[5,"gtk_icon_view_set_tooltip_column","","",null,null],[5,"gtk_icon_view_set_tooltip_item","","",null,null],[5,"gtk_icon_view_unselect_all","","",null,null],[5,"gtk_icon_view_unselect_path","","",null,null],[5,"gtk_icon_view_unset_model_drag_dest","","",null,null],[5,"gtk_icon_view_unset_model_drag_source","","",null,null],[5,"gtk_icon_view_accessible_get_type","","",null,null],[5,"gtk_image_get_type","","",null,null],[5,"gtk_image_new","","",null,null],[5,"gtk_image_new_from_animation","","",null,null],[5,"gtk_image_new_from_file","","",null,null],[5,"gtk_image_new_from_gicon","","",null,null],[5,"gtk_image_new_from_icon_name","","",null,null],[5,"gtk_image_new_from_icon_set","","",null,null],[5,"gtk_image_new_from_pixbuf","","",null,null],[5,"gtk_image_new_from_resource","","",null,null],[5,"gtk_image_new_from_stock","","",null,null],[5,"gtk_image_new_from_surface","","",null,null],[5,"gtk_image_clear","","",null,null],[5,"gtk_image_get_animation","","",null,null],[5,"gtk_image_get_gicon","","",null,null],[5,"gtk_image_get_icon_name","","",null,null],[5,"gtk_image_get_icon_set","","",null,null],[5,"gtk_image_get_pixbuf","","",null,null],[5,"gtk_image_get_pixel_size","","",null,null],[5,"gtk_image_get_stock","","",null,null],[5,"gtk_image_get_storage_type","","",null,null],[5,"gtk_image_set_from_animation","","",null,null],[5,"gtk_image_set_from_file","","",null,null],[5,"gtk_image_set_from_gicon","","",null,null],[5,"gtk_image_set_from_icon_name","","",null,null],[5,"gtk_image_set_from_icon_set","","",null,null],[5,"gtk_image_set_from_pixbuf","","",null,null],[5,"gtk_image_set_from_resource","","",null,null],[5,"gtk_image_set_from_stock","","",null,null],[5,"gtk_image_set_from_surface","","",null,null],[5,"gtk_image_set_pixel_size","","",null,null],[5,"gtk_image_accessible_get_type","","",null,null],[5,"gtk_image_cell_accessible_get_type","","",null,null],[5,"gtk_image_menu_item_get_type","","",null,null],[5,"gtk_image_menu_item_new","","",null,null],[5,"gtk_image_menu_item_new_from_stock","","",null,null],[5,"gtk_image_menu_item_new_with_label","","",null,null],[5,"gtk_image_menu_item_new_with_mnemonic","","",null,null],[5,"gtk_image_menu_item_get_always_show_image","","",null,null],[5,"gtk_image_menu_item_get_image","","",null,null],[5,"gtk_image_menu_item_get_use_stock","","",null,null],[5,"gtk_image_menu_item_set_accel_group","","",null,null],[5,"gtk_image_menu_item_set_always_show_image","","",null,null],[5,"gtk_image_menu_item_set_image","","",null,null],[5,"gtk_image_menu_item_set_use_stock","","",null,null],[5,"gtk_info_bar_get_type","","",null,null],[5,"gtk_info_bar_new","","",null,null],[5,"gtk_info_bar_new_with_buttons","","",null,null],[5,"gtk_info_bar_add_action_widget","","",null,null],[5,"gtk_info_bar_add_button","","",null,null],[5,"gtk_info_bar_add_buttons","","",null,null],[5,"gtk_info_bar_get_action_area","","",null,null],[5,"gtk_info_bar_get_content_area","","",null,null],[5,"gtk_info_bar_get_message_type","","",null,null],[5,"gtk_info_bar_get_show_close_button","","",null,null],[5,"gtk_info_bar_response","","",null,null],[5,"gtk_info_bar_set_default_response","","",null,null],[5,"gtk_info_bar_set_message_type","","",null,null],[5,"gtk_info_bar_set_response_sensitive","","",null,null],[5,"gtk_info_bar_set_show_close_button","","",null,null],[5,"gtk_invisible_get_type","","",null,null],[5,"gtk_invisible_new","","",null,null],[5,"gtk_invisible_new_for_screen","","",null,null],[5,"gtk_invisible_get_screen","","",null,null],[5,"gtk_invisible_set_screen","","",null,null],[5,"gtk_label_get_type","","",null,null],[5,"gtk_label_new","","",null,null],[5,"gtk_label_new_with_mnemonic","","",null,null],[5,"gtk_label_get_angle","","",null,null],[5,"gtk_label_get_attributes","","",null,null],[5,"gtk_label_get_current_uri","","",null,null],[5,"gtk_label_get_ellipsize","","",null,null],[5,"gtk_label_get_justify","","",null,null],[5,"gtk_label_get_label","","",null,null],[5,"gtk_label_get_layout","","",null,null],[5,"gtk_label_get_layout_offsets","","",null,null],[5,"gtk_label_get_line_wrap","","",null,null],[5,"gtk_label_get_line_wrap_mode","","",null,null],[5,"gtk_label_get_lines","","",null,null],[5,"gtk_label_get_max_width_chars","","",null,null],[5,"gtk_label_get_mnemonic_keyval","","",null,null],[5,"gtk_label_get_mnemonic_widget","","",null,null],[5,"gtk_label_get_selectable","","",null,null],[5,"gtk_label_get_selection_bounds","","",null,null],[5,"gtk_label_get_single_line_mode","","",null,null],[5,"gtk_label_get_text","","",null,null],[5,"gtk_label_get_track_visited_links","","",null,null],[5,"gtk_label_get_use_markup","","",null,null],[5,"gtk_label_get_use_underline","","",null,null],[5,"gtk_label_get_width_chars","","",null,null],[5,"gtk_label_get_xalign","","",null,null],[5,"gtk_label_get_yalign","","",null,null],[5,"gtk_label_select_region","","",null,null],[5,"gtk_label_set_angle","","",null,null],[5,"gtk_label_set_attributes","","",null,null],[5,"gtk_label_set_ellipsize","","",null,null],[5,"gtk_label_set_justify","","",null,null],[5,"gtk_label_set_label","","",null,null],[5,"gtk_label_set_line_wrap","","",null,null],[5,"gtk_label_set_line_wrap_mode","","",null,null],[5,"gtk_label_set_lines","","",null,null],[5,"gtk_label_set_markup","","",null,null],[5,"gtk_label_set_markup_with_mnemonic","","",null,null],[5,"gtk_label_set_max_width_chars","","",null,null],[5,"gtk_label_set_mnemonic_widget","","",null,null],[5,"gtk_label_set_pattern","","",null,null],[5,"gtk_label_set_selectable","","",null,null],[5,"gtk_label_set_single_line_mode","","",null,null],[5,"gtk_label_set_text","","",null,null],[5,"gtk_label_set_text_with_mnemonic","","",null,null],[5,"gtk_label_set_track_visited_links","","",null,null],[5,"gtk_label_set_use_markup","","",null,null],[5,"gtk_label_set_use_underline","","",null,null],[5,"gtk_label_set_width_chars","","",null,null],[5,"gtk_label_set_xalign","","",null,null],[5,"gtk_label_set_yalign","","",null,null],[5,"gtk_label_accessible_get_type","","",null,null],[5,"gtk_layout_get_type","","",null,null],[5,"gtk_layout_new","","",null,null],[5,"gtk_layout_get_bin_window","","",null,null],[5,"gtk_layout_get_hadjustment","","",null,null],[5,"gtk_layout_get_size","","",null,null],[5,"gtk_layout_get_vadjustment","","",null,null],[5,"gtk_layout_move","","",null,null],[5,"gtk_layout_put","","",null,null],[5,"gtk_layout_set_hadjustment","","",null,null],[5,"gtk_layout_set_size","","",null,null],[5,"gtk_layout_set_vadjustment","","",null,null],[5,"gtk_level_bar_get_type","","",null,null],[5,"gtk_level_bar_new","","",null,null],[5,"gtk_level_bar_new_for_interval","","",null,null],[5,"gtk_level_bar_add_offset_value","","",null,null],[5,"gtk_level_bar_get_inverted","","",null,null],[5,"gtk_level_bar_get_max_value","","",null,null],[5,"gtk_level_bar_get_min_value","","",null,null],[5,"gtk_level_bar_get_mode","","",null,null],[5,"gtk_level_bar_get_offset_value","","",null,null],[5,"gtk_level_bar_get_value","","",null,null],[5,"gtk_level_bar_remove_offset_value","","",null,null],[5,"gtk_level_bar_set_inverted","","",null,null],[5,"gtk_level_bar_set_max_value","","",null,null],[5,"gtk_level_bar_set_min_value","","",null,null],[5,"gtk_level_bar_set_mode","","",null,null],[5,"gtk_level_bar_set_value","","",null,null],[5,"gtk_level_bar_accessible_get_type","","",null,null],[5,"gtk_link_button_get_type","","",null,null],[5,"gtk_link_button_new","","",null,null],[5,"gtk_link_button_new_with_label","","",null,null],[5,"gtk_link_button_get_uri","","",null,null],[5,"gtk_link_button_get_visited","","",null,null],[5,"gtk_link_button_set_uri","","",null,null],[5,"gtk_link_button_set_visited","","",null,null],[5,"gtk_link_button_accessible_get_type","","",null,null],[5,"gtk_list_box_get_type","","",null,null],[5,"gtk_list_box_new","","",null,null],[5,"gtk_list_box_bind_model","","",null,null],[5,"gtk_list_box_drag_highlight_row","","",null,null],[5,"gtk_list_box_drag_unhighlight_row","","",null,null],[5,"gtk_list_box_get_activate_on_single_click","","",null,null],[5,"gtk_list_box_get_adjustment","","",null,null],[5,"gtk_list_box_get_row_at_index","","",null,null],[5,"gtk_list_box_get_row_at_y","","",null,null],[5,"gtk_list_box_get_selected_row","","",null,null],[5,"gtk_list_box_get_selected_rows","","",null,null],[5,"gtk_list_box_get_selection_mode","","",null,null],[5,"gtk_list_box_insert","","",null,null],[5,"gtk_list_box_invalidate_filter","","",null,null],[5,"gtk_list_box_invalidate_headers","","",null,null],[5,"gtk_list_box_invalidate_sort","","",null,null],[5,"gtk_list_box_prepend","","",null,null],[5,"gtk_list_box_select_all","","",null,null],[5,"gtk_list_box_select_row","","",null,null],[5,"gtk_list_box_selected_foreach","","",null,null],[5,"gtk_list_box_set_activate_on_single_click","","",null,null],[5,"gtk_list_box_set_adjustment","","",null,null],[5,"gtk_list_box_set_filter_func","","",null,null],[5,"gtk_list_box_set_header_func","","",null,null],[5,"gtk_list_box_set_placeholder","","",null,null],[5,"gtk_list_box_set_selection_mode","","",null,null],[5,"gtk_list_box_set_sort_func","","",null,null],[5,"gtk_list_box_unselect_all","","",null,null],[5,"gtk_list_box_unselect_row","","",null,null],[5,"gtk_list_box_accessible_get_type","","",null,null],[5,"gtk_list_box_row_get_type","","",null,null],[5,"gtk_list_box_row_new","","",null,null],[5,"gtk_list_box_row_changed","","",null,null],[5,"gtk_list_box_row_get_activatable","","",null,null],[5,"gtk_list_box_row_get_header","","",null,null],[5,"gtk_list_box_row_get_index","","",null,null],[5,"gtk_list_box_row_get_selectable","","",null,null],[5,"gtk_list_box_row_is_selected","","",null,null],[5,"gtk_list_box_row_set_activatable","","",null,null],[5,"gtk_list_box_row_set_header","","",null,null],[5,"gtk_list_box_row_set_selectable","","",null,null],[5,"gtk_list_box_row_accessible_get_type","","",null,null],[5,"gtk_list_store_get_type","","",null,null],[5,"gtk_list_store_new","","",null,null],[5,"gtk_list_store_newv","","",null,null],[5,"gtk_list_store_append","","",null,null],[5,"gtk_list_store_clear","","",null,null],[5,"gtk_list_store_insert","","",null,null],[5,"gtk_list_store_insert_after","","",null,null],[5,"gtk_list_store_insert_before","","",null,null],[5,"gtk_list_store_insert_with_values","","",null,null],[5,"gtk_list_store_insert_with_valuesv","","",null,null],[5,"gtk_list_store_iter_is_valid","","",null,null],[5,"gtk_list_store_move_after","","",null,null],[5,"gtk_list_store_move_before","","",null,null],[5,"gtk_list_store_prepend","","",null,null],[5,"gtk_list_store_remove","","",null,null],[5,"gtk_list_store_reorder","","",null,null],[5,"gtk_list_store_set","","",null,null],[5,"gtk_list_store_set_column_types","","",null,null],[5,"gtk_list_store_set_value","","",null,null],[5,"gtk_list_store_set_valuesv","","",null,null],[5,"gtk_list_store_swap","","",null,null],[5,"gtk_lock_button_get_type","","",null,null],[5,"gtk_lock_button_new","","",null,null],[5,"gtk_lock_button_get_permission","","",null,null],[5,"gtk_lock_button_set_permission","","",null,null],[5,"gtk_lock_button_accessible_get_type","","",null,null],[5,"gtk_menu_get_type","","",null,null],[5,"gtk_menu_new","","",null,null],[5,"gtk_menu_new_from_model","","",null,null],[5,"gtk_menu_get_for_attach_widget","","",null,null],[5,"gtk_menu_attach","","",null,null],[5,"gtk_menu_attach_to_widget","","",null,null],[5,"gtk_menu_detach","","",null,null],[5,"gtk_menu_get_accel_group","","",null,null],[5,"gtk_menu_get_accel_path","","",null,null],[5,"gtk_menu_get_active","","",null,null],[5,"gtk_menu_get_attach_widget","","",null,null],[5,"gtk_menu_get_monitor","","",null,null],[5,"gtk_menu_get_reserve_toggle_size","","",null,null],[5,"gtk_menu_get_tearoff_state","","",null,null],[5,"gtk_menu_get_title","","",null,null],[5,"gtk_menu_popdown","","",null,null],[5,"gtk_menu_popup","","",null,null],[5,"gtk_menu_popup_for_device","","",null,null],[5,"gtk_menu_reorder_child","","",null,null],[5,"gtk_menu_reposition","","",null,null],[5,"gtk_menu_set_accel_group","","",null,null],[5,"gtk_menu_set_accel_path","","",null,null],[5,"gtk_menu_set_active","","",null,null],[5,"gtk_menu_set_monitor","","",null,null],[5,"gtk_menu_set_reserve_toggle_size","","",null,null],[5,"gtk_menu_set_screen","","",null,null],[5,"gtk_menu_set_tearoff_state","","",null,null],[5,"gtk_menu_set_title","","",null,null],[5,"gtk_menu_accessible_get_type","","",null,null],[5,"gtk_menu_bar_get_type","","",null,null],[5,"gtk_menu_bar_new","","",null,null],[5,"gtk_menu_bar_new_from_model","","",null,null],[5,"gtk_menu_bar_get_child_pack_direction","","",null,null],[5,"gtk_menu_bar_get_pack_direction","","",null,null],[5,"gtk_menu_bar_set_child_pack_direction","","",null,null],[5,"gtk_menu_bar_set_pack_direction","","",null,null],[5,"gtk_menu_button_get_type","","",null,null],[5,"gtk_menu_button_new","","",null,null],[5,"gtk_menu_button_get_align_widget","","",null,null],[5,"gtk_menu_button_get_direction","","",null,null],[5,"gtk_menu_button_get_menu_model","","",null,null],[5,"gtk_menu_button_get_popover","","",null,null],[5,"gtk_menu_button_get_popup","","",null,null],[5,"gtk_menu_button_get_use_popover","","",null,null],[5,"gtk_menu_button_set_align_widget","","",null,null],[5,"gtk_menu_button_set_direction","","",null,null],[5,"gtk_menu_button_set_menu_model","","",null,null],[5,"gtk_menu_button_set_popover","","",null,null],[5,"gtk_menu_button_set_popup","","",null,null],[5,"gtk_menu_button_set_use_popover","","",null,null],[5,"gtk_menu_button_accessible_get_type","","",null,null],[5,"gtk_menu_item_get_type","","",null,null],[5,"gtk_menu_item_new","","",null,null],[5,"gtk_menu_item_new_with_label","","",null,null],[5,"gtk_menu_item_new_with_mnemonic","","",null,null],[5,"gtk_menu_item_activate","","",null,null],[5,"gtk_menu_item_deselect","","",null,null],[5,"gtk_menu_item_get_accel_path","","",null,null],[5,"gtk_menu_item_get_label","","",null,null],[5,"gtk_menu_item_get_reserve_indicator","","",null,null],[5,"gtk_menu_item_get_right_justified","","",null,null],[5,"gtk_menu_item_get_submenu","","",null,null],[5,"gtk_menu_item_get_use_underline","","",null,null],[5,"gtk_menu_item_select","","",null,null],[5,"gtk_menu_item_set_accel_path","","",null,null],[5,"gtk_menu_item_set_label","","",null,null],[5,"gtk_menu_item_set_reserve_indicator","","",null,null],[5,"gtk_menu_item_set_right_justified","","",null,null],[5,"gtk_menu_item_set_submenu","","",null,null],[5,"gtk_menu_item_set_use_underline","","",null,null],[5,"gtk_menu_item_toggle_size_allocate","","",null,null],[5,"gtk_menu_item_toggle_size_request","","",null,null],[5,"gtk_menu_item_accessible_get_type","","",null,null],[5,"gtk_menu_shell_get_type","","",null,null],[5,"gtk_menu_shell_activate_item","","",null,null],[5,"gtk_menu_shell_append","","",null,null],[5,"gtk_menu_shell_bind_model","","",null,null],[5,"gtk_menu_shell_cancel","","",null,null],[5,"gtk_menu_shell_deactivate","","",null,null],[5,"gtk_menu_shell_deselect","","",null,null],[5,"gtk_menu_shell_get_parent_shell","","",null,null],[5,"gtk_menu_shell_get_selected_item","","",null,null],[5,"gtk_menu_shell_get_take_focus","","",null,null],[5,"gtk_menu_shell_insert","","",null,null],[5,"gtk_menu_shell_prepend","","",null,null],[5,"gtk_menu_shell_select_first","","",null,null],[5,"gtk_menu_shell_select_item","","",null,null],[5,"gtk_menu_shell_set_take_focus","","",null,null],[5,"gtk_menu_shell_accessible_get_type","","",null,null],[5,"gtk_menu_tool_button_get_type","","",null,null],[5,"gtk_menu_tool_button_new","","",null,null],[5,"gtk_menu_tool_button_new_from_stock","","",null,null],[5,"gtk_menu_tool_button_get_menu","","",null,null],[5,"gtk_menu_tool_button_set_arrow_tooltip_markup","","",null,null],[5,"gtk_menu_tool_button_set_arrow_tooltip_text","","",null,null],[5,"gtk_menu_tool_button_set_menu","","",null,null],[5,"gtk_message_dialog_get_type","","",null,null],[5,"gtk_message_dialog_new","","",null,null],[5,"gtk_message_dialog_new_with_markup","","",null,null],[5,"gtk_message_dialog_format_secondary_markup","","",null,null],[5,"gtk_message_dialog_format_secondary_text","","",null,null],[5,"gtk_message_dialog_get_image","","",null,null],[5,"gtk_message_dialog_get_message_area","","",null,null],[5,"gtk_message_dialog_set_image","","",null,null],[5,"gtk_message_dialog_set_markup","","",null,null],[5,"gtk_misc_get_type","","",null,null],[5,"gtk_misc_get_alignment","","",null,null],[5,"gtk_misc_get_padding","","",null,null],[5,"gtk_misc_set_alignment","","",null,null],[5,"gtk_misc_set_padding","","",null,null],[5,"gtk_model_button_get_type","","",null,null],[5,"gtk_model_button_new","","",null,null],[5,"gtk_mount_operation_get_type","","",null,null],[5,"gtk_mount_operation_new","","",null,null],[5,"gtk_mount_operation_get_parent","","",null,null],[5,"gtk_mount_operation_get_screen","","",null,null],[5,"gtk_mount_operation_is_showing","","",null,null],[5,"gtk_mount_operation_set_parent","","",null,null],[5,"gtk_mount_operation_set_screen","","",null,null],[5,"gtk_notebook_get_type","","",null,null],[5,"gtk_notebook_new","","",null,null],[5,"gtk_notebook_append_page","","",null,null],[5,"gtk_notebook_append_page_menu","","",null,null],[5,"gtk_notebook_detach_tab","","",null,null],[5,"gtk_notebook_get_action_widget","","",null,null],[5,"gtk_notebook_get_current_page","","",null,null],[5,"gtk_notebook_get_group_name","","",null,null],[5,"gtk_notebook_get_menu_label","","",null,null],[5,"gtk_notebook_get_menu_label_text","","",null,null],[5,"gtk_notebook_get_n_pages","","",null,null],[5,"gtk_notebook_get_nth_page","","",null,null],[5,"gtk_notebook_get_scrollable","","",null,null],[5,"gtk_notebook_get_show_border","","",null,null],[5,"gtk_notebook_get_show_tabs","","",null,null],[5,"gtk_notebook_get_tab_detachable","","",null,null],[5,"gtk_notebook_get_tab_hborder","","",null,null],[5,"gtk_notebook_get_tab_label","","",null,null],[5,"gtk_notebook_get_tab_label_text","","",null,null],[5,"gtk_notebook_get_tab_pos","","",null,null],[5,"gtk_notebook_get_tab_reorderable","","",null,null],[5,"gtk_notebook_get_tab_vborder","","",null,null],[5,"gtk_notebook_insert_page","","",null,null],[5,"gtk_notebook_insert_page_menu","","",null,null],[5,"gtk_notebook_next_page","","",null,null],[5,"gtk_notebook_page_num","","",null,null],[5,"gtk_notebook_popup_disable","","",null,null],[5,"gtk_notebook_popup_enable","","",null,null],[5,"gtk_notebook_prepend_page","","",null,null],[5,"gtk_notebook_prepend_page_menu","","",null,null],[5,"gtk_notebook_prev_page","","",null,null],[5,"gtk_notebook_remove_page","","",null,null],[5,"gtk_notebook_reorder_child","","",null,null],[5,"gtk_notebook_set_action_widget","","",null,null],[5,"gtk_notebook_set_current_page","","",null,null],[5,"gtk_notebook_set_group_name","","",null,null],[5,"gtk_notebook_set_menu_label","","",null,null],[5,"gtk_notebook_set_menu_label_text","","",null,null],[5,"gtk_notebook_set_scrollable","","",null,null],[5,"gtk_notebook_set_show_border","","",null,null],[5,"gtk_notebook_set_show_tabs","","",null,null],[5,"gtk_notebook_set_tab_detachable","","",null,null],[5,"gtk_notebook_set_tab_label","","",null,null],[5,"gtk_notebook_set_tab_label_text","","",null,null],[5,"gtk_notebook_set_tab_pos","","",null,null],[5,"gtk_notebook_set_tab_reorderable","","",null,null],[5,"gtk_notebook_accessible_get_type","","",null,null],[5,"gtk_notebook_page_accessible_get_type","","",null,null],[5,"gtk_notebook_page_accessible_new","","",null,null],[5,"gtk_notebook_page_accessible_invalidate","","",null,null],[5,"gtk_numerable_icon_get_type","","",null,null],[5,"gtk_numerable_icon_new","","",null,null],[5,"gtk_numerable_icon_new_with_style_context","","",null,null],[5,"gtk_numerable_icon_get_background_gicon","","",null,null],[5,"gtk_numerable_icon_get_background_icon_name","","",null,null],[5,"gtk_numerable_icon_get_count","","",null,null],[5,"gtk_numerable_icon_get_label","","",null,null],[5,"gtk_numerable_icon_get_style_context","","",null,null],[5,"gtk_numerable_icon_set_background_gicon","","",null,null],[5,"gtk_numerable_icon_set_background_icon_name","","",null,null],[5,"gtk_numerable_icon_set_count","","",null,null],[5,"gtk_numerable_icon_set_label","","",null,null],[5,"gtk_numerable_icon_set_style_context","","",null,null],[5,"gtk_offscreen_window_get_type","","",null,null],[5,"gtk_offscreen_window_new","","",null,null],[5,"gtk_offscreen_window_get_pixbuf","","",null,null],[5,"gtk_offscreen_window_get_surface","","",null,null],[5,"gtk_overlay_get_type","","",null,null],[5,"gtk_overlay_new","","",null,null],[5,"gtk_overlay_add_overlay","","",null,null],[5,"gtk_page_setup_get_type","","",null,null],[5,"gtk_page_setup_new","","",null,null],[5,"gtk_page_setup_new_from_file","","",null,null],[5,"gtk_page_setup_new_from_key_file","","",null,null],[5,"gtk_page_setup_copy","","",null,null],[5,"gtk_page_setup_get_bottom_margin","","",null,null],[5,"gtk_page_setup_get_left_margin","","",null,null],[5,"gtk_page_setup_get_orientation","","",null,null],[5,"gtk_page_setup_get_page_height","","",null,null],[5,"gtk_page_setup_get_page_width","","",null,null],[5,"gtk_page_setup_get_paper_height","","",null,null],[5,"gtk_page_setup_get_paper_size","","",null,null],[5,"gtk_page_setup_get_paper_width","","",null,null],[5,"gtk_page_setup_get_right_margin","","",null,null],[5,"gtk_page_setup_get_top_margin","","",null,null],[5,"gtk_page_setup_load_file","","",null,null],[5,"gtk_page_setup_load_key_file","","",null,null],[5,"gtk_page_setup_set_bottom_margin","","",null,null],[5,"gtk_page_setup_set_left_margin","","",null,null],[5,"gtk_page_setup_set_orientation","","",null,null],[5,"gtk_page_setup_set_paper_size","","",null,null],[5,"gtk_page_setup_set_paper_size_and_default_margins","","",null,null],[5,"gtk_page_setup_set_right_margin","","",null,null],[5,"gtk_page_setup_set_top_margin","","",null,null],[5,"gtk_page_setup_to_file","","",null,null],[5,"gtk_page_setup_to_key_file","","",null,null],[5,"gtk_paned_get_type","","",null,null],[5,"gtk_paned_new","","",null,null],[5,"gtk_paned_add1","","",null,null],[5,"gtk_paned_add2","","",null,null],[5,"gtk_paned_get_child1","","",null,null],[5,"gtk_paned_get_child2","","",null,null],[5,"gtk_paned_get_handle_window","","",null,null],[5,"gtk_paned_get_position","","",null,null],[5,"gtk_paned_get_wide_handle","","",null,null],[5,"gtk_paned_pack1","","",null,null],[5,"gtk_paned_pack2","","",null,null],[5,"gtk_paned_set_position","","",null,null],[5,"gtk_paned_set_wide_handle","","",null,null],[5,"gtk_paned_accessible_get_type","","",null,null],[5,"gtk_places_sidebar_get_type","","",null,null],[5,"gtk_places_sidebar_new","","",null,null],[5,"gtk_places_sidebar_add_shortcut","","",null,null],[5,"gtk_places_sidebar_get_local_only","","",null,null],[5,"gtk_places_sidebar_get_location","","",null,null],[5,"gtk_places_sidebar_get_nth_bookmark","","",null,null],[5,"gtk_places_sidebar_get_open_flags","","",null,null],[5,"gtk_places_sidebar_get_show_connect_to_server","","",null,null],[5,"gtk_places_sidebar_get_show_desktop","","",null,null],[5,"gtk_places_sidebar_get_show_enter_location","","",null,null],[5,"gtk_places_sidebar_list_shortcuts","","",null,null],[5,"gtk_places_sidebar_remove_shortcut","","",null,null],[5,"gtk_places_sidebar_set_local_only","","",null,null],[5,"gtk_places_sidebar_set_location","","",null,null],[5,"gtk_places_sidebar_set_open_flags","","",null,null],[5,"gtk_places_sidebar_set_show_connect_to_server","","",null,null],[5,"gtk_places_sidebar_set_show_desktop","","",null,null],[5,"gtk_places_sidebar_set_show_enter_location","","",null,null],[5,"gtk_plug_get_type","","",null,null],[5,"gtk_plug_get_embedded","","",null,null],[5,"gtk_plug_get_socket_window","","",null,null],[5,"gtk_popover_get_type","","",null,null],[5,"gtk_popover_new","","",null,null],[5,"gtk_popover_new_from_model","","",null,null],[5,"gtk_popover_bind_model","","",null,null],[5,"gtk_popover_get_modal","","",null,null],[5,"gtk_popover_get_pointing_to","","",null,null],[5,"gtk_popover_get_position","","",null,null],[5,"gtk_popover_get_relative_to","","",null,null],[5,"gtk_popover_get_transitions_enabled","","",null,null],[5,"gtk_popover_set_modal","","",null,null],[5,"gtk_popover_set_pointing_to","","",null,null],[5,"gtk_popover_set_position","","",null,null],[5,"gtk_popover_set_relative_to","","",null,null],[5,"gtk_popover_set_transitions_enabled","","",null,null],[5,"gtk_popover_accessible_get_type","","",null,null],[5,"gtk_popover_menu_get_type","","",null,null],[5,"gtk_popover_menu_new","","",null,null],[5,"gtk_popover_menu_open_submenu","","",null,null],[5,"gtk_print_context_get_type","","",null,null],[5,"gtk_print_context_create_pango_context","","",null,null],[5,"gtk_print_context_create_pango_layout","","",null,null],[5,"gtk_print_context_get_cairo_context","","",null,null],[5,"gtk_print_context_get_dpi_x","","",null,null],[5,"gtk_print_context_get_dpi_y","","",null,null],[5,"gtk_print_context_get_hard_margins","","",null,null],[5,"gtk_print_context_get_height","","",null,null],[5,"gtk_print_context_get_page_setup","","",null,null],[5,"gtk_print_context_get_pango_fontmap","","",null,null],[5,"gtk_print_context_get_width","","",null,null],[5,"gtk_print_context_set_cairo_context","","",null,null],[5,"gtk_print_operation_get_type","","",null,null],[5,"gtk_print_operation_new","","",null,null],[5,"gtk_print_operation_cancel","","",null,null],[5,"gtk_print_operation_draw_page_finish","","",null,null],[5,"gtk_print_operation_get_default_page_setup","","",null,null],[5,"gtk_print_operation_get_embed_page_setup","","",null,null],[5,"gtk_print_operation_get_error","","",null,null],[5,"gtk_print_operation_get_has_selection","","",null,null],[5,"gtk_print_operation_get_n_pages_to_print","","",null,null],[5,"gtk_print_operation_get_print_settings","","",null,null],[5,"gtk_print_operation_get_status","","",null,null],[5,"gtk_print_operation_get_status_string","","",null,null],[5,"gtk_print_operation_get_support_selection","","",null,null],[5,"gtk_print_operation_is_finished","","",null,null],[5,"gtk_print_operation_run","","",null,null],[5,"gtk_print_operation_set_allow_async","","",null,null],[5,"gtk_print_operation_set_current_page","","",null,null],[5,"gtk_print_operation_set_custom_tab_label","","",null,null],[5,"gtk_print_operation_set_default_page_setup","","",null,null],[5,"gtk_print_operation_set_defer_drawing","","",null,null],[5,"gtk_print_operation_set_embed_page_setup","","",null,null],[5,"gtk_print_operation_set_export_filename","","",null,null],[5,"gtk_print_operation_set_has_selection","","",null,null],[5,"gtk_print_operation_set_job_name","","",null,null],[5,"gtk_print_operation_set_n_pages","","",null,null],[5,"gtk_print_operation_set_print_settings","","",null,null],[5,"gtk_print_operation_set_show_progress","","",null,null],[5,"gtk_print_operation_set_support_selection","","",null,null],[5,"gtk_print_operation_set_track_print_status","","",null,null],[5,"gtk_print_operation_set_unit","","",null,null],[5,"gtk_print_operation_set_use_full_page","","",null,null],[5,"gtk_print_settings_get_type","","",null,null],[5,"gtk_print_settings_new","","",null,null],[5,"gtk_print_settings_new_from_file","","",null,null],[5,"gtk_print_settings_new_from_key_file","","",null,null],[5,"gtk_print_settings_copy","","",null,null],[5,"gtk_print_settings_foreach","","",null,null],[5,"gtk_print_settings_get","","",null,null],[5,"gtk_print_settings_get_bool","","",null,null],[5,"gtk_print_settings_get_collate","","",null,null],[5,"gtk_print_settings_get_default_source","","",null,null],[5,"gtk_print_settings_get_dither","","",null,null],[5,"gtk_print_settings_get_double","","",null,null],[5,"gtk_print_settings_get_double_with_default","","",null,null],[5,"gtk_print_settings_get_duplex","","",null,null],[5,"gtk_print_settings_get_finishings","","",null,null],[5,"gtk_print_settings_get_int","","",null,null],[5,"gtk_print_settings_get_int_with_default","","",null,null],[5,"gtk_print_settings_get_length","","",null,null],[5,"gtk_print_settings_get_media_type","","",null,null],[5,"gtk_print_settings_get_n_copies","","",null,null],[5,"gtk_print_settings_get_number_up","","",null,null],[5,"gtk_print_settings_get_number_up_layout","","",null,null],[5,"gtk_print_settings_get_orientation","","",null,null],[5,"gtk_print_settings_get_output_bin","","",null,null],[5,"gtk_print_settings_get_page_ranges","","",null,null],[5,"gtk_print_settings_get_page_set","","",null,null],[5,"gtk_print_settings_get_paper_height","","",null,null],[5,"gtk_print_settings_get_paper_size","","",null,null],[5,"gtk_print_settings_get_paper_width","","",null,null],[5,"gtk_print_settings_get_print_pages","","",null,null],[5,"gtk_print_settings_get_printer","","",null,null],[5,"gtk_print_settings_get_printer_lpi","","",null,null],[5,"gtk_print_settings_get_quality","","",null,null],[5,"gtk_print_settings_get_resolution","","",null,null],[5,"gtk_print_settings_get_resolution_x","","",null,null],[5,"gtk_print_settings_get_resolution_y","","",null,null],[5,"gtk_print_settings_get_reverse","","",null,null],[5,"gtk_print_settings_get_scale","","",null,null],[5,"gtk_print_settings_get_use_color","","",null,null],[5,"gtk_print_settings_has_key","","",null,null],[5,"gtk_print_settings_load_file","","",null,null],[5,"gtk_print_settings_load_key_file","","",null,null],[5,"gtk_print_settings_set","","",null,null],[5,"gtk_print_settings_set_bool","","",null,null],[5,"gtk_print_settings_set_collate","","",null,null],[5,"gtk_print_settings_set_default_source","","",null,null],[5,"gtk_print_settings_set_dither","","",null,null],[5,"gtk_print_settings_set_double","","",null,null],[5,"gtk_print_settings_set_duplex","","",null,null],[5,"gtk_print_settings_set_finishings","","",null,null],[5,"gtk_print_settings_set_int","","",null,null],[5,"gtk_print_settings_set_length","","",null,null],[5,"gtk_print_settings_set_media_type","","",null,null],[5,"gtk_print_settings_set_n_copies","","",null,null],[5,"gtk_print_settings_set_number_up","","",null,null],[5,"gtk_print_settings_set_number_up_layout","","",null,null],[5,"gtk_print_settings_set_orientation","","",null,null],[5,"gtk_print_settings_set_output_bin","","",null,null],[5,"gtk_print_settings_set_page_ranges","","",null,null],[5,"gtk_print_settings_set_page_set","","",null,null],[5,"gtk_print_settings_set_paper_height","","",null,null],[5,"gtk_print_settings_set_paper_size","","",null,null],[5,"gtk_print_settings_set_paper_width","","",null,null],[5,"gtk_print_settings_set_print_pages","","",null,null],[5,"gtk_print_settings_set_printer","","",null,null],[5,"gtk_print_settings_set_printer_lpi","","",null,null],[5,"gtk_print_settings_set_quality","","",null,null],[5,"gtk_print_settings_set_resolution","","",null,null],[5,"gtk_print_settings_set_resolution_xy","","",null,null],[5,"gtk_print_settings_set_reverse","","",null,null],[5,"gtk_print_settings_set_scale","","",null,null],[5,"gtk_print_settings_set_use_color","","",null,null],[5,"gtk_print_settings_to_file","","",null,null],[5,"gtk_print_settings_to_key_file","","",null,null],[5,"gtk_print_settings_unset","","",null,null],[5,"gtk_progress_bar_get_type","","",null,null],[5,"gtk_progress_bar_new","","",null,null],[5,"gtk_progress_bar_get_ellipsize","","",null,null],[5,"gtk_progress_bar_get_fraction","","",null,null],[5,"gtk_progress_bar_get_inverted","","",null,null],[5,"gtk_progress_bar_get_pulse_step","","",null,null],[5,"gtk_progress_bar_get_show_text","","",null,null],[5,"gtk_progress_bar_get_text","","",null,null],[5,"gtk_progress_bar_pulse","","",null,null],[5,"gtk_progress_bar_set_ellipsize","","",null,null],[5,"gtk_progress_bar_set_fraction","","",null,null],[5,"gtk_progress_bar_set_inverted","","",null,null],[5,"gtk_progress_bar_set_pulse_step","","",null,null],[5,"gtk_progress_bar_set_show_text","","",null,null],[5,"gtk_progress_bar_set_text","","",null,null],[5,"gtk_progress_bar_accessible_get_type","","",null,null],[5,"gtk_radio_action_get_type","","",null,null],[5,"gtk_radio_action_new","","",null,null],[5,"gtk_radio_action_get_current_value","","",null,null],[5,"gtk_radio_action_get_group","","",null,null],[5,"gtk_radio_action_join_group","","",null,null],[5,"gtk_radio_action_set_current_value","","",null,null],[5,"gtk_radio_action_set_group","","",null,null],[5,"gtk_radio_button_get_type","","",null,null],[5,"gtk_radio_button_new","","",null,null],[5,"gtk_radio_button_new_from_widget","","",null,null],[5,"gtk_radio_button_new_with_label","","",null,null],[5,"gtk_radio_button_new_with_label_from_widget","","",null,null],[5,"gtk_radio_button_new_with_mnemonic","","",null,null],[5,"gtk_radio_button_new_with_mnemonic_from_widget","","",null,null],[5,"gtk_radio_button_get_group","","",null,null],[5,"gtk_radio_button_join_group","","",null,null],[5,"gtk_radio_button_set_group","","",null,null],[5,"gtk_radio_button_accessible_get_type","","",null,null],[5,"gtk_radio_menu_item_get_type","","",null,null],[5,"gtk_radio_menu_item_new","","",null,null],[5,"gtk_radio_menu_item_new_from_widget","","",null,null],[5,"gtk_radio_menu_item_new_with_label","","",null,null],[5,"gtk_radio_menu_item_new_with_label_from_widget","","",null,null],[5,"gtk_radio_menu_item_new_with_mnemonic","","",null,null],[5,"gtk_radio_menu_item_new_with_mnemonic_from_widget","","",null,null],[5,"gtk_radio_menu_item_get_group","","",null,null],[5,"gtk_radio_menu_item_set_group","","",null,null],[5,"gtk_radio_menu_item_accessible_get_type","","",null,null],[5,"gtk_radio_tool_button_get_type","","",null,null],[5,"gtk_radio_tool_button_new","","",null,null],[5,"gtk_radio_tool_button_new_from_stock","","",null,null],[5,"gtk_radio_tool_button_new_from_widget","","",null,null],[5,"gtk_radio_tool_button_new_with_stock_from_widget","","",null,null],[5,"gtk_radio_tool_button_get_group","","",null,null],[5,"gtk_radio_tool_button_set_group","","",null,null],[5,"gtk_range_get_type","","",null,null],[5,"gtk_range_get_adjustment","","",null,null],[5,"gtk_range_get_fill_level","","",null,null],[5,"gtk_range_get_flippable","","",null,null],[5,"gtk_range_get_inverted","","",null,null],[5,"gtk_range_get_lower_stepper_sensitivity","","",null,null],[5,"gtk_range_get_min_slider_size","","",null,null],[5,"gtk_range_get_range_rect","","",null,null],[5,"gtk_range_get_restrict_to_fill_level","","",null,null],[5,"gtk_range_get_round_digits","","",null,null],[5,"gtk_range_get_show_fill_level","","",null,null],[5,"gtk_range_get_slider_range","","",null,null],[5,"gtk_range_get_slider_size_fixed","","",null,null],[5,"gtk_range_get_upper_stepper_sensitivity","","",null,null],[5,"gtk_range_get_value","","",null,null],[5,"gtk_range_set_adjustment","","",null,null],[5,"gtk_range_set_fill_level","","",null,null],[5,"gtk_range_set_flippable","","",null,null],[5,"gtk_range_set_increments","","",null,null],[5,"gtk_range_set_inverted","","",null,null],[5,"gtk_range_set_lower_stepper_sensitivity","","",null,null],[5,"gtk_range_set_min_slider_size","","",null,null],[5,"gtk_range_set_range","","",null,null],[5,"gtk_range_set_restrict_to_fill_level","","",null,null],[5,"gtk_range_set_round_digits","","",null,null],[5,"gtk_range_set_show_fill_level","","",null,null],[5,"gtk_range_set_slider_size_fixed","","",null,null],[5,"gtk_range_set_upper_stepper_sensitivity","","",null,null],[5,"gtk_range_set_value","","",null,null],[5,"gtk_range_accessible_get_type","","",null,null],[5,"gtk_rc_style_get_type","","",null,null],[5,"gtk_rc_style_new","","",null,null],[5,"gtk_rc_style_copy","","",null,null],[5,"gtk_recent_action_get_type","","",null,null],[5,"gtk_recent_action_new","","",null,null],[5,"gtk_recent_action_new_for_manager","","",null,null],[5,"gtk_recent_action_get_show_numbers","","",null,null],[5,"gtk_recent_action_set_show_numbers","","",null,null],[5,"gtk_recent_chooser_dialog_get_type","","",null,null],[5,"gtk_recent_chooser_dialog_new","","",null,null],[5,"gtk_recent_chooser_dialog_new_for_manager","","",null,null],[5,"gtk_recent_chooser_menu_get_type","","",null,null],[5,"gtk_recent_chooser_menu_new","","",null,null],[5,"gtk_recent_chooser_menu_new_for_manager","","",null,null],[5,"gtk_recent_chooser_menu_get_show_numbers","","",null,null],[5,"gtk_recent_chooser_menu_set_show_numbers","","",null,null],[5,"gtk_recent_chooser_widget_get_type","","",null,null],[5,"gtk_recent_chooser_widget_new","","",null,null],[5,"gtk_recent_chooser_widget_new_for_manager","","",null,null],[5,"gtk_recent_filter_get_type","","",null,null],[5,"gtk_recent_filter_new","","",null,null],[5,"gtk_recent_filter_add_age","","",null,null],[5,"gtk_recent_filter_add_application","","",null,null],[5,"gtk_recent_filter_add_custom","","",null,null],[5,"gtk_recent_filter_add_group","","",null,null],[5,"gtk_recent_filter_add_mime_type","","",null,null],[5,"gtk_recent_filter_add_pattern","","",null,null],[5,"gtk_recent_filter_add_pixbuf_formats","","",null,null],[5,"gtk_recent_filter_filter","","",null,null],[5,"gtk_recent_filter_get_name","","",null,null],[5,"gtk_recent_filter_get_needed","","",null,null],[5,"gtk_recent_filter_set_name","","",null,null],[5,"gtk_recent_manager_get_type","","",null,null],[5,"gtk_recent_manager_new","","",null,null],[5,"gtk_recent_manager_get_default","","",null,null],[5,"gtk_recent_manager_add_full","","",null,null],[5,"gtk_recent_manager_add_item","","",null,null],[5,"gtk_recent_manager_get_items","","",null,null],[5,"gtk_recent_manager_has_item","","",null,null],[5,"gtk_recent_manager_lookup_item","","",null,null],[5,"gtk_recent_manager_move_item","","",null,null],[5,"gtk_recent_manager_purge_items","","",null,null],[5,"gtk_recent_manager_remove_item","","",null,null],[5,"gtk_renderer_cell_accessible_get_type","","",null,null],[5,"gtk_renderer_cell_accessible_new","","",null,null],[5,"gtk_revealer_get_type","","",null,null],[5,"gtk_revealer_new","","",null,null],[5,"gtk_revealer_get_child_revealed","","",null,null],[5,"gtk_revealer_get_reveal_child","","",null,null],[5,"gtk_revealer_get_transition_duration","","",null,null],[5,"gtk_revealer_get_transition_type","","",null,null],[5,"gtk_revealer_set_reveal_child","","",null,null],[5,"gtk_revealer_set_transition_duration","","",null,null],[5,"gtk_revealer_set_transition_type","","",null,null],[5,"gtk_scale_get_type","","",null,null],[5,"gtk_scale_new","","",null,null],[5,"gtk_scale_new_with_range","","",null,null],[5,"gtk_scale_add_mark","","",null,null],[5,"gtk_scale_clear_marks","","",null,null],[5,"gtk_scale_get_digits","","",null,null],[5,"gtk_scale_get_draw_value","","",null,null],[5,"gtk_scale_get_has_origin","","",null,null],[5,"gtk_scale_get_layout","","",null,null],[5,"gtk_scale_get_layout_offsets","","",null,null],[5,"gtk_scale_get_value_pos","","",null,null],[5,"gtk_scale_set_digits","","",null,null],[5,"gtk_scale_set_draw_value","","",null,null],[5,"gtk_scale_set_has_origin","","",null,null],[5,"gtk_scale_set_value_pos","","",null,null],[5,"gtk_scale_accessible_get_type","","",null,null],[5,"gtk_scale_button_get_type","","",null,null],[5,"gtk_scale_button_new","","",null,null],[5,"gtk_scale_button_get_adjustment","","",null,null],[5,"gtk_scale_button_get_minus_button","","",null,null],[5,"gtk_scale_button_get_plus_button","","",null,null],[5,"gtk_scale_button_get_popup","","",null,null],[5,"gtk_scale_button_get_value","","",null,null],[5,"gtk_scale_button_set_adjustment","","",null,null],[5,"gtk_scale_button_set_icons","","",null,null],[5,"gtk_scale_button_set_value","","",null,null],[5,"gtk_scale_button_accessible_get_type","","",null,null],[5,"gtk_scrollbar_get_type","","",null,null],[5,"gtk_scrollbar_new","","",null,null],[5,"gtk_scrolled_window_get_type","","",null,null],[5,"gtk_scrolled_window_new","","",null,null],[5,"gtk_scrolled_window_add_with_viewport","","",null,null],[5,"gtk_scrolled_window_get_capture_button_press","","",null,null],[5,"gtk_scrolled_window_get_hadjustment","","",null,null],[5,"gtk_scrolled_window_get_hscrollbar","","",null,null],[5,"gtk_scrolled_window_get_kinetic_scrolling","","",null,null],[5,"gtk_scrolled_window_get_min_content_height","","",null,null],[5,"gtk_scrolled_window_get_min_content_width","","",null,null],[5,"gtk_scrolled_window_get_overlay_scrolling","","",null,null],[5,"gtk_scrolled_window_get_placement","","",null,null],[5,"gtk_scrolled_window_get_policy","","",null,null],[5,"gtk_scrolled_window_get_shadow_type","","",null,null],[5,"gtk_scrolled_window_get_vadjustment","","",null,null],[5,"gtk_scrolled_window_get_vscrollbar","","",null,null],[5,"gtk_scrolled_window_set_capture_button_press","","",null,null],[5,"gtk_scrolled_window_set_hadjustment","","",null,null],[5,"gtk_scrolled_window_set_kinetic_scrolling","","",null,null],[5,"gtk_scrolled_window_set_min_content_height","","",null,null],[5,"gtk_scrolled_window_set_min_content_width","","",null,null],[5,"gtk_scrolled_window_set_overlay_scrolling","","",null,null],[5,"gtk_scrolled_window_set_placement","","",null,null],[5,"gtk_scrolled_window_set_policy","","",null,null],[5,"gtk_scrolled_window_set_shadow_type","","",null,null],[5,"gtk_scrolled_window_set_vadjustment","","",null,null],[5,"gtk_scrolled_window_unset_placement","","",null,null],[5,"gtk_scrolled_window_accessible_get_type","","",null,null],[5,"gtk_search_bar_get_type","","",null,null],[5,"gtk_search_bar_new","","",null,null],[5,"gtk_search_bar_connect_entry","","",null,null],[5,"gtk_search_bar_get_search_mode","","",null,null],[5,"gtk_search_bar_get_show_close_button","","",null,null],[5,"gtk_search_bar_handle_event","","",null,null],[5,"gtk_search_bar_set_search_mode","","",null,null],[5,"gtk_search_bar_set_show_close_button","","",null,null],[5,"gtk_search_entry_get_type","","",null,null],[5,"gtk_search_entry_new","","",null,null],[5,"gtk_search_entry_handle_event","","",null,null],[5,"gtk_separator_get_type","","",null,null],[5,"gtk_separator_new","","",null,null],[5,"gtk_separator_menu_item_get_type","","",null,null],[5,"gtk_separator_menu_item_new","","",null,null],[5,"gtk_separator_tool_item_get_type","","",null,null],[5,"gtk_separator_tool_item_new","","",null,null],[5,"gtk_separator_tool_item_get_draw","","",null,null],[5,"gtk_separator_tool_item_set_draw","","",null,null],[5,"gtk_settings_get_type","","",null,null],[5,"gtk_settings_get_default","","",null,null],[5,"gtk_settings_get_for_screen","","",null,null],[5,"gtk_settings_install_property","","",null,null],[5,"gtk_settings_install_property_parser","","",null,null],[5,"gtk_settings_set_double_property","","",null,null],[5,"gtk_settings_set_long_property","","",null,null],[5,"gtk_settings_set_property_value","","",null,null],[5,"gtk_settings_set_string_property","","",null,null],[5,"gtk_size_group_get_type","","",null,null],[5,"gtk_size_group_new","","",null,null],[5,"gtk_size_group_add_widget","","",null,null],[5,"gtk_size_group_get_ignore_hidden","","",null,null],[5,"gtk_size_group_get_mode","","",null,null],[5,"gtk_size_group_get_widgets","","",null,null],[5,"gtk_size_group_remove_widget","","",null,null],[5,"gtk_size_group_set_ignore_hidden","","",null,null],[5,"gtk_size_group_set_mode","","",null,null],[5,"gtk_socket_get_type","","",null,null],[5,"gtk_socket_new","","",null,null],[5,"gtk_socket_get_plug_window","","",null,null],[5,"gtk_spin_button_get_type","","",null,null],[5,"gtk_spin_button_new","","",null,null],[5,"gtk_spin_button_new_with_range","","",null,null],[5,"gtk_spin_button_configure","","",null,null],[5,"gtk_spin_button_get_adjustment","","",null,null],[5,"gtk_spin_button_get_digits","","",null,null],[5,"gtk_spin_button_get_increments","","",null,null],[5,"gtk_spin_button_get_numeric","","",null,null],[5,"gtk_spin_button_get_range","","",null,null],[5,"gtk_spin_button_get_snap_to_ticks","","",null,null],[5,"gtk_spin_button_get_update_policy","","",null,null],[5,"gtk_spin_button_get_value","","",null,null],[5,"gtk_spin_button_get_value_as_int","","",null,null],[5,"gtk_spin_button_get_wrap","","",null,null],[5,"gtk_spin_button_set_adjustment","","",null,null],[5,"gtk_spin_button_set_digits","","",null,null],[5,"gtk_spin_button_set_increments","","",null,null],[5,"gtk_spin_button_set_numeric","","",null,null],[5,"gtk_spin_button_set_range","","",null,null],[5,"gtk_spin_button_set_snap_to_ticks","","",null,null],[5,"gtk_spin_button_set_update_policy","","",null,null],[5,"gtk_spin_button_set_value","","",null,null],[5,"gtk_spin_button_set_wrap","","",null,null],[5,"gtk_spin_button_spin","","",null,null],[5,"gtk_spin_button_update","","",null,null],[5,"gtk_spin_button_accessible_get_type","","",null,null],[5,"gtk_spinner_get_type","","",null,null],[5,"gtk_spinner_new","","",null,null],[5,"gtk_spinner_start","","",null,null],[5,"gtk_spinner_stop","","",null,null],[5,"gtk_spinner_accessible_get_type","","",null,null],[5,"gtk_stack_get_type","","",null,null],[5,"gtk_stack_new","","",null,null],[5,"gtk_stack_add_named","","",null,null],[5,"gtk_stack_add_titled","","",null,null],[5,"gtk_stack_get_child_by_name","","",null,null],[5,"gtk_stack_get_hhomogeneous","","",null,null],[5,"gtk_stack_get_homogeneous","","",null,null],[5,"gtk_stack_get_transition_duration","","",null,null],[5,"gtk_stack_get_transition_running","","",null,null],[5,"gtk_stack_get_transition_type","","",null,null],[5,"gtk_stack_get_vhomogeneous","","",null,null],[5,"gtk_stack_get_visible_child","","",null,null],[5,"gtk_stack_get_visible_child_name","","",null,null],[5,"gtk_stack_set_hhomogeneous","","",null,null],[5,"gtk_stack_set_homogeneous","","",null,null],[5,"gtk_stack_set_transition_duration","","",null,null],[5,"gtk_stack_set_transition_type","","",null,null],[5,"gtk_stack_set_vhomogeneous","","",null,null],[5,"gtk_stack_set_visible_child","","",null,null],[5,"gtk_stack_set_visible_child_full","","",null,null],[5,"gtk_stack_set_visible_child_name","","",null,null],[5,"gtk_stack_sidebar_get_type","","",null,null],[5,"gtk_stack_sidebar_new","","",null,null],[5,"gtk_stack_sidebar_get_stack","","",null,null],[5,"gtk_stack_sidebar_set_stack","","",null,null],[5,"gtk_stack_switcher_get_type","","",null,null],[5,"gtk_stack_switcher_new","","",null,null],[5,"gtk_stack_switcher_get_stack","","",null,null],[5,"gtk_stack_switcher_set_stack","","",null,null],[5,"gtk_status_icon_get_type","","",null,null],[5,"gtk_status_icon_new","","",null,null],[5,"gtk_status_icon_new_from_file","","",null,null],[5,"gtk_status_icon_new_from_gicon","","",null,null],[5,"gtk_status_icon_new_from_icon_name","","",null,null],[5,"gtk_status_icon_new_from_pixbuf","","",null,null],[5,"gtk_status_icon_new_from_stock","","",null,null],[5,"gtk_status_icon_position_menu","","",null,null],[5,"gtk_status_icon_get_geometry","","",null,null],[5,"gtk_status_icon_get_gicon","","",null,null],[5,"gtk_status_icon_get_has_tooltip","","",null,null],[5,"gtk_status_icon_get_icon_name","","",null,null],[5,"gtk_status_icon_get_pixbuf","","",null,null],[5,"gtk_status_icon_get_screen","","",null,null],[5,"gtk_status_icon_get_size","","",null,null],[5,"gtk_status_icon_get_stock","","",null,null],[5,"gtk_status_icon_get_storage_type","","",null,null],[5,"gtk_status_icon_get_title","","",null,null],[5,"gtk_status_icon_get_tooltip_markup","","",null,null],[5,"gtk_status_icon_get_tooltip_text","","",null,null],[5,"gtk_status_icon_get_visible","","",null,null],[5,"gtk_status_icon_get_x11_window_id","","",null,null],[5,"gtk_status_icon_is_embedded","","",null,null],[5,"gtk_status_icon_set_from_file","","",null,null],[5,"gtk_status_icon_set_from_gicon","","",null,null],[5,"gtk_status_icon_set_from_icon_name","","",null,null],[5,"gtk_status_icon_set_from_pixbuf","","",null,null],[5,"gtk_status_icon_set_from_stock","","",null,null],[5,"gtk_status_icon_set_has_tooltip","","",null,null],[5,"gtk_status_icon_set_name","","",null,null],[5,"gtk_status_icon_set_screen","","",null,null],[5,"gtk_status_icon_set_title","","",null,null],[5,"gtk_status_icon_set_tooltip_markup","","",null,null],[5,"gtk_status_icon_set_tooltip_text","","",null,null],[5,"gtk_status_icon_set_visible","","",null,null],[5,"gtk_statusbar_get_type","","",null,null],[5,"gtk_statusbar_new","","",null,null],[5,"gtk_statusbar_get_context_id","","",null,null],[5,"gtk_statusbar_get_message_area","","",null,null],[5,"gtk_statusbar_pop","","",null,null],[5,"gtk_statusbar_push","","",null,null],[5,"gtk_statusbar_remove","","",null,null],[5,"gtk_statusbar_remove_all","","",null,null],[5,"gtk_statusbar_accessible_get_type","","",null,null],[5,"gtk_style_get_type","","",null,null],[5,"gtk_style_new","","",null,null],[5,"gtk_style_apply_default_background","","",null,null],[5,"gtk_style_attach","","",null,null],[5,"gtk_style_copy","","",null,null],[5,"gtk_style_detach","","",null,null],[5,"gtk_style_get","","",null,null],[5,"gtk_style_get_style_property","","",null,null],[5,"gtk_style_has_context","","",null,null],[5,"gtk_style_lookup_color","","",null,null],[5,"gtk_style_lookup_icon_set","","",null,null],[5,"gtk_style_render_icon","","",null,null],[5,"gtk_style_set_background","","",null,null],[5,"gtk_style_context_get_type","","",null,null],[5,"gtk_style_context_new","","",null,null],[5,"gtk_style_context_add_provider_for_screen","","",null,null],[5,"gtk_style_context_remove_provider_for_screen","","",null,null],[5,"gtk_style_context_reset_widgets","","",null,null],[5,"gtk_style_context_add_class","","",null,null],[5,"gtk_style_context_add_provider","","",null,null],[5,"gtk_style_context_add_region","","",null,null],[5,"gtk_style_context_cancel_animations","","",null,null],[5,"gtk_style_context_get","","",null,null],[5,"gtk_style_context_get_background_color","","",null,null],[5,"gtk_style_context_get_border","","",null,null],[5,"gtk_style_context_get_border_color","","",null,null],[5,"gtk_style_context_get_color","","",null,null],[5,"gtk_style_context_get_direction","","",null,null],[5,"gtk_style_context_get_font","","",null,null],[5,"gtk_style_context_get_frame_clock","","",null,null],[5,"gtk_style_context_get_junction_sides","","",null,null],[5,"gtk_style_context_get_margin","","",null,null],[5,"gtk_style_context_get_padding","","",null,null],[5,"gtk_style_context_get_parent","","",null,null],[5,"gtk_style_context_get_path","","",null,null],[5,"gtk_style_context_get_property","","",null,null],[5,"gtk_style_context_get_scale","","",null,null],[5,"gtk_style_context_get_screen","","",null,null],[5,"gtk_style_context_get_section","","",null,null],[5,"gtk_style_context_get_state","","",null,null],[5,"gtk_style_context_get_style","","",null,null],[5,"gtk_style_context_get_style_property","","",null,null],[5,"gtk_style_context_has_class","","",null,null],[5,"gtk_style_context_has_region","","",null,null],[5,"gtk_style_context_invalidate","","",null,null],[5,"gtk_style_context_list_classes","","",null,null],[5,"gtk_style_context_list_regions","","",null,null],[5,"gtk_style_context_lookup_color","","",null,null],[5,"gtk_style_context_lookup_icon_set","","",null,null],[5,"gtk_style_context_notify_state_change","","",null,null],[5,"gtk_style_context_pop_animatable_region","","",null,null],[5,"gtk_style_context_push_animatable_region","","",null,null],[5,"gtk_style_context_remove_class","","",null,null],[5,"gtk_style_context_remove_provider","","",null,null],[5,"gtk_style_context_remove_region","","",null,null],[5,"gtk_style_context_restore","","",null,null],[5,"gtk_style_context_save","","",null,null],[5,"gtk_style_context_scroll_animations","","",null,null],[5,"gtk_style_context_set_background","","",null,null],[5,"gtk_style_context_set_direction","","",null,null],[5,"gtk_style_context_set_frame_clock","","",null,null],[5,"gtk_style_context_set_junction_sides","","",null,null],[5,"gtk_style_context_set_parent","","",null,null],[5,"gtk_style_context_set_path","","",null,null],[5,"gtk_style_context_set_scale","","",null,null],[5,"gtk_style_context_set_screen","","",null,null],[5,"gtk_style_context_set_state","","",null,null],[5,"gtk_style_context_state_is_running","","",null,null],[5,"gtk_style_properties_get_type","","",null,null],[5,"gtk_style_properties_new","","",null,null],[5,"gtk_style_properties_lookup_property","","",null,null],[5,"gtk_style_properties_register_property","","",null,null],[5,"gtk_style_properties_clear","","",null,null],[5,"gtk_style_properties_get","","",null,null],[5,"gtk_style_properties_get_property","","",null,null],[5,"gtk_style_properties_lookup_color","","",null,null],[5,"gtk_style_properties_map_color","","",null,null],[5,"gtk_style_properties_merge","","",null,null],[5,"gtk_style_properties_set","","",null,null],[5,"gtk_style_properties_set_property","","",null,null],[5,"gtk_style_properties_unset_property","","",null,null],[5,"gtk_switch_get_type","","",null,null],[5,"gtk_switch_new","","",null,null],[5,"gtk_switch_get_active","","",null,null],[5,"gtk_switch_get_state","","",null,null],[5,"gtk_switch_set_active","","",null,null],[5,"gtk_switch_set_state","","",null,null],[5,"gtk_switch_accessible_get_type","","",null,null],[5,"gtk_table_get_type","","",null,null],[5,"gtk_table_new","","",null,null],[5,"gtk_table_attach","","",null,null],[5,"gtk_table_attach_defaults","","",null,null],[5,"gtk_table_get_col_spacing","","",null,null],[5,"gtk_table_get_default_col_spacing","","",null,null],[5,"gtk_table_get_default_row_spacing","","",null,null],[5,"gtk_table_get_homogeneous","","",null,null],[5,"gtk_table_get_row_spacing","","",null,null],[5,"gtk_table_get_size","","",null,null],[5,"gtk_table_resize","","",null,null],[5,"gtk_table_set_col_spacing","","",null,null],[5,"gtk_table_set_col_spacings","","",null,null],[5,"gtk_table_set_homogeneous","","",null,null],[5,"gtk_table_set_row_spacing","","",null,null],[5,"gtk_table_set_row_spacings","","",null,null],[5,"gtk_tearoff_menu_item_get_type","","",null,null],[5,"gtk_tearoff_menu_item_new","","",null,null],[5,"gtk_text_buffer_get_type","","",null,null],[5,"gtk_text_buffer_new","","",null,null],[5,"gtk_text_buffer_add_mark","","",null,null],[5,"gtk_text_buffer_add_selection_clipboard","","",null,null],[5,"gtk_text_buffer_apply_tag","","",null,null],[5,"gtk_text_buffer_apply_tag_by_name","","",null,null],[5,"gtk_text_buffer_backspace","","",null,null],[5,"gtk_text_buffer_begin_user_action","","",null,null],[5,"gtk_text_buffer_copy_clipboard","","",null,null],[5,"gtk_text_buffer_create_child_anchor","","",null,null],[5,"gtk_text_buffer_create_mark","","",null,null],[5,"gtk_text_buffer_create_tag","","",null,null],[5,"gtk_text_buffer_cut_clipboard","","",null,null],[5,"gtk_text_buffer_delete","","",null,null],[5,"gtk_text_buffer_delete_interactive","","",null,null],[5,"gtk_text_buffer_delete_mark","","",null,null],[5,"gtk_text_buffer_delete_mark_by_name","","",null,null],[5,"gtk_text_buffer_delete_selection","","",null,null],[5,"gtk_text_buffer_deserialize","","",null,null],[5,"gtk_text_buffer_deserialize_get_can_create_tags","","",null,null],[5,"gtk_text_buffer_deserialize_set_can_create_tags","","",null,null],[5,"gtk_text_buffer_end_user_action","","",null,null],[5,"gtk_text_buffer_get_bounds","","",null,null],[5,"gtk_text_buffer_get_char_count","","",null,null],[5,"gtk_text_buffer_get_copy_target_list","","",null,null],[5,"gtk_text_buffer_get_deserialize_formats","","",null,null],[5,"gtk_text_buffer_get_end_iter","","",null,null],[5,"gtk_text_buffer_get_has_selection","","",null,null],[5,"gtk_text_buffer_get_insert","","",null,null],[5,"gtk_text_buffer_get_iter_at_child_anchor","","",null,null],[5,"gtk_text_buffer_get_iter_at_line","","",null,null],[5,"gtk_text_buffer_get_iter_at_line_index","","",null,null],[5,"gtk_text_buffer_get_iter_at_line_offset","","",null,null],[5,"gtk_text_buffer_get_iter_at_mark","","",null,null],[5,"gtk_text_buffer_get_iter_at_offset","","",null,null],[5,"gtk_text_buffer_get_line_count","","",null,null],[5,"gtk_text_buffer_get_mark","","",null,null],[5,"gtk_text_buffer_get_modified","","",null,null],[5,"gtk_text_buffer_get_paste_target_list","","",null,null],[5,"gtk_text_buffer_get_selection_bound","","",null,null],[5,"gtk_text_buffer_get_selection_bounds","","",null,null],[5,"gtk_text_buffer_get_serialize_formats","","",null,null],[5,"gtk_text_buffer_get_slice","","",null,null],[5,"gtk_text_buffer_get_start_iter","","",null,null],[5,"gtk_text_buffer_get_tag_table","","",null,null],[5,"gtk_text_buffer_get_text","","",null,null],[5,"gtk_text_buffer_insert","","",null,null],[5,"gtk_text_buffer_insert_at_cursor","","",null,null],[5,"gtk_text_buffer_insert_child_anchor","","",null,null],[5,"gtk_text_buffer_insert_interactive","","",null,null],[5,"gtk_text_buffer_insert_interactive_at_cursor","","",null,null],[5,"gtk_text_buffer_insert_markup","","",null,null],[5,"gtk_text_buffer_insert_pixbuf","","",null,null],[5,"gtk_text_buffer_insert_range","","",null,null],[5,"gtk_text_buffer_insert_range_interactive","","",null,null],[5,"gtk_text_buffer_insert_with_tags","","",null,null],[5,"gtk_text_buffer_insert_with_tags_by_name","","",null,null],[5,"gtk_text_buffer_move_mark","","",null,null],[5,"gtk_text_buffer_move_mark_by_name","","",null,null],[5,"gtk_text_buffer_paste_clipboard","","",null,null],[5,"gtk_text_buffer_place_cursor","","",null,null],[5,"gtk_text_buffer_register_deserialize_format","","",null,null],[5,"gtk_text_buffer_register_deserialize_tagset","","",null,null],[5,"gtk_text_buffer_register_serialize_format","","",null,null],[5,"gtk_text_buffer_register_serialize_tagset","","",null,null],[5,"gtk_text_buffer_remove_all_tags","","",null,null],[5,"gtk_text_buffer_remove_selection_clipboard","","",null,null],[5,"gtk_text_buffer_remove_tag","","",null,null],[5,"gtk_text_buffer_remove_tag_by_name","","",null,null],[5,"gtk_text_buffer_select_range","","",null,null],[5,"gtk_text_buffer_serialize","","",null,null],[5,"gtk_text_buffer_set_modified","","",null,null],[5,"gtk_text_buffer_set_text","","",null,null],[5,"gtk_text_buffer_unregister_deserialize_format","","",null,null],[5,"gtk_text_buffer_unregister_serialize_format","","",null,null],[5,"gtk_text_cell_accessible_get_type","","",null,null],[5,"gtk_text_child_anchor_get_type","","",null,null],[5,"gtk_text_child_anchor_new","","",null,null],[5,"gtk_text_child_anchor_get_deleted","","",null,null],[5,"gtk_text_child_anchor_get_widgets","","",null,null],[5,"gtk_text_mark_get_type","","",null,null],[5,"gtk_text_mark_new","","",null,null],[5,"gtk_text_mark_get_buffer","","",null,null],[5,"gtk_text_mark_get_deleted","","",null,null],[5,"gtk_text_mark_get_left_gravity","","",null,null],[5,"gtk_text_mark_get_name","","",null,null],[5,"gtk_text_mark_get_visible","","",null,null],[5,"gtk_text_mark_set_visible","","",null,null],[5,"gtk_text_tag_get_type","","",null,null],[5,"gtk_text_tag_new","","",null,null],[5,"gtk_text_tag_event","","",null,null],[5,"gtk_text_tag_get_priority","","",null,null],[5,"gtk_text_tag_set_priority","","",null,null],[5,"gtk_text_tag_table_get_type","","",null,null],[5,"gtk_text_tag_table_new","","",null,null],[5,"gtk_text_tag_table_add","","",null,null],[5,"gtk_text_tag_table_foreach","","",null,null],[5,"gtk_text_tag_table_get_size","","",null,null],[5,"gtk_text_tag_table_lookup","","",null,null],[5,"gtk_text_tag_table_remove","","",null,null],[5,"gtk_text_view_get_type","","",null,null],[5,"gtk_text_view_new","","",null,null],[5,"gtk_text_view_new_with_buffer","","",null,null],[5,"gtk_text_view_add_child_at_anchor","","",null,null],[5,"gtk_text_view_add_child_in_window","","",null,null],[5,"gtk_text_view_backward_display_line","","",null,null],[5,"gtk_text_view_backward_display_line_start","","",null,null],[5,"gtk_text_view_buffer_to_window_coords","","",null,null],[5,"gtk_text_view_forward_display_line","","",null,null],[5,"gtk_text_view_forward_display_line_end","","",null,null],[5,"gtk_text_view_get_accepts_tab","","",null,null],[5,"gtk_text_view_get_border_window_size","","",null,null],[5,"gtk_text_view_get_buffer","","",null,null],[5,"gtk_text_view_get_cursor_locations","","",null,null],[5,"gtk_text_view_get_cursor_visible","","",null,null],[5,"gtk_text_view_get_default_attributes","","",null,null],[5,"gtk_text_view_get_editable","","",null,null],[5,"gtk_text_view_get_hadjustment","","",null,null],[5,"gtk_text_view_get_indent","","",null,null],[5,"gtk_text_view_get_input_hints","","",null,null],[5,"gtk_text_view_get_input_purpose","","",null,null],[5,"gtk_text_view_get_iter_at_location","","",null,null],[5,"gtk_text_view_get_iter_at_position","","",null,null],[5,"gtk_text_view_get_iter_location","","",null,null],[5,"gtk_text_view_get_justification","","",null,null],[5,"gtk_text_view_get_left_margin","","",null,null],[5,"gtk_text_view_get_line_at_y","","",null,null],[5,"gtk_text_view_get_line_yrange","","",null,null],[5,"gtk_text_view_get_monospace","","",null,null],[5,"gtk_text_view_get_overwrite","","",null,null],[5,"gtk_text_view_get_pixels_above_lines","","",null,null],[5,"gtk_text_view_get_pixels_below_lines","","",null,null],[5,"gtk_text_view_get_pixels_inside_wrap","","",null,null],[5,"gtk_text_view_get_right_margin","","",null,null],[5,"gtk_text_view_get_tabs","","",null,null],[5,"gtk_text_view_get_vadjustment","","",null,null],[5,"gtk_text_view_get_visible_rect","","",null,null],[5,"gtk_text_view_get_window","","",null,null],[5,"gtk_text_view_get_window_type","","",null,null],[5,"gtk_text_view_get_wrap_mode","","",null,null],[5,"gtk_text_view_im_context_filter_keypress","","",null,null],[5,"gtk_text_view_move_child","","",null,null],[5,"gtk_text_view_move_mark_onscreen","","",null,null],[5,"gtk_text_view_move_visually","","",null,null],[5,"gtk_text_view_place_cursor_onscreen","","",null,null],[5,"gtk_text_view_reset_im_context","","",null,null],[5,"gtk_text_view_scroll_mark_onscreen","","",null,null],[5,"gtk_text_view_scroll_to_iter","","",null,null],[5,"gtk_text_view_scroll_to_mark","","",null,null],[5,"gtk_text_view_set_accepts_tab","","",null,null],[5,"gtk_text_view_set_border_window_size","","",null,null],[5,"gtk_text_view_set_buffer","","",null,null],[5,"gtk_text_view_set_cursor_visible","","",null,null],[5,"gtk_text_view_set_editable","","",null,null],[5,"gtk_text_view_set_indent","","",null,null],[5,"gtk_text_view_set_input_hints","","",null,null],[5,"gtk_text_view_set_input_purpose","","",null,null],[5,"gtk_text_view_set_justification","","",null,null],[5,"gtk_text_view_set_left_margin","","",null,null],[5,"gtk_text_view_set_monospace","","",null,null],[5,"gtk_text_view_set_overwrite","","",null,null],[5,"gtk_text_view_set_pixels_above_lines","","",null,null],[5,"gtk_text_view_set_pixels_below_lines","","",null,null],[5,"gtk_text_view_set_pixels_inside_wrap","","",null,null],[5,"gtk_text_view_set_right_margin","","",null,null],[5,"gtk_text_view_set_tabs","","",null,null],[5,"gtk_text_view_set_wrap_mode","","",null,null],[5,"gtk_text_view_starts_display_line","","",null,null],[5,"gtk_text_view_window_to_buffer_coords","","",null,null],[5,"gtk_text_view_accessible_get_type","","",null,null],[5,"gtk_theming_engine_get_type","","",null,null],[5,"gtk_theming_engine_load","","",null,null],[5,"gtk_theming_engine_register_property","","",null,null],[5,"gtk_theming_engine_get","","",null,null],[5,"gtk_theming_engine_get_background_color","","",null,null],[5,"gtk_theming_engine_get_border","","",null,null],[5,"gtk_theming_engine_get_border_color","","",null,null],[5,"gtk_theming_engine_get_color","","",null,null],[5,"gtk_theming_engine_get_direction","","",null,null],[5,"gtk_theming_engine_get_font","","",null,null],[5,"gtk_theming_engine_get_junction_sides","","",null,null],[5,"gtk_theming_engine_get_margin","","",null,null],[5,"gtk_theming_engine_get_padding","","",null,null],[5,"gtk_theming_engine_get_path","","",null,null],[5,"gtk_theming_engine_get_property","","",null,null],[5,"gtk_theming_engine_get_screen","","",null,null],[5,"gtk_theming_engine_get_state","","",null,null],[5,"gtk_theming_engine_get_style","","",null,null],[5,"gtk_theming_engine_get_style_property","","",null,null],[5,"gtk_theming_engine_has_class","","",null,null],[5,"gtk_theming_engine_has_region","","",null,null],[5,"gtk_theming_engine_lookup_color","","",null,null],[5,"gtk_theming_engine_state_is_running","","",null,null],[5,"gtk_toggle_action_get_type","","",null,null],[5,"gtk_toggle_action_new","","",null,null],[5,"gtk_toggle_action_get_active","","",null,null],[5,"gtk_toggle_action_get_draw_as_radio","","",null,null],[5,"gtk_toggle_action_set_active","","",null,null],[5,"gtk_toggle_action_set_draw_as_radio","","",null,null],[5,"gtk_toggle_action_toggled","","",null,null],[5,"gtk_toggle_button_get_type","","",null,null],[5,"gtk_toggle_button_new","","",null,null],[5,"gtk_toggle_button_new_with_label","","",null,null],[5,"gtk_toggle_button_new_with_mnemonic","","",null,null],[5,"gtk_toggle_button_get_active","","",null,null],[5,"gtk_toggle_button_get_inconsistent","","",null,null],[5,"gtk_toggle_button_get_mode","","",null,null],[5,"gtk_toggle_button_set_active","","",null,null],[5,"gtk_toggle_button_set_inconsistent","","",null,null],[5,"gtk_toggle_button_set_mode","","",null,null],[5,"gtk_toggle_button_toggled","","",null,null],[5,"gtk_toggle_button_accessible_get_type","","",null,null],[5,"gtk_toggle_tool_button_get_type","","",null,null],[5,"gtk_toggle_tool_button_new","","",null,null],[5,"gtk_toggle_tool_button_new_from_stock","","",null,null],[5,"gtk_toggle_tool_button_get_active","","",null,null],[5,"gtk_toggle_tool_button_set_active","","",null,null],[5,"gtk_tool_button_get_type","","",null,null],[5,"gtk_tool_button_new","","",null,null],[5,"gtk_tool_button_new_from_stock","","",null,null],[5,"gtk_tool_button_get_icon_name","","",null,null],[5,"gtk_tool_button_get_icon_widget","","",null,null],[5,"gtk_tool_button_get_label","","",null,null],[5,"gtk_tool_button_get_label_widget","","",null,null],[5,"gtk_tool_button_get_stock_id","","",null,null],[5,"gtk_tool_button_get_use_underline","","",null,null],[5,"gtk_tool_button_set_icon_name","","",null,null],[5,"gtk_tool_button_set_icon_widget","","",null,null],[5,"gtk_tool_button_set_label","","",null,null],[5,"gtk_tool_button_set_label_widget","","",null,null],[5,"gtk_tool_button_set_stock_id","","",null,null],[5,"gtk_tool_button_set_use_underline","","",null,null],[5,"gtk_tool_item_get_type","","",null,null],[5,"gtk_tool_item_new","","",null,null],[5,"gtk_tool_item_get_ellipsize_mode","","",null,null],[5,"gtk_tool_item_get_expand","","",null,null],[5,"gtk_tool_item_get_homogeneous","","",null,null],[5,"gtk_tool_item_get_icon_size","","",null,null],[5,"gtk_tool_item_get_is_important","","",null,null],[5,"gtk_tool_item_get_orientation","","",null,null],[5,"gtk_tool_item_get_proxy_menu_item","","",null,null],[5,"gtk_tool_item_get_relief_style","","",null,null],[5,"gtk_tool_item_get_text_alignment","","",null,null],[5,"gtk_tool_item_get_text_orientation","","",null,null],[5,"gtk_tool_item_get_text_size_group","","",null,null],[5,"gtk_tool_item_get_toolbar_style","","",null,null],[5,"gtk_tool_item_get_use_drag_window","","",null,null],[5,"gtk_tool_item_get_visible_horizontal","","",null,null],[5,"gtk_tool_item_get_visible_vertical","","",null,null],[5,"gtk_tool_item_rebuild_menu","","",null,null],[5,"gtk_tool_item_retrieve_proxy_menu_item","","",null,null],[5,"gtk_tool_item_set_expand","","",null,null],[5,"gtk_tool_item_set_homogeneous","","",null,null],[5,"gtk_tool_item_set_is_important","","",null,null],[5,"gtk_tool_item_set_proxy_menu_item","","",null,null],[5,"gtk_tool_item_set_tooltip_markup","","",null,null],[5,"gtk_tool_item_set_tooltip_text","","",null,null],[5,"gtk_tool_item_set_use_drag_window","","",null,null],[5,"gtk_tool_item_set_visible_horizontal","","",null,null],[5,"gtk_tool_item_set_visible_vertical","","",null,null],[5,"gtk_tool_item_toolbar_reconfigured","","",null,null],[5,"gtk_tool_item_group_get_type","","",null,null],[5,"gtk_tool_item_group_new","","",null,null],[5,"gtk_tool_item_group_get_collapsed","","",null,null],[5,"gtk_tool_item_group_get_drop_item","","",null,null],[5,"gtk_tool_item_group_get_ellipsize","","",null,null],[5,"gtk_tool_item_group_get_header_relief","","",null,null],[5,"gtk_tool_item_group_get_item_position","","",null,null],[5,"gtk_tool_item_group_get_label","","",null,null],[5,"gtk_tool_item_group_get_label_widget","","",null,null],[5,"gtk_tool_item_group_get_n_items","","",null,null],[5,"gtk_tool_item_group_get_nth_item","","",null,null],[5,"gtk_tool_item_group_insert","","",null,null],[5,"gtk_tool_item_group_set_collapsed","","",null,null],[5,"gtk_tool_item_group_set_ellipsize","","",null,null],[5,"gtk_tool_item_group_set_header_relief","","",null,null],[5,"gtk_tool_item_group_set_item_position","","",null,null],[5,"gtk_tool_item_group_set_label","","",null,null],[5,"gtk_tool_item_group_set_label_widget","","",null,null],[5,"gtk_tool_palette_get_type","","",null,null],[5,"gtk_tool_palette_new","","",null,null],[5,"gtk_tool_palette_get_drag_target_group","","",null,null],[5,"gtk_tool_palette_get_drag_target_item","","",null,null],[5,"gtk_tool_palette_add_drag_dest","","",null,null],[5,"gtk_tool_palette_get_drag_item","","",null,null],[5,"gtk_tool_palette_get_drop_group","","",null,null],[5,"gtk_tool_palette_get_drop_item","","",null,null],[5,"gtk_tool_palette_get_exclusive","","",null,null],[5,"gtk_tool_palette_get_expand","","",null,null],[5,"gtk_tool_palette_get_group_position","","",null,null],[5,"gtk_tool_palette_get_hadjustment","","",null,null],[5,"gtk_tool_palette_get_icon_size","","",null,null],[5,"gtk_tool_palette_get_style","","",null,null],[5,"gtk_tool_palette_get_vadjustment","","",null,null],[5,"gtk_tool_palette_set_drag_source","","",null,null],[5,"gtk_tool_palette_set_exclusive","","",null,null],[5,"gtk_tool_palette_set_expand","","",null,null],[5,"gtk_tool_palette_set_group_position","","",null,null],[5,"gtk_tool_palette_set_icon_size","","",null,null],[5,"gtk_tool_palette_set_style","","",null,null],[5,"gtk_tool_palette_unset_icon_size","","",null,null],[5,"gtk_tool_palette_unset_style","","",null,null],[5,"gtk_toolbar_get_type","","",null,null],[5,"gtk_toolbar_new","","",null,null],[5,"gtk_toolbar_get_drop_index","","",null,null],[5,"gtk_toolbar_get_icon_size","","",null,null],[5,"gtk_toolbar_get_item_index","","",null,null],[5,"gtk_toolbar_get_n_items","","",null,null],[5,"gtk_toolbar_get_nth_item","","",null,null],[5,"gtk_toolbar_get_relief_style","","",null,null],[5,"gtk_toolbar_get_show_arrow","","",null,null],[5,"gtk_toolbar_get_style","","",null,null],[5,"gtk_toolbar_insert","","",null,null],[5,"gtk_toolbar_set_drop_highlight_item","","",null,null],[5,"gtk_toolbar_set_icon_size","","",null,null],[5,"gtk_toolbar_set_show_arrow","","",null,null],[5,"gtk_toolbar_set_style","","",null,null],[5,"gtk_toolbar_unset_icon_size","","",null,null],[5,"gtk_toolbar_unset_style","","",null,null],[5,"gtk_tooltip_get_type","","",null,null],[5,"gtk_tooltip_trigger_tooltip_query","","",null,null],[5,"gtk_tooltip_set_custom","","",null,null],[5,"gtk_tooltip_set_icon","","",null,null],[5,"gtk_tooltip_set_icon_from_gicon","","",null,null],[5,"gtk_tooltip_set_icon_from_icon_name","","",null,null],[5,"gtk_tooltip_set_icon_from_stock","","",null,null],[5,"gtk_tooltip_set_markup","","",null,null],[5,"gtk_tooltip_set_text","","",null,null],[5,"gtk_tooltip_set_tip_area","","",null,null],[5,"gtk_toplevel_accessible_get_type","","",null,null],[5,"gtk_toplevel_accessible_get_children","","",null,null],[5,"gtk_tree_model_filter_get_type","","",null,null],[5,"gtk_tree_model_filter_clear_cache","","",null,null],[5,"gtk_tree_model_filter_convert_child_iter_to_iter","","",null,null],[5,"gtk_tree_model_filter_convert_child_path_to_path","","",null,null],[5,"gtk_tree_model_filter_convert_iter_to_child_iter","","",null,null],[5,"gtk_tree_model_filter_convert_path_to_child_path","","",null,null],[5,"gtk_tree_model_filter_get_model","","",null,null],[5,"gtk_tree_model_filter_refilter","","",null,null],[5,"gtk_tree_model_filter_set_modify_func","","",null,null],[5,"gtk_tree_model_filter_set_visible_column","","",null,null],[5,"gtk_tree_model_filter_set_visible_func","","",null,null],[5,"gtk_tree_model_sort_get_type","","",null,null],[5,"gtk_tree_model_sort_clear_cache","","",null,null],[5,"gtk_tree_model_sort_convert_child_iter_to_iter","","",null,null],[5,"gtk_tree_model_sort_convert_child_path_to_path","","",null,null],[5,"gtk_tree_model_sort_convert_iter_to_child_iter","","",null,null],[5,"gtk_tree_model_sort_convert_path_to_child_path","","",null,null],[5,"gtk_tree_model_sort_get_model","","",null,null],[5,"gtk_tree_model_sort_iter_is_valid","","",null,null],[5,"gtk_tree_model_sort_reset_default_sort_func","","",null,null],[5,"gtk_tree_selection_get_type","","",null,null],[5,"gtk_tree_selection_count_selected_rows","","",null,null],[5,"gtk_tree_selection_get_mode","","",null,null],[5,"gtk_tree_selection_get_select_function","","",null,null],[5,"gtk_tree_selection_get_selected","","",null,null],[5,"gtk_tree_selection_get_selected_rows","","",null,null],[5,"gtk_tree_selection_get_tree_view","","",null,null],[5,"gtk_tree_selection_get_user_data","","",null,null],[5,"gtk_tree_selection_iter_is_selected","","",null,null],[5,"gtk_tree_selection_path_is_selected","","",null,null],[5,"gtk_tree_selection_select_all","","",null,null],[5,"gtk_tree_selection_select_iter","","",null,null],[5,"gtk_tree_selection_select_path","","",null,null],[5,"gtk_tree_selection_select_range","","",null,null],[5,"gtk_tree_selection_selected_foreach","","",null,null],[5,"gtk_tree_selection_set_mode","","",null,null],[5,"gtk_tree_selection_set_select_function","","",null,null],[5,"gtk_tree_selection_unselect_all","","",null,null],[5,"gtk_tree_selection_unselect_iter","","",null,null],[5,"gtk_tree_selection_unselect_path","","",null,null],[5,"gtk_tree_selection_unselect_range","","",null,null],[5,"gtk_tree_store_get_type","","",null,null],[5,"gtk_tree_store_new","","",null,null],[5,"gtk_tree_store_newv","","",null,null],[5,"gtk_tree_store_append","","",null,null],[5,"gtk_tree_store_clear","","",null,null],[5,"gtk_tree_store_insert","","",null,null],[5,"gtk_tree_store_insert_after","","",null,null],[5,"gtk_tree_store_insert_before","","",null,null],[5,"gtk_tree_store_insert_with_values","","",null,null],[5,"gtk_tree_store_insert_with_valuesv","","",null,null],[5,"gtk_tree_store_is_ancestor","","",null,null],[5,"gtk_tree_store_iter_depth","","",null,null],[5,"gtk_tree_store_iter_is_valid","","",null,null],[5,"gtk_tree_store_move_after","","",null,null],[5,"gtk_tree_store_move_before","","",null,null],[5,"gtk_tree_store_prepend","","",null,null],[5,"gtk_tree_store_remove","","",null,null],[5,"gtk_tree_store_reorder","","",null,null],[5,"gtk_tree_store_set","","",null,null],[5,"gtk_tree_store_set_column_types","","",null,null],[5,"gtk_tree_store_set_value","","",null,null],[5,"gtk_tree_store_set_valuesv","","",null,null],[5,"gtk_tree_store_swap","","",null,null],[5,"gtk_tree_view_get_type","","",null,null],[5,"gtk_tree_view_new","","",null,null],[5,"gtk_tree_view_new_with_model","","",null,null],[5,"gtk_tree_view_append_column","","",null,null],[5,"gtk_tree_view_collapse_all","","",null,null],[5,"gtk_tree_view_collapse_row","","",null,null],[5,"gtk_tree_view_columns_autosize","","",null,null],[5,"gtk_tree_view_convert_bin_window_to_tree_coords","","",null,null],[5,"gtk_tree_view_convert_bin_window_to_widget_coords","","",null,null],[5,"gtk_tree_view_convert_tree_to_bin_window_coords","","",null,null],[5,"gtk_tree_view_convert_tree_to_widget_coords","","",null,null],[5,"gtk_tree_view_convert_widget_to_bin_window_coords","","",null,null],[5,"gtk_tree_view_convert_widget_to_tree_coords","","",null,null],[5,"gtk_tree_view_create_row_drag_icon","","",null,null],[5,"gtk_tree_view_enable_model_drag_dest","","",null,null],[5,"gtk_tree_view_enable_model_drag_source","","",null,null],[5,"gtk_tree_view_expand_all","","",null,null],[5,"gtk_tree_view_expand_row","","",null,null],[5,"gtk_tree_view_expand_to_path","","",null,null],[5,"gtk_tree_view_get_activate_on_single_click","","",null,null],[5,"gtk_tree_view_get_background_area","","",null,null],[5,"gtk_tree_view_get_bin_window","","",null,null],[5,"gtk_tree_view_get_cell_area","","",null,null],[5,"gtk_tree_view_get_column","","",null,null],[5,"gtk_tree_view_get_columns","","",null,null],[5,"gtk_tree_view_get_cursor","","",null,null],[5,"gtk_tree_view_get_dest_row_at_pos","","",null,null],[5,"gtk_tree_view_get_drag_dest_row","","",null,null],[5,"gtk_tree_view_get_enable_search","","",null,null],[5,"gtk_tree_view_get_enable_tree_lines","","",null,null],[5,"gtk_tree_view_get_expander_column","","",null,null],[5,"gtk_tree_view_get_fixed_height_mode","","",null,null],[5,"gtk_tree_view_get_grid_lines","","",null,null],[5,"gtk_tree_view_get_hadjustment","","",null,null],[5,"gtk_tree_view_get_headers_clickable","","",null,null],[5,"gtk_tree_view_get_headers_visible","","",null,null],[5,"gtk_tree_view_get_hover_expand","","",null,null],[5,"gtk_tree_view_get_hover_selection","","",null,null],[5,"gtk_tree_view_get_level_indentation","","",null,null],[5,"gtk_tree_view_get_model","","",null,null],[5,"gtk_tree_view_get_n_columns","","",null,null],[5,"gtk_tree_view_get_path_at_pos","","",null,null],[5,"gtk_tree_view_get_reorderable","","",null,null],[5,"gtk_tree_view_get_row_separator_func","","",null,null],[5,"gtk_tree_view_get_rubber_banding","","",null,null],[5,"gtk_tree_view_get_rules_hint","","",null,null],[5,"gtk_tree_view_get_search_column","","",null,null],[5,"gtk_tree_view_get_search_entry","","",null,null],[5,"gtk_tree_view_get_search_equal_func","","",null,null],[5,"gtk_tree_view_get_search_position_func","","",null,null],[5,"gtk_tree_view_get_selection","","",null,null],[5,"gtk_tree_view_get_show_expanders","","",null,null],[5,"gtk_tree_view_get_tooltip_column","","",null,null],[5,"gtk_tree_view_get_tooltip_context","","",null,null],[5,"gtk_tree_view_get_vadjustment","","",null,null],[5,"gtk_tree_view_get_visible_range","","",null,null],[5,"gtk_tree_view_get_visible_rect","","",null,null],[5,"gtk_tree_view_insert_column","","",null,null],[5,"gtk_tree_view_insert_column_with_attributes","","",null,null],[5,"gtk_tree_view_insert_column_with_data_func","","",null,null],[5,"gtk_tree_view_is_blank_at_pos","","",null,null],[5,"gtk_tree_view_is_rubber_banding_active","","",null,null],[5,"gtk_tree_view_map_expanded_rows","","",null,null],[5,"gtk_tree_view_move_column_after","","",null,null],[5,"gtk_tree_view_remove_column","","",null,null],[5,"gtk_tree_view_row_activated","","",null,null],[5,"gtk_tree_view_row_expanded","","",null,null],[5,"gtk_tree_view_scroll_to_cell","","",null,null],[5,"gtk_tree_view_scroll_to_point","","",null,null],[5,"gtk_tree_view_set_activate_on_single_click","","",null,null],[5,"gtk_tree_view_set_column_drag_function","","",null,null],[5,"gtk_tree_view_set_cursor","","",null,null],[5,"gtk_tree_view_set_cursor_on_cell","","",null,null],[5,"gtk_tree_view_set_destroy_count_func","","",null,null],[5,"gtk_tree_view_set_drag_dest_row","","",null,null],[5,"gtk_tree_view_set_enable_search","","",null,null],[5,"gtk_tree_view_set_enable_tree_lines","","",null,null],[5,"gtk_tree_view_set_expander_column","","",null,null],[5,"gtk_tree_view_set_fixed_height_mode","","",null,null],[5,"gtk_tree_view_set_grid_lines","","",null,null],[5,"gtk_tree_view_set_hadjustment","","",null,null],[5,"gtk_tree_view_set_headers_clickable","","",null,null],[5,"gtk_tree_view_set_headers_visible","","",null,null],[5,"gtk_tree_view_set_hover_expand","","",null,null],[5,"gtk_tree_view_set_hover_selection","","",null,null],[5,"gtk_tree_view_set_level_indentation","","",null,null],[5,"gtk_tree_view_set_model","","",null,null],[5,"gtk_tree_view_set_reorderable","","",null,null],[5,"gtk_tree_view_set_row_separator_func","","",null,null],[5,"gtk_tree_view_set_rubber_banding","","",null,null],[5,"gtk_tree_view_set_rules_hint","","",null,null],[5,"gtk_tree_view_set_search_column","","",null,null],[5,"gtk_tree_view_set_search_entry","","",null,null],[5,"gtk_tree_view_set_search_equal_func","","",null,null],[5,"gtk_tree_view_set_search_position_func","","",null,null],[5,"gtk_tree_view_set_show_expanders","","",null,null],[5,"gtk_tree_view_set_tooltip_cell","","",null,null],[5,"gtk_tree_view_set_tooltip_column","","",null,null],[5,"gtk_tree_view_set_tooltip_row","","",null,null],[5,"gtk_tree_view_set_vadjustment","","",null,null],[5,"gtk_tree_view_unset_rows_drag_dest","","",null,null],[5,"gtk_tree_view_unset_rows_drag_source","","",null,null],[5,"gtk_tree_view_accessible_get_type","","",null,null],[5,"gtk_tree_view_column_get_type","","",null,null],[5,"gtk_tree_view_column_new","","",null,null],[5,"gtk_tree_view_column_new_with_area","","",null,null],[5,"gtk_tree_view_column_new_with_attributes","","",null,null],[5,"gtk_tree_view_column_add_attribute","","",null,null],[5,"gtk_tree_view_column_cell_get_position","","",null,null],[5,"gtk_tree_view_column_cell_get_size","","",null,null],[5,"gtk_tree_view_column_cell_is_visible","","",null,null],[5,"gtk_tree_view_column_cell_set_cell_data","","",null,null],[5,"gtk_tree_view_column_clear","","",null,null],[5,"gtk_tree_view_column_clear_attributes","","",null,null],[5,"gtk_tree_view_column_clicked","","",null,null],[5,"gtk_tree_view_column_focus_cell","","",null,null],[5,"gtk_tree_view_column_get_alignment","","",null,null],[5,"gtk_tree_view_column_get_button","","",null,null],[5,"gtk_tree_view_column_get_clickable","","",null,null],[5,"gtk_tree_view_column_get_expand","","",null,null],[5,"gtk_tree_view_column_get_fixed_width","","",null,null],[5,"gtk_tree_view_column_get_max_width","","",null,null],[5,"gtk_tree_view_column_get_min_width","","",null,null],[5,"gtk_tree_view_column_get_reorderable","","",null,null],[5,"gtk_tree_view_column_get_resizable","","",null,null],[5,"gtk_tree_view_column_get_sizing","","",null,null],[5,"gtk_tree_view_column_get_sort_column_id","","",null,null],[5,"gtk_tree_view_column_get_sort_indicator","","",null,null],[5,"gtk_tree_view_column_get_sort_order","","",null,null],[5,"gtk_tree_view_column_get_spacing","","",null,null],[5,"gtk_tree_view_column_get_title","","",null,null],[5,"gtk_tree_view_column_get_tree_view","","",null,null],[5,"gtk_tree_view_column_get_visible","","",null,null],[5,"gtk_tree_view_column_get_widget","","",null,null],[5,"gtk_tree_view_column_get_width","","",null,null],[5,"gtk_tree_view_column_get_x_offset","","",null,null],[5,"gtk_tree_view_column_pack_end","","",null,null],[5,"gtk_tree_view_column_pack_start","","",null,null],[5,"gtk_tree_view_column_queue_resize","","",null,null],[5,"gtk_tree_view_column_set_alignment","","",null,null],[5,"gtk_tree_view_column_set_attributes","","",null,null],[5,"gtk_tree_view_column_set_cell_data_func","","",null,null],[5,"gtk_tree_view_column_set_clickable","","",null,null],[5,"gtk_tree_view_column_set_expand","","",null,null],[5,"gtk_tree_view_column_set_fixed_width","","",null,null],[5,"gtk_tree_view_column_set_max_width","","",null,null],[5,"gtk_tree_view_column_set_min_width","","",null,null],[5,"gtk_tree_view_column_set_reorderable","","",null,null],[5,"gtk_tree_view_column_set_resizable","","",null,null],[5,"gtk_tree_view_column_set_sizing","","",null,null],[5,"gtk_tree_view_column_set_sort_column_id","","",null,null],[5,"gtk_tree_view_column_set_sort_indicator","","",null,null],[5,"gtk_tree_view_column_set_sort_order","","",null,null],[5,"gtk_tree_view_column_set_spacing","","",null,null],[5,"gtk_tree_view_column_set_title","","",null,null],[5,"gtk_tree_view_column_set_visible","","",null,null],[5,"gtk_tree_view_column_set_widget","","",null,null],[5,"gtk_ui_manager_get_type","","",null,null],[5,"gtk_ui_manager_new","","",null,null],[5,"gtk_ui_manager_add_ui","","",null,null],[5,"gtk_ui_manager_add_ui_from_file","","",null,null],[5,"gtk_ui_manager_add_ui_from_resource","","",null,null],[5,"gtk_ui_manager_add_ui_from_string","","",null,null],[5,"gtk_ui_manager_ensure_update","","",null,null],[5,"gtk_ui_manager_get_accel_group","","",null,null],[5,"gtk_ui_manager_get_action","","",null,null],[5,"gtk_ui_manager_get_action_groups","","",null,null],[5,"gtk_ui_manager_get_add_tearoffs","","",null,null],[5,"gtk_ui_manager_get_toplevels","","",null,null],[5,"gtk_ui_manager_get_ui","","",null,null],[5,"gtk_ui_manager_get_widget","","",null,null],[5,"gtk_ui_manager_insert_action_group","","",null,null],[5,"gtk_ui_manager_new_merge_id","","",null,null],[5,"gtk_ui_manager_remove_action_group","","",null,null],[5,"gtk_ui_manager_remove_ui","","",null,null],[5,"gtk_ui_manager_set_add_tearoffs","","",null,null],[5,"gtk_vbox_get_type","","",null,null],[5,"gtk_vbox_new","","",null,null],[5,"gtk_vbutton_box_get_type","","",null,null],[5,"gtk_vbutton_box_new","","",null,null],[5,"gtk_vpaned_get_type","","",null,null],[5,"gtk_vpaned_new","","",null,null],[5,"gtk_vscale_get_type","","",null,null],[5,"gtk_vscale_new","","",null,null],[5,"gtk_vscale_new_with_range","","",null,null],[5,"gtk_vscrollbar_get_type","","",null,null],[5,"gtk_vscrollbar_new","","",null,null],[5,"gtk_vseparator_get_type","","",null,null],[5,"gtk_vseparator_new","","",null,null],[5,"gtk_viewport_get_type","","",null,null],[5,"gtk_viewport_new","","",null,null],[5,"gtk_viewport_get_bin_window","","",null,null],[5,"gtk_viewport_get_hadjustment","","",null,null],[5,"gtk_viewport_get_shadow_type","","",null,null],[5,"gtk_viewport_get_vadjustment","","",null,null],[5,"gtk_viewport_get_view_window","","",null,null],[5,"gtk_viewport_set_hadjustment","","",null,null],[5,"gtk_viewport_set_shadow_type","","",null,null],[5,"gtk_viewport_set_vadjustment","","",null,null],[5,"gtk_volume_button_get_type","","",null,null],[5,"gtk_volume_button_new","","",null,null],[5,"gtk_widget_get_type","","",null,null],[5,"gtk_widget_new","","",null,null],[5,"gtk_widget_get_default_direction","","",null,null],[5,"gtk_widget_get_default_style","","",null,null],[5,"gtk_widget_pop_composite_child","","",null,null],[5,"gtk_widget_push_composite_child","","",null,null],[5,"gtk_widget_set_default_direction","","",null,null],[5,"gtk_widget_activate","","",null,null],[5,"gtk_widget_add_accelerator","","",null,null],[5,"gtk_widget_add_device_events","","",null,null],[5,"gtk_widget_add_events","","",null,null],[5,"gtk_widget_add_mnemonic_label","","",null,null],[5,"gtk_widget_add_tick_callback","","",null,null],[5,"gtk_widget_can_activate_accel","","",null,null],[5,"gtk_widget_child_focus","","",null,null],[5,"gtk_widget_child_notify","","",null,null],[5,"gtk_widget_class_path","","",null,null],[5,"gtk_widget_compute_expand","","",null,null],[5,"gtk_widget_create_pango_context","","",null,null],[5,"gtk_widget_create_pango_layout","","",null,null],[5,"gtk_widget_destroy","","",null,null],[5,"gtk_widget_destroyed","","",null,null],[5,"gtk_widget_device_is_shadowed","","",null,null],[5,"gtk_drag_begin","","",null,null],[5,"gtk_drag_begin_with_coordinates","","",null,null],[5,"gtk_drag_check_threshold","","",null,null],[5,"gtk_drag_dest_add_image_targets","","",null,null],[5,"gtk_drag_dest_add_text_targets","","",null,null],[5,"gtk_drag_dest_add_uri_targets","","",null,null],[5,"gtk_drag_dest_find_target","","",null,null],[5,"gtk_drag_dest_get_target_list","","",null,null],[5,"gtk_drag_dest_get_track_motion","","",null,null],[5,"gtk_drag_dest_set","","",null,null],[5,"gtk_drag_dest_set_proxy","","",null,null],[5,"gtk_drag_dest_set_target_list","","",null,null],[5,"gtk_drag_dest_set_track_motion","","",null,null],[5,"gtk_drag_dest_unset","","",null,null],[5,"gtk_drag_get_data","","",null,null],[5,"gtk_drag_highlight","","",null,null],[5,"gtk_drag_source_add_image_targets","","",null,null],[5,"gtk_drag_source_add_text_targets","","",null,null],[5,"gtk_drag_source_add_uri_targets","","",null,null],[5,"gtk_drag_source_get_target_list","","",null,null],[5,"gtk_drag_source_set","","",null,null],[5,"gtk_drag_source_set_icon_gicon","","",null,null],[5,"gtk_drag_source_set_icon_name","","",null,null],[5,"gtk_drag_source_set_icon_pixbuf","","",null,null],[5,"gtk_drag_source_set_icon_stock","","",null,null],[5,"gtk_drag_source_set_target_list","","",null,null],[5,"gtk_drag_source_unset","","",null,null],[5,"gtk_drag_unhighlight","","",null,null],[5,"gtk_widget_draw","","",null,null],[5,"gtk_widget_ensure_style","","",null,null],[5,"gtk_widget_error_bell","","",null,null],[5,"gtk_widget_event","","",null,null],[5,"gtk_widget_freeze_child_notify","","",null,null],[5,"gtk_widget_get_accessible","","",null,null],[5,"gtk_widget_get_action_group","","",null,null],[5,"gtk_widget_get_allocated_baseline","","",null,null],[5,"gtk_widget_get_allocated_height","","",null,null],[5,"gtk_widget_get_allocated_width","","",null,null],[5,"gtk_widget_get_allocation","","",null,null],[5,"gtk_widget_get_ancestor","","",null,null],[5,"gtk_widget_get_app_paintable","","",null,null],[5,"gtk_widget_get_can_default","","",null,null],[5,"gtk_widget_get_can_focus","","",null,null],[5,"gtk_widget_get_child_requisition","","",null,null],[5,"gtk_widget_get_child_visible","","",null,null],[5,"gtk_widget_get_clip","","",null,null],[5,"gtk_widget_get_clipboard","","",null,null],[5,"gtk_widget_get_composite_name","","",null,null],[5,"gtk_widget_get_device_enabled","","",null,null],[5,"gtk_widget_get_device_events","","",null,null],[5,"gtk_widget_get_direction","","",null,null],[5,"gtk_widget_get_display","","",null,null],[5,"gtk_widget_get_double_buffered","","",null,null],[5,"gtk_widget_get_events","","",null,null],[5,"gtk_widget_get_frame_clock","","",null,null],[5,"gtk_widget_get_halign","","",null,null],[5,"gtk_widget_get_has_tooltip","","",null,null],[5,"gtk_widget_get_has_window","","",null,null],[5,"gtk_widget_get_hexpand","","",null,null],[5,"gtk_widget_get_hexpand_set","","",null,null],[5,"gtk_widget_get_mapped","","",null,null],[5,"gtk_widget_get_margin_bottom","","",null,null],[5,"gtk_widget_get_margin_end","","",null,null],[5,"gtk_widget_get_margin_left","","",null,null],[5,"gtk_widget_get_margin_right","","",null,null],[5,"gtk_widget_get_margin_start","","",null,null],[5,"gtk_widget_get_margin_top","","",null,null],[5,"gtk_widget_get_modifier_mask","","",null,null],[5,"gtk_widget_get_modifier_style","","",null,null],[5,"gtk_widget_get_name","","",null,null],[5,"gtk_widget_get_no_show_all","","",null,null],[5,"gtk_widget_get_opacity","","",null,null],[5,"gtk_widget_get_pango_context","","",null,null],[5,"gtk_widget_get_parent","","",null,null],[5,"gtk_widget_get_parent_window","","",null,null],[5,"gtk_widget_get_path","","",null,null],[5,"gtk_widget_get_pointer","","",null,null],[5,"gtk_widget_get_preferred_height","","",null,null],[5,"gtk_widget_get_preferred_height_and_baseline_for_width","","",null,null],[5,"gtk_widget_get_preferred_height_for_width","","",null,null],[5,"gtk_widget_get_preferred_size","","",null,null],[5,"gtk_widget_get_preferred_width","","",null,null],[5,"gtk_widget_get_preferred_width_for_height","","",null,null],[5,"gtk_widget_get_realized","","",null,null],[5,"gtk_widget_get_receives_default","","",null,null],[5,"gtk_widget_get_request_mode","","",null,null],[5,"gtk_widget_get_requisition","","",null,null],[5,"gtk_widget_get_root_window","","",null,null],[5,"gtk_widget_get_scale_factor","","",null,null],[5,"gtk_widget_get_screen","","",null,null],[5,"gtk_widget_get_sensitive","","",null,null],[5,"gtk_widget_get_settings","","",null,null],[5,"gtk_widget_get_size_request","","",null,null],[5,"gtk_widget_get_state","","",null,null],[5,"gtk_widget_get_state_flags","","",null,null],[5,"gtk_widget_get_style","","",null,null],[5,"gtk_widget_get_style_context","","",null,null],[5,"gtk_widget_get_support_multidevice","","",null,null],[5,"gtk_widget_get_template_child","","",null,null],[5,"gtk_widget_get_tooltip_markup","","",null,null],[5,"gtk_widget_get_tooltip_text","","",null,null],[5,"gtk_widget_get_tooltip_window","","",null,null],[5,"gtk_widget_get_toplevel","","",null,null],[5,"gtk_widget_get_valign","","",null,null],[5,"gtk_widget_get_valign_with_baseline","","",null,null],[5,"gtk_widget_get_vexpand","","",null,null],[5,"gtk_widget_get_vexpand_set","","",null,null],[5,"gtk_widget_get_visible","","",null,null],[5,"gtk_widget_get_visual","","",null,null],[5,"gtk_widget_get_window","","",null,null],[5,"gtk_grab_add","","",null,null],[5,"gtk_widget_grab_default","","",null,null],[5,"gtk_widget_grab_focus","","",null,null],[5,"gtk_grab_remove","","",null,null],[5,"gtk_widget_has_default","","",null,null],[5,"gtk_widget_has_focus","","",null,null],[5,"gtk_widget_has_grab","","",null,null],[5,"gtk_widget_has_rc_style","","",null,null],[5,"gtk_widget_has_screen","","",null,null],[5,"gtk_widget_has_visible_focus","","",null,null],[5,"gtk_widget_hide","","",null,null],[5,"gtk_widget_hide_on_delete","","",null,null],[5,"gtk_widget_in_destruction","","",null,null],[5,"gtk_widget_init_template","","",null,null],[5,"gtk_widget_input_shape_combine_region","","",null,null],[5,"gtk_widget_insert_action_group","","",null,null],[5,"gtk_widget_intersect","","",null,null],[5,"gtk_widget_is_ancestor","","",null,null],[5,"gtk_widget_is_composited","","",null,null],[5,"gtk_widget_is_drawable","","",null,null],[5,"gtk_widget_is_focus","","",null,null],[5,"gtk_widget_is_sensitive","","",null,null],[5,"gtk_widget_is_toplevel","","",null,null],[5,"gtk_widget_is_visible","","",null,null],[5,"gtk_widget_keynav_failed","","",null,null],[5,"gtk_widget_list_accel_closures","","",null,null],[5,"gtk_widget_list_action_prefixes","","",null,null],[5,"gtk_widget_list_mnemonic_labels","","",null,null],[5,"gtk_widget_map","","",null,null],[5,"gtk_widget_mnemonic_activate","","",null,null],[5,"gtk_widget_modify_base","","",null,null],[5,"gtk_widget_modify_bg","","",null,null],[5,"gtk_widget_modify_cursor","","",null,null],[5,"gtk_widget_modify_fg","","",null,null],[5,"gtk_widget_modify_font","","",null,null],[5,"gtk_widget_modify_style","","",null,null],[5,"gtk_widget_modify_text","","",null,null],[5,"gtk_widget_override_background_color","","",null,null],[5,"gtk_widget_override_color","","",null,null],[5,"gtk_widget_override_cursor","","",null,null],[5,"gtk_widget_override_font","","",null,null],[5,"gtk_widget_override_symbolic_color","","",null,null],[5,"gtk_widget_path","","",null,null],[5,"gtk_widget_queue_compute_expand","","",null,null],[5,"gtk_widget_queue_draw","","",null,null],[5,"gtk_widget_queue_draw_area","","",null,null],[5,"gtk_widget_queue_draw_region","","",null,null],[5,"gtk_widget_queue_resize","","",null,null],[5,"gtk_widget_queue_resize_no_redraw","","",null,null],[5,"gtk_widget_realize","","",null,null],[5,"gtk_widget_region_intersect","","",null,null],[5,"gtk_widget_register_window","","",null,null],[5,"gtk_widget_remove_accelerator","","",null,null],[5,"gtk_widget_remove_mnemonic_label","","",null,null],[5,"gtk_widget_remove_tick_callback","","",null,null],[5,"gtk_widget_render_icon","","",null,null],[5,"gtk_widget_render_icon_pixbuf","","",null,null],[5,"gtk_widget_reparent","","",null,null],[5,"gtk_widget_reset_rc_styles","","",null,null],[5,"gtk_widget_reset_style","","",null,null],[5,"gtk_widget_send_expose","","",null,null],[5,"gtk_widget_send_focus_change","","",null,null],[5,"gtk_widget_set_accel_path","","",null,null],[5,"gtk_widget_set_allocation","","",null,null],[5,"gtk_widget_set_app_paintable","","",null,null],[5,"gtk_widget_set_can_default","","",null,null],[5,"gtk_widget_set_can_focus","","",null,null],[5,"gtk_widget_set_child_visible","","",null,null],[5,"gtk_widget_set_clip","","",null,null],[5,"gtk_widget_set_composite_name","","",null,null],[5,"gtk_widget_set_device_enabled","","",null,null],[5,"gtk_widget_set_device_events","","",null,null],[5,"gtk_widget_set_direction","","",null,null],[5,"gtk_widget_set_double_buffered","","",null,null],[5,"gtk_widget_set_events","","",null,null],[5,"gtk_widget_set_halign","","",null,null],[5,"gtk_widget_set_has_tooltip","","",null,null],[5,"gtk_widget_set_has_window","","",null,null],[5,"gtk_widget_set_hexpand","","",null,null],[5,"gtk_widget_set_hexpand_set","","",null,null],[5,"gtk_widget_set_mapped","","",null,null],[5,"gtk_widget_set_margin_bottom","","",null,null],[5,"gtk_widget_set_margin_end","","",null,null],[5,"gtk_widget_set_margin_left","","",null,null],[5,"gtk_widget_set_margin_right","","",null,null],[5,"gtk_widget_set_margin_start","","",null,null],[5,"gtk_widget_set_margin_top","","",null,null],[5,"gtk_widget_set_name","","",null,null],[5,"gtk_widget_set_no_show_all","","",null,null],[5,"gtk_widget_set_opacity","","",null,null],[5,"gtk_widget_set_parent","","",null,null],[5,"gtk_widget_set_parent_window","","",null,null],[5,"gtk_widget_set_realized","","",null,null],[5,"gtk_widget_set_receives_default","","",null,null],[5,"gtk_widget_set_redraw_on_allocate","","",null,null],[5,"gtk_widget_set_sensitive","","",null,null],[5,"gtk_widget_set_size_request","","",null,null],[5,"gtk_widget_set_state","","",null,null],[5,"gtk_widget_set_state_flags","","",null,null],[5,"gtk_widget_set_style","","",null,null],[5,"gtk_widget_set_support_multidevice","","",null,null],[5,"gtk_widget_set_tooltip_markup","","",null,null],[5,"gtk_widget_set_tooltip_text","","",null,null],[5,"gtk_widget_set_tooltip_window","","",null,null],[5,"gtk_widget_set_valign","","",null,null],[5,"gtk_widget_set_vexpand","","",null,null],[5,"gtk_widget_set_vexpand_set","","",null,null],[5,"gtk_widget_set_visible","","",null,null],[5,"gtk_widget_set_visual","","",null,null],[5,"gtk_widget_set_window","","",null,null],[5,"gtk_widget_shape_combine_region","","",null,null],[5,"gtk_widget_show","","",null,null],[5,"gtk_widget_show_all","","",null,null],[5,"gtk_widget_show_now","","",null,null],[5,"gtk_widget_size_allocate","","",null,null],[5,"gtk_widget_size_allocate_with_baseline","","",null,null],[5,"gtk_widget_size_request","","",null,null],[5,"gtk_widget_style_attach","","",null,null],[5,"gtk_widget_style_get","","",null,null],[5,"gtk_widget_style_get_property","","",null,null],[5,"gtk_widget_thaw_child_notify","","",null,null],[5,"gtk_widget_translate_coordinates","","",null,null],[5,"gtk_widget_trigger_tooltip_query","","",null,null],[5,"gtk_widget_unmap","","",null,null],[5,"gtk_widget_unparent","","",null,null],[5,"gtk_widget_unrealize","","",null,null],[5,"gtk_widget_unregister_window","","",null,null],[5,"gtk_widget_unset_state_flags","","",null,null],[5,"gtk_widget_accessible_get_type","","",null,null],[5,"gtk_window_get_type","","",null,null],[5,"gtk_window_new","","",null,null],[5,"gtk_window_get_default_icon_list","","",null,null],[5,"gtk_window_get_default_icon_name","","",null,null],[5,"gtk_window_list_toplevels","","",null,null],[5,"gtk_window_set_auto_startup_notification","","",null,null],[5,"gtk_window_set_default_icon","","",null,null],[5,"gtk_window_set_default_icon_from_file","","",null,null],[5,"gtk_window_set_default_icon_list","","",null,null],[5,"gtk_window_set_default_icon_name","","",null,null],[5,"gtk_window_set_interactive_debugging","","",null,null],[5,"gtk_window_activate_default","","",null,null],[5,"gtk_window_activate_focus","","",null,null],[5,"gtk_window_activate_key","","",null,null],[5,"gtk_window_add_accel_group","","",null,null],[5,"gtk_window_add_mnemonic","","",null,null],[5,"gtk_window_begin_move_drag","","",null,null],[5,"gtk_window_begin_resize_drag","","",null,null],[5,"gtk_window_close","","",null,null],[5,"gtk_window_deiconify","","",null,null],[5,"gtk_window_fullscreen","","",null,null],[5,"gtk_window_get_accept_focus","","",null,null],[5,"gtk_window_get_application","","",null,null],[5,"gtk_window_get_attached_to","","",null,null],[5,"gtk_window_get_decorated","","",null,null],[5,"gtk_window_get_default_size","","",null,null],[5,"gtk_window_get_default_widget","","",null,null],[5,"gtk_window_get_deletable","","",null,null],[5,"gtk_window_get_destroy_with_parent","","",null,null],[5,"gtk_window_get_focus","","",null,null],[5,"gtk_window_get_focus_on_map","","",null,null],[5,"gtk_window_get_focus_visible","","",null,null],[5,"gtk_window_get_gravity","","",null,null],[5,"gtk_window_get_group","","",null,null],[5,"gtk_window_get_has_resize_grip","","",null,null],[5,"gtk_window_get_hide_titlebar_when_maximized","","",null,null],[5,"gtk_window_get_icon","","",null,null],[5,"gtk_window_get_icon_list","","",null,null],[5,"gtk_window_get_icon_name","","",null,null],[5,"gtk_window_get_mnemonic_modifier","","",null,null],[5,"gtk_window_get_mnemonics_visible","","",null,null],[5,"gtk_window_get_modal","","",null,null],[5,"gtk_window_get_opacity","","",null,null],[5,"gtk_window_get_position","","",null,null],[5,"gtk_window_get_resizable","","",null,null],[5,"gtk_window_get_resize_grip_area","","",null,null],[5,"gtk_window_get_role","","",null,null],[5,"gtk_window_get_screen","","",null,null],[5,"gtk_window_get_size","","",null,null],[5,"gtk_window_get_skip_pager_hint","","",null,null],[5,"gtk_window_get_skip_taskbar_hint","","",null,null],[5,"gtk_window_get_title","","",null,null],[5,"gtk_window_get_titlebar","","",null,null],[5,"gtk_window_get_transient_for","","",null,null],[5,"gtk_window_get_type_hint","","",null,null],[5,"gtk_window_get_urgency_hint","","",null,null],[5,"gtk_window_get_window_type","","",null,null],[5,"gtk_window_has_group","","",null,null],[5,"gtk_window_has_toplevel_focus","","",null,null],[5,"gtk_window_iconify","","",null,null],[5,"gtk_window_is_active","","",null,null],[5,"gtk_window_is_maximized","","",null,null],[5,"gtk_window_maximize","","",null,null],[5,"gtk_window_mnemonic_activate","","",null,null],[5,"gtk_window_move","","",null,null],[5,"gtk_window_parse_geometry","","",null,null],[5,"gtk_window_present","","",null,null],[5,"gtk_window_present_with_time","","",null,null],[5,"gtk_window_propagate_key_event","","",null,null],[5,"gtk_window_remove_accel_group","","",null,null],[5,"gtk_window_remove_mnemonic","","",null,null],[5,"gtk_window_reshow_with_initial_size","","",null,null],[5,"gtk_window_resize","","",null,null],[5,"gtk_window_resize_grip_is_visible","","",null,null],[5,"gtk_window_resize_to_geometry","","",null,null],[5,"gtk_window_set_accept_focus","","",null,null],[5,"gtk_window_set_application","","",null,null],[5,"gtk_window_set_attached_to","","",null,null],[5,"gtk_window_set_decorated","","",null,null],[5,"gtk_window_set_default","","",null,null],[5,"gtk_window_set_default_geometry","","",null,null],[5,"gtk_window_set_default_size","","",null,null],[5,"gtk_window_set_deletable","","",null,null],[5,"gtk_window_set_destroy_with_parent","","",null,null],[5,"gtk_window_set_focus","","",null,null],[5,"gtk_window_set_focus_on_map","","",null,null],[5,"gtk_window_set_focus_visible","","",null,null],[5,"gtk_window_set_geometry_hints","","",null,null],[5,"gtk_window_set_gravity","","",null,null],[5,"gtk_window_set_has_resize_grip","","",null,null],[5,"gtk_window_set_has_user_ref_count","","",null,null],[5,"gtk_window_set_hide_titlebar_when_maximized","","",null,null],[5,"gtk_window_set_icon","","",null,null],[5,"gtk_window_set_icon_from_file","","",null,null],[5,"gtk_window_set_icon_list","","",null,null],[5,"gtk_window_set_icon_name","","",null,null],[5,"gtk_window_set_keep_above","","",null,null],[5,"gtk_window_set_keep_below","","",null,null],[5,"gtk_window_set_mnemonic_modifier","","",null,null],[5,"gtk_window_set_mnemonics_visible","","",null,null],[5,"gtk_window_set_modal","","",null,null],[5,"gtk_window_set_opacity","","",null,null],[5,"gtk_window_set_position","","",null,null],[5,"gtk_window_set_resizable","","",null,null],[5,"gtk_window_set_role","","",null,null],[5,"gtk_window_set_screen","","",null,null],[5,"gtk_window_set_skip_pager_hint","","",null,null],[5,"gtk_window_set_skip_taskbar_hint","","",null,null],[5,"gtk_window_set_startup_id","","",null,null],[5,"gtk_window_set_title","","",null,null],[5,"gtk_window_set_titlebar","","",null,null],[5,"gtk_window_set_transient_for","","",null,null],[5,"gtk_window_set_type_hint","","",null,null],[5,"gtk_window_set_urgency_hint","","",null,null],[5,"gtk_window_set_wmclass","","",null,null],[5,"gtk_window_stick","","",null,null],[5,"gtk_window_unfullscreen","","",null,null],[5,"gtk_window_unmaximize","","",null,null],[5,"gtk_window_unstick","","",null,null],[5,"gtk_window_accessible_get_type","","",null,null],[5,"gtk_window_group_get_type","","",null,null],[5,"gtk_window_group_new","","",null,null],[5,"gtk_window_group_add_window","","",null,null],[5,"gtk_window_group_get_current_device_grab","","",null,null],[5,"gtk_window_group_get_current_grab","","",null,null],[5,"gtk_window_group_list_windows","","",null,null],[5,"gtk_window_group_remove_window","","",null,null],[5,"gtk_actionable_get_type","","",null,null],[5,"gtk_actionable_get_action_name","","",null,null],[5,"gtk_actionable_get_action_target_value","","",null,null],[5,"gtk_actionable_set_action_name","","",null,null],[5,"gtk_actionable_set_action_target","","",null,null],[5,"gtk_actionable_set_action_target_value","","",null,null],[5,"gtk_actionable_set_detailed_action_name","","",null,null],[5,"gtk_activatable_get_type","","",null,null],[5,"gtk_activatable_do_set_related_action","","",null,null],[5,"gtk_activatable_get_related_action","","",null,null],[5,"gtk_activatable_get_use_action_appearance","","",null,null],[5,"gtk_activatable_set_related_action","","",null,null],[5,"gtk_activatable_set_use_action_appearance","","",null,null],[5,"gtk_activatable_sync_action_properties","","",null,null],[5,"gtk_app_chooser_get_type","","",null,null],[5,"gtk_app_chooser_get_app_info","","",null,null],[5,"gtk_app_chooser_get_content_type","","",null,null],[5,"gtk_app_chooser_refresh","","",null,null],[5,"gtk_buildable_get_type","","",null,null],[5,"gtk_buildable_add_child","","",null,null],[5,"gtk_buildable_construct_child","","",null,null],[5,"gtk_buildable_custom_finished","","",null,null],[5,"gtk_buildable_custom_tag_end","","",null,null],[5,"gtk_buildable_custom_tag_start","","",null,null],[5,"gtk_buildable_get_internal_child","","",null,null],[5,"gtk_buildable_get_name","","",null,null],[5,"gtk_buildable_parser_finished","","",null,null],[5,"gtk_buildable_set_buildable_property","","",null,null],[5,"gtk_buildable_set_name","","",null,null],[5,"gtk_cell_accessible_parent_get_type","","",null,null],[5,"gtk_cell_accessible_parent_activate","","",null,null],[5,"gtk_cell_accessible_parent_edit","","",null,null],[5,"gtk_cell_accessible_parent_expand_collapse","","",null,null],[5,"gtk_cell_accessible_parent_get_cell_area","","",null,null],[5,"gtk_cell_accessible_parent_get_cell_extents","","",null,null],[5,"gtk_cell_accessible_parent_get_child_index","","",null,null],[5,"gtk_cell_accessible_parent_get_renderer_state","","",null,null],[5,"gtk_cell_accessible_parent_grab_focus","","",null,null],[5,"gtk_cell_accessible_parent_update_relationset","","",null,null],[5,"gtk_cell_editable_get_type","","",null,null],[5,"gtk_cell_editable_editing_done","","",null,null],[5,"gtk_cell_editable_remove_widget","","",null,null],[5,"gtk_cell_editable_start_editing","","",null,null],[5,"gtk_cell_layout_get_type","","",null,null],[5,"gtk_cell_layout_add_attribute","","",null,null],[5,"gtk_cell_layout_clear","","",null,null],[5,"gtk_cell_layout_clear_attributes","","",null,null],[5,"gtk_cell_layout_get_area","","",null,null],[5,"gtk_cell_layout_get_cells","","",null,null],[5,"gtk_cell_layout_pack_end","","",null,null],[5,"gtk_cell_layout_pack_start","","",null,null],[5,"gtk_cell_layout_reorder","","",null,null],[5,"gtk_cell_layout_set_attributes","","",null,null],[5,"gtk_cell_layout_set_cell_data_func","","",null,null],[5,"gtk_color_chooser_get_type","","",null,null],[5,"gtk_color_chooser_add_palette","","",null,null],[5,"gtk_color_chooser_get_rgba","","",null,null],[5,"gtk_color_chooser_get_use_alpha","","",null,null],[5,"gtk_color_chooser_set_rgba","","",null,null],[5,"gtk_color_chooser_set_use_alpha","","",null,null],[5,"gtk_editable_get_type","","",null,null],[5,"gtk_editable_copy_clipboard","","",null,null],[5,"gtk_editable_cut_clipboard","","",null,null],[5,"gtk_editable_delete_selection","","",null,null],[5,"gtk_editable_delete_text","","",null,null],[5,"gtk_editable_get_chars","","",null,null],[5,"gtk_editable_get_editable","","",null,null],[5,"gtk_editable_get_position","","",null,null],[5,"gtk_editable_get_selection_bounds","","",null,null],[5,"gtk_editable_insert_text","","",null,null],[5,"gtk_editable_paste_clipboard","","",null,null],[5,"gtk_editable_select_region","","",null,null],[5,"gtk_editable_set_editable","","",null,null],[5,"gtk_editable_set_position","","",null,null],[5,"gtk_file_chooser_get_type","","",null,null],[5,"gtk_file_chooser_add_filter","","",null,null],[5,"gtk_file_chooser_add_shortcut_folder","","",null,null],[5,"gtk_file_chooser_add_shortcut_folder_uri","","",null,null],[5,"gtk_file_chooser_get_action","","",null,null],[5,"gtk_file_chooser_get_create_folders","","",null,null],[5,"gtk_file_chooser_get_current_folder","","",null,null],[5,"gtk_file_chooser_get_current_folder_file","","",null,null],[5,"gtk_file_chooser_get_current_folder_uri","","",null,null],[5,"gtk_file_chooser_get_current_name","","",null,null],[5,"gtk_file_chooser_get_do_overwrite_confirmation","","",null,null],[5,"gtk_file_chooser_get_extra_widget","","",null,null],[5,"gtk_file_chooser_get_file","","",null,null],[5,"gtk_file_chooser_get_filename","","",null,null],[5,"gtk_file_chooser_get_filenames","","",null,null],[5,"gtk_file_chooser_get_files","","",null,null],[5,"gtk_file_chooser_get_filter","","",null,null],[5,"gtk_file_chooser_get_local_only","","",null,null],[5,"gtk_file_chooser_get_preview_file","","",null,null],[5,"gtk_file_chooser_get_preview_filename","","",null,null],[5,"gtk_file_chooser_get_preview_uri","","",null,null],[5,"gtk_file_chooser_get_preview_widget","","",null,null],[5,"gtk_file_chooser_get_preview_widget_active","","",null,null],[5,"gtk_file_chooser_get_select_multiple","","",null,null],[5,"gtk_file_chooser_get_show_hidden","","",null,null],[5,"gtk_file_chooser_get_uri","","",null,null],[5,"gtk_file_chooser_get_uris","","",null,null],[5,"gtk_file_chooser_get_use_preview_label","","",null,null],[5,"gtk_file_chooser_list_filters","","",null,null],[5,"gtk_file_chooser_list_shortcut_folder_uris","","",null,null],[5,"gtk_file_chooser_list_shortcut_folders","","",null,null],[5,"gtk_file_chooser_remove_filter","","",null,null],[5,"gtk_file_chooser_remove_shortcut_folder","","",null,null],[5,"gtk_file_chooser_remove_shortcut_folder_uri","","",null,null],[5,"gtk_file_chooser_select_all","","",null,null],[5,"gtk_file_chooser_select_file","","",null,null],[5,"gtk_file_chooser_select_filename","","",null,null],[5,"gtk_file_chooser_select_uri","","",null,null],[5,"gtk_file_chooser_set_action","","",null,null],[5,"gtk_file_chooser_set_create_folders","","",null,null],[5,"gtk_file_chooser_set_current_folder","","",null,null],[5,"gtk_file_chooser_set_current_folder_file","","",null,null],[5,"gtk_file_chooser_set_current_folder_uri","","",null,null],[5,"gtk_file_chooser_set_current_name","","",null,null],[5,"gtk_file_chooser_set_do_overwrite_confirmation","","",null,null],[5,"gtk_file_chooser_set_extra_widget","","",null,null],[5,"gtk_file_chooser_set_file","","",null,null],[5,"gtk_file_chooser_set_filename","","",null,null],[5,"gtk_file_chooser_set_filter","","",null,null],[5,"gtk_file_chooser_set_local_only","","",null,null],[5,"gtk_file_chooser_set_preview_widget","","",null,null],[5,"gtk_file_chooser_set_preview_widget_active","","",null,null],[5,"gtk_file_chooser_set_select_multiple","","",null,null],[5,"gtk_file_chooser_set_show_hidden","","",null,null],[5,"gtk_file_chooser_set_uri","","",null,null],[5,"gtk_file_chooser_set_use_preview_label","","",null,null],[5,"gtk_file_chooser_unselect_all","","",null,null],[5,"gtk_file_chooser_unselect_file","","",null,null],[5,"gtk_file_chooser_unselect_filename","","",null,null],[5,"gtk_file_chooser_unselect_uri","","",null,null],[5,"gtk_font_chooser_get_type","","",null,null],[5,"gtk_font_chooser_get_font","","",null,null],[5,"gtk_font_chooser_get_font_desc","","",null,null],[5,"gtk_font_chooser_get_font_face","","",null,null],[5,"gtk_font_chooser_get_font_family","","",null,null],[5,"gtk_font_chooser_get_font_size","","",null,null],[5,"gtk_font_chooser_get_preview_text","","",null,null],[5,"gtk_font_chooser_get_show_preview_entry","","",null,null],[5,"gtk_font_chooser_set_filter_func","","",null,null],[5,"gtk_font_chooser_set_font","","",null,null],[5,"gtk_font_chooser_set_font_desc","","",null,null],[5,"gtk_font_chooser_set_preview_text","","",null,null],[5,"gtk_font_chooser_set_show_preview_entry","","",null,null],[5,"gtk_orientable_get_type","","",null,null],[5,"gtk_orientable_get_orientation","","",null,null],[5,"gtk_orientable_set_orientation","","",null,null],[5,"gtk_print_operation_preview_get_type","","",null,null],[5,"gtk_print_operation_preview_end_preview","","",null,null],[5,"gtk_print_operation_preview_is_selected","","",null,null],[5,"gtk_print_operation_preview_render_page","","",null,null],[5,"gtk_recent_chooser_get_type","","",null,null],[5,"gtk_recent_chooser_add_filter","","",null,null],[5,"gtk_recent_chooser_get_current_item","","",null,null],[5,"gtk_recent_chooser_get_current_uri","","",null,null],[5,"gtk_recent_chooser_get_filter","","",null,null],[5,"gtk_recent_chooser_get_items","","",null,null],[5,"gtk_recent_chooser_get_limit","","",null,null],[5,"gtk_recent_chooser_get_local_only","","",null,null],[5,"gtk_recent_chooser_get_select_multiple","","",null,null],[5,"gtk_recent_chooser_get_show_icons","","",null,null],[5,"gtk_recent_chooser_get_show_not_found","","",null,null],[5,"gtk_recent_chooser_get_show_private","","",null,null],[5,"gtk_recent_chooser_get_show_tips","","",null,null],[5,"gtk_recent_chooser_get_sort_type","","",null,null],[5,"gtk_recent_chooser_get_uris","","",null,null],[5,"gtk_recent_chooser_list_filters","","",null,null],[5,"gtk_recent_chooser_remove_filter","","",null,null],[5,"gtk_recent_chooser_select_all","","",null,null],[5,"gtk_recent_chooser_select_uri","","",null,null],[5,"gtk_recent_chooser_set_current_uri","","",null,null],[5,"gtk_recent_chooser_set_filter","","",null,null],[5,"gtk_recent_chooser_set_limit","","",null,null],[5,"gtk_recent_chooser_set_local_only","","",null,null],[5,"gtk_recent_chooser_set_select_multiple","","",null,null],[5,"gtk_recent_chooser_set_show_icons","","",null,null],[5,"gtk_recent_chooser_set_show_not_found","","",null,null],[5,"gtk_recent_chooser_set_show_private","","",null,null],[5,"gtk_recent_chooser_set_show_tips","","",null,null],[5,"gtk_recent_chooser_set_sort_func","","",null,null],[5,"gtk_recent_chooser_set_sort_type","","",null,null],[5,"gtk_recent_chooser_unselect_all","","",null,null],[5,"gtk_recent_chooser_unselect_uri","","",null,null],[5,"gtk_scrollable_get_type","","",null,null],[5,"gtk_scrollable_get_border","","",null,null],[5,"gtk_scrollable_get_hadjustment","","",null,null],[5,"gtk_scrollable_get_hscroll_policy","","",null,null],[5,"gtk_scrollable_get_vadjustment","","",null,null],[5,"gtk_scrollable_get_vscroll_policy","","",null,null],[5,"gtk_scrollable_set_hadjustment","","",null,null],[5,"gtk_scrollable_set_hscroll_policy","","",null,null],[5,"gtk_scrollable_set_vadjustment","","",null,null],[5,"gtk_scrollable_set_vscroll_policy","","",null,null],[5,"gtk_style_provider_get_type","","",null,null],[5,"gtk_style_provider_get_icon_factory","","",null,null],[5,"gtk_style_provider_get_style","","",null,null],[5,"gtk_style_provider_get_style_property","","",null,null],[5,"gtk_tool_shell_get_type","","",null,null],[5,"gtk_tool_shell_get_ellipsize_mode","","",null,null],[5,"gtk_tool_shell_get_icon_size","","",null,null],[5,"gtk_tool_shell_get_orientation","","",null,null],[5,"gtk_tool_shell_get_relief_style","","",null,null],[5,"gtk_tool_shell_get_style","","",null,null],[5,"gtk_tool_shell_get_text_alignment","","",null,null],[5,"gtk_tool_shell_get_text_orientation","","",null,null],[5,"gtk_tool_shell_get_text_size_group","","",null,null],[5,"gtk_tool_shell_rebuild_menu","","",null,null],[5,"gtk_tree_drag_dest_get_type","","",null,null],[5,"gtk_tree_drag_dest_drag_data_received","","",null,null],[5,"gtk_tree_drag_dest_row_drop_possible","","",null,null],[5,"gtk_tree_drag_source_get_type","","",null,null],[5,"gtk_tree_drag_source_drag_data_delete","","",null,null],[5,"gtk_tree_drag_source_drag_data_get","","",null,null],[5,"gtk_tree_drag_source_row_draggable","","",null,null],[5,"gtk_tree_model_get_type","","",null,null],[5,"gtk_tree_model_filter_new","","",null,null],[5,"gtk_tree_model_foreach","","",null,null],[5,"gtk_tree_model_get","","",null,null],[5,"gtk_tree_model_get_column_type","","",null,null],[5,"gtk_tree_model_get_flags","","",null,null],[5,"gtk_tree_model_get_iter","","",null,null],[5,"gtk_tree_model_get_iter_first","","",null,null],[5,"gtk_tree_model_get_iter_from_string","","",null,null],[5,"gtk_tree_model_get_n_columns","","",null,null],[5,"gtk_tree_model_get_path","","",null,null],[5,"gtk_tree_model_get_string_from_iter","","",null,null],[5,"gtk_tree_model_get_value","","",null,null],[5,"gtk_tree_model_iter_children","","",null,null],[5,"gtk_tree_model_iter_has_child","","",null,null],[5,"gtk_tree_model_iter_n_children","","",null,null],[5,"gtk_tree_model_iter_next","","",null,null],[5,"gtk_tree_model_iter_nth_child","","",null,null],[5,"gtk_tree_model_iter_parent","","",null,null],[5,"gtk_tree_model_iter_previous","","",null,null],[5,"gtk_tree_model_ref_node","","",null,null],[5,"gtk_tree_model_row_changed","","",null,null],[5,"gtk_tree_model_row_deleted","","",null,null],[5,"gtk_tree_model_row_has_child_toggled","","",null,null],[5,"gtk_tree_model_row_inserted","","",null,null],[5,"gtk_tree_model_rows_reordered","","",null,null],[5,"gtk_tree_model_rows_reordered_with_length","","",null,null],[5,"gtk_tree_model_sort_new_with_model","","",null,null],[5,"gtk_tree_model_unref_node","","",null,null],[5,"gtk_tree_sortable_get_type","","",null,null],[5,"gtk_tree_sortable_get_sort_column_id","","",null,null],[5,"gtk_tree_sortable_has_default_sort_func","","",null,null],[5,"gtk_tree_sortable_set_default_sort_func","","",null,null],[5,"gtk_tree_sortable_set_sort_column_id","","",null,null],[5,"gtk_tree_sortable_set_sort_func","","",null,null],[5,"gtk_tree_sortable_sort_column_changed","","",null,null],[5,"gtk_accel_groups_activate","","",null,null],[5,"gtk_accel_groups_from_object","","",null,null],[5,"gtk_accelerator_get_default_mod_mask","","",null,null],[5,"gtk_accelerator_get_label","","",null,null],[5,"gtk_accelerator_get_label_with_keycode","","",null,null],[5,"gtk_accelerator_name","","",null,null],[5,"gtk_accelerator_name_with_keycode","","",null,null],[5,"gtk_accelerator_parse","","",null,null],[5,"gtk_accelerator_parse_with_keycode","","",null,null],[5,"gtk_accelerator_set_default_mod_mask","","",null,null],[5,"gtk_accelerator_valid","","",null,null],[5,"gtk_alternative_dialog_button_order","","",null,null],[5,"gtk_bindings_activate","","",null,null],[5,"gtk_bindings_activate_event","","",null,null],[5,"gtk_cairo_should_draw_window","","",null,null],[5,"gtk_cairo_transform_to_window","","",null,null],[5,"gtk_check_version","","",null,null],[5,"gtk_device_grab_add","","",null,null],[5,"gtk_device_grab_remove","","",null,null],[5,"gtk_disable_setlocale","","",null,null],[5,"gtk_distribute_natural_allocation","","",null,null],[5,"gtk_drag_cancel","","",null,null],[5,"gtk_drag_finish","","",null,null],[5,"gtk_drag_get_source_widget","","",null,null],[5,"gtk_drag_set_icon_default","","",null,null],[5,"gtk_drag_set_icon_gicon","","",null,null],[5,"gtk_drag_set_icon_name","","",null,null],[5,"gtk_drag_set_icon_pixbuf","","",null,null],[5,"gtk_drag_set_icon_stock","","",null,null],[5,"gtk_drag_set_icon_surface","","",null,null],[5,"gtk_drag_set_icon_widget","","",null,null],[5,"gtk_draw_insertion_cursor","","",null,null],[5,"gtk_events_pending","","",null,null],[5,"gtk_false","","",null,null],[5,"gtk_get_binary_age","","",null,null],[5,"gtk_get_current_event","","",null,null],[5,"gtk_get_current_event_device","","",null,null],[5,"gtk_get_current_event_state","","",null,null],[5,"gtk_get_current_event_time","","",null,null],[5,"gtk_get_debug_flags","","",null,null],[5,"gtk_get_default_language","","",null,null],[5,"gtk_get_event_widget","","",null,null],[5,"gtk_get_interface_age","","",null,null],[5,"gtk_get_locale_direction","","",null,null],[5,"gtk_get_major_version","","",null,null],[5,"gtk_get_micro_version","","",null,null],[5,"gtk_get_minor_version","","",null,null],[5,"gtk_get_option_group","","",null,null],[5,"gtk_grab_get_current","","",null,null],[5,"gtk_init","","",null,null],[5,"gtk_init_check","","",null,null],[5,"gtk_init_with_args","","",null,null],[5,"gtk_key_snooper_install","","",null,null],[5,"gtk_key_snooper_remove","","",null,null],[5,"gtk_main","","",null,null],[5,"gtk_main_do_event","","",null,null],[5,"gtk_main_iteration","","",null,null],[5,"gtk_main_iteration_do","","",null,null],[5,"gtk_main_level","","",null,null],[5,"gtk_main_quit","","",null,null],[5,"gtk_paint_arrow","","",null,null],[5,"gtk_paint_box","","",null,null],[5,"gtk_paint_box_gap","","",null,null],[5,"gtk_paint_check","","",null,null],[5,"gtk_paint_diamond","","",null,null],[5,"gtk_paint_expander","","",null,null],[5,"gtk_paint_extension","","",null,null],[5,"gtk_paint_flat_box","","",null,null],[5,"gtk_paint_focus","","",null,null],[5,"gtk_paint_handle","","",null,null],[5,"gtk_paint_hline","","",null,null],[5,"gtk_paint_layout","","",null,null],[5,"gtk_paint_option","","",null,null],[5,"gtk_paint_resize_grip","","",null,null],[5,"gtk_paint_shadow","","",null,null],[5,"gtk_paint_shadow_gap","","",null,null],[5,"gtk_paint_slider","","",null,null],[5,"gtk_paint_spinner","","",null,null],[5,"gtk_paint_tab","","",null,null],[5,"gtk_paint_vline","","",null,null],[5,"gtk_parse_args","","",null,null],[5,"gtk_print_run_page_setup_dialog","","",null,null],[5,"gtk_print_run_page_setup_dialog_async","","",null,null],[5,"gtk_propagate_event","","",null,null],[5,"gtk_rc_add_default_file","","",null,null],[5,"gtk_rc_find_module_in_path","","",null,null],[5,"gtk_rc_find_pixmap_in_path","","",null,null],[5,"gtk_rc_get_default_files","","",null,null],[5,"gtk_rc_get_im_module_file","","",null,null],[5,"gtk_rc_get_im_module_path","","",null,null],[5,"gtk_rc_get_module_dir","","",null,null],[5,"gtk_rc_get_style","","",null,null],[5,"gtk_rc_get_style_by_paths","","",null,null],[5,"gtk_rc_get_theme_dir","","",null,null],[5,"gtk_rc_parse","","",null,null],[5,"gtk_rc_parse_color","","",null,null],[5,"gtk_rc_parse_color_full","","",null,null],[5,"gtk_rc_parse_priority","","",null,null],[5,"gtk_rc_parse_state","","",null,null],[5,"gtk_rc_parse_string","","",null,null],[5,"gtk_rc_reparse_all","","",null,null],[5,"gtk_rc_reparse_all_for_settings","","",null,null],[5,"gtk_rc_reset_styles","","",null,null],[5,"gtk_rc_scanner_new","","",null,null],[5,"gtk_rc_set_default_files","","",null,null],[5,"gtk_render_activity","","",null,null],[5,"gtk_render_arrow","","",null,null],[5,"gtk_render_background","","",null,null],[5,"gtk_render_check","","",null,null],[5,"gtk_render_expander","","",null,null],[5,"gtk_render_extension","","",null,null],[5,"gtk_render_focus","","",null,null],[5,"gtk_render_frame","","",null,null],[5,"gtk_render_frame_gap","","",null,null],[5,"gtk_render_handle","","",null,null],[5,"gtk_render_icon","","",null,null],[5,"gtk_render_icon_pixbuf","","",null,null],[5,"gtk_render_icon_surface","","",null,null],[5,"gtk_render_insertion_cursor","","",null,null],[5,"gtk_render_layout","","",null,null],[5,"gtk_render_line","","",null,null],[5,"gtk_render_option","","",null,null],[5,"gtk_render_slider","","",null,null],[5,"gtk_rgb_to_hsv","","",null,null],[5,"gtk_selection_add_target","","",null,null],[5,"gtk_selection_add_targets","","",null,null],[5,"gtk_selection_clear_targets","","",null,null],[5,"gtk_selection_convert","","",null,null],[5,"gtk_selection_owner_set","","",null,null],[5,"gtk_selection_owner_set_for_display","","",null,null],[5,"gtk_selection_remove_all","","",null,null],[5,"gtk_set_debug_flags","","",null,null],[5,"gtk_show_about_dialog","","",null,null],[5,"gtk_show_uri","","",null,null],[5,"gtk_stock_add","","",null,null],[5,"gtk_stock_add_static","","",null,null],[5,"gtk_stock_list_ids","","",null,null],[5,"gtk_stock_lookup","","",null,null],[5,"gtk_stock_set_translate_func","","",null,null],[5,"gtk_target_table_free","","",null,null],[5,"gtk_target_table_new_from_list","","",null,null],[5,"gtk_targets_include_image","","",null,null],[5,"gtk_targets_include_rich_text","","",null,null],[5,"gtk_targets_include_text","","",null,null],[5,"gtk_targets_include_uri","","",null,null],[5,"gtk_test_create_simple_window","","",null,null],[5,"gtk_test_create_widget","","",null,null],[5,"gtk_test_display_button_window","","",null,null],[5,"gtk_test_find_label","","",null,null],[5,"gtk_test_find_sibling","","",null,null],[5,"gtk_test_find_widget","","",null,null],[5,"gtk_test_init","","",null,null],[5,"gtk_test_list_all_types","","",null,null],[5,"gtk_test_register_all_types","","",null,null],[5,"gtk_test_slider_get_value","","",null,null],[5,"gtk_test_slider_set_perc","","",null,null],[5,"gtk_test_spin_button_click","","",null,null],[5,"gtk_test_text_get","","",null,null],[5,"gtk_test_text_set","","",null,null],[5,"gtk_test_widget_click","","",null,null],[5,"gtk_test_widget_send_key","","",null,null],[5,"gtk_test_widget_wait_for_draw","","",null,null],[5,"gtk_tree_get_row_drag_data","","",null,null],[5,"gtk_tree_set_row_drag_data","","",null,null],[5,"gtk_true","","",null,null],[6,"GtkAllocation","","",null,null],[6,"GtkStock","","",null,null],[6,"GtkAccelGroupActivate","","",null,null],[6,"GtkAccelGroupFindFunc","","",null,null],[6,"GtkAccelMapForeach","","",null,null],[6,"GtkAssistantPageFunc","","",null,null],[6,"GtkBuilderConnectFunc","","",null,null],[6,"GtkCalendarDetailFunc","","",null,null],[6,"GtkCallback","","",null,null],[6,"GtkCellAllocCallback","","",null,null],[6,"GtkCellCallback","","",null,null],[6,"GtkCellLayoutDataFunc","","",null,null],[6,"GtkClipboardClearFunc","","",null,null],[6,"GtkClipboardGetFunc","","",null,null],[6,"GtkClipboardImageReceivedFunc","","",null,null],[6,"GtkClipboardReceivedFunc","","",null,null],[6,"GtkClipboardRichTextReceivedFunc","","",null,null],[6,"GtkClipboardTargetsReceivedFunc","","",null,null],[6,"GtkClipboardTextReceivedFunc","","",null,null],[6,"GtkClipboardURIReceivedFunc","","",null,null],[6,"GtkColorSelectionChangePaletteFunc","","",null,null],[6,"GtkColorSelectionChangePaletteWithScreenFunc","","",null,null],[6,"GtkEntryCompletionMatchFunc","","",null,null],[6,"GtkFileFilterFunc","","",null,null],[6,"GtkFlowBoxFilterFunc","","",null,null],[6,"GtkFlowBoxForeachFunc","","",null,null],[6,"GtkFlowBoxSortFunc","","",null,null],[6,"GtkFontFilterFunc","","",null,null],[6,"GtkIconViewForeachFunc","","",null,null],[6,"GtkKeySnoopFunc","","",null,null],[6,"GtkListBoxCreateWidgetFunc","","",null,null],[6,"GtkListBoxFilterFunc","","",null,null],[6,"GtkListBoxForeachFunc","","",null,null],[6,"GtkListBoxSortFunc","","",null,null],[6,"GtkListBoxUpdateHeaderFunc","","",null,null],[6,"GtkMenuDetachFunc","","",null,null],[6,"GtkMenuPositionFunc","","",null,null],[6,"GtkModuleDisplayInitFunc","","",null,null],[6,"GtkModuleInitFunc","","",null,null],[6,"GtkPageSetupDoneFunc","","",null,null],[6,"GtkPrintSettingsFunc","","",null,null],[6,"GtkRcPropertyParser","","",null,null],[6,"GtkRecentFilterFunc","","",null,null],[6,"GtkRecentSortFunc","","",null,null],[6,"GtkStylePropertyParser","","",null,null],[6,"GtkTextBufferDeserializeFunc","","",null,null],[6,"GtkTextBufferSerializeFunc","","",null,null],[6,"GtkTextCharPredicate","","",null,null],[6,"GtkTextTagTableForeach","","",null,null],[6,"GtkTickCallback","","",null,null],[6,"GtkTranslateFunc","","",null,null],[6,"GtkTreeCellDataFunc","","",null,null],[6,"GtkTreeDestroyCountFunc","","",null,null],[6,"GtkTreeIterCompareFunc","","",null,null],[6,"GtkTreeModelFilterModifyFunc","","",null,null],[6,"GtkTreeModelFilterVisibleFunc","","",null,null],[6,"GtkTreeModelForeachFunc","","",null,null],[6,"GtkTreeSelectionForeachFunc","","",null,null],[6,"GtkTreeSelectionFunc","","",null,null],[6,"GtkTreeViewColumnDropFunc","","",null,null],[6,"GtkTreeViewMappingFunc","","",null,null],[6,"GtkTreeViewRowSeparatorFunc","","",null,null],[6,"GtkTreeViewSearchEqualFunc","","",null,null],[6,"GtkTreeViewSearchPositionFunc","","",null,null],[17,"GTK_ENTRY_BUFFER_MAX_SIZE","","",null,null],[17,"GTK_ALIGN_FILL","","",null,null],[17,"GTK_ALIGN_START","","",null,null],[17,"GTK_ALIGN_END","","",null,null],[17,"GTK_ALIGN_CENTER","","",null,null],[17,"GTK_ALIGN_BASELINE","","",null,null],[17,"GTK_ARROWS_BOTH","","",null,null],[17,"GTK_ARROWS_START","","",null,null],[17,"GTK_ARROWS_END","","",null,null],[17,"GTK_ARROW_UP","","",null,null],[17,"GTK_ARROW_DOWN","","",null,null],[17,"GTK_ARROW_LEFT","","",null,null],[17,"GTK_ARROW_RIGHT","","",null,null],[17,"GTK_ARROW_NONE","","",null,null],[17,"GTK_ASSISTANT_PAGE_CONTENT","","",null,null],[17,"GTK_ASSISTANT_PAGE_INTRO","","",null,null],[17,"GTK_ASSISTANT_PAGE_CONFIRM","","",null,null],[17,"GTK_ASSISTANT_PAGE_SUMMARY","","",null,null],[17,"GTK_ASSISTANT_PAGE_PROGRESS","","",null,null],[17,"GTK_ASSISTANT_PAGE_CUSTOM","","",null,null],[17,"GTK_BASELINE_POSITION_TOP","","",null,null],[17,"GTK_BASELINE_POSITION_CENTER","","",null,null],[17,"GTK_BASELINE_POSITION_BOTTOM","","",null,null],[17,"GTK_BORDER_STYLE_NONE","","",null,null],[17,"GTK_BORDER_STYLE_SOLID","","",null,null],[17,"GTK_BORDER_STYLE_INSET","","",null,null],[17,"GTK_BORDER_STYLE_OUTSET","","",null,null],[17,"GTK_BORDER_STYLE_HIDDEN","","",null,null],[17,"GTK_BORDER_STYLE_DOTTED","","",null,null],[17,"GTK_BORDER_STYLE_DASHED","","",null,null],[17,"GTK_BORDER_STYLE_DOUBLE","","",null,null],[17,"GTK_BORDER_STYLE_GROOVE","","",null,null],[17,"GTK_BORDER_STYLE_RIDGE","","",null,null],[17,"GTK_BUILDER_ERROR_INVALID_TYPE_FUNCTION","","",null,null],[17,"GTK_BUILDER_ERROR_UNHANDLED_TAG","","",null,null],[17,"GTK_BUILDER_ERROR_MISSING_ATTRIBUTE","","",null,null],[17,"GTK_BUILDER_ERROR_INVALID_ATTRIBUTE","","",null,null],[17,"GTK_BUILDER_ERROR_INVALID_TAG","","",null,null],[17,"GTK_BUILDER_ERROR_MISSING_PROPERTY_VALUE","","",null,null],[17,"GTK_BUILDER_ERROR_INVALID_VALUE","","",null,null],[17,"GTK_BUILDER_ERROR_VERSION_MISMATCH","","",null,null],[17,"GTK_BUILDER_ERROR_DUPLICATE_ID","","",null,null],[17,"GTK_BUILDER_ERROR_OBJECT_TYPE_REFUSED","","",null,null],[17,"GTK_BUILDER_ERROR_TEMPLATE_MISMATCH","","",null,null],[17,"GTK_BUILDER_ERROR_INVALID_PROPERTY","","",null,null],[17,"GTK_BUILDER_ERROR_INVALID_SIGNAL","","",null,null],[17,"GTK_BUTTONBOX_SPREAD","","",null,null],[17,"GTK_BUTTONBOX_EDGE","","",null,null],[17,"GTK_BUTTONBOX_START","","",null,null],[17,"GTK_BUTTONBOX_END","","",null,null],[17,"GTK_BUTTONBOX_CENTER","","",null,null],[17,"GTK_BUTTONBOX_EXPAND","","",null,null],[17,"GTK_BUTTON_ROLE_NORMAL","","",null,null],[17,"GTK_BUTTON_ROLE_CHECK","","",null,null],[17,"GTK_BUTTON_ROLE_RADIO","","",null,null],[17,"GTK_BUTTONS_NONE","","",null,null],[17,"GTK_BUTTONS_OK","","",null,null],[17,"GTK_BUTTONS_CLOSE","","",null,null],[17,"GTK_BUTTONS_CANCEL","","",null,null],[17,"GTK_BUTTONS_YES_NO","","",null,null],[17,"GTK_BUTTONS_OK_CANCEL","","",null,null],[17,"GTK_CELL_RENDERER_ACCEL_MODE_GTK","","",null,null],[17,"GTK_CELL_RENDERER_ACCEL_MODE_OTHER","","",null,null],[17,"GTK_CELL_RENDERER_ACCEL_MODE_MODIFIER_TAP","","",null,null],[17,"GTK_CELL_RENDERER_MODE_INERT","","",null,null],[17,"GTK_CELL_RENDERER_MODE_ACTIVATABLE","","",null,null],[17,"GTK_CELL_RENDERER_MODE_EDITABLE","","",null,null],[17,"GTK_CORNER_TOP_LEFT","","",null,null],[17,"GTK_CORNER_BOTTOM_LEFT","","",null,null],[17,"GTK_CORNER_TOP_RIGHT","","",null,null],[17,"GTK_CORNER_BOTTOM_RIGHT","","",null,null],[17,"GTK_CSS_PROVIDER_ERROR_FAILED","","",null,null],[17,"GTK_CSS_PROVIDER_ERROR_SYNTAX","","",null,null],[17,"GTK_CSS_PROVIDER_ERROR_IMPORT","","",null,null],[17,"GTK_CSS_PROVIDER_ERROR_NAME","","",null,null],[17,"GTK_CSS_PROVIDER_ERROR_DEPRECATED","","",null,null],[17,"GTK_CSS_PROVIDER_ERROR_UNKNOWN_VALUE","","",null,null],[17,"GTK_CSS_SECTION_DOCUMENT","","",null,null],[17,"GTK_CSS_SECTION_IMPORT","","",null,null],[17,"GTK_CSS_SECTION_COLOR_DEFINITION","","",null,null],[17,"GTK_CSS_SECTION_BINDING_SET","","",null,null],[17,"GTK_CSS_SECTION_RULESET","","",null,null],[17,"GTK_CSS_SECTION_SELECTOR","","",null,null],[17,"GTK_CSS_SECTION_DECLARATION","","",null,null],[17,"GTK_CSS_SECTION_VALUE","","",null,null],[17,"GTK_CSS_SECTION_KEYFRAMES","","",null,null],[17,"GTK_DELETE_CHARS","","",null,null],[17,"GTK_DELETE_WORD_ENDS","","",null,null],[17,"GTK_DELETE_WORDS","","",null,null],[17,"GTK_DELETE_DISPLAY_LINES","","",null,null],[17,"GTK_DELETE_DISPLAY_LINE_ENDS","","",null,null],[17,"GTK_DELETE_PARAGRAPH_ENDS","","",null,null],[17,"GTK_DELETE_PARAGRAPHS","","",null,null],[17,"GTK_DELETE_WHITESPACE","","",null,null],[17,"GTK_DIR_TAB_FORWARD","","",null,null],[17,"GTK_DIR_TAB_BACKWARD","","",null,null],[17,"GTK_DIR_UP","","",null,null],[17,"GTK_DIR_DOWN","","",null,null],[17,"GTK_DIR_LEFT","","",null,null],[17,"GTK_DIR_RIGHT","","",null,null],[17,"GTK_DRAG_RESULT_SUCCESS","","",null,null],[17,"GTK_DRAG_RESULT_NO_TARGET","","",null,null],[17,"GTK_DRAG_RESULT_USER_CANCELLED","","",null,null],[17,"GTK_DRAG_RESULT_TIMEOUT_EXPIRED","","",null,null],[17,"GTK_DRAG_RESULT_GRAB_BROKEN","","",null,null],[17,"GTK_DRAG_RESULT_ERROR","","",null,null],[17,"GTK_ENTRY_ICON_PRIMARY","","",null,null],[17,"GTK_ENTRY_ICON_SECONDARY","","",null,null],[17,"GTK_EVENT_SEQUENCE_NONE","","",null,null],[17,"GTK_EVENT_SEQUENCE_CLAIMED","","",null,null],[17,"GTK_EVENT_SEQUENCE_DENIED","","",null,null],[17,"GTK_EXPANDER_COLLAPSED","","",null,null],[17,"GTK_EXPANDER_SEMI_COLLAPSED","","",null,null],[17,"GTK_EXPANDER_SEMI_EXPANDED","","",null,null],[17,"GTK_EXPANDER_EXPANDED","","",null,null],[17,"GTK_FILE_CHOOSER_ACTION_OPEN","","",null,null],[17,"GTK_FILE_CHOOSER_ACTION_SAVE","","",null,null],[17,"GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER","","",null,null],[17,"GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER","","",null,null],[17,"GTK_FILE_CHOOSER_CONFIRMATION_CONFIRM","","",null,null],[17,"GTK_FILE_CHOOSER_CONFIRMATION_ACCEPT_FILENAME","","",null,null],[17,"GTK_FILE_CHOOSER_CONFIRMATION_SELECT_AGAIN","","",null,null],[17,"GTK_FILE_CHOOSER_ERROR_NONEXISTENT","","",null,null],[17,"GTK_FILE_CHOOSER_ERROR_BAD_FILENAME","","",null,null],[17,"GTK_FILE_CHOOSER_ERROR_ALREADY_EXISTS","","",null,null],[17,"GTK_FILE_CHOOSER_ERROR_INCOMPLETE_HOSTNAME","","",null,null],[17,"GTK_IM_PREEDIT_NOTHING","","",null,null],[17,"GTK_IM_PREEDIT_CALLBACK","","",null,null],[17,"GTK_IM_PREEDIT_NONE","","",null,null],[17,"GTK_IM_STATUS_NOTHING","","",null,null],[17,"GTK_IM_STATUS_CALLBACK","","",null,null],[17,"GTK_IM_STATUS_NONE","","",null,null],[17,"GTK_ICON_SIZE_INVALID","","",null,null],[17,"GTK_ICON_SIZE_MENU","","",null,null],[17,"GTK_ICON_SIZE_SMALL_TOOLBAR","","",null,null],[17,"GTK_ICON_SIZE_LARGE_TOOLBAR","","",null,null],[17,"GTK_ICON_SIZE_BUTTON","","",null,null],[17,"GTK_ICON_SIZE_DND","","",null,null],[17,"GTK_ICON_SIZE_DIALOG","","",null,null],[17,"GTK_ICON_THEME_NOT_FOUND","","",null,null],[17,"GTK_ICON_THEME_FAILED","","",null,null],[17,"GTK_ICON_VIEW_NO_DROP","","",null,null],[17,"GTK_ICON_VIEW_DROP_INTO","","",null,null],[17,"GTK_ICON_VIEW_DROP_LEFT","","",null,null],[17,"GTK_ICON_VIEW_DROP_RIGHT","","",null,null],[17,"GTK_ICON_VIEW_DROP_ABOVE","","",null,null],[17,"GTK_ICON_VIEW_DROP_BELOW","","",null,null],[17,"GTK_IMAGE_EMPTY","","",null,null],[17,"GTK_IMAGE_PIXBUF","","",null,null],[17,"GTK_IMAGE_STOCK","","",null,null],[17,"GTK_IMAGE_ICON_SET","","",null,null],[17,"GTK_IMAGE_ANIMATION","","",null,null],[17,"GTK_IMAGE_ICON_NAME","","",null,null],[17,"GTK_IMAGE_GICON","","",null,null],[17,"GTK_IMAGE_SURFACE","","",null,null],[17,"GTK_INPUT_PURPOSE_FREE_FORM","","",null,null],[17,"GTK_INPUT_PURPOSE_ALPHA","","",null,null],[17,"GTK_INPUT_PURPOSE_DIGITS","","",null,null],[17,"GTK_INPUT_PURPOSE_NUMBER","","",null,null],[17,"GTK_INPUT_PURPOSE_PHONE","","",null,null],[17,"GTK_INPUT_PURPOSE_URL","","",null,null],[17,"GTK_INPUT_PURPOSE_EMAIL","","",null,null],[17,"GTK_INPUT_PURPOSE_NAME","","",null,null],[17,"GTK_INPUT_PURPOSE_PASSWORD","","",null,null],[17,"GTK_INPUT_PURPOSE_PIN","","",null,null],[17,"GTK_JUSTIFY_LEFT","","",null,null],[17,"GTK_JUSTIFY_RIGHT","","",null,null],[17,"GTK_JUSTIFY_CENTER","","",null,null],[17,"GTK_JUSTIFY_FILL","","",null,null],[17,"GTK_LEVEL_BAR_MODE_CONTINUOUS","","",null,null],[17,"GTK_LEVEL_BAR_MODE_DISCRETE","","",null,null],[17,"GTK_LICENSE_UNKNOWN","","",null,null],[17,"GTK_LICENSE_CUSTOM","","",null,null],[17,"GTK_LICENSE_GPL_2_0","","",null,null],[17,"GTK_LICENSE_GPL_3_0","","",null,null],[17,"GTK_LICENSE_LGPL_2_1","","",null,null],[17,"GTK_LICENSE_LGPL_3_0","","",null,null],[17,"GTK_LICENSE_BSD","","",null,null],[17,"GTK_LICENSE_MIT_X11","","",null,null],[17,"GTK_LICENSE_ARTISTIC","","",null,null],[17,"GTK_LICENSE_GPL_2_0_ONLY","","",null,null],[17,"GTK_LICENSE_GPL_3_0_ONLY","","",null,null],[17,"GTK_LICENSE_LGPL_2_1_ONLY","","",null,null],[17,"GTK_LICENSE_LGPL_3_0_ONLY","","",null,null],[17,"GTK_MENU_DIR_PARENT","","",null,null],[17,"GTK_MENU_DIR_CHILD","","",null,null],[17,"GTK_MENU_DIR_NEXT","","",null,null],[17,"GTK_MENU_DIR_PREV","","",null,null],[17,"GTK_MESSAGE_INFO","","",null,null],[17,"GTK_MESSAGE_WARNING","","",null,null],[17,"GTK_MESSAGE_QUESTION","","",null,null],[17,"GTK_MESSAGE_ERROR","","",null,null],[17,"GTK_MESSAGE_OTHER","","",null,null],[17,"GTK_MOVEMENT_LOGICAL_POSITIONS","","",null,null],[17,"GTK_MOVEMENT_VISUAL_POSITIONS","","",null,null],[17,"GTK_MOVEMENT_WORDS","","",null,null],[17,"GTK_MOVEMENT_DISPLAY_LINES","","",null,null],[17,"GTK_MOVEMENT_DISPLAY_LINE_ENDS","","",null,null],[17,"GTK_MOVEMENT_PARAGRAPHS","","",null,null],[17,"GTK_MOVEMENT_PARAGRAPH_ENDS","","",null,null],[17,"GTK_MOVEMENT_PAGES","","",null,null],[17,"GTK_MOVEMENT_BUFFER_ENDS","","",null,null],[17,"GTK_MOVEMENT_HORIZONTAL_PAGES","","",null,null],[17,"GTK_NOTEBOOK_TAB_FIRST","","",null,null],[17,"GTK_NOTEBOOK_TAB_LAST","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT","","",null,null],[17,"GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT","","",null,null],[17,"GTK_ORIENTATION_HORIZONTAL","","",null,null],[17,"GTK_ORIENTATION_VERTICAL","","",null,null],[17,"GTK_PACK_DIRECTION_LTR","","",null,null],[17,"GTK_PACK_DIRECTION_RTL","","",null,null],[17,"GTK_PACK_DIRECTION_TTB","","",null,null],[17,"GTK_PACK_DIRECTION_BTT","","",null,null],[17,"GTK_PACK_START","","",null,null],[17,"GTK_PACK_END","","",null,null],[17,"GTK_PAGE_ORIENTATION_PORTRAIT","","",null,null],[17,"GTK_PAGE_ORIENTATION_LANDSCAPE","","",null,null],[17,"GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT","","",null,null],[17,"GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE","","",null,null],[17,"GTK_PAGE_SET_ALL","","",null,null],[17,"GTK_PAGE_SET_EVEN","","",null,null],[17,"GTK_PAGE_SET_ODD","","",null,null],[17,"GTK_PAN_DIRECTION_LEFT","","",null,null],[17,"GTK_PAN_DIRECTION_RIGHT","","",null,null],[17,"GTK_PAN_DIRECTION_UP","","",null,null],[17,"GTK_PAN_DIRECTION_DOWN","","",null,null],[17,"GTK_PATH_PRIO_LOWEST","","",null,null],[17,"GTK_PATH_PRIO_GTK","","",null,null],[17,"GTK_PATH_PRIO_APPLICATION","","",null,null],[17,"GTK_PATH_PRIO_THEME","","",null,null],[17,"GTK_PATH_PRIO_RC","","",null,null],[17,"GTK_PATH_PRIO_HIGHEST","","",null,null],[17,"GTK_PATH_WIDGET","","",null,null],[17,"GTK_PATH_WIDGET_CLASS","","",null,null],[17,"GTK_PATH_CLASS","","",null,null],[17,"GTK_POLICY_ALWAYS","","",null,null],[17,"GTK_POLICY_AUTOMATIC","","",null,null],[17,"GTK_POLICY_NEVER","","",null,null],[17,"GTK_POLICY_EXTERNAL","","",null,null],[17,"GTK_POS_LEFT","","",null,null],[17,"GTK_POS_RIGHT","","",null,null],[17,"GTK_POS_TOP","","",null,null],[17,"GTK_POS_BOTTOM","","",null,null],[17,"GTK_PRINT_DUPLEX_SIMPLEX","","",null,null],[17,"GTK_PRINT_DUPLEX_HORIZONTAL","","",null,null],[17,"GTK_PRINT_DUPLEX_VERTICAL","","",null,null],[17,"GTK_PRINT_ERROR_GENERAL","","",null,null],[17,"GTK_PRINT_ERROR_INTERNAL_ERROR","","",null,null],[17,"GTK_PRINT_ERROR_NOMEM","","",null,null],[17,"GTK_PRINT_ERROR_INVALID_FILE","","",null,null],[17,"GTK_PRINT_OPERATION_ACTION_PRINT_DIALOG","","",null,null],[17,"GTK_PRINT_OPERATION_ACTION_PRINT","","",null,null],[17,"GTK_PRINT_OPERATION_ACTION_PREVIEW","","",null,null],[17,"GTK_PRINT_OPERATION_ACTION_EXPORT","","",null,null],[17,"GTK_PRINT_OPERATION_RESULT_ERROR","","",null,null],[17,"GTK_PRINT_OPERATION_RESULT_APPLY","","",null,null],[17,"GTK_PRINT_OPERATION_RESULT_CANCEL","","",null,null],[17,"GTK_PRINT_OPERATION_RESULT_IN_PROGRESS","","",null,null],[17,"GTK_PRINT_PAGES_ALL","","",null,null],[17,"GTK_PRINT_PAGES_CURRENT","","",null,null],[17,"GTK_PRINT_PAGES_RANGES","","",null,null],[17,"GTK_PRINT_PAGES_SELECTION","","",null,null],[17,"GTK_PRINT_QUALITY_LOW","","",null,null],[17,"GTK_PRINT_QUALITY_NORMAL","","",null,null],[17,"GTK_PRINT_QUALITY_HIGH","","",null,null],[17,"GTK_PRINT_QUALITY_DRAFT","","",null,null],[17,"GTK_PRINT_STATUS_INITIAL","","",null,null],[17,"GTK_PRINT_STATUS_PREPARING","","",null,null],[17,"GTK_PRINT_STATUS_GENERATING_DATA","","",null,null],[17,"GTK_PRINT_STATUS_SENDING_DATA","","",null,null],[17,"GTK_PRINT_STATUS_PENDING","","",null,null],[17,"GTK_PRINT_STATUS_PENDING_ISSUE","","",null,null],[17,"GTK_PRINT_STATUS_PRINTING","","",null,null],[17,"GTK_PRINT_STATUS_FINISHED","","",null,null],[17,"GTK_PRINT_STATUS_FINISHED_ABORTED","","",null,null],[17,"GTK_PHASE_NONE","","",null,null],[17,"GTK_PHASE_CAPTURE","","",null,null],[17,"GTK_PHASE_BUBBLE","","",null,null],[17,"GTK_PHASE_TARGET","","",null,null],[17,"GTK_RC_TOKEN_INVALID","","",null,null],[17,"GTK_RC_TOKEN_INCLUDE","","",null,null],[17,"GTK_RC_TOKEN_NORMAL","","",null,null],[17,"GTK_RC_TOKEN_ACTIVE","","",null,null],[17,"GTK_RC_TOKEN_PRELIGHT","","",null,null],[17,"GTK_RC_TOKEN_SELECTED","","",null,null],[17,"GTK_RC_TOKEN_INSENSITIVE","","",null,null],[17,"GTK_RC_TOKEN_FG","","",null,null],[17,"GTK_RC_TOKEN_BG","","",null,null],[17,"GTK_RC_TOKEN_TEXT","","",null,null],[17,"GTK_RC_TOKEN_BASE","","",null,null],[17,"GTK_RC_TOKEN_XTHICKNESS","","",null,null],[17,"GTK_RC_TOKEN_YTHICKNESS","","",null,null],[17,"GTK_RC_TOKEN_FONT","","",null,null],[17,"GTK_RC_TOKEN_FONTSET","","",null,null],[17,"GTK_RC_TOKEN_FONT_NAME","","",null,null],[17,"GTK_RC_TOKEN_BG_PIXMAP","","",null,null],[17,"GTK_RC_TOKEN_PIXMAP_PATH","","",null,null],[17,"GTK_RC_TOKEN_STYLE","","",null,null],[17,"GTK_RC_TOKEN_BINDING","","",null,null],[17,"GTK_RC_TOKEN_BIND","","",null,null],[17,"GTK_RC_TOKEN_WIDGET","","",null,null],[17,"GTK_RC_TOKEN_WIDGET_CLASS","","",null,null],[17,"GTK_RC_TOKEN_CLASS","","",null,null],[17,"GTK_RC_TOKEN_LOWEST","","",null,null],[17,"GTK_RC_TOKEN_GTK","","",null,null],[17,"GTK_RC_TOKEN_APPLICATION","","",null,null],[17,"GTK_RC_TOKEN_THEME","","",null,null],[17,"GTK_RC_TOKEN_RC","","",null,null],[17,"GTK_RC_TOKEN_HIGHEST","","",null,null],[17,"GTK_RC_TOKEN_ENGINE","","",null,null],[17,"GTK_RC_TOKEN_MODULE_PATH","","",null,null],[17,"GTK_RC_TOKEN_IM_MODULE_PATH","","",null,null],[17,"GTK_RC_TOKEN_IM_MODULE_FILE","","",null,null],[17,"GTK_RC_TOKEN_STOCK","","",null,null],[17,"GTK_RC_TOKEN_LTR","","",null,null],[17,"GTK_RC_TOKEN_RTL","","",null,null],[17,"GTK_RC_TOKEN_COLOR","","",null,null],[17,"GTK_RC_TOKEN_UNBIND","","",null,null],[17,"GTK_RC_TOKEN_LAST","","",null,null],[17,"GTK_RECENT_CHOOSER_ERROR_NOT_FOUND","","",null,null],[17,"GTK_RECENT_CHOOSER_ERROR_INVALID_URI","","",null,null],[17,"GTK_RECENT_MANAGER_ERROR_NOT_FOUND","","",null,null],[17,"GTK_RECENT_MANAGER_ERROR_INVALID_URI","","",null,null],[17,"GTK_RECENT_MANAGER_ERROR_INVALID_ENCODING","","",null,null],[17,"GTK_RECENT_MANAGER_ERROR_NOT_REGISTERED","","",null,null],[17,"GTK_RECENT_MANAGER_ERROR_READ","","",null,null],[17,"GTK_RECENT_MANAGER_ERROR_WRITE","","",null,null],[17,"GTK_RECENT_MANAGER_ERROR_UNKNOWN","","",null,null],[17,"GTK_RECENT_SORT_NONE","","",null,null],[17,"GTK_RECENT_SORT_MRU","","",null,null],[17,"GTK_RECENT_SORT_LRU","","",null,null],[17,"GTK_RECENT_SORT_CUSTOM","","",null,null],[17,"GTK_RELIEF_NORMAL","","",null,null],[17,"GTK_RELIEF_HALF","","",null,null],[17,"GTK_RELIEF_NONE","","",null,null],[17,"GTK_RESIZE_PARENT","","",null,null],[17,"GTK_RESIZE_QUEUE","","",null,null],[17,"GTK_RESIZE_IMMEDIATE","","",null,null],[17,"GTK_RESPONSE_NONE","","",null,null],[17,"GTK_RESPONSE_REJECT","","",null,null],[17,"GTK_RESPONSE_ACCEPT","","",null,null],[17,"GTK_RESPONSE_DELETE_EVENT","","",null,null],[17,"GTK_RESPONSE_OK","","",null,null],[17,"GTK_RESPONSE_CANCEL","","",null,null],[17,"GTK_RESPONSE_CLOSE","","",null,null],[17,"GTK_RESPONSE_YES","","",null,null],[17,"GTK_RESPONSE_NO","","",null,null],[17,"GTK_RESPONSE_APPLY","","",null,null],[17,"GTK_RESPONSE_HELP","","",null,null],[17,"GTK_REVEALER_TRANSITION_TYPE_NONE","","",null,null],[17,"GTK_REVEALER_TRANSITION_TYPE_CROSSFADE","","",null,null],[17,"GTK_REVEALER_TRANSITION_TYPE_SLIDE_RIGHT","","",null,null],[17,"GTK_REVEALER_TRANSITION_TYPE_SLIDE_LEFT","","",null,null],[17,"GTK_REVEALER_TRANSITION_TYPE_SLIDE_UP","","",null,null],[17,"GTK_REVEALER_TRANSITION_TYPE_SLIDE_DOWN","","",null,null],[17,"GTK_SCROLL_STEPS","","",null,null],[17,"GTK_SCROLL_PAGES","","",null,null],[17,"GTK_SCROLL_ENDS","","",null,null],[17,"GTK_SCROLL_HORIZONTAL_STEPS","","",null,null],[17,"GTK_SCROLL_HORIZONTAL_PAGES","","",null,null],[17,"GTK_SCROLL_HORIZONTAL_ENDS","","",null,null],[17,"GTK_SCROLL_NONE","","",null,null],[17,"GTK_SCROLL_JUMP","","",null,null],[17,"GTK_SCROLL_STEP_BACKWARD","","",null,null],[17,"GTK_SCROLL_STEP_FORWARD","","",null,null],[17,"GTK_SCROLL_PAGE_BACKWARD","","",null,null],[17,"GTK_SCROLL_PAGE_FORWARD","","",null,null],[17,"GTK_SCROLL_STEP_UP","","",null,null],[17,"GTK_SCROLL_STEP_DOWN","","",null,null],[17,"GTK_SCROLL_PAGE_UP","","",null,null],[17,"GTK_SCROLL_PAGE_DOWN","","",null,null],[17,"GTK_SCROLL_STEP_LEFT","","",null,null],[17,"GTK_SCROLL_STEP_RIGHT","","",null,null],[17,"GTK_SCROLL_PAGE_LEFT","","",null,null],[17,"GTK_SCROLL_PAGE_RIGHT","","",null,null],[17,"GTK_SCROLL_START","","",null,null],[17,"GTK_SCROLL_END","","",null,null],[17,"GTK_SCROLL_MINIMUM","","",null,null],[17,"GTK_SCROLL_NATURAL","","",null,null],[17,"GTK_SELECTION_NONE","","",null,null],[17,"GTK_SELECTION_SINGLE","","",null,null],[17,"GTK_SELECTION_BROWSE","","",null,null],[17,"GTK_SELECTION_MULTIPLE","","",null,null],[17,"GTK_SENSITIVITY_AUTO","","",null,null],[17,"GTK_SENSITIVITY_ON","","",null,null],[17,"GTK_SENSITIVITY_OFF","","",null,null],[17,"GTK_SHADOW_NONE","","",null,null],[17,"GTK_SHADOW_IN","","",null,null],[17,"GTK_SHADOW_OUT","","",null,null],[17,"GTK_SHADOW_ETCHED_IN","","",null,null],[17,"GTK_SHADOW_ETCHED_OUT","","",null,null],[17,"GTK_SIZE_GROUP_NONE","","",null,null],[17,"GTK_SIZE_GROUP_HORIZONTAL","","",null,null],[17,"GTK_SIZE_GROUP_VERTICAL","","",null,null],[17,"GTK_SIZE_GROUP_BOTH","","",null,null],[17,"GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH","","",null,null],[17,"GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT","","",null,null],[17,"GTK_SIZE_REQUEST_CONSTANT_SIZE","","",null,null],[17,"GTK_SORT_ASCENDING","","",null,null],[17,"GTK_SORT_DESCENDING","","",null,null],[17,"GTK_UPDATE_ALWAYS","","",null,null],[17,"GTK_UPDATE_IF_VALID","","",null,null],[17,"GTK_SPIN_STEP_FORWARD","","",null,null],[17,"GTK_SPIN_STEP_BACKWARD","","",null,null],[17,"GTK_SPIN_PAGE_FORWARD","","",null,null],[17,"GTK_SPIN_PAGE_BACKWARD","","",null,null],[17,"GTK_SPIN_HOME","","",null,null],[17,"GTK_SPIN_END","","",null,null],[17,"GTK_SPIN_USER_DEFINED","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_NONE","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_CROSSFADE","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_SLIDE_RIGHT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_SLIDE_UP","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_SLIDE_DOWN","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_SLIDE_LEFT_RIGHT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_SLIDE_UP_DOWN","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_UP","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_DOWN","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_LEFT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_RIGHT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_UNDER_UP","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_UNDER_DOWN","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_UNDER_LEFT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_UNDER_RIGHT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_UP_DOWN","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_DOWN_UP","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_LEFT_RIGHT","","",null,null],[17,"GTK_STACK_TRANSITION_TYPE_OVER_RIGHT_LEFT","","",null,null],[17,"GTK_STATE_NORMAL","","",null,null],[17,"GTK_STATE_ACTIVE","","",null,null],[17,"GTK_STATE_PRELIGHT","","",null,null],[17,"GTK_STATE_SELECTED","","",null,null],[17,"GTK_STATE_INSENSITIVE","","",null,null],[17,"GTK_STATE_INCONSISTENT","","",null,null],[17,"GTK_STATE_FOCUSED","","",null,null],[17,"GTK_TEXT_BUFFER_TARGET_INFO_BUFFER_CONTENTS","","",null,null],[17,"GTK_TEXT_BUFFER_TARGET_INFO_RICH_TEXT","","",null,null],[17,"GTK_TEXT_BUFFER_TARGET_INFO_TEXT","","",null,null],[17,"GTK_TEXT_DIR_NONE","","",null,null],[17,"GTK_TEXT_DIR_LTR","","",null,null],[17,"GTK_TEXT_DIR_RTL","","",null,null],[17,"GTK_TEXT_EXTEND_SELECTION_WORD","","",null,null],[17,"GTK_TEXT_EXTEND_SELECTION_LINE","","",null,null],[17,"GTK_TEXT_VIEW_LAYER_BELOW","","",null,null],[17,"GTK_TEXT_VIEW_LAYER_ABOVE","","",null,null],[17,"GTK_TEXT_WINDOW_PRIVATE","","",null,null],[17,"GTK_TEXT_WINDOW_WIDGET","","",null,null],[17,"GTK_TEXT_WINDOW_TEXT","","",null,null],[17,"GTK_TEXT_WINDOW_LEFT","","",null,null],[17,"GTK_TEXT_WINDOW_RIGHT","","",null,null],[17,"GTK_TEXT_WINDOW_TOP","","",null,null],[17,"GTK_TEXT_WINDOW_BOTTOM","","",null,null],[17,"GTK_TOOLBAR_SPACE_EMPTY","","",null,null],[17,"GTK_TOOLBAR_SPACE_LINE","","",null,null],[17,"GTK_TOOLBAR_ICONS","","",null,null],[17,"GTK_TOOLBAR_TEXT","","",null,null],[17,"GTK_TOOLBAR_BOTH","","",null,null],[17,"GTK_TOOLBAR_BOTH_HORIZ","","",null,null],[17,"GTK_TREE_VIEW_COLUMN_GROW_ONLY","","",null,null],[17,"GTK_TREE_VIEW_COLUMN_AUTOSIZE","","",null,null],[17,"GTK_TREE_VIEW_COLUMN_FIXED","","",null,null],[17,"GTK_TREE_VIEW_DROP_BEFORE","","",null,null],[17,"GTK_TREE_VIEW_DROP_AFTER","","",null,null],[17,"GTK_TREE_VIEW_DROP_INTO_OR_BEFORE","","",null,null],[17,"GTK_TREE_VIEW_DROP_INTO_OR_AFTER","","",null,null],[17,"GTK_TREE_VIEW_GRID_LINES_NONE","","",null,null],[17,"GTK_TREE_VIEW_GRID_LINES_HORIZONTAL","","",null,null],[17,"GTK_TREE_VIEW_GRID_LINES_VERTICAL","","",null,null],[17,"GTK_TREE_VIEW_GRID_LINES_BOTH","","",null,null],[17,"GTK_UNIT_NONE","","",null,null],[17,"GTK_UNIT_POINTS","","",null,null],[17,"GTK_UNIT_INCH","","",null,null],[17,"GTK_UNIT_MM","","",null,null],[17,"GTK_WIDGET_HELP_TOOLTIP","","",null,null],[17,"GTK_WIDGET_HELP_WHATS_THIS","","",null,null],[17,"GTK_WIN_POS_NONE","","",null,null],[17,"GTK_WIN_POS_CENTER","","",null,null],[17,"GTK_WIN_POS_MOUSE","","",null,null],[17,"GTK_WIN_POS_CENTER_ALWAYS","","",null,null],[17,"GTK_WIN_POS_CENTER_ON_PARENT","","",null,null],[17,"GTK_WINDOW_TOPLEVEL","","",null,null],[17,"GTK_WINDOW_POPUP","","",null,null],[17,"GTK_WRAP_NONE","","",null,null],[17,"GTK_WRAP_CHAR","","",null,null],[17,"GTK_WRAP_WORD","","",null,null],[17,"GTK_WRAP_WORD_CHAR","","",null,null],[17,"GTK_BINARY_AGE","","",null,null],[17,"GTK_INPUT_ERROR","","",null,null],[17,"GTK_INTERFACE_AGE","","",null,null],[17,"GTK_LEVEL_BAR_OFFSET_HIGH","","",null,null],[17,"GTK_LEVEL_BAR_OFFSET_LOW","","",null,null],[17,"GTK_MAJOR_VERSION","","",null,null],[17,"GTK_MAX_COMPOSE_LEN","","",null,null],[17,"GTK_MICRO_VERSION","","",null,null],[17,"GTK_MINOR_VERSION","","",null,null],[17,"GTK_PAPER_NAME_A3","","",null,null],[17,"GTK_PAPER_NAME_A4","","",null,null],[17,"GTK_PAPER_NAME_A5","","",null,null],[17,"GTK_PAPER_NAME_B5","","",null,null],[17,"GTK_PAPER_NAME_EXECUTIVE","","",null,null],[17,"GTK_PAPER_NAME_LEGAL","","",null,null],[17,"GTK_PAPER_NAME_LETTER","","",null,null],[17,"GTK_PATH_PRIO_MASK","","",null,null],[17,"GTK_PRINT_SETTINGS_COLLATE","","",null,null],[17,"GTK_PRINT_SETTINGS_DEFAULT_SOURCE","","",null,null],[17,"GTK_PRINT_SETTINGS_DITHER","","",null,null],[17,"GTK_PRINT_SETTINGS_DUPLEX","","",null,null],[17,"GTK_PRINT_SETTINGS_FINISHINGS","","",null,null],[17,"GTK_PRINT_SETTINGS_MEDIA_TYPE","","",null,null],[17,"GTK_PRINT_SETTINGS_NUMBER_UP","","",null,null],[17,"GTK_PRINT_SETTINGS_NUMBER_UP_LAYOUT","","",null,null],[17,"GTK_PRINT_SETTINGS_N_COPIES","","",null,null],[17,"GTK_PRINT_SETTINGS_ORIENTATION","","",null,null],[17,"GTK_PRINT_SETTINGS_OUTPUT_BASENAME","","",null,null],[17,"GTK_PRINT_SETTINGS_OUTPUT_BIN","","",null,null],[17,"GTK_PRINT_SETTINGS_OUTPUT_DIR","","",null,null],[17,"GTK_PRINT_SETTINGS_OUTPUT_FILE_FORMAT","","",null,null],[17,"GTK_PRINT_SETTINGS_OUTPUT_URI","","",null,null],[17,"GTK_PRINT_SETTINGS_PAGE_RANGES","","",null,null],[17,"GTK_PRINT_SETTINGS_PAGE_SET","","",null,null],[17,"GTK_PRINT_SETTINGS_PAPER_FORMAT","","",null,null],[17,"GTK_PRINT_SETTINGS_PAPER_HEIGHT","","",null,null],[17,"GTK_PRINT_SETTINGS_PAPER_WIDTH","","",null,null],[17,"GTK_PRINT_SETTINGS_PRINTER","","",null,null],[17,"GTK_PRINT_SETTINGS_PRINTER_LPI","","",null,null],[17,"GTK_PRINT_SETTINGS_PRINT_PAGES","","",null,null],[17,"GTK_PRINT_SETTINGS_QUALITY","","",null,null],[17,"GTK_PRINT_SETTINGS_RESOLUTION","","",null,null],[17,"GTK_PRINT_SETTINGS_RESOLUTION_X","","",null,null],[17,"GTK_PRINT_SETTINGS_RESOLUTION_Y","","",null,null],[17,"GTK_PRINT_SETTINGS_REVERSE","","",null,null],[17,"GTK_PRINT_SETTINGS_SCALE","","",null,null],[17,"GTK_PRINT_SETTINGS_USE_COLOR","","",null,null],[17,"GTK_PRINT_SETTINGS_WIN32_DRIVER_EXTRA","","",null,null],[17,"GTK_PRINT_SETTINGS_WIN32_DRIVER_VERSION","","",null,null],[17,"GTK_PRIORITY_RESIZE","","",null,null],[17,"GTK_STOCK_ABOUT","","",null,null],[17,"GTK_STOCK_ADD","","",null,null],[17,"GTK_STOCK_APPLY","","",null,null],[17,"GTK_STOCK_BOLD","","",null,null],[17,"GTK_STOCK_CANCEL","","",null,null],[17,"GTK_STOCK_CAPS_LOCK_WARNING","","",null,null],[17,"GTK_STOCK_CDROM","","",null,null],[17,"GTK_STOCK_CLEAR","","",null,null],[17,"GTK_STOCK_CLOSE","","",null,null],[17,"GTK_STOCK_COLOR_PICKER","","",null,null],[17,"GTK_STOCK_CONNECT","","",null,null],[17,"GTK_STOCK_CONVERT","","",null,null],[17,"GTK_STOCK_COPY","","",null,null],[17,"GTK_STOCK_CUT","","",null,null],[17,"GTK_STOCK_DELETE","","",null,null],[17,"GTK_STOCK_DIALOG_AUTHENTICATION","","",null,null],[17,"GTK_STOCK_DIALOG_ERROR","","",null,null],[17,"GTK_STOCK_DIALOG_INFO","","",null,null],[17,"GTK_STOCK_DIALOG_QUESTION","","",null,null],[17,"GTK_STOCK_DIALOG_WARNING","","",null,null],[17,"GTK_STOCK_DIRECTORY","","",null,null],[17,"GTK_STOCK_DISCARD","","",null,null],[17,"GTK_STOCK_DISCONNECT","","",null,null],[17,"GTK_STOCK_DND","","",null,null],[17,"GTK_STOCK_DND_MULTIPLE","","",null,null],[17,"GTK_STOCK_EDIT","","",null,null],[17,"GTK_STOCK_EXECUTE","","",null,null],[17,"GTK_STOCK_FILE","","",null,null],[17,"GTK_STOCK_FIND","","",null,null],[17,"GTK_STOCK_FIND_AND_REPLACE","","",null,null],[17,"GTK_STOCK_FLOPPY","","",null,null],[17,"GTK_STOCK_FULLSCREEN","","",null,null],[17,"GTK_STOCK_GOTO_BOTTOM","","",null,null],[17,"GTK_STOCK_GOTO_FIRST","","",null,null],[17,"GTK_STOCK_GOTO_LAST","","",null,null],[17,"GTK_STOCK_GOTO_TOP","","",null,null],[17,"GTK_STOCK_GO_BACK","","",null,null],[17,"GTK_STOCK_GO_DOWN","","",null,null],[17,"GTK_STOCK_GO_FORWARD","","",null,null],[17,"GTK_STOCK_GO_UP","","",null,null],[17,"GTK_STOCK_HARDDISK","","",null,null],[17,"GTK_STOCK_HELP","","",null,null],[17,"GTK_STOCK_HOME","","",null,null],[17,"GTK_STOCK_INDENT","","",null,null],[17,"GTK_STOCK_INDEX","","",null,null],[17,"GTK_STOCK_INFO","","",null,null],[17,"GTK_STOCK_ITALIC","","",null,null],[17,"GTK_STOCK_JUMP_TO","","",null,null],[17,"GTK_STOCK_JUSTIFY_CENTER","","",null,null],[17,"GTK_STOCK_JUSTIFY_FILL","","",null,null],[17,"GTK_STOCK_JUSTIFY_LEFT","","",null,null],[17,"GTK_STOCK_JUSTIFY_RIGHT","","",null,null],[17,"GTK_STOCK_LEAVE_FULLSCREEN","","",null,null],[17,"GTK_STOCK_MEDIA_FORWARD","","",null,null],[17,"GTK_STOCK_MEDIA_NEXT","","",null,null],[17,"GTK_STOCK_MEDIA_PAUSE","","",null,null],[17,"GTK_STOCK_MEDIA_PLAY","","",null,null],[17,"GTK_STOCK_MEDIA_PREVIOUS","","",null,null],[17,"GTK_STOCK_MEDIA_RECORD","","",null,null],[17,"GTK_STOCK_MEDIA_REWIND","","",null,null],[17,"GTK_STOCK_MEDIA_STOP","","",null,null],[17,"GTK_STOCK_MISSING_IMAGE","","",null,null],[17,"GTK_STOCK_NETWORK","","",null,null],[17,"GTK_STOCK_NEW","","",null,null],[17,"GTK_STOCK_NO","","",null,null],[17,"GTK_STOCK_OK","","",null,null],[17,"GTK_STOCK_OPEN","","",null,null],[17,"GTK_STOCK_ORIENTATION_LANDSCAPE","","",null,null],[17,"GTK_STOCK_ORIENTATION_PORTRAIT","","",null,null],[17,"GTK_STOCK_ORIENTATION_REVERSE_LANDSCAPE","","",null,null],[17,"GTK_STOCK_ORIENTATION_REVERSE_PORTRAIT","","",null,null],[17,"GTK_STOCK_PAGE_SETUP","","",null,null],[17,"GTK_STOCK_PASTE","","",null,null],[17,"GTK_STOCK_PREFERENCES","","",null,null],[17,"GTK_STOCK_PRINT","","",null,null],[17,"GTK_STOCK_PRINT_ERROR","","",null,null],[17,"GTK_STOCK_PRINT_PAUSED","","",null,null],[17,"GTK_STOCK_PRINT_PREVIEW","","",null,null],[17,"GTK_STOCK_PRINT_REPORT","","",null,null],[17,"GTK_STOCK_PRINT_WARNING","","",null,null],[17,"GTK_STOCK_PROPERTIES","","",null,null],[17,"GTK_STOCK_QUIT","","",null,null],[17,"GTK_STOCK_REDO","","",null,null],[17,"GTK_STOCK_REFRESH","","",null,null],[17,"GTK_STOCK_REMOVE","","",null,null],[17,"GTK_STOCK_REVERT_TO_SAVED","","",null,null],[17,"GTK_STOCK_SAVE","","",null,null],[17,"GTK_STOCK_SAVE_AS","","",null,null],[17,"GTK_STOCK_SELECT_ALL","","",null,null],[17,"GTK_STOCK_SELECT_COLOR","","",null,null],[17,"GTK_STOCK_SELECT_FONT","","",null,null],[17,"GTK_STOCK_SORT_ASCENDING","","",null,null],[17,"GTK_STOCK_SORT_DESCENDING","","",null,null],[17,"GTK_STOCK_SPELL_CHECK","","",null,null],[17,"GTK_STOCK_STOP","","",null,null],[17,"GTK_STOCK_STRIKETHROUGH","","",null,null],[17,"GTK_STOCK_UNDELETE","","",null,null],[17,"GTK_STOCK_UNDERLINE","","",null,null],[17,"GTK_STOCK_UNDO","","",null,null],[17,"GTK_STOCK_UNINDENT","","",null,null],[17,"GTK_STOCK_YES","","",null,null],[17,"GTK_STOCK_ZOOM_100","","",null,null],[17,"GTK_STOCK_ZOOM_FIT","","",null,null],[17,"GTK_STOCK_ZOOM_IN","","",null,null],[17,"GTK_STOCK_ZOOM_OUT","","",null,null],[17,"GTK_STYLE_CLASS_ACCELERATOR","","",null,null],[17,"GTK_STYLE_CLASS_ARROW","","",null,null],[17,"GTK_STYLE_CLASS_BACKGROUND","","",null,null],[17,"GTK_STYLE_CLASS_BOTTOM","","",null,null],[17,"GTK_STYLE_CLASS_BUTTON","","",null,null],[17,"GTK_STYLE_CLASS_CALENDAR","","",null,null],[17,"GTK_STYLE_CLASS_CELL","","",null,null],[17,"GTK_STYLE_CLASS_CHECK","","",null,null],[17,"GTK_STYLE_CLASS_COMBOBOX_ENTRY","","",null,null],[17,"GTK_STYLE_CLASS_CONTEXT_MENU","","",null,null],[17,"GTK_STYLE_CLASS_CSD","","",null,null],[17,"GTK_STYLE_CLASS_CURSOR_HANDLE","","",null,null],[17,"GTK_STYLE_CLASS_DEFAULT","","",null,null],[17,"GTK_STYLE_CLASS_DESTRUCTIVE_ACTION","","",null,null],[17,"GTK_STYLE_CLASS_DIM_LABEL","","",null,null],[17,"GTK_STYLE_CLASS_DND","","",null,null],[17,"GTK_STYLE_CLASS_DOCK","","",null,null],[17,"GTK_STYLE_CLASS_ENTRY","","",null,null],[17,"GTK_STYLE_CLASS_ERROR","","",null,null],[17,"GTK_STYLE_CLASS_EXPANDER","","",null,null],[17,"GTK_STYLE_CLASS_FLAT","","",null,null],[17,"GTK_STYLE_CLASS_FRAME","","",null,null],[17,"GTK_STYLE_CLASS_GRIP","","",null,null],[17,"GTK_STYLE_CLASS_HEADER","","",null,null],[17,"GTK_STYLE_CLASS_HIGHLIGHT","","",null,null],[17,"GTK_STYLE_CLASS_HORIZONTAL","","",null,null],[17,"GTK_STYLE_CLASS_IMAGE","","",null,null],[17,"GTK_STYLE_CLASS_INFO","","",null,null],[17,"GTK_STYLE_CLASS_INLINE_TOOLBAR","","",null,null],[17,"GTK_STYLE_CLASS_INSERTION_CURSOR","","",null,null],[17,"GTK_STYLE_CLASS_LABEL","","",null,null],[17,"GTK_STYLE_CLASS_LEFT","","",null,null],[17,"GTK_STYLE_CLASS_LEVEL_BAR","","",null,null],[17,"GTK_STYLE_CLASS_LINKED","","",null,null],[17,"GTK_STYLE_CLASS_LIST","","",null,null],[17,"GTK_STYLE_CLASS_LIST_ROW","","",null,null],[17,"GTK_STYLE_CLASS_MARK","","",null,null],[17,"GTK_STYLE_CLASS_MENU","","",null,null],[17,"GTK_STYLE_CLASS_MENUBAR","","",null,null],[17,"GTK_STYLE_CLASS_MENUITEM","","",null,null],[17,"GTK_STYLE_CLASS_MESSAGE_DIALOG","","",null,null],[17,"GTK_STYLE_CLASS_MONOSPACE","","",null,null],[17,"GTK_STYLE_CLASS_NEEDS_ATTENTION","","",null,null],[17,"GTK_STYLE_CLASS_NOTEBOOK","","",null,null],[17,"GTK_STYLE_CLASS_OSD","","",null,null],[17,"GTK_STYLE_CLASS_OVERSHOOT","","",null,null],[17,"GTK_STYLE_CLASS_PANE_SEPARATOR","","",null,null],[17,"GTK_STYLE_CLASS_PAPER","","",null,null],[17,"GTK_STYLE_CLASS_POPOVER","","",null,null],[17,"GTK_STYLE_CLASS_POPUP","","",null,null],[17,"GTK_STYLE_CLASS_PRIMARY_TOOLBAR","","",null,null],[17,"GTK_STYLE_CLASS_PROGRESSBAR","","",null,null],[17,"GTK_STYLE_CLASS_PULSE","","",null,null],[17,"GTK_STYLE_CLASS_QUESTION","","",null,null],[17,"GTK_STYLE_CLASS_RADIO","","",null,null],[17,"GTK_STYLE_CLASS_RAISED","","",null,null],[17,"GTK_STYLE_CLASS_READ_ONLY","","",null,null],[17,"GTK_STYLE_CLASS_RIGHT","","",null,null],[17,"GTK_STYLE_CLASS_RUBBERBAND","","",null,null],[17,"GTK_STYLE_CLASS_SCALE","","",null,null],[17,"GTK_STYLE_CLASS_SCALE_HAS_MARKS_ABOVE","","",null,null],[17,"GTK_STYLE_CLASS_SCALE_HAS_MARKS_BELOW","","",null,null],[17,"GTK_STYLE_CLASS_SCROLLBAR","","",null,null],[17,"GTK_STYLE_CLASS_SCROLLBARS_JUNCTION","","",null,null],[17,"GTK_STYLE_CLASS_SEPARATOR","","",null,null],[17,"GTK_STYLE_CLASS_SIDEBAR","","",null,null],[17,"GTK_STYLE_CLASS_SLIDER","","",null,null],[17,"GTK_STYLE_CLASS_SPINBUTTON","","",null,null],[17,"GTK_STYLE_CLASS_SPINNER","","",null,null],[17,"GTK_STYLE_CLASS_STATUSBAR","","",null,null],[17,"GTK_STYLE_CLASS_SUBTITLE","","",null,null],[17,"GTK_STYLE_CLASS_SUGGESTED_ACTION","","",null,null],[17,"GTK_STYLE_CLASS_TITLE","","",null,null],[17,"GTK_STYLE_CLASS_TITLEBAR","","",null,null],[17,"GTK_STYLE_CLASS_TOOLBAR","","",null,null],[17,"GTK_STYLE_CLASS_TOOLTIP","","",null,null],[17,"GTK_STYLE_CLASS_TOP","","",null,null],[17,"GTK_STYLE_CLASS_TOUCH_SELECTION","","",null,null],[17,"GTK_STYLE_CLASS_TROUGH","","",null,null],[17,"GTK_STYLE_CLASS_UNDERSHOOT","","",null,null],[17,"GTK_STYLE_CLASS_VERTICAL","","",null,null],[17,"GTK_STYLE_CLASS_VIEW","","",null,null],[17,"GTK_STYLE_CLASS_WARNING","","",null,null],[17,"GTK_STYLE_CLASS_WIDE","","",null,null],[17,"GTK_STYLE_PROPERTY_BACKGROUND_COLOR","","",null,null],[17,"GTK_STYLE_PROPERTY_BACKGROUND_IMAGE","","",null,null],[17,"GTK_STYLE_PROPERTY_BORDER_COLOR","","",null,null],[17,"GTK_STYLE_PROPERTY_BORDER_RADIUS","","",null,null],[17,"GTK_STYLE_PROPERTY_BORDER_STYLE","","",null,null],[17,"GTK_STYLE_PROPERTY_BORDER_WIDTH","","",null,null],[17,"GTK_STYLE_PROPERTY_COLOR","","",null,null],[17,"GTK_STYLE_PROPERTY_FONT","","",null,null],[17,"GTK_STYLE_PROPERTY_MARGIN","","",null,null],[17,"GTK_STYLE_PROPERTY_PADDING","","",null,null],[17,"GTK_STYLE_PROVIDER_PRIORITY_APPLICATION","","",null,null],[17,"GTK_STYLE_PROVIDER_PRIORITY_FALLBACK","","",null,null],[17,"GTK_STYLE_PROVIDER_PRIORITY_SETTINGS","","",null,null],[17,"GTK_STYLE_PROVIDER_PRIORITY_THEME","","",null,null],[17,"GTK_STYLE_PROVIDER_PRIORITY_USER","","",null,null],[17,"GTK_STYLE_REGION_COLUMN","","",null,null],[17,"GTK_STYLE_REGION_COLUMN_HEADER","","",null,null],[17,"GTK_STYLE_REGION_ROW","","",null,null],[17,"GTK_STYLE_REGION_TAB","","",null,null],[17,"GTK_TEXT_VIEW_PRIORITY_VALIDATE","","",null,null],[17,"GTK_TREE_SORTABLE_DEFAULT_SORT_COLUMN_ID","","",null,null],[17,"GTK_TREE_SORTABLE_UNSORTED_SORT_COLUMN_ID","","",null,null],[17,"GTK_ACCEL_VISIBLE","","Accelerator is visible",null,null],[17,"GTK_ACCEL_LOCKED","","Accelerator not removable",null,null],[17,"GTK_ACCEL_MASK","","Mask",null,null],[17,"GTK_APPLICATION_INHIBIT_LOGOUT","","Inhibit ending the user session\nby logging out or by shutting down the computer",null,null],[17,"GTK_APPLICATION_INHIBIT_SWITCH","","Inhibit user switching",null,null],[17,"GTK_APPLICATION_INHIBIT_SUSPEND","","Inhibit suspending the\nsession or computer",null,null],[17,"GTK_APPLICATION_INHIBIT_IDLE","","Inhibit the session being\nmarked as idle (and possibly locked)",null,null],[17,"GTK_EXPAND","","the widget should expand to take up any extra space in its\ncontainer that has been allocated.",null,null],[17,"GTK_SHRINK","","the widget should shrink as and when possible.",null,null],[17,"GTK_FILL","","the widget should fill the space allocated to it.",null,null],[17,"GTK_CALENDAR_SHOW_HEADING","","Specifies that the month and year should be displayed.",null,null],[17,"GTK_CALENDAR_SHOW_DAY_NAMES","","Specifies that three letter day descriptions should be present.",null,null],[17,"GTK_CALENDAR_NO_MONTH_CHANGE","","Prevents the user from switching months with the calendar.",null,null],[17,"GTK_CALENDAR_SHOW_WEEK_NUMBERS","","Displays each week numbers of the current year, down the\nleft side of the calendar.",null,null],[17,"GTK_CALENDAR_SHOW_DETAILS","","Just show an indicator, not the full details\ntext when details are provided. See `Calendar::set_detail_func`.",null,null],[17,"GTK_CELL_RENDERER_SELECTED","","The cell is currently selected, and\nprobably has a selection colored background to render to.",null,null],[17,"GTK_CELL_RENDERER_PRELIT","","The mouse is hovering over the cell.",null,null],[17,"GTK_CELL_RENDERER_INSENSITIVE","","The cell is drawn in an insensitive manner",null,null],[17,"GTK_CELL_RENDERER_SORTED","","The cell is in a sorted row",null,null],[17,"GTK_CELL_RENDERER_FOCUSED","","The cell is in the focus row.",null,null],[17,"GTK_CELL_RENDERER_EXPANDABLE","","The cell is in a row that can be expanded. Since 3.4",null,null],[17,"GTK_CELL_RENDERER_EXPANDED","","The cell is in a row that is expanded. Since 3.4",null,null],[17,"GTK_DEBUG_MISC","","",null,null],[17,"GTK_DEBUG_PLUGSOCKET","","",null,null],[17,"GTK_DEBUG_TEXT","","",null,null],[17,"GTK_DEBUG_TREE","","",null,null],[17,"GTK_DEBUG_UPDATES","","",null,null],[17,"GTK_DEBUG_KEYBINDINGS","","",null,null],[17,"GTK_DEBUG_MULTIHEAD","","",null,null],[17,"GTK_DEBUG_MODULES","","",null,null],[17,"GTK_DEBUG_GEOMETRY","","",null,null],[17,"GTK_DEBUG_ICONTHEME","","",null,null],[17,"GTK_DEBUG_PRINTING","","",null,null],[17,"GTK_DEBUG_BUILDER","","",null,null],[17,"GTK_DEBUG_SIZE_REQUEST","","",null,null],[17,"GTK_DEBUG_NO_CSS_CACHE","","",null,null],[17,"GTK_DEBUG_BASELINES","","",null,null],[17,"GTK_DEBUG_PIXEL_CACHE","","",null,null],[17,"GTK_DEBUG_NO_PIXEL_CACHE","","",null,null],[17,"GTK_DEBUG_INTERACTIVE","","",null,null],[17,"GTK_DEBUG_TOUCHSCREEN","","",null,null],[17,"GTK_DEBUG_ACTIONS","","",null,null],[17,"GTK_DEST_DEFAULT_MOTION","","If set for a widget, GTK+, during a drag over this\nwidget will check if the drag matches this widget’s list of possible targets\nand actions.\nGTK+ will then call `gdk_drag_status` as appropriate.",null,null],[17,"GTK_DEST_DEFAULT_HIGHLIGHT","","If set for a widget, GTK+ will draw a highlight on\nthis widget as long as a drag is over this widget and the widget drag format\nand action are acceptable.",null,null],[17,"GTK_DEST_DEFAULT_DROP","","If set for a widget, when a drop occurs, GTK+ will\nwill check if the drag matches this widget’s list of possible targets and\nactions. If so, GTK+ will call `Widget::drag_get_data` on behalf of the widget.\nWhether or not the drop is successful, GTK+ will call `gtk_drag_finish`. If\nthe action was a move, then if the drag was successful, then `true` will be\npassed for the `delete` parameter to `gtk_drag_finish`.",null,null],[17,"GTK_DEST_DEFAULT_ALL","","If set, specifies that all default actions should\nbe taken.",null,null],[17,"GTK_DIALOG_MODAL","","Make the constructed dialog modal,\nsee `Window::set_modal`",null,null],[17,"GTK_DIALOG_DESTROY_WITH_PARENT","","Destroy the dialog when its\nparent is destroyed, see `Window::set_destroy_with_parent`",null,null],[17,"GTK_DIALOG_USE_HEADER_BAR","","Create dialog with actions in header\nbar instead of action area. Since 3.12.",null,null],[17,"GTK_FILE_FILTER_FILENAME","","the filename of the file being tested",null,null],[17,"GTK_FILE_FILTER_URI","","the URI for the file being tested",null,null],[17,"GTK_FILE_FILTER_DISPLAY_NAME","","the string that will be used to\ndisplay the file in the file chooser",null,null],[17,"GTK_FILE_FILTER_MIME_TYPE","","the mime type of the file",null,null],[17,"GTK_ICON_LOOKUP_NO_SVG","","Never get SVG icons, even if gdk-pixbuf\nsupports them. Cannot be used together with `IconLookupFlags::ForceSvg`.",null,null],[17,"GTK_ICON_LOOKUP_FORCE_SVG","","Get SVG icons, even if gdk-pixbuf\ndoesn’t support them.\nCannot be used together with `IconLookupFlags::NoSvg`.",null,null],[17,"GTK_ICON_LOOKUP_USE_BUILTIN","","When passed to\n`IconTheme::lookup_icon` includes builtin icons\nas well as files. For a builtin icon, `IconInfo::get_filename`\nis `None` and you need to call `IconInfo::get_builtin_pixbuf`.",null,null],[17,"GTK_ICON_LOOKUP_GENERIC_FALLBACK","","Try to shorten icon name at &#39;-&#39;\ncharacters before looking at inherited themes. For more general\nfallback, see `IconTheme::choose_icon`. Since 2.12.",null,null],[17,"GTK_ICON_LOOKUP_FORCE_SIZE","","Always get the icon scaled to the\nrequested size. Since 2.14.",null,null],[17,"GTK_ICON_LOOKUP_FORCE_REGULAR","","Try to always load regular icons, even\nwhen symbolic icon names are given. Since 3.14.",null,null],[17,"GTK_ICON_LOOKUP_FORCE_SYMBOLIC","","Try to always load symbolic icons, even\nwhen regular icon names are given. Since 3.14.",null,null],[17,"GTK_ICON_LOOKUP_DIR_LTR","","Try to load a variant of the icon for left-to-right\ntext direction. Since 3.14.",null,null],[17,"GTK_ICON_LOOKUP_DIR_RTL","","Try to load a variant of the icon for right-to-left\ntext direction. Since 3.14.",null,null],[17,"GTK_INPUT_HINT_NONE","","No special behaviour suggested",null,null],[17,"GTK_INPUT_HINT_SPELLCHECK","","Suggest checking for typos",null,null],[17,"GTK_INPUT_HINT_NO_SPELLCHECK","","Suggest not checking for typos",null,null],[17,"GTK_INPUT_HINT_WORD_COMPLETION","","Suggest word completion",null,null],[17,"GTK_INPUT_HINT_LOWERCASE","","Suggest to convert all text to lowercase",null,null],[17,"GTK_INPUT_HINT_UPPERCASE_CHARS","","Suggest to capitalize all text",null,null],[17,"GTK_INPUT_HINT_UPPERCASE_WORDS","","Suggest to capitalize the first\ncharacter of each word",null,null],[17,"GTK_INPUT_HINT_UPPERCASE_SENTENCES","","Suggest to capitalize the\nfirst word of each sentence",null,null],[17,"GTK_INPUT_HINT_INHIBIT_OSK","","Suggest to not show an onscreen keyboard\n (e.g for a calculator that already has all the keys).",null,null],[17,"GTK_JUNCTION_NONE","","No junctions.",null,null],[17,"GTK_JUNCTION_CORNER_TOPLEFT","","Element connects on the top-left corner.",null,null],[17,"GTK_JUNCTION_CORNER_TOPRIGHT","","Element connects on the top-right corner.",null,null],[17,"GTK_JUNCTION_CORNER_BOTTOMLEFT","","Element connects on the bottom-left corner.",null,null],[17,"GTK_JUNCTION_CORNER_BOTTOMRIGHT","","Element connects on the bottom-right corner.",null,null],[17,"GTK_JUNCTION_TOP","","Element connects on the top side.",null,null],[17,"GTK_JUNCTION_BOTTOM","","Element connects on the bottom side.",null,null],[17,"GTK_JUNCTION_LEFT","","Element connects on the left side.",null,null],[17,"GTK_JUNCTION_RIGHT","","Element connects on the right side.",null,null],[17,"GTK_PLACES_OPEN_NORMAL","","This is the default mode that `PlacesSidebar` uses if no other flags\nare specified. It indicates that the calling application should open the selected location\nin the normal way, for example, in the folder view beside the sidebar.",null,null],[17,"GTK_PLACES_OPEN_NEW_TAB","","When passed to `PlacesSidebar::set_open_flags`, this indicates\nthat the application can open folders selected from the sidebar in new tabs. This value\nwill be passed to the `PlacesSidebar::open-location` signal when the user selects\nthat a location be opened in a new tab instead of in the standard fashion.",null,null],[17,"GTK_PLACES_OPEN_NEW_WINDOW","","Similar to `PlacesOpenFlags::NewTab`, but indicates that the application\ncan open folders in new windows.",null,null],[17,"GTK_RC_FG","","Deprecated",null,null],[17,"GTK_RC_BG","","Deprecated",null,null],[17,"GTK_RC_TEXT","","Deprecated",null,null],[17,"GTK_RC_BASE","","Deprecated",null,null],[17,"GTK_RECENT_FILTER_URI","","the URI of the file being tested",null,null],[17,"GTK_RECENT_FILTER_DISPLAY_NAME","","the string that will be used to\ndisplay the file in the recent chooser",null,null],[17,"GTK_RECENT_FILTER_MIME_TYPE","","the mime type of the file",null,null],[17,"GTK_RECENT_FILTER_APPLICATION","","the list of applications that have\nregistered the file",null,null],[17,"GTK_RECENT_FILTER_GROUP","","the groups to which the file belongs to",null,null],[17,"GTK_RECENT_FILTER_AGE","","the number of days elapsed since the file\nhas been registered",null,null],[17,"GTK_REGION_EVEN","","Region has an even number within a set.",null,null],[17,"GTK_REGION_ODD","","Region has an odd number within a set.",null,null],[17,"GTK_REGION_FIRST","","Region is the first one within a set.",null,null],[17,"GTK_REGION_LAST","","Region is the last one within a set.",null,null],[17,"GTK_REGION_ONLY","","Region is the only one within a set.",null,null],[17,"GTK_REGION_SORTED","","Region is part of a sorted area.",null,null],[17,"GTK_STATE_FLAG_NORMAL","","State during normal operation.",null,null],[17,"GTK_STATE_FLAG_ACTIVE","","Widget is active.",null,null],[17,"GTK_STATE_FLAG_PRELIGHT","","Widget has a mouse pointer over it.",null,null],[17,"GTK_STATE_FLAG_SELECTED","","Widget is selected.",null,null],[17,"GTK_STATE_FLAG_INSENSITIVE","","Widget is insensitive.",null,null],[17,"GTK_STATE_FLAG_INCONSISTENT","","Widget is inconsistent.",null,null],[17,"GTK_STATE_FLAG_FOCUSED","","Widget has the keyboard focus.",null,null],[17,"GTK_STATE_FLAG_BACKDROP","","Widget is in a background toplevel window.",null,null],[17,"GTK_STATE_FLAG_DIR_LTR","","Widget is in left-to-right text direction. Since 3.8",null,null],[17,"GTK_STATE_FLAG_DIR_RTL","","Widget is in right-to-left text direction. Since 3.8",null,null],[17,"GTK_STATE_FLAG_LINK","","Widget is a link. Since 3.12",null,null],[17,"GTK_STATE_FLAG_VISITED","","The location the widget points to has already been visited. Since 3.12",null,null],[17,"GTK_STATE_FLAG_CHECKED","","Widget is checked. Since 3.14",null,null],[17,"GTK_TARGET_SAME_APP","","If this is set, the target will only be selected\nfor drags within a single application.",null,null],[17,"GTK_TARGET_SAME_WIDGET","","If this is set, the target will only be selected\nfor drags within a single widget.",null,null],[17,"GTK_TARGET_OTHER_APP","","If this is set, the target will not be selected\nfor drags within a single application.",null,null],[17,"GTK_TARGET_OTHER_WIDGET","","If this is set, the target will not be selected\nfor drags withing a single widget.",null,null],[17,"GTK_TEXT_SEARCH_VISIBLE_ONLY","","Search only visible data. A search match may\nhave invisible text interspersed.",null,null],[17,"GTK_TEXT_SEARCH_TEXT_ONLY","","Search only text. A match may have pixbufs or\nchild widgets mixed inside the matched range.",null,null],[17,"GTK_TEXT_SEARCH_CASE_INSENSITIVE","","The text will be matched regardless of\nwhat case it is in.",null,null],[17,"GTK_TOOL_PALETTE_DRAG_ITEMS","","Support drag of items.",null,null],[17,"GTK_TOOL_PALETTE_DRAG_GROUPS","","Support drag of groups.",null,null],[17,"GTK_TREE_MODEL_ITERS_PERSIST","","iterators survive all signals\nemitted by the tree",null,null],[17,"GTK_TREE_MODEL_LIST_ONLY","","the model is a list only, and never\nhas children",null,null],[17,"GTK_UI_MANAGER_AUTO","","Pick the type of the UI element according to context.",null,null],[17,"GTK_UI_MANAGER_MENUBAR","","Create a menubar.",null,null],[17,"GTK_UI_MANAGER_MENU","","Create a menu.",null,null],[17,"GTK_UI_MANAGER_TOOLBAR","","Create a toolbar.",null,null],[17,"GTK_UI_MANAGER_PLACEHOLDER","","Insert a placeholder.",null,null],[17,"GTK_UI_MANAGER_POPUP","","Create a popup menu.",null,null],[17,"GTK_UI_MANAGER_MENUITEM","","Create a menuitem.",null,null],[17,"GTK_UI_MANAGER_TOOLITEM","","Create a toolitem.",null,null],[17,"GTK_UI_MANAGER_SEPARATOR","","Create a separator.",null,null],[17,"GTK_UI_MANAGER_ACCELERATOR","","Install an accelerator.",null,null],[17,"GTK_UI_MANAGER_POPUP_WITH_ACCELS","","Same as `UIManagerItemType::Popup`, but the\nactions’ accelerators are shown.",null,null],[11,"eq","","",281,{"inputs":[{"name":"gtkalign"},{"name":"gtkalign"}],"output":{"name":"bool"}}],[11,"ne","","",281,{"inputs":[{"name":"gtkalign"},{"name":"gtkalign"}],"output":{"name":"bool"}}],[11,"fmt","","",281,{"inputs":[{"name":"gtkalign"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",281,{"inputs":[{"name":"gtkalign"}],"output":{"name":"gtkalign"}}],[11,"eq","","",282,{"inputs":[{"name":"gtkarrowplacement"},{"name":"gtkarrowplacement"}],"output":{"name":"bool"}}],[11,"ne","","",282,{"inputs":[{"name":"gtkarrowplacement"},{"name":"gtkarrowplacement"}],"output":{"name":"bool"}}],[11,"fmt","","",282,{"inputs":[{"name":"gtkarrowplacement"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",282,{"inputs":[{"name":"gtkarrowplacement"}],"output":{"name":"gtkarrowplacement"}}],[11,"eq","","",283,{"inputs":[{"name":"gtkarrowtype"},{"name":"gtkarrowtype"}],"output":{"name":"bool"}}],[11,"ne","","",283,{"inputs":[{"name":"gtkarrowtype"},{"name":"gtkarrowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",283,{"inputs":[{"name":"gtkarrowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",283,{"inputs":[{"name":"gtkarrowtype"}],"output":{"name":"gtkarrowtype"}}],[11,"eq","","",284,{"inputs":[{"name":"gtkassistantpagetype"},{"name":"gtkassistantpagetype"}],"output":{"name":"bool"}}],[11,"ne","","",284,{"inputs":[{"name":"gtkassistantpagetype"},{"name":"gtkassistantpagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",284,{"inputs":[{"name":"gtkassistantpagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",284,{"inputs":[{"name":"gtkassistantpagetype"}],"output":{"name":"gtkassistantpagetype"}}],[11,"eq","","",285,{"inputs":[{"name":"gtkbaselineposition"},{"name":"gtkbaselineposition"}],"output":{"name":"bool"}}],[11,"ne","","",285,{"inputs":[{"name":"gtkbaselineposition"},{"name":"gtkbaselineposition"}],"output":{"name":"bool"}}],[11,"fmt","","",285,{"inputs":[{"name":"gtkbaselineposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",285,{"inputs":[{"name":"gtkbaselineposition"}],"output":{"name":"gtkbaselineposition"}}],[11,"eq","","",286,{"inputs":[{"name":"gtkborderstyle"},{"name":"gtkborderstyle"}],"output":{"name":"bool"}}],[11,"ne","","",286,{"inputs":[{"name":"gtkborderstyle"},{"name":"gtkborderstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",286,{"inputs":[{"name":"gtkborderstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",286,{"inputs":[{"name":"gtkborderstyle"}],"output":{"name":"gtkborderstyle"}}],[11,"eq","","",287,{"inputs":[{"name":"gtkbuildererror"},{"name":"gtkbuildererror"}],"output":{"name":"bool"}}],[11,"ne","","",287,{"inputs":[{"name":"gtkbuildererror"},{"name":"gtkbuildererror"}],"output":{"name":"bool"}}],[11,"fmt","","",287,{"inputs":[{"name":"gtkbuildererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",287,{"inputs":[{"name":"gtkbuildererror"}],"output":{"name":"gtkbuildererror"}}],[11,"eq","","",288,{"inputs":[{"name":"gtkbuttonboxstyle"},{"name":"gtkbuttonboxstyle"}],"output":{"name":"bool"}}],[11,"ne","","",288,{"inputs":[{"name":"gtkbuttonboxstyle"},{"name":"gtkbuttonboxstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",288,{"inputs":[{"name":"gtkbuttonboxstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",288,{"inputs":[{"name":"gtkbuttonboxstyle"}],"output":{"name":"gtkbuttonboxstyle"}}],[11,"eq","","",289,{"inputs":[{"name":"gtkbuttonrole"},{"name":"gtkbuttonrole"}],"output":{"name":"bool"}}],[11,"ne","","",289,{"inputs":[{"name":"gtkbuttonrole"},{"name":"gtkbuttonrole"}],"output":{"name":"bool"}}],[11,"fmt","","",289,{"inputs":[{"name":"gtkbuttonrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",289,{"inputs":[{"name":"gtkbuttonrole"}],"output":{"name":"gtkbuttonrole"}}],[11,"eq","","",290,{"inputs":[{"name":"gtkbuttonstype"},{"name":"gtkbuttonstype"}],"output":{"name":"bool"}}],[11,"ne","","",290,{"inputs":[{"name":"gtkbuttonstype"},{"name":"gtkbuttonstype"}],"output":{"name":"bool"}}],[11,"fmt","","",290,{"inputs":[{"name":"gtkbuttonstype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"gtkbuttonstype"}],"output":{"name":"gtkbuttonstype"}}],[11,"eq","","",291,{"inputs":[{"name":"gtkcellrendereraccelmode"},{"name":"gtkcellrendereraccelmode"}],"output":{"name":"bool"}}],[11,"ne","","",291,{"inputs":[{"name":"gtkcellrendereraccelmode"},{"name":"gtkcellrendereraccelmode"}],"output":{"name":"bool"}}],[11,"fmt","","",291,{"inputs":[{"name":"gtkcellrendereraccelmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",291,{"inputs":[{"name":"gtkcellrendereraccelmode"}],"output":{"name":"gtkcellrendereraccelmode"}}],[11,"eq","","",292,{"inputs":[{"name":"gtkcellrenderermode"},{"name":"gtkcellrenderermode"}],"output":{"name":"bool"}}],[11,"ne","","",292,{"inputs":[{"name":"gtkcellrenderermode"},{"name":"gtkcellrenderermode"}],"output":{"name":"bool"}}],[11,"fmt","","",292,{"inputs":[{"name":"gtkcellrenderermode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",292,{"inputs":[{"name":"gtkcellrenderermode"}],"output":{"name":"gtkcellrenderermode"}}],[11,"eq","","",293,{"inputs":[{"name":"gtkcornertype"},{"name":"gtkcornertype"}],"output":{"name":"bool"}}],[11,"ne","","",293,{"inputs":[{"name":"gtkcornertype"},{"name":"gtkcornertype"}],"output":{"name":"bool"}}],[11,"fmt","","",293,{"inputs":[{"name":"gtkcornertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",293,{"inputs":[{"name":"gtkcornertype"}],"output":{"name":"gtkcornertype"}}],[11,"eq","","",294,{"inputs":[{"name":"gtkcssprovidererror"},{"name":"gtkcssprovidererror"}],"output":{"name":"bool"}}],[11,"ne","","",294,{"inputs":[{"name":"gtkcssprovidererror"},{"name":"gtkcssprovidererror"}],"output":{"name":"bool"}}],[11,"fmt","","",294,{"inputs":[{"name":"gtkcssprovidererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",294,{"inputs":[{"name":"gtkcssprovidererror"}],"output":{"name":"gtkcssprovidererror"}}],[11,"eq","","",295,{"inputs":[{"name":"gtkcsssectiontype"},{"name":"gtkcsssectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",295,{"inputs":[{"name":"gtkcsssectiontype"},{"name":"gtkcsssectiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",295,{"inputs":[{"name":"gtkcsssectiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",295,{"inputs":[{"name":"gtkcsssectiontype"}],"output":{"name":"gtkcsssectiontype"}}],[11,"eq","","",296,{"inputs":[{"name":"gtkdeletetype"},{"name":"gtkdeletetype"}],"output":{"name":"bool"}}],[11,"ne","","",296,{"inputs":[{"name":"gtkdeletetype"},{"name":"gtkdeletetype"}],"output":{"name":"bool"}}],[11,"fmt","","",296,{"inputs":[{"name":"gtkdeletetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",296,{"inputs":[{"name":"gtkdeletetype"}],"output":{"name":"gtkdeletetype"}}],[11,"eq","","",297,{"inputs":[{"name":"gtkdirectiontype"},{"name":"gtkdirectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",297,{"inputs":[{"name":"gtkdirectiontype"},{"name":"gtkdirectiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",297,{"inputs":[{"name":"gtkdirectiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",297,{"inputs":[{"name":"gtkdirectiontype"}],"output":{"name":"gtkdirectiontype"}}],[11,"eq","","",298,{"inputs":[{"name":"gtkdragresult"},{"name":"gtkdragresult"}],"output":{"name":"bool"}}],[11,"ne","","",298,{"inputs":[{"name":"gtkdragresult"},{"name":"gtkdragresult"}],"output":{"name":"bool"}}],[11,"fmt","","",298,{"inputs":[{"name":"gtkdragresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",298,{"inputs":[{"name":"gtkdragresult"}],"output":{"name":"gtkdragresult"}}],[11,"eq","","",299,{"inputs":[{"name":"gtkentryiconposition"},{"name":"gtkentryiconposition"}],"output":{"name":"bool"}}],[11,"ne","","",299,{"inputs":[{"name":"gtkentryiconposition"},{"name":"gtkentryiconposition"}],"output":{"name":"bool"}}],[11,"fmt","","",299,{"inputs":[{"name":"gtkentryiconposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",299,{"inputs":[{"name":"gtkentryiconposition"}],"output":{"name":"gtkentryiconposition"}}],[11,"eq","","",300,{"inputs":[{"name":"gtkeventsequencestate"},{"name":"gtkeventsequencestate"}],"output":{"name":"bool"}}],[11,"ne","","",300,{"inputs":[{"name":"gtkeventsequencestate"},{"name":"gtkeventsequencestate"}],"output":{"name":"bool"}}],[11,"fmt","","",300,{"inputs":[{"name":"gtkeventsequencestate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",300,{"inputs":[{"name":"gtkeventsequencestate"}],"output":{"name":"gtkeventsequencestate"}}],[11,"eq","","",301,{"inputs":[{"name":"gtkexpanderstyle"},{"name":"gtkexpanderstyle"}],"output":{"name":"bool"}}],[11,"ne","","",301,{"inputs":[{"name":"gtkexpanderstyle"},{"name":"gtkexpanderstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",301,{"inputs":[{"name":"gtkexpanderstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",301,{"inputs":[{"name":"gtkexpanderstyle"}],"output":{"name":"gtkexpanderstyle"}}],[11,"eq","","",302,{"inputs":[{"name":"gtkfilechooseraction"},{"name":"gtkfilechooseraction"}],"output":{"name":"bool"}}],[11,"ne","","",302,{"inputs":[{"name":"gtkfilechooseraction"},{"name":"gtkfilechooseraction"}],"output":{"name":"bool"}}],[11,"fmt","","",302,{"inputs":[{"name":"gtkfilechooseraction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",302,{"inputs":[{"name":"gtkfilechooseraction"}],"output":{"name":"gtkfilechooseraction"}}],[11,"eq","","",303,{"inputs":[{"name":"gtkfilechooserconfirmation"},{"name":"gtkfilechooserconfirmation"}],"output":{"name":"bool"}}],[11,"ne","","",303,{"inputs":[{"name":"gtkfilechooserconfirmation"},{"name":"gtkfilechooserconfirmation"}],"output":{"name":"bool"}}],[11,"fmt","","",303,{"inputs":[{"name":"gtkfilechooserconfirmation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",303,{"inputs":[{"name":"gtkfilechooserconfirmation"}],"output":{"name":"gtkfilechooserconfirmation"}}],[11,"eq","","",304,{"inputs":[{"name":"gtkfilechoosererror"},{"name":"gtkfilechoosererror"}],"output":{"name":"bool"}}],[11,"ne","","",304,{"inputs":[{"name":"gtkfilechoosererror"},{"name":"gtkfilechoosererror"}],"output":{"name":"bool"}}],[11,"fmt","","",304,{"inputs":[{"name":"gtkfilechoosererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",304,{"inputs":[{"name":"gtkfilechoosererror"}],"output":{"name":"gtkfilechoosererror"}}],[11,"eq","","",305,{"inputs":[{"name":"gtkimpreeditstyle"},{"name":"gtkimpreeditstyle"}],"output":{"name":"bool"}}],[11,"ne","","",305,{"inputs":[{"name":"gtkimpreeditstyle"},{"name":"gtkimpreeditstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",305,{"inputs":[{"name":"gtkimpreeditstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",305,{"inputs":[{"name":"gtkimpreeditstyle"}],"output":{"name":"gtkimpreeditstyle"}}],[11,"eq","","",306,{"inputs":[{"name":"gtkimstatusstyle"},{"name":"gtkimstatusstyle"}],"output":{"name":"bool"}}],[11,"ne","","",306,{"inputs":[{"name":"gtkimstatusstyle"},{"name":"gtkimstatusstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",306,{"inputs":[{"name":"gtkimstatusstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",306,{"inputs":[{"name":"gtkimstatusstyle"}],"output":{"name":"gtkimstatusstyle"}}],[11,"eq","","",307,{"inputs":[{"name":"gtkiconsize"},{"name":"gtkiconsize"}],"output":{"name":"bool"}}],[11,"ne","","",307,{"inputs":[{"name":"gtkiconsize"},{"name":"gtkiconsize"}],"output":{"name":"bool"}}],[11,"fmt","","",307,{"inputs":[{"name":"gtkiconsize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",307,{"inputs":[{"name":"gtkiconsize"}],"output":{"name":"gtkiconsize"}}],[11,"eq","","",308,{"inputs":[{"name":"gtkiconthemeerror"},{"name":"gtkiconthemeerror"}],"output":{"name":"bool"}}],[11,"ne","","",308,{"inputs":[{"name":"gtkiconthemeerror"},{"name":"gtkiconthemeerror"}],"output":{"name":"bool"}}],[11,"fmt","","",308,{"inputs":[{"name":"gtkiconthemeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",308,{"inputs":[{"name":"gtkiconthemeerror"}],"output":{"name":"gtkiconthemeerror"}}],[11,"eq","","",309,{"inputs":[{"name":"gtkiconviewdropposition"},{"name":"gtkiconviewdropposition"}],"output":{"name":"bool"}}],[11,"ne","","",309,{"inputs":[{"name":"gtkiconviewdropposition"},{"name":"gtkiconviewdropposition"}],"output":{"name":"bool"}}],[11,"fmt","","",309,{"inputs":[{"name":"gtkiconviewdropposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",309,{"inputs":[{"name":"gtkiconviewdropposition"}],"output":{"name":"gtkiconviewdropposition"}}],[11,"eq","","",310,{"inputs":[{"name":"gtkimagetype"},{"name":"gtkimagetype"}],"output":{"name":"bool"}}],[11,"ne","","",310,{"inputs":[{"name":"gtkimagetype"},{"name":"gtkimagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",310,{"inputs":[{"name":"gtkimagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",310,{"inputs":[{"name":"gtkimagetype"}],"output":{"name":"gtkimagetype"}}],[11,"eq","","",311,{"inputs":[{"name":"gtkinputpurpose"},{"name":"gtkinputpurpose"}],"output":{"name":"bool"}}],[11,"ne","","",311,{"inputs":[{"name":"gtkinputpurpose"},{"name":"gtkinputpurpose"}],"output":{"name":"bool"}}],[11,"fmt","","",311,{"inputs":[{"name":"gtkinputpurpose"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",311,{"inputs":[{"name":"gtkinputpurpose"}],"output":{"name":"gtkinputpurpose"}}],[11,"eq","","",312,{"inputs":[{"name":"gtkjustification"},{"name":"gtkjustification"}],"output":{"name":"bool"}}],[11,"ne","","",312,{"inputs":[{"name":"gtkjustification"},{"name":"gtkjustification"}],"output":{"name":"bool"}}],[11,"fmt","","",312,{"inputs":[{"name":"gtkjustification"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",312,{"inputs":[{"name":"gtkjustification"}],"output":{"name":"gtkjustification"}}],[11,"eq","","",313,{"inputs":[{"name":"gtklevelbarmode"},{"name":"gtklevelbarmode"}],"output":{"name":"bool"}}],[11,"ne","","",313,{"inputs":[{"name":"gtklevelbarmode"},{"name":"gtklevelbarmode"}],"output":{"name":"bool"}}],[11,"fmt","","",313,{"inputs":[{"name":"gtklevelbarmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",313,{"inputs":[{"name":"gtklevelbarmode"}],"output":{"name":"gtklevelbarmode"}}],[11,"eq","","",314,{"inputs":[{"name":"gtklicense"},{"name":"gtklicense"}],"output":{"name":"bool"}}],[11,"ne","","",314,{"inputs":[{"name":"gtklicense"},{"name":"gtklicense"}],"output":{"name":"bool"}}],[11,"fmt","","",314,{"inputs":[{"name":"gtklicense"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",314,{"inputs":[{"name":"gtklicense"}],"output":{"name":"gtklicense"}}],[11,"eq","","",315,{"inputs":[{"name":"gtkmenudirectiontype"},{"name":"gtkmenudirectiontype"}],"output":{"name":"bool"}}],[11,"ne","","",315,{"inputs":[{"name":"gtkmenudirectiontype"},{"name":"gtkmenudirectiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",315,{"inputs":[{"name":"gtkmenudirectiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",315,{"inputs":[{"name":"gtkmenudirectiontype"}],"output":{"name":"gtkmenudirectiontype"}}],[11,"eq","","",316,{"inputs":[{"name":"gtkmessagetype"},{"name":"gtkmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",316,{"inputs":[{"name":"gtkmessagetype"},{"name":"gtkmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",316,{"inputs":[{"name":"gtkmessagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",316,{"inputs":[{"name":"gtkmessagetype"}],"output":{"name":"gtkmessagetype"}}],[11,"eq","","",317,{"inputs":[{"name":"gtkmovementstep"},{"name":"gtkmovementstep"}],"output":{"name":"bool"}}],[11,"ne","","",317,{"inputs":[{"name":"gtkmovementstep"},{"name":"gtkmovementstep"}],"output":{"name":"bool"}}],[11,"fmt","","",317,{"inputs":[{"name":"gtkmovementstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",317,{"inputs":[{"name":"gtkmovementstep"}],"output":{"name":"gtkmovementstep"}}],[11,"eq","","",318,{"inputs":[{"name":"gtknotebooktab"},{"name":"gtknotebooktab"}],"output":{"name":"bool"}}],[11,"ne","","",318,{"inputs":[{"name":"gtknotebooktab"},{"name":"gtknotebooktab"}],"output":{"name":"bool"}}],[11,"fmt","","",318,{"inputs":[{"name":"gtknotebooktab"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",318,{"inputs":[{"name":"gtknotebooktab"}],"output":{"name":"gtknotebooktab"}}],[11,"eq","","",319,{"inputs":[{"name":"gtknumberuplayout"},{"name":"gtknumberuplayout"}],"output":{"name":"bool"}}],[11,"ne","","",319,{"inputs":[{"name":"gtknumberuplayout"},{"name":"gtknumberuplayout"}],"output":{"name":"bool"}}],[11,"fmt","","",319,{"inputs":[{"name":"gtknumberuplayout"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",319,{"inputs":[{"name":"gtknumberuplayout"}],"output":{"name":"gtknumberuplayout"}}],[11,"eq","","",320,{"inputs":[{"name":"gtkorientation"},{"name":"gtkorientation"}],"output":{"name":"bool"}}],[11,"ne","","",320,{"inputs":[{"name":"gtkorientation"},{"name":"gtkorientation"}],"output":{"name":"bool"}}],[11,"fmt","","",320,{"inputs":[{"name":"gtkorientation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",320,{"inputs":[{"name":"gtkorientation"}],"output":{"name":"gtkorientation"}}],[11,"eq","","",321,{"inputs":[{"name":"gtkpackdirection"},{"name":"gtkpackdirection"}],"output":{"name":"bool"}}],[11,"ne","","",321,{"inputs":[{"name":"gtkpackdirection"},{"name":"gtkpackdirection"}],"output":{"name":"bool"}}],[11,"fmt","","",321,{"inputs":[{"name":"gtkpackdirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",321,{"inputs":[{"name":"gtkpackdirection"}],"output":{"name":"gtkpackdirection"}}],[11,"eq","","",322,{"inputs":[{"name":"gtkpacktype"},{"name":"gtkpacktype"}],"output":{"name":"bool"}}],[11,"ne","","",322,{"inputs":[{"name":"gtkpacktype"},{"name":"gtkpacktype"}],"output":{"name":"bool"}}],[11,"fmt","","",322,{"inputs":[{"name":"gtkpacktype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",322,{"inputs":[{"name":"gtkpacktype"}],"output":{"name":"gtkpacktype"}}],[11,"eq","","",323,{"inputs":[{"name":"gtkpageorientation"},{"name":"gtkpageorientation"}],"output":{"name":"bool"}}],[11,"ne","","",323,{"inputs":[{"name":"gtkpageorientation"},{"name":"gtkpageorientation"}],"output":{"name":"bool"}}],[11,"fmt","","",323,{"inputs":[{"name":"gtkpageorientation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",323,{"inputs":[{"name":"gtkpageorientation"}],"output":{"name":"gtkpageorientation"}}],[11,"eq","","",324,{"inputs":[{"name":"gtkpageset"},{"name":"gtkpageset"}],"output":{"name":"bool"}}],[11,"ne","","",324,{"inputs":[{"name":"gtkpageset"},{"name":"gtkpageset"}],"output":{"name":"bool"}}],[11,"fmt","","",324,{"inputs":[{"name":"gtkpageset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",324,{"inputs":[{"name":"gtkpageset"}],"output":{"name":"gtkpageset"}}],[11,"eq","","",325,{"inputs":[{"name":"gtkpandirection"},{"name":"gtkpandirection"}],"output":{"name":"bool"}}],[11,"ne","","",325,{"inputs":[{"name":"gtkpandirection"},{"name":"gtkpandirection"}],"output":{"name":"bool"}}],[11,"fmt","","",325,{"inputs":[{"name":"gtkpandirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",325,{"inputs":[{"name":"gtkpandirection"}],"output":{"name":"gtkpandirection"}}],[11,"eq","","",326,{"inputs":[{"name":"gtkpathprioritytype"},{"name":"gtkpathprioritytype"}],"output":{"name":"bool"}}],[11,"ne","","",326,{"inputs":[{"name":"gtkpathprioritytype"},{"name":"gtkpathprioritytype"}],"output":{"name":"bool"}}],[11,"fmt","","",326,{"inputs":[{"name":"gtkpathprioritytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",326,{"inputs":[{"name":"gtkpathprioritytype"}],"output":{"name":"gtkpathprioritytype"}}],[11,"eq","","",327,{"inputs":[{"name":"gtkpathtype"},{"name":"gtkpathtype"}],"output":{"name":"bool"}}],[11,"ne","","",327,{"inputs":[{"name":"gtkpathtype"},{"name":"gtkpathtype"}],"output":{"name":"bool"}}],[11,"fmt","","",327,{"inputs":[{"name":"gtkpathtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",327,{"inputs":[{"name":"gtkpathtype"}],"output":{"name":"gtkpathtype"}}],[11,"eq","","",328,{"inputs":[{"name":"gtkpolicytype"},{"name":"gtkpolicytype"}],"output":{"name":"bool"}}],[11,"ne","","",328,{"inputs":[{"name":"gtkpolicytype"},{"name":"gtkpolicytype"}],"output":{"name":"bool"}}],[11,"fmt","","",328,{"inputs":[{"name":"gtkpolicytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",328,{"inputs":[{"name":"gtkpolicytype"}],"output":{"name":"gtkpolicytype"}}],[11,"eq","","",329,{"inputs":[{"name":"gtkpositiontype"},{"name":"gtkpositiontype"}],"output":{"name":"bool"}}],[11,"ne","","",329,{"inputs":[{"name":"gtkpositiontype"},{"name":"gtkpositiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",329,{"inputs":[{"name":"gtkpositiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",329,{"inputs":[{"name":"gtkpositiontype"}],"output":{"name":"gtkpositiontype"}}],[11,"eq","","",330,{"inputs":[{"name":"gtkprintduplex"},{"name":"gtkprintduplex"}],"output":{"name":"bool"}}],[11,"ne","","",330,{"inputs":[{"name":"gtkprintduplex"},{"name":"gtkprintduplex"}],"output":{"name":"bool"}}],[11,"fmt","","",330,{"inputs":[{"name":"gtkprintduplex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",330,{"inputs":[{"name":"gtkprintduplex"}],"output":{"name":"gtkprintduplex"}}],[11,"eq","","",331,{"inputs":[{"name":"gtkprinterror"},{"name":"gtkprinterror"}],"output":{"name":"bool"}}],[11,"ne","","",331,{"inputs":[{"name":"gtkprinterror"},{"name":"gtkprinterror"}],"output":{"name":"bool"}}],[11,"fmt","","",331,{"inputs":[{"name":"gtkprinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",331,{"inputs":[{"name":"gtkprinterror"}],"output":{"name":"gtkprinterror"}}],[11,"eq","","",332,{"inputs":[{"name":"gtkprintoperationaction"},{"name":"gtkprintoperationaction"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"gtkprintoperationaction"},{"name":"gtkprintoperationaction"}],"output":{"name":"bool"}}],[11,"fmt","","",332,{"inputs":[{"name":"gtkprintoperationaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",332,{"inputs":[{"name":"gtkprintoperationaction"}],"output":{"name":"gtkprintoperationaction"}}],[11,"eq","","",333,{"inputs":[{"name":"gtkprintoperationresult"},{"name":"gtkprintoperationresult"}],"output":{"name":"bool"}}],[11,"ne","","",333,{"inputs":[{"name":"gtkprintoperationresult"},{"name":"gtkprintoperationresult"}],"output":{"name":"bool"}}],[11,"fmt","","",333,{"inputs":[{"name":"gtkprintoperationresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",333,{"inputs":[{"name":"gtkprintoperationresult"}],"output":{"name":"gtkprintoperationresult"}}],[11,"eq","","",334,{"inputs":[{"name":"gtkprintpages"},{"name":"gtkprintpages"}],"output":{"name":"bool"}}],[11,"ne","","",334,{"inputs":[{"name":"gtkprintpages"},{"name":"gtkprintpages"}],"output":{"name":"bool"}}],[11,"fmt","","",334,{"inputs":[{"name":"gtkprintpages"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",334,{"inputs":[{"name":"gtkprintpages"}],"output":{"name":"gtkprintpages"}}],[11,"eq","","",335,{"inputs":[{"name":"gtkprintquality"},{"name":"gtkprintquality"}],"output":{"name":"bool"}}],[11,"ne","","",335,{"inputs":[{"name":"gtkprintquality"},{"name":"gtkprintquality"}],"output":{"name":"bool"}}],[11,"fmt","","",335,{"inputs":[{"name":"gtkprintquality"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",335,{"inputs":[{"name":"gtkprintquality"}],"output":{"name":"gtkprintquality"}}],[11,"eq","","",336,{"inputs":[{"name":"gtkprintstatus"},{"name":"gtkprintstatus"}],"output":{"name":"bool"}}],[11,"ne","","",336,{"inputs":[{"name":"gtkprintstatus"},{"name":"gtkprintstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",336,{"inputs":[{"name":"gtkprintstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",336,{"inputs":[{"name":"gtkprintstatus"}],"output":{"name":"gtkprintstatus"}}],[11,"eq","","",337,{"inputs":[{"name":"gtkpropagationphase"},{"name":"gtkpropagationphase"}],"output":{"name":"bool"}}],[11,"ne","","",337,{"inputs":[{"name":"gtkpropagationphase"},{"name":"gtkpropagationphase"}],"output":{"name":"bool"}}],[11,"fmt","","",337,{"inputs":[{"name":"gtkpropagationphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",337,{"inputs":[{"name":"gtkpropagationphase"}],"output":{"name":"gtkpropagationphase"}}],[11,"eq","","",338,{"inputs":[{"name":"gtkrctokentype"},{"name":"gtkrctokentype"}],"output":{"name":"bool"}}],[11,"ne","","",338,{"inputs":[{"name":"gtkrctokentype"},{"name":"gtkrctokentype"}],"output":{"name":"bool"}}],[11,"fmt","","",338,{"inputs":[{"name":"gtkrctokentype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",338,{"inputs":[{"name":"gtkrctokentype"}],"output":{"name":"gtkrctokentype"}}],[11,"eq","","",339,{"inputs":[{"name":"gtkrecentchoosererror"},{"name":"gtkrecentchoosererror"}],"output":{"name":"bool"}}],[11,"ne","","",339,{"inputs":[{"name":"gtkrecentchoosererror"},{"name":"gtkrecentchoosererror"}],"output":{"name":"bool"}}],[11,"fmt","","",339,{"inputs":[{"name":"gtkrecentchoosererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",339,{"inputs":[{"name":"gtkrecentchoosererror"}],"output":{"name":"gtkrecentchoosererror"}}],[11,"eq","","",340,{"inputs":[{"name":"gtkrecentmanagererror"},{"name":"gtkrecentmanagererror"}],"output":{"name":"bool"}}],[11,"ne","","",340,{"inputs":[{"name":"gtkrecentmanagererror"},{"name":"gtkrecentmanagererror"}],"output":{"name":"bool"}}],[11,"fmt","","",340,{"inputs":[{"name":"gtkrecentmanagererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",340,{"inputs":[{"name":"gtkrecentmanagererror"}],"output":{"name":"gtkrecentmanagererror"}}],[11,"eq","","",341,{"inputs":[{"name":"gtkrecentsorttype"},{"name":"gtkrecentsorttype"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"gtkrecentsorttype"},{"name":"gtkrecentsorttype"}],"output":{"name":"bool"}}],[11,"fmt","","",341,{"inputs":[{"name":"gtkrecentsorttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",341,{"inputs":[{"name":"gtkrecentsorttype"}],"output":{"name":"gtkrecentsorttype"}}],[11,"eq","","",342,{"inputs":[{"name":"gtkreliefstyle"},{"name":"gtkreliefstyle"}],"output":{"name":"bool"}}],[11,"ne","","",342,{"inputs":[{"name":"gtkreliefstyle"},{"name":"gtkreliefstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",342,{"inputs":[{"name":"gtkreliefstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",342,{"inputs":[{"name":"gtkreliefstyle"}],"output":{"name":"gtkreliefstyle"}}],[11,"eq","","",343,{"inputs":[{"name":"gtkresizemode"},{"name":"gtkresizemode"}],"output":{"name":"bool"}}],[11,"ne","","",343,{"inputs":[{"name":"gtkresizemode"},{"name":"gtkresizemode"}],"output":{"name":"bool"}}],[11,"fmt","","",343,{"inputs":[{"name":"gtkresizemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",343,{"inputs":[{"name":"gtkresizemode"}],"output":{"name":"gtkresizemode"}}],[11,"eq","","",344,{"inputs":[{"name":"gtkresponsetype"},{"name":"gtkresponsetype"}],"output":{"name":"bool"}}],[11,"ne","","",344,{"inputs":[{"name":"gtkresponsetype"},{"name":"gtkresponsetype"}],"output":{"name":"bool"}}],[11,"fmt","","",344,{"inputs":[{"name":"gtkresponsetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",344,{"inputs":[{"name":"gtkresponsetype"}],"output":{"name":"gtkresponsetype"}}],[11,"eq","","",345,{"inputs":[{"name":"gtkrevealertransitiontype"},{"name":"gtkrevealertransitiontype"}],"output":{"name":"bool"}}],[11,"ne","","",345,{"inputs":[{"name":"gtkrevealertransitiontype"},{"name":"gtkrevealertransitiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",345,{"inputs":[{"name":"gtkrevealertransitiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",345,{"inputs":[{"name":"gtkrevealertransitiontype"}],"output":{"name":"gtkrevealertransitiontype"}}],[11,"eq","","",346,{"inputs":[{"name":"gtkscrollstep"},{"name":"gtkscrollstep"}],"output":{"name":"bool"}}],[11,"ne","","",346,{"inputs":[{"name":"gtkscrollstep"},{"name":"gtkscrollstep"}],"output":{"name":"bool"}}],[11,"fmt","","",346,{"inputs":[{"name":"gtkscrollstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",346,{"inputs":[{"name":"gtkscrollstep"}],"output":{"name":"gtkscrollstep"}}],[11,"eq","","",347,{"inputs":[{"name":"gtkscrolltype"},{"name":"gtkscrolltype"}],"output":{"name":"bool"}}],[11,"ne","","",347,{"inputs":[{"name":"gtkscrolltype"},{"name":"gtkscrolltype"}],"output":{"name":"bool"}}],[11,"fmt","","",347,{"inputs":[{"name":"gtkscrolltype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",347,{"inputs":[{"name":"gtkscrolltype"}],"output":{"name":"gtkscrolltype"}}],[11,"eq","","",348,{"inputs":[{"name":"gtkscrollablepolicy"},{"name":"gtkscrollablepolicy"}],"output":{"name":"bool"}}],[11,"ne","","",348,{"inputs":[{"name":"gtkscrollablepolicy"},{"name":"gtkscrollablepolicy"}],"output":{"name":"bool"}}],[11,"fmt","","",348,{"inputs":[{"name":"gtkscrollablepolicy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",348,{"inputs":[{"name":"gtkscrollablepolicy"}],"output":{"name":"gtkscrollablepolicy"}}],[11,"eq","","",349,{"inputs":[{"name":"gtkselectionmode"},{"name":"gtkselectionmode"}],"output":{"name":"bool"}}],[11,"ne","","",349,{"inputs":[{"name":"gtkselectionmode"},{"name":"gtkselectionmode"}],"output":{"name":"bool"}}],[11,"fmt","","",349,{"inputs":[{"name":"gtkselectionmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",349,{"inputs":[{"name":"gtkselectionmode"}],"output":{"name":"gtkselectionmode"}}],[11,"eq","","",350,{"inputs":[{"name":"gtksensitivitytype"},{"name":"gtksensitivitytype"}],"output":{"name":"bool"}}],[11,"ne","","",350,{"inputs":[{"name":"gtksensitivitytype"},{"name":"gtksensitivitytype"}],"output":{"name":"bool"}}],[11,"fmt","","",350,{"inputs":[{"name":"gtksensitivitytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",350,{"inputs":[{"name":"gtksensitivitytype"}],"output":{"name":"gtksensitivitytype"}}],[11,"eq","","",351,{"inputs":[{"name":"gtkshadowtype"},{"name":"gtkshadowtype"}],"output":{"name":"bool"}}],[11,"ne","","",351,{"inputs":[{"name":"gtkshadowtype"},{"name":"gtkshadowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",351,{"inputs":[{"name":"gtkshadowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",351,{"inputs":[{"name":"gtkshadowtype"}],"output":{"name":"gtkshadowtype"}}],[11,"eq","","",352,{"inputs":[{"name":"gtksizegroupmode"},{"name":"gtksizegroupmode"}],"output":{"name":"bool"}}],[11,"ne","","",352,{"inputs":[{"name":"gtksizegroupmode"},{"name":"gtksizegroupmode"}],"output":{"name":"bool"}}],[11,"fmt","","",352,{"inputs":[{"name":"gtksizegroupmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",352,{"inputs":[{"name":"gtksizegroupmode"}],"output":{"name":"gtksizegroupmode"}}],[11,"eq","","",353,{"inputs":[{"name":"gtksizerequestmode"},{"name":"gtksizerequestmode"}],"output":{"name":"bool"}}],[11,"ne","","",353,{"inputs":[{"name":"gtksizerequestmode"},{"name":"gtksizerequestmode"}],"output":{"name":"bool"}}],[11,"fmt","","",353,{"inputs":[{"name":"gtksizerequestmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",353,{"inputs":[{"name":"gtksizerequestmode"}],"output":{"name":"gtksizerequestmode"}}],[11,"eq","","",354,{"inputs":[{"name":"gtksorttype"},{"name":"gtksorttype"}],"output":{"name":"bool"}}],[11,"ne","","",354,{"inputs":[{"name":"gtksorttype"},{"name":"gtksorttype"}],"output":{"name":"bool"}}],[11,"fmt","","",354,{"inputs":[{"name":"gtksorttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",354,{"inputs":[{"name":"gtksorttype"}],"output":{"name":"gtksorttype"}}],[11,"eq","","",355,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"},{"name":"gtkspinbuttonupdatepolicy"}],"output":{"name":"bool"}}],[11,"ne","","",355,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"},{"name":"gtkspinbuttonupdatepolicy"}],"output":{"name":"bool"}}],[11,"fmt","","",355,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",355,{"inputs":[{"name":"gtkspinbuttonupdatepolicy"}],"output":{"name":"gtkspinbuttonupdatepolicy"}}],[11,"eq","","",356,{"inputs":[{"name":"gtkspintype"},{"name":"gtkspintype"}],"output":{"name":"bool"}}],[11,"ne","","",356,{"inputs":[{"name":"gtkspintype"},{"name":"gtkspintype"}],"output":{"name":"bool"}}],[11,"fmt","","",356,{"inputs":[{"name":"gtkspintype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",356,{"inputs":[{"name":"gtkspintype"}],"output":{"name":"gtkspintype"}}],[11,"eq","","",357,{"inputs":[{"name":"gtkstacktransitiontype"},{"name":"gtkstacktransitiontype"}],"output":{"name":"bool"}}],[11,"ne","","",357,{"inputs":[{"name":"gtkstacktransitiontype"},{"name":"gtkstacktransitiontype"}],"output":{"name":"bool"}}],[11,"fmt","","",357,{"inputs":[{"name":"gtkstacktransitiontype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",357,{"inputs":[{"name":"gtkstacktransitiontype"}],"output":{"name":"gtkstacktransitiontype"}}],[11,"eq","","",358,{"inputs":[{"name":"gtkstatetype"},{"name":"gtkstatetype"}],"output":{"name":"bool"}}],[11,"ne","","",358,{"inputs":[{"name":"gtkstatetype"},{"name":"gtkstatetype"}],"output":{"name":"bool"}}],[11,"fmt","","",358,{"inputs":[{"name":"gtkstatetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",358,{"inputs":[{"name":"gtkstatetype"}],"output":{"name":"gtkstatetype"}}],[11,"eq","","",359,{"inputs":[{"name":"gtktextbuffertargetinfo"},{"name":"gtktextbuffertargetinfo"}],"output":{"name":"bool"}}],[11,"ne","","",359,{"inputs":[{"name":"gtktextbuffertargetinfo"},{"name":"gtktextbuffertargetinfo"}],"output":{"name":"bool"}}],[11,"fmt","","",359,{"inputs":[{"name":"gtktextbuffertargetinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",359,{"inputs":[{"name":"gtktextbuffertargetinfo"}],"output":{"name":"gtktextbuffertargetinfo"}}],[11,"eq","","",360,{"inputs":[{"name":"gtktextdirection"},{"name":"gtktextdirection"}],"output":{"name":"bool"}}],[11,"ne","","",360,{"inputs":[{"name":"gtktextdirection"},{"name":"gtktextdirection"}],"output":{"name":"bool"}}],[11,"fmt","","",360,{"inputs":[{"name":"gtktextdirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",360,{"inputs":[{"name":"gtktextdirection"}],"output":{"name":"gtktextdirection"}}],[11,"eq","","",361,{"inputs":[{"name":"gtktextextendselection"},{"name":"gtktextextendselection"}],"output":{"name":"bool"}}],[11,"ne","","",361,{"inputs":[{"name":"gtktextextendselection"},{"name":"gtktextextendselection"}],"output":{"name":"bool"}}],[11,"fmt","","",361,{"inputs":[{"name":"gtktextextendselection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",361,{"inputs":[{"name":"gtktextextendselection"}],"output":{"name":"gtktextextendselection"}}],[11,"eq","","",362,{"inputs":[{"name":"gtktextviewlayer"},{"name":"gtktextviewlayer"}],"output":{"name":"bool"}}],[11,"ne","","",362,{"inputs":[{"name":"gtktextviewlayer"},{"name":"gtktextviewlayer"}],"output":{"name":"bool"}}],[11,"fmt","","",362,{"inputs":[{"name":"gtktextviewlayer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",362,{"inputs":[{"name":"gtktextviewlayer"}],"output":{"name":"gtktextviewlayer"}}],[11,"eq","","",363,{"inputs":[{"name":"gtktextwindowtype"},{"name":"gtktextwindowtype"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"gtktextwindowtype"},{"name":"gtktextwindowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",363,{"inputs":[{"name":"gtktextwindowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",363,{"inputs":[{"name":"gtktextwindowtype"}],"output":{"name":"gtktextwindowtype"}}],[11,"eq","","",364,{"inputs":[{"name":"gtktoolbarspacestyle"},{"name":"gtktoolbarspacestyle"}],"output":{"name":"bool"}}],[11,"ne","","",364,{"inputs":[{"name":"gtktoolbarspacestyle"},{"name":"gtktoolbarspacestyle"}],"output":{"name":"bool"}}],[11,"fmt","","",364,{"inputs":[{"name":"gtktoolbarspacestyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",364,{"inputs":[{"name":"gtktoolbarspacestyle"}],"output":{"name":"gtktoolbarspacestyle"}}],[11,"eq","","",365,{"inputs":[{"name":"gtktoolbarstyle"},{"name":"gtktoolbarstyle"}],"output":{"name":"bool"}}],[11,"ne","","",365,{"inputs":[{"name":"gtktoolbarstyle"},{"name":"gtktoolbarstyle"}],"output":{"name":"bool"}}],[11,"fmt","","",365,{"inputs":[{"name":"gtktoolbarstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",365,{"inputs":[{"name":"gtktoolbarstyle"}],"output":{"name":"gtktoolbarstyle"}}],[11,"eq","","",366,{"inputs":[{"name":"gtktreeviewcolumnsizing"},{"name":"gtktreeviewcolumnsizing"}],"output":{"name":"bool"}}],[11,"ne","","",366,{"inputs":[{"name":"gtktreeviewcolumnsizing"},{"name":"gtktreeviewcolumnsizing"}],"output":{"name":"bool"}}],[11,"fmt","","",366,{"inputs":[{"name":"gtktreeviewcolumnsizing"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",366,{"inputs":[{"name":"gtktreeviewcolumnsizing"}],"output":{"name":"gtktreeviewcolumnsizing"}}],[11,"eq","","",367,{"inputs":[{"name":"gtktreeviewdropposition"},{"name":"gtktreeviewdropposition"}],"output":{"name":"bool"}}],[11,"ne","","",367,{"inputs":[{"name":"gtktreeviewdropposition"},{"name":"gtktreeviewdropposition"}],"output":{"name":"bool"}}],[11,"fmt","","",367,{"inputs":[{"name":"gtktreeviewdropposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",367,{"inputs":[{"name":"gtktreeviewdropposition"}],"output":{"name":"gtktreeviewdropposition"}}],[11,"eq","","",368,{"inputs":[{"name":"gtktreeviewgridlines"},{"name":"gtktreeviewgridlines"}],"output":{"name":"bool"}}],[11,"ne","","",368,{"inputs":[{"name":"gtktreeviewgridlines"},{"name":"gtktreeviewgridlines"}],"output":{"name":"bool"}}],[11,"fmt","","",368,{"inputs":[{"name":"gtktreeviewgridlines"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",368,{"inputs":[{"name":"gtktreeviewgridlines"}],"output":{"name":"gtktreeviewgridlines"}}],[11,"eq","","",369,{"inputs":[{"name":"gtkunit"},{"name":"gtkunit"}],"output":{"name":"bool"}}],[11,"ne","","",369,{"inputs":[{"name":"gtkunit"},{"name":"gtkunit"}],"output":{"name":"bool"}}],[11,"fmt","","",369,{"inputs":[{"name":"gtkunit"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",369,{"inputs":[{"name":"gtkunit"}],"output":{"name":"gtkunit"}}],[11,"eq","","",370,{"inputs":[{"name":"gtkwidgethelptype"},{"name":"gtkwidgethelptype"}],"output":{"name":"bool"}}],[11,"ne","","",370,{"inputs":[{"name":"gtkwidgethelptype"},{"name":"gtkwidgethelptype"}],"output":{"name":"bool"}}],[11,"fmt","","",370,{"inputs":[{"name":"gtkwidgethelptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",370,{"inputs":[{"name":"gtkwidgethelptype"}],"output":{"name":"gtkwidgethelptype"}}],[11,"eq","","",371,{"inputs":[{"name":"gtkwindowposition"},{"name":"gtkwindowposition"}],"output":{"name":"bool"}}],[11,"ne","","",371,{"inputs":[{"name":"gtkwindowposition"},{"name":"gtkwindowposition"}],"output":{"name":"bool"}}],[11,"fmt","","",371,{"inputs":[{"name":"gtkwindowposition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",371,{"inputs":[{"name":"gtkwindowposition"}],"output":{"name":"gtkwindowposition"}}],[11,"eq","","",372,{"inputs":[{"name":"gtkwindowtype"},{"name":"gtkwindowtype"}],"output":{"name":"bool"}}],[11,"ne","","",372,{"inputs":[{"name":"gtkwindowtype"},{"name":"gtkwindowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",372,{"inputs":[{"name":"gtkwindowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",372,{"inputs":[{"name":"gtkwindowtype"}],"output":{"name":"gtkwindowtype"}}],[11,"eq","","",373,{"inputs":[{"name":"gtkwrapmode"},{"name":"gtkwrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",373,{"inputs":[{"name":"gtkwrapmode"},{"name":"gtkwrapmode"}],"output":{"name":"bool"}}],[11,"fmt","","",373,{"inputs":[{"name":"gtkwrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",373,{"inputs":[{"name":"gtkwrapmode"}],"output":{"name":"gtkwrapmode"}}],[11,"hash","","",374,null],[11,"cmp","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"option"}}],[11,"lt","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"le","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"gt","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"ge","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"clone","","",374,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"eq","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"ne","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"fmt","","",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",374,{"inputs":[],"output":{"name":"gtkaccelflags"}}],[11,"all","","Returns the set containing all flags.",374,{"inputs":[],"output":{"name":"gtkaccelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",374,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",374,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",374,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkaccelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",374,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",374,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",374,{"inputs":[{"name":"gtkaccelflags"},{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"not","","Returns the complement of this set of flags.",374,{"inputs":[{"name":"gtkaccelflags"}],"output":{"name":"gtkaccelflags"}}],[11,"from_iter","","",374,{"inputs":[{"name":"t"}],"output":{"name":"gtkaccelflags"}}],[11,"hash","","",375,null],[11,"cmp","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"option"}}],[11,"lt","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"le","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"gt","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"ge","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"clone","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"eq","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"ne","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"fmt","","",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",375,{"inputs":[],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"all","","Returns the set containing all flags.",375,{"inputs":[],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",375,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",375,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"},{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"not","","Returns the complement of this set of flags.",375,{"inputs":[{"name":"gtkapplicationinhibitflags"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"from_iter","","",375,{"inputs":[{"name":"t"}],"output":{"name":"gtkapplicationinhibitflags"}}],[11,"hash","","",376,null],[11,"cmp","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"option"}}],[11,"lt","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"le","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"gt","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"ge","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"clone","","",376,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"eq","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"ne","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",376,{"inputs":[],"output":{"name":"gtkattachoptions"}}],[11,"all","","Returns the set containing all flags.",376,{"inputs":[],"output":{"name":"gtkattachoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",376,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",376,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",376,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkattachoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",376,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",376,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",376,{"inputs":[{"name":"gtkattachoptions"},{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"not","","Returns the complement of this set of flags.",376,{"inputs":[{"name":"gtkattachoptions"}],"output":{"name":"gtkattachoptions"}}],[11,"from_iter","","",376,{"inputs":[{"name":"t"}],"output":{"name":"gtkattachoptions"}}],[11,"hash","","",377,null],[11,"cmp","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"option"}}],[11,"lt","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"le","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"gt","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"ge","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"clone","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"eq","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"ne","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"fmt","","",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",377,{"inputs":[],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"all","","Returns the set containing all flags.",377,{"inputs":[],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",377,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",377,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"sub","","Returns the set difference of the two sets of flags.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"},{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"not","","Returns the complement of this set of flags.",377,{"inputs":[{"name":"gtkcalendardisplayoptions"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"from_iter","","",377,{"inputs":[{"name":"t"}],"output":{"name":"gtkcalendardisplayoptions"}}],[11,"hash","","",378,null],[11,"cmp","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"option"}}],[11,"lt","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"le","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"gt","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"ge","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"clone","","",378,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"eq","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"ne","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"fmt","","",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",378,{"inputs":[],"output":{"name":"gtkcellrendererstate"}}],[11,"all","","Returns the set containing all flags.",378,{"inputs":[],"output":{"name":"gtkcellrendererstate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",378,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",378,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",378,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkcellrendererstate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",378,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",378,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"sub","","Returns the set difference of the two sets of flags.",378,{"inputs":[{"name":"gtkcellrendererstate"},{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"not","","Returns the complement of this set of flags.",378,{"inputs":[{"name":"gtkcellrendererstate"}],"output":{"name":"gtkcellrendererstate"}}],[11,"from_iter","","",378,{"inputs":[{"name":"t"}],"output":{"name":"gtkcellrendererstate"}}],[11,"hash","","",379,null],[11,"cmp","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"option"}}],[11,"lt","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"le","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"gt","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"ge","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"clone","","",379,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"eq","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"ne","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"fmt","","",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",379,{"inputs":[],"output":{"name":"gtkdebugflag"}}],[11,"all","","Returns the set containing all flags.",379,{"inputs":[],"output":{"name":"gtkdebugflag"}}],[11,"bits","","Returns the raw value of the flags currently stored.",379,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",379,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",379,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkdebugflag"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",379,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",379,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"sub","","Returns the set difference of the two sets of flags.",379,{"inputs":[{"name":"gtkdebugflag"},{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"not","","Returns the complement of this set of flags.",379,{"inputs":[{"name":"gtkdebugflag"}],"output":{"name":"gtkdebugflag"}}],[11,"from_iter","","",379,{"inputs":[{"name":"t"}],"output":{"name":"gtkdebugflag"}}],[11,"hash","","",380,null],[11,"cmp","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"option"}}],[11,"lt","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"le","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"gt","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"ge","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"clone","","",380,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"eq","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"ne","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"fmt","","",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",380,{"inputs":[],"output":{"name":"gtkdestdefaults"}}],[11,"all","","Returns the set containing all flags.",380,{"inputs":[],"output":{"name":"gtkdestdefaults"}}],[11,"bits","","Returns the raw value of the flags currently stored.",380,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",380,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",380,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkdestdefaults"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",380,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",380,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"sub","","Returns the set difference of the two sets of flags.",380,{"inputs":[{"name":"gtkdestdefaults"},{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"not","","Returns the complement of this set of flags.",380,{"inputs":[{"name":"gtkdestdefaults"}],"output":{"name":"gtkdestdefaults"}}],[11,"from_iter","","",380,{"inputs":[{"name":"t"}],"output":{"name":"gtkdestdefaults"}}],[11,"hash","","",381,null],[11,"cmp","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"option"}}],[11,"lt","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"le","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"gt","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"ge","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"clone","","",381,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"eq","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"ne","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"fmt","","",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",381,{"inputs":[],"output":{"name":"gtkdialogflags"}}],[11,"all","","Returns the set containing all flags.",381,{"inputs":[],"output":{"name":"gtkdialogflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",381,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",381,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",381,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkdialogflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",381,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",381,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",381,{"inputs":[{"name":"gtkdialogflags"},{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"not","","Returns the complement of this set of flags.",381,{"inputs":[{"name":"gtkdialogflags"}],"output":{"name":"gtkdialogflags"}}],[11,"from_iter","","",381,{"inputs":[{"name":"t"}],"output":{"name":"gtkdialogflags"}}],[11,"hash","","",382,null],[11,"cmp","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"option"}}],[11,"lt","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"le","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"gt","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"ge","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"clone","","",382,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"eq","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"ne","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"fmt","","",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",382,{"inputs":[],"output":{"name":"gtkfilefilterflags"}}],[11,"all","","Returns the set containing all flags.",382,{"inputs":[],"output":{"name":"gtkfilefilterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",382,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",382,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",382,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkfilefilterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",382,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",382,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",382,{"inputs":[{"name":"gtkfilefilterflags"},{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"not","","Returns the complement of this set of flags.",382,{"inputs":[{"name":"gtkfilefilterflags"}],"output":{"name":"gtkfilefilterflags"}}],[11,"from_iter","","",382,{"inputs":[{"name":"t"}],"output":{"name":"gtkfilefilterflags"}}],[11,"hash","","",383,null],[11,"cmp","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"option"}}],[11,"lt","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"le","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"gt","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"ge","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"clone","","",383,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"eq","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"fmt","","",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",383,{"inputs":[],"output":{"name":"gtkiconlookupflags"}}],[11,"all","","Returns the set containing all flags.",383,{"inputs":[],"output":{"name":"gtkiconlookupflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",383,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",383,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",383,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkiconlookupflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",383,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",383,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",383,{"inputs":[{"name":"gtkiconlookupflags"},{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"not","","Returns the complement of this set of flags.",383,{"inputs":[{"name":"gtkiconlookupflags"}],"output":{"name":"gtkiconlookupflags"}}],[11,"from_iter","","",383,{"inputs":[{"name":"t"}],"output":{"name":"gtkiconlookupflags"}}],[11,"hash","","",384,null],[11,"cmp","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"option"}}],[11,"lt","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"le","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"gt","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"ge","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"clone","","",384,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"eq","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"ne","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"fmt","","",384,{"inputs":[{"name":"gtkinputhints"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",384,{"inputs":[],"output":{"name":"gtkinputhints"}}],[11,"all","","Returns the set containing all flags.",384,{"inputs":[],"output":{"name":"gtkinputhints"}}],[11,"bits","","Returns the raw value of the flags currently stored.",384,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",384,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",384,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkinputhints"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",384,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",384,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"sub","","Returns the set difference of the two sets of flags.",384,{"inputs":[{"name":"gtkinputhints"},{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"not","","Returns the complement of this set of flags.",384,{"inputs":[{"name":"gtkinputhints"}],"output":{"name":"gtkinputhints"}}],[11,"from_iter","","",384,{"inputs":[{"name":"t"}],"output":{"name":"gtkinputhints"}}],[11,"hash","","",385,null],[11,"cmp","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"option"}}],[11,"lt","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"le","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"gt","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"ge","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"clone","","",385,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"eq","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"ne","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"fmt","","",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",385,{"inputs":[],"output":{"name":"gtkjunctionsides"}}],[11,"all","","Returns the set containing all flags.",385,{"inputs":[],"output":{"name":"gtkjunctionsides"}}],[11,"bits","","Returns the raw value of the flags currently stored.",385,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",385,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",385,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkjunctionsides"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",385,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",385,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"sub","","Returns the set difference of the two sets of flags.",385,{"inputs":[{"name":"gtkjunctionsides"},{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"not","","Returns the complement of this set of flags.",385,{"inputs":[{"name":"gtkjunctionsides"}],"output":{"name":"gtkjunctionsides"}}],[11,"from_iter","","",385,{"inputs":[{"name":"t"}],"output":{"name":"gtkjunctionsides"}}],[11,"hash","","",386,null],[11,"cmp","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"option"}}],[11,"lt","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"le","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"gt","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"ge","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"clone","","",386,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"eq","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"ne","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"fmt","","",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",386,{"inputs":[],"output":{"name":"gtkplacesopenflags"}}],[11,"all","","Returns the set containing all flags.",386,{"inputs":[],"output":{"name":"gtkplacesopenflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",386,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",386,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",386,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkplacesopenflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",386,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",386,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",386,{"inputs":[{"name":"gtkplacesopenflags"},{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"not","","Returns the complement of this set of flags.",386,{"inputs":[{"name":"gtkplacesopenflags"}],"output":{"name":"gtkplacesopenflags"}}],[11,"from_iter","","",386,{"inputs":[{"name":"t"}],"output":{"name":"gtkplacesopenflags"}}],[11,"hash","","",387,null],[11,"cmp","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"option"}}],[11,"lt","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"le","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"gt","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"ge","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"clone","","",387,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"eq","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"ne","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"fmt","","",387,{"inputs":[{"name":"gtkrcflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",387,{"inputs":[],"output":{"name":"gtkrcflags"}}],[11,"all","","Returns the set containing all flags.",387,{"inputs":[],"output":{"name":"gtkrcflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",387,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",387,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",387,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkrcflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",387,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",387,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",387,{"inputs":[{"name":"gtkrcflags"},{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"not","","Returns the complement of this set of flags.",387,{"inputs":[{"name":"gtkrcflags"}],"output":{"name":"gtkrcflags"}}],[11,"from_iter","","",387,{"inputs":[{"name":"t"}],"output":{"name":"gtkrcflags"}}],[11,"hash","","",388,null],[11,"cmp","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"option"}}],[11,"lt","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"le","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"gt","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"ge","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"clone","","",388,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"eq","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"ne","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"fmt","","",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",388,{"inputs":[],"output":{"name":"gtkrecentfilterflags"}}],[11,"all","","Returns the set containing all flags.",388,{"inputs":[],"output":{"name":"gtkrecentfilterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",388,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",388,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",388,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",388,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",388,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",388,{"inputs":[{"name":"gtkrecentfilterflags"},{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"not","","Returns the complement of this set of flags.",388,{"inputs":[{"name":"gtkrecentfilterflags"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"from_iter","","",388,{"inputs":[{"name":"t"}],"output":{"name":"gtkrecentfilterflags"}}],[11,"hash","","",389,null],[11,"cmp","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"option"}}],[11,"lt","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"le","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"gt","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"ge","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"clone","","",389,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"eq","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"ne","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"fmt","","",389,{"inputs":[{"name":"gtkregionflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",389,{"inputs":[],"output":{"name":"gtkregionflags"}}],[11,"all","","Returns the set containing all flags.",389,{"inputs":[],"output":{"name":"gtkregionflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",389,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",389,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",389,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkregionflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",389,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",389,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",389,{"inputs":[{"name":"gtkregionflags"},{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"not","","Returns the complement of this set of flags.",389,{"inputs":[{"name":"gtkregionflags"}],"output":{"name":"gtkregionflags"}}],[11,"from_iter","","",389,{"inputs":[{"name":"t"}],"output":{"name":"gtkregionflags"}}],[11,"hash","","",390,null],[11,"cmp","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"option"}}],[11,"lt","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"le","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"gt","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"ge","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"clone","","",390,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"eq","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"ne","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",390,{"inputs":[{"name":"gtkstateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",390,{"inputs":[],"output":{"name":"gtkstateflags"}}],[11,"all","","Returns the set containing all flags.",390,{"inputs":[],"output":{"name":"gtkstateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",390,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",390,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",390,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkstateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",390,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",390,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",390,{"inputs":[{"name":"gtkstateflags"},{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"not","","Returns the complement of this set of flags.",390,{"inputs":[{"name":"gtkstateflags"}],"output":{"name":"gtkstateflags"}}],[11,"from_iter","","",390,{"inputs":[{"name":"t"}],"output":{"name":"gtkstateflags"}}],[11,"hash","","",391,null],[11,"cmp","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"option"}}],[11,"lt","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"le","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"gt","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"ge","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"clone","","",391,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"eq","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"ne","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"fmt","","",391,{"inputs":[{"name":"gtktargetflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",391,{"inputs":[],"output":{"name":"gtktargetflags"}}],[11,"all","","Returns the set containing all flags.",391,{"inputs":[],"output":{"name":"gtktargetflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",391,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",391,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",391,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtktargetflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",391,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",391,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",391,{"inputs":[{"name":"gtktargetflags"},{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"not","","Returns the complement of this set of flags.",391,{"inputs":[{"name":"gtktargetflags"}],"output":{"name":"gtktargetflags"}}],[11,"from_iter","","",391,{"inputs":[{"name":"t"}],"output":{"name":"gtktargetflags"}}],[11,"hash","","",392,null],[11,"cmp","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"option"}}],[11,"lt","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"le","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"gt","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"ge","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"clone","","",392,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"eq","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"ne","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"fmt","","",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",392,{"inputs":[],"output":{"name":"gtktextsearchflags"}}],[11,"all","","Returns the set containing all flags.",392,{"inputs":[],"output":{"name":"gtktextsearchflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",392,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",392,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",392,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtktextsearchflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",392,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",392,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",392,{"inputs":[{"name":"gtktextsearchflags"},{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"not","","Returns the complement of this set of flags.",392,{"inputs":[{"name":"gtktextsearchflags"}],"output":{"name":"gtktextsearchflags"}}],[11,"from_iter","","",392,{"inputs":[{"name":"t"}],"output":{"name":"gtktextsearchflags"}}],[11,"hash","","",393,null],[11,"cmp","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"option"}}],[11,"lt","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"le","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"gt","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"ge","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"clone","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"eq","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"ne","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"fmt","","",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",393,{"inputs":[],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"all","","Returns the set containing all flags.",393,{"inputs":[],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"bits","","Returns the raw value of the flags currently stored.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",393,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",393,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"sub","","Returns the set difference of the two sets of flags.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"},{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"not","","Returns the complement of this set of flags.",393,{"inputs":[{"name":"gtktoolpalettedragtargets"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"from_iter","","",393,{"inputs":[{"name":"t"}],"output":{"name":"gtktoolpalettedragtargets"}}],[11,"hash","","",394,null],[11,"cmp","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"option"}}],[11,"lt","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"le","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"gt","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"ge","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"clone","","",394,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"eq","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"ne","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"fmt","","",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",394,{"inputs":[],"output":{"name":"gtktreemodelflags"}}],[11,"all","","Returns the set containing all flags.",394,{"inputs":[],"output":{"name":"gtktreemodelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",394,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",394,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",394,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtktreemodelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",394,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",394,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",394,{"inputs":[{"name":"gtktreemodelflags"},{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"not","","Returns the complement of this set of flags.",394,{"inputs":[{"name":"gtktreemodelflags"}],"output":{"name":"gtktreemodelflags"}}],[11,"from_iter","","",394,{"inputs":[{"name":"t"}],"output":{"name":"gtktreemodelflags"}}],[11,"hash","","",395,null],[11,"cmp","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"option"}}],[11,"lt","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"le","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"gt","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"ge","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"clone","","",395,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"eq","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"ne","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"fmt","","",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",395,{"inputs":[],"output":{"name":"gtkuimanageritemtype"}}],[11,"all","","Returns the set containing all flags.",395,{"inputs":[],"output":{"name":"gtkuimanageritemtype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",395,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",395,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",395,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",395,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",395,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",395,{"inputs":[{"name":"gtkuimanageritemtype"},{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"not","","Returns the complement of this set of flags.",395,{"inputs":[{"name":"gtkuimanageritemtype"}],"output":{"name":"gtkuimanageritemtype"}}],[11,"from_iter","","",395,{"inputs":[{"name":"t"}],"output":{"name":"gtkuimanageritemtype"}}]],"paths":[[3,"GtkAboutDialogClass"],[3,"GtkAccelGroupClass"],[3,"GtkAccelGroupEntry"],[3,"GtkAccelKey"],[3,"GtkAccelLabelClass"],[3,"GtkAccessibleClass"],[3,"GtkActionBarClass"],[3,"GtkActionClass"],[3,"GtkActionEntry"],[3,"GtkActionGroupClass"],[3,"GtkActionableInterface"],[3,"GtkActivatableIface"],[3,"GtkAdjustmentClass"],[3,"GtkAlignmentClass"],[3,"GtkAppChooserButtonClass"],[3,"GtkAppChooserDialogClass"],[3,"GtkAppChooserWidgetClass"],[3,"GtkApplicationClass"],[3,"GtkApplicationWindowClass"],[3,"GtkArrowAccessibleClass"],[3,"GtkArrowClass"],[3,"GtkAspectFrameClass"],[3,"GtkAssistantClass"],[3,"GtkBinClass"],[3,"GtkBindingArg"],[3,"GtkBindingEntry"],[3,"GtkBindingSet"],[3,"GtkBindingSignal"],[3,"GtkBooleanCellAccessibleClass"],[3,"GtkBorder"],[3,"GtkBoxClass"],[3,"GtkBuildableIface"],[3,"GtkBuilderClass"],[3,"GtkButtonAccessibleClass"],[3,"GtkButtonBoxClass"],[3,"GtkButtonClass"],[3,"GtkCalendarClass"],[3,"GtkCellAccessibleClass"],[3,"GtkCellAccessibleParentIface"],[3,"GtkCellAreaBoxClass"],[3,"GtkCellAreaClass"],[3,"GtkCellAreaContextClass"],[3,"GtkCellEditableIface"],[3,"GtkCellLayoutIface"],[3,"GtkCellRendererAccelClass"],[3,"GtkCellRendererClass"],[3,"GtkCellRendererComboClass"],[3,"GtkCellRendererPixbufClass"],[3,"GtkCellRendererProgressClass"],[3,"GtkCellRendererSpinClass"],[3,"GtkCellRendererSpinnerClass"],[3,"GtkCellRendererTextClass"],[3,"GtkCellRendererToggleClass"],[3,"GtkCellViewClass"],[3,"GtkCheckButtonClass"],[3,"GtkCheckMenuItemAccessibleClass"],[3,"GtkCheckMenuItemClass"],[3,"GtkColorButtonClass"],[3,"GtkColorChooserDialogClass"],[3,"GtkColorChooserInterface"],[3,"GtkColorChooserWidgetClass"],[3,"GtkColorSelectionClass"],[3,"GtkColorSelectionDialogClass"],[3,"GtkComboBoxAccessibleClass"],[3,"GtkComboBoxClass"],[3,"GtkComboBoxTextClass"],[3,"GtkContainerAccessibleClass"],[3,"GtkContainerCellAccessibleClass"],[3,"GtkContainerClass"],[3,"GtkCssProviderClass"],[3,"GtkDialogClass"],[3,"GtkDrawingAreaClass"],[3,"GtkEditableInterface"],[3,"GtkEntryAccessibleClass"],[3,"GtkEntryBufferClass"],[3,"GtkEntryClass"],[3,"GtkEntryCompletionClass"],[3,"GtkEventBoxClass"],[3,"GtkExpanderAccessibleClass"],[3,"GtkExpanderClass"],[3,"GtkFileChooserButtonClass"],[3,"GtkFileChooserDialogClass"],[3,"GtkFileChooserWidgetClass"],[3,"GtkFileFilterInfo"],[3,"GtkFixedChild"],[3,"GtkFixedClass"],[3,"GtkFlowBoxAccessibleClass"],[3,"GtkFlowBoxChildAccessibleClass"],[3,"GtkFlowBoxChildClass"],[3,"GtkFlowBoxClass"],[3,"GtkFontButtonClass"],[3,"GtkFontChooserDialogClass"],[3,"GtkFontChooserIface"],[3,"GtkFontChooserWidgetClass"],[3,"GtkFontSelectionClass"],[3,"GtkFontSelectionDialogClass"],[3,"GtkFrameAccessibleClass"],[3,"GtkFrameClass"],[3,"GtkGLAreaClass"],[3,"GtkGridClass"],[3,"GtkHBoxClass"],[3,"GtkHButtonBoxClass"],[3,"GtkHPanedClass"],[3,"GtkHSVClass"],[3,"GtkHScaleClass"],[3,"GtkHScrollbarClass"],[3,"GtkHSeparatorClass"],[3,"GtkHandleBoxClass"],[3,"GtkHeaderBarClass"],[3,"GtkIMContextClass"],[3,"GtkIMContextInfo"],[3,"GtkIMContextSimpleClass"],[3,"GtkIMMulticontextClass"],[3,"GtkIconFactoryClass"],[3,"GtkIconThemeClass"],[3,"GtkIconViewAccessibleClass"],[3,"GtkIconViewClass"],[3,"GtkImageAccessibleClass"],[3,"GtkImageCellAccessibleClass"],[3,"GtkImageClass"],[3,"GtkImageMenuItemClass"],[3,"GtkInfoBarClass"],[3,"GtkInvisibleClass"],[3,"GtkLabelAccessibleClass"],[3,"GtkLabelClass"],[3,"GtkLayoutClass"],[3,"GtkLevelBarAccessibleClass"],[3,"GtkLevelBarClass"],[3,"GtkLinkButtonAccessibleClass"],[3,"GtkLinkButtonClass"],[3,"GtkListBoxAccessibleClass"],[3,"GtkListBoxClass"],[3,"GtkListBoxRowAccessibleClass"],[3,"GtkListBoxRowClass"],[3,"GtkListStoreClass"],[3,"GtkLockButtonAccessibleClass"],[3,"GtkLockButtonClass"],[3,"GtkMenuAccessibleClass"],[3,"GtkMenuBarClass"],[3,"GtkMenuButtonAccessibleClass"],[3,"GtkMenuButtonClass"],[3,"GtkMenuClass"],[3,"GtkMenuItemAccessibleClass"],[3,"GtkMenuItemClass"],[3,"GtkMenuShellAccessibleClass"],[3,"GtkMenuShellClass"],[3,"GtkMenuToolButtonClass"],[3,"GtkMessageDialogClass"],[3,"GtkMiscClass"],[3,"GtkMountOperationClass"],[3,"GtkNotebookAccessibleClass"],[3,"GtkNotebookClass"],[3,"GtkNotebookPageAccessibleClass"],[3,"GtkNumerableIconClass"],[3,"GtkOffscreenWindowClass"],[3,"GtkOrientableIface"],[3,"GtkOverlayClass"],[3,"GtkPageRange"],[3,"GtkPanedAccessibleClass"],[3,"GtkPanedClass"],[3,"GtkPlugClass"],[3,"GtkPopoverAccessibleClass"],[3,"GtkPopoverClass"],[3,"GtkPopoverMenuClass"],[3,"GtkPrintOperationClass"],[3,"GtkPrintOperationPreviewIface"],[3,"GtkProgressBarAccessibleClass"],[3,"GtkProgressBarClass"],[3,"GtkRadioActionClass"],[3,"GtkRadioActionEntry"],[3,"GtkRadioButtonAccessibleClass"],[3,"GtkRadioButtonClass"],[3,"GtkRadioMenuItemAccessibleClass"],[3,"GtkRadioMenuItemClass"],[3,"GtkRadioToolButtonClass"],[3,"GtkRangeAccessibleClass"],[3,"GtkRangeClass"],[3,"GtkRcProperty"],[3,"GtkRcStyleClass"],[3,"GtkRecentActionClass"],[3,"GtkRecentChooserDialogClass"],[3,"GtkRecentChooserIface"],[3,"GtkRecentChooserMenuClass"],[3,"GtkRecentChooserWidgetClass"],[3,"GtkRecentData"],[3,"GtkRecentFilterInfo"],[3,"GtkRecentManagerClass"],[3,"GtkRendererCellAccessibleClass"],[3,"GtkRequestedSize"],[3,"GtkRequisition"],[3,"GtkRevealerClass"],[3,"GtkScaleAccessibleClass"],[3,"GtkScaleButtonAccessibleClass"],[3,"GtkScaleButtonClass"],[3,"GtkScaleClass"],[3,"GtkScrollableInterface"],[3,"GtkScrollbarClass"],[3,"GtkScrolledWindowAccessibleClass"],[3,"GtkScrolledWindowClass"],[3,"GtkSearchBarClass"],[3,"GtkSearchEntryClass"],[3,"GtkSeparatorClass"],[3,"GtkSeparatorMenuItemClass"],[3,"GtkSeparatorToolItemClass"],[3,"GtkSettingsClass"],[3,"GtkSettingsValue"],[3,"GtkSizeGroupClass"],[3,"GtkSocketClass"],[3,"GtkSpinButtonAccessibleClass"],[3,"GtkSpinButtonClass"],[3,"GtkSpinnerAccessibleClass"],[3,"GtkSpinnerClass"],[3,"GtkStackClass"],[3,"GtkStackSidebarClass"],[3,"GtkStackSwitcherClass"],[3,"GtkStatusIconClass"],[3,"GtkStatusbarAccessibleClass"],[3,"GtkStatusbarClass"],[3,"GtkStockItem"],[3,"GtkStyleClass"],[3,"GtkStyleContextClass"],[3,"GtkStylePropertiesClass"],[3,"GtkStyleProviderIface"],[3,"GtkSwitchAccessibleClass"],[3,"GtkSwitchClass"],[3,"GtkTableChild"],[3,"GtkTableClass"],[3,"GtkTableRowCol"],[3,"GtkTargetEntry"],[3,"GtkTargetPair"],[3,"GtkTearoffMenuItemClass"],[3,"GtkTextAppearance"],[3,"GtkTextAttributes"],[3,"GtkTextBufferClass"],[3,"GtkTextCellAccessibleClass"],[3,"GtkTextChildAnchorClass"],[3,"GtkTextMarkClass"],[3,"GtkTextTagClass"],[3,"GtkTextTagTableClass"],[3,"GtkTextViewAccessibleClass"],[3,"GtkTextViewClass"],[3,"GtkThemingEngineClass"],[3,"GtkToggleActionClass"],[3,"GtkToggleActionEntry"],[3,"GtkToggleButtonAccessibleClass"],[3,"GtkToggleButtonClass"],[3,"GtkToggleToolButtonClass"],[3,"GtkToolButtonClass"],[3,"GtkToolItemClass"],[3,"GtkToolItemGroupClass"],[3,"GtkToolPaletteClass"],[3,"GtkToolShellIface"],[3,"GtkToolbarClass"],[3,"GtkToplevelAccessibleClass"],[3,"GtkTreeDragDestIface"],[3,"GtkTreeDragSourceIface"],[3,"GtkTreeIter"],[3,"GtkTreeModelFilterClass"],[3,"GtkTreeModelIface"],[3,"GtkTreeModelSortClass"],[3,"GtkTreeSelectionClass"],[3,"GtkTreeSortableIface"],[3,"GtkTreeStoreClass"],[3,"GtkTreeViewAccessibleClass"],[3,"GtkTreeViewClass"],[3,"GtkTreeViewColumnClass"],[3,"GtkUIManagerClass"],[3,"GtkVBoxClass"],[3,"GtkVButtonBoxClass"],[3,"GtkVPanedClass"],[3,"GtkVScaleClass"],[3,"GtkVScrollbarClass"],[3,"GtkVSeparatorClass"],[3,"GtkViewportClass"],[3,"GtkVolumeButtonClass"],[3,"GtkWidgetAccessibleClass"],[3,"GtkWidgetAuxInfo"],[3,"GtkWidgetClass"],[3,"GtkWindowAccessibleClass"],[3,"GtkWindowClass"],[3,"GtkWindowGroupClass"],[4,"GtkAlign"],[4,"GtkArrowPlacement"],[4,"GtkArrowType"],[4,"GtkAssistantPageType"],[4,"GtkBaselinePosition"],[4,"GtkBorderStyle"],[4,"GtkBuilderError"],[4,"GtkButtonBoxStyle"],[4,"GtkButtonRole"],[4,"GtkButtonsType"],[4,"GtkCellRendererAccelMode"],[4,"GtkCellRendererMode"],[4,"GtkCornerType"],[4,"GtkCssProviderError"],[4,"GtkCssSectionType"],[4,"GtkDeleteType"],[4,"GtkDirectionType"],[4,"GtkDragResult"],[4,"GtkEntryIconPosition"],[4,"GtkEventSequenceState"],[4,"GtkExpanderStyle"],[4,"GtkFileChooserAction"],[4,"GtkFileChooserConfirmation"],[4,"GtkFileChooserError"],[4,"GtkIMPreeditStyle"],[4,"GtkIMStatusStyle"],[4,"GtkIconSize"],[4,"GtkIconThemeError"],[4,"GtkIconViewDropPosition"],[4,"GtkImageType"],[4,"GtkInputPurpose"],[4,"GtkJustification"],[4,"GtkLevelBarMode"],[4,"GtkLicense"],[4,"GtkMenuDirectionType"],[4,"GtkMessageType"],[4,"GtkMovementStep"],[4,"GtkNotebookTab"],[4,"GtkNumberUpLayout"],[4,"GtkOrientation"],[4,"GtkPackDirection"],[4,"GtkPackType"],[4,"GtkPageOrientation"],[4,"GtkPageSet"],[4,"GtkPanDirection"],[4,"GtkPathPriorityType"],[4,"GtkPathType"],[4,"GtkPolicyType"],[4,"GtkPositionType"],[4,"GtkPrintDuplex"],[4,"GtkPrintError"],[4,"GtkPrintOperationAction"],[4,"GtkPrintOperationResult"],[4,"GtkPrintPages"],[4,"GtkPrintQuality"],[4,"GtkPrintStatus"],[4,"GtkPropagationPhase"],[4,"GtkRcTokenType"],[4,"GtkRecentChooserError"],[4,"GtkRecentManagerError"],[4,"GtkRecentSortType"],[4,"GtkReliefStyle"],[4,"GtkResizeMode"],[4,"GtkResponseType"],[4,"GtkRevealerTransitionType"],[4,"GtkScrollStep"],[4,"GtkScrollType"],[4,"GtkScrollablePolicy"],[4,"GtkSelectionMode"],[4,"GtkSensitivityType"],[4,"GtkShadowType"],[4,"GtkSizeGroupMode"],[4,"GtkSizeRequestMode"],[4,"GtkSortType"],[4,"GtkSpinButtonUpdatePolicy"],[4,"GtkSpinType"],[4,"GtkStackTransitionType"],[4,"GtkStateType"],[4,"GtkTextBufferTargetInfo"],[4,"GtkTextDirection"],[4,"GtkTextExtendSelection"],[4,"GtkTextViewLayer"],[4,"GtkTextWindowType"],[4,"GtkToolbarSpaceStyle"],[4,"GtkToolbarStyle"],[4,"GtkTreeViewColumnSizing"],[4,"GtkTreeViewDropPosition"],[4,"GtkTreeViewGridLines"],[4,"GtkUnit"],[4,"GtkWidgetHelpType"],[4,"GtkWindowPosition"],[4,"GtkWindowType"],[4,"GtkWrapMode"],[3,"GtkAccelFlags"],[3,"GtkApplicationInhibitFlags"],[3,"GtkAttachOptions"],[3,"GtkCalendarDisplayOptions"],[3,"GtkCellRendererState"],[3,"GtkDebugFlag"],[3,"GtkDestDefaults"],[3,"GtkDialogFlags"],[3,"GtkFileFilterFlags"],[3,"GtkIconLookupFlags"],[3,"GtkInputHints"],[3,"GtkJunctionSides"],[3,"GtkPlacesOpenFlags"],[3,"GtkRcFlags"],[3,"GtkRecentFilterFlags"],[3,"GtkRegionFlags"],[3,"GtkStateFlags"],[3,"GtkTargetFlags"],[3,"GtkTextSearchFlags"],[3,"GtkToolPaletteDragTargets"],[3,"GtkTreeModelFlags"],[3,"GtkUIManagerItemType"]]};
searchIndex["gdk"] = {"doc":"","items":[[11,"eq","gdk_sys","",0,{"inputs":[{"name":"gdkaxisuse"},{"name":"gdkaxisuse"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"gdkaxisuse"},{"name":"gdkaxisuse"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"gdkaxisuse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"gdkaxisuse"}],"output":{"name":"gdkaxisuse"}}],[11,"eq","","",1,{"inputs":[{"name":"gdkbyteorder"},{"name":"gdkbyteorder"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"gdkbyteorder"},{"name":"gdkbyteorder"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"gdkbyteorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"gdkbyteorder"}],"output":{"name":"gdkbyteorder"}}],[11,"eq","","",2,{"inputs":[{"name":"gdkcrossingmode"},{"name":"gdkcrossingmode"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"gdkcrossingmode"},{"name":"gdkcrossingmode"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"gdkcrossingmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"gdkcrossingmode"}],"output":{"name":"gdkcrossingmode"}}],[11,"eq","","",3,{"inputs":[{"name":"gdkcursortype"},{"name":"gdkcursortype"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"gdkcursortype"},{"name":"gdkcursortype"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"gdkcursortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"gdkcursortype"}],"output":{"name":"gdkcursortype"}}],[11,"eq","","",4,{"inputs":[{"name":"gdkdevicetype"},{"name":"gdkdevicetype"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"gdkdevicetype"},{"name":"gdkdevicetype"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"gdkdevicetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"gdkdevicetype"}],"output":{"name":"gdkdevicetype"}}],[11,"eq","","",5,{"inputs":[{"name":"gdkdragprotocol"},{"name":"gdkdragprotocol"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"gdkdragprotocol"},{"name":"gdkdragprotocol"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"gdkdragprotocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"gdkdragprotocol"}],"output":{"name":"gdkdragprotocol"}}],[11,"eq","","",6,{"inputs":[{"name":"gdkeventtype"},{"name":"gdkeventtype"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"gdkeventtype"},{"name":"gdkeventtype"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"gdkeventtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"gdkeventtype"}],"output":{"name":"gdkeventtype"}}],[11,"eq","","",7,{"inputs":[{"name":"gdkfilterreturn"},{"name":"gdkfilterreturn"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"gdkfilterreturn"},{"name":"gdkfilterreturn"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"gdkfilterreturn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"gdkfilterreturn"}],"output":{"name":"gdkfilterreturn"}}],[11,"eq","","",8,{"inputs":[{"name":"gdkfullscreenmode"},{"name":"gdkfullscreenmode"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"gdkfullscreenmode"},{"name":"gdkfullscreenmode"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"gdkfullscreenmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"gdkfullscreenmode"}],"output":{"name":"gdkfullscreenmode"}}],[11,"eq","","",9,{"inputs":[{"name":"gdkglerror"},{"name":"gdkglerror"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"gdkglerror"},{"name":"gdkglerror"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"gdkglerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"gdkglerror"}],"output":{"name":"gdkglerror"}}],[11,"eq","","",10,{"inputs":[{"name":"gdkgrabownership"},{"name":"gdkgrabownership"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"gdkgrabownership"},{"name":"gdkgrabownership"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"gdkgrabownership"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"gdkgrabownership"}],"output":{"name":"gdkgrabownership"}}],[11,"eq","","",11,{"inputs":[{"name":"gdkgrabstatus"},{"name":"gdkgrabstatus"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"gdkgrabstatus"},{"name":"gdkgrabstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"gdkgrabstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"gdkgrabstatus"}],"output":{"name":"gdkgrabstatus"}}],[11,"eq","","",12,{"inputs":[{"name":"gdkgravity"},{"name":"gdkgravity"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"gdkgravity"},{"name":"gdkgravity"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"gdkgravity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"gdkgravity"}],"output":{"name":"gdkgravity"}}],[11,"eq","","",13,{"inputs":[{"name":"gdkinputmode"},{"name":"gdkinputmode"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"gdkinputmode"},{"name":"gdkinputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"gdkinputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"gdkinputmode"}],"output":{"name":"gdkinputmode"}}],[11,"eq","","",14,{"inputs":[{"name":"gdkinputsource"},{"name":"gdkinputsource"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"gdkinputsource"},{"name":"gdkinputsource"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"gdkinputsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"gdkinputsource"}],"output":{"name":"gdkinputsource"}}],[11,"eq","","",15,{"inputs":[{"name":"gdkmodifierintent"},{"name":"gdkmodifierintent"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"gdkmodifierintent"},{"name":"gdkmodifierintent"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"gdkmodifierintent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"gdkmodifierintent"}],"output":{"name":"gdkmodifierintent"}}],[11,"eq","","",16,{"inputs":[{"name":"gdknotifytype"},{"name":"gdknotifytype"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"gdknotifytype"},{"name":"gdknotifytype"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"gdknotifytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"gdknotifytype"}],"output":{"name":"gdknotifytype"}}],[11,"eq","","",17,{"inputs":[{"name":"gdkownerchange"},{"name":"gdkownerchange"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"gdkownerchange"},{"name":"gdkownerchange"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"gdkownerchange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"gdkownerchange"}],"output":{"name":"gdkownerchange"}}],[11,"eq","","",18,{"inputs":[{"name":"gdkpropmode"},{"name":"gdkpropmode"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"gdkpropmode"},{"name":"gdkpropmode"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"gdkpropmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"gdkpropmode"}],"output":{"name":"gdkpropmode"}}],[11,"eq","","",19,{"inputs":[{"name":"gdkpropertystate"},{"name":"gdkpropertystate"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"gdkpropertystate"},{"name":"gdkpropertystate"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"gdkpropertystate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"gdkpropertystate"}],"output":{"name":"gdkpropertystate"}}],[11,"eq","","",20,{"inputs":[{"name":"gdkscrolldirection"},{"name":"gdkscrolldirection"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"gdkscrolldirection"},{"name":"gdkscrolldirection"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"gdkscrolldirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"gdkscrolldirection"}],"output":{"name":"gdkscrolldirection"}}],[11,"eq","","",21,{"inputs":[{"name":"gdksettingaction"},{"name":"gdksettingaction"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"gdksettingaction"},{"name":"gdksettingaction"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"gdksettingaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"gdksettingaction"}],"output":{"name":"gdksettingaction"}}],[11,"eq","","",22,{"inputs":[{"name":"gdkstatus"},{"name":"gdkstatus"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"gdkstatus"},{"name":"gdkstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"gdkstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"gdkstatus"}],"output":{"name":"gdkstatus"}}],[11,"eq","","",23,{"inputs":[{"name":"gdkvisibilitystate"},{"name":"gdkvisibilitystate"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"gdkvisibilitystate"},{"name":"gdkvisibilitystate"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"gdkvisibilitystate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"gdkvisibilitystate"}],"output":{"name":"gdkvisibilitystate"}}],[11,"eq","","",24,{"inputs":[{"name":"gdkvisualtype"},{"name":"gdkvisualtype"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"gdkvisualtype"},{"name":"gdkvisualtype"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"gdkvisualtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"gdkvisualtype"}],"output":{"name":"gdkvisualtype"}}],[11,"eq","","",25,{"inputs":[{"name":"gdkwindowedge"},{"name":"gdkwindowedge"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"gdkwindowedge"},{"name":"gdkwindowedge"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"gdkwindowedge"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"gdkwindowedge"}],"output":{"name":"gdkwindowedge"}}],[11,"eq","","",26,{"inputs":[{"name":"gdkwindowtype"},{"name":"gdkwindowtype"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"gdkwindowtype"},{"name":"gdkwindowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"gdkwindowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"gdkwindowtype"}],"output":{"name":"gdkwindowtype"}}],[11,"eq","","",27,{"inputs":[{"name":"gdkwindowtypehint"},{"name":"gdkwindowtypehint"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"gdkwindowtypehint"},{"name":"gdkwindowtypehint"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"gdkwindowtypehint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"gdkwindowtypehint"}],"output":{"name":"gdkwindowtypehint"}}],[11,"eq","","",28,{"inputs":[{"name":"gdkwindowwindowclass"},{"name":"gdkwindowwindowclass"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"gdkwindowwindowclass"},{"name":"gdkwindowwindowclass"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"gdkwindowwindowclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"gdkwindowwindowclass"}],"output":{"name":"gdkwindowwindowclass"}}],[11,"hash","","",29,null],[11,"cmp","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"eq","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"gdkdragaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"gdkdragaction"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"gdkdragaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"u32"}],"output":{"name":"gdkdragaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",29,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",29,null],[11,"remove","","Removes the specified flags in-place.",29,null],[11,"toggle","","Toggles the specified flags in-place.",29,null],[11,"bitor","","Returns the union of the two sets of flags.",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"sub","","Returns the set difference of the two sets of flags.",29,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"not","","Returns the complement of this set of flags.",29,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"gdkdragaction"}}],[11,"hash","","",30,null],[11,"cmp","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"eq","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"gdkeventmask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"gdkeventmask"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"gdkeventmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"u32"}],"output":{"name":"gdkeventmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",30,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",30,null],[11,"remove","","Removes the specified flags in-place.",30,null],[11,"toggle","","Toggles the specified flags in-place.",30,null],[11,"bitor","","Returns the union of the two sets of flags.",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",30,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"not","","Returns the complement of this set of flags.",30,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"gdkeventmask"}}],[11,"hash","","",31,null],[11,"cmp","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"option"}}],[11,"lt","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"le","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"gt","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"ge","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"eq","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",31,{"inputs":[],"output":{"name":"gdkframeclockphase"}}],[11,"all","","Returns the set containing all flags.",31,{"inputs":[],"output":{"name":"gdkframeclockphase"}}],[11,"bits","","Returns the raw value of the flags currently stored.",31,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",31,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",31,{"inputs":[{"name":"u32"}],"output":{"name":"gdkframeclockphase"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",31,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",31,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",31,null],[11,"remove","","Removes the specified flags in-place.",31,null],[11,"toggle","","Toggles the specified flags in-place.",31,null],[11,"bitor","","Returns the union of the two sets of flags.",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"sub","","Returns the set difference of the two sets of flags.",31,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"not","","Returns the complement of this set of flags.",31,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"from_iter","","",31,{"inputs":[{"name":"t"}],"output":{"name":"gdkframeclockphase"}}],[11,"hash","","",32,null],[11,"cmp","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"eq","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",32,{"inputs":[],"output":{"name":"gdkmodifiertype"}}],[11,"all","","Returns the set containing all flags.",32,{"inputs":[],"output":{"name":"gdkmodifiertype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",32,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",32,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",32,{"inputs":[{"name":"u32"}],"output":{"name":"gdkmodifiertype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",32,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",32,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",32,null],[11,"remove","","Removes the specified flags in-place.",32,null],[11,"toggle","","Toggles the specified flags in-place.",32,null],[11,"bitor","","Returns the union of the two sets of flags.",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",32,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"not","","Returns the complement of this set of flags.",32,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"from_iter","","",32,{"inputs":[{"name":"t"}],"output":{"name":"gdkmodifiertype"}}],[11,"hash","","",33,null],[11,"cmp","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"eq","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",33,{"inputs":[],"output":{"name":"gdkwmdecoration"}}],[11,"all","","Returns the set containing all flags.",33,{"inputs":[],"output":{"name":"gdkwmdecoration"}}],[11,"bits","","Returns the raw value of the flags currently stored.",33,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",33,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",33,{"inputs":[{"name":"u32"}],"output":{"name":"gdkwmdecoration"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",33,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",33,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",33,null],[11,"remove","","Removes the specified flags in-place.",33,null],[11,"toggle","","Toggles the specified flags in-place.",33,null],[11,"bitor","","Returns the union of the two sets of flags.",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"sub","","Returns the set difference of the two sets of flags.",33,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"not","","Returns the complement of this set of flags.",33,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"from_iter","","",33,{"inputs":[{"name":"t"}],"output":{"name":"gdkwmdecoration"}}],[11,"hash","","",34,null],[11,"cmp","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"option"}}],[11,"lt","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"le","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"gt","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"ge","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"eq","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",34,{"inputs":[],"output":{"name":"gdkwmfunction"}}],[11,"all","","Returns the set containing all flags.",34,{"inputs":[],"output":{"name":"gdkwmfunction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",34,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",34,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",34,{"inputs":[{"name":"u32"}],"output":{"name":"gdkwmfunction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",34,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",34,null],[11,"remove","","Removes the specified flags in-place.",34,null],[11,"toggle","","Toggles the specified flags in-place.",34,null],[11,"bitor","","Returns the union of the two sets of flags.",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"sub","","Returns the set difference of the two sets of flags.",34,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"not","","Returns the complement of this set of flags.",34,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"from_iter","","",34,{"inputs":[{"name":"t"}],"output":{"name":"gdkwmfunction"}}],[11,"hash","","",35,null],[11,"cmp","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"option"}}],[11,"lt","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"le","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"gt","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"ge","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"eq","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",35,{"inputs":[],"output":{"name":"gdkwindowattributestype"}}],[11,"all","","Returns the set containing all flags.",35,{"inputs":[],"output":{"name":"gdkwindowattributestype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",35,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",35,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",35,{"inputs":[{"name":"u32"}],"output":{"name":"gdkwindowattributestype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",35,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",35,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",35,null],[11,"remove","","Removes the specified flags in-place.",35,null],[11,"toggle","","Toggles the specified flags in-place.",35,null],[11,"bitor","","Returns the union of the two sets of flags.",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",35,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"not","","Returns the complement of this set of flags.",35,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"from_iter","","",35,{"inputs":[{"name":"t"}],"output":{"name":"gdkwindowattributestype"}}],[11,"hash","","",36,null],[11,"cmp","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"eq","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",36,{"inputs":[],"output":{"name":"gdkwindowhints"}}],[11,"all","","Returns the set containing all flags.",36,{"inputs":[],"output":{"name":"gdkwindowhints"}}],[11,"bits","","Returns the raw value of the flags currently stored.",36,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",36,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",36,{"inputs":[{"name":"u32"}],"output":{"name":"gdkwindowhints"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",36,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",36,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",36,null],[11,"remove","","Removes the specified flags in-place.",36,null],[11,"toggle","","Toggles the specified flags in-place.",36,null],[11,"bitor","","Returns the union of the two sets of flags.",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"sub","","Returns the set difference of the two sets of flags.",36,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"not","","Returns the complement of this set of flags.",36,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"from_iter","","",36,{"inputs":[{"name":"t"}],"output":{"name":"gdkwindowhints"}}],[11,"hash","","",37,null],[11,"cmp","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"option"}}],[11,"lt","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"le","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"gt","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"ge","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"eq","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",37,{"inputs":[],"output":{"name":"gdkwindowstate"}}],[11,"all","","Returns the set containing all flags.",37,{"inputs":[],"output":{"name":"gdkwindowstate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",37,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",37,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",37,{"inputs":[{"name":"u32"}],"output":{"name":"gdkwindowstate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",37,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",37,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",37,null],[11,"remove","","Removes the specified flags in-place.",37,null],[11,"toggle","","Toggles the specified flags in-place.",37,null],[11,"bitor","","Returns the union of the two sets of flags.",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"sub","","Returns the set difference of the two sets of flags.",37,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"not","","Returns the complement of this set of flags.",37,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"from_iter","","",37,{"inputs":[{"name":"t"}],"output":{"name":"gdkwindowstate"}}],[3,"Color","gdk","",null,null],[12,"pixel","","",38,null],[12,"red","","",38,null],[12,"green","","",38,null],[12,"blue","","",38,null],[3,"RGBA","","",null,null],[12,"red","","",39,null],[12,"green","","",39,null],[12,"blue","","",39,null],[12,"alpha","","",39,null],[4,"AxisUse","","An enumeration describing the way in which a device\naxis (valuator) maps onto the predefined valuator\ntypes that GTK+ understands.",null,null],[13,"Ignore","","the axis is ignored.",0,null],[13,"X","","the axis is used as the x axis.",0,null],[13,"Y","","the axis is used as the y axis.",0,null],[13,"Pressure","","the axis is used for pressure information.",0,null],[13,"Xtilt","","the axis is used for x tilt information.",0,null],[13,"Ytilt","","the axis is used for y tilt information.",0,null],[13,"Wheel","","the axis is used for wheel information.",0,null],[13,"Last","","a constant equal to the numerically highest axis value.",0,null],[4,"CrossingMode","","Specifies the crossing mode for `EventCrossing`.",null,null],[13,"Normal","","crossing because of pointer motion.",2,null],[13,"Grab","","crossing because a grab is activated.",2,null],[13,"Ungrab","","crossing because a grab is deactivated.",2,null],[13,"GtkGrab","","crossing because a GTK+ grab is activated.",2,null],[13,"GtkUngrab","","crossing because a GTK+ grab is deactivated.",2,null],[13,"StateChanged","","crossing because a GTK+ widget changed\nstate (e.g. sensitivity).",2,null],[13,"TouchBegin","","crossing because a touch sequence has begun,\nthis event is synthetic as the pointer might have not left the window.",2,null],[13,"TouchEnd","","crossing because a touch sequence has ended,\nthis event is synthetic as the pointer might have not left the window.",2,null],[13,"DeviceSwitch","","crossing because of a device switch (i.e.\na mouse taking control of the pointer after a touch device), this event\nis synthetic as the pointer didn’t leave the window.",2,null],[3,"DragAction","","Used in `DragContext` to indicate what the destination\nshould do with the dropped data.",null,null],[4,"DragProtocol","","Used in `DragContext` to indicate the protocol according to\nwhich DND is done.",null,null],[13,"None","","no protocol.",5,null],[13,"Motif","","The Motif DND protocol. No longer supported",5,null],[13,"Xdnd","","The Xdnd protocol.",5,null],[13,"Rootwin","","An extension to the Xdnd protocol for\nunclaimed root window drops.",5,null],[13,"Win32Dropfiles","","The simple WM_DROPFILES protocol.",5,null],[13,"Ole2","","The complex OLE2 DND protocol (not implemented).",5,null],[13,"Local","","Intra-application DND.",5,null],[13,"Wayland","","Wayland DND protocol.",5,null],[3,"EventMask","","A set of bit-flags to indicate which events a window is to receive.\nMost of these masks map onto one or more of the `EventType` event types\nabove.",null,null],[4,"EventType","","Specifies the type of the event.",null,null],[13,"Nothing","","a special code to indicate a null event.",6,null],[13,"Delete","","the window manager has requested that the toplevel window be\nhidden or destroyed, usually when the user clicks on a special icon in the\ntitle bar.",6,null],[13,"Destroy","","the window has been destroyed.",6,null],[13,"Expose","","all or part of the window has become visible and needs to be\nredrawn.",6,null],[13,"MotionNotify","","the pointer (usually a mouse) has moved.",6,null],[13,"ButtonPress","","a mouse button has been pressed.",6,null],[13,"DoubleButtonPress","","alias for `EventType::2buttonPress`, added in 3.6.",6,null],[13,"TripleButtonPress","","alias for `EventType::3buttonPress`, added in 3.6.",6,null],[13,"ButtonRelease","","a mouse button has been released.",6,null],[13,"KeyPress","","a key has been pressed.",6,null],[13,"KeyRelease","","a key has been released.",6,null],[13,"EnterNotify","","the pointer has entered the window.",6,null],[13,"LeaveNotify","","the pointer has left the window.",6,null],[13,"FocusChange","","the keyboard focus has entered or left the window.",6,null],[13,"Configure","","the size, position or stacking order of the window has changed.\nNote that GTK+ discards these events for `WindowType::Child` windows.",6,null],[13,"Map","","the window has been mapped.",6,null],[13,"Unmap","","the window has been unmapped.",6,null],[13,"PropertyNotify","","a property on the window has been changed or deleted.",6,null],[13,"SelectionClear","","the application has lost ownership of a selection.",6,null],[13,"SelectionRequest","","another application has requested a selection.",6,null],[13,"SelectionNotify","","a selection has been received.",6,null],[13,"ProximityIn","","an input device has moved into contact with a sensing\nsurface (e.g. a touchscreen or graphics tablet).",6,null],[13,"ProximityOut","","an input device has moved out of contact with a sensing\nsurface.",6,null],[13,"DragEnter","","the mouse has entered the window while a drag is in progress.",6,null],[13,"DragLeave","","the mouse has left the window while a drag is in progress.",6,null],[13,"DragMotion","","the mouse has moved in the window while a drag is in\nprogress.",6,null],[13,"DragStatus","","the status of the drag operation initiated by the window\nhas changed.",6,null],[13,"DropStart","","a drop operation onto the window has started.",6,null],[13,"DropFinished","","the drop operation initiated by the window has completed.",6,null],[13,"ClientEvent","","a message has been received from another application.",6,null],[13,"VisibilityNotify","","the window visibility status has changed.",6,null],[13,"Scroll","","the scroll wheel was turned",6,null],[13,"WindowState","","the state of a window has changed. See `WindowState`\nfor the possible window states",6,null],[13,"Setting","","a setting has been modified.",6,null],[13,"OwnerChange","","the owner of a selection has changed. This event type\nwas added in 2.6",6,null],[13,"GrabBroken","","a pointer or keyboard grab was broken. This event type\nwas added in 2.8.",6,null],[13,"Damage","","the content of the window has been changed. This event type\nwas added in 2.14.",6,null],[13,"TouchBegin","","A new touch event sequence has just started. This event\ntype was added in 3.4.",6,null],[13,"TouchUpdate","","A touch event sequence has been updated. This event type\nwas added in 3.4.",6,null],[13,"TouchEnd","","A touch event sequence has finished. This event type\nwas added in 3.4.",6,null],[13,"TouchCancel","","A touch event sequence has been canceled. This event type\nwas added in 3.4.",6,null],[4,"FullscreenMode","","Indicates which monitor (in a multi-head setup) a window should span over\nwhen in fullscreen mode.",null,null],[13,"CurrentMonitor","","Fullscreen on current monitor only.",8,null],[13,"AllMonitors","","Span across all monitors when fullscreen.",8,null],[4,"GrabOwnership","","Defines how device grabs interact with other devices.",null,null],[13,"None","","All other devices’ events are allowed.",10,null],[13,"Window","","Other devices’ events are blocked for the grab window.",10,null],[13,"Application","","Other devices’ events are blocked for the whole application.",10,null],[4,"GrabStatus","","Returned by `Device::grab`, `gdk_pointer_grab` and `gdk_keyboard_grab` to\nindicate success or the reason for the failure of the grab attempt.",null,null],[13,"Success","","the resource was successfully grabbed.",11,null],[13,"AlreadyGrabbed","","the resource is actively grabbed by another client.",11,null],[13,"InvalidTime","","the resource was grabbed more recently than the\nspecified time.",11,null],[13,"NotViewable","","the grab window or the `confine_to` window are not\nviewable.",11,null],[13,"Frozen","","the resource is frozen by an active grab of another client.",11,null],[13,"Failed","","the grab failed for some other reason.",11,null],[4,"Gravity","","Defines the reference point of a window and the meaning of coordinates\npassed to `gtk_window_move`. See `gtk_window_move` and the &quot;implementation\nnotes&quot; section of the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nspecification for more details.",null,null],[13,"NorthWest","","the reference point is at the top left corner.",12,null],[13,"North","","the reference point is in the middle of the top edge.",12,null],[13,"NorthEast","","the reference point is at the top right corner.",12,null],[13,"West","","the reference point is at the middle of the left edge.",12,null],[13,"Center","","the reference point is at the center of the window.",12,null],[13,"East","","the reference point is at the middle of the right edge.",12,null],[13,"SouthWest","","the reference point is at the lower left corner.",12,null],[13,"South","","the reference point is at the middle of the lower edge.",12,null],[13,"SouthEast","","the reference point is at the lower right corner.",12,null],[13,"Static","","the reference point is at the top left corner of the\nwindow itself, ignoring window manager decorations.",12,null],[4,"InputMode","","An enumeration that describes the mode of an input device.",null,null],[13,"Disabled","","the device is disabled and will not report any events.",13,null],[13,"Screen","","the device is enabled. The device’s coordinate space\nmaps to the entire screen.",13,null],[13,"Window","","the device is enabled. The device’s coordinate space\nis mapped to a single window. The manner in which this window\nis chosen is undefined, but it will typically be the same\nway in which the focus window for key events is determined.",13,null],[4,"InputSource","","An enumeration describing the type of an input device in general terms.",null,null],[13,"Mouse","","the device is a mouse. (This will be reported for the core\npointer, even if it is something else, such as a trackball.)",14,null],[13,"Pen","","the device is a stylus of a graphics tablet or similar device.",14,null],[13,"Eraser","","the device is an eraser. Typically, this would be the other end\nof a stylus on a graphics tablet.",14,null],[13,"Cursor","","the device is a graphics tablet “puck” or similar device.",14,null],[13,"Keyboard","","the device is a keyboard.",14,null],[13,"Touchscreen","","the device is a direct-input touch device, such\nas a touchscreen or tablet. This device type has been added in 3.4.",14,null],[13,"Touchpad","","the device is an indirect touch device, such\nas a touchpad. This device type has been added in 3.4.",14,null],[4,"ModifierIntent","","This enum is used with `Keymap::get_modifier_mask`\nin order to determine what modifiers the\ncurrently used windowing system backend uses for particular\npurposes. For example, on X11/Windows, the Control key is used for\ninvoking menu shortcuts (accelerators), whereas on Apple computers\nit’s the Command key (which correspond to `ModifierType::ControlMask` and\n`ModifierType::Mod2Mask`, respectively).",null,null],[13,"PrimaryAccelerator","","the primary modifier used to invoke\nmenu accelerators.",15,null],[13,"ContextMenu","","the modifier used to invoke context menus.\nNote that mouse button 3 always triggers context menus. When this modifier\nis not 0, it additionally triggers context menus when used with mouse button 1.",15,null],[13,"ExtendSelection","","the modifier used to extend selections\nusing `modifier`-click or `modifier`-cursor-key",15,null],[13,"ModifySelection","","the modifier used to modify selections,\nwhich in most cases means toggling the clicked item into or out of the selection.",15,null],[13,"NoTextInput","","when any of these modifiers is pressed, the\nkey event cannot produce a symbol directly. This is meant to be used for\ninput methods, and for use cases like typeahead search.",15,null],[13,"ShiftGroup","","the modifier that switches between keyboard\ngroups (AltGr on X11/Windows and Option/Alt on OS X).",15,null],[3,"ModifierType","","A set of bit-flags to indicate the state of modifier keys and mouse buttons\nin various event types. Typical modifier keys are Shift, Control, Meta,\nSuper, Hyper, Alt, Compose, Apple, CapsLock or ShiftLock.",null,null],[4,"NotifyType","","Specifies the kind of crossing for `EventCrossing`.",null,null],[13,"Ancestor","","the window is entered from an ancestor or\nleft towards an ancestor.",16,null],[13,"Virtual","","the pointer moves between an ancestor and an\ninferior of the window.",16,null],[13,"Inferior","","the window is entered from an inferior or\nleft towards an inferior.",16,null],[13,"Nonlinear","","the window is entered from or left towards\na window which is neither an ancestor nor an inferior.",16,null],[13,"NonlinearVirtual","","the pointer moves between two windows\nwhich are not ancestors of each other and the window is part of\nthe ancestor chain between one of these windows and their least\ncommon ancestor.",16,null],[13,"Unknown","","an unknown type of enter/leave event occurred.",16,null],[4,"OwnerChange","","Specifies why a selection ownership was changed.",null,null],[13,"NewOwner","","some other app claimed the ownership",17,null],[13,"Destroy","","the window was destroyed",17,null],[13,"Close","","the client was closed",17,null],[4,"PropertyState","","Specifies the type of a property change for a `EventProperty`.",null,null],[13,"NewValue","","the property value was changed.",19,null],[13,"Delete","","the property was deleted.",19,null],[4,"ScrollDirection","","Specifies the direction for `EventScroll`.",null,null],[13,"Up","","the window is scrolled up.",20,null],[13,"Down","","the window is scrolled down.",20,null],[13,"Left","","the window is scrolled to the left.",20,null],[13,"Right","","the window is scrolled to the right.",20,null],[13,"Smooth","","the scrolling is determined by the delta values\nin `EventScroll`. See `gdk_event_get_scroll_deltas`. Since: 3.4",20,null],[4,"SettingAction","","Specifies the kind of modification applied to a setting in a\n`EventSetting`.",null,null],[13,"New","","a setting was added.",21,null],[13,"Changed","","a setting was changed.",21,null],[13,"Deleted","","a setting was deleted.",21,null],[4,"VisibilityState","","Specifies the visiblity status of a window for a `EventVisibility`.",null,null],[13,"Unobscured","","the window is completely visible.",23,null],[13,"Partial","","the window is partially visible.",23,null],[13,"FullyObscured","","the window is not visible at all.",23,null],[3,"WMDecoration","","These are hints originally defined by the Motif toolkit.\nThe window manager can use them when determining how to decorate\nthe window. The hint must be set before mapping the window.",null,null],[3,"WMFunction","","These are hints originally defined by the Motif toolkit. The window manager\ncan use them when determining the functions to offer for the window. The\nhint must be set before mapping the window.",null,null],[4,"WindowEdge","","Determines a window edge or corner.",null,null],[13,"NorthWest","","the top left corner.",25,null],[13,"North","","the top edge.",25,null],[13,"NorthEast","","the top right corner.",25,null],[13,"West","","the left edge.",25,null],[13,"East","","the right edge.",25,null],[13,"SouthWest","","the lower left corner.",25,null],[13,"South","","the lower edge.",25,null],[13,"SouthEast","","the lower right corner.",25,null],[3,"WindowHints","","Used to indicate which fields of a `Geometry` struct should be paid\nattention to. Also, the presence/absence of `WindowHints::Pos`,\n`WindowHints::UserPos`, and `WindowHints::UserSize` is significant, though they don&#39;t\ndirectly refer to `Geometry` fields. `WindowHints::UserPos` will be set\nautomatically by ``GtkWindow`` if you call `gtk_window_move`.\n`WindowHints::UserPos` and `WindowHints::UserSize` should be set if the user\nspecified a size/position using a --geometry command-line argument;\n`gtk_window_parse_geometry` automatically sets these flags.",null,null],[3,"WindowState","","Specifies the state of a toplevel window.",null,null],[4,"WindowType","","Describes the kind of window.",null,null],[13,"Root","","root window; this window has no parent, covers the entire\nscreen, and is created by the window system",26,null],[13,"Toplevel","","toplevel window (used to implement ``GtkWindow``)",26,null],[13,"Child","","child window (used to implement e.g. ``GtkEntry``)",26,null],[13,"Temp","","override redirect temporary window (used to implement\n``GtkMenu``)",26,null],[13,"Foreign","","foreign window (see `gdk_window_foreign_new`)",26,null],[13,"Offscreen","","offscreen window (see\n[Offscreen Windows][OFFSCREEN-WINDOWS]). Since 2.18",26,null],[13,"Subsurface","","subsurface-based window; This window is visually\ntied to a toplevel, and is moved/stacked with it. Currently this window\ntype is only implemented in Wayland. Since 3.14",26,null],[4,"WindowTypeHint","","These are hints for the window manager that indicate what type of function\nthe window has. The window manager can use this when determining decoration\nand behaviour of the window. The hint must be set before mapping the window.",null,null],[13,"Normal","","Normal toplevel window.",27,null],[13,"Dialog","","Dialog window.",27,null],[13,"Menu","","Window used to implement a menu; GTK+ uses\nthis hint only for torn-off menus, see ``GtkTearoffMenuItem``.",27,null],[13,"Toolbar","","Window used to implement toolbars.",27,null],[13,"Splashscreen","","Window used to display a splash\nscreen during application startup.",27,null],[13,"Utility","","Utility windows which are not detached\ntoolbars or dialogs.",27,null],[13,"Dock","","Used for creating dock or panel windows.",27,null],[13,"Desktop","","Used for creating the desktop background\nwindow.",27,null],[13,"DropdownMenu","","A menu that belongs to a menubar.",27,null],[13,"PopupMenu","","A menu that does not belong to a menubar,\ne.g. a context menu.",27,null],[13,"Tooltip","","A tooltip.",27,null],[13,"Notification","","A notification - typically a “bubble”\nthat belongs to a status icon.",27,null],[13,"Combo","","A popup from a combo box.",27,null],[13,"Dnd","","A window that is used to implement a DND cursor.",27,null],[4,"WindowWindowClass","","`WindowWindowClass::InputOutput` windows are the standard kind of window you might expect.\nSuch windows receive events and are also displayed on screen.\n`WindowWindowClass::InputOnly` windows are invisible; they are usually placed above other\nwindows in order to trap or filter the events. You can’t draw on\n`WindowWindowClass::InputOnly` windows.",null,null],[13,"InputOutput","","window for graphics and events",28,null],[13,"InputOnly","","window for events only",28,null],[3,"AppLaunchContext","","`AppLaunchContext` is an implementation of `gio::AppLaunchContext` that\nhandles launching an application in a graphical context. It provides\nstartup notification and allows to launch applications on a specific\nscreen or workspace.",null,null],[3,"Atom","","",null,null],[3,"Cursor","","A `Cursor` represents a cursor. Its contents are private.",null,null],[3,"Device","","The `Device` object represents a single input device, such\nas a keyboard, a mouse, a touchpad, etc.",null,null],[3,"DeviceManager","","In addition to a single pointer and keyboard for user interface input,\nGDK contains support for a variety of input devices, including graphics\ntablets, touchscreens and multiple pointers/keyboards interacting\nsimultaneously with the user interface. Such input devices often have\nadditional features, such as sub-pixel positioning information and\nadditional device-dependent information.",null,null],[3,"Display","","`Display` objects purpose are two fold:",null,null],[3,"DisplayManager","","The purpose of the `DisplayManager` singleton object is to offer\nnotification when displays appear or disappear or the default display\nchanges.",null,null],[3,"DragContext","","",null,null],[3,"Event","","A generic GDK event.",null,null],[3,"EventButton","","Used for button press and button release events. The\n`type` field will be one of `EventType::ButtonPress`,\n`EventType::2buttonPress`, `EventType::3buttonPress` or `EventType::ButtonRelease`,",null,null],[3,"EventConfigure","","Generated when a window size or position has changed.",null,null],[3,"EventCrossing","","Generated when the pointer enters or leaves a window.",null,null],[3,"EventDND","","Generated during DND operations.",null,null],[3,"EventExpose","","Generated when all or part of a window becomes visible and needs to be\nredrawn.",null,null],[3,"EventFocus","","Describes a change of keyboard focus.",null,null],[3,"EventGrabBroken","","Generated when a pointer or keyboard grab is broken. On X11, this happens\nwhen the grab window becomes unviewable (i.e. it or one of its ancestors\nis unmapped), or if the same application grabs the pointer or keyboard\nagain. Note that implicit grabs (which are initiated by button presses)\ncan also cause `EventGrabBroken` events.",null,null],[3,"EventKey","","Describes a key press or key release event.",null,null],[3,"EventMotion","","Generated when the pointer moves.",null,null],[3,"EventOwnerChange","","Generated when the owner of a selection changes. On X11, this\ninformation is only available if the X server supports the XFIXES\nextension.",null,null],[3,"EventProperty","","Describes a property change on a window.",null,null],[3,"EventProximity","","Proximity events are generated when using GDK’s wrapper for the\nXInput extension. The XInput extension is an add-on for standard X\nthat allows you to use nonstandard devices such as graphics tablets.\nA proximity event indicates that the stylus has moved in or out of\ncontact with the tablet, or perhaps that the user’s finger has moved\nin or out of contact with a touch screen.",null,null],[3,"EventScroll","","Generated from button presses for the buttons 4 to 7. Wheel mice are\nusually configured to generate button press events for buttons 4 and 5\nwhen the wheel is turned.",null,null],[3,"EventSelection","","Generated when a selection is requested or ownership of a selection\nis taken over by another client application.",null,null],[3,"EventSetting","","Generated when a setting is modified.",null,null],[3,"EventTouch","","Used for touch events.\n`type` field will be one of `EventType::TouchBegin`, `EventType::TouchUpdate`,\n`EventType::TouchEnd` or `EventType::TouchCancel`.",null,null],[3,"EventVisibility","","`[Deprecated since 3.12]` Generated when the window visibility status has changed.",null,null],[3,"EventWindowState","","Generated when the state of a toplevel window changes.",null,null],[3,"FrameClock","","A `FrameClock` tells the application when to update and repaint a\nwindow. This may be synced to the vertical refresh rate of the\nmonitor, for example. Even when the frame clock uses a simple timer\nrather than a hardware-based vertical sync, the frame clock helps\nbecause it ensures everything paints at the same time (reducing the\ntotal number of frames). The frame clock can also automatically\nstop painting when it knows the frames will not be visible, or\nscale back animation framerates.",null,null],[3,"FrameTimings","","A `FrameTimings` object holds timing information for a single frame\nof the application’s displays. To retrieve `FrameTimings` objects,\nuse `FrameClock::get_timings` or `FrameClock::get_current_timings`.\nThe information in `FrameTimings` is useful for precise synchronization\nof video with the event or audio streams, and for measuring\nquality metrics for the application’s display, such as latency and jitter.",null,null],[3,"Screen","","`Screen` objects are the GDK representation of the screen on\nwhich windows can be displayed and on which the pointer moves.\nX originally identified screens with physical screens, but\nnowadays it is more common to have a single `Screen` which\ncombines several physical monitors (see `Screen::get_n_monitors`).",null,null],[3,"Visual","","A `Visual` contains information about\na particular visual.",null,null],[3,"Window","","",null,null],[3,"GLContext","","`GLContext` is an object representing the platform-specific\nOpenGL drawing context.",null,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"set_initialized","","Informs this crate that GDK has been initialized and the current thread is the main one.",null,{"inputs":[],"output":null}],[5,"get_display_arg_name","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"notify_startup_complete","","",null,{"inputs":[],"output":null}],[5,"notify_startup_complete_with_id","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"get_program_class","","",null,{"inputs":[],"output":{"name":"option"}}],[5,"set_program_class","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"flush","","",null,{"inputs":[],"output":null}],[5,"screen_width","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"screen_height","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"screen_width_mm","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"screen_height_mm","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"beep","","",null,{"inputs":[],"output":null}],[5,"error_trap_push","","",null,{"inputs":[],"output":null}],[5,"error_trap_pop","","",null,{"inputs":[],"output":{"name":"i32"}}],[5,"error_trap_pop_ignored","","",null,{"inputs":[],"output":null}],[5,"set_allowed_backends","","",null,{"inputs":[{"name":"str"}],"output":null}],[5,"keyval_name","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[5,"keyval_to_unicode","","",null,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"fmt","","",40,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"event"}],"output":{"name":"event"}}],[11,"get_event_type","","Returns the event type.",40,{"inputs":[{"name":"event"}],"output":{"name":"eventtype"}}],[11,"get_window","","Returns the associated `Window` if applicable.",40,{"inputs":[{"name":"event"}],"output":{"name":"option"}}],[11,"get_send_event","","Returns whether the event was sent explicitly.",40,{"inputs":[{"name":"event"}],"output":{"name":"bool"}}],[11,"is","","Returns `true` if the event type matches `T`.",40,{"inputs":[{"name":"event"}],"output":{"name":"bool"}}],[11,"downcast","","Tries to downcast to a specific event type.",40,{"inputs":[{"name":"event"}],"output":{"name":"result"}}],[11,"to_glib_none","","",40,{"inputs":[{"name":"event"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",40,{"inputs":[{"name":"event"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",40,null],[11,"from_glib_full","","",40,null],[11,"as_ref","","",40,{"inputs":[{"name":"event"}],"output":{"name":"gdkeventany"}}],[11,"as_mut","","",40,{"inputs":[{"name":"event"}],"output":{"name":"gdkeventany"}}],[0,"prelude","","Traits inteded for blanket imports.",null,null],[8,"RectangleExt","gdk::prelude","",null,null],[10,"intersect","","",41,{"inputs":[{"name":"rectangleext"},{"name":"self"}],"output":{"name":"option"}}],[10,"union","","",41,{"inputs":[{"name":"rectangleext"},{"name":"self"}],"output":{"name":"self"}}],[8,"RGBA","","",null,null],[10,"white","","",42,{"inputs":[],"output":{"name":"gdkrgba"}}],[10,"blue","","",42,{"inputs":[],"output":{"name":"gdkrgba"}}],[10,"green","","",42,{"inputs":[],"output":{"name":"gdkrgba"}}],[10,"red","","",42,{"inputs":[],"output":{"name":"gdkrgba"}}],[10,"black","","",42,{"inputs":[],"output":{"name":"gdkrgba"}}],[10,"copy","","",42,{"inputs":[{"name":"rgba"}],"output":{"name":"gdkrgba"}}],[10,"parse","","",42,{"inputs":[{"name":"rgba"},{"name":"str"}],"output":{"name":"bool"}}],[10,"to_string","","",42,{"inputs":[{"name":"rgba"}],"output":{"name":"option"}}],[8,"ContextExt","","",null,null],[10,"create_from_window","","",43,{"inputs":[{"name":"window"}],"output":{"name":"context"}}],[10,"get_clip_rectangle","","",43,{"inputs":[{"name":"contextext"}],"output":{"name":"option"}}],[10,"set_source_rgba","","",43,{"inputs":[{"name":"contextext"},{"name":"gdkrgba"}],"output":null}],[10,"set_source_pixbuf","","",43,{"inputs":[{"name":"contextext"},{"name":"pixbuf"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"set_source_window","","",43,{"inputs":[{"name":"contextext"},{"name":"window"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rectangle","","",43,{"inputs":[{"name":"contextext"},{"name":"rectangleint"}],"output":null}],[0,"enums","gdk","",null,null],[0,"modifier_type","gdk::enums","",null,null],[17,"ShiftMask","gdk::enums::modifier_type","",null,null],[17,"LockMask","","",null,null],[17,"ControlMask","","",null,null],[17,"Mod1Mask","","",null,null],[17,"Mod2Mask","","",null,null],[17,"Mod3Mask","","",null,null],[17,"Mod4Mask","","",null,null],[17,"Mod5Mask","","",null,null],[17,"Button1Mask","","",null,null],[17,"Button2Mask","","",null,null],[17,"Button3Mask","","",null,null],[17,"Button4Mask","","",null,null],[17,"Button5Mask","","",null,null],[17,"SuperMask","","",null,null],[17,"HyperMask","","",null,null],[17,"MetaMask","","",null,null],[17,"ReleaseMask","","",null,null],[17,"ModifierMask","","",null,null],[0,"key","gdk::enums","",null,null],[6,"Key","gdk::enums::key","",null,null],[17,"VoidSymbol","","",null,null],[17,"BackSpace","","",null,null],[17,"Tab","","",null,null],[17,"Linefeed","","",null,null],[17,"Clear","","",null,null],[17,"Return","","",null,null],[17,"Pause","","",null,null],[17,"Scroll_Lock","","",null,null],[17,"Sys_Req","","",null,null],[17,"Escape","","",null,null],[17,"Delete","","",null,null],[17,"Multi_key","","",null,null],[17,"Codeinput","","",null,null],[17,"SingleCandidate","","",null,null],[17,"MultipleCandidate","","",null,null],[17,"PreviousCandidate","","",null,null],[17,"Kanji","","",null,null],[17,"Muhenkan","","",null,null],[17,"Henkan_Mode","","",null,null],[17,"Henkan","","",null,null],[17,"Romaji","","",null,null],[17,"Hiragana","","",null,null],[17,"Katakana","","",null,null],[17,"Hiragana_Katakana","","",null,null],[17,"Zenkaku","","",null,null],[17,"Hankaku","","",null,null],[17,"Zenkaku_Hankaku","","",null,null],[17,"Touroku","","",null,null],[17,"Massyo","","",null,null],[17,"Kana_Lock","","",null,null],[17,"Kana_Shift","","",null,null],[17,"Eisu_Shift","","",null,null],[17,"Eisu_toggle","","",null,null],[17,"Kanji_Bangou","","",null,null],[17,"Zen_Koho","","",null,null],[17,"Mae_Koho","","",null,null],[17,"Home","","",null,null],[17,"Left","","",null,null],[17,"Up","","",null,null],[17,"Right","","",null,null],[17,"Down","","",null,null],[17,"Prior","","",null,null],[17,"Page_Up","","",null,null],[17,"Next","","",null,null],[17,"Page_Down","","",null,null],[17,"End","","",null,null],[17,"Begin","","",null,null],[17,"Select","","",null,null],[17,"Print","","",null,null],[17,"Execute","","",null,null],[17,"Insert","","",null,null],[17,"Undo","","",null,null],[17,"Redo","","",null,null],[17,"Menu","","",null,null],[17,"Find","","",null,null],[17,"Cancel","","",null,null],[17,"Help","","",null,null],[17,"Break","","",null,null],[17,"Mode_switch","","",null,null],[17,"script_switch","","",null,null],[17,"Num_Lock","","",null,null],[17,"KP_Space","","",null,null],[17,"KP_Tab","","",null,null],[17,"KP_Enter","","",null,null],[17,"KP_F1","","",null,null],[17,"KP_F2","","",null,null],[17,"KP_F3","","",null,null],[17,"KP_F4","","",null,null],[17,"KP_Home","","",null,null],[17,"KP_Left","","",null,null],[17,"KP_Up","","",null,null],[17,"KP_Right","","",null,null],[17,"KP_Down","","",null,null],[17,"KP_Prior","","",null,null],[17,"KP_Page_Up","","",null,null],[17,"KP_Next","","",null,null],[17,"KP_Page_Down","","",null,null],[17,"KP_End","","",null,null],[17,"KP_Begin","","",null,null],[17,"KP_Insert","","",null,null],[17,"KP_Delete","","",null,null],[17,"KP_Equal","","",null,null],[17,"KP_Multiply","","",null,null],[17,"KP_Add","","",null,null],[17,"KP_Separator","","",null,null],[17,"KP_Subtract","","",null,null],[17,"KP_Decimal","","",null,null],[17,"KP_Divide","","",null,null],[17,"KP_0","","",null,null],[17,"KP_1","","",null,null],[17,"KP_2","","",null,null],[17,"KP_3","","",null,null],[17,"KP_4","","",null,null],[17,"KP_5","","",null,null],[17,"KP_6","","",null,null],[17,"KP_7","","",null,null],[17,"KP_8","","",null,null],[17,"KP_9","","",null,null],[17,"F1","","",null,null],[17,"F2","","",null,null],[17,"F3","","",null,null],[17,"F4","","",null,null],[17,"F5","","",null,null],[17,"F6","","",null,null],[17,"F7","","",null,null],[17,"F8","","",null,null],[17,"F9","","",null,null],[17,"F10","","",null,null],[17,"F11","","",null,null],[17,"L1","","",null,null],[17,"F12","","",null,null],[17,"L2","","",null,null],[17,"F13","","",null,null],[17,"L3","","",null,null],[17,"F14","","",null,null],[17,"L4","","",null,null],[17,"F15","","",null,null],[17,"L5","","",null,null],[17,"F16","","",null,null],[17,"L6","","",null,null],[17,"F17","","",null,null],[17,"L7","","",null,null],[17,"F18","","",null,null],[17,"L8","","",null,null],[17,"F19","","",null,null],[17,"L9","","",null,null],[17,"F20","","",null,null],[17,"L10","","",null,null],[17,"F21","","",null,null],[17,"R1","","",null,null],[17,"F22","","",null,null],[17,"R2","","",null,null],[17,"F23","","",null,null],[17,"R3","","",null,null],[17,"F24","","",null,null],[17,"R4","","",null,null],[17,"F25","","",null,null],[17,"R5","","",null,null],[17,"F26","","",null,null],[17,"R6","","",null,null],[17,"F27","","",null,null],[17,"R7","","",null,null],[17,"F28","","",null,null],[17,"R8","","",null,null],[17,"F29","","",null,null],[17,"R9","","",null,null],[17,"F30","","",null,null],[17,"R10","","",null,null],[17,"F31","","",null,null],[17,"R11","","",null,null],[17,"F32","","",null,null],[17,"R12","","",null,null],[17,"F33","","",null,null],[17,"R13","","",null,null],[17,"F34","","",null,null],[17,"R14","","",null,null],[17,"F35","","",null,null],[17,"R15","","",null,null],[17,"Shift_L","","",null,null],[17,"Shift_R","","",null,null],[17,"Control_L","","",null,null],[17,"Control_R","","",null,null],[17,"Caps_Lock","","",null,null],[17,"Shift_Lock","","",null,null],[17,"Meta_L","","",null,null],[17,"Meta_R","","",null,null],[17,"Alt_L","","",null,null],[17,"Alt_R","","",null,null],[17,"Super_L","","",null,null],[17,"Super_R","","",null,null],[17,"Hyper_L","","",null,null],[17,"Hyper_R","","",null,null],[17,"ISO_Lock","","",null,null],[17,"ISO_Level2_Latch","","",null,null],[17,"ISO_Level3_Shift","","",null,null],[17,"ISO_Level3_Latch","","",null,null],[17,"ISO_Level3_Lock","","",null,null],[17,"ISO_Level5_Shift","","",null,null],[17,"ISO_Level5_Latch","","",null,null],[17,"ISO_Level5_Lock","","",null,null],[17,"ISO_Group_Shift","","",null,null],[17,"ISO_Group_Latch","","",null,null],[17,"ISO_Group_Lock","","",null,null],[17,"ISO_Next_Group","","",null,null],[17,"ISO_Next_Group_Lock","","",null,null],[17,"ISO_Prev_Group","","",null,null],[17,"ISO_Prev_Group_Lock","","",null,null],[17,"ISO_First_Group","","",null,null],[17,"ISO_First_Group_Lock","","",null,null],[17,"ISO_Last_Group","","",null,null],[17,"ISO_Last_Group_Lock","","",null,null],[17,"ISO_Left_Tab","","",null,null],[17,"ISO_Move_Line_Up","","",null,null],[17,"ISO_Move_Line_Down","","",null,null],[17,"ISO_Partial_Line_Up","","",null,null],[17,"ISO_Partial_Line_Down","","",null,null],[17,"ISO_Partial_Space_Left","","",null,null],[17,"ISO_Partial_Space_Right","","",null,null],[17,"ISO_Set_Margin_Left","","",null,null],[17,"ISO_Set_Margin_Right","","",null,null],[17,"ISO_Release_Margin_Left","","",null,null],[17,"ISO_Release_Margin_Right","","",null,null],[17,"ISO_Release_Both_Margins","","",null,null],[17,"ISO_Fast_Cursor_Left","","",null,null],[17,"ISO_Fast_Cursor_Right","","",null,null],[17,"ISO_Fast_Cursor_Up","","",null,null],[17,"ISO_Fast_Cursor_Down","","",null,null],[17,"ISO_Continuous_Underline","","",null,null],[17,"ISO_Discontinuous_Underline","","",null,null],[17,"ISO_Emphasize","","",null,null],[17,"ISO_Center_Object","","",null,null],[17,"ISO_Enter","","",null,null],[17,"dead_grave","","",null,null],[17,"dead_acute","","",null,null],[17,"dead_circumflex","","",null,null],[17,"dead_tilde","","",null,null],[17,"dead_perispomeni","","",null,null],[17,"dead_macron","","",null,null],[17,"dead_breve","","",null,null],[17,"dead_abovedot","","",null,null],[17,"dead_diaeresis","","",null,null],[17,"dead_abovering","","",null,null],[17,"dead_doubleacute","","",null,null],[17,"dead_caron","","",null,null],[17,"dead_cedilla","","",null,null],[17,"dead_ogonek","","",null,null],[17,"dead_iota","","",null,null],[17,"dead_voiced_sound","","",null,null],[17,"dead_semivoiced_sound","","",null,null],[17,"dead_belowdot","","",null,null],[17,"dead_hook","","",null,null],[17,"dead_horn","","",null,null],[17,"dead_stroke","","",null,null],[17,"dead_abovecomma","","",null,null],[17,"dead_psili","","",null,null],[17,"dead_abovereversedcomma","","",null,null],[17,"dead_dasia","","",null,null],[17,"dead_doublegrave","","",null,null],[17,"dead_belowring","","",null,null],[17,"dead_belowmacron","","",null,null],[17,"dead_belowcircumflex","","",null,null],[17,"dead_belowtilde","","",null,null],[17,"dead_belowbreve","","",null,null],[17,"dead_belowdiaeresis","","",null,null],[17,"dead_invertedbreve","","",null,null],[17,"dead_belowcomma","","",null,null],[17,"dead_currency","","",null,null],[17,"dead_a","","",null,null],[17,"dead_A","","",null,null],[17,"dead_e","","",null,null],[17,"dead_E","","",null,null],[17,"dead_i","","",null,null],[17,"dead_I","","",null,null],[17,"dead_o","","",null,null],[17,"dead_O","","",null,null],[17,"dead_u","","",null,null],[17,"dead_U","","",null,null],[17,"dead_small_schwa","","",null,null],[17,"dead_capital_schwa","","",null,null],[17,"dead_greek","","",null,null],[17,"First_Virtual_Screen","","",null,null],[17,"Prev_Virtual_Screen","","",null,null],[17,"Next_Virtual_Screen","","",null,null],[17,"Last_Virtual_Screen","","",null,null],[17,"Terminate_Server","","",null,null],[17,"AccessX_Enable","","",null,null],[17,"AccessX_Feedback_Enable","","",null,null],[17,"RepeatKeys_Enable","","",null,null],[17,"SlowKeys_Enable","","",null,null],[17,"BounceKeys_Enable","","",null,null],[17,"StickyKeys_Enable","","",null,null],[17,"MouseKeys_Enable","","",null,null],[17,"MouseKeys_Accel_Enable","","",null,null],[17,"Overlay1_Enable","","",null,null],[17,"Overlay2_Enable","","",null,null],[17,"AudibleBell_Enable","","",null,null],[17,"Pointer_Left","","",null,null],[17,"Pointer_Right","","",null,null],[17,"Pointer_Up","","",null,null],[17,"Pointer_Down","","",null,null],[17,"Pointer_UpLeft","","",null,null],[17,"Pointer_UpRight","","",null,null],[17,"Pointer_DownLeft","","",null,null],[17,"Pointer_DownRight","","",null,null],[17,"Pointer_Button_Dflt","","",null,null],[17,"Pointer_Button1","","",null,null],[17,"Pointer_Button2","","",null,null],[17,"Pointer_Button3","","",null,null],[17,"Pointer_Button4","","",null,null],[17,"Pointer_Button5","","",null,null],[17,"Pointer_DblClick_Dflt","","",null,null],[17,"Pointer_DblClick1","","",null,null],[17,"Pointer_DblClick2","","",null,null],[17,"Pointer_DblClick3","","",null,null],[17,"Pointer_DblClick4","","",null,null],[17,"Pointer_DblClick5","","",null,null],[17,"Pointer_Drag_Dflt","","",null,null],[17,"Pointer_Drag1","","",null,null],[17,"Pointer_Drag2","","",null,null],[17,"Pointer_Drag3","","",null,null],[17,"Pointer_Drag4","","",null,null],[17,"Pointer_Drag5","","",null,null],[17,"Pointer_EnableKeys","","",null,null],[17,"Pointer_Accelerate","","",null,null],[17,"Pointer_DfltBtnNext","","",null,null],[17,"Pointer_DfltBtnPrev","","",null,null],[17,"ch","","",null,null],[17,"Ch","","",null,null],[17,"CH","","",null,null],[17,"c_h","","",null,null],[17,"C_h","","",null,null],[17,"C_H","","",null,null],[17,"_3270_Duplicate","","",null,null],[17,"_3270_FieldMark","","",null,null],[17,"_3270_Right2","","",null,null],[17,"_3270_Left2","","",null,null],[17,"_3270_BackTab","","",null,null],[17,"_3270_EraseEOF","","",null,null],[17,"_3270_EraseInput","","",null,null],[17,"_3270_Reset","","",null,null],[17,"_3270_Quit","","",null,null],[17,"_3270_PA1","","",null,null],[17,"_3270_PA2","","",null,null],[17,"_3270_PA3","","",null,null],[17,"_3270_Test","","",null,null],[17,"_3270_Attn","","",null,null],[17,"_3270_CursorBlink","","",null,null],[17,"_3270_AltCursor","","",null,null],[17,"_3270_KeyClick","","",null,null],[17,"_3270_Jump","","",null,null],[17,"_3270_Ident","","",null,null],[17,"_3270_Rule","","",null,null],[17,"_3270_Copy","","",null,null],[17,"_3270_Play","","",null,null],[17,"_3270_Setup","","",null,null],[17,"_3270_Record","","",null,null],[17,"_3270_ChangeScreen","","",null,null],[17,"_3270_DeleteWord","","",null,null],[17,"_3270_ExSelect","","",null,null],[17,"_3270_CursorSelect","","",null,null],[17,"_3270_PrintScreen","","",null,null],[17,"_3270_Enter","","",null,null],[17,"space","","",null,null],[17,"exclam","","",null,null],[17,"quotedbl","","",null,null],[17,"numbersign","","",null,null],[17,"dollar","","",null,null],[17,"percent","","",null,null],[17,"ampersand","","",null,null],[17,"apostrophe","","",null,null],[17,"quoteright","","",null,null],[17,"parenleft","","",null,null],[17,"parenright","","",null,null],[17,"asterisk","","",null,null],[17,"plus","","",null,null],[17,"comma","","",null,null],[17,"minus","","",null,null],[17,"period","","",null,null],[17,"slash","","",null,null],[17,"_0","","",null,null],[17,"_1","","",null,null],[17,"_2","","",null,null],[17,"_3","","",null,null],[17,"_4","","",null,null],[17,"_5","","",null,null],[17,"_6","","",null,null],[17,"_7","","",null,null],[17,"_8","","",null,null],[17,"_9","","",null,null],[17,"colon","","",null,null],[17,"semicolon","","",null,null],[17,"less","","",null,null],[17,"equal","","",null,null],[17,"greater","","",null,null],[17,"question","","",null,null],[17,"at","","",null,null],[17,"A","","",null,null],[17,"B","","",null,null],[17,"C","","",null,null],[17,"D","","",null,null],[17,"E","","",null,null],[17,"F","","",null,null],[17,"G","","",null,null],[17,"H","","",null,null],[17,"I","","",null,null],[17,"J","","",null,null],[17,"K","","",null,null],[17,"L","","",null,null],[17,"M","","",null,null],[17,"N","","",null,null],[17,"O","","",null,null],[17,"P","","",null,null],[17,"Q","","",null,null],[17,"R","","",null,null],[17,"S","","",null,null],[17,"T","","",null,null],[17,"U","","",null,null],[17,"V","","",null,null],[17,"W","","",null,null],[17,"X","","",null,null],[17,"Y","","",null,null],[17,"Z","","",null,null],[17,"bracketleft","","",null,null],[17,"backslash","","",null,null],[17,"bracketright","","",null,null],[17,"asciicircum","","",null,null],[17,"underscore","","",null,null],[17,"grave","","",null,null],[17,"quoteleft","","",null,null],[17,"a","","",null,null],[17,"b","","",null,null],[17,"c","","",null,null],[17,"d","","",null,null],[17,"e","","",null,null],[17,"f","","",null,null],[17,"g","","",null,null],[17,"h","","",null,null],[17,"i","","",null,null],[17,"j","","",null,null],[17,"k","","",null,null],[17,"l","","",null,null],[17,"m","","",null,null],[17,"n","","",null,null],[17,"o","","",null,null],[17,"p","","",null,null],[17,"q","","",null,null],[17,"r","","",null,null],[17,"s","","",null,null],[17,"t","","",null,null],[17,"u","","",null,null],[17,"v","","",null,null],[17,"w","","",null,null],[17,"x","","",null,null],[17,"y","","",null,null],[17,"z","","",null,null],[17,"braceleft","","",null,null],[17,"bar","","",null,null],[17,"braceright","","",null,null],[17,"asciitilde","","",null,null],[17,"nobreakspace","","",null,null],[17,"exclamdown","","",null,null],[17,"cent","","",null,null],[17,"sterling","","",null,null],[17,"currency","","",null,null],[17,"yen","","",null,null],[17,"brokenbar","","",null,null],[17,"section","","",null,null],[17,"diaeresis","","",null,null],[17,"copyright","","",null,null],[17,"ordfeminine","","",null,null],[17,"guillemotleft","","",null,null],[17,"notsign","","",null,null],[17,"hyphen","","",null,null],[17,"registered","","",null,null],[17,"macron","","",null,null],[17,"degree","","",null,null],[17,"plusminus","","",null,null],[17,"twosuperior","","",null,null],[17,"threesuperior","","",null,null],[17,"acute","","",null,null],[17,"mu","","",null,null],[17,"paragraph","","",null,null],[17,"periodcentered","","",null,null],[17,"cedilla","","",null,null],[17,"onesuperior","","",null,null],[17,"masculine","","",null,null],[17,"guillemotright","","",null,null],[17,"onequarter","","",null,null],[17,"onehalf","","",null,null],[17,"threequarters","","",null,null],[17,"questiondown","","",null,null],[17,"Agrave","","",null,null],[17,"Aacute","","",null,null],[17,"Acircumflex","","",null,null],[17,"Atilde","","",null,null],[17,"Adiaeresis","","",null,null],[17,"Aring","","",null,null],[17,"AE","","",null,null],[17,"Ccedilla","","",null,null],[17,"Egrave","","",null,null],[17,"Eacute","","",null,null],[17,"Ecircumflex","","",null,null],[17,"Ediaeresis","","",null,null],[17,"Igrave","","",null,null],[17,"Iacute","","",null,null],[17,"Icircumflex","","",null,null],[17,"Idiaeresis","","",null,null],[17,"ETH","","",null,null],[17,"Eth","","",null,null],[17,"Ntilde","","",null,null],[17,"Ograve","","",null,null],[17,"Oacute","","",null,null],[17,"Ocircumflex","","",null,null],[17,"Otilde","","",null,null],[17,"Odiaeresis","","",null,null],[17,"multiply","","",null,null],[17,"Oslash","","",null,null],[17,"Ooblique","","",null,null],[17,"Ugrave","","",null,null],[17,"Uacute","","",null,null],[17,"Ucircumflex","","",null,null],[17,"Udiaeresis","","",null,null],[17,"Yacute","","",null,null],[17,"THORN","","",null,null],[17,"Thorn","","",null,null],[17,"ssharp","","",null,null],[17,"agrave","","",null,null],[17,"aacute","","",null,null],[17,"acircumflex","","",null,null],[17,"atilde","","",null,null],[17,"adiaeresis","","",null,null],[17,"aring","","",null,null],[17,"ae","","",null,null],[17,"ccedilla","","",null,null],[17,"egrave","","",null,null],[17,"eacute","","",null,null],[17,"ecircumflex","","",null,null],[17,"ediaeresis","","",null,null],[17,"igrave","","",null,null],[17,"iacute","","",null,null],[17,"icircumflex","","",null,null],[17,"idiaeresis","","",null,null],[17,"eth","","",null,null],[17,"ntilde","","",null,null],[17,"ograve","","",null,null],[17,"oacute","","",null,null],[17,"ocircumflex","","",null,null],[17,"otilde","","",null,null],[17,"odiaeresis","","",null,null],[17,"division","","",null,null],[17,"oslash","","",null,null],[17,"ooblique","","",null,null],[17,"ugrave","","",null,null],[17,"uacute","","",null,null],[17,"ucircumflex","","",null,null],[17,"udiaeresis","","",null,null],[17,"yacute","","",null,null],[17,"thorn","","",null,null],[17,"ydiaeresis","","",null,null],[17,"Aogonek","","",null,null],[17,"breve","","",null,null],[17,"Lstroke","","",null,null],[17,"Lcaron","","",null,null],[17,"Sacute","","",null,null],[17,"Scaron","","",null,null],[17,"Scedilla","","",null,null],[17,"Tcaron","","",null,null],[17,"Zacute","","",null,null],[17,"Zcaron","","",null,null],[17,"Zabovedot","","",null,null],[17,"aogonek","","",null,null],[17,"ogonek","","",null,null],[17,"lstroke","","",null,null],[17,"lcaron","","",null,null],[17,"sacute","","",null,null],[17,"caron","","",null,null],[17,"scaron","","",null,null],[17,"scedilla","","",null,null],[17,"tcaron","","",null,null],[17,"zacute","","",null,null],[17,"doubleacute","","",null,null],[17,"zcaron","","",null,null],[17,"zabovedot","","",null,null],[17,"Racute","","",null,null],[17,"Abreve","","",null,null],[17,"Lacute","","",null,null],[17,"Cacute","","",null,null],[17,"Ccaron","","",null,null],[17,"Eogonek","","",null,null],[17,"Ecaron","","",null,null],[17,"Dcaron","","",null,null],[17,"Dstroke","","",null,null],[17,"Nacute","","",null,null],[17,"Ncaron","","",null,null],[17,"Odoubleacute","","",null,null],[17,"Rcaron","","",null,null],[17,"Uring","","",null,null],[17,"Udoubleacute","","",null,null],[17,"Tcedilla","","",null,null],[17,"racute","","",null,null],[17,"abreve","","",null,null],[17,"lacute","","",null,null],[17,"cacute","","",null,null],[17,"ccaron","","",null,null],[17,"eogonek","","",null,null],[17,"ecaron","","",null,null],[17,"dcaron","","",null,null],[17,"dstroke","","",null,null],[17,"nacute","","",null,null],[17,"ncaron","","",null,null],[17,"odoubleacute","","",null,null],[17,"rcaron","","",null,null],[17,"uring","","",null,null],[17,"udoubleacute","","",null,null],[17,"tcedilla","","",null,null],[17,"abovedot","","",null,null],[17,"Hstroke","","",null,null],[17,"Hcircumflex","","",null,null],[17,"Iabovedot","","",null,null],[17,"Gbreve","","",null,null],[17,"Jcircumflex","","",null,null],[17,"hstroke","","",null,null],[17,"hcircumflex","","",null,null],[17,"idotless","","",null,null],[17,"gbreve","","",null,null],[17,"jcircumflex","","",null,null],[17,"Cabovedot","","",null,null],[17,"Ccircumflex","","",null,null],[17,"Gabovedot","","",null,null],[17,"Gcircumflex","","",null,null],[17,"Ubreve","","",null,null],[17,"Scircumflex","","",null,null],[17,"cabovedot","","",null,null],[17,"ccircumflex","","",null,null],[17,"gabovedot","","",null,null],[17,"gcircumflex","","",null,null],[17,"ubreve","","",null,null],[17,"scircumflex","","",null,null],[17,"kra","","",null,null],[17,"kappa","","",null,null],[17,"Rcedilla","","",null,null],[17,"Itilde","","",null,null],[17,"Lcedilla","","",null,null],[17,"Emacron","","",null,null],[17,"Gcedilla","","",null,null],[17,"Tslash","","",null,null],[17,"rcedilla","","",null,null],[17,"itilde","","",null,null],[17,"lcedilla","","",null,null],[17,"emacron","","",null,null],[17,"gcedilla","","",null,null],[17,"tslash","","",null,null],[17,"ENG","","",null,null],[17,"eng","","",null,null],[17,"Amacron","","",null,null],[17,"Iogonek","","",null,null],[17,"Eabovedot","","",null,null],[17,"Imacron","","",null,null],[17,"Ncedilla","","",null,null],[17,"Omacron","","",null,null],[17,"Kcedilla","","",null,null],[17,"Uogonek","","",null,null],[17,"Utilde","","",null,null],[17,"Umacron","","",null,null],[17,"amacron","","",null,null],[17,"iogonek","","",null,null],[17,"eabovedot","","",null,null],[17,"imacron","","",null,null],[17,"ncedilla","","",null,null],[17,"omacron","","",null,null],[17,"kcedilla","","",null,null],[17,"uogonek","","",null,null],[17,"utilde","","",null,null],[17,"umacron","","",null,null],[17,"Wcircumflex","","",null,null],[17,"wcircumflex","","",null,null],[17,"Ycircumflex","","",null,null],[17,"ycircumflex","","",null,null],[17,"Babovedot","","",null,null],[17,"babovedot","","",null,null],[17,"Dabovedot","","",null,null],[17,"dabovedot","","",null,null],[17,"Fabovedot","","",null,null],[17,"fabovedot","","",null,null],[17,"Mabovedot","","",null,null],[17,"mabovedot","","",null,null],[17,"Pabovedot","","",null,null],[17,"pabovedot","","",null,null],[17,"Sabovedot","","",null,null],[17,"sabovedot","","",null,null],[17,"Tabovedot","","",null,null],[17,"tabovedot","","",null,null],[17,"Wgrave","","",null,null],[17,"wgrave","","",null,null],[17,"Wacute","","",null,null],[17,"wacute","","",null,null],[17,"Wdiaeresis","","",null,null],[17,"wdiaeresis","","",null,null],[17,"Ygrave","","",null,null],[17,"ygrave","","",null,null],[17,"OE","","",null,null],[17,"oe","","",null,null],[17,"Ydiaeresis","","",null,null],[17,"overline","","",null,null],[17,"kana_fullstop","","",null,null],[17,"kana_openingbracket","","",null,null],[17,"kana_closingbracket","","",null,null],[17,"kana_comma","","",null,null],[17,"kana_conjunctive","","",null,null],[17,"kana_middledot","","",null,null],[17,"kana_WO","","",null,null],[17,"kana_a","","",null,null],[17,"kana_i","","",null,null],[17,"kana_u","","",null,null],[17,"kana_e","","",null,null],[17,"kana_o","","",null,null],[17,"kana_ya","","",null,null],[17,"kana_yu","","",null,null],[17,"kana_yo","","",null,null],[17,"kana_tsu","","",null,null],[17,"kana_tu","","",null,null],[17,"prolongedsound","","",null,null],[17,"kana_A","","",null,null],[17,"kana_I","","",null,null],[17,"kana_U","","",null,null],[17,"kana_E","","",null,null],[17,"kana_O","","",null,null],[17,"kana_KA","","",null,null],[17,"kana_KI","","",null,null],[17,"kana_KU","","",null,null],[17,"kana_KE","","",null,null],[17,"kana_KO","","",null,null],[17,"kana_SA","","",null,null],[17,"kana_SHI","","",null,null],[17,"kana_SU","","",null,null],[17,"kana_SE","","",null,null],[17,"kana_SO","","",null,null],[17,"kana_TA","","",null,null],[17,"kana_CHI","","",null,null],[17,"kana_TI","","",null,null],[17,"kana_TSU","","",null,null],[17,"kana_TU","","",null,null],[17,"kana_TE","","",null,null],[17,"kana_TO","","",null,null],[17,"kana_NA","","",null,null],[17,"kana_NI","","",null,null],[17,"kana_NU","","",null,null],[17,"kana_NE","","",null,null],[17,"kana_NO","","",null,null],[17,"kana_HA","","",null,null],[17,"kana_HI","","",null,null],[17,"kana_FU","","",null,null],[17,"kana_HU","","",null,null],[17,"kana_HE","","",null,null],[17,"kana_HO","","",null,null],[17,"kana_MA","","",null,null],[17,"kana_MI","","",null,null],[17,"kana_MU","","",null,null],[17,"kana_ME","","",null,null],[17,"kana_MO","","",null,null],[17,"kana_YA","","",null,null],[17,"kana_YU","","",null,null],[17,"kana_YO","","",null,null],[17,"kana_RA","","",null,null],[17,"kana_RI","","",null,null],[17,"kana_RU","","",null,null],[17,"kana_RE","","",null,null],[17,"kana_RO","","",null,null],[17,"kana_WA","","",null,null],[17,"kana_N","","",null,null],[17,"voicedsound","","",null,null],[17,"semivoicedsound","","",null,null],[17,"kana_switch","","",null,null],[17,"Farsi_0","","",null,null],[17,"Farsi_1","","",null,null],[17,"Farsi_2","","",null,null],[17,"Farsi_3","","",null,null],[17,"Farsi_4","","",null,null],[17,"Farsi_5","","",null,null],[17,"Farsi_6","","",null,null],[17,"Farsi_7","","",null,null],[17,"Farsi_8","","",null,null],[17,"Farsi_9","","",null,null],[17,"Arabic_percent","","",null,null],[17,"Arabic_superscript_alef","","",null,null],[17,"Arabic_tteh","","",null,null],[17,"Arabic_peh","","",null,null],[17,"Arabic_tcheh","","",null,null],[17,"Arabic_ddal","","",null,null],[17,"Arabic_rreh","","",null,null],[17,"Arabic_comma","","",null,null],[17,"Arabic_fullstop","","",null,null],[17,"Arabic_0","","",null,null],[17,"Arabic_1","","",null,null],[17,"Arabic_2","","",null,null],[17,"Arabic_3","","",null,null],[17,"Arabic_4","","",null,null],[17,"Arabic_5","","",null,null],[17,"Arabic_6","","",null,null],[17,"Arabic_7","","",null,null],[17,"Arabic_8","","",null,null],[17,"Arabic_9","","",null,null],[17,"Arabic_semicolon","","",null,null],[17,"Arabic_question_mark","","",null,null],[17,"Arabic_hamza","","",null,null],[17,"Arabic_maddaonalef","","",null,null],[17,"Arabic_hamzaonalef","","",null,null],[17,"Arabic_hamzaonwaw","","",null,null],[17,"Arabic_hamzaunderalef","","",null,null],[17,"Arabic_hamzaonyeh","","",null,null],[17,"Arabic_alef","","",null,null],[17,"Arabic_beh","","",null,null],[17,"Arabic_tehmarbuta","","",null,null],[17,"Arabic_teh","","",null,null],[17,"Arabic_theh","","",null,null],[17,"Arabic_jeem","","",null,null],[17,"Arabic_hah","","",null,null],[17,"Arabic_khah","","",null,null],[17,"Arabic_dal","","",null,null],[17,"Arabic_thal","","",null,null],[17,"Arabic_ra","","",null,null],[17,"Arabic_zain","","",null,null],[17,"Arabic_seen","","",null,null],[17,"Arabic_sheen","","",null,null],[17,"Arabic_sad","","",null,null],[17,"Arabic_dad","","",null,null],[17,"Arabic_tah","","",null,null],[17,"Arabic_zah","","",null,null],[17,"Arabic_ain","","",null,null],[17,"Arabic_ghain","","",null,null],[17,"Arabic_tatweel","","",null,null],[17,"Arabic_feh","","",null,null],[17,"Arabic_qaf","","",null,null],[17,"Arabic_kaf","","",null,null],[17,"Arabic_lam","","",null,null],[17,"Arabic_meem","","",null,null],[17,"Arabic_noon","","",null,null],[17,"Arabic_ha","","",null,null],[17,"Arabic_heh","","",null,null],[17,"Arabic_waw","","",null,null],[17,"Arabic_alefmaksura","","",null,null],[17,"Arabic_yeh","","",null,null],[17,"Arabic_fathatan","","",null,null],[17,"Arabic_dammatan","","",null,null],[17,"Arabic_kasratan","","",null,null],[17,"Arabic_fatha","","",null,null],[17,"Arabic_damma","","",null,null],[17,"Arabic_kasra","","",null,null],[17,"Arabic_shadda","","",null,null],[17,"Arabic_sukun","","",null,null],[17,"Arabic_madda_above","","",null,null],[17,"Arabic_hamza_above","","",null,null],[17,"Arabic_hamza_below","","",null,null],[17,"Arabic_jeh","","",null,null],[17,"Arabic_veh","","",null,null],[17,"Arabic_keheh","","",null,null],[17,"Arabic_gaf","","",null,null],[17,"Arabic_noon_ghunna","","",null,null],[17,"Arabic_heh_doachashmee","","",null,null],[17,"Farsi_yeh","","",null,null],[17,"Arabic_farsi_yeh","","",null,null],[17,"Arabic_yeh_baree","","",null,null],[17,"Arabic_heh_goal","","",null,null],[17,"Arabic_switch","","",null,null],[17,"Cyrillic_GHE_bar","","",null,null],[17,"Cyrillic_ghe_bar","","",null,null],[17,"Cyrillic_ZHE_descender","","",null,null],[17,"Cyrillic_zhe_descender","","",null,null],[17,"Cyrillic_KA_descender","","",null,null],[17,"Cyrillic_ka_descender","","",null,null],[17,"Cyrillic_KA_vertstroke","","",null,null],[17,"Cyrillic_ka_vertstroke","","",null,null],[17,"Cyrillic_EN_descender","","",null,null],[17,"Cyrillic_en_descender","","",null,null],[17,"Cyrillic_U_straight","","",null,null],[17,"Cyrillic_u_straight","","",null,null],[17,"Cyrillic_U_straight_bar","","",null,null],[17,"Cyrillic_u_straight_bar","","",null,null],[17,"Cyrillic_HA_descender","","",null,null],[17,"Cyrillic_ha_descender","","",null,null],[17,"Cyrillic_CHE_descender","","",null,null],[17,"Cyrillic_che_descender","","",null,null],[17,"Cyrillic_CHE_vertstroke","","",null,null],[17,"Cyrillic_che_vertstroke","","",null,null],[17,"Cyrillic_SHHA","","",null,null],[17,"Cyrillic_shha","","",null,null],[17,"Cyrillic_SCHWA","","",null,null],[17,"Cyrillic_schwa","","",null,null],[17,"Cyrillic_I_macron","","",null,null],[17,"Cyrillic_i_macron","","",null,null],[17,"Cyrillic_O_bar","","",null,null],[17,"Cyrillic_o_bar","","",null,null],[17,"Cyrillic_U_macron","","",null,null],[17,"Cyrillic_u_macron","","",null,null],[17,"Serbian_dje","","",null,null],[17,"Macedonia_gje","","",null,null],[17,"Cyrillic_io","","",null,null],[17,"Ukrainian_ie","","",null,null],[17,"Ukranian_je","","",null,null],[17,"Macedonia_dse","","",null,null],[17,"Ukrainian_i","","",null,null],[17,"Ukranian_i","","",null,null],[17,"Ukrainian_yi","","",null,null],[17,"Ukranian_yi","","",null,null],[17,"Cyrillic_je","","",null,null],[17,"Serbian_je","","",null,null],[17,"Cyrillic_lje","","",null,null],[17,"Serbian_lje","","",null,null],[17,"Cyrillic_nje","","",null,null],[17,"Serbian_nje","","",null,null],[17,"Serbian_tshe","","",null,null],[17,"Macedonia_kje","","",null,null],[17,"Ukrainian_ghe_with_upturn","","",null,null],[17,"Byelorussian_shortu","","",null,null],[17,"Cyrillic_dzhe","","",null,null],[17,"Serbian_dze","","",null,null],[17,"numerosign","","",null,null],[17,"Serbian_DJE","","",null,null],[17,"Macedonia_GJE","","",null,null],[17,"Cyrillic_IO","","",null,null],[17,"Ukrainian_IE","","",null,null],[17,"Ukranian_JE","","",null,null],[17,"Macedonia_DSE","","",null,null],[17,"Ukrainian_I","","",null,null],[17,"Ukranian_I","","",null,null],[17,"Ukrainian_YI","","",null,null],[17,"Ukranian_YI","","",null,null],[17,"Cyrillic_JE","","",null,null],[17,"Serbian_JE","","",null,null],[17,"Cyrillic_LJE","","",null,null],[17,"Serbian_LJE","","",null,null],[17,"Cyrillic_NJE","","",null,null],[17,"Serbian_NJE","","",null,null],[17,"Serbian_TSHE","","",null,null],[17,"Macedonia_KJE","","",null,null],[17,"Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"Byelorussian_SHORTU","","",null,null],[17,"Cyrillic_DZHE","","",null,null],[17,"Serbian_DZE","","",null,null],[17,"Cyrillic_yu","","",null,null],[17,"Cyrillic_a","","",null,null],[17,"Cyrillic_be","","",null,null],[17,"Cyrillic_tse","","",null,null],[17,"Cyrillic_de","","",null,null],[17,"Cyrillic_ie","","",null,null],[17,"Cyrillic_ef","","",null,null],[17,"Cyrillic_ghe","","",null,null],[17,"Cyrillic_ha","","",null,null],[17,"Cyrillic_i","","",null,null],[17,"Cyrillic_shorti","","",null,null],[17,"Cyrillic_ka","","",null,null],[17,"Cyrillic_el","","",null,null],[17,"Cyrillic_em","","",null,null],[17,"Cyrillic_en","","",null,null],[17,"Cyrillic_o","","",null,null],[17,"Cyrillic_pe","","",null,null],[17,"Cyrillic_ya","","",null,null],[17,"Cyrillic_er","","",null,null],[17,"Cyrillic_es","","",null,null],[17,"Cyrillic_te","","",null,null],[17,"Cyrillic_u","","",null,null],[17,"Cyrillic_zhe","","",null,null],[17,"Cyrillic_ve","","",null,null],[17,"Cyrillic_softsign","","",null,null],[17,"Cyrillic_yeru","","",null,null],[17,"Cyrillic_ze","","",null,null],[17,"Cyrillic_sha","","",null,null],[17,"Cyrillic_e","","",null,null],[17,"Cyrillic_shcha","","",null,null],[17,"Cyrillic_che","","",null,null],[17,"Cyrillic_hardsign","","",null,null],[17,"Cyrillic_YU","","",null,null],[17,"Cyrillic_A","","",null,null],[17,"Cyrillic_BE","","",null,null],[17,"Cyrillic_TSE","","",null,null],[17,"Cyrillic_DE","","",null,null],[17,"Cyrillic_IE","","",null,null],[17,"Cyrillic_EF","","",null,null],[17,"Cyrillic_GHE","","",null,null],[17,"Cyrillic_HA","","",null,null],[17,"Cyrillic_I","","",null,null],[17,"Cyrillic_SHORTI","","",null,null],[17,"Cyrillic_KA","","",null,null],[17,"Cyrillic_EL","","",null,null],[17,"Cyrillic_EM","","",null,null],[17,"Cyrillic_EN","","",null,null],[17,"Cyrillic_O","","",null,null],[17,"Cyrillic_PE","","",null,null],[17,"Cyrillic_YA","","",null,null],[17,"Cyrillic_ER","","",null,null],[17,"Cyrillic_ES","","",null,null],[17,"Cyrillic_TE","","",null,null],[17,"Cyrillic_U","","",null,null],[17,"Cyrillic_ZHE","","",null,null],[17,"Cyrillic_VE","","",null,null],[17,"Cyrillic_SOFTSIGN","","",null,null],[17,"Cyrillic_YERU","","",null,null],[17,"Cyrillic_ZE","","",null,null],[17,"Cyrillic_SHA","","",null,null],[17,"Cyrillic_E","","",null,null],[17,"Cyrillic_SHCHA","","",null,null],[17,"Cyrillic_CHE","","",null,null],[17,"Cyrillic_HARDSIGN","","",null,null],[17,"Greek_ALPHAaccent","","",null,null],[17,"Greek_EPSILONaccent","","",null,null],[17,"Greek_ETAaccent","","",null,null],[17,"Greek_IOTAaccent","","",null,null],[17,"Greek_IOTAdieresis","","",null,null],[17,"Greek_IOTAdiaeresis","","",null,null],[17,"Greek_OMICRONaccent","","",null,null],[17,"Greek_UPSILONaccent","","",null,null],[17,"Greek_UPSILONdieresis","","",null,null],[17,"Greek_OMEGAaccent","","",null,null],[17,"Greek_accentdieresis","","",null,null],[17,"Greek_horizbar","","",null,null],[17,"Greek_alphaaccent","","",null,null],[17,"Greek_epsilonaccent","","",null,null],[17,"Greek_etaaccent","","",null,null],[17,"Greek_iotaaccent","","",null,null],[17,"Greek_iotadieresis","","",null,null],[17,"Greek_iotaaccentdieresis","","",null,null],[17,"Greek_omicronaccent","","",null,null],[17,"Greek_upsilonaccent","","",null,null],[17,"Greek_upsilondieresis","","",null,null],[17,"Greek_upsilonaccentdieresis","","",null,null],[17,"Greek_omegaaccent","","",null,null],[17,"Greek_ALPHA","","",null,null],[17,"Greek_BETA","","",null,null],[17,"Greek_GAMMA","","",null,null],[17,"Greek_DELTA","","",null,null],[17,"Greek_EPSILON","","",null,null],[17,"Greek_ZETA","","",null,null],[17,"Greek_ETA","","",null,null],[17,"Greek_THETA","","",null,null],[17,"Greek_IOTA","","",null,null],[17,"Greek_KAPPA","","",null,null],[17,"Greek_LAMDA","","",null,null],[17,"Greek_LAMBDA","","",null,null],[17,"Greek_MU","","",null,null],[17,"Greek_NU","","",null,null],[17,"Greek_XI","","",null,null],[17,"Greek_OMICRON","","",null,null],[17,"Greek_PI","","",null,null],[17,"Greek_RHO","","",null,null],[17,"Greek_SIGMA","","",null,null],[17,"Greek_TAU","","",null,null],[17,"Greek_UPSILON","","",null,null],[17,"Greek_PHI","","",null,null],[17,"Greek_CHI","","",null,null],[17,"Greek_PSI","","",null,null],[17,"Greek_OMEGA","","",null,null],[17,"Greek_alpha","","",null,null],[17,"Greek_beta","","",null,null],[17,"Greek_gamma","","",null,null],[17,"Greek_delta","","",null,null],[17,"Greek_epsilon","","",null,null],[17,"Greek_zeta","","",null,null],[17,"Greek_eta","","",null,null],[17,"Greek_theta","","",null,null],[17,"Greek_iota","","",null,null],[17,"Greek_kappa","","",null,null],[17,"Greek_lamda","","",null,null],[17,"Greek_lambda","","",null,null],[17,"Greek_mu","","",null,null],[17,"Greek_nu","","",null,null],[17,"Greek_xi","","",null,null],[17,"Greek_omicron","","",null,null],[17,"Greek_pi","","",null,null],[17,"Greek_rho","","",null,null],[17,"Greek_sigma","","",null,null],[17,"Greek_finalsmallsigma","","",null,null],[17,"Greek_tau","","",null,null],[17,"Greek_upsilon","","",null,null],[17,"Greek_phi","","",null,null],[17,"Greek_chi","","",null,null],[17,"Greek_psi","","",null,null],[17,"Greek_omega","","",null,null],[17,"Greek_switch","","",null,null],[17,"leftradical","","",null,null],[17,"topleftradical","","",null,null],[17,"horizconnector","","",null,null],[17,"topintegral","","",null,null],[17,"botintegral","","",null,null],[17,"vertconnector","","",null,null],[17,"topleftsqbracket","","",null,null],[17,"botleftsqbracket","","",null,null],[17,"toprightsqbracket","","",null,null],[17,"botrightsqbracket","","",null,null],[17,"topleftparens","","",null,null],[17,"botleftparens","","",null,null],[17,"toprightparens","","",null,null],[17,"botrightparens","","",null,null],[17,"leftmiddlecurlybrace","","",null,null],[17,"rightmiddlecurlybrace","","",null,null],[17,"topleftsummation","","",null,null],[17,"botleftsummation","","",null,null],[17,"topvertsummationconnector","","",null,null],[17,"botvertsummationconnector","","",null,null],[17,"toprightsummation","","",null,null],[17,"botrightsummation","","",null,null],[17,"rightmiddlesummation","","",null,null],[17,"lessthanequal","","",null,null],[17,"notequal","","",null,null],[17,"greaterthanequal","","",null,null],[17,"integral","","",null,null],[17,"therefore","","",null,null],[17,"variation","","",null,null],[17,"infinity","","",null,null],[17,"nabla","","",null,null],[17,"approximate","","",null,null],[17,"similarequal","","",null,null],[17,"ifonlyif","","",null,null],[17,"implies","","",null,null],[17,"identical","","",null,null],[17,"radical","","",null,null],[17,"includedin","","",null,null],[17,"includes","","",null,null],[17,"intersection","","",null,null],[17,"union","","",null,null],[17,"logicaland","","",null,null],[17,"logicalor","","",null,null],[17,"partialderivative","","",null,null],[17,"function","","",null,null],[17,"leftarrow","","",null,null],[17,"uparrow","","",null,null],[17,"rightarrow","","",null,null],[17,"downarrow","","",null,null],[17,"blank","","",null,null],[17,"soliddiamond","","",null,null],[17,"checkerboard","","",null,null],[17,"ht","","",null,null],[17,"ff","","",null,null],[17,"cr","","",null,null],[17,"lf","","",null,null],[17,"nl","","",null,null],[17,"vt","","",null,null],[17,"lowrightcorner","","",null,null],[17,"uprightcorner","","",null,null],[17,"upleftcorner","","",null,null],[17,"lowleftcorner","","",null,null],[17,"crossinglines","","",null,null],[17,"horizlinescan1","","",null,null],[17,"horizlinescan3","","",null,null],[17,"horizlinescan5","","",null,null],[17,"horizlinescan7","","",null,null],[17,"horizlinescan9","","",null,null],[17,"leftt","","",null,null],[17,"rightt","","",null,null],[17,"bott","","",null,null],[17,"topt","","",null,null],[17,"vertbar","","",null,null],[17,"emspace","","",null,null],[17,"enspace","","",null,null],[17,"em3space","","",null,null],[17,"em4space","","",null,null],[17,"digitspace","","",null,null],[17,"punctspace","","",null,null],[17,"thinspace","","",null,null],[17,"hairspace","","",null,null],[17,"emdash","","",null,null],[17,"endash","","",null,null],[17,"signifblank","","",null,null],[17,"ellipsis","","",null,null],[17,"doubbaselinedot","","",null,null],[17,"onethird","","",null,null],[17,"twothirds","","",null,null],[17,"onefifth","","",null,null],[17,"twofifths","","",null,null],[17,"threefifths","","",null,null],[17,"fourfifths","","",null,null],[17,"onesixth","","",null,null],[17,"fivesixths","","",null,null],[17,"careof","","",null,null],[17,"figdash","","",null,null],[17,"leftanglebracket","","",null,null],[17,"decimalpoint","","",null,null],[17,"rightanglebracket","","",null,null],[17,"marker","","",null,null],[17,"oneeighth","","",null,null],[17,"threeeighths","","",null,null],[17,"fiveeighths","","",null,null],[17,"seveneighths","","",null,null],[17,"trademark","","",null,null],[17,"signaturemark","","",null,null],[17,"trademarkincircle","","",null,null],[17,"leftopentriangle","","",null,null],[17,"rightopentriangle","","",null,null],[17,"emopencircle","","",null,null],[17,"emopenrectangle","","",null,null],[17,"leftsinglequotemark","","",null,null],[17,"rightsinglequotemark","","",null,null],[17,"leftdoublequotemark","","",null,null],[17,"rightdoublequotemark","","",null,null],[17,"prescription","","",null,null],[17,"permille","","",null,null],[17,"minutes","","",null,null],[17,"seconds","","",null,null],[17,"latincross","","",null,null],[17,"hexagram","","",null,null],[17,"filledrectbullet","","",null,null],[17,"filledlefttribullet","","",null,null],[17,"filledrighttribullet","","",null,null],[17,"emfilledcircle","","",null,null],[17,"emfilledrect","","",null,null],[17,"enopencircbullet","","",null,null],[17,"enopensquarebullet","","",null,null],[17,"openrectbullet","","",null,null],[17,"opentribulletup","","",null,null],[17,"opentribulletdown","","",null,null],[17,"openstar","","",null,null],[17,"enfilledcircbullet","","",null,null],[17,"enfilledsqbullet","","",null,null],[17,"filledtribulletup","","",null,null],[17,"filledtribulletdown","","",null,null],[17,"leftpointer","","",null,null],[17,"rightpointer","","",null,null],[17,"club","","",null,null],[17,"diamond","","",null,null],[17,"heart","","",null,null],[17,"maltesecross","","",null,null],[17,"dagger","","",null,null],[17,"doubledagger","","",null,null],[17,"checkmark","","",null,null],[17,"ballotcross","","",null,null],[17,"musicalsharp","","",null,null],[17,"musicalflat","","",null,null],[17,"malesymbol","","",null,null],[17,"femalesymbol","","",null,null],[17,"telephone","","",null,null],[17,"telephonerecorder","","",null,null],[17,"phonographcopyright","","",null,null],[17,"caret","","",null,null],[17,"singlelowquotemark","","",null,null],[17,"doublelowquotemark","","",null,null],[17,"cursor","","",null,null],[17,"leftcaret","","",null,null],[17,"rightcaret","","",null,null],[17,"downcaret","","",null,null],[17,"upcaret","","",null,null],[17,"overbar","","",null,null],[17,"downtack","","",null,null],[17,"upshoe","","",null,null],[17,"downstile","","",null,null],[17,"underbar","","",null,null],[17,"jot","","",null,null],[17,"quad","","",null,null],[17,"uptack","","",null,null],[17,"circle","","",null,null],[17,"upstile","","",null,null],[17,"downshoe","","",null,null],[17,"rightshoe","","",null,null],[17,"leftshoe","","",null,null],[17,"lefttack","","",null,null],[17,"righttack","","",null,null],[17,"hebrew_doublelowline","","",null,null],[17,"hebrew_aleph","","",null,null],[17,"hebrew_bet","","",null,null],[17,"hebrew_beth","","",null,null],[17,"hebrew_gimel","","",null,null],[17,"hebrew_gimmel","","",null,null],[17,"hebrew_dalet","","",null,null],[17,"hebrew_daleth","","",null,null],[17,"hebrew_he","","",null,null],[17,"hebrew_waw","","",null,null],[17,"hebrew_zain","","",null,null],[17,"hebrew_zayin","","",null,null],[17,"hebrew_chet","","",null,null],[17,"hebrew_het","","",null,null],[17,"hebrew_tet","","",null,null],[17,"hebrew_teth","","",null,null],[17,"hebrew_yod","","",null,null],[17,"hebrew_finalkaph","","",null,null],[17,"hebrew_kaph","","",null,null],[17,"hebrew_lamed","","",null,null],[17,"hebrew_finalmem","","",null,null],[17,"hebrew_mem","","",null,null],[17,"hebrew_finalnun","","",null,null],[17,"hebrew_nun","","",null,null],[17,"hebrew_samech","","",null,null],[17,"hebrew_samekh","","",null,null],[17,"hebrew_ayin","","",null,null],[17,"hebrew_finalpe","","",null,null],[17,"hebrew_pe","","",null,null],[17,"hebrew_finalzade","","",null,null],[17,"hebrew_finalzadi","","",null,null],[17,"hebrew_zade","","",null,null],[17,"hebrew_zadi","","",null,null],[17,"hebrew_qoph","","",null,null],[17,"hebrew_kuf","","",null,null],[17,"hebrew_resh","","",null,null],[17,"hebrew_shin","","",null,null],[17,"hebrew_taw","","",null,null],[17,"hebrew_taf","","",null,null],[17,"Hebrew_switch","","",null,null],[17,"Thai_kokai","","",null,null],[17,"Thai_khokhai","","",null,null],[17,"Thai_khokhuat","","",null,null],[17,"Thai_khokhwai","","",null,null],[17,"Thai_khokhon","","",null,null],[17,"Thai_khorakhang","","",null,null],[17,"Thai_ngongu","","",null,null],[17,"Thai_chochan","","",null,null],[17,"Thai_choching","","",null,null],[17,"Thai_chochang","","",null,null],[17,"Thai_soso","","",null,null],[17,"Thai_chochoe","","",null,null],[17,"Thai_yoying","","",null,null],[17,"Thai_dochada","","",null,null],[17,"Thai_topatak","","",null,null],[17,"Thai_thothan","","",null,null],[17,"Thai_thonangmontho","","",null,null],[17,"Thai_thophuthao","","",null,null],[17,"Thai_nonen","","",null,null],[17,"Thai_dodek","","",null,null],[17,"Thai_totao","","",null,null],[17,"Thai_thothung","","",null,null],[17,"Thai_thothahan","","",null,null],[17,"Thai_thothong","","",null,null],[17,"Thai_nonu","","",null,null],[17,"Thai_bobaimai","","",null,null],[17,"Thai_popla","","",null,null],[17,"Thai_phophung","","",null,null],[17,"Thai_fofa","","",null,null],[17,"Thai_phophan","","",null,null],[17,"Thai_fofan","","",null,null],[17,"Thai_phosamphao","","",null,null],[17,"Thai_moma","","",null,null],[17,"Thai_yoyak","","",null,null],[17,"Thai_rorua","","",null,null],[17,"Thai_ru","","",null,null],[17,"Thai_loling","","",null,null],[17,"Thai_lu","","",null,null],[17,"Thai_wowaen","","",null,null],[17,"Thai_sosala","","",null,null],[17,"Thai_sorusi","","",null,null],[17,"Thai_sosua","","",null,null],[17,"Thai_hohip","","",null,null],[17,"Thai_lochula","","",null,null],[17,"Thai_oang","","",null,null],[17,"Thai_honokhuk","","",null,null],[17,"Thai_paiyannoi","","",null,null],[17,"Thai_saraa","","",null,null],[17,"Thai_maihanakat","","",null,null],[17,"Thai_saraaa","","",null,null],[17,"Thai_saraam","","",null,null],[17,"Thai_sarai","","",null,null],[17,"Thai_saraii","","",null,null],[17,"Thai_saraue","","",null,null],[17,"Thai_sarauee","","",null,null],[17,"Thai_sarau","","",null,null],[17,"Thai_sarauu","","",null,null],[17,"Thai_phinthu","","",null,null],[17,"Thai_maihanakat_maitho","","",null,null],[17,"Thai_baht","","",null,null],[17,"Thai_sarae","","",null,null],[17,"Thai_saraae","","",null,null],[17,"Thai_sarao","","",null,null],[17,"Thai_saraaimaimuan","","",null,null],[17,"Thai_saraaimaimalai","","",null,null],[17,"Thai_lakkhangyao","","",null,null],[17,"Thai_maiyamok","","",null,null],[17,"Thai_maitaikhu","","",null,null],[17,"Thai_maiek","","",null,null],[17,"Thai_maitho","","",null,null],[17,"Thai_maitri","","",null,null],[17,"Thai_maichattawa","","",null,null],[17,"Thai_thanthakhat","","",null,null],[17,"Thai_nikhahit","","",null,null],[17,"Thai_leksun","","",null,null],[17,"Thai_leknung","","",null,null],[17,"Thai_leksong","","",null,null],[17,"Thai_leksam","","",null,null],[17,"Thai_leksi","","",null,null],[17,"Thai_lekha","","",null,null],[17,"Thai_lekhok","","",null,null],[17,"Thai_lekchet","","",null,null],[17,"Thai_lekpaet","","",null,null],[17,"Thai_lekkao","","",null,null],[17,"Hangul","","",null,null],[17,"Hangul_Start","","",null,null],[17,"Hangul_End","","",null,null],[17,"Hangul_Hanja","","",null,null],[17,"Hangul_Jamo","","",null,null],[17,"Hangul_Romaja","","",null,null],[17,"Hangul_Codeinput","","",null,null],[17,"Hangul_Jeonja","","",null,null],[17,"Hangul_Banja","","",null,null],[17,"Hangul_PreHanja","","",null,null],[17,"Hangul_PostHanja","","",null,null],[17,"Hangul_SingleCandidate","","",null,null],[17,"Hangul_MultipleCandidate","","",null,null],[17,"Hangul_PreviousCandidate","","",null,null],[17,"Hangul_Special","","",null,null],[17,"Hangul_switch","","",null,null],[17,"Hangul_Kiyeog","","",null,null],[17,"Hangul_SsangKiyeog","","",null,null],[17,"Hangul_KiyeogSios","","",null,null],[17,"Hangul_Nieun","","",null,null],[17,"Hangul_NieunJieuj","","",null,null],[17,"Hangul_NieunHieuh","","",null,null],[17,"Hangul_Dikeud","","",null,null],[17,"Hangul_SsangDikeud","","",null,null],[17,"Hangul_Rieul","","",null,null],[17,"Hangul_RieulKiyeog","","",null,null],[17,"Hangul_RieulMieum","","",null,null],[17,"Hangul_RieulPieub","","",null,null],[17,"Hangul_RieulSios","","",null,null],[17,"Hangul_RieulTieut","","",null,null],[17,"Hangul_RieulPhieuf","","",null,null],[17,"Hangul_RieulHieuh","","",null,null],[17,"Hangul_Mieum","","",null,null],[17,"Hangul_Pieub","","",null,null],[17,"Hangul_SsangPieub","","",null,null],[17,"Hangul_PieubSios","","",null,null],[17,"Hangul_Sios","","",null,null],[17,"Hangul_SsangSios","","",null,null],[17,"Hangul_Ieung","","",null,null],[17,"Hangul_Jieuj","","",null,null],[17,"Hangul_SsangJieuj","","",null,null],[17,"Hangul_Cieuc","","",null,null],[17,"Hangul_Khieuq","","",null,null],[17,"Hangul_Tieut","","",null,null],[17,"Hangul_Phieuf","","",null,null],[17,"Hangul_Hieuh","","",null,null],[17,"Hangul_A","","",null,null],[17,"Hangul_AE","","",null,null],[17,"Hangul_YA","","",null,null],[17,"Hangul_YAE","","",null,null],[17,"Hangul_EO","","",null,null],[17,"Hangul_E","","",null,null],[17,"Hangul_YEO","","",null,null],[17,"Hangul_YE","","",null,null],[17,"Hangul_O","","",null,null],[17,"Hangul_WA","","",null,null],[17,"Hangul_WAE","","",null,null],[17,"Hangul_OE","","",null,null],[17,"Hangul_YO","","",null,null],[17,"Hangul_U","","",null,null],[17,"Hangul_WEO","","",null,null],[17,"Hangul_WE","","",null,null],[17,"Hangul_WI","","",null,null],[17,"Hangul_YU","","",null,null],[17,"Hangul_EU","","",null,null],[17,"Hangul_YI","","",null,null],[17,"Hangul_I","","",null,null],[17,"Hangul_J_Kiyeog","","",null,null],[17,"Hangul_J_SsangKiyeog","","",null,null],[17,"Hangul_J_KiyeogSios","","",null,null],[17,"Hangul_J_Nieun","","",null,null],[17,"Hangul_J_NieunJieuj","","",null,null],[17,"Hangul_J_NieunHieuh","","",null,null],[17,"Hangul_J_Dikeud","","",null,null],[17,"Hangul_J_Rieul","","",null,null],[17,"Hangul_J_RieulKiyeog","","",null,null],[17,"Hangul_J_RieulMieum","","",null,null],[17,"Hangul_J_RieulPieub","","",null,null],[17,"Hangul_J_RieulSios","","",null,null],[17,"Hangul_J_RieulTieut","","",null,null],[17,"Hangul_J_RieulPhieuf","","",null,null],[17,"Hangul_J_RieulHieuh","","",null,null],[17,"Hangul_J_Mieum","","",null,null],[17,"Hangul_J_Pieub","","",null,null],[17,"Hangul_J_PieubSios","","",null,null],[17,"Hangul_J_Sios","","",null,null],[17,"Hangul_J_SsangSios","","",null,null],[17,"Hangul_J_Ieung","","",null,null],[17,"Hangul_J_Jieuj","","",null,null],[17,"Hangul_J_Cieuc","","",null,null],[17,"Hangul_J_Khieuq","","",null,null],[17,"Hangul_J_Tieut","","",null,null],[17,"Hangul_J_Phieuf","","",null,null],[17,"Hangul_J_Hieuh","","",null,null],[17,"Hangul_RieulYeorinHieuh","","",null,null],[17,"Hangul_SunkyeongeumMieum","","",null,null],[17,"Hangul_SunkyeongeumPieub","","",null,null],[17,"Hangul_PanSios","","",null,null],[17,"Hangul_KkogjiDalrinIeung","","",null,null],[17,"Hangul_SunkyeongeumPhieuf","","",null,null],[17,"Hangul_YeorinHieuh","","",null,null],[17,"Hangul_AraeA","","",null,null],[17,"Hangul_AraeAE","","",null,null],[17,"Hangul_J_PanSios","","",null,null],[17,"Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"Hangul_J_YeorinHieuh","","",null,null],[17,"Korean_Won","","",null,null],[17,"Armenian_ligature_ew","","",null,null],[17,"Armenian_full_stop","","",null,null],[17,"Armenian_verjaket","","",null,null],[17,"Armenian_separation_mark","","",null,null],[17,"Armenian_but","","",null,null],[17,"Armenian_hyphen","","",null,null],[17,"Armenian_yentamna","","",null,null],[17,"Armenian_exclam","","",null,null],[17,"Armenian_amanak","","",null,null],[17,"Armenian_accent","","",null,null],[17,"Armenian_shesht","","",null,null],[17,"Armenian_question","","",null,null],[17,"Armenian_paruyk","","",null,null],[17,"Armenian_AYB","","",null,null],[17,"Armenian_ayb","","",null,null],[17,"Armenian_BEN","","",null,null],[17,"Armenian_ben","","",null,null],[17,"Armenian_GIM","","",null,null],[17,"Armenian_gim","","",null,null],[17,"Armenian_DA","","",null,null],[17,"Armenian_da","","",null,null],[17,"Armenian_YECH","","",null,null],[17,"Armenian_yech","","",null,null],[17,"Armenian_ZA","","",null,null],[17,"Armenian_za","","",null,null],[17,"Armenian_E","","",null,null],[17,"Armenian_e","","",null,null],[17,"Armenian_AT","","",null,null],[17,"Armenian_at","","",null,null],[17,"Armenian_TO","","",null,null],[17,"Armenian_to","","",null,null],[17,"Armenian_ZHE","","",null,null],[17,"Armenian_zhe","","",null,null],[17,"Armenian_INI","","",null,null],[17,"Armenian_ini","","",null,null],[17,"Armenian_LYUN","","",null,null],[17,"Armenian_lyun","","",null,null],[17,"Armenian_KHE","","",null,null],[17,"Armenian_khe","","",null,null],[17,"Armenian_TSA","","",null,null],[17,"Armenian_tsa","","",null,null],[17,"Armenian_KEN","","",null,null],[17,"Armenian_ken","","",null,null],[17,"Armenian_HO","","",null,null],[17,"Armenian_ho","","",null,null],[17,"Armenian_DZA","","",null,null],[17,"Armenian_dza","","",null,null],[17,"Armenian_GHAT","","",null,null],[17,"Armenian_ghat","","",null,null],[17,"Armenian_TCHE","","",null,null],[17,"Armenian_tche","","",null,null],[17,"Armenian_MEN","","",null,null],[17,"Armenian_men","","",null,null],[17,"Armenian_HI","","",null,null],[17,"Armenian_hi","","",null,null],[17,"Armenian_NU","","",null,null],[17,"Armenian_nu","","",null,null],[17,"Armenian_SHA","","",null,null],[17,"Armenian_sha","","",null,null],[17,"Armenian_VO","","",null,null],[17,"Armenian_vo","","",null,null],[17,"Armenian_CHA","","",null,null],[17,"Armenian_cha","","",null,null],[17,"Armenian_PE","","",null,null],[17,"Armenian_pe","","",null,null],[17,"Armenian_JE","","",null,null],[17,"Armenian_je","","",null,null],[17,"Armenian_RA","","",null,null],[17,"Armenian_ra","","",null,null],[17,"Armenian_SE","","",null,null],[17,"Armenian_se","","",null,null],[17,"Armenian_VEV","","",null,null],[17,"Armenian_vev","","",null,null],[17,"Armenian_TYUN","","",null,null],[17,"Armenian_tyun","","",null,null],[17,"Armenian_RE","","",null,null],[17,"Armenian_re","","",null,null],[17,"Armenian_TSO","","",null,null],[17,"Armenian_tso","","",null,null],[17,"Armenian_VYUN","","",null,null],[17,"Armenian_vyun","","",null,null],[17,"Armenian_PYUR","","",null,null],[17,"Armenian_pyur","","",null,null],[17,"Armenian_KE","","",null,null],[17,"Armenian_ke","","",null,null],[17,"Armenian_O","","",null,null],[17,"Armenian_o","","",null,null],[17,"Armenian_FE","","",null,null],[17,"Armenian_fe","","",null,null],[17,"Armenian_apostrophe","","",null,null],[17,"Georgian_an","","",null,null],[17,"Georgian_ban","","",null,null],[17,"Georgian_gan","","",null,null],[17,"Georgian_don","","",null,null],[17,"Georgian_en","","",null,null],[17,"Georgian_vin","","",null,null],[17,"Georgian_zen","","",null,null],[17,"Georgian_tan","","",null,null],[17,"Georgian_in","","",null,null],[17,"Georgian_kan","","",null,null],[17,"Georgian_las","","",null,null],[17,"Georgian_man","","",null,null],[17,"Georgian_nar","","",null,null],[17,"Georgian_on","","",null,null],[17,"Georgian_par","","",null,null],[17,"Georgian_zhar","","",null,null],[17,"Georgian_rae","","",null,null],[17,"Georgian_san","","",null,null],[17,"Georgian_tar","","",null,null],[17,"Georgian_un","","",null,null],[17,"Georgian_phar","","",null,null],[17,"Georgian_khar","","",null,null],[17,"Georgian_ghan","","",null,null],[17,"Georgian_qar","","",null,null],[17,"Georgian_shin","","",null,null],[17,"Georgian_chin","","",null,null],[17,"Georgian_can","","",null,null],[17,"Georgian_jil","","",null,null],[17,"Georgian_cil","","",null,null],[17,"Georgian_char","","",null,null],[17,"Georgian_xan","","",null,null],[17,"Georgian_jhan","","",null,null],[17,"Georgian_hae","","",null,null],[17,"Georgian_he","","",null,null],[17,"Georgian_hie","","",null,null],[17,"Georgian_we","","",null,null],[17,"Georgian_har","","",null,null],[17,"Georgian_hoe","","",null,null],[17,"Georgian_fi","","",null,null],[17,"Xabovedot","","",null,null],[17,"Ibreve","","",null,null],[17,"Zstroke","","",null,null],[17,"Gcaron","","",null,null],[17,"Ocaron","","",null,null],[17,"Obarred","","",null,null],[17,"xabovedot","","",null,null],[17,"ibreve","","",null,null],[17,"zstroke","","",null,null],[17,"gcaron","","",null,null],[17,"ocaron","","",null,null],[17,"obarred","","",null,null],[17,"SCHWA","","",null,null],[17,"schwa","","",null,null],[17,"EZH","","",null,null],[17,"ezh","","",null,null],[17,"Lbelowdot","","",null,null],[17,"lbelowdot","","",null,null],[17,"Abelowdot","","",null,null],[17,"abelowdot","","",null,null],[17,"Ahook","","",null,null],[17,"ahook","","",null,null],[17,"Acircumflexacute","","",null,null],[17,"acircumflexacute","","",null,null],[17,"Acircumflexgrave","","",null,null],[17,"acircumflexgrave","","",null,null],[17,"Acircumflexhook","","",null,null],[17,"acircumflexhook","","",null,null],[17,"Acircumflextilde","","",null,null],[17,"acircumflextilde","","",null,null],[17,"Acircumflexbelowdot","","",null,null],[17,"acircumflexbelowdot","","",null,null],[17,"Abreveacute","","",null,null],[17,"abreveacute","","",null,null],[17,"Abrevegrave","","",null,null],[17,"abrevegrave","","",null,null],[17,"Abrevehook","","",null,null],[17,"abrevehook","","",null,null],[17,"Abrevetilde","","",null,null],[17,"abrevetilde","","",null,null],[17,"Abrevebelowdot","","",null,null],[17,"abrevebelowdot","","",null,null],[17,"Ebelowdot","","",null,null],[17,"ebelowdot","","",null,null],[17,"Ehook","","",null,null],[17,"ehook","","",null,null],[17,"Etilde","","",null,null],[17,"etilde","","",null,null],[17,"Ecircumflexacute","","",null,null],[17,"ecircumflexacute","","",null,null],[17,"Ecircumflexgrave","","",null,null],[17,"ecircumflexgrave","","",null,null],[17,"Ecircumflexhook","","",null,null],[17,"ecircumflexhook","","",null,null],[17,"Ecircumflextilde","","",null,null],[17,"ecircumflextilde","","",null,null],[17,"Ecircumflexbelowdot","","",null,null],[17,"ecircumflexbelowdot","","",null,null],[17,"Ihook","","",null,null],[17,"ihook","","",null,null],[17,"Ibelowdot","","",null,null],[17,"ibelowdot","","",null,null],[17,"Obelowdot","","",null,null],[17,"obelowdot","","",null,null],[17,"Ohook","","",null,null],[17,"ohook","","",null,null],[17,"Ocircumflexacute","","",null,null],[17,"ocircumflexacute","","",null,null],[17,"Ocircumflexgrave","","",null,null],[17,"ocircumflexgrave","","",null,null],[17,"Ocircumflexhook","","",null,null],[17,"ocircumflexhook","","",null,null],[17,"Ocircumflextilde","","",null,null],[17,"ocircumflextilde","","",null,null],[17,"Ocircumflexbelowdot","","",null,null],[17,"ocircumflexbelowdot","","",null,null],[17,"Ohornacute","","",null,null],[17,"ohornacute","","",null,null],[17,"Ohorngrave","","",null,null],[17,"ohorngrave","","",null,null],[17,"Ohornhook","","",null,null],[17,"ohornhook","","",null,null],[17,"Ohorntilde","","",null,null],[17,"ohorntilde","","",null,null],[17,"Ohornbelowdot","","",null,null],[17,"ohornbelowdot","","",null,null],[17,"Ubelowdot","","",null,null],[17,"ubelowdot","","",null,null],[17,"Uhook","","",null,null],[17,"uhook","","",null,null],[17,"Uhornacute","","",null,null],[17,"uhornacute","","",null,null],[17,"Uhorngrave","","",null,null],[17,"uhorngrave","","",null,null],[17,"Uhornhook","","",null,null],[17,"uhornhook","","",null,null],[17,"Uhorntilde","","",null,null],[17,"uhorntilde","","",null,null],[17,"Uhornbelowdot","","",null,null],[17,"uhornbelowdot","","",null,null],[17,"Ybelowdot","","",null,null],[17,"ybelowdot","","",null,null],[17,"Yhook","","",null,null],[17,"yhook","","",null,null],[17,"Ytilde","","",null,null],[17,"ytilde","","",null,null],[17,"Ohorn","","",null,null],[17,"ohorn","","",null,null],[17,"Uhorn","","",null,null],[17,"uhorn","","",null,null],[17,"EcuSign","","",null,null],[17,"ColonSign","","",null,null],[17,"CruzeiroSign","","",null,null],[17,"FFrancSign","","",null,null],[17,"LiraSign","","",null,null],[17,"MillSign","","",null,null],[17,"NairaSign","","",null,null],[17,"PesetaSign","","",null,null],[17,"RupeeSign","","",null,null],[17,"WonSign","","",null,null],[17,"NewSheqelSign","","",null,null],[17,"DongSign","","",null,null],[17,"EuroSign","","",null,null],[17,"zerosuperior","","",null,null],[17,"foursuperior","","",null,null],[17,"fivesuperior","","",null,null],[17,"sixsuperior","","",null,null],[17,"sevensuperior","","",null,null],[17,"eightsuperior","","",null,null],[17,"ninesuperior","","",null,null],[17,"zerosubscript","","",null,null],[17,"onesubscript","","",null,null],[17,"twosubscript","","",null,null],[17,"threesubscript","","",null,null],[17,"foursubscript","","",null,null],[17,"fivesubscript","","",null,null],[17,"sixsubscript","","",null,null],[17,"sevensubscript","","",null,null],[17,"eightsubscript","","",null,null],[17,"ninesubscript","","",null,null],[17,"partdifferential","","",null,null],[17,"emptyset","","",null,null],[17,"elementof","","",null,null],[17,"notelementof","","",null,null],[17,"containsas","","",null,null],[17,"squareroot","","",null,null],[17,"cuberoot","","",null,null],[17,"fourthroot","","",null,null],[17,"dintegral","","",null,null],[17,"tintegral","","",null,null],[17,"because","","",null,null],[17,"approxeq","","",null,null],[17,"notapproxeq","","",null,null],[17,"notidentical","","",null,null],[17,"stricteq","","",null,null],[17,"braille_dot_1","","",null,null],[17,"braille_dot_2","","",null,null],[17,"braille_dot_3","","",null,null],[17,"braille_dot_4","","",null,null],[17,"braille_dot_5","","",null,null],[17,"braille_dot_6","","",null,null],[17,"braille_dot_7","","",null,null],[17,"braille_dot_8","","",null,null],[17,"braille_dot_9","","",null,null],[17,"braille_dot_10","","",null,null],[17,"braille_blank","","",null,null],[17,"braille_dots_1","","",null,null],[17,"braille_dots_2","","",null,null],[17,"braille_dots_12","","",null,null],[17,"braille_dots_3","","",null,null],[17,"braille_dots_13","","",null,null],[17,"braille_dots_23","","",null,null],[17,"braille_dots_123","","",null,null],[17,"braille_dots_4","","",null,null],[17,"braille_dots_14","","",null,null],[17,"braille_dots_24","","",null,null],[17,"braille_dots_124","","",null,null],[17,"braille_dots_34","","",null,null],[17,"braille_dots_134","","",null,null],[17,"braille_dots_234","","",null,null],[17,"braille_dots_1234","","",null,null],[17,"braille_dots_5","","",null,null],[17,"braille_dots_15","","",null,null],[17,"braille_dots_25","","",null,null],[17,"braille_dots_125","","",null,null],[17,"braille_dots_35","","",null,null],[17,"braille_dots_135","","",null,null],[17,"braille_dots_235","","",null,null],[17,"braille_dots_1235","","",null,null],[17,"braille_dots_45","","",null,null],[17,"braille_dots_145","","",null,null],[17,"braille_dots_245","","",null,null],[17,"braille_dots_1245","","",null,null],[17,"braille_dots_345","","",null,null],[17,"braille_dots_1345","","",null,null],[17,"braille_dots_2345","","",null,null],[17,"braille_dots_12345","","",null,null],[17,"braille_dots_6","","",null,null],[17,"braille_dots_16","","",null,null],[17,"braille_dots_26","","",null,null],[17,"braille_dots_126","","",null,null],[17,"braille_dots_36","","",null,null],[17,"braille_dots_136","","",null,null],[17,"braille_dots_236","","",null,null],[17,"braille_dots_1236","","",null,null],[17,"braille_dots_46","","",null,null],[17,"braille_dots_146","","",null,null],[17,"braille_dots_246","","",null,null],[17,"braille_dots_1246","","",null,null],[17,"braille_dots_346","","",null,null],[17,"braille_dots_1346","","",null,null],[17,"braille_dots_2346","","",null,null],[17,"braille_dots_12346","","",null,null],[17,"braille_dots_56","","",null,null],[17,"braille_dots_156","","",null,null],[17,"braille_dots_256","","",null,null],[17,"braille_dots_1256","","",null,null],[17,"braille_dots_356","","",null,null],[17,"braille_dots_1356","","",null,null],[17,"braille_dots_2356","","",null,null],[17,"braille_dots_12356","","",null,null],[17,"braille_dots_456","","",null,null],[17,"braille_dots_1456","","",null,null],[17,"braille_dots_2456","","",null,null],[17,"braille_dots_12456","","",null,null],[17,"braille_dots_3456","","",null,null],[17,"braille_dots_13456","","",null,null],[17,"braille_dots_23456","","",null,null],[17,"braille_dots_123456","","",null,null],[17,"braille_dots_7","","",null,null],[17,"braille_dots_17","","",null,null],[17,"braille_dots_27","","",null,null],[17,"braille_dots_127","","",null,null],[17,"braille_dots_37","","",null,null],[17,"braille_dots_137","","",null,null],[17,"braille_dots_237","","",null,null],[17,"braille_dots_1237","","",null,null],[17,"braille_dots_47","","",null,null],[17,"braille_dots_147","","",null,null],[17,"braille_dots_247","","",null,null],[17,"braille_dots_1247","","",null,null],[17,"braille_dots_347","","",null,null],[17,"braille_dots_1347","","",null,null],[17,"braille_dots_2347","","",null,null],[17,"braille_dots_12347","","",null,null],[17,"braille_dots_57","","",null,null],[17,"braille_dots_157","","",null,null],[17,"braille_dots_257","","",null,null],[17,"braille_dots_1257","","",null,null],[17,"braille_dots_357","","",null,null],[17,"braille_dots_1357","","",null,null],[17,"braille_dots_2357","","",null,null],[17,"braille_dots_12357","","",null,null],[17,"braille_dots_457","","",null,null],[17,"braille_dots_1457","","",null,null],[17,"braille_dots_2457","","",null,null],[17,"braille_dots_12457","","",null,null],[17,"braille_dots_3457","","",null,null],[17,"braille_dots_13457","","",null,null],[17,"braille_dots_23457","","",null,null],[17,"braille_dots_123457","","",null,null],[17,"braille_dots_67","","",null,null],[17,"braille_dots_167","","",null,null],[17,"braille_dots_267","","",null,null],[17,"braille_dots_1267","","",null,null],[17,"braille_dots_367","","",null,null],[17,"braille_dots_1367","","",null,null],[17,"braille_dots_2367","","",null,null],[17,"braille_dots_12367","","",null,null],[17,"braille_dots_467","","",null,null],[17,"braille_dots_1467","","",null,null],[17,"braille_dots_2467","","",null,null],[17,"braille_dots_12467","","",null,null],[17,"braille_dots_3467","","",null,null],[17,"braille_dots_13467","","",null,null],[17,"braille_dots_23467","","",null,null],[17,"braille_dots_123467","","",null,null],[17,"braille_dots_567","","",null,null],[17,"braille_dots_1567","","",null,null],[17,"braille_dots_2567","","",null,null],[17,"braille_dots_12567","","",null,null],[17,"braille_dots_3567","","",null,null],[17,"braille_dots_13567","","",null,null],[17,"braille_dots_23567","","",null,null],[17,"braille_dots_123567","","",null,null],[17,"braille_dots_4567","","",null,null],[17,"braille_dots_14567","","",null,null],[17,"braille_dots_24567","","",null,null],[17,"braille_dots_124567","","",null,null],[17,"braille_dots_34567","","",null,null],[17,"braille_dots_134567","","",null,null],[17,"braille_dots_234567","","",null,null],[17,"braille_dots_1234567","","",null,null],[17,"braille_dots_8","","",null,null],[17,"braille_dots_18","","",null,null],[17,"braille_dots_28","","",null,null],[17,"braille_dots_128","","",null,null],[17,"braille_dots_38","","",null,null],[17,"braille_dots_138","","",null,null],[17,"braille_dots_238","","",null,null],[17,"braille_dots_1238","","",null,null],[17,"braille_dots_48","","",null,null],[17,"braille_dots_148","","",null,null],[17,"braille_dots_248","","",null,null],[17,"braille_dots_1248","","",null,null],[17,"braille_dots_348","","",null,null],[17,"braille_dots_1348","","",null,null],[17,"braille_dots_2348","","",null,null],[17,"braille_dots_12348","","",null,null],[17,"braille_dots_58","","",null,null],[17,"braille_dots_158","","",null,null],[17,"braille_dots_258","","",null,null],[17,"braille_dots_1258","","",null,null],[17,"braille_dots_358","","",null,null],[17,"braille_dots_1358","","",null,null],[17,"braille_dots_2358","","",null,null],[17,"braille_dots_12358","","",null,null],[17,"braille_dots_458","","",null,null],[17,"braille_dots_1458","","",null,null],[17,"braille_dots_2458","","",null,null],[17,"braille_dots_12458","","",null,null],[17,"braille_dots_3458","","",null,null],[17,"braille_dots_13458","","",null,null],[17,"braille_dots_23458","","",null,null],[17,"braille_dots_123458","","",null,null],[17,"braille_dots_68","","",null,null],[17,"braille_dots_168","","",null,null],[17,"braille_dots_268","","",null,null],[17,"braille_dots_1268","","",null,null],[17,"braille_dots_368","","",null,null],[17,"braille_dots_1368","","",null,null],[17,"braille_dots_2368","","",null,null],[17,"braille_dots_12368","","",null,null],[17,"braille_dots_468","","",null,null],[17,"braille_dots_1468","","",null,null],[17,"braille_dots_2468","","",null,null],[17,"braille_dots_12468","","",null,null],[17,"braille_dots_3468","","",null,null],[17,"braille_dots_13468","","",null,null],[17,"braille_dots_23468","","",null,null],[17,"braille_dots_123468","","",null,null],[17,"braille_dots_568","","",null,null],[17,"braille_dots_1568","","",null,null],[17,"braille_dots_2568","","",null,null],[17,"braille_dots_12568","","",null,null],[17,"braille_dots_3568","","",null,null],[17,"braille_dots_13568","","",null,null],[17,"braille_dots_23568","","",null,null],[17,"braille_dots_123568","","",null,null],[17,"braille_dots_4568","","",null,null],[17,"braille_dots_14568","","",null,null],[17,"braille_dots_24568","","",null,null],[17,"braille_dots_124568","","",null,null],[17,"braille_dots_34568","","",null,null],[17,"braille_dots_134568","","",null,null],[17,"braille_dots_234568","","",null,null],[17,"braille_dots_1234568","","",null,null],[17,"braille_dots_78","","",null,null],[17,"braille_dots_178","","",null,null],[17,"braille_dots_278","","",null,null],[17,"braille_dots_1278","","",null,null],[17,"braille_dots_378","","",null,null],[17,"braille_dots_1378","","",null,null],[17,"braille_dots_2378","","",null,null],[17,"braille_dots_12378","","",null,null],[17,"braille_dots_478","","",null,null],[17,"braille_dots_1478","","",null,null],[17,"braille_dots_2478","","",null,null],[17,"braille_dots_12478","","",null,null],[17,"braille_dots_3478","","",null,null],[17,"braille_dots_13478","","",null,null],[17,"braille_dots_23478","","",null,null],[17,"braille_dots_123478","","",null,null],[17,"braille_dots_578","","",null,null],[17,"braille_dots_1578","","",null,null],[17,"braille_dots_2578","","",null,null],[17,"braille_dots_12578","","",null,null],[17,"braille_dots_3578","","",null,null],[17,"braille_dots_13578","","",null,null],[17,"braille_dots_23578","","",null,null],[17,"braille_dots_123578","","",null,null],[17,"braille_dots_4578","","",null,null],[17,"braille_dots_14578","","",null,null],[17,"braille_dots_24578","","",null,null],[17,"braille_dots_124578","","",null,null],[17,"braille_dots_34578","","",null,null],[17,"braille_dots_134578","","",null,null],[17,"braille_dots_234578","","",null,null],[17,"braille_dots_1234578","","",null,null],[17,"braille_dots_678","","",null,null],[17,"braille_dots_1678","","",null,null],[17,"braille_dots_2678","","",null,null],[17,"braille_dots_12678","","",null,null],[17,"braille_dots_3678","","",null,null],[17,"braille_dots_13678","","",null,null],[17,"braille_dots_23678","","",null,null],[17,"braille_dots_123678","","",null,null],[17,"braille_dots_4678","","",null,null],[17,"braille_dots_14678","","",null,null],[17,"braille_dots_24678","","",null,null],[17,"braille_dots_124678","","",null,null],[17,"braille_dots_34678","","",null,null],[17,"braille_dots_134678","","",null,null],[17,"braille_dots_234678","","",null,null],[17,"braille_dots_1234678","","",null,null],[17,"braille_dots_5678","","",null,null],[17,"braille_dots_15678","","",null,null],[17,"braille_dots_25678","","",null,null],[17,"braille_dots_125678","","",null,null],[17,"braille_dots_35678","","",null,null],[17,"braille_dots_135678","","",null,null],[17,"braille_dots_235678","","",null,null],[17,"braille_dots_1235678","","",null,null],[17,"braille_dots_45678","","",null,null],[17,"braille_dots_145678","","",null,null],[17,"braille_dots_245678","","",null,null],[17,"braille_dots_1245678","","",null,null],[17,"braille_dots_345678","","",null,null],[17,"braille_dots_1345678","","",null,null],[17,"braille_dots_2345678","","",null,null],[17,"braille_dots_12345678","","",null,null],[17,"Sinh_ng","","",null,null],[17,"Sinh_h2","","",null,null],[17,"Sinh_a","","",null,null],[17,"Sinh_aa","","",null,null],[17,"Sinh_ae","","",null,null],[17,"Sinh_aee","","",null,null],[17,"Sinh_i","","",null,null],[17,"Sinh_ii","","",null,null],[17,"Sinh_u","","",null,null],[17,"Sinh_uu","","",null,null],[17,"Sinh_ri","","",null,null],[17,"Sinh_rii","","",null,null],[17,"Sinh_lu","","",null,null],[17,"Sinh_luu","","",null,null],[17,"Sinh_e","","",null,null],[17,"Sinh_ee","","",null,null],[17,"Sinh_ai","","",null,null],[17,"Sinh_o","","",null,null],[17,"Sinh_oo","","",null,null],[17,"Sinh_au","","",null,null],[17,"Sinh_ka","","",null,null],[17,"Sinh_kha","","",null,null],[17,"Sinh_ga","","",null,null],[17,"Sinh_gha","","",null,null],[17,"Sinh_ng2","","",null,null],[17,"Sinh_nga","","",null,null],[17,"Sinh_ca","","",null,null],[17,"Sinh_cha","","",null,null],[17,"Sinh_ja","","",null,null],[17,"Sinh_jha","","",null,null],[17,"Sinh_nya","","",null,null],[17,"Sinh_jnya","","",null,null],[17,"Sinh_nja","","",null,null],[17,"Sinh_tta","","",null,null],[17,"Sinh_ttha","","",null,null],[17,"Sinh_dda","","",null,null],[17,"Sinh_ddha","","",null,null],[17,"Sinh_nna","","",null,null],[17,"Sinh_ndda","","",null,null],[17,"Sinh_tha","","",null,null],[17,"Sinh_thha","","",null,null],[17,"Sinh_dha","","",null,null],[17,"Sinh_dhha","","",null,null],[17,"Sinh_na","","",null,null],[17,"Sinh_ndha","","",null,null],[17,"Sinh_pa","","",null,null],[17,"Sinh_pha","","",null,null],[17,"Sinh_ba","","",null,null],[17,"Sinh_bha","","",null,null],[17,"Sinh_ma","","",null,null],[17,"Sinh_mba","","",null,null],[17,"Sinh_ya","","",null,null],[17,"Sinh_ra","","",null,null],[17,"Sinh_la","","",null,null],[17,"Sinh_va","","",null,null],[17,"Sinh_sha","","",null,null],[17,"Sinh_ssha","","",null,null],[17,"Sinh_sa","","",null,null],[17,"Sinh_ha","","",null,null],[17,"Sinh_lla","","",null,null],[17,"Sinh_fa","","",null,null],[17,"Sinh_al","","",null,null],[17,"Sinh_aa2","","",null,null],[17,"Sinh_ae2","","",null,null],[17,"Sinh_aee2","","",null,null],[17,"Sinh_i2","","",null,null],[17,"Sinh_ii2","","",null,null],[17,"Sinh_u2","","",null,null],[17,"Sinh_uu2","","",null,null],[17,"Sinh_ru2","","",null,null],[17,"Sinh_e2","","",null,null],[17,"Sinh_ee2","","",null,null],[17,"Sinh_ai2","","",null,null],[17,"Sinh_o2","","",null,null],[17,"Sinh_oo2","","",null,null],[17,"Sinh_au2","","",null,null],[17,"Sinh_lu2","","",null,null],[17,"Sinh_ruu2","","",null,null],[17,"Sinh_luu2","","",null,null],[17,"Sinh_kunddaliya","","",null,null],[17,"ModeLock","","",null,null],[17,"MonBrightnessUp","","",null,null],[17,"MonBrightnessDown","","",null,null],[17,"KbdLightOnOff","","",null,null],[17,"KbdBrightnessUp","","",null,null],[17,"KbdBrightnessDown","","",null,null],[17,"Standby","","",null,null],[17,"AudioLowerVolume","","",null,null],[17,"AudioMute","","",null,null],[17,"AudioRaiseVolume","","",null,null],[17,"AudioPlay","","",null,null],[17,"AudioStop","","",null,null],[17,"AudioPrev","","",null,null],[17,"AudioNext","","",null,null],[17,"HomePage","","",null,null],[17,"Mail","","",null,null],[17,"Start","","",null,null],[17,"Search","","",null,null],[17,"AudioRecord","","",null,null],[17,"Calculator","","",null,null],[17,"Memo","","",null,null],[17,"ToDoList","","",null,null],[17,"Calendar","","",null,null],[17,"PowerDown","","",null,null],[17,"ContrastAdjust","","",null,null],[17,"RockerUp","","",null,null],[17,"RockerDown","","",null,null],[17,"RockerEnter","","",null,null],[17,"Back","","",null,null],[17,"Forward","","",null,null],[17,"Stop","","",null,null],[17,"Refresh","","",null,null],[17,"PowerOff","","",null,null],[17,"WakeUp","","",null,null],[17,"Eject","","",null,null],[17,"ScreenSaver","","",null,null],[17,"WWW","","",null,null],[17,"Sleep","","",null,null],[17,"Favorites","","",null,null],[17,"AudioPause","","",null,null],[17,"AudioMedia","","",null,null],[17,"MyComputer","","",null,null],[17,"VendorHome","","",null,null],[17,"LightBulb","","",null,null],[17,"Shop","","",null,null],[17,"History","","",null,null],[17,"OpenURL","","",null,null],[17,"AddFavorite","","",null,null],[17,"HotLinks","","",null,null],[17,"BrightnessAdjust","","",null,null],[17,"Finance","","",null,null],[17,"Community","","",null,null],[17,"AudioRewind","","",null,null],[17,"BackForward","","",null,null],[17,"Launch0","","",null,null],[17,"Launch1","","",null,null],[17,"Launch2","","",null,null],[17,"Launch3","","",null,null],[17,"Launch4","","",null,null],[17,"Launch5","","",null,null],[17,"Launch6","","",null,null],[17,"Launch7","","",null,null],[17,"Launch8","","",null,null],[17,"Launch9","","",null,null],[17,"LaunchA","","",null,null],[17,"LaunchB","","",null,null],[17,"LaunchC","","",null,null],[17,"LaunchD","","",null,null],[17,"LaunchE","","",null,null],[17,"LaunchF","","",null,null],[17,"ApplicationLeft","","",null,null],[17,"ApplicationRight","","",null,null],[17,"Book","","",null,null],[17,"CD","","",null,null],[17,"WindowClear","","",null,null],[17,"Close","","",null,null],[17,"Copy","","",null,null],[17,"Cut","","",null,null],[17,"Display","","",null,null],[17,"DOS","","",null,null],[17,"Documents","","",null,null],[17,"Excel","","",null,null],[17,"Explorer","","",null,null],[17,"Game","","",null,null],[17,"Go","","",null,null],[17,"iTouch","","",null,null],[17,"LogOff","","",null,null],[17,"Market","","",null,null],[17,"Meeting","","",null,null],[17,"MenuKB","","",null,null],[17,"MenuPB","","",null,null],[17,"MySites","","",null,null],[17,"New","","",null,null],[17,"News","","",null,null],[17,"OfficeHome","","",null,null],[17,"Open","","",null,null],[17,"Option","","",null,null],[17,"Paste","","",null,null],[17,"Phone","","",null,null],[17,"Reply","","",null,null],[17,"Reload","","",null,null],[17,"RotateWindows","","",null,null],[17,"RotationPB","","",null,null],[17,"RotationKB","","",null,null],[17,"Save","","",null,null],[17,"ScrollUp","","",null,null],[17,"ScrollDown","","",null,null],[17,"ScrollClick","","",null,null],[17,"Send","","",null,null],[17,"Spell","","",null,null],[17,"SplitScreen","","",null,null],[17,"Support","","",null,null],[17,"TaskPane","","",null,null],[17,"Terminal","","",null,null],[17,"Tools","","",null,null],[17,"Travel","","",null,null],[17,"UserPB","","",null,null],[17,"User1KB","","",null,null],[17,"User2KB","","",null,null],[17,"Video","","",null,null],[17,"WheelButton","","",null,null],[17,"Word","","",null,null],[17,"Xfer","","",null,null],[17,"ZoomIn","","",null,null],[17,"ZoomOut","","",null,null],[17,"Away","","",null,null],[17,"Messenger","","",null,null],[17,"WebCam","","",null,null],[17,"MailForward","","",null,null],[17,"Pictures","","",null,null],[17,"Music","","",null,null],[17,"Battery","","",null,null],[17,"Bluetooth","","",null,null],[17,"WLAN","","",null,null],[17,"UWB","","",null,null],[17,"AudioForward","","",null,null],[17,"AudioRepeat","","",null,null],[17,"AudioRandomPlay","","",null,null],[17,"Subtitle","","",null,null],[17,"AudioCycleTrack","","",null,null],[17,"CycleAngle","","",null,null],[17,"FrameBack","","",null,null],[17,"FrameForward","","",null,null],[17,"Time","","",null,null],[17,"SelectButton","","",null,null],[17,"View","","",null,null],[17,"TopMenu","","",null,null],[17,"Red","","",null,null],[17,"Green","","",null,null],[17,"Yellow","","",null,null],[17,"Blue","","",null,null],[17,"Suspend","","",null,null],[17,"Hibernate","","",null,null],[17,"TouchpadToggle","","",null,null],[17,"TouchpadOn","","",null,null],[17,"TouchpadOff","","",null,null],[17,"AudioMicMute","","",null,null],[17,"Switch_VT_1","","",null,null],[17,"Switch_VT_2","","",null,null],[17,"Switch_VT_3","","",null,null],[17,"Switch_VT_4","","",null,null],[17,"Switch_VT_5","","",null,null],[17,"Switch_VT_6","","",null,null],[17,"Switch_VT_7","","",null,null],[17,"Switch_VT_8","","",null,null],[17,"Switch_VT_9","","",null,null],[17,"Switch_VT_10","","",null,null],[17,"Switch_VT_11","","",null,null],[17,"Switch_VT_12","","",null,null],[17,"Ungrab","","",null,null],[17,"ClearGrab","","",null,null],[17,"Next_VMode","","",null,null],[17,"Prev_VMode","","",null,null],[17,"LogWindowTree","","",null,null],[17,"LogGrabInfo","","",null,null],[11,"hash","gdk","",44,null],[11,"fmt","","",44,{"inputs":[{"name":"applaunchcontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"applaunchcontext"}],"output":{"name":"applaunchcontext"}}],[11,"static_type","","",44,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",44,{"inputs":[{"name":"applaunchcontext"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AppLaunchContext`.",44,{"inputs":[],"output":{"name":"applaunchcontext"}}],[11,"set_display","","Sets the display on which applications will be launched when\nusing this context. See also `AppLaunchContext::set_screen`.",44,{"inputs":[{"name":"applaunchcontext"},{"name":"display"}],"output":null}],[11,"set_screen","","Sets the screen on which applications will be launched when\nusing this context. See also `AppLaunchContext::set_display`.",44,{"inputs":[{"name":"applaunchcontext"},{"name":"screen"}],"output":null}],[11,"set_desktop","","Sets the workspace on which applications will be launched when\nusing this context when running under a window manager that\nsupports multiple workspaces, as described in the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec).",44,{"inputs":[{"name":"applaunchcontext"},{"name":"i32"}],"output":null}],[11,"set_timestamp","","Sets the timestamp of `self`. The timestamp should ideally\nbe taken from the event that triggered the launch.",44,{"inputs":[{"name":"applaunchcontext"},{"name":"u32"}],"output":null}],[11,"set_icon_name","","Sets the icon for applications that are launched with this context.\nThe `icon_name` will be interpreted in the same way as the Icon field\nin desktop files. See also `AppLaunchContext::set_icon`.",44,{"inputs":[{"name":"applaunchcontext"},{"name":"str"}],"output":null}],[11,"eq","","",45,{"inputs":[{"name":"atom"},{"name":"atom"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"atom"},{"name":"atom"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"atom"}],"output":{"name":"atom"}}],[11,"intern","","",45,{"inputs":[{"name":"str"}],"output":{"name":"atom"}}],[11,"name","","",45,{"inputs":[{"name":"atom"}],"output":{"name":"string"}}],[11,"to_glib_none","","",45,{"inputs":[{"name":"atom"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",45,{"inputs":[{"name":"gdkatom"}],"output":{"name":"atom"}}],[11,"from_glib_full","","",45,{"inputs":[{"name":"gdkatom"}],"output":{"name":"atom"}}],[11,"create_from_window","cairo::context","",46,{"inputs":[{"name":"window"}],"output":{"name":"context"}}],[11,"get_clip_rectangle","","",46,{"inputs":[{"name":"context"}],"output":{"name":"option"}}],[11,"set_source_rgba","","",46,{"inputs":[{"name":"context"},{"name":"gdkrgba"}],"output":null}],[11,"set_source_pixbuf","","",46,{"inputs":[{"name":"context"},{"name":"pixbuf"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_source_window","","",46,{"inputs":[{"name":"context"},{"name":"window"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rectangle","","",46,{"inputs":[{"name":"context"},{"name":"rectangleint"}],"output":null}],[11,"hash","gdk","",47,null],[11,"fmt","","",47,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"static_type","","",47,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",47,{"inputs":[{"name":"cursor"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new cursor from the set of builtin cursors for the default display.\nSee `Cursor::new_for_display`.",47,{"inputs":[{"name":"type"}],"output":{"name":"cursor"}}],[11,"new_from_pixbuf","","Creates a new cursor from a pixbuf.",47,{"inputs":[{"name":"display"},{"name":"pixbuf"},{"name":"i32"},{"name":"i32"}],"output":{"name":"cursor"}}],[11,"new_from_name","","Creates a new cursor by looking up `name` in the current cursor\ntheme.\n## `display`\nthe `Display` for which the cursor will be created\n## `name`\nthe name of the cursor",47,{"inputs":[{"name":"display"},{"name":"str"}],"output":{"name":"option"}}],[11,"new_for_display","","Creates a new cursor from the set of builtin cursors.\nSome useful ones are:\n- ![](right_ptr.png) `CursorType::RightPtr` (right-facing arrow)\n- ![](crosshair.png) `CursorType::Crosshair` (crosshair)\n- ![](xterm.png) `CursorType::Xterm` (I-beam)\n- ![](watch.png) `CursorType::Watch` (busy)\n- ![](fleur.png) `CursorType::Fleur` (for moving objects)\n- ![](hand1.png) `CursorType::Hand1` (a right-pointing hand)\n- ![](hand2.png) `CursorType::Hand2` (a left-pointing hand)\n- ![](left_side.png) `CursorType::LeftSide` (resize left side)\n- ![](right_side.png) `CursorType::RightSide` (resize right side)\n- ![](top_left_corner.png) `CursorType::TopLeftCorner` (resize northwest corner)\n- ![](top_right_corner.png) `CursorType::TopRightCorner` (resize northeast corner)\n- ![](bottom_left_corner.png) `CursorType::BottomLeftCorner` (resize southwest corner)\n- ![](bottom_right_corner.png) `CursorType::BottomRightCorner` (resize southeast corner)\n- ![](top_side.png) `CursorType::TopSide` (resize top side)\n- ![](bottom_side.png) `CursorType::BottomSide` (resize bottom side)\n- ![](sb_h_double_arrow.png) `CursorType::SbHDoubleArrow` (move vertical splitter)\n- ![](sb_v_double_arrow.png) `CursorType::SbVDoubleArrow` (move horizontal splitter)\n- `CursorType::BlankCursor` (Blank cursor). Since 2.16\n## `display`\nthe `Display` for which the cursor will be created\n## `cursor_type`\ncursor to create",47,{"inputs":[{"name":"display"},{"name":"type"}],"output":{"name":"cursor"}}],[11,"get_display","","Returns the display on which the `Cursor` is defined.",47,{"inputs":[{"name":"cursor"}],"output":{"name":"display"}}],[11,"get_image","","Returns a `gdk_pixbuf::Pixbuf` with the image used to display the cursor.",47,{"inputs":[{"name":"cursor"}],"output":{"name":"option"}}],[11,"get_cursor_type","","Returns the cursor type for this cursor.",47,{"inputs":[{"name":"cursor"}],"output":{"name":"type"}}],[11,"hash","","",48,null],[11,"fmt","","",48,{"inputs":[{"name":"device"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"device"}],"output":{"name":"device"}}],[11,"static_type","","",48,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",48,{"inputs":[{"name":"device"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_name","","Determines the name of the device.",48,{"inputs":[{"name":"device"}],"output":{"name":"option"}}],[11,"get_vendor_id","","Returns the vendor ID of this device, or `None` if this information couldn&#39;t\nbe obtained. This ID is retrieved from the device, and is thus constant for\nit.",48,{"inputs":[{"name":"device"}],"output":{"name":"option"}}],[11,"get_product_id","","Returns the product ID of this device, or `None` if this information couldn&#39;t\nbe obtained. This ID is retrieved from the device, and is thus constant for\nit. See `Device::get_vendor_id` for more information.",48,{"inputs":[{"name":"device"}],"output":{"name":"option"}}],[11,"get_source","","Determines the type of the device.",48,{"inputs":[{"name":"device"}],"output":{"name":"inputsource"}}],[11,"set_mode","","Sets a the mode of an input device. The mode controls if the\ndevice is active and whether the device’s range is mapped to the\nentire screen or to a single window.",48,{"inputs":[{"name":"device"},{"name":"inputmode"}],"output":null}],[11,"get_mode","","Determines the mode of the device.",48,{"inputs":[{"name":"device"}],"output":{"name":"inputmode"}}],[11,"set_key","","Specifies the X key event to generate when a macro button of a device\nis pressed.\n## `index_`\nthe index of the macro button to set\n## `keyval`\nthe keyval to generate\n## `modifiers`\nthe modifiers to set",48,{"inputs":[{"name":"device"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":null}],[11,"get_key","","If `index_` has a valid keyval, this function will return `true`\nand fill in `keyval` and `modifiers` with the keyval settings.\n## `index_`\nthe index of the macro button to get.\n## `keyval`\nreturn value for the keyval.\n## `modifiers`\nreturn value for modifiers.",48,{"inputs":[{"name":"device"},{"name":"u32"},{"name":"u32"},{"name":"modifiertype"}],"output":{"name":"bool"}}],[11,"set_axis_use","","Specifies how an axis of a device is used.\n## `index_`\nthe index of the axis\n## `use_`\nspecifies how the axis is used",48,{"inputs":[{"name":"device"},{"name":"u32"},{"name":"axisuse"}],"output":null}],[11,"get_axis_use","","Returns the axis use for `index_`.\n## `index_`\nthe index of the axis.",48,{"inputs":[{"name":"device"},{"name":"u32"}],"output":{"name":"axisuse"}}],[11,"get_associated_device","","Returns the associated device to `self`, if `self` is of type\n`DeviceType::Master`, it will return the paired pointer or\nkeyboard.",48,{"inputs":[{"name":"device"}],"output":{"name":"option"}}],[11,"get_device_type","","Returns the device type for `self`.",48,{"inputs":[{"name":"device"}],"output":{"name":"type"}}],[11,"get_display","","Returns the `Display` to which `self` pertains.",48,{"inputs":[{"name":"device"}],"output":{"name":"display"}}],[11,"get_has_cursor","","Determines whether the pointer follows device motion.\nThis is not meaningful for keyboard devices, which don&#39;t have a pointer.",48,{"inputs":[{"name":"device"}],"output":{"name":"bool"}}],[11,"get_n_axes","","Returns the number of axes the device currently has.",48,{"inputs":[{"name":"device"}],"output":{"name":"i32"}}],[11,"get_n_keys","","Returns the number of keys the device currently has.",48,{"inputs":[{"name":"device"}],"output":{"name":"i32"}}],[11,"warp","","Warps `self` in `display` to the point `x`,`y` on\nthe screen `screen`, unless the device is confined\nto a window by a grab, in which case it will be moved\nas far as allowed by the grab. Warping the pointer\ncreates events as if the user had moved the mouse\ninstantaneously to the destination.",48,{"inputs":[{"name":"device"},{"name":"screen"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"grab","","Grabs the device so that all events coming from this device are passed to\nthis application until the device is ungrabbed with `Device::ungrab`,\nor the window becomes unviewable. This overrides any previous grab on the device\nby this client.",48,{"inputs":[{"name":"device"},{"name":"window"},{"name":"grabownership"},{"name":"bool"},{"name":"eventmask"},{"name":"cursor"},{"name":"u32"}],"output":{"name":"grabstatus"}}],[11,"ungrab","","Release any grab on `self`.\n## `time_`\na timestap (e.g. `GDK_CURRENT_TIME`).",48,{"inputs":[{"name":"device"},{"name":"u32"}],"output":null}],[11,"get_axis","","Interprets an array of double as axis values for a given device,\nand locates the value in the array for a given axis use.\n## `axes`\npointer to an array of axes\n## `use_`\nthe use to look for\n## `value`\nlocation to store the found value.",48,null],[11,"hash","","",49,null],[11,"fmt","","",49,{"inputs":[{"name":"devicemanager"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"devicemanager"}],"output":{"name":"devicemanager"}}],[11,"static_type","","",49,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",49,{"inputs":[{"name":"devicemanager"},{"name":"t"}],"output":{"name":"bool"}}],[11,"disable_multidevice","","",49,{"inputs":[],"output":null}],[11,"get_display","","Gets the `Display` associated to `self`.",49,{"inputs":[{"name":"devicemanager"}],"output":{"name":"option"}}],[11,"get_client_pointer","","Returns the client pointer, that is, the master pointer that acts as the core pointer\nfor this application. In X11, window managers may change this depending on the interaction\npattern under the presence of several pointers.",49,{"inputs":[{"name":"devicemanager"}],"output":{"name":"device"}}],[11,"hash","","",50,null],[11,"fmt","","",50,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"display"}],"output":{"name":"display"}}],[11,"static_type","","",50,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",50,{"inputs":[{"name":"display"},{"name":"t"}],"output":{"name":"bool"}}],[11,"open","","Opens a display.\n## `display_name`\nthe name of the display to open",50,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"get_default","","Gets the default `Display`. This is a convenience\nfunction for:\n`gdk_display_manager_get_default_display (gdk_display_manager_get ())`.",50,{"inputs":[],"output":{"name":"option"}}],[11,"get_name","","Gets the name of the display.",50,{"inputs":[{"name":"display"}],"output":{"name":"string"}}],[11,"get_screen","","Returns a screen object for one of the screens of the display.\n## `screen_num`\nthe screen number",50,{"inputs":[{"name":"display"},{"name":"i32"}],"output":{"name":"screen"}}],[11,"get_default_screen","","Get the default `Screen` for `self`.",50,{"inputs":[{"name":"display"}],"output":{"name":"screen"}}],[11,"get_device_manager","","Returns the `DeviceManager` associated to `self`.",50,{"inputs":[{"name":"display"}],"output":{"name":"option"}}],[11,"device_is_grabbed","","Returns `true` if there is an ongoing grab on `device` for `self`.\n## `device`\na `Device`",50,{"inputs":[{"name":"display"},{"name":"device"}],"output":{"name":"bool"}}],[11,"beep","","Emits a short beep on `self`",50,{"inputs":[{"name":"display"}],"output":null}],[11,"sync","","Flushes any requests queued for the windowing system and waits until all\nrequests have been handled. This is often used for making sure that the\ndisplay is synchronized with the current state of the program. Calling\n`Display::sync` before `gdk_error_trap_pop` makes sure that any errors\ngenerated from earlier requests are handled before the error trap is\nremoved.",50,{"inputs":[{"name":"display"}],"output":null}],[11,"flush","","Flushes any requests queued for the windowing system; this happens automatically\nwhen the main loop blocks waiting for new events, but if your application\nis drawing without returning control to the main loop, you may need\nto call this function explicitly. A common case where this function\nneeds to be called is when an application is executing drawing commands\nfrom a thread other than the thread where the main loop is running.",50,{"inputs":[{"name":"display"}],"output":null}],[11,"close","","Closes the connection to the windowing system for the given display,\nand cleans up associated resources.",50,{"inputs":[{"name":"display"}],"output":null}],[11,"is_closed","","Finds out if the display has been closed.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"has_pending","","Returns whether the display has events that are waiting\nto be processed.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"set_double_click_time","","Sets the double click time (two clicks within this time interval\ncount as a double click and result in a `EventType::2buttonPress` event).\nApplications should not set this, it is a global\nuser-configured setting.\n## `msec`\ndouble click time in milliseconds (thousandths of a second)",50,{"inputs":[{"name":"display"},{"name":"u32"}],"output":null}],[11,"set_double_click_distance","","Sets the double click distance (two clicks within this distance\ncount as a double click and result in a `EventType::2buttonPress` event).\nSee also `Display::set_double_click_time`.\nApplications should not set this, it is a global\nuser-configured setting.\n## `distance`\ndistance in pixels",50,{"inputs":[{"name":"display"},{"name":"u32"}],"output":null}],[11,"supports_cursor_color","","Returns `true` if multicolored cursors are supported\non `self`. Otherwise, cursors have only a forground\nand a background color.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"supports_cursor_alpha","","Returns `true` if cursors can use an 8bit alpha channel\non `self`. Otherwise, cursors are restricted to bilevel\nalpha (i.e. a mask).",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"get_default_cursor_size","","Returns the default size to use for cursors on `self`.",50,{"inputs":[{"name":"display"}],"output":{"name":"u32"}}],[11,"get_maximal_cursor_size","","Gets the maximal size to use for cursors on `self`.\n## `width`\nthe return location for the maximal cursor width\n## `height`\nthe return location for the maximal cursor height",50,{"inputs":[{"name":"display"},{"name":"u32"},{"name":"u32"}],"output":null}],[11,"get_default_group","","Returns the default group leader window for all toplevel windows\non `self`. This window is implicitly created by GDK.\nSee `Window::set_group`.",50,{"inputs":[{"name":"display"}],"output":{"name":"window"}}],[11,"supports_selection_notification","","Returns whether `EventOwnerChange` events will be\nsent when the owner of a selection changes.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"request_selection_notification","","Request `EventOwnerChange` events for ownership changes\nof the selection named by the given atom.\n## `selection`\nthe `Atom` naming the selection for which\n ownership change notification is requested",50,{"inputs":[{"name":"display"},{"name":"atom"}],"output":{"name":"bool"}}],[11,"supports_clipboard_persistence","","Returns whether the speicifed display supports clipboard\npersistance; i.e. if it’s possible to store the clipboard data after an\napplication has quit. On X11 this checks if a clipboard daemon is\nrunning.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"supports_shapes","","Returns `true` if `gdk_window_shape_combine_mask` can\nbe used to create shaped windows on `self`.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"supports_input_shapes","","Returns `true` if `gdk_window_input_shape_combine_mask` can\nbe used to modify the input shape of windows on `self`.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"supports_composite","","Returns `true` if `Window::set_composited` can be used\nto redirect drawing on the window using compositing.",50,{"inputs":[{"name":"display"}],"output":{"name":"bool"}}],[11,"get_app_launch_context","","Returns a `AppLaunchContext` suitable for launching\napplications on the given display.",50,{"inputs":[{"name":"display"}],"output":{"name":"applaunchcontext"}}],[11,"notify_startup_complete","","Indicates to the GUI environment that the application has\nfinished loading, using a given identifier.",50,{"inputs":[{"name":"display"},{"name":"str"}],"output":null}],[11,"hash","","",51,null],[11,"fmt","","",51,{"inputs":[{"name":"displaymanager"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"displaymanager"}],"output":{"name":"displaymanager"}}],[11,"static_type","","",51,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",51,{"inputs":[{"name":"displaymanager"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get","","Gets the singleton `DisplayManager` object.",51,{"inputs":[],"output":{"name":"displaymanager"}}],[11,"get_default_display","","Gets the default `Display`.",51,{"inputs":[{"name":"displaymanager"}],"output":{"name":"option"}}],[11,"set_default_display","","Sets `display` as the default display.\n## `display`\na `Display`",51,{"inputs":[{"name":"displaymanager"},{"name":"display"}],"output":null}],[11,"open_display","","Opens a display.\n## `name`\nthe name of the display to open",51,{"inputs":[{"name":"displaymanager"},{"name":"str"}],"output":{"name":"option"}}],[11,"hash","","",52,null],[11,"fmt","","",52,{"inputs":[{"name":"dragcontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"dragcontext"}}],[11,"static_type","","",52,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",52,{"inputs":[{"name":"dragcontext"},{"name":"t"}],"output":{"name":"bool"}}],[11,"drag_get_selection","","",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"atom"}}],[11,"drag_abort","","",52,{"inputs":[{"name":"dragcontext"},{"name":"u32"}],"output":null}],[11,"drop_reply","","",52,{"inputs":[{"name":"dragcontext"},{"name":"bool"},{"name":"u32"}],"output":null}],[11,"drop","","",52,{"inputs":[{"name":"dragcontext"},{"name":"u32"}],"output":null}],[11,"drag_find_window_for_screen","","",52,null],[11,"drag_motion","","",52,{"inputs":[{"name":"dragcontext"},{"name":"window"},{"name":"dragprotocol"},{"name":"i32"},{"name":"i32"},{"name":"dragaction"},{"name":"dragaction"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"drop_finish","","",52,{"inputs":[{"name":"dragcontext"},{"name":"bool"},{"name":"u32"}],"output":null}],[11,"drag_status","","",52,{"inputs":[{"name":"dragcontext"},{"name":"dragaction"},{"name":"u32"}],"output":null}],[11,"drag_drop_succeeded","","",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"bool"}}],[11,"get_actions","","Determines the bitmask of actions proposed by the source if\n`DragContext::get_suggested_action` returns `DragAction::Ask`.",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"dragaction"}}],[11,"get_suggested_action","","Determines the suggested drag action of the context.",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"dragaction"}}],[11,"get_selected_action","","Determines the action chosen by the drag destination.",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"dragaction"}}],[11,"get_device","","Returns the `Device` associated to the drag context.",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"device"}}],[11,"set_device","","Associates a `Device` to `self`, so all Drag and Drop events\nfor `self` are emitted as if they came from this device.\n## `device`\na `Device`",52,{"inputs":[{"name":"dragcontext"},{"name":"device"}],"output":null}],[11,"get_source_window","","Returns the `Window` where the DND operation started.",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"window"}}],[11,"get_dest_window","","Returns the destination windw for the DND operation.",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"window"}}],[11,"get_protocol","","Returns the drag protocol thats used by this context.",52,{"inputs":[{"name":"dragcontext"}],"output":{"name":"dragprotocol"}}],[11,"fmt","","",53,{"inputs":[{"name":"eventbutton"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"eventbutton"}}],[11,"to_glib_none","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",53,null],[11,"from_glib_full","","",53,null],[11,"as_ref","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"gdkeventbutton"}}],[11,"as_mut","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"gdkeventbutton"}}],[11,"deref","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"event"}}],[11,"deref_mut","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"event"}}],[11,"get_position","","",53,null],[11,"get_state","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"modifiertype"}}],[11,"get_time","","",53,{"inputs":[{"name":"eventbutton"}],"output":{"name":"u32"}}],[11,"fmt","","",54,{"inputs":[{"name":"eventconfigure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"eventconfigure"}],"output":{"name":"eventconfigure"}}],[11,"to_glib_none","","",54,{"inputs":[{"name":"eventconfigure"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",54,{"inputs":[{"name":"eventconfigure"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",54,null],[11,"from_glib_full","","",54,null],[11,"as_ref","","",54,{"inputs":[{"name":"eventconfigure"}],"output":{"name":"gdkeventconfigure"}}],[11,"as_mut","","",54,{"inputs":[{"name":"eventconfigure"}],"output":{"name":"gdkeventconfigure"}}],[11,"deref","","",54,{"inputs":[{"name":"eventconfigure"}],"output":{"name":"event"}}],[11,"deref_mut","","",54,{"inputs":[{"name":"eventconfigure"}],"output":{"name":"event"}}],[11,"get_position","","",54,null],[11,"get_size","","",54,null],[11,"fmt","","",55,{"inputs":[{"name":"eventcrossing"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"eventcrossing"}}],[11,"to_glib_none","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",55,null],[11,"from_glib_full","","",55,null],[11,"as_ref","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"gdkeventcrossing"}}],[11,"as_mut","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"gdkeventcrossing"}}],[11,"deref","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"event"}}],[11,"deref_mut","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"event"}}],[11,"get_position","","",55,null],[11,"get_subwindow","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"option"}}],[11,"get_mode","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"crossingmode"}}],[11,"get_detail","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"notifytype"}}],[11,"get_state","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"modifiertype"}}],[11,"get_time","","",55,{"inputs":[{"name":"eventcrossing"}],"output":{"name":"u32"}}],[11,"fmt","","",56,{"inputs":[{"name":"eventdnd"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"eventdnd"}}],[11,"to_glib_none","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",56,null],[11,"from_glib_full","","",56,null],[11,"as_ref","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"gdkeventdnd"}}],[11,"as_mut","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"gdkeventdnd"}}],[11,"deref","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"event"}}],[11,"deref_mut","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"event"}}],[11,"get_context","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"option"}}],[11,"get_time","","",56,{"inputs":[{"name":"eventdnd"}],"output":{"name":"u32"}}],[11,"fmt","","",57,{"inputs":[{"name":"eventexpose"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"eventexpose"}}],[11,"to_glib_none","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",57,null],[11,"from_glib_full","","",57,null],[11,"as_ref","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"gdkeventexpose"}}],[11,"as_mut","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"gdkeventexpose"}}],[11,"deref","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"event"}}],[11,"deref_mut","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"event"}}],[11,"get_region","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"rectangleint"}}],[11,"get_count","","",57,{"inputs":[{"name":"eventexpose"}],"output":{"name":"u32"}}],[11,"fmt","","",58,{"inputs":[{"name":"eventfocus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"eventfocus"}],"output":{"name":"eventfocus"}}],[11,"to_glib_none","","",58,{"inputs":[{"name":"eventfocus"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",58,{"inputs":[{"name":"eventfocus"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",58,null],[11,"from_glib_full","","",58,null],[11,"as_ref","","",58,{"inputs":[{"name":"eventfocus"}],"output":{"name":"gdkeventfocus"}}],[11,"as_mut","","",58,{"inputs":[{"name":"eventfocus"}],"output":{"name":"gdkeventfocus"}}],[11,"deref","","",58,{"inputs":[{"name":"eventfocus"}],"output":{"name":"event"}}],[11,"deref_mut","","",58,{"inputs":[{"name":"eventfocus"}],"output":{"name":"event"}}],[11,"fmt","","",59,{"inputs":[{"name":"eventgrabbroken"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"eventgrabbroken"}}],[11,"to_glib_none","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",59,null],[11,"from_glib_full","","",59,null],[11,"as_ref","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"gdkeventgrabbroken"}}],[11,"as_mut","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"gdkeventgrabbroken"}}],[11,"deref","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"event"}}],[11,"deref_mut","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"event"}}],[11,"is_keyboard","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"bool"}}],[11,"is_implicit","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"bool"}}],[11,"get_grab_window","","",59,{"inputs":[{"name":"eventgrabbroken"}],"output":{"name":"option"}}],[11,"fmt","","",60,{"inputs":[{"name":"eventkey"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"eventkey"}}],[11,"to_glib_none","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",60,null],[11,"from_glib_full","","",60,null],[11,"as_ref","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"gdkeventkey"}}],[11,"as_mut","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"gdkeventkey"}}],[11,"deref","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"event"}}],[11,"deref_mut","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"event"}}],[11,"get_time","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"u32"}}],[11,"get_state","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"modifiertype"}}],[11,"get_keyval","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"key"}}],[11,"get_length","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"u32"}}],[11,"get_hardware_keycode","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"u16"}}],[11,"get_group","","",60,{"inputs":[{"name":"eventkey"}],"output":{"name":"u8"}}],[11,"fmt","","",61,{"inputs":[{"name":"eventmotion"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"eventmotion"}}],[11,"to_glib_none","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",61,null],[11,"from_glib_full","","",61,null],[11,"as_ref","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"gdkeventmotion"}}],[11,"as_mut","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"gdkeventmotion"}}],[11,"deref","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"event"}}],[11,"deref_mut","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"event"}}],[11,"get_position","","",61,null],[11,"get_state","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"modifiertype"}}],[11,"get_time","","",61,{"inputs":[{"name":"eventmotion"}],"output":{"name":"u32"}}],[11,"fmt","","",62,{"inputs":[{"name":"eventownerchange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"eventownerchange"}}],[11,"to_glib_none","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",62,null],[11,"from_glib_full","","",62,null],[11,"as_ref","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"gdkeventownerchange"}}],[11,"as_mut","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"gdkeventownerchange"}}],[11,"deref","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"event"}}],[11,"deref_mut","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"event"}}],[11,"get_owner","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"option"}}],[11,"get_reason","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"ownerchange"}}],[11,"get_selection","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"atom"}}],[11,"get_time","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"u32"}}],[11,"get_selection_time","","",62,{"inputs":[{"name":"eventownerchange"}],"output":{"name":"u32"}}],[11,"fmt","","",63,{"inputs":[{"name":"eventproperty"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"eventproperty"}],"output":{"name":"eventproperty"}}],[11,"to_glib_none","","",63,{"inputs":[{"name":"eventproperty"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",63,{"inputs":[{"name":"eventproperty"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",63,null],[11,"from_glib_full","","",63,null],[11,"as_ref","","",63,{"inputs":[{"name":"eventproperty"}],"output":{"name":"gdkeventproperty"}}],[11,"as_mut","","",63,{"inputs":[{"name":"eventproperty"}],"output":{"name":"gdkeventproperty"}}],[11,"deref","","",63,{"inputs":[{"name":"eventproperty"}],"output":{"name":"event"}}],[11,"deref_mut","","",63,{"inputs":[{"name":"eventproperty"}],"output":{"name":"event"}}],[11,"fmt","","",64,{"inputs":[{"name":"eventproximity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"eventproximity"}}],[11,"to_glib_none","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",64,null],[11,"from_glib_full","","",64,null],[11,"as_ref","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"gdkeventproximity"}}],[11,"as_mut","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"gdkeventproximity"}}],[11,"deref","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"event"}}],[11,"deref_mut","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"event"}}],[11,"get_time","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"u32"}}],[11,"get_device","","",64,{"inputs":[{"name":"eventproximity"}],"output":{"name":"option"}}],[11,"fmt","","",65,{"inputs":[{"name":"eventscroll"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"eventscroll"}}],[11,"to_glib_none","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",65,null],[11,"from_glib_full","","",65,null],[11,"as_ref","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"gdkeventscroll"}}],[11,"as_mut","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"gdkeventscroll"}}],[11,"deref","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"event"}}],[11,"deref_mut","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"event"}}],[11,"get_time","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"u32"}}],[11,"get_position","","",65,null],[11,"get_state","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"modifiertype"}}],[11,"get_device","","",65,{"inputs":[{"name":"eventscroll"}],"output":{"name":"option"}}],[11,"get_delta","","",65,null],[11,"fmt","","",66,{"inputs":[{"name":"eventselection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"eventselection"}}],[11,"to_glib_none","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",66,null],[11,"from_glib_full","","",66,null],[11,"as_ref","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"gdkeventselection"}}],[11,"as_mut","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"gdkeventselection"}}],[11,"deref","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"event"}}],[11,"deref_mut","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"event"}}],[11,"get_selection","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"atom"}}],[11,"get_target","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"atom"}}],[11,"get_property","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"atom"}}],[11,"get_time","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"u32"}}],[11,"get_requestor","","",66,{"inputs":[{"name":"eventselection"}],"output":{"name":"option"}}],[11,"fmt","","",67,{"inputs":[{"name":"eventsetting"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"eventsetting"}],"output":{"name":"eventsetting"}}],[11,"to_glib_none","","",67,{"inputs":[{"name":"eventsetting"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",67,{"inputs":[{"name":"eventsetting"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",67,null],[11,"from_glib_full","","",67,null],[11,"as_ref","","",67,{"inputs":[{"name":"eventsetting"}],"output":{"name":"gdkeventsetting"}}],[11,"as_mut","","",67,{"inputs":[{"name":"eventsetting"}],"output":{"name":"gdkeventsetting"}}],[11,"deref","","",67,{"inputs":[{"name":"eventsetting"}],"output":{"name":"event"}}],[11,"deref_mut","","",67,{"inputs":[{"name":"eventsetting"}],"output":{"name":"event"}}],[11,"fmt","","",68,{"inputs":[{"name":"eventtouch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"eventtouch"}}],[11,"to_glib_none","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",68,null],[11,"from_glib_full","","",68,null],[11,"as_ref","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"gdkeventtouch"}}],[11,"as_mut","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"gdkeventtouch"}}],[11,"deref","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"event"}}],[11,"deref_mut","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"event"}}],[11,"get_time","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"u32"}}],[11,"get_position","","",68,null],[11,"get_state","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"modifiertype"}}],[11,"is_emulating_pointer","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"bool"}}],[11,"get_device","","",68,{"inputs":[{"name":"eventtouch"}],"output":{"name":"option"}}],[11,"fmt","","",69,{"inputs":[{"name":"eventvisibility"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"eventvisibility"}}],[11,"to_glib_none","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",69,null],[11,"from_glib_full","","",69,null],[11,"as_ref","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"gdkeventvisibility"}}],[11,"as_mut","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"gdkeventvisibility"}}],[11,"deref","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"event"}}],[11,"deref_mut","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"event"}}],[11,"get_state","","",69,{"inputs":[{"name":"eventvisibility"}],"output":{"name":"visibilitystate"}}],[11,"fmt","","",70,{"inputs":[{"name":"eventwindowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"eventwindowstate"}}],[11,"to_glib_none","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",70,null],[11,"from_glib_full","","",70,null],[11,"as_ref","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"gdkeventwindowstate"}}],[11,"as_mut","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"gdkeventwindowstate"}}],[11,"deref","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"event"}}],[11,"deref_mut","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"event"}}],[11,"get_changed_mask","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"windowstate"}}],[11,"get_new_window_state","","",70,{"inputs":[{"name":"eventwindowstate"}],"output":{"name":"windowstate"}}],[11,"hash","","",71,null],[11,"fmt","","",71,{"inputs":[{"name":"frameclock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"frameclock"}],"output":{"name":"frameclock"}}],[11,"static_type","","",71,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",71,{"inputs":[{"name":"frameclock"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_frame_time","","Gets the time that should currently be used for animations. Inside\nthe processing of a frame, it’s the time used to compute the\nanimation position of everything in a frame. Outside of a frame, it&#39;s\nthe time of the conceptual “previous frame,” which may be either\nthe actual previous frame time, or if that’s too old, an updated\ntime.",71,{"inputs":[{"name":"frameclock"}],"output":{"name":"i64"}}],[11,"request_phase","","Asks the frame clock to run a particular phase. The signal\ncorresponding the requested phase will be emitted the next\ntime the frame clock processes. Multiple calls to\n`FrameClock::request_phase` will be combined together\nand only one frame processed. If you are displaying animated\ncontent and want to continually request the\n`FrameClockPhase::Update` phase for a period of time,\nyou should use `FrameClock::begin_updating` instead, since\nthis allows GTK+ to adjust system parameters to get maximally\nsmooth animations.",71,{"inputs":[{"name":"frameclock"},{"name":"phase"}],"output":null}],[11,"begin_updating","","Starts updates for an animation. Until a matching call to\n`FrameClock::end_updating` is made, the frame clock will continually\nrequest a new frame with the `FrameClockPhase::Update` phase.\nThis function may be called multiple times and frames will be\nrequested until `FrameClock::end_updating` is called the same\nnumber of times.",71,{"inputs":[{"name":"frameclock"}],"output":null}],[11,"end_updating","","Stops updates for an animation. See the documentation for\n`FrameClock::begin_updating`.",71,{"inputs":[{"name":"frameclock"}],"output":null}],[11,"get_frame_counter","","A `FrameClock` maintains a 64-bit counter that increments for\neach frame drawn.",71,{"inputs":[{"name":"frameclock"}],"output":{"name":"i64"}}],[11,"get_history_start","","`FrameClock` internally keeps a history of `FrameTimings`\nobjects for recent frames that can be retrieved with\n`FrameClock::get_timings`. The set of stored frames\nis the set from the counter values given by\n`FrameClock::get_history_start` and\n`FrameClock::get_frame_counter`, inclusive.",71,{"inputs":[{"name":"frameclock"}],"output":{"name":"i64"}}],[11,"get_timings","","Retrieves a `FrameTimings` object holding timing information\nfor the current frame or a recent frame. The `FrameTimings`\nobject may not yet be complete: see `FrameTimings::get_complete`.",71,{"inputs":[{"name":"frameclock"},{"name":"i64"}],"output":{"name":"option"}}],[11,"get_current_timings","","Gets the frame timings for the current frame.",71,{"inputs":[{"name":"frameclock"}],"output":{"name":"option"}}],[11,"get_refresh_info","","Using the frame history stored in the frame clock, finds the last\nknown presentation time and refresh interval, and assuming that\npresentation times are separated by the refresh interval,\npredicts a presentation time that is a multiple of the refresh\ninterval after the last presentation time, and later than `base_time`.",71,null],[11,"hash","","",72,null],[11,"eq","","",72,{"inputs":[{"name":"frametimings"},{"name":"frametimings"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"frametimings"},{"name":"frametimings"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"frametimings"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"frametimings"}],"output":{"name":"frametimings"}}],[11,"get_frame_counter","","Gets the frame counter value of the `FrameClock` when this\nthis frame was drawn.",72,{"inputs":[{"name":"frametimings"}],"output":{"name":"i64"}}],[11,"get_complete","","The timing information in a `FrameTimings` is filled in\nincrementally as the frame as drawn and passed off to the\nwindow system for processing and display to the user. The\naccessor functions for `FrameTimings` can return 0 to\nindicate an unavailable value for two reasons: either because\nthe information is not yet available, or because it isn&#39;t\navailable at all. Once `FrameTimings::get_complete` returns\n`true` for a frame, you can be certain that no further values\nwill become available and be stored in the `FrameTimings`.",72,{"inputs":[{"name":"frametimings"}],"output":{"name":"bool"}}],[11,"get_frame_time","","Returns the frame time for the frame. This is the time value\nthat is typically used to time animations for the frame. See\n`FrameClock::get_frame_time`.",72,{"inputs":[{"name":"frametimings"}],"output":{"name":"i64"}}],[11,"get_presentation_time","","Reurns the presentation time. This is the time at which the frame\nbecame visible to the user.",72,{"inputs":[{"name":"frametimings"}],"output":{"name":"i64"}}],[11,"get_refresh_interval","","Gets the natural interval between presentation times for\nthe display that this frame was displayed on. Frame presentation\nusually happens during the “vertical blanking interval”.",72,{"inputs":[{"name":"frametimings"}],"output":{"name":"i64"}}],[11,"get_predicted_presentation_time","","Gets the predicted time at which this frame will be displayed. Although\nno predicted time may be available, if one is available, it will\nbe available while the frame is being generated, in contrast to\n`FrameTimings::get_presentation_time`, which is only available\nafter the frame has been presented. In general, if you are simply\nanimating, you should use `FrameClock::get_frame_time` rather\nthan this function, but this function is useful for applications\nthat want exact control over latency. For example, a movie player\nmay want this information for Audio/Video synchronization.",72,{"inputs":[{"name":"frametimings"}],"output":{"name":"i64"}}],[11,"hash","","",73,null],[11,"fmt","","",73,{"inputs":[{"name":"glcontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"glcontext"}],"output":{"name":"glcontext"}}],[11,"static_type","","",73,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",73,{"inputs":[{"name":"glcontext"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_display","","Retrieves the `Display` the `self` is created for",73,{"inputs":[{"name":"glcontext"}],"output":{"name":"option"}}],[11,"get_window","","Retrieves the `Window` used by the `self`.",73,{"inputs":[{"name":"glcontext"}],"output":{"name":"option"}}],[11,"get_shared_context","","Retrieves the `GLContext` that this `self` share data with.",73,{"inputs":[{"name":"glcontext"}],"output":{"name":"option"}}],[11,"get_version","","Retrieves the OpenGL version of the `self`.",73,null],[11,"set_required_version","","Sets the major and minor version of OpenGL to request.",73,{"inputs":[{"name":"glcontext"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_debug_enabled","","Sets whether the `GLContext` should perform extra validations and\nrun time checking. This is useful during development, but has\nadditional overhead.",73,{"inputs":[{"name":"glcontext"},{"name":"bool"}],"output":null}],[11,"get_debug_enabled","","Retrieves the value set using `GLContext::set_debug_enabled`.",73,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[11,"set_forward_compatible","","Sets whether the `GLContext` should be forward compatible.",73,{"inputs":[{"name":"glcontext"},{"name":"bool"}],"output":null}],[11,"get_forward_compatible","","Retrieves the value set using `GLContext::set_forward_compatible`.",73,{"inputs":[{"name":"glcontext"}],"output":{"name":"bool"}}],[11,"make_current","","Makes the `self` the current one.",73,{"inputs":[{"name":"glcontext"}],"output":null}],[11,"get_current","","Retrieves the current `GLContext`.",73,{"inputs":[],"output":{"name":"option"}}],[11,"clear_current","","Clears the current `GLContext`.",73,{"inputs":[],"output":null}],[11,"intersect","cairo_sys","",74,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"rectangleint"}],"output":{"name":"option"}}],[11,"union","","",74,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"rectangleint"}],"output":{"name":"rectangleint"}}],[11,"white","gdk","",39,{"inputs":[],"output":{"name":"gdkrgba"}}],[11,"blue","","",39,{"inputs":[],"output":{"name":"gdkrgba"}}],[11,"green","","",39,{"inputs":[],"output":{"name":"gdkrgba"}}],[11,"red","","",39,{"inputs":[],"output":{"name":"gdkrgba"}}],[11,"black","","",39,{"inputs":[],"output":{"name":"gdkrgba"}}],[11,"copy","","",39,{"inputs":[{"name":"rgba"}],"output":{"name":"gdkrgba"}}],[11,"parse","","",39,{"inputs":[{"name":"rgba"},{"name":"str"}],"output":{"name":"bool"}}],[11,"to_string","","",39,{"inputs":[{"name":"rgba"}],"output":{"name":"option"}}],[11,"hash","","",75,null],[11,"fmt","","",75,{"inputs":[{"name":"screen"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"screen"}],"output":{"name":"screen"}}],[11,"static_type","","",75,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",75,{"inputs":[{"name":"screen"},{"name":"t"}],"output":{"name":"bool"}}],[11,"get_default","","Gets the default screen for the default display. (See\ngdk_display_get_default ()).",75,{"inputs":[],"output":{"name":"option"}}],[11,"get_system_visual","","Get the system’s default visual for `self`.\nThis is the visual for the root window of the display.\nThe return value should not be freed.",75,{"inputs":[{"name":"screen"}],"output":{"name":"visual"}}],[11,"get_rgba_visual","","Gets a visual to use for creating windows with an alpha channel.\nThe windowing system on which GTK+ is running\nmay not support this capability, in which case `None` will\nbe returned. Even if a non-`None` value is returned, its\npossible that the window’s alpha channel won’t be honored\nwhen displaying the window on the screen: in particular, for\nX an appropriate windowing manager and compositing manager\nmust be running to provide appropriate display.",75,{"inputs":[{"name":"screen"}],"output":{"name":"option"}}],[11,"is_composited","","Returns whether windows with an RGBA visual can reasonably\nbe expected to have their alpha channel drawn correctly on\nthe screen.",75,{"inputs":[{"name":"screen"}],"output":{"name":"bool"}}],[11,"get_root_window","","Gets the root window of `self`.",75,{"inputs":[{"name":"screen"}],"output":{"name":"window"}}],[11,"get_display","","Gets the display to which the `self` belongs.",75,{"inputs":[{"name":"screen"}],"output":{"name":"display"}}],[11,"get_number","","Gets the index of `self` among the screens in the display\nto which it belongs. (See `Screen::get_display`)",75,{"inputs":[{"name":"screen"}],"output":{"name":"i32"}}],[11,"get_width","","Gets the width of `self` in pixels",75,{"inputs":[{"name":"screen"}],"output":{"name":"i32"}}],[11,"get_height","","Gets the height of `self` in pixels",75,{"inputs":[{"name":"screen"}],"output":{"name":"i32"}}],[11,"get_width_mm","","Gets the width of `self` in millimeters.\nNote that on some X servers this value will not be correct.",75,{"inputs":[{"name":"screen"}],"output":{"name":"i32"}}],[11,"get_height_mm","","Returns the height of `self` in millimeters.\nNote that on some X servers this value will not be correct.",75,{"inputs":[{"name":"screen"}],"output":{"name":"i32"}}],[11,"make_display_name","","Determines the name to pass to `Display::open` to get\na `Display` with this screen as the default screen.",75,{"inputs":[{"name":"screen"}],"output":{"name":"string"}}],[11,"get_n_monitors","","Returns the number of monitors which `self` consists of.",75,{"inputs":[{"name":"screen"}],"output":{"name":"i32"}}],[11,"get_primary_monitor","","Gets the primary monitor for `self`. The primary monitor\nis considered the monitor where the “main desktop” lives.\nWhile normal application windows typically allow the window\nmanager to place the windows, specialized desktop applications\nsuch as panels should place themselves on the primary monitor.",75,{"inputs":[{"name":"screen"}],"output":{"name":"i32"}}],[11,"get_monitor_geometry","","Retrieves the `Rectangle` representing the size and position of\nthe individual monitor within the entire screen area.",75,{"inputs":[{"name":"screen"},{"name":"i32"}],"output":{"name":"rectangleint"}}],[11,"get_monitor_workarea","","Retrieves the `Rectangle` representing the size and position of\nthe “work area” on a monitor within the entire screen area.",75,{"inputs":[{"name":"screen"},{"name":"i32"}],"output":{"name":"rectangleint"}}],[11,"get_monitor_at_point","","Returns the monitor number in which the point (`x`,`y`) is located.\n## `x`\nthe x coordinate in the virtual screen.\n## `y`\nthe y coordinate in the virtual screen.",75,{"inputs":[{"name":"screen"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_monitor_at_window","","Returns the number of the monitor in which the largest area of the\nbounding rectangle of `window` resides.\n## `window`\na `Window`",75,{"inputs":[{"name":"screen"},{"name":"window"}],"output":{"name":"i32"}}],[11,"get_monitor_width_mm","","Gets the width in millimeters of the specified monitor, if available.\n## `monitor_num`\nnumber of the monitor, between 0 and gdk_screen_get_n_monitors (screen)",75,{"inputs":[{"name":"screen"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_monitor_height_mm","","Gets the height in millimeters of the specified monitor.\n## `monitor_num`\nnumber of the monitor, between 0 and gdk_screen_get_n_monitors (screen)",75,{"inputs":[{"name":"screen"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_monitor_plug_name","","Returns the output name of the specified monitor.\nUsually something like VGA, DVI, or TV, not the actual\nproduct name of the display device.\n## `monitor_num`\nnumber of the monitor, between 0 and gdk_screen_get_n_monitors (screen)",75,{"inputs":[{"name":"screen"},{"name":"i32"}],"output":{"name":"option"}}],[11,"get_monitor_scale_factor","","Returns the internal scale factor that maps from monitor coordiantes\nto the actual device pixels. On traditional systems this is 1, but\non very high density outputs this can be a higher value (often 2).",75,{"inputs":[{"name":"screen"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_resolution","","Gets the resolution for font handling on the screen; see\n`Screen::set_resolution` for full details.",75,{"inputs":[{"name":"screen"}],"output":{"name":"f64"}}],[11,"set_resolution","","Sets the resolution for font handling on the screen. This is a\nscale factor between points specified in a `pango::FontDescription`\nand cairo units. The default value is 96, meaning that a 10 point\nfont will be 13 units high. (10 * 96. / 72. = 13.3).\n## `dpi`\nthe resolution in “dots per inch”. (Physical inches aren’t actually\n involved; the terminology is conventional.)",75,{"inputs":[{"name":"screen"},{"name":"f64"}],"output":null}],[11,"get_active_window","","Returns the screen’s currently active window.",75,{"inputs":[{"name":"screen"}],"output":{"name":"option"}}],[11,"hash","","",76,null],[11,"fmt","","",76,{"inputs":[{"name":"visual"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"visual"}],"output":{"name":"visual"}}],[11,"static_type","","",76,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",76,{"inputs":[{"name":"visual"},{"name":"t"}],"output":{"name":"bool"}}],[11,"query_depths","","",76,{"inputs":[],"output":{"name":"vec"}}],[11,"get_bits_per_rgb","","Returns the number of significant bits per red, green and blue value.",76,{"inputs":[{"name":"visual"}],"output":{"name":"i32"}}],[11,"get_blue_pixel_details","","Obtains values that are needed to calculate blue pixel values in TrueColor\nand DirectColor. The “mask” is the significant bits within the pixel.\nThe “shift” is the number of bits left we must shift a primary for it\nto be in position (according to the &quot;mask&quot;). Finally, &quot;precision&quot; refers\nto how much precision the pixel value contains for a particular primary.\n## `mask`\nA pointer to a `guint32` to be filled in, or `None`\n## `shift`\nA pointer to a `gint` to be filled in, or `None`\n## `precision`\nA pointer to a `gint` to be filled in, or `None`",76,{"inputs":[{"name":"visual"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_colormap_size","","Returns the size of a colormap for this visual.",76,{"inputs":[{"name":"visual"}],"output":{"name":"i32"}}],[11,"get_depth","","Returns the bit depth of this visual.",76,{"inputs":[{"name":"visual"}],"output":{"name":"i32"}}],[11,"get_green_pixel_details","","Obtains values that are needed to calculate green pixel values in TrueColor\nand DirectColor. The “mask” is the significant bits within the pixel.\nThe “shift” is the number of bits left we must shift a primary for it\nto be in position (according to the &quot;mask&quot;). Finally, &quot;precision&quot; refers\nto how much precision the pixel value contains for a particular primary.\n## `mask`\nA pointer to a `guint32` to be filled in, or `None`\n## `shift`\nA pointer to a `gint` to be filled in, or `None`\n## `precision`\nA pointer to a `gint` to be filled in, or `None`",76,{"inputs":[{"name":"visual"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_red_pixel_details","","Obtains values that are needed to calculate red pixel values in TrueColor\nand DirectColor. The “mask” is the significant bits within the pixel.\nThe “shift” is the number of bits left we must shift a primary for it\nto be in position (according to the &quot;mask&quot;). Finally, &quot;precision&quot; refers\nto how much precision the pixel value contains for a particular primary.\n## `mask`\nA pointer to a `guint32` to be filled in, or `None`\n## `shift`\nA pointer to a `gint` to be filled in, or `None`\n## `precision`\nA pointer to a `gint` to be filled in, or `None`",76,{"inputs":[{"name":"visual"},{"name":"u32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_best_depth","","Get the best available depth for the default GDK screen. “Best”\nmeans “largest,” i.e. 32 preferred over 24 preferred over 8 bits\nper pixel.",76,{"inputs":[],"output":{"name":"i32"}}],[11,"get_system","","Get the system’s default visual for the default GDK screen.\nThis is the visual for the root window of the display.\nThe return value should not be freed.",76,{"inputs":[],"output":{"name":"visual"}}],[11,"get_best","","Get the visual with the most available colors for the default\nGDK screen. The return value should not be freed.",76,{"inputs":[],"output":{"name":"visual"}}],[11,"get_best_with_depth","","Get the best visual with depth `depth` for the default GDK screen.\nColor visuals and visuals with mutable colormaps are preferred\nover grayscale or fixed-colormap visuals. The return value should\nnot be freed. `None` may be returned if no visual supports `depth`.\n## `depth`\na bit depth",76,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"get_screen","","Gets the screen to which this visual belongs",76,{"inputs":[{"name":"visual"}],"output":{"name":"screen"}}],[11,"hash","","",77,null],[11,"fmt","","",77,{"inputs":[{"name":"window"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"static_type","","",77,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",77,{"inputs":[{"name":"window"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Window` using the attributes from\n`attributes`. See `WindowAttr` and `WindowAttributesType` for\nmore details. Note: to use this on displays other than the default\ndisplay, `parent` must be specified.\n## `parent`\na `Window`, or `None` to create the window as a child of\n the default root window for the default display.\n## `attributes`\nattributes of the new window\n## `attributes_mask`\nmask indicating which\n fields in `attributes` are valid",77,{"inputs":[{"name":"option"},{"name":"attributes"}],"output":{"name":"window"}}],[11,"get_window_type","","Gets the type of the window. See `WindowType`.",77,{"inputs":[{"name":"window"}],"output":{"name":"windowtype"}}],[11,"get_display","","Gets the `Display` associated with a `Window`.",77,{"inputs":[{"name":"window"}],"output":{"name":"display"}}],[11,"get_screen","","Gets the `Screen` associated with a `Window`.",77,{"inputs":[{"name":"window"}],"output":{"name":"screen"}}],[11,"get_visual","","Gets the `Visual` describing the pixel format of `self`.",77,{"inputs":[{"name":"window"}],"output":{"name":"visual"}}],[11,"show","","Like `Window::show_unraised`, but also raises the window to the\ntop of the window stack (moves the window to the front of the\nZ-order).",77,{"inputs":[{"name":"window"}],"output":null}],[11,"show_unraised","","Shows a `Window` onscreen, but does not modify its stacking\norder. In contrast, `Window::show` will raise the window\nto the top of the window stack.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"hide","","For toplevel windows, withdraws them, so they will no longer be\nknown to the window manager; for all windows, unmaps them, so\nthey won’t be displayed. Normally done automatically as\npart of `gtk_widget_hide`.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"is_destroyed","","Check to see if a window is destroyed..",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"is_visible","","Checks whether the window has been mapped (with `Window::show` or\n`Window::show_unraised`).",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"is_viewable","","Check if the window and all ancestors of the window are\nmapped. (This is not necessarily &quot;viewable&quot; in the X sense, since\nwe only check as far as we have GDK window parents, not to the root\nwindow.)",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"is_input_only","","Determines whether or not the window is an input only window.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"is_shaped","","Determines whether or not the window is shaped.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"get_state","","Gets the bitwise OR of the currently active window state flags,\nfrom the `WindowState` enumeration.",77,{"inputs":[{"name":"window"}],"output":{"name":"windowstate"}}],[11,"withdraw","","Withdraws a window (unmaps it and asks the window manager to forget about it).\nThis function is not really useful as `Window::hide` automatically\nwithdraws toplevel windows before hiding them.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"iconify","","Asks to iconify (minimize) `self`. The window manager may choose\nto ignore the request, but normally will honor it. Using\n`gtk_window_iconify` is preferred, if you have a ``GtkWindow`` widget.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"deiconify","","Attempt to deiconify (unminimize) `self`. On X11 the window manager may\nchoose to ignore the request to deiconify. When using GTK+,\nuse `gtk_window_deiconify` instead of the `Window` variant. Or better yet,\nyou probably want to use `gtk_window_present`, which raises the window, focuses it,\nunminimizes it, and puts it on the current desktop.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"stick","","“Pins” a window such that it’s on all workspaces and does not scroll\nwith viewports, for window managers that have scrollable viewports.\n(When using ``GtkWindow``, `gtk_window_stick` may be more useful.)",77,{"inputs":[{"name":"window"}],"output":null}],[11,"unstick","","Reverse operation for `Window::stick`; see `Window::stick`,\nand `gtk_window_unstick`.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"maximize","","Maximizes the window. If the window was already maximized, then\nthis function does nothing.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"unmaximize","","Unmaximizes the window. If the window wasn’t maximized, then this\nfunction does nothing.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"fullscreen","","Moves the window into fullscreen mode. This means the\nwindow covers the entire screen and is above any panels\nor task bars.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"unfullscreen","","Moves the window out of fullscreen mode. If the window was not\nfullscreen, does nothing.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"get_fullscreen_mode","","Obtains the `FullscreenMode` of the `self`.",77,{"inputs":[{"name":"window"}],"output":{"name":"fullscreenmode"}}],[11,"set_fullscreen_mode","","Specifies whether the `self` should span over all monitors (in a multi-head\nsetup) or only the current monitor when in fullscreen mode.",77,{"inputs":[{"name":"window"},{"name":"fullscreenmode"}],"output":null}],[11,"set_keep_above","","Set if `self` must be kept above other windows. If the\nwindow was already above, then this function does nothing.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"set_keep_below","","Set if `self` must be kept below other windows. If the\nwindow was already below, then this function does nothing.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"set_opacity","","Set `self` to render as partially transparent,\nwith opacity 0 being fully transparent and 1 fully opaque. (Values\nof the opacity parameter are clamped to the [0,1] range.)",77,{"inputs":[{"name":"window"},{"name":"f64"}],"output":null}],[11,"set_composited","","Sets a `Window` as composited, or unsets it. Composited\nwindows do not automatically have their contents drawn to\nthe screen. Drawing is redirected to an offscreen buffer\nand an expose event is emitted on the parent of the composited\nwindow. It is the responsibility of the parent’s expose handler\nto manually merge the off-screen content onto the screen in\nwhatever way it sees fit.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"get_composited","","Determines whether `self` is composited.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"_move","","",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"resize","","Resizes `self`; for toplevel windows, asks the window manager to resize\nthe window. The window manager may not allow the resize. When using GTK+,\nuse `gtk_window_resize` instead of this low-level GDK function.",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"move_resize","","Equivalent to calling `Window::move` and `Window::resize`,\nexcept that both operations are performed at once, avoiding strange\nvisual effects. (i.e. the user may be able to see the window first\nmove, then resize, if you don’t use `Window::move_resize`.)\n## `x`\nnew X position relative to window’s parent\n## `y`\nnew Y position relative to window’s parent\n## `width`\nnew width\n## `height`\nnew height",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"scroll","","Scroll the contents of `self`, both pixels and children, by the\ngiven amount. `self` itself does not move. Portions of the window\nthat the scroll operation brings in from offscreen areas are\ninvalidated. The invalidated region may be bigger than what would\nstrictly be necessary.",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"has_native","","Checks whether the window has a native window or not. Note that\nyou can use `Window::ensure_native` if a native window is needed.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"ensure_native","","Tries to ensure that there is a window-system native window for this\n`Window`. This may fail in some situations, returning `false`.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"reparent","","Reparents `self` into the given `new_parent`. The window being\nreparented will be unmapped as a side effect.\n## `new_parent`\nnew parent to move `self` into\n## `x`\nX location inside the new parent\n## `y`\nY location inside the new parent",77,{"inputs":[{"name":"window"},{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"raise","","Raises `self` to the top of the Z-order (stacking order), so that\nother windows with the same parent window appear below `self`.\nThis is true whether or not the windows are visible.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"lower","","Lowers `self` to the bottom of the Z-order (stacking order), so that\nother windows with the same parent window appear above `self`.\nThis is true whether or not the other windows are visible.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"restack","","Changes the position of `self` in the Z-order (stacking order), so that\nit is above `sibling` (if `above` is `true`) or below `sibling` (if `above` is\n`false`).",77,{"inputs":[{"name":"window"},{"name":"window"},{"name":"bool"}],"output":null}],[11,"focus","","Sets keyboard focus to `self`. In most cases, `gtk_window_present`\nshould be used on a ``GtkWindow``, rather than calling this function.\n## `timestamp`\ntimestamp of the event triggering the window focus",77,{"inputs":[{"name":"window"},{"name":"u32"}],"output":null}],[11,"register_dnd","","Registers a window as a potential drop destination.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"begin_resize_drag","","Begins a window resize operation (for a toplevel window).",77,{"inputs":[{"name":"window"},{"name":"windowedge"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"begin_resize_drag_for_device","","Begins a window resize operation (for a toplevel window).\nYou might use this function to implement a “window resize grip,” for\nexample; in fact ``GtkStatusbar`` uses it. The function works best\nwith window managers that support the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nbut has a fallback implementation for other window managers.\n## `edge`\nthe edge or corner from which the drag is started\n## `device`\nthe device used for the operation\n## `button`\nthe button being used to drag, or 0 for a keyboard-initiated drag\n## `root_x`\nroot window X coordinate of mouse click that began the drag\n## `root_y`\nroot window Y coordinate of mouse click that began the drag\n## `timestamp`\ntimestamp of mouse click that began the drag (use `gdk_event_get_time`)",77,{"inputs":[{"name":"window"},{"name":"windowedge"},{"name":"device"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"begin_move_drag","","Begins a window move operation (for a toplevel window).",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"begin_move_drag_for_device","","Begins a window move operation (for a toplevel window).\nYou might use this function to implement a “window move grip,” for\nexample. The function works best with window managers that support the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nbut has a fallback implementation for other window managers.\n## `device`\nthe device used for the operation\n## `button`\nthe button being used to drag, or 0 for a keyboard-initiated drag\n## `root_x`\nroot window X coordinate of mouse click that began the drag\n## `root_y`\nroot window Y coordinate of mouse click that began the drag\n## `timestamp`\ntimestamp of mouse click that began the drag",77,{"inputs":[{"name":"window"},{"name":"device"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"u32"}],"output":null}],[11,"beep","","Emits a short beep associated to `self` in the appropriate\ndisplay, if supported. Otherwise, emits a short beep on\nthe display just as `Display::beep`.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"get_scale_factor","","Returns the internal scale factor that maps from window coordiantes\nto the actual device pixels. On traditional systems this is 1, but\non very high density outputs this can be a higher value (often 2).",77,{"inputs":[{"name":"window"}],"output":{"name":"i32"}}],[11,"begin_paint_rect","","A convenience wrapper around `Window::begin_paint_region` which\ncreates a rectangular region for you. See\n`Window::begin_paint_region` for details.\n## `rectangle`\nrectangle you intend to draw to",77,{"inputs":[{"name":"window"},{"name":"rectangleint"}],"output":null}],[11,"end_paint","","Indicates that the backing store created by the most recent call\nto `Window::begin_paint_region` should be copied onscreen and\ndeleted, leaving the next-most-recent backing store or no backing\nstore at all as the active paint region. See\n`Window::begin_paint_region` for full details.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"invalidate_rect","","A convenience wrapper around `Window::invalidate_region` which\ninvalidates a rectangular region. See\n`Window::invalidate_region` for details.\n## `rect`\nrectangle to invalidate or `None` to invalidate the whole\n window\n## `invalidate_children`\nwhether to also invalidate child windows",77,{"inputs":[{"name":"window"},{"name":"rectangleint"},{"name":"bool"}],"output":null}],[11,"freeze_updates","","Temporarily freezes a window such that it won’t receive expose\nevents. The window will begin receiving expose events again when\n`Window::thaw_updates` is called. If `Window::freeze_updates`\nhas been called more than once, `Window::thaw_updates` must be called\nan equal number of times to begin processing exposes.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"thaw_updates","","Thaws a window frozen with `Window::freeze_updates`.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"process_all_updates","","Calls `Window::process_updates` for all windows (see `Window`)\nin the application.",77,{"inputs":[],"output":null}],[11,"process_updates","","Sends one or more expose events to `self`. The areas in each\nexpose event will cover the entire update area for the window (see\n`Window::invalidate_region` for details). Normally GDK calls\n`Window::process_all_updates` on your behalf, so there’s no\nneed to call this function unless you want to force expose events\nto be delivered immediately and synchronously (vs. the usual\ncase, where GDK delivers them in an idle handler). Occasionally\nthis is useful to produce nicer scrolling behavior, for example.\n## `update_children`\nwhether to also process updates for child windows",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"set_debug_updates","","With update debugging enabled, calls to\n`Window::invalidate_region` clear the invalidated region of the\nscreen to a noticeable color, and GDK pauses for a short time\nbefore sending exposes to windows during\n`Window::process_updates`. The net effect is that you can see\nthe invalid region for each window and watch redraws as they\noccur. This allows you to diagnose inefficiencies in your application.",77,{"inputs":[{"name":"bool"}],"output":null}],[11,"get_frame_clock","","Gets the frame clock for the window. The frame clock for a window\nnever changes unless the window is reparented to a new toplevel\nwindow.",77,{"inputs":[{"name":"window"}],"output":{"name":"frameclock"}}],[11,"set_user_data","","For most purposes this function is deprecated in favor of\n`gobject::Object::set_data`. However, for historical reasons GTK+ stores\nthe ``GtkWidget`` that owns a `Window` as user data on the\n`Window`. So, custom widget implementations should use\nthis function for that. If GTK+ receives an event for a `Window`,\nand the user data for the window is non-`None`, GTK+ will assume the\nuser data is a ``GtkWidget``, and forward the event to that widget.\n## `user_data`\nuser data",77,{"inputs":[{"name":"window"},{"name":"t"}],"output":null}],[11,"set_override_redirect","","An override redirect window is not under the control of the window manager.\nThis means it won’t have a titlebar, won’t be minimizable, etc. - it will\nbe entirely under the control of the application. The window manager\ncan’t see the override redirect window at all.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"set_accept_focus","","Setting `accept_focus` to `false` hints the desktop environment that the\nwindow doesn’t want to receive input focus.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"get_accept_focus","","Determines whether or not the desktop environment shuld be hinted that\nthe window does not want to receive input focus.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"set_focus_on_map","","Setting `focus_on_map` to `false` hints the desktop environment that the\nwindow doesn’t want to receive input focus when it is mapped.\nfocus_on_map should be turned off for windows that aren’t triggered\ninteractively (such as popups from network activity).",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"get_focus_on_map","","Determines whether or not the desktop environment should be hinted that the\nwindow does not want to receive input focus when it is mapped.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"set_child_shapes","","Sets the shape mask of `self` to the union of shape masks\nfor all children of `self`, ignoring the shape mask of `self`\nitself. Contrast with `Window::merge_child_shapes` which includes\nthe shape mask of `self` in the masks to be merged.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"merge_child_shapes","","Merges the shape masks for any child windows into the\nshape mask for `self`. i.e. the union of all masks\nfor `self` and its children will become the new mask\nfor `self`. See `Window::shape_combine_region`.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"set_child_input_shapes","","Sets the input shape mask of `self` to the union of input shape masks\nfor all children of `self`, ignoring the input shape mask of `self`\nitself. Contrast with `Window::merge_child_input_shapes` which includes\nthe input shape mask of `self` in the masks to be merged.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"merge_child_input_shapes","","Merges the input shape masks for any child windows into the\ninput shape mask for `self`. i.e. the union of all input masks\nfor `self` and its children will become the new input mask\nfor `self`. See `Window::input_shape_combine_region`.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"set_static_gravities","","Used to set the bit gravity of the given window to static, and flag\nit so all children get static subwindow gravity. This is used if you\nare implementing scary features that involve deep knowledge of the\nwindowing system. Don’t worry about it.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"set_title","","Sets the title of a toplevel window, to be displayed in the titlebar.\nIf you haven’t explicitly set the icon name for the window\n(using `Window::set_icon_name`), the icon name will be set to\n`title` as well. `title` must be in UTF-8 encoding (as with all\nuser-readable strings in GDK/GTK+). `title` may not be `None`.\n## `title`\ntitle of `self`",77,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"set_background_rgba","","Sets the background color of `self`.",77,{"inputs":[{"name":"window"},{"name":"gdkrgba"}],"output":null}],[11,"set_cursor","","Sets the default mouse pointer for a `Window`.",77,{"inputs":[{"name":"window"},{"name":"cursor"}],"output":null}],[11,"get_cursor","","Retrieves a `Cursor` pointer for the cursor currently set on the\nspecified `Window`, or `None`. If the return value is `None` then\nthere is no custom cursor set on the specified window, and it is\nusing the cursor for its parent window.",77,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"get_user_data","","Retrieves the user data for `self`, which is normally the widget\nthat `self` belongs to. See `Window::set_user_data`.\n## `data`\nreturn location for user data",77,{"inputs":[{"name":"window"}],"output":{"name":"t"}}],[11,"get_geometry","","Any of the return location arguments to this function may be `None`,\nif you aren’t interested in getting the value of that field.",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_geometry_hints","","Sets the geometry hints for `self`. Hints flagged in `geom_mask`\nare set, hints not flagged in `geom_mask` are unset.\nTo unset all hints, use a `geom_mask` of 0 and a `geometry` of `None`.",77,{"inputs":[{"name":"window"},{"name":"gdkgeometry"},{"name":"windowhints"}],"output":null}],[11,"get_width","","Returns the width of the given `self`.",77,{"inputs":[{"name":"window"}],"output":{"name":"i32"}}],[11,"get_height","","Returns the height of the given `self`.",77,{"inputs":[{"name":"window"}],"output":{"name":"i32"}}],[11,"set_modal_hint","","The application can use this hint to tell the window manager\nthat a certain window has modal behaviour. The window manager\ncan use this information to handle modal windows in a special\nway.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"get_modal_hint","","Determines whether or not the window manager is hinted that `self`\nhas modal behaviour.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"set_type_hint","","The application can use this call to provide a hint to the window\nmanager about the functionality of a window. The window manager\ncan use this information when determining the decoration and behaviour\nof the window.",77,{"inputs":[{"name":"window"},{"name":"windowtypehint"}],"output":null}],[11,"get_type_hint","","This function returns the type hint set for a window.",77,{"inputs":[{"name":"window"}],"output":{"name":"windowtypehint"}}],[11,"set_shadow_width","","Newer GTK+ windows using client-side decorations use extra geometry\naround their frames for effects like shadows and invisible borders.\nWindow managers that want to maximize windows or snap to edges need\nto know where the extents of the actual frame lie, so that users\ndon’t feel like windows are snapping against random invisible edges.",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"set_skip_taskbar_hint","","Toggles whether a window should appear in a task list or window\nlist. If a window’s semantic type as specified with\n`Window::set_type_hint` already fully describes the window, this\nfunction should not be called in addition,\ninstead you should allow the window to be treated according to\nstandard policy for its semantic type.\n## `skips_taskbar`\n`true` to skip the taskbar",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"set_skip_pager_hint","","Toggles whether a window should appear in a pager (workspace\nswitcher, or other desktop utility program that displays a small\nthumbnail representation of the windows on the desktop). If a\nwindow’s semantic type as specified with `Window::set_type_hint`\nalready fully describes the window, this function should\nnot be called in addition, instead you should\nallow the window to be treated according to standard policy for\nits semantic type.\n## `skips_pager`\n`true` to skip the pager",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"set_urgency_hint","","Toggles whether a window needs the user&#39;s\nurgent attention.\n## `urgent`\n`true` if the window is urgent",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"get_position","","Obtains the position of the window as reported in the\nmost-recently-processed `EventConfigure`. Contrast with\n`Window::get_geometry` which queries the X server for the\ncurrent window position, regardless of which events have been\nreceived or processed.",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_root_origin","","Obtains the top-left corner of the window manager frame in root\nwindow coordinates.\n## `x`\nreturn location for X position of window frame\n## `y`\nreturn location for Y position of window frame",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_frame_extents","","Obtains the bounding box of the window, including window manager\ntitlebar/borders if any. The frame position is given in root window\ncoordinates. To get the position of the window itself (rather than\nthe frame) in root window coordinates, use `Window::get_origin`.\n## `rect`\nrectangle to fill with bounding box of the window frame",77,{"inputs":[{"name":"window"}],"output":{"name":"rectangleint"}}],[11,"get_origin","","Obtains the position of a window in root window coordinates.\n(Compare with `Window::get_position` and\n`Window::get_geometry` which return the position of a window\nrelative to its parent window.)\n## `x`\nreturn location for X coordinate\n## `y`\nreturn location for Y coordinate",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"}],"output":{"name":"i32"}}],[11,"get_root_coords","","Obtains the position of a window position in root\nwindow coordinates. This is similar to\n`Window::get_origin` but allows you to pass\nin any position in the window, not just the origin.\n## `x`\nX coordinate in window\n## `y`\nY coordinate in window\n## `root_x`\nreturn location for X coordinate\n## `root_y`\nreturn location for Y coordinate",77,{"inputs":[{"name":"window"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_device_position","","Obtains the current device position and modifier state.\nThe position is given in coordinates relative to the upper left\ncorner of `self`.",77,{"inputs":[{"name":"window"},{"name":"device"},{"name":"i32"},{"name":"i32"},{"name":"modifiertype"}],"output":{"name":"option"}}],[11,"get_device_position_double","","Obtains the current device position in doubles and modifier state.\nThe position is given in coordinates relative to the upper left\ncorner of `self`.",77,{"inputs":[{"name":"window"},{"name":"device"},{"name":"f64"},{"name":"f64"},{"name":"modifiertype"}],"output":{"name":"option"}}],[11,"get_parent","","Obtains the parent of `self`, as known to GDK. Does not query the\nX server; thus this returns the parent as passed to `Window::new`,\nnot the actual parent. This should never matter unless you’re using\nXlib calls mixed with GDK calls on the X11 platform. It may also\nmatter for toplevel windows, because the window manager may choose\nto reparent them.",77,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"get_toplevel","","Gets the toplevel window that’s an ancestor of `self`.",77,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"get_events","","Gets the event mask for `self` for all master input devices. See\n`Window::set_events`.",77,{"inputs":[{"name":"window"}],"output":{"name":"eventmask"}}],[11,"set_events","","The event mask for a window determines which events will be reported\nfor that window from all master input devices. For example, an event mask\nincluding `EventMask::ButtonPressMask` means the window should report button\npress events. The event mask is the bitwise OR of values from the\n`EventMask` enumeration.",77,{"inputs":[{"name":"window"},{"name":"eventmask"}],"output":null}],[11,"set_icon_name","","Windows may have a name used while minimized, distinct from the\nname they display in their titlebar. Most of the time this is a bad\nidea from a user interface standpoint. But you can set such a name\nwith this function, if you like.",77,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"set_transient_for","","Indicates to the window manager that `self` is a transient dialog\nassociated with the application window `parent`. This allows the\nwindow manager to do things like center `self` on `parent` and\nkeep `self` above `parent`.",77,{"inputs":[{"name":"window"},{"name":"window"}],"output":null}],[11,"set_role","","When using GTK+, typically you should use `gtk_window_set_role` instead\nof this low-level function.",77,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"set_startup_id","","When using GTK+, typically you should use `gtk_window_set_startup_id`\ninstead of this low-level function.\n## `startup_id`\na string with startup-notification identifier",77,{"inputs":[{"name":"window"},{"name":"str"}],"output":null}],[11,"set_group","","Sets the group leader window for `self`. By default,\nGDK sets the group leader for all toplevel windows\nto a global window implicitly created by GDK. With this function\nyou can override this default.",77,{"inputs":[{"name":"window"},{"name":"option"}],"output":null}],[11,"get_group","","Returns the group leader window for `self`. See `Window::set_group`.",77,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"set_decorations","","“Decorations” are the features the window manager adds to a toplevel `Window`.\nThis function sets the traditional Motif window manager hints that tell the\nwindow manager which decorations you would like your window to have.\nUsually you should use `gtk_window_set_decorated` on a ``GtkWindow`` instead of\nusing the GDK function directly.",77,{"inputs":[{"name":"window"},{"name":"wmdecoration"}],"output":null}],[11,"get_decorations","","Returns the decorations set on the `Window` with\n`Window::set_decorations`.\n## `decorations`\nThe window decorations will be written here",77,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"set_functions","","Sets hints about the window management functions to make available\nvia buttons on the window frame.",77,{"inputs":[{"name":"window"},{"name":"wmfunction"}],"output":null}],[11,"get_default_root_window","","",77,{"inputs":[],"output":{"name":"window"}}],[11,"get_support_multidevice","","Returns `true` if the window is aware of the existence of multiple\ndevices.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"set_support_multidevice","","This function will enable multidevice features in `self`.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"get_device_cursor","","Retrieves a `Cursor` pointer for the `device` currently set on the\nspecified `Window`, or `None`. If the return value is `None` then\nthere is no custom cursor set on the specified window, and it is\nusing the cursor for its parent window.\n## `device`\na master, pointer `Device`.",77,{"inputs":[{"name":"window"},{"name":"device"}],"output":{"name":"option"}}],[11,"set_device_cursor","","Sets a specific `Cursor` for a given device when it gets inside `self`.\nUse `Cursor::new_for_display` or `Cursor::new_from_pixbuf` to create\nthe cursor. To make the cursor invisible, use `CursorType::BlankCursor`. Passing\n`None` for the `cursor` argument to `Window::set_cursor` means that\n`self` will use the cursor of its parent window. Most windows should\nuse this default.\n## `device`\na master, pointer `Device`\n## `cursor`\na `Cursor`",77,{"inputs":[{"name":"window"},{"name":"device"},{"name":"cursor"}],"output":null}],[11,"get_device_events","","Returns the event mask for `self` corresponding to an specific device.\n## `device`\na `Device`.",77,{"inputs":[{"name":"window"},{"name":"device"}],"output":{"name":"eventmask"}}],[11,"set_device_events","","Sets the event mask for a given device (Normally a floating device, not\nattached to any visible pointer) to `self`. For example, an event mask\nincluding `EventMask::ButtonPressMask` means the window should report button\npress events. The event mask is the bitwise OR of values from the\n`EventMask` enumeration.",77,{"inputs":[{"name":"window"},{"name":"device"},{"name":"eventmask"}],"output":null}],[11,"get_source_events","","Returns the event mask for `self` corresponding to the device class specified\nby `source`.\n## `source`\na `InputSource` to define the source class.",77,{"inputs":[{"name":"window"},{"name":"inputsource"}],"output":{"name":"eventmask"}}],[11,"set_source_events","","Sets the event mask for any floating device (i.e. not attached to any\nvisible pointer) that has the source defined as `source`. This event\nmask will be applied both to currently existing, newly added devices\nafter this call, and devices being attached/detached.\n## `source`\na `InputSource` to define the source class.\n## `event_mask`\nevent mask for `self`",77,{"inputs":[{"name":"window"},{"name":"inputsource"},{"name":"eventmask"}],"output":null}],[11,"get_event_compression","","Get the current event compression setting for this window.",77,{"inputs":[{"name":"window"}],"output":{"name":"bool"}}],[11,"set_event_compression","","Determines whether or not extra unprocessed motion events in\nthe event queue can be discarded. If `true` only the most recent\nevent will be delivered.",77,{"inputs":[{"name":"window"},{"name":"bool"}],"output":null}],[11,"offscreen_window_set_embedder","","",77,{"inputs":[{"name":"window"},{"name":"window"}],"output":null}],[11,"offscreen_window_get_embedder","","",77,{"inputs":[{"name":"window"}],"output":{"name":"option"}}],[11,"geometry_changed","","This function informs GDK that the geometry of an embedded\noffscreen window has changed. This is necessary for GDK to keep\ntrack of which offscreen window the pointer is in.",77,{"inputs":[{"name":"window"}],"output":null}],[11,"coords_from_parent","","Transforms window coordinates from a parent window to a child\nwindow, where the parent window is the normal parent as returned by\n`Window::get_parent` for normal windows, and the window&#39;s\nembedder as returned by `gdk_offscreen_window_get_embedder` for\noffscreen windows.",77,{"inputs":[{"name":"window"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"coords_to_parent","","Transforms window coordinates from a child window to its parent\nwindow, where the parent window is the normal parent as returned by\n`Window::get_parent` for normal windows, and the window&#39;s\nembedder as returned by `gdk_offscreen_window_get_embedder` for\noffscreen windows.",77,{"inputs":[{"name":"window"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_effective_parent","","Obtains the parent of `self`, as known to GDK. Works like\n`Window::get_parent` for normal windows, but returns the\nwindow’s embedder for offscreen windows.",77,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"get_effective_toplevel","","Gets the toplevel window that’s an ancestor of `self`.",77,{"inputs":[{"name":"window"}],"output":{"name":"window"}}],[11,"get_drag_protocol","","Finds out the DND protocol supported by a window.\n## `target`\nlocation of the window\n where the drop should happen. This may be `self` or a proxy window,\n or `None` if `self` does not support Drag and Drop.",77,null],[6,"key","","",null,null],[17,"ATOM_NONE","","",null,null]],"paths":[[4,"AxisUse"],[4,"GdkByteOrder"],[4,"CrossingMode"],[4,"GdkCursorType"],[4,"GdkDeviceType"],[4,"DragProtocol"],[4,"EventType"],[4,"GdkFilterReturn"],[4,"FullscreenMode"],[4,"GdkGLError"],[4,"GrabOwnership"],[4,"GrabStatus"],[4,"Gravity"],[4,"InputMode"],[4,"InputSource"],[4,"ModifierIntent"],[4,"NotifyType"],[4,"OwnerChange"],[4,"GdkPropMode"],[4,"PropertyState"],[4,"ScrollDirection"],[4,"SettingAction"],[4,"GdkStatus"],[4,"VisibilityState"],[4,"GdkVisualType"],[4,"WindowEdge"],[4,"WindowType"],[4,"WindowTypeHint"],[4,"WindowWindowClass"],[3,"DragAction"],[3,"EventMask"],[3,"GdkFrameClockPhase"],[3,"ModifierType"],[3,"WMDecoration"],[3,"WMFunction"],[3,"GdkWindowAttributesType"],[3,"WindowHints"],[3,"WindowState"],[3,"Color"],[3,"RGBA"],[3,"Event"],[8,"RectangleExt"],[8,"RGBA"],[8,"ContextExt"],[3,"AppLaunchContext"],[3,"Atom"],[3,"Context"],[3,"Cursor"],[3,"Device"],[3,"DeviceManager"],[3,"Display"],[3,"DisplayManager"],[3,"DragContext"],[3,"EventButton"],[3,"EventConfigure"],[3,"EventCrossing"],[3,"EventDND"],[3,"EventExpose"],[3,"EventFocus"],[3,"EventGrabBroken"],[3,"EventKey"],[3,"EventMotion"],[3,"EventOwnerChange"],[3,"EventProperty"],[3,"EventProximity"],[3,"EventScroll"],[3,"EventSelection"],[3,"EventSetting"],[3,"EventTouch"],[3,"EventVisibility"],[3,"EventWindowState"],[3,"FrameClock"],[3,"FrameTimings"],[3,"GLContext"],[3,"cairo_rectangle_int_t"],[3,"Screen"],[3,"Visual"],[3,"Window"]]};
searchIndex["cairo"] = {"doc":"","items":[[0,"enums","cairo","",null,null],[11,"ensure_valid","cairo_sys::enums","",0,null],[11,"eq","","",0,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"clone","","",0,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"fmt","","",0,{"inputs":[{"name":"status"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"antialias"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"clone","","",1,{"inputs":[{"name":"antialias"}],"output":{"name":"antialias"}}],[11,"fmt","","",2,{"inputs":[{"name":"fillrule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"option"}}],[11,"lt","","",2,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"le","","",2,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"gt","","",2,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"ge","","",2,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"eq","","",2,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"fillrule"}],"output":{"name":"fillrule"}}],[11,"fmt","","",3,{"inputs":[{"name":"linecap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",3,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"option"}}],[11,"lt","","",3,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"le","","",3,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"gt","","",3,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"ge","","",3,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"eq","","",3,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"linecap"}],"output":{"name":"linecap"}}],[11,"fmt","","",4,{"inputs":[{"name":"linejoin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"eq","","",4,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"linejoin"}],"output":{"name":"linejoin"}}],[11,"fmt","","",5,{"inputs":[{"name":"operator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"eq","","",5,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"operator"}],"output":{"name":"operator"}}],[11,"fmt","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"eq","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"pathdatatype"}],"output":{"name":"pathdatatype"}}],[11,"fmt","","",7,{"inputs":[{"name":"content"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"eq","","",7,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"content"}],"output":{"name":"content"}}],[11,"fmt","","",8,{"inputs":[{"name":"extend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",8,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"option"}}],[11,"lt","","",8,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"le","","",8,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"gt","","",8,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"ge","","",8,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"eq","","",8,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"clone","","",8,{"inputs":[{"name":"extend"}],"output":{"name":"extend"}}],[11,"fmt","","",9,{"inputs":[{"name":"filter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",9,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"option"}}],[11,"lt","","",9,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"le","","",9,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"gt","","",9,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"ge","","",9,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"eq","","",9,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"clone","","",9,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"fmt","","",10,{"inputs":[{"name":"patterntype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",10,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"option"}}],[11,"lt","","",10,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"le","","",10,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"gt","","",10,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"ge","","",10,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"eq","","",10,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"clone","","",10,{"inputs":[{"name":"patterntype"}],"output":{"name":"patterntype"}}],[11,"fmt","","",11,{"inputs":[{"name":"fontslant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",11,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"option"}}],[11,"lt","","",11,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"le","","",11,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"gt","","",11,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"ge","","",11,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"eq","","",11,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"fontslant"}],"output":{"name":"fontslant"}}],[11,"fmt","","",12,{"inputs":[{"name":"fontweight"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"fontweight"}],"output":{"name":"fontweight"}}],[11,"fmt","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"textclusterflags"}],"output":{"name":"textclusterflags"}}],[11,"fmt","","",14,{"inputs":[{"name":"fonttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"fonttype"}],"output":{"name":"fonttype"}}],[11,"fmt","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"subpixelorder"}],"output":{"name":"subpixelorder"}}],[11,"fmt","","",16,{"inputs":[{"name":"hintstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"hintstyle"}],"output":{"name":"hintstyle"}}],[11,"fmt","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"hintmetrics"}],"output":{"name":"hintmetrics"}}],[11,"eq","","",18,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"surfacetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"surfacetype"}],"output":{"name":"surfacetype"}}],[11,"eq","","",19,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[11,"eq","cairo_sys","",20,{"inputs":[{"name":"cairo_rectangle_t"},{"name":"cairo_rectangle_t"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"cairo_rectangle_t"},{"name":"cairo_rectangle_t"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"cairo_rectangle_t"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"cairo_rectangle_t"}],"output":{"name":"cairo_rectangle_t"}}],[11,"eq","","",21,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"cairo_rectangle_int_t"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"cairo_rectangle_int_t"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"cairo_rectangle_int_t"}],"output":{"name":"cairo_rectangle_int_t"}}],[11,"clone","","",22,{"inputs":[{"name":"fontextents"}],"output":{"name":"fontextents"}}],[11,"clone","","",23,{"inputs":[{"name":"glyph"}],"output":{"name":"glyph"}}],[11,"clone","","",24,{"inputs":[{"name":"textcluster"}],"output":{"name":"textcluster"}}],[11,"clone","","",25,{"inputs":[{"name":"textextents"}],"output":{"name":"textextents"}}],[11,"clone","","",26,{"inputs":[{"name":"matrix"}],"output":{"name":"matrix"}}],[11,"default","","",27,{"inputs":[],"output":{"name":"cairo_user_data_key_t"}}],[11,"clone","","",27,{"inputs":[{"name":"cairo_user_data_key_t"}],"output":{"name":"cairo_user_data_key_t"}}],[11,"as_bool","","",28,{"inputs":[{"name":"cairo_bool_t"}],"output":{"name":"bool"}}],[4,"Status","cairo::enums","Status is used to indicate errors that can occur when using Cairo. In some cases it is\nreturned directly by functions, but when using `Context`, the last error, if any, is\nstored in the context and can be retrieved with `Context::status()`.",null,null],[13,"Success","","no error has occurred (Since 1.0)",0,null],[13,"NoMemory","","out of memory (Since 1.0)",0,null],[13,"InvalidRestore","","`Context::restore()` called without matching `Context::save()` (Since 1.0)",0,null],[13,"InvalidPopGroup","","no saved group to pop, i.e. `Context::pop_group()` without matching\n`Context::push_group()` (Since 1.0)",0,null],[13,"NoCurrentPoint","","no current point defined (Since 1.0)",0,null],[13,"InvalidMatrix","","invalid matrix (not invertible) (Since 1.0)",0,null],[13,"InvalidStatus","","invalid value for an input `Status` (Since 1.0)",0,null],[13,"NullPointer","","NULL pointer (Since 1.0)",0,null],[13,"InvalidString","","input string not valid UTF-8 (Since 1.0)",0,null],[13,"InvalidPathData","","input path data not valid (Since 1.0)",0,null],[13,"ReadError","","error while reading from input stream (Since 1.0)",0,null],[13,"WriteError","","error while writing to output stream (Since 1.0)",0,null],[13,"SurfaceFinished","","target surface has been finished (Since 1.0)",0,null],[13,"SurfaceTypeMismatch","","the surface type is not appropriate for the operation (Since 1.0)",0,null],[13,"PatternTypeMismatch","","the pattern type is not appropriate for the operation (Since 1.0)",0,null],[13,"InvalidContent","","invalid value for an input `Content` (Since 1.0)",0,null],[13,"InvalidFormat","","invalid value for an input `Format` (Since 1.0)",0,null],[13,"InvalidVisual","","invalid value for an input Visual* (Since 1.0)",0,null],[13,"FileNotFound","","file not found (Since 1.0)",0,null],[13,"InvalidDash","","invalid value for a dash setting (Since 1.0)",0,null],[13,"InvalidDscComment","","invalid value for a DSC comment (Since 1.2)",0,null],[13,"InvalidIndex","","invalid index passed to getter (Since 1.4)",0,null],[13,"ClipNotRepresentable","","clip region not representable in desired format (Since 1.4)",0,null],[13,"TempFileError","","error creating or writing to a temporary file (Since 1.6)",0,null],[13,"InvalidStride","","invalid value for stride (Since 1.6)",0,null],[13,"FontTypeMismatch","","the font type is not appropriate for the operation (Since 1.8)",0,null],[13,"UserFontImmutable","","the user-font is immutable (Since 1.8)",0,null],[13,"UserFontError","","error occurred in a user-font callback function (Since 1.8)",0,null],[13,"NegativeCount","","negative number used where it is not allowed (Since 1.8)",0,null],[13,"InvalidClusters","","input clusters do not represent the accompanying text and glyph array (Since 1.8)",0,null],[13,"InvalidSlant","","invalid value for an input `FontSlant` (Since 1.8)",0,null],[13,"InvalidWeight","","invalid value for an input `FontWeight` (Since 1.8)",0,null],[13,"InvalidSize","","invalid value (typically too big) for the size of the input (surface, pattern,\netc.) (Since 1.10)",0,null],[13,"UserFontNotImplemented","","user-font method not implemented (Since 1.10)",0,null],[13,"DeviceTypeMismatch","","the device type is not appropriate for the operation (Since 1.10)",0,null],[13,"DeviceError","","an operation to the device caused an unspecified error (Since 1.10)",0,null],[13,"InvalidMeshConstruction","","a mesh pattern construction operation was used outside of a\n`Context::mesh_pattern_begin_patch()`/`Context::mesh_pattern_end_patch()`\npair (Since 1.12)",0,null],[13,"DeviceFinished","","target device has been finished (Since 1.12)",0,null],[13,"LastStatus","","this is a special value indicating the number of status values defined in this\nenumeration. When using this value, note that the version of cairo at run-time\nmay have additional status values defined than the value of this symbol at\ncompile-time. (Since 1.10)",0,null],[4,"Antialias","","Specifies the type of antialiasing to do when rendering text or shapes.",null,null],[13,"Default","","Use the default antialiasing for the subsystem and target device, since 1.0",1,null],[13,"None","","Use a bilevel alpha mask, since 1.0",1,null],[13,"Gray","","Perform single-color antialiasing (using shades of gray for black text on a white\nbackground, for example), since 1.0",1,null],[13,"Subpixel","","Perform antialiasing by taking advantage of the order of subpixel elements on devices\nsuch as LCD panels, since 1.0",1,null],[13,"Fast","","Hint that the backend should perform some antialiasing but prefer speed over quality,\nsince 1.12",1,null],[13,"Good","","The backend should balance quality against performance, since 1.12",1,null],[13,"Best","","Hint that the backend should render at the highest quality, sacrificing speed if\nnecessary, since 1.12",1,null],[4,"FillRule","","`FillRule` is used to select how paths are filled. For both fill rules, whether or not\na point is included in the fill is determined by taking a ray from that point to infinity\nand looking at intersections with the path. The ray can be in any direction, as long as\nit doesn&#39;t pass through the end point of a segment or have a tricky intersection such as\nintersecting tangent to the path. (Note that filling is not actually implemented in this\nway. This is just a description of the rule that is applied.)",null,null],[13,"Winding","","If the path crosses the ray from left-to-right, counts +1. If the path crosses the ray\nfrom right to left, counts -1. (Left and right are determined from the perspective of\nlooking along the ray from the starting point.) If the total count is non-zero, the point\nwill be filled. (Since 1.0)",2,null],[13,"EvenOdd","","Counts the total number of intersections, without regard to the orientation of the contour.\nIf the total number of intersections is odd, the point will be filled. (Since 1.0)",2,null],[4,"LineCap","","Specifies how to render the endpoints of the path when stroking.",null,null],[13,"Butt","","start(stop) the line exactly at the start(end) point (Since 1.0)",3,null],[13,"Round","","use a round ending, the center of the circle is the end point (Since 1.0)",3,null],[13,"Square","","use squared ending, the center of the square is the end point (Since 1.0)",3,null],[4,"LineJoin","","Specifies how to render the junction of two lines when stroking.",null,null],[13,"Miter","","use a sharp (angled) corner, see `Context::set_miter_limit()` (Since 1.0)",4,null],[13,"Round","","use a rounded join, the center of the circle is the joint point (Since 1.0)",4,null],[13,"nBevel","","use a cut-off join, the join is cut off at half the line width from the\njoint point (Since 1.0)",4,null],[4,"Operator","","`Operator` is used to set the compositing operator for all cairo drawing operations.",null,null],[13,"Clear","","clear destination layer (bounded) (Since 1.0)",5,null],[13,"Source","","replace destination layer (bounded) (Since 1.0)",5,null],[13,"Over","","draw source layer on top of destination layer (bounded) (Since 1.0)",5,null],[13,"In","","draw source where there was destination content (unbounded) (Since 1.0)",5,null],[13,"Out","","draw source where there was no destination content (unbounded) (Since 1.0)",5,null],[13,"Atop","","draw source on top of destination content and only there (Since 1.0)",5,null],[13,"Dest","","ignore the source (Since 1.0)",5,null],[13,"DestOver","","draw destination on top of source (Since 1.0)",5,null],[13,"DestIn","","leave destination only where there was source content (unbounded) (Since 1.0)",5,null],[13,"DestOut","","leave destination only where there was no source content (Since 1.0)",5,null],[13,"DestAtop","","leave destination on top of source content and only there (unbounded) (Since 1.0)",5,null],[13,"Xor","","source and destination are shown where there is only one of them (Since 1.0)",5,null],[13,"Add","","source and destination layers are accumulated (Since 1.0)",5,null],[13,"Saturate","","like over, but assuming source and dest are disjoint geometries (Since 1.0)",5,null],[13,"Multiply","","source and destination layers are multiplied. This causes the result to be at\nleast as dark as the darker inputs. (Since 1.10)",5,null],[13,"Screen","","source and destination are complemented and multiplied. This causes the result\nto be at least as light as the lighter inputs. (Since 1.10)",5,null],[13,"Overlay","","multiplies or screens, depending on the lightness of the destination color.\n(Since 1.10)",5,null],[13,"Darken","","replaces the destination with the source if it is darker, otherwise keeps the\nsource. (Since 1.10)",5,null],[13,"Lighten","","replaces the destination with the source if it is lighter, otherwise keeps the\nsource. (Since 1.10)",5,null],[13,"ColorDodge","","brightens the destination color to reflect the source color. (Since 1.10)",5,null],[13,"ColorBurn","","darkens the destination color to reflect the source color. (Since 1.10)",5,null],[13,"HardLight","","Multiplies or screens, dependent on source color. (Since 1.10)",5,null],[13,"SoftLight","","Darkens or lightens, dependent on source color. (Since 1.10)",5,null],[13,"Difference","","Takes the difference of the source and destination color. (Since 1.10)",5,null],[13,"Exclusion","","Produces an effect similar to difference, but with lower contrast. (Since 1.10)",5,null],[13,"HslHue","","Creates a color with the hue of the source and the saturation and luminosity of\nthe target. (Since 1.10)",5,null],[13,"HslSaturation","","Creates a color with the saturation of the source and the hue and luminosity of\nthe target. Painting with this mode onto a gray area produces no change. (Since 1.10)",5,null],[13,"HslColor","","Creates a color with the hue and saturation of the source and the luminosity of the\ntarget. This preserves the gray levels of the target and is useful for coloring\nmonochrome images or tinting color images. (Since 1.10)",5,null],[13,"HslLuminosity","","Creates a color with the luminosity of the source and the hue and saturation of the\ntarget. This produces an inverse effect to `HslColor`. (Since 1.10)",5,null],[4,"PathDataType","","`PathData` is used to describe the type of one portion of a path when represented as a `Path`.\nSee `PathData` for details.",null,null],[13,"MoveTo","","A move-to operation, since 1.0",6,null],[13,"LineTo","","A line-to operation, since 1.0",6,null],[13,"CurveTo","","A curve-to operation, since 1.0",6,null],[13,"ClosePath","","A close-path operation, since 1.0",6,null],[4,"Content","","`Content` is used to describe the content that a surface will contain, whether color\ninformation, alpha information (translucence vs. opacity), or both.",null,null],[13,"Color","","The surface will hold color content only. (Since 1.0)",7,null],[13,"Alpha","","The surface will hold alpha content only. (Since 1.0)",7,null],[13,"ColorAlpha","","The surface will hold color and alpha content. (Since 1.0)",7,null],[4,"Extend","","`Extend` is used to describe how pattern color/alpha will be determined for areas\n&quot;outside&quot; the pattern&#39;s natural area, (for example, outside the surface bounds or\noutside the gradient geometry).",null,null],[13,"None","","pixels outside of the source pattern are fully transparent (Since 1.0)",8,null],[13,"Repeat","","the pattern is tiled by repeating (Since 1.0)",8,null],[13,"Reflect","","the pattern is tiled by reflecting at the edges (Since 1.0; but only implemented\nfor surface patterns since 1.6)",8,null],[13,"Pad","","pixels outside of the pattern copy the closest pixel from the source (Since 1.2;\nbut only implemented for surface patterns since 1.6)",8,null],[4,"Filter","","`Filter` is used to indicate what filtering should be applied when reading pixel values\nfrom patterns. See `Pattern::set_filter()` for indicating the desired filter to be used\nwith a particular pattern.",null,null],[13,"Fast","","A high-performance filter, with quality similar to `Nearest` (Since 1.0)",9,null],[13,"Good","","A reasonable-performance filter, with quality similar to `Bilinear` (Since 1.0)",9,null],[13,"Best","","The highest-quality available, performance may not be suitable for interactive\nuse. (Since 1.0)",9,null],[13,"Nearest","","Nearest-neighbor filtering (Since 1.0)",9,null],[13,"Bilinear","","Linear interpolation in two dimensions (Since 1.0)",9,null],[13,"Gaussian","","This filter value is currently unimplemented, and should not be used in current\ncode. (Since 1.0)",9,null],[4,"PatternType","","`PatternType` is used to describe the type of a given pattern.",null,null],[13,"Solid","","The pattern is a solid (uniform) color. It may be opaque or translucent, since 1.2.",10,null],[13,"Surface","","The pattern is a based on a surface (an image), since 1.2.",10,null],[13,"LinearGradient","","The pattern is a linear gradient, since 1.2.",10,null],[13,"RadialGradient","","The pattern is a radial gradient, since 1.2.",10,null],[13,"Mesh","","The pattern is a mesh, since 1.12.",10,null],[13,"RasterSource","","The pattern is a user pattern providing raster data, since 1.12.",10,null],[4,"FontSlant","","Specifies variants of a font face based on their slant.",null,null],[13,"Normal","","Upright font style, since 1.0",11,null],[13,"Italic","","Italic font style, since 1.0",11,null],[13,"Oblique","","Oblique font style, since 1.0",11,null],[4,"FontWeight","","Specifies variants of a font face based on their weight.",null,null],[13,"Normal","","Normal font weight, since 1.0",12,null],[13,"Bold","","Bold font weight, since 1.0",12,null],[4,"TextClusterFlags","","Specifies properties of a text cluster mapping.",null,null],[13,"None","","",13,null],[13,"Backward","","The clusters in the cluster array map to glyphs in the glyph array from end\nto start. (Since 1.8)",13,null],[4,"FontType","","`FontType` is used to describe the type of a given font face or scaled font. The\nfont types are also known as &quot;font backends&quot; within cairo.",null,null],[13,"FontTypeToy","","The font was created using cairo&#39;s toy font api (Since: 1.2)",14,null],[13,"FontTypeFt","","The font is of type FreeType (Since: 1.2)",14,null],[13,"FontTypeWin32","","The font is of type Win32 (Since: 1.2)",14,null],[13,"FontTypeQuartz","","The font is of type Quartz (Since: 1.6, in 1.2 and 1.4 it was named\nCAIRO_FONT_TYPE_ATSUI)",14,null],[13,"FontTypeUser","","The font was create using cairo&#39;s user font api (Since: 1.8)",14,null],[4,"SubpixelOrder","","The subpixel order specifies the order of color elements within each pixel on the display\ndevice when rendering with an antialiasing mode of `Antialias::Subpixel`.",null,null],[13,"Default","","Use the default subpixel order for for the target device, since 1.0",15,null],[13,"Rgb","","Subpixel elements are arranged horizontally with red at the left, since 1.0",15,null],[13,"Bgr","","Subpixel elements are arranged horizontally with blue at the left, since 1.0",15,null],[13,"Vrgb","","Subpixel elements are arranged vertically with red at the top, since 1.0",15,null],[13,"Vbgr","","Subpixel elements are arranged vertically with blue at the top, since 1.0",15,null],[4,"HintStyle","","Specifies the type of hinting to do on font outlines. Hinting is the process of fitting\noutlines to the pixel grid in order to improve the appearance of the result. Since hinting\noutlines involves distorting them, it also reduces the faithfulness to the original outline\nshapes. Not all of the outline hinting styles are supported by all font backends.",null,null],[13,"Default","","Use the default hint style for font backend and target device, since 1.0",16,null],[13,"None","","Do not hint outlines, since 1.0",16,null],[13,"Slight","","Hint outlines slightly to improve contrast while retaining good fidelity to the\noriginal shapes, since 1.0",16,null],[13,"Medium","","Hint outlines with medium strength giving a compromise between fidelity to the\noriginal shapes and contrast, since 1.0",16,null],[13,"Full","","Hint outlines to maximize contrast, since 1.0",16,null],[4,"HintMetrics","","Specifies whether to hint font metrics; hinting font metrics means quantizing them so\nthat they are integer values in device space. Doing this improves the consistency of\nletter and line spacing, however it also means that text will be laid out differently\nat different zoom factors",null,null],[13,"Default","","Hint metrics in the default manner for the font backend and target device, since 1.0",17,null],[13,"Off","","Do not hint font metrics, since 1.0",17,null],[13,"On","","Hint font metrics, since 1.0",17,null],[4,"SurfaceType","","",null,null],[13,"Image","","",18,null],[13,"Pdf","","",18,null],[13,"Ps","","",18,null],[13,"Xlib","","",18,null],[13,"Xcb","","",18,null],[13,"Glitz","","",18,null],[13,"Quartz","","",18,null],[13,"Win32","","",18,null],[13,"BeOs","","",18,null],[13,"DirectFb","","",18,null],[13,"Svg","","",18,null],[13,"Os2","","",18,null],[13,"Win32Printing","","",18,null],[13,"QuartzImage","","",18,null],[13,"Script","","",18,null],[13,"Qt","","",18,null],[13,"Recording","","",18,null],[13,"Vg","","",18,null],[13,"Gl","","",18,null],[13,"Drm","","",18,null],[13,"Tee","","",18,null],[13,"Xml","","",18,null],[13,"Skia","","",18,null],[13,"Subsurface","","",18,null],[13,"Cogl","","",18,null],[4,"Format","","",null,null],[13,"Invalid","","",19,null],[13,"ARgb32","","",19,null],[13,"Rgb24","","",19,null],[13,"A8","","",19,null],[13,"A1","","",19,null],[13,"Rgb16_565","","",19,null],[13,"Rgb30","","",19,null],[3,"Rectangle","cairo","",null,null],[12,"x","","",20,null],[12,"y","","",20,null],[12,"width","","",20,null],[12,"height","","",20,null],[3,"RectangleInt","","",null,null],[12,"x","","",21,null],[12,"y","","",21,null],[12,"width","","",21,null],[12,"height","","",21,null],[4,"Status","","Status is used to indicate errors that can occur when using Cairo. In some cases it is\nreturned directly by functions, but when using `Context`, the last error, if any, is\nstored in the context and can be retrieved with `Context::status()`.",null,null],[13,"Success","","no error has occurred (Since 1.0)",0,null],[13,"NoMemory","","out of memory (Since 1.0)",0,null],[13,"InvalidRestore","","`Context::restore()` called without matching `Context::save()` (Since 1.0)",0,null],[13,"InvalidPopGroup","","no saved group to pop, i.e. `Context::pop_group()` without matching\n`Context::push_group()` (Since 1.0)",0,null],[13,"NoCurrentPoint","","no current point defined (Since 1.0)",0,null],[13,"InvalidMatrix","","invalid matrix (not invertible) (Since 1.0)",0,null],[13,"InvalidStatus","","invalid value for an input `Status` (Since 1.0)",0,null],[13,"NullPointer","","NULL pointer (Since 1.0)",0,null],[13,"InvalidString","","input string not valid UTF-8 (Since 1.0)",0,null],[13,"InvalidPathData","","input path data not valid (Since 1.0)",0,null],[13,"ReadError","","error while reading from input stream (Since 1.0)",0,null],[13,"WriteError","","error while writing to output stream (Since 1.0)",0,null],[13,"SurfaceFinished","","target surface has been finished (Since 1.0)",0,null],[13,"SurfaceTypeMismatch","","the surface type is not appropriate for the operation (Since 1.0)",0,null],[13,"PatternTypeMismatch","","the pattern type is not appropriate for the operation (Since 1.0)",0,null],[13,"InvalidContent","","invalid value for an input `Content` (Since 1.0)",0,null],[13,"InvalidFormat","","invalid value for an input `Format` (Since 1.0)",0,null],[13,"InvalidVisual","","invalid value for an input Visual* (Since 1.0)",0,null],[13,"FileNotFound","","file not found (Since 1.0)",0,null],[13,"InvalidDash","","invalid value for a dash setting (Since 1.0)",0,null],[13,"InvalidDscComment","","invalid value for a DSC comment (Since 1.2)",0,null],[13,"InvalidIndex","","invalid index passed to getter (Since 1.4)",0,null],[13,"ClipNotRepresentable","","clip region not representable in desired format (Since 1.4)",0,null],[13,"TempFileError","","error creating or writing to a temporary file (Since 1.6)",0,null],[13,"InvalidStride","","invalid value for stride (Since 1.6)",0,null],[13,"FontTypeMismatch","","the font type is not appropriate for the operation (Since 1.8)",0,null],[13,"UserFontImmutable","","the user-font is immutable (Since 1.8)",0,null],[13,"UserFontError","","error occurred in a user-font callback function (Since 1.8)",0,null],[13,"NegativeCount","","negative number used where it is not allowed (Since 1.8)",0,null],[13,"InvalidClusters","","input clusters do not represent the accompanying text and glyph array (Since 1.8)",0,null],[13,"InvalidSlant","","invalid value for an input `FontSlant` (Since 1.8)",0,null],[13,"InvalidWeight","","invalid value for an input `FontWeight` (Since 1.8)",0,null],[13,"InvalidSize","","invalid value (typically too big) for the size of the input (surface, pattern,\netc.) (Since 1.10)",0,null],[13,"UserFontNotImplemented","","user-font method not implemented (Since 1.10)",0,null],[13,"DeviceTypeMismatch","","the device type is not appropriate for the operation (Since 1.10)",0,null],[13,"DeviceError","","an operation to the device caused an unspecified error (Since 1.10)",0,null],[13,"InvalidMeshConstruction","","a mesh pattern construction operation was used outside of a\n`Context::mesh_pattern_begin_patch()`/`Context::mesh_pattern_end_patch()`\npair (Since 1.12)",0,null],[13,"DeviceFinished","","target device has been finished (Since 1.12)",0,null],[13,"LastStatus","","this is a special value indicating the number of status values defined in this\nenumeration. When using this value, note that the version of cairo at run-time\nmay have additional status values defined than the value of this symbol at\ncompile-time. (Since 1.10)",0,null],[4,"Antialias","","Specifies the type of antialiasing to do when rendering text or shapes.",null,null],[13,"Default","","Use the default antialiasing for the subsystem and target device, since 1.0",1,null],[13,"None","","Use a bilevel alpha mask, since 1.0",1,null],[13,"Gray","","Perform single-color antialiasing (using shades of gray for black text on a white\nbackground, for example), since 1.0",1,null],[13,"Subpixel","","Perform antialiasing by taking advantage of the order of subpixel elements on devices\nsuch as LCD panels, since 1.0",1,null],[13,"Fast","","Hint that the backend should perform some antialiasing but prefer speed over quality,\nsince 1.12",1,null],[13,"Good","","The backend should balance quality against performance, since 1.12",1,null],[13,"Best","","Hint that the backend should render at the highest quality, sacrificing speed if\nnecessary, since 1.12",1,null],[4,"FillRule","","`FillRule` is used to select how paths are filled. For both fill rules, whether or not\na point is included in the fill is determined by taking a ray from that point to infinity\nand looking at intersections with the path. The ray can be in any direction, as long as\nit doesn&#39;t pass through the end point of a segment or have a tricky intersection such as\nintersecting tangent to the path. (Note that filling is not actually implemented in this\nway. This is just a description of the rule that is applied.)",null,null],[13,"Winding","","If the path crosses the ray from left-to-right, counts +1. If the path crosses the ray\nfrom right to left, counts -1. (Left and right are determined from the perspective of\nlooking along the ray from the starting point.) If the total count is non-zero, the point\nwill be filled. (Since 1.0)",2,null],[13,"EvenOdd","","Counts the total number of intersections, without regard to the orientation of the contour.\nIf the total number of intersections is odd, the point will be filled. (Since 1.0)",2,null],[4,"LineCap","","Specifies how to render the endpoints of the path when stroking.",null,null],[13,"Butt","","start(stop) the line exactly at the start(end) point (Since 1.0)",3,null],[13,"Round","","use a round ending, the center of the circle is the end point (Since 1.0)",3,null],[13,"Square","","use squared ending, the center of the square is the end point (Since 1.0)",3,null],[4,"LineJoin","","Specifies how to render the junction of two lines when stroking.",null,null],[13,"Miter","","use a sharp (angled) corner, see `Context::set_miter_limit()` (Since 1.0)",4,null],[13,"Round","","use a rounded join, the center of the circle is the joint point (Since 1.0)",4,null],[13,"nBevel","","use a cut-off join, the join is cut off at half the line width from the\njoint point (Since 1.0)",4,null],[4,"Operator","","`Operator` is used to set the compositing operator for all cairo drawing operations.",null,null],[13,"Clear","","clear destination layer (bounded) (Since 1.0)",5,null],[13,"Source","","replace destination layer (bounded) (Since 1.0)",5,null],[13,"Over","","draw source layer on top of destination layer (bounded) (Since 1.0)",5,null],[13,"In","","draw source where there was destination content (unbounded) (Since 1.0)",5,null],[13,"Out","","draw source where there was no destination content (unbounded) (Since 1.0)",5,null],[13,"Atop","","draw source on top of destination content and only there (Since 1.0)",5,null],[13,"Dest","","ignore the source (Since 1.0)",5,null],[13,"DestOver","","draw destination on top of source (Since 1.0)",5,null],[13,"DestIn","","leave destination only where there was source content (unbounded) (Since 1.0)",5,null],[13,"DestOut","","leave destination only where there was no source content (Since 1.0)",5,null],[13,"DestAtop","","leave destination on top of source content and only there (unbounded) (Since 1.0)",5,null],[13,"Xor","","source and destination are shown where there is only one of them (Since 1.0)",5,null],[13,"Add","","source and destination layers are accumulated (Since 1.0)",5,null],[13,"Saturate","","like over, but assuming source and dest are disjoint geometries (Since 1.0)",5,null],[13,"Multiply","","source and destination layers are multiplied. This causes the result to be at\nleast as dark as the darker inputs. (Since 1.10)",5,null],[13,"Screen","","source and destination are complemented and multiplied. This causes the result\nto be at least as light as the lighter inputs. (Since 1.10)",5,null],[13,"Overlay","","multiplies or screens, depending on the lightness of the destination color.\n(Since 1.10)",5,null],[13,"Darken","","replaces the destination with the source if it is darker, otherwise keeps the\nsource. (Since 1.10)",5,null],[13,"Lighten","","replaces the destination with the source if it is lighter, otherwise keeps the\nsource. (Since 1.10)",5,null],[13,"ColorDodge","","brightens the destination color to reflect the source color. (Since 1.10)",5,null],[13,"ColorBurn","","darkens the destination color to reflect the source color. (Since 1.10)",5,null],[13,"HardLight","","Multiplies or screens, dependent on source color. (Since 1.10)",5,null],[13,"SoftLight","","Darkens or lightens, dependent on source color. (Since 1.10)",5,null],[13,"Difference","","Takes the difference of the source and destination color. (Since 1.10)",5,null],[13,"Exclusion","","Produces an effect similar to difference, but with lower contrast. (Since 1.10)",5,null],[13,"HslHue","","Creates a color with the hue of the source and the saturation and luminosity of\nthe target. (Since 1.10)",5,null],[13,"HslSaturation","","Creates a color with the saturation of the source and the hue and luminosity of\nthe target. Painting with this mode onto a gray area produces no change. (Since 1.10)",5,null],[13,"HslColor","","Creates a color with the hue and saturation of the source and the luminosity of the\ntarget. This preserves the gray levels of the target and is useful for coloring\nmonochrome images or tinting color images. (Since 1.10)",5,null],[13,"HslLuminosity","","Creates a color with the luminosity of the source and the hue and saturation of the\ntarget. This produces an inverse effect to `HslColor`. (Since 1.10)",5,null],[4,"PathDataType","","`PathData` is used to describe the type of one portion of a path when represented as a `Path`.\nSee `PathData` for details.",null,null],[13,"MoveTo","","A move-to operation, since 1.0",6,null],[13,"LineTo","","A line-to operation, since 1.0",6,null],[13,"CurveTo","","A curve-to operation, since 1.0",6,null],[13,"ClosePath","","A close-path operation, since 1.0",6,null],[4,"Format","","",null,null],[13,"Invalid","","",19,null],[13,"ARgb32","","",19,null],[13,"Rgb24","","",19,null],[13,"A8","","",19,null],[13,"A1","","",19,null],[13,"Rgb16_565","","",19,null],[13,"Rgb30","","",19,null],[4,"SurfaceType","","",null,null],[13,"Image","","",18,null],[13,"Pdf","","",18,null],[13,"Ps","","",18,null],[13,"Xlib","","",18,null],[13,"Xcb","","",18,null],[13,"Glitz","","",18,null],[13,"Quartz","","",18,null],[13,"Win32","","",18,null],[13,"BeOs","","",18,null],[13,"DirectFb","","",18,null],[13,"Svg","","",18,null],[13,"Os2","","",18,null],[13,"Win32Printing","","",18,null],[13,"QuartzImage","","",18,null],[13,"Script","","",18,null],[13,"Qt","","",18,null],[13,"Recording","","",18,null],[13,"Vg","","",18,null],[13,"Gl","","",18,null],[13,"Drm","","",18,null],[13,"Tee","","",18,null],[13,"Xml","","",18,null],[13,"Skia","","",18,null],[13,"Subsurface","","",18,null],[13,"Cogl","","",18,null],[3,"Glyph","","",null,null],[12,"index","","",23,null],[12,"x","","",23,null],[12,"y","","",23,null],[3,"FontExtents","","",null,null],[12,"ascent","","",22,null],[12,"descent","","",22,null],[12,"height","","",22,null],[12,"max_x_advance","","",22,null],[12,"max_y_advance","","",22,null],[3,"TextExtents","","",null,null],[12,"x_bearing","","",25,null],[12,"y_bearing","","",25,null],[12,"width","","",25,null],[12,"height","","",25,null],[12,"x_advance","","",25,null],[12,"y_advance","","",25,null],[3,"TextCluster","","",null,null],[12,"num_bytes","","",24,null],[12,"num_glyphs","","",24,null],[3,"Matrix","","",null,null],[12,"xx","","",26,null],[12,"yx","","",26,null],[12,"xy","","",26,null],[12,"yy","","",26,null],[12,"x0","","",26,null],[12,"y0","","",26,null],[3,"Context","","",null,null],[3,"RectangleVec","","",null,null],[12,"rectangles","","",29,null],[3,"Path","","Paths are the most basic drawing tools and are primarily used to implicitly generate simple masks.",null,null],[3,"PathSegments","","",null,null],[3,"LinearGradient","","",null,null],[3,"RadialGradient","","",null,null],[3,"SolidPattern","","",null,null],[3,"SurfacePattern","","",null,null],[3,"Mesh","","",null,null],[3,"FontFace","","FontFace represents a particular font at a particular weight, slant, and other\ncharacteristic but no size, transformation, or size.",null,null],[3,"ScaledFont","","ScaledFont represents a realization of a font face at a particular size and\ntransformation and a certain set of font options.",null,null],[3,"FontOptions","","",null,null],[3,"ImageSurface","","",null,null],[3,"Surface","","",null,null],[4,"PathSegment","","",null,null],[13,"MoveTo","","",30,null],[13,"LineTo","","",30,null],[13,"CurveTo","","",30,null],[13,"ClosePath","","",30,null],[4,"IoError","","",null,null],[13,"Cairo","","",31,null],[13,"Io","","",31,null],[4,"MeshCorner","","",null,null],[13,"MeshCorner0","","",32,null],[13,"MeshCorner1","","",32,null],[13,"MeshCorner2","","",32,null],[13,"MeshCorner3","","",32,null],[0,"prelude","","",null,null],[8,"MatrixTrait","cairo::prelude","",null,null],[10,"null","","",33,{"inputs":[],"output":{"name":"matrix"}}],[10,"new","","",33,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[10,"multiply","","",33,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[10,"identity","","",33,{"inputs":[],"output":{"name":"matrix"}}],[10,"init","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"translate","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"scale","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rotate","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"}],"output":null}],[10,"invert","","",33,{"inputs":[{"name":"matrixtrait"}],"output":null}],[10,"transform_distance","","",33,null],[10,"transform_point","","",33,null],[8,"Gradient","","",null,null],[11,"add_color_stop_rgb","","Adds an opaque color stop to a gradient pattern. The offset specifies the\nlocation along the gradient&#39;s control vector. For example, a linear gradient&#39;s\ncontrol vector is from (x0,y0) to (x1,y1) while a radial gradient&#39;s control\nvector is from any point on the start circle to the corresponding point on the\nend circle.",34,{"inputs":[{"name":"gradient"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"add_color_stop_rgba","","Adds a translucent color stop to a gradient pattern. The offset specifies the\nlocation along the gradient&#39;s control vector. For example, a linear gradient&#39;s\ncontrol vector is from (x0,y0) to (x1,y1) while a radial gradient&#39;s control vector\nis from any point on the start circle to the corresponding point on the end circle.",34,{"inputs":[{"name":"gradient"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_color_stop_count","","Gets the number of color stops specified in the given gradient pattern.",34,{"inputs":[{"name":"gradient"}],"output":{"name":"isize"}}],[11,"get_color_stop_rgba","","Gets the color and offset information at the given index for a gradient pattern.\nValues of index range from 0 to n-1 where n is the number returned by\nPattern::get_color_stop_count().",34,null],[8,"Pattern","","",null,null],[11,"ensure_status","","",35,{"inputs":[{"name":"pattern"}],"output":null}],[11,"status","","Checks whether an error has previously occurred for this pattern.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"status"}}],[11,"get_reference_count","","Returns the current reference count of self.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"isize"}}],[11,"set_extend","","Sets the mode to be used for drawing outside the area of a pattern. See cairo_extend_t for\ndetails on the semantics of each extend strategy.",35,{"inputs":[{"name":"pattern"},{"name":"extend"}],"output":null}],[11,"get_extend","","Gets the current extend mode for a pattern. See Extend enum for details on the semantics\nof each extend strategy.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"extend"}}],[11,"set_filter","","Sets the filter to be used for resizing when using this pattern. See Filter enum for\ndetails on each filter.",35,{"inputs":[{"name":"pattern"},{"name":"filter"}],"output":null}],[11,"get_filter","","Gets the current filter for a pattern. See Filter enum for details on each filter.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"filter"}}],[8,"SurfaceExt","","",null,null],[10,"flush","","",36,{"inputs":[{"name":"surfaceext"}],"output":null}],[10,"finish","","",36,{"inputs":[{"name":"surfaceext"}],"output":null}],[10,"get_type","","",36,{"inputs":[{"name":"surfaceext"}],"output":{"name":"surfacetype"}}],[11,"new","cairo","Allocates a new font options object with all options initialized to default values.",37,{"inputs":[],"output":{"name":"fontoptions"}}],[11,"ensure_status","","Checks whether an error has previously occurred for this font options object.",37,{"inputs":[{"name":"fontoptions"}],"output":null}],[11,"merge","","Merges non-default options from other into self, replacing existing values.\nThis operation can be thought of as somewhat similar to compositing other onto\nself with the operation of Operator::Over.",37,{"inputs":[{"name":"fontoptions"},{"name":"fontoptions"}],"output":null}],[11,"hash","","Compute a hash for the font options object; this value will be useful when\nstoring an object containing a FontOptions in a hash table.",37,{"inputs":[{"name":"fontoptions"}],"output":{"name":"u64"}}],[11,"set_antialias","","Sets the antialiasing mode for the font options object. This specifies the type\nof antialiasing to do when rendering text.",37,{"inputs":[{"name":"fontoptions"},{"name":"antialias"}],"output":null}],[11,"get_antialias","","Gets the antialiasing mode for the font options object.",37,{"inputs":[{"name":"fontoptions"}],"output":{"name":"antialias"}}],[11,"set_subpixel_order","","Sets the subpixel order for the font options object. The subpixel order specifies\nthe order of color elements within each pixel on the display device when rendering\nwith an antialiasing mode of Antialias::Subpixel. See the documentation for\nSubpixelOrder for full details.",37,{"inputs":[{"name":"fontoptions"},{"name":"subpixelorder"}],"output":null}],[11,"get_subpixel_order","","Gets the subpixel order for the font options object. See the documentation for\nSubpixelOrder for full details.",37,{"inputs":[{"name":"fontoptions"}],"output":{"name":"subpixelorder"}}],[11,"set_hint_style","","Sets the hint style for font outlines for the font options object. This controls\nwhether to fit font outlines to the pixel grid, and if so, whether to optimize\nfor fidelity or contrast. See the documentation for HintStyle for full\ndetails.",37,{"inputs":[{"name":"fontoptions"},{"name":"hintstyle"}],"output":null}],[11,"get_hint_style","","Gets the hint style for font outlines for the font options object. See the\ndocumentation for HintStyle for full details.",37,{"inputs":[{"name":"fontoptions"}],"output":{"name":"hintstyle"}}],[11,"set_hint_metrics","","Sets the metrics hinting mode for the font options object. This controls\nwhether metrics are quantized to integer values in device units. See the\ndocumentation for HintMetrics for full details.",37,{"inputs":[{"name":"fontoptions"},{"name":"hintmetrics"}],"output":null}],[11,"get_hint_metrics","","Gets the metrics hinting mode for the font options object. See the documentation\nfor HintMetrics for full details.",37,{"inputs":[{"name":"fontoptions"}],"output":{"name":"hintmetrics"}}],[11,"eq","","",37,{"inputs":[{"name":"fontoptions"},{"name":"fontoptions"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"fontoptions"}],"output":{"name":"fontoptions"}}],[11,"drop","","",37,{"inputs":[{"name":"fontoptions"}],"output":null}],[11,"toy_create","","Creates a font face from a triplet of family, slant, and weight. These font faces\nare used in implementation of the the cairo &quot;toy&quot; font API.",38,{"inputs":[{"name":"str"},{"name":"fontslant"},{"name":"fontweight"}],"output":{"name":"fontface"}}],[11,"toy_get_family","","Gets the familly name of a toy font.",38,{"inputs":[{"name":"fontface"}],"output":{"name":"option"}}],[11,"toy_get_slant","","Gets the slant a toy font.",38,{"inputs":[{"name":"fontface"}],"output":{"name":"fontslant"}}],[11,"toy_get_weight","","Gets the weight a toy font.",38,{"inputs":[{"name":"fontface"}],"output":{"name":"fontweight"}}],[11,"ensure_status","","Checks whether an error has previously occurred for this font face.",38,{"inputs":[{"name":"fontface"}],"output":null}],[11,"get_type","","This function returns the type of the backend used to create a font face. See\nFontType for available types.",38,{"inputs":[{"name":"fontface"}],"output":{"name":"fonttype"}}],[11,"get_reference_count","","Returns the current reference count of self.",38,{"inputs":[{"name":"fontface"}],"output":{"name":"usize"}}],[11,"reference","","Increases the reference count on self by one. This prevents self from being\ndestroyed until a matching call to FontFace drop trait is made.",38,{"inputs":[{"name":"fontface"}],"output":{"name":"fontface"}}],[11,"drop","","",38,{"inputs":[{"name":"fontface"}],"output":null}],[11,"new","","Creates a ScaledFont object from a font face and matrices that describe the\nsize of the font and the environment in which it will be used.",39,{"inputs":[{"name":"fontface"},{"name":"matrix"},{"name":"matrix"},{"name":"fontoptions"}],"output":{"name":"scaledfont"}}],[11,"ensure_status","","Checks whether an error has previously occurred for this ScaledFont.",39,{"inputs":[{"name":"scaledfont"}],"output":null}],[11,"get_type","","This function returns the type of the backend used to create a scaled font.\nSee FontType for available types. However, this function never returns\nFontType::Toy.",39,{"inputs":[{"name":"scaledfont"}],"output":{"name":"fonttype"}}],[11,"get_reference_count","","Returns the current reference count of self.",39,{"inputs":[{"name":"scaledfont"}],"output":{"name":"usize"}}],[11,"reference","","Increases the reference count on self by one. This prevents self from being\ndestroyed until a matching call to ScaledFont drop trait is made.",39,{"inputs":[{"name":"scaledfont"}],"output":{"name":"scaledfont"}}],[11,"drop","","",39,{"inputs":[{"name":"scaledfont"}],"output":null}],[11,"drop","","",29,{"inputs":[{"name":"rectanglevec"}],"output":null}],[11,"from_glib_none","","",40,null],[11,"from_glib_full","","",40,null],[11,"as_ref","","",40,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"clone","","",40,{"inputs":[{"name":"context"}],"output":{"name":"context"}}],[11,"drop","","",40,{"inputs":[{"name":"context"}],"output":null}],[11,"ensure_status","","",40,{"inputs":[{"name":"context"}],"output":null}],[11,"new","","Creates a new Context with all graphics state parameters set to default values\nand with target as a target surface. The target surface should be constructed\nwith a backend-specific function such as cairo_image_surface_create() (or any other\nContext::backend_surface_create() variant).",40,{"inputs":[{"name":"t"}],"output":{"name":"context"}}],[11,"status","","Checks whether an error has previously occurred for this context.",40,{"inputs":[{"name":"context"}],"output":{"name":"status"}}],[11,"save","","Makes a copy of the current state of self and saves it on an internal stack of\nsaved states for self. When Context::restore() is called, self will be restored to\nthe saved state. Multiple calls to Context::save() and Context::restore() can be nested;\neach call to Context::restore() restores the state from the matching paired\nContext::save().",40,{"inputs":[{"name":"context"}],"output":null}],[11,"restore","","Restores self to the state saved by a preceding call to Context::save() and removes\nthat state from the stack of saved states.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"push_group","","Temporarily redirects drawing to an intermediate surface known as a group. The\nredirection lasts until the group is completed by a call to Context::pop_group()\nor Context::pop_group_to_source(). These calls provide the result of any drawing\nto the group as a pattern, (either as an explicit object, or set as the source\npattern).",40,{"inputs":[{"name":"context"}],"output":null}],[11,"pop_group","","Terminates the redirection begun by a call to Context::push_group() or\nContext::push_group_with_content() and returns a new pattern containing the results\nof all drawing operations performed to the group.",40,{"inputs":[{"name":"context"}],"output":{"name":"box"}}],[11,"pop_group_to_source","","Terminates the redirection begun by a call to Context::push_group() or\nContext::push_group_with_content() and installs the resulting pattern as the\nsource pattern in the given cairo context.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"set_source_rgb","","Sets the source pattern within self to an opaque color. This opaque color will then be\nused for any subsequent drawing operation until a new source pattern is set.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_source_rgba","","Sets the source pattern within self to a translucent color. This color will then be used\nfor any subsequent drawing operation until a new source pattern is set.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_source","","Sets the source pattern within self to source. This pattern will then be used for any\nsubsequent drawing operation until a new source pattern is set.",40,{"inputs":[{"name":"context"},{"name":"pattern"}],"output":null}],[11,"get_source","","Gets the current source pattern for self.",40,{"inputs":[{"name":"context"}],"output":{"name":"box"}}],[11,"set_source_surface","","",40,{"inputs":[{"name":"context"},{"name":"t"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_antialias","","Set the antialiasing mode of the rasterizer used for drawing shapes. This value\nis a hint, and a particular backend may or may not support a particular value.\nAt the current time, no backend supports CAIRO_ANTIALIAS_SUBPIXEL when drawing\nshapes.",40,{"inputs":[{"name":"context"},{"name":"antialias"}],"output":null}],[11,"get_antialias","","Gets the current shape antialiasing mode, as set by Context::set_antialias().",40,{"inputs":[{"name":"context"}],"output":{"name":"antialias"}}],[11,"set_dash","","Sets the dash pattern to be used by cairo_stroke(). A dash pattern is specified by dashes,\nan array of positive values. Each value provides the length of alternate &quot;on&quot; and &quot;off&quot;\nportions of the stroke. The offset specifies an offset into the pattern at which the\nstroke begins.",40,null],[11,"get_dash_count","","This function returns the length of the dash array in self (0 if dashing is not\ncurrently in effect).",40,{"inputs":[{"name":"context"}],"output":{"name":"i32"}}],[11,"get_dash","","Gets the current dash array. If not NULL, dashes should be big enough to hold at\nleast the number of values returned by Context::get_dash_count().",40,null],[11,"get_dash_dashes","","",40,{"inputs":[{"name":"context"}],"output":{"name":"vec"}}],[11,"get_dash_offset","","",40,{"inputs":[{"name":"context"}],"output":{"name":"f64"}}],[11,"set_fill_rule","","Set the current fill rule within the cairo context. The fill rule is used to determine\nwhich regions are inside or outside a complex (potentially self-intersecting) path.\nThe current fill rule affects both Context::fill() and Context::clip(). See FillRule\nenum for details on the semantics of each available fill rule.",40,{"inputs":[{"name":"context"},{"name":"fillrule"}],"output":null}],[11,"get_fill_rule","","Gets the current fill rule, as set by Context::set_fill_rule().",40,{"inputs":[{"name":"context"}],"output":{"name":"fillrule"}}],[11,"set_line_cap","","Sets the current line cap style within the cairo context. See LineCap enum\nfor details about how the available line cap styles are drawn.",40,{"inputs":[{"name":"context"},{"name":"linecap"}],"output":null}],[11,"get_line_cap","","Gets the current line cap style, as set by Context::set_line_cap().",40,{"inputs":[{"name":"context"}],"output":{"name":"linecap"}}],[11,"set_line_join","","Sets the current line join style within the cairo context. See LineJoin enum\nfor details about how the available line join styles are drawn.",40,{"inputs":[{"name":"context"},{"name":"linejoin"}],"output":null}],[11,"get_line_join","","Gets the current line join style, as set by Context::set_line_join().",40,{"inputs":[{"name":"context"}],"output":{"name":"linejoin"}}],[11,"set_line_width","","Sets the current line width within the cairo context. The line width value specifies\nthe diameter of a pen that is circular in user space, (though device-space pen may be\nan ellipse in general due to scaling/shear/rotation of the CTM).",40,{"inputs":[{"name":"context"},{"name":"f64"}],"output":null}],[11,"get_line_width","","This function returns the current line width value exactly as set by\nContext::set_line_width(). Note that the value is unchanged even if the CTM has changed\nbetween the calls to Context::set_line_width() and Context::get_line_width().",40,{"inputs":[{"name":"context"}],"output":{"name":"f64"}}],[11,"set_miter_limit","","Sets the current miter limit within the cairo context.",40,{"inputs":[{"name":"context"},{"name":"f64"}],"output":null}],[11,"get_miter_limit","","Gets the current miter limit, as set by Contextset_miter_limit().",40,{"inputs":[{"name":"context"}],"output":{"name":"f64"}}],[11,"set_operator","","",40,{"inputs":[{"name":"context"},{"name":"operator"}],"output":null}],[11,"get_operator","","",40,{"inputs":[{"name":"context"}],"output":{"name":"operator"}}],[11,"set_tolerance","","Sets the tolerance used when converting paths into trapezoids. Curved segments of\nthe path will be subdivided until the maximum deviation between the original path\nand the polygonal approximation is less than tolerance . The default value is 0.1.\nA larger value will give better performance, a smaller value, better appearance.\n(Reducing the value from the default value of 0.1 is unlikely to improve appearance\nsignificantly.) The accuracy of paths within Cairo is limited by the precision of\nits internal arithmetic, and the prescribed tolerance is restricted to the smallest\nrepresentable internal value.",40,{"inputs":[{"name":"context"},{"name":"f64"}],"output":null}],[11,"get_tolerance","","Gets the current tolerance value, as set by Context::set_tolerance().",40,{"inputs":[{"name":"context"}],"output":{"name":"f64"}}],[11,"clip","","Establishes a new clip region by intersecting the current clip region with the current\npath as it would be filled by Context::fill() and according to the current fill rule\n(see Context::set_fill_rule()).",40,{"inputs":[{"name":"context"}],"output":null}],[11,"clip_preserve","","Establishes a new clip region by intersecting the current clip region with the current\npath as it would be filled by Context::fill() and according to the current fill rule\n(see Context::set_fill_rule()).",40,{"inputs":[{"name":"context"}],"output":null}],[11,"clip_extents","","Computes a bounding box in user coordinates covering the area inside the current clip.",40,null],[11,"in_clip","","Tests whether the given point is inside the area that would be visible through the current\nclip, i.e. the area that would be filled by a Context::paint() operation.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"reset_clip","","Reset the current clip region to its original, unrestricted state. That is, set the clip\nregion to an infinitely large shape containing the target surface. Equivalently, if\ninfinity is too hard to grasp, one can imagine the clip region being reset to the exact\nbounds of the target surface.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"copy_clip_rectangle_list","","Gets the current clip region as a list of rectangles in user coordinates.",40,{"inputs":[{"name":"context"}],"output":{"name":"rectanglevec"}}],[11,"fill","","A drawing operator that fills the current path according to the current fill\nrule, (each sub-path is implicitly closed before being filled). After\nContext::fill(), the current path will be cleared from the cairo context. See\nContext::set_fill_rule() and Context::fill_preserve().",40,{"inputs":[{"name":"context"}],"output":null}],[11,"fill_preserve","","A drawing operator that fills the current path according to the current fill rule,\n(each sub-path is implicitly closed before being filled). Unlike Context::fill(),\nContext::fill_preserve() preserves the path within the cairo context.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"fill_extents","","Computes a bounding box in user coordinates covering the area that would be affected,\n(the &quot;inked&quot; area), by a Context::fill() operation given the current path and fill\nparameters. If the current path is empty, returns an empty rectangle ((0,0), (0,0)).\nSurface dimensions and clipping are not taken into account.",40,null],[11,"in_fill","","Tests whether the given point is inside the area that would be affected by a\nContext::fill() operation given the current path and filling parameters. Surface\ndimensions and clipping are not taken into account.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"mask","","A drawing operator that paints the current source using the alpha channel of\npattern as a mask. (Opaque areas of pattern are painted with the source, transparent\nareas are not painted.)",40,{"inputs":[{"name":"context"},{"name":"pattern"}],"output":null}],[11,"paint","","A drawing operator that paints the current source everywhere within the current clip region.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"paint_with_alpha","","A drawing operator that paints the current source everywhere within the current clip region\nusing a mask of constant alpha value alpha . The effect is similar to Context::paint(), but\nthe drawing is faded out using the alpha value.",40,{"inputs":[{"name":"context"},{"name":"f64"}],"output":null}],[11,"stroke","","A drawing operator that strokes the current path according to the current line width, line\njoin, line cap, and dash settings. After Context::stroke(), the current path will be cleared\nfrom the cairo context. See Context::set_line_width(), Context::set_line_join(),\nContext::set_line_cap(), Context::set_dash(), and Context::stroke_preserve().",40,{"inputs":[{"name":"context"}],"output":null}],[11,"stroke_preserve","","A drawing operator that strokes the current path according to the current line width, line\njoin, line cap, and dash settings. Unlike Context::stroke(), Context::stroke_preserve()\npreserves the path within the cairo context.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"stroke_extents","","Computes a bounding box in user coordinates covering the area that would be affected,\n(the &quot;inked&quot; area), by a Context::stroke() operation given the current path and stroke\nparameters. If the current path is empty, returns an empty rectangle ((0,0), (0,0)).\nSurface dimensions and clipping are not taken into account.",40,null],[11,"in_stroke","","Tests whether the given point is inside the area that would be affected by a\nContext::stroke() operation given the current path and stroking parameters. Surface\ndimensions and clipping are not taken into account.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":{"name":"bool"}}],[11,"copy_page","","Emits the current page for backends that support multiple pages, but doesn&#39;t clear\nit, so, the contents of the current page will be retained for the next page too. Use\nContext::show_page() if you want to get an empty page after the emission.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"show_page","","Emits and clears the current page for backends that support multiple pages. Use\nContext::copy_page() if you don&#39;t want to clear the page.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"get_reference_count","","Returns the current reference count of self.",40,{"inputs":[{"name":"context"}],"output":{"name":"u32"}}],[11,"translate","","Modifies the current transformation matrix (CTM) by translating the user-space\norigin by (tx , ty ). This offset is interpreted as a user-space coordinate\naccording to the CTM in place before the new call to cairo_translate(). In other\nwords, the translation of the user-space origin takes place after any existing\ntransformation.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"scale","","Modifies the current transformation matrix (CTM) by scaling the X and Y user-space\naxes by sx and sy respectively. The scaling of the axes takes place after any\nexisting transformation of user space.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotate","","Modifies the current transformation matrix (CTM) by rotating the user-space axes by\nangle radians. The rotation of the axes takes places after any existing transformation\nof user space. The rotation direction for positive angles is from the positive X axis\ntoward the positive Y axis.",40,{"inputs":[{"name":"context"},{"name":"f64"}],"output":null}],[11,"identity_matrix","","Resets the current transformation matrix (CTM) by setting it equal to the identity\nmatrix. That is, the user-space and device-space axes will be aligned and one user-space\nunit will transform to one device-space unit.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"user_to_device","","Transform a coordinate from user space to device space by multiplying the given point\nby the current transformation matrix (CTM).",40,null],[11,"user_to_device_distance","","Transform a distance vector from user space to device space. This function is similar\nto Context::user_to_device() except that the translation components of the CTM will\nbe ignored when transforming (dx ,dy ).",40,null],[11,"device_to_user","","Transform a coordinate from device space to user space by multiplying the given point\nby the inverse of the current transformation matrix (CTM).",40,null],[11,"device_to_user_distance","","Transform a distance vector from device space to user space. This function is similar\nto Context::device_to_user() except that the translation components of the inverse CTM\nwill be ignored when transforming (dx ,dy ).",40,null],[11,"select_font_face","","Note: The Context::select_font_face() function call is part of what the cairo designers\ncall the &quot;toy&quot; text API. It is convenient for short demos and simple programs, but it\nis not expected to be adequate for serious text-using applications.",40,{"inputs":[{"name":"context"},{"name":"str"},{"name":"fontslant"},{"name":"fontweight"}],"output":null}],[11,"set_font_size","","Sets the current font matrix to a scale by a factor of size , replacing any font matrix\npreviously set with Context::set_font_size() or Context::set_font_matrix(). This results\nin a font size of size user space units. (More precisely, this matrix will result in the\nfont&#39;s em-square being a size by size square in user space.)",40,{"inputs":[{"name":"context"},{"name":"f64"}],"output":null}],[11,"set_font_matrix","","",40,{"inputs":[{"name":"context"},{"name":"matrix"}],"output":null}],[11,"get_font_matrix","","Stores the current font matrix into matrix . See Context::set_font_matrix().",40,{"inputs":[{"name":"context"}],"output":{"name":"matrix"}}],[11,"set_font_options","","Sets a set of custom font rendering options for the Context. Rendering options are\nderived by merging these options with the options derived from underlying surface;\nif the value in options has a default value (like Antialias::Default), then the value\nfrom the surface is used.",40,{"inputs":[{"name":"context"},{"name":"fontoptions"}],"output":null}],[11,"get_font_options","","Retrieves font rendering options set via Context::set_font_options. Note that the returned\noptions do not include any options derived from the underlying surface; they are literally\nthe options passed to Context::set_font_options().",40,{"inputs":[{"name":"context"}],"output":{"name":"fontoptions"}}],[11,"set_font_face","","Replaces the current FontFace object in the Context with font_face. The replaced\nfont face in the cairo_t will be destroyed if there are no other references to it.",40,{"inputs":[{"name":"context"},{"name":"fontface"}],"output":null}],[11,"get_font_face","","Gets the current font face for a Context object.",40,{"inputs":[{"name":"context"}],"output":{"name":"fontface"}}],[11,"set_scaled_font","","Replaces the current font face, font matrix, and font options in the Context with\nthose of the ScaledFont object. Except for some translation, the current CTM of the\nContext should be the same as that of the ScaledFont object, which can be accessed\nusing Context::scaled_font_get_ctm().",40,{"inputs":[{"name":"context"},{"name":"scaledfont"}],"output":null}],[11,"get_scaled_font","","Gets the current scaled font for a Context.",40,{"inputs":[{"name":"context"}],"output":{"name":"scaledfont"}}],[11,"show_text","","A drawing operator that generates the shape from a string of UTF-8 characters,\nrendered according to the current FontFace, FontSize (FontMatrix), and\nfont_options.",40,{"inputs":[{"name":"context"},{"name":"str"}],"output":null}],[11,"show_glyphs","","",40,null],[11,"show_text_glyphs","","A drawing operator that generates the shape from an array of glyphs, rendered\naccording to the current font face, font size (font matrix), and font options.",40,null],[11,"font_extents","","Gets the font extents for the currently selected font.",40,{"inputs":[{"name":"context"}],"output":{"name":"fontextents"}}],[11,"text_extents","","Gets the extents for a string of text. The extents describe a user-space rectangle\nthat encloses the &quot;inked&quot; portion of the text, (as it would be drawn by\nContext::show_text()). Additionally, the x_advance and y_advance values indicate\nthe amount by which the current point would be advanced by Context::show_text().",40,{"inputs":[{"name":"context"},{"name":"str"}],"output":{"name":"textextents"}}],[11,"glyph_extents","","Gets the extents for an array of glyphs. The extents describe a user-space rectangle\nthat encloses the &quot;inked&quot; portion of the glyphs, (as they would be drawn by\nContext::show_glyphs()). Additionally, the x_advance and y_advance values indicate\nthe amount by which the current point would be advanced by Context::show_glyphs().",40,null],[11,"copy_path","","Creates a copy of the current path and returns it to the user as a Path. See\nPathData for hints on how to iterate over the returned data structure.",40,{"inputs":[{"name":"context"}],"output":{"name":"path"}}],[11,"copy_path_flat","","Gets a flattened copy of the current path and returns it to the user as a Path.\nSee PathData for hints on how to iterate over the returned data structure.",40,{"inputs":[{"name":"context"}],"output":{"name":"path"}}],[11,"append_path","","Append the path onto the current path. The path may be either the return value\nfrom one of Context::copy_path() or Context::copy_path_flat() or it may be\nconstructed manually. See Path for details on how the path data structure should\nbe initialized, and note that path.status must be initialized to Status::Success.",40,{"inputs":[{"name":"context"},{"name":"path"}],"output":null}],[11,"has_current_point","","Returns whether a current point is defined on the current path. See\nContext::get_current_point() for details on the current point.",40,{"inputs":[{"name":"context"}],"output":{"name":"bool"}}],[11,"get_current_point","","Gets the current point of the current path, which is conceptually the final\npoint reached by the path so far.",40,null],[11,"new_path","","Clears the current path. After this call there will be no path and no current point.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"new_sub_path","","Begin a new sub-path. Note that the existing path is not affected. After this call\nthere will be no current point.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"close_path","","Adds a line segment to the path from the current point to the beginning of\nthe current sub-path, (the most recent point passed to cairo_move_to()), and\ncloses this sub-path. After this call the current point will be at the joined\nendpoint of the sub-path.",40,{"inputs":[{"name":"context"}],"output":null}],[11,"arc","","Adds a circular arc of the given radius to the current path. The arc is centered\nat (xc , yc ), begins at angle1 and proceeds in the direction of increasing\nangles to end at angle2 . If angle2 is less than angle1 it will be progressively\nincreased by 2*M_PI until it is greater than angle1 .",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"arc_negative","","Adds a circular arc of the given radius to the current path. The arc is centered\nat (xc , yc ), begins at angle1 and proceeds in the direction of decreasing\nangles to end at angle2 . If angle2 is greater than angle1 it will be\nprogressively decreased by 2*M_PI until it is less than angle1.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"curve_to","","Adds a cubic Bézier spline to the path from the current point to position\n(x3 , y3 ) in user-space coordinates, using (x1 , y1 ) and (x2 , y2 ) as the\ncontrol points. After this call the current point will be (x3 , y3 ).",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"line_to","","Adds a line to the path from the current point to position (x , y ) in user-space\ncoordinates. After this call the current point will be (x , y ).",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"move_to","","Begin a new sub-path. After this call the current point will be (x , y ).",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rectangle","","Adds a closed sub-path rectangle of the given size to the current path at\nposition (x , y ) in user-space coordinates.",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"text_path","","Adds closed paths for the glyphs to the current path. The generated path if\nfilled, achieves an effect similar to that of Context::show_glyphs().",40,{"inputs":[{"name":"context"},{"name":"str"}],"output":null}],[11,"rel_curve_to","","Relative-coordinate version of Context::curve_to(). All offsets are relative to\nthe current point. Adds a cubic Bézier spline to the path from the current point\nto a point offset from the current point by (dx3 , dy3 ), using points offset by\n(dx1 , dy1 ) and (dx2 , dy2 ) as the control points. After this call the current\npoint will be offset by (dx3 , dy3 ).",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rel_line_to","","Relative-coordinate version of Context::line_to(). Adds a line to the path from\nthe current point to a point that is offset from the current point by (dx , dy )\nin user space. After this call the current point will be offset by (dx , dy ).",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rel_move_to","","Begin a new sub-path. After this call the current point will offset by (x , y ).",40,{"inputs":[{"name":"context"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"fmt","","",31,{"inputs":[{"name":"ioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",41,{"inputs":[{"name":"imagesurface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",41,{"inputs":[{"name":"surface"}],"output":{"name":"result"}}],[11,"create","","",41,{"inputs":[{"name":"format"},{"name":"i32"},{"name":"i32"}],"output":{"name":"imagesurface"}}],[11,"create_for_data","","",41,{"inputs":[{"name":"box"},{"name":"f"},{"name":"format"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"imagesurface"}}],[11,"get_data","","",41,null],[11,"get_data_unsafe","","",41,null],[11,"get_format","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"format"}}],[11,"get_height","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"i32"}}],[11,"get_stride","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"i32"}}],[11,"get_width","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"i32"}}],[11,"len","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"usize"}}],[11,"to_glib_none","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",41,null],[11,"from_glib_full","","",41,null],[11,"as_ref","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"surface"}}],[11,"clone","","",41,{"inputs":[{"name":"imagesurface"}],"output":{"name":"imagesurface"}}],[11,"ensure_status","","",42,{"inputs":[{"name":"path"}],"output":null}],[11,"iter","","",42,{"inputs":[{"name":"path"}],"output":{"name":"pathsegments"}}],[11,"drop","","",42,{"inputs":[{"name":"path"}],"output":null}],[11,"clone","","",30,{"inputs":[{"name":"pathsegment"}],"output":{"name":"pathsegment"}}],[11,"fmt","","",30,{"inputs":[{"name":"pathsegment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",43,{"inputs":[{"name":"pathsegments"}],"output":{"name":"option"}}],[11,"ensure_status","cairo::patterns","",35,{"inputs":[{"name":"pattern"}],"output":null}],[11,"status","","Checks whether an error has previously occurred for this pattern.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"status"}}],[11,"get_reference_count","","Returns the current reference count of self.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"isize"}}],[11,"set_extend","","Sets the mode to be used for drawing outside the area of a pattern. See cairo_extend_t for\ndetails on the semantics of each extend strategy.",35,{"inputs":[{"name":"pattern"},{"name":"extend"}],"output":null}],[11,"get_extend","","Gets the current extend mode for a pattern. See Extend enum for details on the semantics\nof each extend strategy.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"extend"}}],[11,"set_filter","","Sets the filter to be used for resizing when using this pattern. See Filter enum for\ndetails on each filter.",35,{"inputs":[{"name":"pattern"},{"name":"filter"}],"output":null}],[11,"get_filter","","Gets the current filter for a pattern. See Filter enum for details on each filter.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"filter"}}],[11,"add_color_stop_rgb","","Adds an opaque color stop to a gradient pattern. The offset specifies the\nlocation along the gradient&#39;s control vector. For example, a linear gradient&#39;s\ncontrol vector is from (x0,y0) to (x1,y1) while a radial gradient&#39;s control\nvector is from any point on the start circle to the corresponding point on the\nend circle.",34,{"inputs":[{"name":"gradient"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"add_color_stop_rgba","","Adds a translucent color stop to a gradient pattern. The offset specifies the\nlocation along the gradient&#39;s control vector. For example, a linear gradient&#39;s\ncontrol vector is from (x0,y0) to (x1,y1) while a radial gradient&#39;s control vector\nis from any point on the start circle to the corresponding point on the end circle.",34,{"inputs":[{"name":"gradient"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_color_stop_count","","Gets the number of color stops specified in the given gradient pattern.",34,{"inputs":[{"name":"gradient"}],"output":{"name":"isize"}}],[11,"get_color_stop_rgba","","Gets the color and offset information at the given index for a gradient pattern.\nValues of index range from 0 to n-1 where n is the number returned by\nPattern::get_color_stop_count().",34,null],[11,"wrap","cairo","",44,null],[11,"reference","","",44,{"inputs":[{"name":"solidpattern"}],"output":{"name":"solidpattern"}}],[11,"get_ptr","","",44,null],[11,"drop","","",44,{"inputs":[{"name":"solidpattern"}],"output":null}],[11,"from_rgb","","Creates a new SolidPattern corresponding to an opaque color. The color components\nare floating point numbers in the range 0 to 1.",44,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"solidpattern"}}],[11,"from_rgba","","Creates a new SolidPattern corresponding to a translucent color. The color components\nare floating point numbers in the range 0 to",44,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"solidpattern"}}],[11,"get_rgba","","Gets the solid color for a solid color pattern.",44,null],[11,"wrap","","",45,null],[11,"reference","","",45,{"inputs":[{"name":"lineargradient"}],"output":{"name":"lineargradient"}}],[11,"get_ptr","","",45,null],[11,"drop","","",45,{"inputs":[{"name":"lineargradient"}],"output":null}],[11,"new","","Create a new linear gradient Pattern object along the line defined by\n(x0, y0) and (x1, y1). Before using the gradient pattern, a number of color\nstops should be defined using Pattern::add_color_stop_rgb() or\nPattern::add_color_stop_rgba().",45,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"lineargradient"}}],[11,"get_linear_points","","Gets the gradient endpoints for a linear gradient.",45,null],[11,"wrap","","",46,null],[11,"reference","","",46,{"inputs":[{"name":"radialgradient"}],"output":{"name":"radialgradient"}}],[11,"get_ptr","","",46,null],[11,"drop","","",46,{"inputs":[{"name":"radialgradient"}],"output":null}],[11,"new","","Creates a new radial gradient Pattern between the two circles\ndefined by (cx0, cy0, radius0) and (cx1, cy1, radius1). Before\nusing the gradient pattern, a number of color stops should be\ndefined using Pattern::add_color_stop_rgb() or Pattern::add_color_stop_rgba().",46,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"radialgradient"}}],[11,"get_radial_circles","","Gets the gradient endpoint circles for a radial gradient, each specified as a center\ncoordinate and a radius.",46,null],[11,"wrap","","",47,null],[11,"reference","","",47,{"inputs":[{"name":"surfacepattern"}],"output":{"name":"surfacepattern"}}],[11,"get_ptr","","",47,null],[11,"drop","","",47,{"inputs":[{"name":"surfacepattern"}],"output":null}],[11,"partial_cmp","","",32,{"inputs":[{"name":"meshcorner"},{"name":"meshcorner"}],"output":{"name":"option"}}],[11,"lt","","",32,{"inputs":[{"name":"meshcorner"},{"name":"meshcorner"}],"output":{"name":"bool"}}],[11,"le","","",32,{"inputs":[{"name":"meshcorner"},{"name":"meshcorner"}],"output":{"name":"bool"}}],[11,"gt","","",32,{"inputs":[{"name":"meshcorner"},{"name":"meshcorner"}],"output":{"name":"bool"}}],[11,"ge","","",32,{"inputs":[{"name":"meshcorner"},{"name":"meshcorner"}],"output":{"name":"bool"}}],[11,"eq","","",32,{"inputs":[{"name":"meshcorner"},{"name":"meshcorner"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"meshcorner"},{"name":"meshcorner"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"meshcorner"}],"output":{"name":"meshcorner"}}],[11,"wrap","","",48,null],[11,"reference","","",48,{"inputs":[{"name":"mesh"}],"output":{"name":"mesh"}}],[11,"get_ptr","","",48,null],[11,"drop","","",48,{"inputs":[{"name":"mesh"}],"output":null}],[11,"new","","Create a new mesh pattern.",48,{"inputs":[],"output":{"name":"mesh"}}],[11,"begin_patch","","Begin a patch in a mesh pattern.",48,{"inputs":[{"name":"mesh"}],"output":null}],[11,"end_patch","","Indicates the end of the current patch in a mesh pattern.",48,{"inputs":[{"name":"mesh"}],"output":null}],[11,"move_to","","Define the first point of the current patch in a mesh pattern.",48,{"inputs":[{"name":"mesh"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"line_to","","Adds a line to the current patch from the current point to position (x , y ) in\npattern-space coordinates.",48,{"inputs":[{"name":"mesh"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"curve_to","","Adds a cubic Bézier spline to the current patch from the current point to position\n(x3 , y3 ) in pattern-space coordinates, using (x1 , y1 ) and (x2 , y2 ) as the control\npoints.",48,{"inputs":[{"name":"mesh"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_control_point","","Set an internal control point of the current patch.",48,{"inputs":[{"name":"mesh"},{"name":"meshcorner"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_control_point","","Gets the control point point_num of patch patch_num for a mesh pattern.",48,null],[11,"set_corner_color_rgb","","Sets the color of a corner of the current patch in a mesh pattern.",48,{"inputs":[{"name":"mesh"},{"name":"meshcorner"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"set_corner_color_rgba","","Sets the color of a corner of the current patch in a mesh pattern.",48,{"inputs":[{"name":"mesh"},{"name":"meshcorner"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_corner_color_rgba","","Gets the color information in corner corner_num of patch patch_num for a mesh pattern.",48,null],[11,"get_patch_count","","Gets the number of patches specified in the given mesh pattern.",48,{"inputs":[{"name":"mesh"}],"output":{"name":"usize"}}],[11,"get_path","","Gets path defining the patch patch_num for a mesh pattern.",48,{"inputs":[{"name":"mesh"},{"name":"usize"}],"output":{"name":"path"}}],[11,"fmt","","",49,{"inputs":[{"name":"surface"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"status","","",49,{"inputs":[{"name":"surface"}],"output":{"name":"status"}}],[11,"to_glib_none","","",49,{"inputs":[{"name":"surface"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",49,null],[11,"from_glib_full","","",49,null],[11,"as_ref","","",49,{"inputs":[{"name":"surface"}],"output":{"name":"surface"}}],[11,"clone","","",49,{"inputs":[{"name":"surface"}],"output":{"name":"surface"}}],[11,"drop","","",49,{"inputs":[{"name":"surface"}],"output":null}],[11,"null","","",26,{"inputs":[],"output":{"name":"matrix"}}],[11,"new","","",26,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[11,"multiply","","",26,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[11,"identity","","",26,{"inputs":[],"output":{"name":"matrix"}}],[11,"init","","",26,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"translate","","",26,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"scale","","",26,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotate","","",26,{"inputs":[{"name":"matrix"},{"name":"f64"}],"output":null}],[11,"invert","","",26,{"inputs":[{"name":"matrix"}],"output":null}],[11,"transform_distance","","",26,null],[11,"transform_point","","",26,null],[8,"Pattern","","",null,null],[11,"ensure_status","","",35,{"inputs":[{"name":"pattern"}],"output":null}],[11,"status","","Checks whether an error has previously occurred for this pattern.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"status"}}],[11,"get_reference_count","","Returns the current reference count of self.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"isize"}}],[11,"set_extend","","Sets the mode to be used for drawing outside the area of a pattern. See cairo_extend_t for\ndetails on the semantics of each extend strategy.",35,{"inputs":[{"name":"pattern"},{"name":"extend"}],"output":null}],[11,"get_extend","","Gets the current extend mode for a pattern. See Extend enum for details on the semantics\nof each extend strategy.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"extend"}}],[11,"set_filter","","Sets the filter to be used for resizing when using this pattern. See Filter enum for\ndetails on each filter.",35,{"inputs":[{"name":"pattern"},{"name":"filter"}],"output":null}],[11,"get_filter","","Gets the current filter for a pattern. See Filter enum for details on each filter.",35,{"inputs":[{"name":"pattern"}],"output":{"name":"filter"}}],[8,"Gradient","","",null,null],[11,"add_color_stop_rgb","","Adds an opaque color stop to a gradient pattern. The offset specifies the\nlocation along the gradient&#39;s control vector. For example, a linear gradient&#39;s\ncontrol vector is from (x0,y0) to (x1,y1) while a radial gradient&#39;s control\nvector is from any point on the start circle to the corresponding point on the\nend circle.",34,{"inputs":[{"name":"gradient"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"add_color_stop_rgba","","Adds a translucent color stop to a gradient pattern. The offset specifies the\nlocation along the gradient&#39;s control vector. For example, a linear gradient&#39;s\ncontrol vector is from (x0,y0) to (x1,y1) while a radial gradient&#39;s control vector\nis from any point on the start circle to the corresponding point on the end circle.",34,{"inputs":[{"name":"gradient"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"get_color_stop_count","","Gets the number of color stops specified in the given gradient pattern.",34,{"inputs":[{"name":"gradient"}],"output":{"name":"isize"}}],[11,"get_color_stop_rgba","","Gets the color and offset information at the given index for a gradient pattern.\nValues of index range from 0 to n-1 where n is the number returned by\nPattern::get_color_stop_count().",34,null],[8,"MatrixTrait","","",null,null],[10,"null","","",33,{"inputs":[],"output":{"name":"matrix"}}],[10,"new","","",33,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"matrix"}}],[10,"multiply","","",33,{"inputs":[{"name":"matrix"},{"name":"matrix"}],"output":{"name":"matrix"}}],[10,"identity","","",33,{"inputs":[],"output":{"name":"matrix"}}],[10,"init","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"translate","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"scale","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rotate","","",33,{"inputs":[{"name":"matrixtrait"},{"name":"f64"}],"output":null}],[10,"invert","","",33,{"inputs":[{"name":"matrixtrait"}],"output":null}],[10,"transform_distance","","",33,null],[10,"transform_point","","",33,null]],"paths":[[4,"Status"],[4,"Antialias"],[4,"FillRule"],[4,"LineCap"],[4,"LineJoin"],[4,"Operator"],[4,"PathDataType"],[4,"Content"],[4,"Extend"],[4,"Filter"],[4,"PatternType"],[4,"FontSlant"],[4,"FontWeight"],[4,"TextClusterFlags"],[4,"FontType"],[4,"SubpixelOrder"],[4,"HintStyle"],[4,"HintMetrics"],[4,"SurfaceType"],[4,"Format"],[3,"Rectangle"],[3,"RectangleInt"],[3,"FontExtents"],[3,"Glyph"],[3,"TextCluster"],[3,"TextExtents"],[3,"Matrix"],[3,"cairo_user_data_key_t"],[3,"cairo_bool_t"],[3,"RectangleVec"],[4,"PathSegment"],[4,"IoError"],[4,"MeshCorner"],[8,"MatrixTrait"],[8,"Gradient"],[8,"Pattern"],[8,"SurfaceExt"],[3,"FontOptions"],[3,"FontFace"],[3,"ScaledFont"],[3,"Context"],[3,"ImageSurface"],[3,"Path"],[3,"PathSegments"],[3,"SolidPattern"],[3,"LinearGradient"],[3,"RadialGradient"],[3,"SurfacePattern"],[3,"Mesh"],[3,"Surface"]]};
searchIndex["gdk_pixbuf"] = {"doc":"","items":[[11,"eq","gdk_pixbuf_sys","",0,{"inputs":[{"name":"gdkinterptype"},{"name":"gdkinterptype"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"gdkinterptype"},{"name":"gdkinterptype"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"gdkinterptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"gdkinterptype"}],"output":{"name":"gdkinterptype"}}],[11,"eq","","",1,{"inputs":[{"name":"gdkpixbufalphamode"},{"name":"gdkpixbufalphamode"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"gdkpixbufalphamode"},{"name":"gdkpixbufalphamode"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"gdkpixbufalphamode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"gdkpixbufalphamode"}],"output":{"name":"gdkpixbufalphamode"}}],[11,"eq","","",2,{"inputs":[{"name":"gdkpixbuferror"},{"name":"gdkpixbuferror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"gdkpixbuferror"},{"name":"gdkpixbuferror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"gdkpixbuferror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"gdkpixbuferror"}],"output":{"name":"gdkpixbuferror"}}],[11,"eq","","",3,{"inputs":[{"name":"gdkpixbufrotation"},{"name":"gdkpixbufrotation"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"gdkpixbufrotation"},{"name":"gdkpixbufrotation"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"gdkpixbufrotation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"gdkpixbufrotation"}],"output":{"name":"gdkpixbufrotation"}}],[11,"hash","","",4,null],[11,"cmp","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"option"}}],[11,"lt","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"le","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"gt","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"ge","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"eq","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",4,{"inputs":[],"output":{"name":"gdkpixdatadumptype"}}],[11,"all","","Returns the set containing all flags.",4,{"inputs":[],"output":{"name":"gdkpixdatadumptype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",4,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",4,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",4,{"inputs":[{"name":"u32"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",4,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",4,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",4,null],[11,"remove","","Removes the specified flags in-place.",4,null],[11,"toggle","","Toggles the specified flags in-place.",4,null],[11,"bitor","","Returns the union of the two sets of flags.",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",4,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"not","","Returns the complement of this set of flags.",4,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"from_iter","","",4,{"inputs":[{"name":"t"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"hash","","",5,null],[11,"cmp","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"eq","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",5,{"inputs":[],"output":{"name":"gdkpixdatatype"}}],[11,"all","","Returns the set containing all flags.",5,{"inputs":[],"output":{"name":"gdkpixdatatype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",5,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",5,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",5,{"inputs":[{"name":"u32"}],"output":{"name":"gdkpixdatatype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",5,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",5,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",5,null],[11,"remove","","Removes the specified flags in-place.",5,null],[11,"toggle","","Toggles the specified flags in-place.",5,null],[11,"bitor","","Returns the union of the two sets of flags.",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",5,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"not","","Returns the complement of this set of flags.",5,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"from_iter","","",5,{"inputs":[{"name":"t"}],"output":{"name":"gdkpixdatatype"}}],[6,"Colorspace","gdk_pixbuf","",null,null],[4,"InterpType","","This enumeration describes the different interpolation modes that\ncan be used with the scaling functions. `InterpType::Nearest` is\nthe fastest scaling method, but has horrible quality when\nscaling down. `InterpType::Bilinear` is the best choice if you\naren&#39;t sure what to choose, it has a good speed/quality balance.",null,null],[13,"Nearest","","Nearest neighbor sampling; this is the fastest\nand lowest quality mode. Quality is normally unacceptable when scaling\ndown, but may be OK when scaling up.",0,null],[13,"Tiles","","This is an accurate simulation of the PostScript\nimage operator without any interpolation enabled. Each pixel is\nrendered as a tiny parallelogram of solid color, the edges of which\nare implemented with antialiasing. It resembles nearest neighbor for\nenlargement, and bilinear for reduction.",0,null],[13,"Bilinear","","Best quality/speed balance; use this mode by\ndefault. Bilinear interpolation. For enlargement, it is\nequivalent to point-sampling the ideal bilinear-interpolated image.\nFor reduction, it is equivalent to laying down small tiles and\nintegrating over the coverage area.",0,null],[13,"Hyper","","This is the slowest and highest quality\nreconstruction function. It is derived from the hyperbolic filters in\nWolberg&#39;s &quot;Digital Image Warping&quot;, and is formally defined as the\nhyperbolic-filter sampling the ideal hyperbolic-filter interpolated\nimage (the filter is designed to be idempotent for 1:1 pixel mapping).",0,null],[4,"PixbufAlphaMode","","These values can be passed to\n`gdk_pixbuf_render_to_drawable_alpha` to control how the alpha\nchannel of an image should be handled. This function can create a\nbilevel clipping mask (black and white) and use it while painting\nthe image. In the future, when the X Window System gets an alpha\nchannel extension, it will be possible to do full alpha\ncompositing onto arbitrary drawables. For now both cases fall\nback to a bilevel clipping mask.",null,null],[13,"Bilevel","","A bilevel clipping mask (black and white)\nwill be created and used to draw the image. Pixels below 0.5 opacity\nwill be considered fully transparent, and all others will be\nconsidered fully opaque.",1,null],[13,"Full","","For now falls back to `PixbufAlphaMode::Bilevel`.\nIn the future it will do full alpha compositing.",1,null],[4,"PixbufError","","An error code in the `GDK_PIXBUF_ERROR` domain. Many gdk-pixbuf\noperations can cause errors in this domain, or in the `G_FILE_ERROR`\ndomain.",null,null],[13,"CorruptImage","","An image file was broken somehow.",2,null],[13,"InsufficientMemory","","Not enough memory.",2,null],[13,"BadOption","","A bad option was passed to a pixbuf save module.",2,null],[13,"UnknownType","","Unknown image type.",2,null],[13,"UnsupportedOperation","","Don&#39;t know how to perform the\ngiven operation on the type of image at hand.",2,null],[13,"Failed","","Generic failure code, something went wrong.",2,null],[3,"PixbufAnimation","","An opaque struct representing an animation.",null,null],[3,"PixbufAnimationIter","","An opaque struct representing an iterator which points to a\ncertain position in an animation.",null,null],[3,"PixbufSimpleAnim","","An opaque struct representing a simple animation.",null,null],[3,"PixbufFormat","","",null,null],[3,"PixbufLoader","","The `PixbufLoader` struct contains only private\nfields.",null,null],[3,"Pixbuf","","This is the main structure in the gdk-pixbuf library. It is\nused to represent images. It contains information about the\nimage&#39;s pixel data, its color space, bits per sample, width and\nheight, and the rowstride (the number of bytes between the start of\none row and the start of the next).",null,null],[11,"hash","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"pixbufanimationiter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"pixbufanimationiter"}],"output":{"name":"pixbufanimationiter"}}],[11,"static_type","","",6,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",6,{"inputs":[{"name":"pixbufanimationiter"},{"name":"t"}],"output":{"name":"bool"}}],[11,"advance","","Possibly advances an animation to a new frame. Chooses the frame based\non the start time passed to `PixbufAnimationExt::get_iter`.",6,{"inputs":[{"name":"pixbufanimationiter"},{"name":"timeval"}],"output":{"name":"bool"}}],[11,"get_pixbuf","","Gets the current pixbuf which should be displayed; the pixbuf might not\nbe the same size as the animation itself\n(`PixbufAnimationExt::get_width`, `PixbufAnimationExt::get_height`).\nThis pixbuf should be displayed for\n`PixbufAnimationIter::get_delay_time` milliseconds. The caller\nof this function does not own a reference to the returned pixbuf;\nthe returned pixbuf will become invalid when the iterator advances\nto the next frame, which may happen anytime you call\n`PixbufAnimationIter::advance`. Copy the pixbuf to keep it\n(don&#39;t just add a reference), as it may get recycled as you advance\nthe iterator.",6,{"inputs":[{"name":"pixbufanimationiter"}],"output":{"name":"pixbuf"}}],[11,"get_delay_time","","Gets the number of milliseconds the current pixbuf should be displayed,\nor -1 if the current pixbuf should be displayed forever. `g_timeout_add`\nconveniently takes a timeout in milliseconds, so you can use a timeout\nto schedule the next update.",6,{"inputs":[{"name":"pixbufanimationiter"}],"output":{"name":"i32"}}],[11,"on_currently_loading_frame","","Used to determine how to respond to the area_updated signal on\n`PixbufLoader` when loading an animation. area_updated is emitted\nfor an area of the frame currently streaming in to the loader. So if\nyou&#39;re on the currently loading frame, you need to redraw the screen for\nthe updated area.",6,{"inputs":[{"name":"pixbufanimationiter"}],"output":{"name":"bool"}}],[11,"hash","","",7,null],[11,"fmt","","",7,{"inputs":[{"name":"pixbufanimation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"pixbufanimation"}],"output":{"name":"pixbufanimation"}}],[11,"static_type","","",7,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",7,{"inputs":[{"name":"pixbufanimation"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new_from_file","","Creates a new animation by loading it from a file. The file format is\ndetected automatically. If the file&#39;s format does not support multi-frame\nimages, then an animation with a single frame will be created. Possible errors\nare in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains.\n## `filename`\nName of file to load, in the GLib file name encoding",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_resource","","Creates a new pixbuf animation by loading an image from an resource.",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",8,null],[11,"fmt","","",8,{"inputs":[{"name":"pixbufsimpleanim"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"pixbufsimpleanim"}],"output":{"name":"pixbufsimpleanim"}}],[11,"static_type","","",8,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",8,{"inputs":[{"name":"pixbufsimpleanim"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new, empty animation.\n## `width`\nthe width of the animation\n## `height`\nthe height of the animation\n## `rate`\nthe speed of the animation, in frames per second",8,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"f32"}],"output":{"name":"pixbufsimpleanim"}}],[11,"add_frame","","Adds a new frame to `self`. The `pixbuf` must\nhave the dimensions specified when the animation\nwas constructed.\n## `pixbuf`\nthe pixbuf to add",8,{"inputs":[{"name":"pixbufsimpleanim"},{"name":"pixbuf"}],"output":null}],[11,"set_loop","","Sets whether `self` should loop indefinitely when it reaches the end.\n## `loop_`\nwhether to loop the animation",8,{"inputs":[{"name":"pixbufsimpleanim"},{"name":"bool"}],"output":null}],[11,"get_loop","","Gets whether `self` should loop indefinitely when it reaches the end.",8,{"inputs":[{"name":"pixbufsimpleanim"}],"output":{"name":"bool"}}],[11,"get_name","","Returns the name of the format.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"option"}}],[11,"get_description","","Returns a description of the format.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"option"}}],[11,"get_mime_types","","Returns the mime types supported by the format.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"vec"}}],[11,"get_extensions","","Returns the filename extensions typically used for files in the\ngiven format.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"vec"}}],[11,"is_writable","","Returns whether pixbufs can be saved in the given format.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"bool"}}],[11,"is_scalable","","Returns whether this image format is scalable. If a file is in a\nscalable format, it is preferable to load it at the desired size,\nrather than loading it at the default size and scaling the\nresulting pixbuf to the desired size.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"bool"}}],[11,"is_disabled","","Returns whether this image format is disabled. See\n`PixbufFormat::set_disabled`.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"bool"}}],[11,"set_disabled","","Disables or enables an image format. If a format is disabled,\ngdk-pixbuf won&#39;t use the image loader for this format to load\nimages. Applications can use this to avoid using image loaders\nwith an inappropriate license, see `PixbufFormat::get_license`.\n## `disabled`\n`true` to disable the format `self`",9,{"inputs":[{"name":"pixbufformat"},{"name":"bool"}],"output":null}],[11,"get_license","","Returns information about the license of the image loader for the format. The\nreturned string should be a shorthand for a wellknown license, e.g. &quot;LGPL&quot;,\n&quot;GPL&quot;, &quot;QPL&quot;, &quot;GPL/QPL&quot;, or &quot;other&quot; to indicate some other license. This\nstring should be freed with `g_free` when it&#39;s no longer needed.",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"option"}}],[11,"to_glib_none","","",9,{"inputs":[{"name":"pixbufformat"}],"output":{"name":"stash"}}],[11,"from_glib_none","","",9,null],[11,"from_glib_full","","",9,null],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"pixbufloader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"pixbufloader"}],"output":{"name":"pixbufloader"}}],[11,"static_type","","",10,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",10,{"inputs":[{"name":"pixbufloader"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new pixbuf loader object.",10,{"inputs":[],"output":{"name":"pixbufloader"}}],[11,"new_with_type","","Creates a new pixbuf loader object that always attempts to parse\nimage data as if it were an image of type `image_type`, instead of\nidentifying the type automatically. Useful if you want an error if\nthe image isn&#39;t the expected type, for loading image formats\nthat can&#39;t be reliably identified by looking at the data, or if\nthe user manually forces a specific type.",10,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_with_mime_type","","Creates a new pixbuf loader object that always attempts to parse\nimage data as if it were an image of mime type `mime_type`, instead of\nidentifying the type automatically. Useful if you want an error if\nthe image isn&#39;t the expected mime type, for loading image formats\nthat can&#39;t be reliably identified by looking at the data, or if\nthe user manually forces a specific mime type.",10,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"get_format","","Obtains the available information about the format of the\ncurrently loading image file.",10,{"inputs":[{"name":"pixbufloader"}],"output":{"name":"pixbufformat"}}],[11,"loader_write","","",10,null],[11,"set_size","","Causes the image to be scaled while it is loaded. The desired\nimage size can be determined relative to the original size of\nthe image by calling `PixbufLoader::set_size` from a\nsignal handler for the ::size-prepared signal.",10,{"inputs":[{"name":"pixbufloader"},{"name":"i32"},{"name":"i32"}],"output":null}],[11,"get_pixbuf","","Queries the `Pixbuf` that a pixbuf loader is currently creating.\nIn general it only makes sense to call this function after the\n&quot;area-prepared&quot; signal has been emitted by the loader; this means\nthat enough data has been read to know the size of the image that\nwill be allocated. If the loader has not received enough data via\n`PixbufLoader::write`, then this function returns `None`. The\nreturned pixbuf will be the same in all future calls to the loader,\nso simply calling `gobject::Object::ref` should be sufficient to continue\nusing it. Additionally, if the loader is an animation, it will\nreturn the &quot;static image&quot; of the animation\n(see `PixbufAnimationExt::get_static_image`).",10,{"inputs":[{"name":"pixbufloader"}],"output":{"name":"option"}}],[11,"get_animation","","Queries the `PixbufAnimation` that a pixbuf loader is currently creating.\nIn general it only makes sense to call this function after the &quot;area-prepared&quot;\nsignal has been emitted by the loader. If the loader doesn&#39;t have enough\nbytes yet (hasn&#39;t emitted the &quot;area-prepared&quot; signal) this function will\nreturn `None`.",10,{"inputs":[{"name":"pixbufloader"}],"output":{"name":"option"}}],[11,"close","","Informs a pixbuf loader that no further writes with\n`PixbufLoader::write` will occur, so that it can free its\ninternal loading structures. Also, tries to parse any data that\nhasn&#39;t yet been parsed; if the remaining data is partial or\ncorrupt, an error will be returned. If `false` is returned, `error`\nwill be set to an error from the `GDK_PIXBUF_ERROR` or `G_FILE_ERROR`\ndomains. If you&#39;re just cancelling a load rather than expecting it\nto be finished, passing `None` for `error` to ignore it is\nreasonable.",10,{"inputs":[{"name":"pixbufloader"}],"output":{"name":"result"}}],[11,"hash","","",11,null],[11,"fmt","","",11,{"inputs":[{"name":"pixbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"pixbuf"}}],[11,"static_type","","",11,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",11,{"inputs":[{"name":"pixbuf"},{"name":"t"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `Pixbuf` structure and allocates a buffer for it. The\nbuffer has an optimal rowstride. Note that the buffer is not cleared;\nyou will have to fill it completely yourself.\n## `colorspace`\nColor space for image\n## `has_alpha`\nWhether the image should have transparency information\n## `bits_per_sample`\nNumber of bits per color sample\n## `width`\nWidth of image in pixels, must be &gt; 0\n## `height`\nHeight of image in pixels, must be &gt; 0",11,{"inputs":[{"name":"colorspace"},{"name":"bool"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"new_from_vec","","",11,{"inputs":[{"name":"vec"},{"name":"colorspace"},{"name":"bool"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"pixbuf"}}],[11,"new_from_file","","Creates a new pixbuf by loading an image from a file. The file format is\ndetected automatically. If `None` is returned, then `error` will be set.\nPossible errors are in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains.\n## `filename`\nName of file to load, in the GLib file name encoding",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_file_at_size","","Creates a new pixbuf by loading an image from a file.\nThe file format is detected automatically. If `None` is returned, then\n`error` will be set. Possible errors are in the `GDK_PIXBUF_ERROR` and\n`G_FILE_ERROR` domains.",11,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"result"}}],[11,"new_from_file_at_scale","","Creates a new pixbuf by loading an image from a file. The file format is\ndetected automatically. If `None` is returned, then `error` will be set.\nPossible errors are in the `GDK_PIXBUF_ERROR` and `G_FILE_ERROR` domains.\nThe image will be scaled to fit in the requested size, optionally preserving\nthe image&#39;s aspect ratio.",11,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[11,"get_file_info","","Parses an image file far enough to determine its format and size.\n## `filename`\nThe name of the file to identify.\n## `width`\nReturn location for the width of the\n image, or `None`\n## `height`\nReturn location for the height of the\n image, or `None`",11,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"new_from_resource","","Creates a new pixbuf by loading an image from an resource.",11,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_resource_at_scale","","Creates a new pixbuf by loading an image from an resource.",11,{"inputs":[{"name":"str"},{"name":"i32"},{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[11,"new_subpixbuf","","Creates a new pixbuf which represents a sub-region of `self`.\nThe new pixbuf shares its pixels with the original pixbuf, so\nwriting to one affects both. The new pixbuf holds a reference to\n`self`, so `self` will not be finalized until the new\npixbuf is finalized.",11,{"inputs":[{"name":"pixbuf"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"pixbuf"}}],[11,"get_colorspace","","Queries the color space of a pixbuf.",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"colorspace"}}],[11,"get_n_channels","","Queries the number of channels of a pixbuf.",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"i32"}}],[11,"get_has_alpha","","Queries whether a pixbuf has an alpha channel (opacity information).",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"bool"}}],[11,"get_bits_per_sample","","Queries the number of bits per color sample in a pixbuf.",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"i32"}}],[11,"get_pixels","","Queries a pointer to the pixel data of a pixbuf.",11,null],[11,"get_width","","Queries the width of a pixbuf.",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"i32"}}],[11,"get_height","","Queries the height of a pixbuf.",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"i32"}}],[11,"get_rowstride","","Queries the rowstride of a pixbuf, which is the number of bytes between\nthe start of a row and the start of the next row.",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"i32"}}],[11,"get_byte_length","","Returns the length of the pixel data, in bytes.",11,{"inputs":[{"name":"pixbuf"}],"output":{"name":"usize"}}],[11,"get_option","","Looks up `key` in the list of options that may have been attached to the\n`self` when it was loaded, or that may have been attached by another\nfunction using `gdk_pixbuf_set_option`.",11,{"inputs":[{"name":"pixbuf"},{"name":"str"}],"output":{"name":"option"}}],[11,"scale_simple","","Create a new `Pixbuf` containing a copy of `self` scaled to\n`dest_width` x `dest_height`. Leaves `self` unaffected. `interp_type`\nshould be `InterpType::Nearest` if you want maximum speed (but when\nscaling down `InterpType::Nearest` is usually unusably ugly). The\ndefault `interp_type` should be `InterpType::Bilinear` which offers\nreasonable quality and speed.",11,{"inputs":[{"name":"pixbuf"},{"name":"i32"},{"name":"i32"},{"name":"interptype"}],"output":{"name":"result"}}],[11,"scale","","Creates a transformation of the source image `self` by scaling by\n`scale_x` and `scale_y` then translating by `offset_x` and `offset_y`,\nthen renders the rectangle (`dest_x`, `dest_y`, `dest_width`,\n`dest_height`) of the resulting image onto the destination image\nreplacing the previous contents.",11,{"inputs":[{"name":"pixbuf"},{"name":"pixbuf"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"interptype"}],"output":null}],[11,"composite","","Creates a transformation of the source image `self` by scaling by\n`scale_x` and `scale_y` then translating by `offset_x` and `offset_y`.\nThis gives an image in the coordinates of the destination pixbuf.\nThe rectangle (`dest_x`, `dest_y`, `dest_width`, `dest_height`)\nis then composited onto the corresponding rectangle of the\noriginal destination image.",11,{"inputs":[{"name":"pixbuf"},{"name":"pixbuf"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"interptype"},{"name":"i32"}],"output":null}],[11,"flip","","Flips a pixbuf horizontally or vertically and returns the\nresult in a new pixbuf.\n## `horizontal`\n`true` to flip horizontally, `false` to flip vertically",11,{"inputs":[{"name":"pixbuf"},{"name":"bool"}],"output":{"name":"result"}}],[11,"put_pixel","","",11,{"inputs":[{"name":"pixbuf"},{"name":"i32"},{"name":"i32"},{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":null}],[0,"prelude","","Traits inteded for blanket imports.",null,null],[8,"PixbufAnimationExt","gdk_pixbuf::prelude","Trait containing all `PixbufAnimation` methods.",null,null],[10,"get_width","","Queries the width of the bounding box of a pixbuf animation.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"i32"}}],[10,"get_height","","Queries the height of the bounding box of a pixbuf animation.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"i32"}}],[10,"get_iter","","Get an iterator for displaying an animation. The iterator provides\nthe frames that should be displayed at a given time.\nIt should be freed after use with `gobject::Object::unref`.",12,{"inputs":[{"name":"pixbufanimationext"},{"name":"timeval"}],"output":{"name":"pixbufanimationiter"}}],[10,"is_static_image","","If you load a file with `PixbufAnimation::new_from_file` and it turns\nout to be a plain, unanimated image, then this function will return\n`true`. Use `PixbufAnimationExt::get_static_image` to retrieve\nthe image.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"bool"}}],[10,"get_static_image","","If an animation is really just a plain image (has only one frame),\nthis function returns that image. If the animation is an animation,\nthis function returns a reasonable thing to display as a static\nunanimated image, which might be the first frame, or something more\nsophisticated. If an animation hasn&#39;t loaded any frames yet, this\nfunction will return `None`.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"option"}}],[8,"PixbufAnimationExt","gdk_pixbuf","Trait containing all `PixbufAnimation` methods.",null,null],[10,"get_width","","Queries the width of the bounding box of a pixbuf animation.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"i32"}}],[10,"get_height","","Queries the height of the bounding box of a pixbuf animation.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"i32"}}],[10,"get_iter","","Get an iterator for displaying an animation. The iterator provides\nthe frames that should be displayed at a given time.\nIt should be freed after use with `gobject::Object::unref`.",12,{"inputs":[{"name":"pixbufanimationext"},{"name":"timeval"}],"output":{"name":"pixbufanimationiter"}}],[10,"is_static_image","","If you load a file with `PixbufAnimation::new_from_file` and it turns\nout to be a plain, unanimated image, then this function will return\n`true`. Use `PixbufAnimationExt::get_static_image` to retrieve\nthe image.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"bool"}}],[10,"get_static_image","","If an animation is really just a plain image (has only one frame),\nthis function returns that image. If the animation is an animation,\nthis function returns a reasonable thing to display as a static\nunanimated image, which might be the first frame, or something more\nsophisticated. If an animation hasn&#39;t loaded any frames yet, this\nfunction will return `None`.",12,{"inputs":[{"name":"pixbufanimationext"}],"output":{"name":"option"}}]],"paths":[[4,"InterpType"],[4,"PixbufAlphaMode"],[4,"PixbufError"],[4,"GdkPixbufRotation"],[3,"GdkPixdataDumpType"],[3,"GdkPixdataType"],[3,"PixbufAnimationIter"],[3,"PixbufAnimation"],[3,"PixbufSimpleAnim"],[3,"PixbufFormat"],[3,"PixbufLoader"],[3,"Pixbuf"],[8,"PixbufAnimationExt"]]};
searchIndex["gdk_sys"] = {"doc":"","items":[[3,"GdkDragAction","gdk_sys","Used in `DragContext` to indicate what the destination\nshould do with the dropped data.",null,null],[3,"GdkEventMask","","A set of bit-flags to indicate which events a window is to receive.\nMost of these masks map onto one or more of the `EventType` event types\nabove.",null,null],[3,"GdkFrameClockPhase","","`FrameClockPhase` is used to represent the different paint clock\nphases that can be requested. The elements of the enumeration\ncorrespond to the signals of `FrameClock`.",null,null],[3,"GdkModifierType","","A set of bit-flags to indicate the state of modifier keys and mouse buttons\nin various event types. Typical modifier keys are Shift, Control, Meta,\nSuper, Hyper, Alt, Compose, Apple, CapsLock or ShiftLock.",null,null],[3,"GdkWMDecoration","","These are hints originally defined by the Motif toolkit.\nThe window manager can use them when determining how to decorate\nthe window. The hint must be set before mapping the window.",null,null],[3,"GdkWMFunction","","These are hints originally defined by the Motif toolkit. The window manager\ncan use them when determining the functions to offer for the window. The\nhint must be set before mapping the window.",null,null],[3,"GdkWindowAttributesType","","Used to indicate which fields in the `WindowAttr` struct should be honored.\nFor example, if you filled in the “cursor” and “x” fields of `WindowAttr`,\npass “`WindowAttributesType::X` | `WindowAttributesType::Cursor`” to `Window::new`. Fields in\n`WindowAttr` not covered by a bit in this enum are required; for example,\nthe `width`/`height`, `wclass`, and `window_type` fields are required, they have\nno corresponding flag in `WindowAttributesType`.",null,null],[3,"GdkWindowHints","","Used to indicate which fields of a `Geometry` struct should be paid\nattention to. Also, the presence/absence of `WindowHints::Pos`,\n`WindowHints::UserPos`, and `WindowHints::UserSize` is significant, though they don&#39;t\ndirectly refer to `Geometry` fields. `WindowHints::UserPos` will be set\nautomatically by ``GtkWindow`` if you call `gtk_window_move`.\n`WindowHints::UserPos` and `WindowHints::UserSize` should be set if the user\nspecified a size/position using a --geometry command-line argument;\n`gtk_window_parse_geometry` automatically sets these flags.",null,null],[3,"GdkWindowState","","Specifies the state of a toplevel window.",null,null],[3,"GdkAtom_","","",null,null],[3,"GdkColor","","",null,null],[12,"pixel","","",0,null],[12,"red","","",0,null],[12,"green","","",0,null],[12,"blue","","",0,null],[3,"GdkEventAny","","",null,null],[12,"type_","","",1,null],[12,"window","","",1,null],[12,"send_event","","",1,null],[3,"GdkEventButton","","",null,null],[12,"type_","","",2,null],[12,"window","","",2,null],[12,"send_event","","",2,null],[12,"time","","",2,null],[12,"x","","",2,null],[12,"y","","",2,null],[12,"axes","","",2,null],[12,"state","","",2,null],[12,"button","","",2,null],[12,"device","","",2,null],[12,"x_root","","",2,null],[12,"y_root","","",2,null],[3,"GdkEventConfigure","","",null,null],[12,"type_","","",3,null],[12,"window","","",3,null],[12,"send_event","","",3,null],[12,"x","","",3,null],[12,"y","","",3,null],[12,"width","","",3,null],[12,"height","","",3,null],[3,"GdkEventCrossing","","",null,null],[12,"type_","","",4,null],[12,"window","","",4,null],[12,"send_event","","",4,null],[12,"subwindow","","",4,null],[12,"time","","",4,null],[12,"x","","",4,null],[12,"y","","",4,null],[12,"x_root","","",4,null],[12,"y_root","","",4,null],[12,"mode","","",4,null],[12,"detail","","",4,null],[12,"focus","","",4,null],[12,"state","","",4,null],[3,"GdkEventDND","","",null,null],[12,"type_","","",5,null],[12,"window","","",5,null],[12,"send_event","","",5,null],[12,"context","","",5,null],[12,"time","","",5,null],[12,"x_root","","",5,null],[12,"y_root","","",5,null],[3,"GdkEventExpose","","",null,null],[12,"type_","","",6,null],[12,"window","","",6,null],[12,"send_event","","",6,null],[12,"area","","",6,null],[12,"region","","",6,null],[12,"count","","",6,null],[3,"GdkEventFocus","","",null,null],[12,"type_","","",7,null],[12,"window","","",7,null],[12,"send_event","","",7,null],[12,"in_","","",7,null],[3,"GdkEventGrabBroken","","",null,null],[12,"type_","","",8,null],[12,"window","","",8,null],[12,"send_event","","",8,null],[12,"keyboard","","",8,null],[12,"implicit","","",8,null],[12,"grab_window","","",8,null],[3,"GdkEventKey","","",null,null],[12,"type_","","",9,null],[12,"window","","",9,null],[12,"send_event","","",9,null],[12,"time","","",9,null],[12,"state","","",9,null],[12,"keyval","","",9,null],[12,"length","","",9,null],[12,"string","","",9,null],[12,"hardware_keycode","","",9,null],[12,"group","","",9,null],[3,"GdkEventMotion","","",null,null],[12,"type_","","",10,null],[12,"window","","",10,null],[12,"send_event","","",10,null],[12,"time","","",10,null],[12,"x","","",10,null],[12,"y","","",10,null],[12,"axes","","",10,null],[12,"state","","",10,null],[12,"is_hint","","",10,null],[12,"device","","",10,null],[12,"x_root","","",10,null],[12,"y_root","","",10,null],[3,"GdkEventOwnerChange","","",null,null],[12,"type_","","",11,null],[12,"window","","",11,null],[12,"send_event","","",11,null],[12,"owner","","",11,null],[12,"reason","","",11,null],[12,"selection","","",11,null],[12,"time","","",11,null],[12,"selection_time","","",11,null],[3,"GdkEventProperty","","",null,null],[12,"type_","","",12,null],[12,"window","","",12,null],[12,"send_event","","",12,null],[12,"atom","","",12,null],[12,"time","","",12,null],[12,"state","","",12,null],[3,"GdkEventProximity","","",null,null],[12,"type_","","",13,null],[12,"window","","",13,null],[12,"send_event","","",13,null],[12,"time","","",13,null],[12,"device","","",13,null],[3,"GdkEventScroll","","",null,null],[12,"type_","","",14,null],[12,"window","","",14,null],[12,"send_event","","",14,null],[12,"time","","",14,null],[12,"x","","",14,null],[12,"y","","",14,null],[12,"state","","",14,null],[12,"direction","","",14,null],[12,"device","","",14,null],[12,"x_root","","",14,null],[12,"y_root","","",14,null],[12,"delta_x","","",14,null],[12,"delta_y","","",14,null],[3,"GdkEventSelection","","",null,null],[12,"type_","","",15,null],[12,"window","","",15,null],[12,"send_event","","",15,null],[12,"selection","","",15,null],[12,"target","","",15,null],[12,"property","","",15,null],[12,"time","","",15,null],[12,"requestor","","",15,null],[3,"GdkEventSequence","","",null,null],[3,"GdkEventSetting","","",null,null],[12,"type_","","",16,null],[12,"window","","",16,null],[12,"send_event","","",16,null],[12,"action","","",16,null],[12,"name","","",16,null],[3,"GdkEventTouch","","",null,null],[12,"type_","","",17,null],[12,"window","","",17,null],[12,"send_event","","",17,null],[12,"time","","",17,null],[12,"x","","",17,null],[12,"y","","",17,null],[12,"axes","","",17,null],[12,"state","","",17,null],[12,"sequence","","",17,null],[12,"emulating_pointer","","",17,null],[12,"device","","",17,null],[12,"x_root","","",17,null],[12,"y_root","","",17,null],[3,"GdkEventVisibility","","",null,null],[12,"type_","","",18,null],[12,"window","","",18,null],[12,"send_event","","",18,null],[12,"state","","",18,null],[3,"GdkEventWindowState","","",null,null],[12,"type_","","",19,null],[12,"window","","",19,null],[12,"send_event","","",19,null],[12,"changed_mask","","",19,null],[12,"new_window_state","","",19,null],[3,"GdkFrameClockClass","","",null,null],[3,"GdkFrameClockPrivate","","",null,null],[3,"GdkFrameTimings","","",null,null],[3,"GdkGeometry","","",null,null],[12,"min_width","","",20,null],[12,"min_height","","",20,null],[12,"max_width","","",20,null],[12,"max_height","","",20,null],[12,"base_width","","",20,null],[12,"base_height","","",20,null],[12,"width_inc","","",20,null],[12,"height_inc","","",20,null],[12,"min_aspect","","",20,null],[12,"max_aspect","","",20,null],[12,"win_gravity","","",20,null],[3,"GdkKeymapKey","","",null,null],[12,"keycode","","",21,null],[12,"group","","",21,null],[12,"level","","",21,null],[3,"GdkPoint","","",null,null],[12,"x","","",22,null],[12,"y","","",22,null],[3,"GdkRGBA","","",null,null],[12,"red","","",23,null],[12,"green","","",23,null],[12,"blue","","",23,null],[12,"alpha","","",23,null],[3,"GdkTimeCoord","","",null,null],[12,"time","","",24,null],[12,"axes","","",24,null],[3,"GdkWindowAttr","","",null,null],[12,"title","","",25,null],[12,"event_mask","","",25,null],[12,"x","","",25,null],[12,"y","","",25,null],[12,"width","","",25,null],[12,"height","","",25,null],[12,"wclass","","",25,null],[12,"visual","","",25,null],[12,"window_type","","",25,null],[12,"cursor","","",25,null],[12,"wmclass_name","","",25,null],[12,"wmclass_class","","",25,null],[12,"override_redirect","","",25,null],[12,"type_hint","","",25,null],[3,"GdkWindowClass","","",null,null],[12,"parent_class","","",26,null],[12,"pick_embedded_child","","",26,null],[12,"to_embedder","","",26,null],[12,"from_embedder","","",26,null],[12,"create_surface","","",26,null],[12,"_gdk_reserved1","","",26,null],[12,"_gdk_reserved2","","",26,null],[12,"_gdk_reserved3","","",26,null],[12,"_gdk_reserved4","","",26,null],[12,"_gdk_reserved5","","",26,null],[12,"_gdk_reserved6","","",26,null],[12,"_gdk_reserved7","","",26,null],[12,"_gdk_reserved8","","",26,null],[3,"GdkWindowRedirect","","",null,null],[3,"GdkAppLaunchContext","","",null,null],[3,"GdkCursor","","",null,null],[3,"GdkDevice","","",null,null],[3,"GdkDeviceManager","","",null,null],[3,"GdkDisplay","","",null,null],[3,"GdkDisplayManager","","",null,null],[3,"GdkDragContext","","",null,null],[3,"GdkFrameClock","","",null,null],[3,"GdkGLContext","","",null,null],[3,"GdkKeymap","","",null,null],[3,"GdkScreen","","",null,null],[3,"GdkVisual","","",null,null],[3,"GdkWindow","","",null,null],[4,"GdkAxisUse","","An enumeration describing the way in which a device\naxis (valuator) maps onto the predefined valuator\ntypes that GTK+ understands.",null,null],[13,"Ignore","","the axis is ignored.",27,null],[13,"X","","the axis is used as the x axis.",27,null],[13,"Y","","the axis is used as the y axis.",27,null],[13,"Pressure","","the axis is used for pressure information.",27,null],[13,"Xtilt","","the axis is used for x tilt information.",27,null],[13,"Ytilt","","the axis is used for y tilt information.",27,null],[13,"Wheel","","the axis is used for wheel information.",27,null],[13,"Last","","a constant equal to the numerically highest axis value.",27,null],[4,"GdkByteOrder","","A set of values describing the possible byte-orders\nfor storing pixel values in memory.",null,null],[13,"LsbFirst","","The values are stored with the least-significant byte\nfirst. For instance, the 32-bit value 0xffeecc would be stored\nin memory as 0xcc, 0xee, 0xff, 0x00.",28,null],[13,"MsbFirst","","The values are stored with the most-significant byte\nfirst. For instance, the 32-bit value 0xffeecc would be stored\nin memory as 0x00, 0xff, 0xee, 0xcc.",28,null],[4,"GdkCrossingMode","","Specifies the crossing mode for `EventCrossing`.",null,null],[13,"Normal","","crossing because of pointer motion.",29,null],[13,"Grab","","crossing because a grab is activated.",29,null],[13,"Ungrab","","crossing because a grab is deactivated.",29,null],[13,"GtkGrab","","crossing because a GTK+ grab is activated.",29,null],[13,"GtkUngrab","","crossing because a GTK+ grab is deactivated.",29,null],[13,"StateChanged","","crossing because a GTK+ widget changed\nstate (e.g. sensitivity).",29,null],[13,"TouchBegin","","crossing because a touch sequence has begun,\nthis event is synthetic as the pointer might have not left the window.",29,null],[13,"TouchEnd","","crossing because a touch sequence has ended,\nthis event is synthetic as the pointer might have not left the window.",29,null],[13,"DeviceSwitch","","crossing because of a device switch (i.e.\na mouse taking control of the pointer after a touch device), this event\nis synthetic as the pointer didn’t leave the window.",29,null],[4,"GdkCursorType","","The standard cursors available.",null,null],[13,"XCursor","","![](X_cursor.png)",30,null],[13,"Arrow","","![](arrow.png)",30,null],[13,"BasedArrowDown","","![](based_arrow_down.png)",30,null],[13,"BasedArrowUp","","![](based_arrow_up.png)",30,null],[13,"Boat","","![](boat.png)",30,null],[13,"Bogosity","","![](bogosity.png)",30,null],[13,"BottomLeftCorner","","![](bottom_left_corner.png)",30,null],[13,"BottomRightCorner","","![](bottom_right_corner.png)",30,null],[13,"BottomSide","","![](bottom_side.png)",30,null],[13,"BottomTee","","![](bottom_tee.png)",30,null],[13,"BoxSpiral","","![](box_spiral.png)",30,null],[13,"CenterPtr","","![](center_ptr.png)",30,null],[13,"Circle","","![](circle.png)",30,null],[13,"Clock","","![](clock.png)",30,null],[13,"CoffeeMug","","![](coffee_mug.png)",30,null],[13,"Cross","","![](cross.png)",30,null],[13,"CrossReverse","","![](cross_reverse.png)",30,null],[13,"Crosshair","","![](crosshair.png)",30,null],[13,"DiamondCross","","![](diamond_cross.png)",30,null],[13,"Dot","","![](dot.png)",30,null],[13,"Dotbox","","![](dotbox.png)",30,null],[13,"DoubleArrow","","![](double_arrow.png)",30,null],[13,"DraftLarge","","![](draft_large.png)",30,null],[13,"DraftSmall","","![](draft_small.png)",30,null],[13,"DrapedBox","","![](draped_box.png)",30,null],[13,"Exchange","","![](exchange.png)",30,null],[13,"Fleur","","![](fleur.png)",30,null],[13,"Gobbler","","![](gobbler.png)",30,null],[13,"Gumby","","![](gumby.png)",30,null],[13,"Hand1","","![](hand1.png)",30,null],[13,"Hand2","","![](hand2.png)",30,null],[13,"Heart","","![](heart.png)",30,null],[13,"Icon","","![](icon.png)",30,null],[13,"IronCross","","![](iron_cross.png)",30,null],[13,"LeftPtr","","![](left_ptr.png)",30,null],[13,"LeftSide","","![](left_side.png)",30,null],[13,"LeftTee","","![](left_tee.png)",30,null],[13,"Leftbutton","","![](leftbutton.png)",30,null],[13,"LlAngle","","![](ll_angle.png)",30,null],[13,"LrAngle","","![](lr_angle.png)",30,null],[13,"Man","","![](man.png)",30,null],[13,"Middlebutton","","![](middlebutton.png)",30,null],[13,"Mouse","","![](mouse.png)",30,null],[13,"Pencil","","![](pencil.png)",30,null],[13,"Pirate","","![](pirate.png)",30,null],[13,"Plus","","![](plus.png)",30,null],[13,"QuestionArrow","","![](question_arrow.png)",30,null],[13,"RightPtr","","![](right_ptr.png)",30,null],[13,"RightSide","","![](right_side.png)",30,null],[13,"RightTee","","![](right_tee.png)",30,null],[13,"Rightbutton","","![](rightbutton.png)",30,null],[13,"RtlLogo","","![](rtl_logo.png)",30,null],[13,"Sailboat","","![](sailboat.png)",30,null],[13,"SbDownArrow","","![](sb_down_arrow.png)",30,null],[13,"SbHDoubleArrow","","![](sb_h_double_arrow.png)",30,null],[13,"SbLeftArrow","","![](sb_left_arrow.png)",30,null],[13,"SbRightArrow","","![](sb_right_arrow.png)",30,null],[13,"SbUpArrow","","![](sb_up_arrow.png)",30,null],[13,"SbVDoubleArrow","","![](sb_v_double_arrow.png)",30,null],[13,"Shuttle","","![](shuttle.png)",30,null],[13,"Sizing","","![](sizing.png)",30,null],[13,"Spider","","![](spider.png)",30,null],[13,"Spraycan","","![](spraycan.png)",30,null],[13,"Star","","![](star.png)",30,null],[13,"Target","","![](target.png)",30,null],[13,"Tcross","","![](tcross.png)",30,null],[13,"TopLeftArrow","","![](top_left_arrow.png)",30,null],[13,"TopLeftCorner","","![](top_left_corner.png)",30,null],[13,"TopRightCorner","","![](top_right_corner.png)",30,null],[13,"TopSide","","![](top_side.png)",30,null],[13,"TopTee","","![](top_tee.png)",30,null],[13,"Trek","","![](trek.png)",30,null],[13,"UlAngle","","![](ul_angle.png)",30,null],[13,"Umbrella","","![](umbrella.png)",30,null],[13,"UrAngle","","![](ur_angle.png)",30,null],[13,"Watch","","![](watch.png)",30,null],[13,"Xterm","","![](xterm.png)",30,null],[13,"LastCursor","","last cursor type",30,null],[13,"BlankCursor","","Blank cursor. Since 2.16",30,null],[13,"CursorIsPixmap","","type of cursors constructed with\n`Cursor::new_from_pixbuf`",30,null],[4,"GdkDeviceType","","Indicates the device type. See [above][`DeviceManager`.description]\nfor more information about the meaning of these device types.",null,null],[13,"Master","","Device is a master (or virtual) device. There will\nbe an associated focus indicator on the screen.",31,null],[13,"Slave","","Device is a slave (or physical) device.",31,null],[13,"Floating","","Device is a physical device, currently not attached to\nany virtual device.",31,null],[4,"GdkDragProtocol","","Used in `DragContext` to indicate the protocol according to\nwhich DND is done.",null,null],[13,"None","","no protocol.",32,null],[13,"Motif","","The Motif DND protocol. No longer supported",32,null],[13,"Xdnd","","The Xdnd protocol.",32,null],[13,"Rootwin","","An extension to the Xdnd protocol for\nunclaimed root window drops.",32,null],[13,"Win32Dropfiles","","The simple WM_DROPFILES protocol.",32,null],[13,"Ole2","","The complex OLE2 DND protocol (not implemented).",32,null],[13,"Local","","Intra-application DND.",32,null],[13,"Wayland","","Wayland DND protocol.",32,null],[4,"GdkEventType","","Specifies the type of the event.",null,null],[13,"Nothing","","a special code to indicate a null event.",33,null],[13,"Delete","","the window manager has requested that the toplevel window be\nhidden or destroyed, usually when the user clicks on a special icon in the\ntitle bar.",33,null],[13,"Destroy","","the window has been destroyed.",33,null],[13,"Expose","","all or part of the window has become visible and needs to be\nredrawn.",33,null],[13,"MotionNotify","","the pointer (usually a mouse) has moved.",33,null],[13,"ButtonPress","","a mouse button has been pressed.",33,null],[13,"DoubleButtonPress","","alias for `EventType::2buttonPress`, added in 3.6.",33,null],[13,"TripleButtonPress","","alias for `EventType::3buttonPress`, added in 3.6.",33,null],[13,"ButtonRelease","","a mouse button has been released.",33,null],[13,"KeyPress","","a key has been pressed.",33,null],[13,"KeyRelease","","a key has been released.",33,null],[13,"EnterNotify","","the pointer has entered the window.",33,null],[13,"LeaveNotify","","the pointer has left the window.",33,null],[13,"FocusChange","","the keyboard focus has entered or left the window.",33,null],[13,"Configure","","the size, position or stacking order of the window has changed.\nNote that GTK+ discards these events for `WindowType::Child` windows.",33,null],[13,"Map","","the window has been mapped.",33,null],[13,"Unmap","","the window has been unmapped.",33,null],[13,"PropertyNotify","","a property on the window has been changed or deleted.",33,null],[13,"SelectionClear","","the application has lost ownership of a selection.",33,null],[13,"SelectionRequest","","another application has requested a selection.",33,null],[13,"SelectionNotify","","a selection has been received.",33,null],[13,"ProximityIn","","an input device has moved into contact with a sensing\nsurface (e.g. a touchscreen or graphics tablet).",33,null],[13,"ProximityOut","","an input device has moved out of contact with a sensing\nsurface.",33,null],[13,"DragEnter","","the mouse has entered the window while a drag is in progress.",33,null],[13,"DragLeave","","the mouse has left the window while a drag is in progress.",33,null],[13,"DragMotion","","the mouse has moved in the window while a drag is in\nprogress.",33,null],[13,"DragStatus","","the status of the drag operation initiated by the window\nhas changed.",33,null],[13,"DropStart","","a drop operation onto the window has started.",33,null],[13,"DropFinished","","the drop operation initiated by the window has completed.",33,null],[13,"ClientEvent","","a message has been received from another application.",33,null],[13,"VisibilityNotify","","the window visibility status has changed.",33,null],[13,"Scroll","","the scroll wheel was turned",33,null],[13,"WindowState","","the state of a window has changed. See `WindowState`\nfor the possible window states",33,null],[13,"Setting","","a setting has been modified.",33,null],[13,"OwnerChange","","the owner of a selection has changed. This event type\nwas added in 2.6",33,null],[13,"GrabBroken","","a pointer or keyboard grab was broken. This event type\nwas added in 2.8.",33,null],[13,"Damage","","the content of the window has been changed. This event type\nwas added in 2.14.",33,null],[13,"TouchBegin","","A new touch event sequence has just started. This event\ntype was added in 3.4.",33,null],[13,"TouchUpdate","","A touch event sequence has been updated. This event type\nwas added in 3.4.",33,null],[13,"TouchEnd","","A touch event sequence has finished. This event type\nwas added in 3.4.",33,null],[13,"TouchCancel","","A touch event sequence has been canceled. This event type\nwas added in 3.4.",33,null],[4,"GdkFilterReturn","","Specifies the result of applying a ``GdkFilterFunc`` to a native event.",null,null],[13,"Continue","","event not handled, continue processing.",34,null],[13,"Translate","","native event translated into a GDK event and stored\nin the `event` structure that was passed in.",34,null],[13,"Remove","","event handled, terminate processing.",34,null],[4,"GdkFullscreenMode","","Indicates which monitor (in a multi-head setup) a window should span over\nwhen in fullscreen mode.",null,null],[13,"CurrentMonitor","","Fullscreen on current monitor only.",35,null],[13,"AllMonitors","","Span across all monitors when fullscreen.",35,null],[4,"GdkGLError","","Error enumeration for `GLContext`.",null,null],[13,"NotAvailable","","OpenGL support is not available",36,null],[13,"UnsupportedFormat","","The requested visual format is not supported",36,null],[13,"UnsupportedProfile","","The requested profile is not supported",36,null],[4,"GdkGrabOwnership","","Defines how device grabs interact with other devices.",null,null],[13,"None","","All other devices’ events are allowed.",37,null],[13,"Window","","Other devices’ events are blocked for the grab window.",37,null],[13,"Application","","Other devices’ events are blocked for the whole application.",37,null],[4,"GdkGrabStatus","","Returned by `Device::grab`, `gdk_pointer_grab` and `gdk_keyboard_grab` to\nindicate success or the reason for the failure of the grab attempt.",null,null],[13,"Success","","the resource was successfully grabbed.",38,null],[13,"AlreadyGrabbed","","the resource is actively grabbed by another client.",38,null],[13,"InvalidTime","","the resource was grabbed more recently than the\nspecified time.",38,null],[13,"NotViewable","","the grab window or the `confine_to` window are not\nviewable.",38,null],[13,"Frozen","","the resource is frozen by an active grab of another client.",38,null],[13,"Failed","","the grab failed for some other reason.",38,null],[4,"GdkGravity","","Defines the reference point of a window and the meaning of coordinates\npassed to `gtk_window_move`. See `gtk_window_move` and the &quot;implementation\nnotes&quot; section of the\n[Extended Window Manager Hints](http://www.freedesktop.org/Standards/wm-spec)\nspecification for more details.",null,null],[13,"NorthWest","","the reference point is at the top left corner.",39,null],[13,"North","","the reference point is in the middle of the top edge.",39,null],[13,"NorthEast","","the reference point is at the top right corner.",39,null],[13,"West","","the reference point is at the middle of the left edge.",39,null],[13,"Center","","the reference point is at the center of the window.",39,null],[13,"East","","the reference point is at the middle of the right edge.",39,null],[13,"SouthWest","","the reference point is at the lower left corner.",39,null],[13,"South","","the reference point is at the middle of the lower edge.",39,null],[13,"SouthEast","","the reference point is at the lower right corner.",39,null],[13,"Static","","the reference point is at the top left corner of the\nwindow itself, ignoring window manager decorations.",39,null],[4,"GdkInputMode","","An enumeration that describes the mode of an input device.",null,null],[13,"Disabled","","the device is disabled and will not report any events.",40,null],[13,"Screen","","the device is enabled. The device’s coordinate space\nmaps to the entire screen.",40,null],[13,"Window","","the device is enabled. The device’s coordinate space\nis mapped to a single window. The manner in which this window\nis chosen is undefined, but it will typically be the same\nway in which the focus window for key events is determined.",40,null],[4,"GdkInputSource","","An enumeration describing the type of an input device in general terms.",null,null],[13,"Mouse","","the device is a mouse. (This will be reported for the core\npointer, even if it is something else, such as a trackball.)",41,null],[13,"Pen","","the device is a stylus of a graphics tablet or similar device.",41,null],[13,"Eraser","","the device is an eraser. Typically, this would be the other end\nof a stylus on a graphics tablet.",41,null],[13,"Cursor","","the device is a graphics tablet “puck” or similar device.",41,null],[13,"Keyboard","","the device is a keyboard.",41,null],[13,"Touchscreen","","the device is a direct-input touch device, such\nas a touchscreen or tablet. This device type has been added in 3.4.",41,null],[13,"Touchpad","","the device is an indirect touch device, such\nas a touchpad. This device type has been added in 3.4.",41,null],[4,"GdkModifierIntent","","This enum is used with `Keymap::get_modifier_mask`\nin order to determine what modifiers the\ncurrently used windowing system backend uses for particular\npurposes. For example, on X11/Windows, the Control key is used for\ninvoking menu shortcuts (accelerators), whereas on Apple computers\nit’s the Command key (which correspond to `ModifierType::ControlMask` and\n`ModifierType::Mod2Mask`, respectively).",null,null],[13,"PrimaryAccelerator","","the primary modifier used to invoke\nmenu accelerators.",42,null],[13,"ContextMenu","","the modifier used to invoke context menus.\nNote that mouse button 3 always triggers context menus. When this modifier\nis not 0, it additionally triggers context menus when used with mouse button 1.",42,null],[13,"ExtendSelection","","the modifier used to extend selections\nusing `modifier`-click or `modifier`-cursor-key",42,null],[13,"ModifySelection","","the modifier used to modify selections,\nwhich in most cases means toggling the clicked item into or out of the selection.",42,null],[13,"NoTextInput","","when any of these modifiers is pressed, the\nkey event cannot produce a symbol directly. This is meant to be used for\ninput methods, and for use cases like typeahead search.",42,null],[13,"ShiftGroup","","the modifier that switches between keyboard\ngroups (AltGr on X11/Windows and Option/Alt on OS X).",42,null],[4,"GdkNotifyType","","Specifies the kind of crossing for `EventCrossing`.",null,null],[13,"Ancestor","","the window is entered from an ancestor or\nleft towards an ancestor.",43,null],[13,"Virtual","","the pointer moves between an ancestor and an\ninferior of the window.",43,null],[13,"Inferior","","the window is entered from an inferior or\nleft towards an inferior.",43,null],[13,"Nonlinear","","the window is entered from or left towards\na window which is neither an ancestor nor an inferior.",43,null],[13,"NonlinearVirtual","","the pointer moves between two windows\nwhich are not ancestors of each other and the window is part of\nthe ancestor chain between one of these windows and their least\ncommon ancestor.",43,null],[13,"Unknown","","an unknown type of enter/leave event occurred.",43,null],[4,"GdkOwnerChange","","Specifies why a selection ownership was changed.",null,null],[13,"NewOwner","","some other app claimed the ownership",44,null],[13,"Destroy","","the window was destroyed",44,null],[13,"Close","","the client was closed",44,null],[4,"GdkPropMode","","Describes how existing data is combined with new data when\nusing `gdk_property_change`.",null,null],[13,"Replace","","the new data replaces the existing data.",45,null],[13,"Prepend","","the new data is prepended to the existing data.",45,null],[13,"Append","","the new data is appended to the existing data.",45,null],[4,"GdkPropertyState","","Specifies the type of a property change for a `EventProperty`.",null,null],[13,"NewValue","","the property value was changed.",46,null],[13,"Delete","","the property was deleted.",46,null],[4,"GdkScrollDirection","","Specifies the direction for `EventScroll`.",null,null],[13,"Up","","the window is scrolled up.",47,null],[13,"Down","","the window is scrolled down.",47,null],[13,"Left","","the window is scrolled to the left.",47,null],[13,"Right","","the window is scrolled to the right.",47,null],[13,"Smooth","","the scrolling is determined by the delta values\nin `EventScroll`. See `gdk_event_get_scroll_deltas`. Since: 3.4",47,null],[4,"GdkSettingAction","","Specifies the kind of modification applied to a setting in a\n`EventSetting`.",null,null],[13,"New","","a setting was added.",48,null],[13,"Changed","","a setting was changed.",48,null],[13,"Deleted","","a setting was deleted.",48,null],[4,"GdkStatus","","",null,null],[13,"Ok","","",49,null],[13,"Error","","",49,null],[13,"ErrorParam","","",49,null],[13,"ErrorFile","","",49,null],[13,"ErrorMem","","",49,null],[4,"GdkVisibilityState","","Specifies the visiblity status of a window for a `EventVisibility`.",null,null],[13,"Unobscured","","the window is completely visible.",50,null],[13,"Partial","","the window is partially visible.",50,null],[13,"FullyObscured","","the window is not visible at all.",50,null],[4,"GdkVisualType","","A set of values that describe the manner in which the pixel values\nfor a visual are converted into RGB values for display.",null,null],[13,"StaticGray","","Each pixel value indexes a grayscale value\ndirectly.",51,null],[13,"Grayscale","","Each pixel is an index into a color map that\nmaps pixel values into grayscale values. The color map can be\nchanged by an application.",51,null],[13,"StaticColor","","Each pixel value is an index into a predefined,\nunmodifiable color map that maps pixel values into RGB values.",51,null],[13,"PseudoColor","","Each pixel is an index into a color map that\nmaps pixel values into rgb values. The color map can be changed by\nan application.",51,null],[13,"TrueColor","","Each pixel value directly contains red, green,\nand blue components. Use `Visual::get_red_pixel_details`, etc,\nto obtain information about how the components are assembled into\na pixel value.",51,null],[13,"DirectColor","","Each pixel value contains red, green, and blue\ncomponents as for `VisualType::TrueColor`, but the components are\nmapped via a color table into the final output table instead of\nbeing converted directly.",51,null],[4,"GdkWindowEdge","","Determines a window edge or corner.",null,null],[13,"NorthWest","","the top left corner.",52,null],[13,"North","","the top edge.",52,null],[13,"NorthEast","","the top right corner.",52,null],[13,"West","","the left edge.",52,null],[13,"East","","the right edge.",52,null],[13,"SouthWest","","the lower left corner.",52,null],[13,"South","","the lower edge.",52,null],[13,"SouthEast","","the lower right corner.",52,null],[4,"GdkWindowType","","Describes the kind of window.",null,null],[13,"Root","","root window; this window has no parent, covers the entire\nscreen, and is created by the window system",53,null],[13,"Toplevel","","toplevel window (used to implement ``GtkWindow``)",53,null],[13,"Child","","child window (used to implement e.g. ``GtkEntry``)",53,null],[13,"Temp","","override redirect temporary window (used to implement\n``GtkMenu``)",53,null],[13,"Foreign","","foreign window (see `gdk_window_foreign_new`)",53,null],[13,"Offscreen","","offscreen window (see\n[Offscreen Windows][OFFSCREEN-WINDOWS]). Since 2.18",53,null],[13,"Subsurface","","subsurface-based window; This window is visually\ntied to a toplevel, and is moved/stacked with it. Currently this window\ntype is only implemented in Wayland. Since 3.14",53,null],[4,"GdkWindowTypeHint","","These are hints for the window manager that indicate what type of function\nthe window has. The window manager can use this when determining decoration\nand behaviour of the window. The hint must be set before mapping the window.",null,null],[13,"Normal","","Normal toplevel window.",54,null],[13,"Dialog","","Dialog window.",54,null],[13,"Menu","","Window used to implement a menu; GTK+ uses\nthis hint only for torn-off menus, see ``GtkTearoffMenuItem``.",54,null],[13,"Toolbar","","Window used to implement toolbars.",54,null],[13,"Splashscreen","","Window used to display a splash\nscreen during application startup.",54,null],[13,"Utility","","Utility windows which are not detached\ntoolbars or dialogs.",54,null],[13,"Dock","","Used for creating dock or panel windows.",54,null],[13,"Desktop","","Used for creating the desktop background\nwindow.",54,null],[13,"DropdownMenu","","A menu that belongs to a menubar.",54,null],[13,"PopupMenu","","A menu that does not belong to a menubar,\ne.g. a context menu.",54,null],[13,"Tooltip","","A tooltip.",54,null],[13,"Notification","","A notification - typically a “bubble”\nthat belongs to a status icon.",54,null],[13,"Combo","","A popup from a combo box.",54,null],[13,"Dnd","","A window that is used to implement a DND cursor.",54,null],[4,"GdkWindowWindowClass","","`WindowWindowClass::InputOutput` windows are the standard kind of window you might expect.\nSuch windows receive events and are also displayed on screen.\n`WindowWindowClass::InputOnly` windows are invisible; they are usually placed above other\nwindows in order to trap or filter the events. You can’t draw on\n`WindowWindowClass::InputOnly` windows.",null,null],[13,"InputOutput","","window for graphics and events",55,null],[13,"InputOnly","","window for events only",55,null],[5,"gdk_gl_error_quark","","",null,null],[5,"gdk_event_new","","",null,null],[5,"gdk_event_copy","","",null,null],[5,"gdk_event_free","","",null,null],[5,"gdk_event_get_axis","","",null,null],[5,"gdk_event_get_button","","",null,null],[5,"gdk_event_get_click_count","","",null,null],[5,"gdk_event_get_coords","","",null,null],[5,"gdk_event_get_device","","",null,null],[5,"gdk_event_get_event_sequence","","",null,null],[5,"gdk_event_get_event_type","","",null,null],[5,"gdk_event_get_keycode","","",null,null],[5,"gdk_event_get_keyval","","",null,null],[5,"gdk_event_get_root_coords","","",null,null],[5,"gdk_event_get_screen","","",null,null],[5,"gdk_event_get_scroll_deltas","","",null,null],[5,"gdk_event_get_scroll_direction","","",null,null],[5,"gdk_event_get_source_device","","",null,null],[5,"gdk_event_get_state","","",null,null],[5,"gdk_event_get_time","","",null,null],[5,"gdk_event_get_window","","",null,null],[5,"gdk_event_put","","",null,null],[5,"gdk_event_set_device","","",null,null],[5,"gdk_event_set_screen","","",null,null],[5,"gdk_event_set_source_device","","",null,null],[5,"gdk_event_triggers_context_menu","","",null,null],[5,"gdk_event_get","","",null,null],[5,"gdk_event_handler_set","","",null,null],[5,"gdk_event_peek","","",null,null],[5,"gdk_event_request_motions","","",null,null],[5,"gdk_atom_name","","",null,null],[5,"gdk_atom_intern","","",null,null],[5,"gdk_atom_intern_static_string","","",null,null],[5,"gdk_color_get_type","","",null,null],[5,"gdk_color_copy","","",null,null],[5,"gdk_color_equal","","",null,null],[5,"gdk_color_free","","",null,null],[5,"gdk_color_hash","","",null,null],[5,"gdk_color_to_string","","",null,null],[5,"gdk_color_parse","","",null,null],[5,"gdk_event_sequence_get_type","","",null,null],[5,"gdk_frame_timings_get_type","","",null,null],[5,"gdk_frame_timings_get_complete","","",null,null],[5,"gdk_frame_timings_get_frame_counter","","",null,null],[5,"gdk_frame_timings_get_frame_time","","",null,null],[5,"gdk_frame_timings_get_predicted_presentation_time","","",null,null],[5,"gdk_frame_timings_get_presentation_time","","",null,null],[5,"gdk_frame_timings_get_refresh_interval","","",null,null],[5,"gdk_frame_timings_ref","","",null,null],[5,"gdk_frame_timings_unref","","",null,null],[5,"gdk_rgba_get_type","","",null,null],[5,"gdk_rgba_copy","","",null,null],[5,"gdk_rgba_equal","","",null,null],[5,"gdk_rgba_free","","",null,null],[5,"gdk_rgba_hash","","",null,null],[5,"gdk_rgba_parse","","",null,null],[5,"gdk_rgba_to_string","","",null,null],[5,"gdk_app_launch_context_get_type","","",null,null],[5,"gdk_app_launch_context_new","","",null,null],[5,"gdk_app_launch_context_set_desktop","","",null,null],[5,"gdk_app_launch_context_set_display","","",null,null],[5,"gdk_app_launch_context_set_icon","","",null,null],[5,"gdk_app_launch_context_set_icon_name","","",null,null],[5,"gdk_app_launch_context_set_screen","","",null,null],[5,"gdk_app_launch_context_set_timestamp","","",null,null],[5,"gdk_cursor_get_type","","",null,null],[5,"gdk_cursor_new","","",null,null],[5,"gdk_cursor_new_for_display","","",null,null],[5,"gdk_cursor_new_from_name","","",null,null],[5,"gdk_cursor_new_from_pixbuf","","",null,null],[5,"gdk_cursor_new_from_surface","","",null,null],[5,"gdk_cursor_get_cursor_type","","",null,null],[5,"gdk_cursor_get_display","","",null,null],[5,"gdk_cursor_get_image","","",null,null],[5,"gdk_cursor_get_surface","","",null,null],[5,"gdk_cursor_ref","","",null,null],[5,"gdk_cursor_unref","","",null,null],[5,"gdk_device_get_type","","",null,null],[5,"gdk_device_free_history","","",null,null],[5,"gdk_device_grab_info_libgtk_only","","",null,null],[5,"gdk_device_get_associated_device","","",null,null],[5,"gdk_device_get_axis","","",null,null],[5,"gdk_device_get_axis_use","","",null,null],[5,"gdk_device_get_axis_value","","",null,null],[5,"gdk_device_get_device_type","","",null,null],[5,"gdk_device_get_display","","",null,null],[5,"gdk_device_get_has_cursor","","",null,null],[5,"gdk_device_get_history","","",null,null],[5,"gdk_device_get_key","","",null,null],[5,"gdk_device_get_last_event_window","","",null,null],[5,"gdk_device_get_mode","","",null,null],[5,"gdk_device_get_n_axes","","",null,null],[5,"gdk_device_get_n_keys","","",null,null],[5,"gdk_device_get_name","","",null,null],[5,"gdk_device_get_position","","",null,null],[5,"gdk_device_get_position_double","","",null,null],[5,"gdk_device_get_product_id","","",null,null],[5,"gdk_device_get_source","","",null,null],[5,"gdk_device_get_state","","",null,null],[5,"gdk_device_get_vendor_id","","",null,null],[5,"gdk_device_get_window_at_position","","",null,null],[5,"gdk_device_get_window_at_position_double","","",null,null],[5,"gdk_device_grab","","",null,null],[5,"gdk_device_list_axes","","",null,null],[5,"gdk_device_list_slave_devices","","",null,null],[5,"gdk_device_set_axis_use","","",null,null],[5,"gdk_device_set_key","","",null,null],[5,"gdk_device_set_mode","","",null,null],[5,"gdk_device_ungrab","","",null,null],[5,"gdk_device_warp","","",null,null],[5,"gdk_device_manager_get_type","","",null,null],[5,"gdk_device_manager_get_client_pointer","","",null,null],[5,"gdk_device_manager_get_display","","",null,null],[5,"gdk_device_manager_list_devices","","",null,null],[5,"gdk_display_get_type","","",null,null],[5,"gdk_display_get_default","","",null,null],[5,"gdk_display_open","","",null,null],[5,"gdk_display_open_default_libgtk_only","","",null,null],[5,"gdk_display_beep","","",null,null],[5,"gdk_display_close","","",null,null],[5,"gdk_display_device_is_grabbed","","",null,null],[5,"gdk_display_flush","","",null,null],[5,"gdk_display_get_app_launch_context","","",null,null],[5,"gdk_display_get_default_cursor_size","","",null,null],[5,"gdk_display_get_default_group","","",null,null],[5,"gdk_display_get_default_screen","","",null,null],[5,"gdk_display_get_device_manager","","",null,null],[5,"gdk_display_get_event","","",null,null],[5,"gdk_display_get_maximal_cursor_size","","",null,null],[5,"gdk_display_get_n_screens","","",null,null],[5,"gdk_display_get_name","","",null,null],[5,"gdk_display_get_pointer","","",null,null],[5,"gdk_display_get_screen","","",null,null],[5,"gdk_display_get_window_at_pointer","","",null,null],[5,"gdk_display_has_pending","","",null,null],[5,"gdk_display_is_closed","","",null,null],[5,"gdk_display_keyboard_ungrab","","",null,null],[5,"gdk_display_list_devices","","",null,null],[5,"gdk_display_notify_startup_complete","","",null,null],[5,"gdk_display_peek_event","","",null,null],[5,"gdk_display_pointer_is_grabbed","","",null,null],[5,"gdk_display_pointer_ungrab","","",null,null],[5,"gdk_display_put_event","","",null,null],[5,"gdk_display_request_selection_notification","","",null,null],[5,"gdk_display_set_double_click_distance","","",null,null],[5,"gdk_display_set_double_click_time","","",null,null],[5,"gdk_display_store_clipboard","","",null,null],[5,"gdk_display_supports_clipboard_persistence","","",null,null],[5,"gdk_display_supports_composite","","",null,null],[5,"gdk_display_supports_cursor_alpha","","",null,null],[5,"gdk_display_supports_cursor_color","","",null,null],[5,"gdk_display_supports_input_shapes","","",null,null],[5,"gdk_display_supports_selection_notification","","",null,null],[5,"gdk_display_supports_shapes","","",null,null],[5,"gdk_display_sync","","",null,null],[5,"gdk_display_warp_pointer","","",null,null],[5,"gdk_display_manager_get_type","","",null,null],[5,"gdk_display_manager_get","","",null,null],[5,"gdk_display_manager_get_default_display","","",null,null],[5,"gdk_display_manager_list_displays","","",null,null],[5,"gdk_display_manager_open_display","","",null,null],[5,"gdk_display_manager_set_default_display","","",null,null],[5,"gdk_drag_context_get_type","","",null,null],[5,"gdk_drag_context_get_actions","","",null,null],[5,"gdk_drag_context_get_dest_window","","",null,null],[5,"gdk_drag_context_get_device","","",null,null],[5,"gdk_drag_context_get_protocol","","",null,null],[5,"gdk_drag_context_get_selected_action","","",null,null],[5,"gdk_drag_context_get_source_window","","",null,null],[5,"gdk_drag_context_get_suggested_action","","",null,null],[5,"gdk_drag_context_list_targets","","",null,null],[5,"gdk_drag_context_set_device","","",null,null],[5,"gdk_frame_clock_get_type","","",null,null],[5,"gdk_frame_clock_begin_updating","","",null,null],[5,"gdk_frame_clock_end_updating","","",null,null],[5,"gdk_frame_clock_get_current_timings","","",null,null],[5,"gdk_frame_clock_get_frame_counter","","",null,null],[5,"gdk_frame_clock_get_frame_time","","",null,null],[5,"gdk_frame_clock_get_history_start","","",null,null],[5,"gdk_frame_clock_get_refresh_info","","",null,null],[5,"gdk_frame_clock_get_timings","","",null,null],[5,"gdk_frame_clock_request_phase","","",null,null],[5,"gdk_gl_context_get_type","","",null,null],[5,"gdk_gl_context_clear_current","","",null,null],[5,"gdk_gl_context_get_current","","",null,null],[5,"gdk_gl_context_get_debug_enabled","","",null,null],[5,"gdk_gl_context_get_display","","",null,null],[5,"gdk_gl_context_get_forward_compatible","","",null,null],[5,"gdk_gl_context_get_required_version","","",null,null],[5,"gdk_gl_context_get_shared_context","","",null,null],[5,"gdk_gl_context_get_version","","",null,null],[5,"gdk_gl_context_get_window","","",null,null],[5,"gdk_gl_context_make_current","","",null,null],[5,"gdk_gl_context_realize","","",null,null],[5,"gdk_gl_context_set_debug_enabled","","",null,null],[5,"gdk_gl_context_set_forward_compatible","","",null,null],[5,"gdk_gl_context_set_required_version","","",null,null],[5,"gdk_keymap_get_type","","",null,null],[5,"gdk_keymap_get_default","","",null,null],[5,"gdk_keymap_get_for_display","","",null,null],[5,"gdk_keymap_add_virtual_modifiers","","",null,null],[5,"gdk_keymap_get_caps_lock_state","","",null,null],[5,"gdk_keymap_get_direction","","",null,null],[5,"gdk_keymap_get_entries_for_keycode","","",null,null],[5,"gdk_keymap_get_entries_for_keyval","","",null,null],[5,"gdk_keymap_get_modifier_mask","","",null,null],[5,"gdk_keymap_get_modifier_state","","",null,null],[5,"gdk_keymap_get_num_lock_state","","",null,null],[5,"gdk_keymap_have_bidi_layouts","","",null,null],[5,"gdk_keymap_lookup_key","","",null,null],[5,"gdk_keymap_map_virtual_modifiers","","",null,null],[5,"gdk_keymap_translate_keyboard_state","","",null,null],[5,"gdk_screen_get_type","","",null,null],[5,"gdk_screen_get_default","","",null,null],[5,"gdk_screen_height","","",null,null],[5,"gdk_screen_height_mm","","",null,null],[5,"gdk_screen_width","","",null,null],[5,"gdk_screen_width_mm","","",null,null],[5,"gdk_screen_get_active_window","","",null,null],[5,"gdk_screen_get_display","","",null,null],[5,"gdk_screen_get_font_options","","",null,null],[5,"gdk_screen_get_height","","",null,null],[5,"gdk_screen_get_height_mm","","",null,null],[5,"gdk_screen_get_monitor_at_point","","",null,null],[5,"gdk_screen_get_monitor_at_window","","",null,null],[5,"gdk_screen_get_monitor_geometry","","",null,null],[5,"gdk_screen_get_monitor_height_mm","","",null,null],[5,"gdk_screen_get_monitor_plug_name","","",null,null],[5,"gdk_screen_get_monitor_scale_factor","","",null,null],[5,"gdk_screen_get_monitor_width_mm","","",null,null],[5,"gdk_screen_get_monitor_workarea","","",null,null],[5,"gdk_screen_get_n_monitors","","",null,null],[5,"gdk_screen_get_number","","",null,null],[5,"gdk_screen_get_primary_monitor","","",null,null],[5,"gdk_screen_get_resolution","","",null,null],[5,"gdk_screen_get_rgba_visual","","",null,null],[5,"gdk_screen_get_root_window","","",null,null],[5,"gdk_screen_get_setting","","",null,null],[5,"gdk_screen_get_system_visual","","",null,null],[5,"gdk_screen_get_toplevel_windows","","",null,null],[5,"gdk_screen_get_width","","",null,null],[5,"gdk_screen_get_width_mm","","",null,null],[5,"gdk_screen_get_window_stack","","",null,null],[5,"gdk_screen_is_composited","","",null,null],[5,"gdk_screen_list_visuals","","",null,null],[5,"gdk_screen_make_display_name","","",null,null],[5,"gdk_screen_set_font_options","","",null,null],[5,"gdk_screen_set_resolution","","",null,null],[5,"gdk_visual_get_type","","",null,null],[5,"gdk_visual_get_best","","",null,null],[5,"gdk_visual_get_best_depth","","",null,null],[5,"gdk_visual_get_best_type","","",null,null],[5,"gdk_visual_get_best_with_both","","",null,null],[5,"gdk_visual_get_best_with_depth","","",null,null],[5,"gdk_visual_get_best_with_type","","",null,null],[5,"gdk_visual_get_system","","",null,null],[5,"gdk_visual_get_bits_per_rgb","","",null,null],[5,"gdk_visual_get_blue_pixel_details","","",null,null],[5,"gdk_visual_get_byte_order","","",null,null],[5,"gdk_visual_get_colormap_size","","",null,null],[5,"gdk_visual_get_depth","","",null,null],[5,"gdk_visual_get_green_pixel_details","","",null,null],[5,"gdk_visual_get_red_pixel_details","","",null,null],[5,"gdk_visual_get_screen","","",null,null],[5,"gdk_visual_get_visual_type","","",null,null],[5,"gdk_window_get_type","","",null,null],[5,"gdk_window_new","","",null,null],[5,"gdk_window_at_pointer","","",null,null],[5,"gdk_window_constrain_size","","",null,null],[5,"gdk_window_process_all_updates","","",null,null],[5,"gdk_window_set_debug_updates","","",null,null],[5,"gdk_window_add_filter","","",null,null],[5,"gdk_window_beep","","",null,null],[5,"gdk_window_begin_move_drag","","",null,null],[5,"gdk_window_begin_move_drag_for_device","","",null,null],[5,"gdk_window_begin_paint_rect","","",null,null],[5,"gdk_window_begin_paint_region","","",null,null],[5,"gdk_window_begin_resize_drag","","",null,null],[5,"gdk_window_begin_resize_drag_for_device","","",null,null],[5,"gdk_window_configure_finished","","",null,null],[5,"gdk_window_coords_from_parent","","",null,null],[5,"gdk_window_coords_to_parent","","",null,null],[5,"gdk_window_create_gl_context","","",null,null],[5,"gdk_window_create_similar_image_surface","","",null,null],[5,"gdk_window_create_similar_surface","","",null,null],[5,"gdk_window_deiconify","","",null,null],[5,"gdk_window_destroy","","",null,null],[5,"gdk_window_destroy_notify","","",null,null],[5,"gdk_window_enable_synchronized_configure","","",null,null],[5,"gdk_window_end_paint","","",null,null],[5,"gdk_window_ensure_native","","",null,null],[5,"gdk_window_flush","","",null,null],[5,"gdk_window_focus","","",null,null],[5,"gdk_window_freeze_toplevel_updates_libgtk_only","","",null,null],[5,"gdk_window_freeze_updates","","",null,null],[5,"gdk_window_fullscreen","","",null,null],[5,"gdk_window_geometry_changed","","",null,null],[5,"gdk_window_get_accept_focus","","",null,null],[5,"gdk_window_get_background_pattern","","",null,null],[5,"gdk_window_get_children","","",null,null],[5,"gdk_window_get_children_with_user_data","","",null,null],[5,"gdk_window_get_clip_region","","",null,null],[5,"gdk_window_get_composited","","",null,null],[5,"gdk_window_get_cursor","","",null,null],[5,"gdk_window_get_decorations","","",null,null],[5,"gdk_window_get_device_cursor","","",null,null],[5,"gdk_window_get_device_events","","",null,null],[5,"gdk_window_get_device_position","","",null,null],[5,"gdk_window_get_device_position_double","","",null,null],[5,"gdk_window_get_display","","",null,null],[5,"gdk_window_get_drag_protocol","","",null,null],[5,"gdk_window_get_effective_parent","","",null,null],[5,"gdk_window_get_effective_toplevel","","",null,null],[5,"gdk_window_get_event_compression","","",null,null],[5,"gdk_window_get_events","","",null,null],[5,"gdk_window_get_focus_on_map","","",null,null],[5,"gdk_window_get_frame_clock","","",null,null],[5,"gdk_window_get_frame_extents","","",null,null],[5,"gdk_window_get_fullscreen_mode","","",null,null],[5,"gdk_window_get_geometry","","",null,null],[5,"gdk_window_get_group","","",null,null],[5,"gdk_window_get_height","","",null,null],[5,"gdk_window_get_modal_hint","","",null,null],[5,"gdk_window_get_origin","","",null,null],[5,"gdk_window_get_parent","","",null,null],[5,"gdk_window_get_pointer","","",null,null],[5,"gdk_window_get_position","","",null,null],[5,"gdk_window_get_root_coords","","",null,null],[5,"gdk_window_get_root_origin","","",null,null],[5,"gdk_window_get_scale_factor","","",null,null],[5,"gdk_window_get_screen","","",null,null],[5,"gdk_window_get_source_events","","",null,null],[5,"gdk_window_get_state","","",null,null],[5,"gdk_window_get_support_multidevice","","",null,null],[5,"gdk_window_get_toplevel","","",null,null],[5,"gdk_window_get_type_hint","","",null,null],[5,"gdk_window_get_update_area","","",null,null],[5,"gdk_window_get_user_data","","",null,null],[5,"gdk_window_get_visible_region","","",null,null],[5,"gdk_window_get_visual","","",null,null],[5,"gdk_window_get_width","","",null,null],[5,"gdk_window_get_window_type","","",null,null],[5,"gdk_window_has_native","","",null,null],[5,"gdk_window_hide","","",null,null],[5,"gdk_window_iconify","","",null,null],[5,"gdk_window_input_shape_combine_region","","",null,null],[5,"gdk_window_invalidate_maybe_recurse","","",null,null],[5,"gdk_window_invalidate_rect","","",null,null],[5,"gdk_window_invalidate_region","","",null,null],[5,"gdk_window_is_destroyed","","",null,null],[5,"gdk_window_is_input_only","","",null,null],[5,"gdk_window_is_shaped","","",null,null],[5,"gdk_window_is_viewable","","",null,null],[5,"gdk_window_is_visible","","",null,null],[5,"gdk_window_lower","","",null,null],[5,"gdk_window_mark_paint_from_clip","","",null,null],[5,"gdk_window_maximize","","",null,null],[5,"gdk_window_merge_child_input_shapes","","",null,null],[5,"gdk_window_merge_child_shapes","","",null,null],[5,"gdk_window_move","","",null,null],[5,"gdk_window_move_region","","",null,null],[5,"gdk_window_move_resize","","",null,null],[5,"gdk_window_peek_children","","",null,null],[5,"gdk_window_process_updates","","",null,null],[5,"gdk_window_raise","","",null,null],[5,"gdk_window_register_dnd","","",null,null],[5,"gdk_window_remove_filter","","",null,null],[5,"gdk_window_reparent","","",null,null],[5,"gdk_window_resize","","",null,null],[5,"gdk_window_restack","","",null,null],[5,"gdk_window_scroll","","",null,null],[5,"gdk_window_set_accept_focus","","",null,null],[5,"gdk_window_set_background","","",null,null],[5,"gdk_window_set_background_pattern","","",null,null],[5,"gdk_window_set_background_rgba","","",null,null],[5,"gdk_window_set_child_input_shapes","","",null,null],[5,"gdk_window_set_child_shapes","","",null,null],[5,"gdk_window_set_composited","","",null,null],[5,"gdk_window_set_cursor","","",null,null],[5,"gdk_window_set_decorations","","",null,null],[5,"gdk_window_set_device_cursor","","",null,null],[5,"gdk_window_set_device_events","","",null,null],[5,"gdk_window_set_event_compression","","",null,null],[5,"gdk_window_set_events","","",null,null],[5,"gdk_window_set_focus_on_map","","",null,null],[5,"gdk_window_set_fullscreen_mode","","",null,null],[5,"gdk_window_set_functions","","",null,null],[5,"gdk_window_set_geometry_hints","","",null,null],[5,"gdk_window_set_group","","",null,null],[5,"gdk_window_set_icon_list","","",null,null],[5,"gdk_window_set_icon_name","","",null,null],[5,"gdk_window_set_invalidate_handler","","",null,null],[5,"gdk_window_set_keep_above","","",null,null],[5,"gdk_window_set_keep_below","","",null,null],[5,"gdk_window_set_modal_hint","","",null,null],[5,"gdk_window_set_opacity","","",null,null],[5,"gdk_window_set_opaque_region","","",null,null],[5,"gdk_window_set_override_redirect","","",null,null],[5,"gdk_window_set_role","","",null,null],[5,"gdk_window_set_shadow_width","","",null,null],[5,"gdk_window_set_skip_pager_hint","","",null,null],[5,"gdk_window_set_skip_taskbar_hint","","",null,null],[5,"gdk_window_set_source_events","","",null,null],[5,"gdk_window_set_startup_id","","",null,null],[5,"gdk_window_set_static_gravities","","",null,null],[5,"gdk_window_set_support_multidevice","","",null,null],[5,"gdk_window_set_title","","",null,null],[5,"gdk_window_set_transient_for","","",null,null],[5,"gdk_window_set_type_hint","","",null,null],[5,"gdk_window_set_urgency_hint","","",null,null],[5,"gdk_window_set_user_data","","",null,null],[5,"gdk_window_shape_combine_region","","",null,null],[5,"gdk_window_show","","",null,null],[5,"gdk_window_show_unraised","","",null,null],[5,"gdk_window_show_window_menu","","",null,null],[5,"gdk_window_stick","","",null,null],[5,"gdk_window_thaw_toplevel_updates_libgtk_only","","",null,null],[5,"gdk_window_thaw_updates","","",null,null],[5,"gdk_window_unfullscreen","","",null,null],[5,"gdk_window_unmaximize","","",null,null],[5,"gdk_window_unstick","","",null,null],[5,"gdk_window_withdraw","","",null,null],[5,"gdk_add_option_entries_libgtk_only","","",null,null],[5,"gdk_beep","","",null,null],[5,"gdk_cairo_create","","",null,null],[5,"gdk_cairo_draw_from_gl","","",null,null],[5,"gdk_cairo_get_clip_rectangle","","",null,null],[5,"gdk_cairo_rectangle","","",null,null],[5,"gdk_cairo_region","","",null,null],[5,"gdk_cairo_region_create_from_surface","","",null,null],[5,"gdk_cairo_set_source_color","","",null,null],[5,"gdk_cairo_set_source_pixbuf","","",null,null],[5,"gdk_cairo_set_source_rgba","","",null,null],[5,"gdk_cairo_set_source_window","","",null,null],[5,"gdk_cairo_surface_create_from_pixbuf","","",null,null],[5,"gdk_disable_multidevice","","",null,null],[5,"gdk_drag_abort","","",null,null],[5,"gdk_drag_begin","","",null,null],[5,"gdk_drag_begin_for_device","","",null,null],[5,"gdk_drag_drop","","",null,null],[5,"gdk_drag_drop_succeeded","","",null,null],[5,"gdk_drag_find_window_for_screen","","",null,null],[5,"gdk_drag_get_selection","","",null,null],[5,"gdk_drag_motion","","",null,null],[5,"gdk_drag_status","","",null,null],[5,"gdk_drop_finish","","",null,null],[5,"gdk_drop_reply","","",null,null],[5,"gdk_error_trap_pop","","",null,null],[5,"gdk_error_trap_pop_ignored","","",null,null],[5,"gdk_error_trap_push","","",null,null],[5,"gdk_events_get_angle","","",null,null],[5,"gdk_events_get_center","","",null,null],[5,"gdk_events_get_distance","","",null,null],[5,"gdk_events_pending","","",null,null],[5,"gdk_flush","","",null,null],[5,"gdk_get_default_root_window","","",null,null],[5,"gdk_get_display","","",null,null],[5,"gdk_get_display_arg_name","","",null,null],[5,"gdk_get_program_class","","",null,null],[5,"gdk_get_show_events","","",null,null],[5,"gdk_init","","",null,null],[5,"gdk_init_check","","",null,null],[5,"gdk_keyboard_grab","","",null,null],[5,"gdk_keyboard_ungrab","","",null,null],[5,"gdk_keyval_convert_case","","",null,null],[5,"gdk_keyval_from_name","","",null,null],[5,"gdk_keyval_is_lower","","",null,null],[5,"gdk_keyval_is_upper","","",null,null],[5,"gdk_keyval_name","","",null,null],[5,"gdk_keyval_to_lower","","",null,null],[5,"gdk_keyval_to_unicode","","",null,null],[5,"gdk_keyval_to_upper","","",null,null],[5,"gdk_list_visuals","","",null,null],[5,"gdk_notify_startup_complete","","",null,null],[5,"gdk_notify_startup_complete_with_id","","",null,null],[5,"gdk_offscreen_window_get_embedder","","",null,null],[5,"gdk_offscreen_window_get_surface","","",null,null],[5,"gdk_offscreen_window_set_embedder","","",null,null],[5,"gdk_pango_context_get","","",null,null],[5,"gdk_pango_context_get_for_screen","","",null,null],[5,"gdk_pango_layout_get_clip_region","","",null,null],[5,"gdk_pango_layout_line_get_clip_region","","",null,null],[5,"gdk_parse_args","","",null,null],[5,"gdk_pixbuf_get_from_surface","","",null,null],[5,"gdk_pixbuf_get_from_window","","",null,null],[5,"gdk_pointer_grab","","",null,null],[5,"gdk_pointer_is_grabbed","","",null,null],[5,"gdk_pointer_ungrab","","",null,null],[5,"gdk_pre_parse_libgtk_only","","",null,null],[5,"gdk_property_change","","",null,null],[5,"gdk_property_delete","","",null,null],[5,"gdk_property_get","","",null,null],[5,"gdk_query_depths","","",null,null],[5,"gdk_query_visual_types","","",null,null],[5,"gdk_rectangle_get_type","","",null,null],[5,"gdk_rectangle_intersect","","",null,null],[5,"gdk_rectangle_union","","",null,null],[5,"gdk_selection_convert","","",null,null],[5,"gdk_selection_owner_get","","",null,null],[5,"gdk_selection_owner_get_for_display","","",null,null],[5,"gdk_selection_owner_set","","",null,null],[5,"gdk_selection_owner_set_for_display","","",null,null],[5,"gdk_selection_property_get","","",null,null],[5,"gdk_selection_send_notify","","",null,null],[5,"gdk_selection_send_notify_for_display","","",null,null],[5,"gdk_set_allowed_backends","","",null,null],[5,"gdk_set_double_click_time","","",null,null],[5,"gdk_set_program_class","","",null,null],[5,"gdk_set_show_events","","",null,null],[5,"gdk_setting_get","","",null,null],[5,"gdk_synthesize_window_state","","",null,null],[5,"gdk_test_render_sync","","",null,null],[5,"gdk_test_simulate_button","","",null,null],[5,"gdk_test_simulate_key","","",null,null],[5,"gdk_text_property_to_utf8_list_for_display","","",null,null],[5,"gdk_threads_add_idle","","",null,null],[5,"gdk_threads_add_idle_full","","",null,null],[5,"gdk_threads_add_timeout","","",null,null],[5,"gdk_threads_add_timeout_full","","",null,null],[5,"gdk_threads_add_timeout_seconds","","",null,null],[5,"gdk_threads_add_timeout_seconds_full","","",null,null],[5,"gdk_threads_enter","","",null,null],[5,"gdk_threads_init","","",null,null],[5,"gdk_threads_leave","","",null,null],[5,"gdk_threads_set_lock_functions","","",null,null],[5,"gdk_unicode_to_keyval","","",null,null],[5,"gdk_utf8_to_string_target","","",null,null],[6,"GdkAtom","","",null,null],[6,"GdkRectangle","","",null,null],[6,"GdkXEvent","","",null,null],[6,"GdkEvent","","",null,null],[6,"GdkEventFunc","","",null,null],[6,"GdkFilterFunc","","",null,null],[6,"GdkWindowChildFunc","","",null,null],[6,"GdkWindowInvalidateHandlerFunc","","",null,null],[17,"GDK_AXIS_IGNORE","","",null,null],[17,"GDK_AXIS_X","","",null,null],[17,"GDK_AXIS_Y","","",null,null],[17,"GDK_AXIS_PRESSURE","","",null,null],[17,"GDK_AXIS_XTILT","","",null,null],[17,"GDK_AXIS_YTILT","","",null,null],[17,"GDK_AXIS_WHEEL","","",null,null],[17,"GDK_AXIS_LAST","","",null,null],[17,"GDK_LSB_FIRST","","",null,null],[17,"GDK_MSB_FIRST","","",null,null],[17,"GDK_CROSSING_NORMAL","","",null,null],[17,"GDK_CROSSING_GRAB","","",null,null],[17,"GDK_CROSSING_UNGRAB","","",null,null],[17,"GDK_CROSSING_GTK_GRAB","","",null,null],[17,"GDK_CROSSING_GTK_UNGRAB","","",null,null],[17,"GDK_CROSSING_STATE_CHANGED","","",null,null],[17,"GDK_CROSSING_TOUCH_BEGIN","","",null,null],[17,"GDK_CROSSING_TOUCH_END","","",null,null],[17,"GDK_CROSSING_DEVICE_SWITCH","","",null,null],[17,"GDK_X_CURSOR","","",null,null],[17,"GDK_ARROW","","",null,null],[17,"GDK_BASED_ARROW_DOWN","","",null,null],[17,"GDK_BASED_ARROW_UP","","",null,null],[17,"GDK_BOAT","","",null,null],[17,"GDK_BOGOSITY","","",null,null],[17,"GDK_BOTTOM_LEFT_CORNER","","",null,null],[17,"GDK_BOTTOM_RIGHT_CORNER","","",null,null],[17,"GDK_BOTTOM_SIDE","","",null,null],[17,"GDK_BOTTOM_TEE","","",null,null],[17,"GDK_BOX_SPIRAL","","",null,null],[17,"GDK_CENTER_PTR","","",null,null],[17,"GDK_CIRCLE","","",null,null],[17,"GDK_CLOCK","","",null,null],[17,"GDK_COFFEE_MUG","","",null,null],[17,"GDK_CROSS","","",null,null],[17,"GDK_CROSS_REVERSE","","",null,null],[17,"GDK_CROSSHAIR","","",null,null],[17,"GDK_DIAMOND_CROSS","","",null,null],[17,"GDK_DOT","","",null,null],[17,"GDK_DOTBOX","","",null,null],[17,"GDK_DOUBLE_ARROW","","",null,null],[17,"GDK_DRAFT_LARGE","","",null,null],[17,"GDK_DRAFT_SMALL","","",null,null],[17,"GDK_DRAPED_BOX","","",null,null],[17,"GDK_EXCHANGE","","",null,null],[17,"GDK_FLEUR","","",null,null],[17,"GDK_GOBBLER","","",null,null],[17,"GDK_GUMBY","","",null,null],[17,"GDK_HAND1","","",null,null],[17,"GDK_HAND2","","",null,null],[17,"GDK_HEART","","",null,null],[17,"GDK_ICON","","",null,null],[17,"GDK_IRON_CROSS","","",null,null],[17,"GDK_LEFT_PTR","","",null,null],[17,"GDK_LEFT_SIDE","","",null,null],[17,"GDK_LEFT_TEE","","",null,null],[17,"GDK_LEFTBUTTON","","",null,null],[17,"GDK_LL_ANGLE","","",null,null],[17,"GDK_LR_ANGLE","","",null,null],[17,"GDK_MAN","","",null,null],[17,"GDK_MIDDLEBUTTON","","",null,null],[17,"GDK_MOUSE","","",null,null],[17,"GDK_PENCIL","","",null,null],[17,"GDK_PIRATE","","",null,null],[17,"GDK_PLUS","","",null,null],[17,"GDK_QUESTION_ARROW","","",null,null],[17,"GDK_RIGHT_PTR","","",null,null],[17,"GDK_RIGHT_SIDE","","",null,null],[17,"GDK_RIGHT_TEE","","",null,null],[17,"GDK_RIGHTBUTTON","","",null,null],[17,"GDK_RTL_LOGO","","",null,null],[17,"GDK_SAILBOAT","","",null,null],[17,"GDK_SB_DOWN_ARROW","","",null,null],[17,"GDK_SB_H_DOUBLE_ARROW","","",null,null],[17,"GDK_SB_LEFT_ARROW","","",null,null],[17,"GDK_SB_RIGHT_ARROW","","",null,null],[17,"GDK_SB_UP_ARROW","","",null,null],[17,"GDK_SB_V_DOUBLE_ARROW","","",null,null],[17,"GDK_SHUTTLE","","",null,null],[17,"GDK_SIZING","","",null,null],[17,"GDK_SPIDER","","",null,null],[17,"GDK_SPRAYCAN","","",null,null],[17,"GDK_STAR","","",null,null],[17,"GDK_TARGET","","",null,null],[17,"GDK_TCROSS","","",null,null],[17,"GDK_TOP_LEFT_ARROW","","",null,null],[17,"GDK_TOP_LEFT_CORNER","","",null,null],[17,"GDK_TOP_RIGHT_CORNER","","",null,null],[17,"GDK_TOP_SIDE","","",null,null],[17,"GDK_TOP_TEE","","",null,null],[17,"GDK_TREK","","",null,null],[17,"GDK_UL_ANGLE","","",null,null],[17,"GDK_UMBRELLA","","",null,null],[17,"GDK_UR_ANGLE","","",null,null],[17,"GDK_WATCH","","",null,null],[17,"GDK_XTERM","","",null,null],[17,"GDK_LAST_CURSOR","","",null,null],[17,"GDK_BLANK_CURSOR","","",null,null],[17,"GDK_CURSOR_IS_PIXMAP","","",null,null],[17,"GDK_DEVICE_TYPE_MASTER","","",null,null],[17,"GDK_DEVICE_TYPE_SLAVE","","",null,null],[17,"GDK_DEVICE_TYPE_FLOATING","","",null,null],[17,"GDK_DRAG_PROTO_NONE","","",null,null],[17,"GDK_DRAG_PROTO_MOTIF","","",null,null],[17,"GDK_DRAG_PROTO_XDND","","",null,null],[17,"GDK_DRAG_PROTO_ROOTWIN","","",null,null],[17,"GDK_DRAG_PROTO_WIN32_DROPFILES","","",null,null],[17,"GDK_DRAG_PROTO_OLE2","","",null,null],[17,"GDK_DRAG_PROTO_LOCAL","","",null,null],[17,"GDK_DRAG_PROTO_WAYLAND","","",null,null],[17,"GDK_NOTHING","","",null,null],[17,"GDK_DELETE","","",null,null],[17,"GDK_DESTROY","","",null,null],[17,"GDK_EXPOSE","","",null,null],[17,"GDK_MOTION_NOTIFY","","",null,null],[17,"GDK_BUTTON_PRESS","","",null,null],[17,"GDK_2BUTTON_PRESS","","",null,null],[17,"GDK_DOUBLE_BUTTON_PRESS","","",null,null],[17,"GDK_3BUTTON_PRESS","","",null,null],[17,"GDK_TRIPLE_BUTTON_PRESS","","",null,null],[17,"GDK_BUTTON_RELEASE","","",null,null],[17,"GDK_KEY_PRESS","","",null,null],[17,"GDK_KEY_RELEASE","","",null,null],[17,"GDK_ENTER_NOTIFY","","",null,null],[17,"GDK_LEAVE_NOTIFY","","",null,null],[17,"GDK_FOCUS_CHANGE","","",null,null],[17,"GDK_CONFIGURE","","",null,null],[17,"GDK_MAP","","",null,null],[17,"GDK_UNMAP","","",null,null],[17,"GDK_PROPERTY_NOTIFY","","",null,null],[17,"GDK_SELECTION_CLEAR","","",null,null],[17,"GDK_SELECTION_REQUEST","","",null,null],[17,"GDK_SELECTION_NOTIFY","","",null,null],[17,"GDK_PROXIMITY_IN","","",null,null],[17,"GDK_PROXIMITY_OUT","","",null,null],[17,"GDK_DRAG_ENTER","","",null,null],[17,"GDK_DRAG_LEAVE","","",null,null],[17,"GDK_DRAG_MOTION","","",null,null],[17,"GDK_DRAG_STATUS","","",null,null],[17,"GDK_DROP_START","","",null,null],[17,"GDK_DROP_FINISHED","","",null,null],[17,"GDK_CLIENT_EVENT","","",null,null],[17,"GDK_VISIBILITY_NOTIFY","","",null,null],[17,"GDK_SCROLL","","",null,null],[17,"GDK_WINDOW_STATE","","",null,null],[17,"GDK_SETTING","","",null,null],[17,"GDK_OWNER_CHANGE","","",null,null],[17,"GDK_GRAB_BROKEN","","",null,null],[17,"GDK_DAMAGE","","",null,null],[17,"GDK_TOUCH_BEGIN","","",null,null],[17,"GDK_TOUCH_UPDATE","","",null,null],[17,"GDK_TOUCH_END","","",null,null],[17,"GDK_TOUCH_CANCEL","","",null,null],[17,"GDK_FILTER_CONTINUE","","",null,null],[17,"GDK_FILTER_TRANSLATE","","",null,null],[17,"GDK_FILTER_REMOVE","","",null,null],[17,"GDK_FULLSCREEN_ON_CURRENT_MONITOR","","",null,null],[17,"GDK_FULLSCREEN_ON_ALL_MONITORS","","",null,null],[17,"GDK_GL_ERROR_NOT_AVAILABLE","","",null,null],[17,"GDK_GL_ERROR_UNSUPPORTED_FORMAT","","",null,null],[17,"GDK_GL_ERROR_UNSUPPORTED_PROFILE","","",null,null],[17,"GDK_OWNERSHIP_NONE","","",null,null],[17,"GDK_OWNERSHIP_WINDOW","","",null,null],[17,"GDK_OWNERSHIP_APPLICATION","","",null,null],[17,"GDK_GRAB_SUCCESS","","",null,null],[17,"GDK_GRAB_ALREADY_GRABBED","","",null,null],[17,"GDK_GRAB_INVALID_TIME","","",null,null],[17,"GDK_GRAB_NOT_VIEWABLE","","",null,null],[17,"GDK_GRAB_FROZEN","","",null,null],[17,"GDK_GRAB_FAILED","","",null,null],[17,"GDK_GRAVITY_NORTH_WEST","","",null,null],[17,"GDK_GRAVITY_NORTH","","",null,null],[17,"GDK_GRAVITY_NORTH_EAST","","",null,null],[17,"GDK_GRAVITY_WEST","","",null,null],[17,"GDK_GRAVITY_CENTER","","",null,null],[17,"GDK_GRAVITY_EAST","","",null,null],[17,"GDK_GRAVITY_SOUTH_WEST","","",null,null],[17,"GDK_GRAVITY_SOUTH","","",null,null],[17,"GDK_GRAVITY_SOUTH_EAST","","",null,null],[17,"GDK_GRAVITY_STATIC","","",null,null],[17,"GDK_MODE_DISABLED","","",null,null],[17,"GDK_MODE_SCREEN","","",null,null],[17,"GDK_MODE_WINDOW","","",null,null],[17,"GDK_SOURCE_MOUSE","","",null,null],[17,"GDK_SOURCE_PEN","","",null,null],[17,"GDK_SOURCE_ERASER","","",null,null],[17,"GDK_SOURCE_CURSOR","","",null,null],[17,"GDK_SOURCE_KEYBOARD","","",null,null],[17,"GDK_SOURCE_TOUCHSCREEN","","",null,null],[17,"GDK_SOURCE_TOUCHPAD","","",null,null],[17,"GDK_MODIFIER_INTENT_PRIMARY_ACCELERATOR","","",null,null],[17,"GDK_MODIFIER_INTENT_CONTEXT_MENU","","",null,null],[17,"GDK_MODIFIER_INTENT_EXTEND_SELECTION","","",null,null],[17,"GDK_MODIFIER_INTENT_MODIFY_SELECTION","","",null,null],[17,"GDK_MODIFIER_INTENT_NO_TEXT_INPUT","","",null,null],[17,"GDK_MODIFIER_INTENT_SHIFT_GROUP","","",null,null],[17,"GDK_NOTIFY_ANCESTOR","","",null,null],[17,"GDK_NOTIFY_VIRTUAL","","",null,null],[17,"GDK_NOTIFY_INFERIOR","","",null,null],[17,"GDK_NOTIFY_NONLINEAR","","",null,null],[17,"GDK_NOTIFY_NONLINEAR_VIRTUAL","","",null,null],[17,"GDK_NOTIFY_UNKNOWN","","",null,null],[17,"GDK_OWNER_CHANGE_NEW_OWNER","","",null,null],[17,"GDK_OWNER_CHANGE_DESTROY","","",null,null],[17,"GDK_OWNER_CHANGE_CLOSE","","",null,null],[17,"GDK_PROP_MODE_REPLACE","","",null,null],[17,"GDK_PROP_MODE_PREPEND","","",null,null],[17,"GDK_PROP_MODE_APPEND","","",null,null],[17,"GDK_PROPERTY_NEW_VALUE","","",null,null],[17,"GDK_PROPERTY_DELETE","","",null,null],[17,"GDK_SCROLL_UP","","",null,null],[17,"GDK_SCROLL_DOWN","","",null,null],[17,"GDK_SCROLL_LEFT","","",null,null],[17,"GDK_SCROLL_RIGHT","","",null,null],[17,"GDK_SCROLL_SMOOTH","","",null,null],[17,"GDK_SETTING_ACTION_NEW","","",null,null],[17,"GDK_SETTING_ACTION_CHANGED","","",null,null],[17,"GDK_SETTING_ACTION_DELETED","","",null,null],[17,"GDK_OK","","",null,null],[17,"GDK_ERROR","","",null,null],[17,"GDK_ERROR_PARAM","","",null,null],[17,"GDK_ERROR_FILE","","",null,null],[17,"GDK_ERROR_MEM","","",null,null],[17,"GDK_VISIBILITY_UNOBSCURED","","",null,null],[17,"GDK_VISIBILITY_PARTIAL","","",null,null],[17,"GDK_VISIBILITY_FULLY_OBSCURED","","",null,null],[17,"GDK_VISUAL_STATIC_GRAY","","",null,null],[17,"GDK_VISUAL_GRAYSCALE","","",null,null],[17,"GDK_VISUAL_STATIC_COLOR","","",null,null],[17,"GDK_VISUAL_PSEUDO_COLOR","","",null,null],[17,"GDK_VISUAL_TRUE_COLOR","","",null,null],[17,"GDK_VISUAL_DIRECT_COLOR","","",null,null],[17,"GDK_WINDOW_EDGE_NORTH_WEST","","",null,null],[17,"GDK_WINDOW_EDGE_NORTH","","",null,null],[17,"GDK_WINDOW_EDGE_NORTH_EAST","","",null,null],[17,"GDK_WINDOW_EDGE_WEST","","",null,null],[17,"GDK_WINDOW_EDGE_EAST","","",null,null],[17,"GDK_WINDOW_EDGE_SOUTH_WEST","","",null,null],[17,"GDK_WINDOW_EDGE_SOUTH","","",null,null],[17,"GDK_WINDOW_EDGE_SOUTH_EAST","","",null,null],[17,"GDK_WINDOW_ROOT","","",null,null],[17,"GDK_WINDOW_TOPLEVEL","","",null,null],[17,"GDK_WINDOW_CHILD","","",null,null],[17,"GDK_WINDOW_TEMP","","",null,null],[17,"GDK_WINDOW_FOREIGN","","",null,null],[17,"GDK_WINDOW_OFFSCREEN","","",null,null],[17,"GDK_WINDOW_SUBSURFACE","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_NORMAL","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_DIALOG","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_MENU","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_TOOLBAR","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_SPLASHSCREEN","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_UTILITY","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_DOCK","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_DESKTOP","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_DROPDOWN_MENU","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_POPUP_MENU","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_TOOLTIP","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_NOTIFICATION","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_COMBO","","",null,null],[17,"GDK_WINDOW_TYPE_HINT_DND","","",null,null],[17,"GDK_INPUT_OUTPUT","","",null,null],[17,"GDK_INPUT_ONLY","","",null,null],[17,"GDK_BUTTON_MIDDLE","","",null,null],[17,"GDK_BUTTON_PRIMARY","","",null,null],[17,"GDK_BUTTON_SECONDARY","","",null,null],[17,"GDK_CURRENT_TIME","","",null,null],[17,"GDK_EVENT_PROPAGATE","","",null,null],[17,"GDK_EVENT_STOP","","",null,null],[17,"GDK_KEY_0","","",null,null],[17,"GDK_KEY_1","","",null,null],[17,"GDK_KEY_2","","",null,null],[17,"GDK_KEY_3","","",null,null],[17,"GDK_KEY_3270_AltCursor","","",null,null],[17,"GDK_KEY_3270_Attn","","",null,null],[17,"GDK_KEY_3270_BackTab","","",null,null],[17,"GDK_KEY_3270_ChangeScreen","","",null,null],[17,"GDK_KEY_3270_Copy","","",null,null],[17,"GDK_KEY_3270_CursorBlink","","",null,null],[17,"GDK_KEY_3270_CursorSelect","","",null,null],[17,"GDK_KEY_3270_DeleteWord","","",null,null],[17,"GDK_KEY_3270_Duplicate","","",null,null],[17,"GDK_KEY_3270_Enter","","",null,null],[17,"GDK_KEY_3270_EraseEOF","","",null,null],[17,"GDK_KEY_3270_EraseInput","","",null,null],[17,"GDK_KEY_3270_ExSelect","","",null,null],[17,"GDK_KEY_3270_FieldMark","","",null,null],[17,"GDK_KEY_3270_Ident","","",null,null],[17,"GDK_KEY_3270_Jump","","",null,null],[17,"GDK_KEY_3270_KeyClick","","",null,null],[17,"GDK_KEY_3270_Left2","","",null,null],[17,"GDK_KEY_3270_PA1","","",null,null],[17,"GDK_KEY_3270_PA2","","",null,null],[17,"GDK_KEY_3270_PA3","","",null,null],[17,"GDK_KEY_3270_Play","","",null,null],[17,"GDK_KEY_3270_PrintScreen","","",null,null],[17,"GDK_KEY_3270_Quit","","",null,null],[17,"GDK_KEY_3270_Record","","",null,null],[17,"GDK_KEY_3270_Reset","","",null,null],[17,"GDK_KEY_3270_Right2","","",null,null],[17,"GDK_KEY_3270_Rule","","",null,null],[17,"GDK_KEY_3270_Setup","","",null,null],[17,"GDK_KEY_3270_Test","","",null,null],[17,"GDK_KEY_4","","",null,null],[17,"GDK_KEY_5","","",null,null],[17,"GDK_KEY_6","","",null,null],[17,"GDK_KEY_7","","",null,null],[17,"GDK_KEY_8","","",null,null],[17,"GDK_KEY_9","","",null,null],[17,"GDK_KEY_A","","",null,null],[17,"GDK_KEY_AE","","",null,null],[17,"GDK_KEY_Aacute","","",null,null],[17,"GDK_KEY_Abelowdot","","",null,null],[17,"GDK_KEY_Abreve","","",null,null],[17,"GDK_KEY_Abreveacute","","",null,null],[17,"GDK_KEY_Abrevebelowdot","","",null,null],[17,"GDK_KEY_Abrevegrave","","",null,null],[17,"GDK_KEY_Abrevehook","","",null,null],[17,"GDK_KEY_Abrevetilde","","",null,null],[17,"GDK_KEY_AccessX_Enable","","",null,null],[17,"GDK_KEY_AccessX_Feedback_Enable","","",null,null],[17,"GDK_KEY_Acircumflex","","",null,null],[17,"GDK_KEY_Acircumflexacute","","",null,null],[17,"GDK_KEY_Acircumflexbelowdot","","",null,null],[17,"GDK_KEY_Acircumflexgrave","","",null,null],[17,"GDK_KEY_Acircumflexhook","","",null,null],[17,"GDK_KEY_Acircumflextilde","","",null,null],[17,"GDK_KEY_AddFavorite","","",null,null],[17,"GDK_KEY_Adiaeresis","","",null,null],[17,"GDK_KEY_Agrave","","",null,null],[17,"GDK_KEY_Ahook","","",null,null],[17,"GDK_KEY_Alt_L","","",null,null],[17,"GDK_KEY_Alt_R","","",null,null],[17,"GDK_KEY_Amacron","","",null,null],[17,"GDK_KEY_Aogonek","","",null,null],[17,"GDK_KEY_ApplicationLeft","","",null,null],[17,"GDK_KEY_ApplicationRight","","",null,null],[17,"GDK_KEY_Arabic_0","","",null,null],[17,"GDK_KEY_Arabic_1","","",null,null],[17,"GDK_KEY_Arabic_2","","",null,null],[17,"GDK_KEY_Arabic_3","","",null,null],[17,"GDK_KEY_Arabic_4","","",null,null],[17,"GDK_KEY_Arabic_5","","",null,null],[17,"GDK_KEY_Arabic_6","","",null,null],[17,"GDK_KEY_Arabic_7","","",null,null],[17,"GDK_KEY_Arabic_8","","",null,null],[17,"GDK_KEY_Arabic_9","","",null,null],[17,"GDK_KEY_Arabic_ain","","",null,null],[17,"GDK_KEY_Arabic_alef","","",null,null],[17,"GDK_KEY_Arabic_alefmaksura","","",null,null],[17,"GDK_KEY_Arabic_beh","","",null,null],[17,"GDK_KEY_Arabic_comma","","",null,null],[17,"GDK_KEY_Arabic_dad","","",null,null],[17,"GDK_KEY_Arabic_dal","","",null,null],[17,"GDK_KEY_Arabic_damma","","",null,null],[17,"GDK_KEY_Arabic_dammatan","","",null,null],[17,"GDK_KEY_Arabic_ddal","","",null,null],[17,"GDK_KEY_Arabic_farsi_yeh","","",null,null],[17,"GDK_KEY_Arabic_fatha","","",null,null],[17,"GDK_KEY_Arabic_fathatan","","",null,null],[17,"GDK_KEY_Arabic_feh","","",null,null],[17,"GDK_KEY_Arabic_fullstop","","",null,null],[17,"GDK_KEY_Arabic_gaf","","",null,null],[17,"GDK_KEY_Arabic_ghain","","",null,null],[17,"GDK_KEY_Arabic_ha","","",null,null],[17,"GDK_KEY_Arabic_hah","","",null,null],[17,"GDK_KEY_Arabic_hamza","","",null,null],[17,"GDK_KEY_Arabic_hamza_above","","",null,null],[17,"GDK_KEY_Arabic_hamza_below","","",null,null],[17,"GDK_KEY_Arabic_hamzaonalef","","",null,null],[17,"GDK_KEY_Arabic_hamzaonwaw","","",null,null],[17,"GDK_KEY_Arabic_hamzaonyeh","","",null,null],[17,"GDK_KEY_Arabic_hamzaunderalef","","",null,null],[17,"GDK_KEY_Arabic_heh","","",null,null],[17,"GDK_KEY_Arabic_heh_doachashmee","","",null,null],[17,"GDK_KEY_Arabic_heh_goal","","",null,null],[17,"GDK_KEY_Arabic_jeem","","",null,null],[17,"GDK_KEY_Arabic_jeh","","",null,null],[17,"GDK_KEY_Arabic_kaf","","",null,null],[17,"GDK_KEY_Arabic_kasra","","",null,null],[17,"GDK_KEY_Arabic_kasratan","","",null,null],[17,"GDK_KEY_Arabic_keheh","","",null,null],[17,"GDK_KEY_Arabic_khah","","",null,null],[17,"GDK_KEY_Arabic_lam","","",null,null],[17,"GDK_KEY_Arabic_madda_above","","",null,null],[17,"GDK_KEY_Arabic_maddaonalef","","",null,null],[17,"GDK_KEY_Arabic_meem","","",null,null],[17,"GDK_KEY_Arabic_noon","","",null,null],[17,"GDK_KEY_Arabic_noon_ghunna","","",null,null],[17,"GDK_KEY_Arabic_peh","","",null,null],[17,"GDK_KEY_Arabic_percent","","",null,null],[17,"GDK_KEY_Arabic_qaf","","",null,null],[17,"GDK_KEY_Arabic_question_mark","","",null,null],[17,"GDK_KEY_Arabic_ra","","",null,null],[17,"GDK_KEY_Arabic_rreh","","",null,null],[17,"GDK_KEY_Arabic_sad","","",null,null],[17,"GDK_KEY_Arabic_seen","","",null,null],[17,"GDK_KEY_Arabic_semicolon","","",null,null],[17,"GDK_KEY_Arabic_shadda","","",null,null],[17,"GDK_KEY_Arabic_sheen","","",null,null],[17,"GDK_KEY_Arabic_sukun","","",null,null],[17,"GDK_KEY_Arabic_superscript_alef","","",null,null],[17,"GDK_KEY_Arabic_switch","","",null,null],[17,"GDK_KEY_Arabic_tah","","",null,null],[17,"GDK_KEY_Arabic_tatweel","","",null,null],[17,"GDK_KEY_Arabic_tcheh","","",null,null],[17,"GDK_KEY_Arabic_teh","","",null,null],[17,"GDK_KEY_Arabic_tehmarbuta","","",null,null],[17,"GDK_KEY_Arabic_thal","","",null,null],[17,"GDK_KEY_Arabic_theh","","",null,null],[17,"GDK_KEY_Arabic_tteh","","",null,null],[17,"GDK_KEY_Arabic_veh","","",null,null],[17,"GDK_KEY_Arabic_waw","","",null,null],[17,"GDK_KEY_Arabic_yeh","","",null,null],[17,"GDK_KEY_Arabic_yeh_baree","","",null,null],[17,"GDK_KEY_Arabic_zah","","",null,null],[17,"GDK_KEY_Arabic_zain","","",null,null],[17,"GDK_KEY_Aring","","",null,null],[17,"GDK_KEY_Armenian_AT","","",null,null],[17,"GDK_KEY_Armenian_AYB","","",null,null],[17,"GDK_KEY_Armenian_BEN","","",null,null],[17,"GDK_KEY_Armenian_CHA","","",null,null],[17,"GDK_KEY_Armenian_DA","","",null,null],[17,"GDK_KEY_Armenian_DZA","","",null,null],[17,"GDK_KEY_Armenian_E","","",null,null],[17,"GDK_KEY_Armenian_FE","","",null,null],[17,"GDK_KEY_Armenian_GHAT","","",null,null],[17,"GDK_KEY_Armenian_GIM","","",null,null],[17,"GDK_KEY_Armenian_HI","","",null,null],[17,"GDK_KEY_Armenian_HO","","",null,null],[17,"GDK_KEY_Armenian_INI","","",null,null],[17,"GDK_KEY_Armenian_JE","","",null,null],[17,"GDK_KEY_Armenian_KE","","",null,null],[17,"GDK_KEY_Armenian_KEN","","",null,null],[17,"GDK_KEY_Armenian_KHE","","",null,null],[17,"GDK_KEY_Armenian_LYUN","","",null,null],[17,"GDK_KEY_Armenian_MEN","","",null,null],[17,"GDK_KEY_Armenian_NU","","",null,null],[17,"GDK_KEY_Armenian_O","","",null,null],[17,"GDK_KEY_Armenian_PE","","",null,null],[17,"GDK_KEY_Armenian_PYUR","","",null,null],[17,"GDK_KEY_Armenian_RA","","",null,null],[17,"GDK_KEY_Armenian_RE","","",null,null],[17,"GDK_KEY_Armenian_SE","","",null,null],[17,"GDK_KEY_Armenian_SHA","","",null,null],[17,"GDK_KEY_Armenian_TCHE","","",null,null],[17,"GDK_KEY_Armenian_TO","","",null,null],[17,"GDK_KEY_Armenian_TSA","","",null,null],[17,"GDK_KEY_Armenian_TSO","","",null,null],[17,"GDK_KEY_Armenian_TYUN","","",null,null],[17,"GDK_KEY_Armenian_VEV","","",null,null],[17,"GDK_KEY_Armenian_VO","","",null,null],[17,"GDK_KEY_Armenian_VYUN","","",null,null],[17,"GDK_KEY_Armenian_YECH","","",null,null],[17,"GDK_KEY_Armenian_ZA","","",null,null],[17,"GDK_KEY_Armenian_ZHE","","",null,null],[17,"GDK_KEY_Armenian_accent","","",null,null],[17,"GDK_KEY_Armenian_amanak","","",null,null],[17,"GDK_KEY_Armenian_apostrophe","","",null,null],[17,"GDK_KEY_Armenian_at","","",null,null],[17,"GDK_KEY_Armenian_ayb","","",null,null],[17,"GDK_KEY_Armenian_ben","","",null,null],[17,"GDK_KEY_Armenian_but","","",null,null],[17,"GDK_KEY_Armenian_cha","","",null,null],[17,"GDK_KEY_Armenian_da","","",null,null],[17,"GDK_KEY_Armenian_dza","","",null,null],[17,"GDK_KEY_Armenian_e","","",null,null],[17,"GDK_KEY_Armenian_exclam","","",null,null],[17,"GDK_KEY_Armenian_fe","","",null,null],[17,"GDK_KEY_Armenian_full_stop","","",null,null],[17,"GDK_KEY_Armenian_ghat","","",null,null],[17,"GDK_KEY_Armenian_gim","","",null,null],[17,"GDK_KEY_Armenian_hi","","",null,null],[17,"GDK_KEY_Armenian_ho","","",null,null],[17,"GDK_KEY_Armenian_hyphen","","",null,null],[17,"GDK_KEY_Armenian_ini","","",null,null],[17,"GDK_KEY_Armenian_je","","",null,null],[17,"GDK_KEY_Armenian_ke","","",null,null],[17,"GDK_KEY_Armenian_ken","","",null,null],[17,"GDK_KEY_Armenian_khe","","",null,null],[17,"GDK_KEY_Armenian_ligature_ew","","",null,null],[17,"GDK_KEY_Armenian_lyun","","",null,null],[17,"GDK_KEY_Armenian_men","","",null,null],[17,"GDK_KEY_Armenian_nu","","",null,null],[17,"GDK_KEY_Armenian_o","","",null,null],[17,"GDK_KEY_Armenian_paruyk","","",null,null],[17,"GDK_KEY_Armenian_pe","","",null,null],[17,"GDK_KEY_Armenian_pyur","","",null,null],[17,"GDK_KEY_Armenian_question","","",null,null],[17,"GDK_KEY_Armenian_ra","","",null,null],[17,"GDK_KEY_Armenian_re","","",null,null],[17,"GDK_KEY_Armenian_se","","",null,null],[17,"GDK_KEY_Armenian_separation_mark","","",null,null],[17,"GDK_KEY_Armenian_sha","","",null,null],[17,"GDK_KEY_Armenian_shesht","","",null,null],[17,"GDK_KEY_Armenian_tche","","",null,null],[17,"GDK_KEY_Armenian_to","","",null,null],[17,"GDK_KEY_Armenian_tsa","","",null,null],[17,"GDK_KEY_Armenian_tso","","",null,null],[17,"GDK_KEY_Armenian_tyun","","",null,null],[17,"GDK_KEY_Armenian_verjaket","","",null,null],[17,"GDK_KEY_Armenian_vev","","",null,null],[17,"GDK_KEY_Armenian_vo","","",null,null],[17,"GDK_KEY_Armenian_vyun","","",null,null],[17,"GDK_KEY_Armenian_yech","","",null,null],[17,"GDK_KEY_Armenian_yentamna","","",null,null],[17,"GDK_KEY_Armenian_za","","",null,null],[17,"GDK_KEY_Armenian_zhe","","",null,null],[17,"GDK_KEY_Atilde","","",null,null],[17,"GDK_KEY_AudibleBell_Enable","","",null,null],[17,"GDK_KEY_AudioCycleTrack","","",null,null],[17,"GDK_KEY_AudioForward","","",null,null],[17,"GDK_KEY_AudioLowerVolume","","",null,null],[17,"GDK_KEY_AudioMedia","","",null,null],[17,"GDK_KEY_AudioMicMute","","",null,null],[17,"GDK_KEY_AudioMute","","",null,null],[17,"GDK_KEY_AudioNext","","",null,null],[17,"GDK_KEY_AudioPause","","",null,null],[17,"GDK_KEY_AudioPlay","","",null,null],[17,"GDK_KEY_AudioPrev","","",null,null],[17,"GDK_KEY_AudioRaiseVolume","","",null,null],[17,"GDK_KEY_AudioRandomPlay","","",null,null],[17,"GDK_KEY_AudioRecord","","",null,null],[17,"GDK_KEY_AudioRepeat","","",null,null],[17,"GDK_KEY_AudioRewind","","",null,null],[17,"GDK_KEY_AudioStop","","",null,null],[17,"GDK_KEY_Away","","",null,null],[17,"GDK_KEY_B","","",null,null],[17,"GDK_KEY_Babovedot","","",null,null],[17,"GDK_KEY_Back","","",null,null],[17,"GDK_KEY_BackForward","","",null,null],[17,"GDK_KEY_BackSpace","","",null,null],[17,"GDK_KEY_Battery","","",null,null],[17,"GDK_KEY_Begin","","",null,null],[17,"GDK_KEY_Blue","","",null,null],[17,"GDK_KEY_Bluetooth","","",null,null],[17,"GDK_KEY_Book","","",null,null],[17,"GDK_KEY_BounceKeys_Enable","","",null,null],[17,"GDK_KEY_Break","","",null,null],[17,"GDK_KEY_BrightnessAdjust","","",null,null],[17,"GDK_KEY_Byelorussian_SHORTU","","",null,null],[17,"GDK_KEY_Byelorussian_shortu","","",null,null],[17,"GDK_KEY_C","","",null,null],[17,"GDK_KEY_CD","","",null,null],[17,"GDK_KEY_CH","","",null,null],[17,"GDK_KEY_C_H","","",null,null],[17,"GDK_KEY_C_h","","",null,null],[17,"GDK_KEY_Cabovedot","","",null,null],[17,"GDK_KEY_Cacute","","",null,null],[17,"GDK_KEY_Calculator","","",null,null],[17,"GDK_KEY_Calendar","","",null,null],[17,"GDK_KEY_Cancel","","",null,null],[17,"GDK_KEY_Caps_Lock","","",null,null],[17,"GDK_KEY_Ccaron","","",null,null],[17,"GDK_KEY_Ccedilla","","",null,null],[17,"GDK_KEY_Ccircumflex","","",null,null],[17,"GDK_KEY_Ch","","",null,null],[17,"GDK_KEY_Clear","","",null,null],[17,"GDK_KEY_ClearGrab","","",null,null],[17,"GDK_KEY_Close","","",null,null],[17,"GDK_KEY_Codeinput","","",null,null],[17,"GDK_KEY_ColonSign","","",null,null],[17,"GDK_KEY_Community","","",null,null],[17,"GDK_KEY_ContrastAdjust","","",null,null],[17,"GDK_KEY_Control_L","","",null,null],[17,"GDK_KEY_Control_R","","",null,null],[17,"GDK_KEY_Copy","","",null,null],[17,"GDK_KEY_CruzeiroSign","","",null,null],[17,"GDK_KEY_Cut","","",null,null],[17,"GDK_KEY_CycleAngle","","",null,null],[17,"GDK_KEY_Cyrillic_A","","",null,null],[17,"GDK_KEY_Cyrillic_BE","","",null,null],[17,"GDK_KEY_Cyrillic_CHE","","",null,null],[17,"GDK_KEY_Cyrillic_CHE_descender","","",null,null],[17,"GDK_KEY_Cyrillic_CHE_vertstroke","","",null,null],[17,"GDK_KEY_Cyrillic_DE","","",null,null],[17,"GDK_KEY_Cyrillic_DZHE","","",null,null],[17,"GDK_KEY_Cyrillic_E","","",null,null],[17,"GDK_KEY_Cyrillic_EF","","",null,null],[17,"GDK_KEY_Cyrillic_EL","","",null,null],[17,"GDK_KEY_Cyrillic_EM","","",null,null],[17,"GDK_KEY_Cyrillic_EN","","",null,null],[17,"GDK_KEY_Cyrillic_EN_descender","","",null,null],[17,"GDK_KEY_Cyrillic_ER","","",null,null],[17,"GDK_KEY_Cyrillic_ES","","",null,null],[17,"GDK_KEY_Cyrillic_GHE","","",null,null],[17,"GDK_KEY_Cyrillic_GHE_bar","","",null,null],[17,"GDK_KEY_Cyrillic_HA","","",null,null],[17,"GDK_KEY_Cyrillic_HARDSIGN","","",null,null],[17,"GDK_KEY_Cyrillic_HA_descender","","",null,null],[17,"GDK_KEY_Cyrillic_I","","",null,null],[17,"GDK_KEY_Cyrillic_IE","","",null,null],[17,"GDK_KEY_Cyrillic_IO","","",null,null],[17,"GDK_KEY_Cyrillic_I_macron","","",null,null],[17,"GDK_KEY_Cyrillic_JE","","",null,null],[17,"GDK_KEY_Cyrillic_KA","","",null,null],[17,"GDK_KEY_Cyrillic_KA_descender","","",null,null],[17,"GDK_KEY_Cyrillic_KA_vertstroke","","",null,null],[17,"GDK_KEY_Cyrillic_LJE","","",null,null],[17,"GDK_KEY_Cyrillic_NJE","","",null,null],[17,"GDK_KEY_Cyrillic_O","","",null,null],[17,"GDK_KEY_Cyrillic_O_bar","","",null,null],[17,"GDK_KEY_Cyrillic_PE","","",null,null],[17,"GDK_KEY_Cyrillic_SCHWA","","",null,null],[17,"GDK_KEY_Cyrillic_SHA","","",null,null],[17,"GDK_KEY_Cyrillic_SHCHA","","",null,null],[17,"GDK_KEY_Cyrillic_SHHA","","",null,null],[17,"GDK_KEY_Cyrillic_SHORTI","","",null,null],[17,"GDK_KEY_Cyrillic_SOFTSIGN","","",null,null],[17,"GDK_KEY_Cyrillic_TE","","",null,null],[17,"GDK_KEY_Cyrillic_TSE","","",null,null],[17,"GDK_KEY_Cyrillic_U","","",null,null],[17,"GDK_KEY_Cyrillic_U_macron","","",null,null],[17,"GDK_KEY_Cyrillic_U_straight","","",null,null],[17,"GDK_KEY_Cyrillic_U_straight_bar","","",null,null],[17,"GDK_KEY_Cyrillic_VE","","",null,null],[17,"GDK_KEY_Cyrillic_YA","","",null,null],[17,"GDK_KEY_Cyrillic_YERU","","",null,null],[17,"GDK_KEY_Cyrillic_YU","","",null,null],[17,"GDK_KEY_Cyrillic_ZE","","",null,null],[17,"GDK_KEY_Cyrillic_ZHE","","",null,null],[17,"GDK_KEY_Cyrillic_ZHE_descender","","",null,null],[17,"GDK_KEY_Cyrillic_a","","",null,null],[17,"GDK_KEY_Cyrillic_be","","",null,null],[17,"GDK_KEY_Cyrillic_che","","",null,null],[17,"GDK_KEY_Cyrillic_che_descender","","",null,null],[17,"GDK_KEY_Cyrillic_che_vertstroke","","",null,null],[17,"GDK_KEY_Cyrillic_de","","",null,null],[17,"GDK_KEY_Cyrillic_dzhe","","",null,null],[17,"GDK_KEY_Cyrillic_e","","",null,null],[17,"GDK_KEY_Cyrillic_ef","","",null,null],[17,"GDK_KEY_Cyrillic_el","","",null,null],[17,"GDK_KEY_Cyrillic_em","","",null,null],[17,"GDK_KEY_Cyrillic_en","","",null,null],[17,"GDK_KEY_Cyrillic_en_descender","","",null,null],[17,"GDK_KEY_Cyrillic_er","","",null,null],[17,"GDK_KEY_Cyrillic_es","","",null,null],[17,"GDK_KEY_Cyrillic_ghe","","",null,null],[17,"GDK_KEY_Cyrillic_ghe_bar","","",null,null],[17,"GDK_KEY_Cyrillic_ha","","",null,null],[17,"GDK_KEY_Cyrillic_ha_descender","","",null,null],[17,"GDK_KEY_Cyrillic_hardsign","","",null,null],[17,"GDK_KEY_Cyrillic_i","","",null,null],[17,"GDK_KEY_Cyrillic_i_macron","","",null,null],[17,"GDK_KEY_Cyrillic_ie","","",null,null],[17,"GDK_KEY_Cyrillic_io","","",null,null],[17,"GDK_KEY_Cyrillic_je","","",null,null],[17,"GDK_KEY_Cyrillic_ka","","",null,null],[17,"GDK_KEY_Cyrillic_ka_descender","","",null,null],[17,"GDK_KEY_Cyrillic_ka_vertstroke","","",null,null],[17,"GDK_KEY_Cyrillic_lje","","",null,null],[17,"GDK_KEY_Cyrillic_nje","","",null,null],[17,"GDK_KEY_Cyrillic_o","","",null,null],[17,"GDK_KEY_Cyrillic_o_bar","","",null,null],[17,"GDK_KEY_Cyrillic_pe","","",null,null],[17,"GDK_KEY_Cyrillic_schwa","","",null,null],[17,"GDK_KEY_Cyrillic_sha","","",null,null],[17,"GDK_KEY_Cyrillic_shcha","","",null,null],[17,"GDK_KEY_Cyrillic_shha","","",null,null],[17,"GDK_KEY_Cyrillic_shorti","","",null,null],[17,"GDK_KEY_Cyrillic_softsign","","",null,null],[17,"GDK_KEY_Cyrillic_te","","",null,null],[17,"GDK_KEY_Cyrillic_tse","","",null,null],[17,"GDK_KEY_Cyrillic_u","","",null,null],[17,"GDK_KEY_Cyrillic_u_macron","","",null,null],[17,"GDK_KEY_Cyrillic_u_straight","","",null,null],[17,"GDK_KEY_Cyrillic_u_straight_bar","","",null,null],[17,"GDK_KEY_Cyrillic_ve","","",null,null],[17,"GDK_KEY_Cyrillic_ya","","",null,null],[17,"GDK_KEY_Cyrillic_yeru","","",null,null],[17,"GDK_KEY_Cyrillic_yu","","",null,null],[17,"GDK_KEY_Cyrillic_ze","","",null,null],[17,"GDK_KEY_Cyrillic_zhe","","",null,null],[17,"GDK_KEY_Cyrillic_zhe_descender","","",null,null],[17,"GDK_KEY_D","","",null,null],[17,"GDK_KEY_DOS","","",null,null],[17,"GDK_KEY_Dabovedot","","",null,null],[17,"GDK_KEY_Dcaron","","",null,null],[17,"GDK_KEY_Delete","","",null,null],[17,"GDK_KEY_Display","","",null,null],[17,"GDK_KEY_Documents","","",null,null],[17,"GDK_KEY_DongSign","","",null,null],[17,"GDK_KEY_Down","","",null,null],[17,"GDK_KEY_Dstroke","","",null,null],[17,"GDK_KEY_E","","",null,null],[17,"GDK_KEY_ENG","","",null,null],[17,"GDK_KEY_ETH","","",null,null],[17,"GDK_KEY_EZH","","",null,null],[17,"GDK_KEY_Eabovedot","","",null,null],[17,"GDK_KEY_Eacute","","",null,null],[17,"GDK_KEY_Ebelowdot","","",null,null],[17,"GDK_KEY_Ecaron","","",null,null],[17,"GDK_KEY_Ecircumflex","","",null,null],[17,"GDK_KEY_Ecircumflexacute","","",null,null],[17,"GDK_KEY_Ecircumflexbelowdot","","",null,null],[17,"GDK_KEY_Ecircumflexgrave","","",null,null],[17,"GDK_KEY_Ecircumflexhook","","",null,null],[17,"GDK_KEY_Ecircumflextilde","","",null,null],[17,"GDK_KEY_EcuSign","","",null,null],[17,"GDK_KEY_Ediaeresis","","",null,null],[17,"GDK_KEY_Egrave","","",null,null],[17,"GDK_KEY_Ehook","","",null,null],[17,"GDK_KEY_Eisu_Shift","","",null,null],[17,"GDK_KEY_Eisu_toggle","","",null,null],[17,"GDK_KEY_Eject","","",null,null],[17,"GDK_KEY_Emacron","","",null,null],[17,"GDK_KEY_End","","",null,null],[17,"GDK_KEY_Eogonek","","",null,null],[17,"GDK_KEY_Escape","","",null,null],[17,"GDK_KEY_Eth","","",null,null],[17,"GDK_KEY_Etilde","","",null,null],[17,"GDK_KEY_EuroSign","","",null,null],[17,"GDK_KEY_Excel","","",null,null],[17,"GDK_KEY_Execute","","",null,null],[17,"GDK_KEY_Explorer","","",null,null],[17,"GDK_KEY_F","","",null,null],[17,"GDK_KEY_F1","","",null,null],[17,"GDK_KEY_F10","","",null,null],[17,"GDK_KEY_F11","","",null,null],[17,"GDK_KEY_F12","","",null,null],[17,"GDK_KEY_F13","","",null,null],[17,"GDK_KEY_F14","","",null,null],[17,"GDK_KEY_F15","","",null,null],[17,"GDK_KEY_F16","","",null,null],[17,"GDK_KEY_F17","","",null,null],[17,"GDK_KEY_F18","","",null,null],[17,"GDK_KEY_F19","","",null,null],[17,"GDK_KEY_F2","","",null,null],[17,"GDK_KEY_F20","","",null,null],[17,"GDK_KEY_F21","","",null,null],[17,"GDK_KEY_F22","","",null,null],[17,"GDK_KEY_F23","","",null,null],[17,"GDK_KEY_F24","","",null,null],[17,"GDK_KEY_F25","","",null,null],[17,"GDK_KEY_F26","","",null,null],[17,"GDK_KEY_F27","","",null,null],[17,"GDK_KEY_F28","","",null,null],[17,"GDK_KEY_F29","","",null,null],[17,"GDK_KEY_F3","","",null,null],[17,"GDK_KEY_F30","","",null,null],[17,"GDK_KEY_F31","","",null,null],[17,"GDK_KEY_F32","","",null,null],[17,"GDK_KEY_F33","","",null,null],[17,"GDK_KEY_F34","","",null,null],[17,"GDK_KEY_F35","","",null,null],[17,"GDK_KEY_F4","","",null,null],[17,"GDK_KEY_F5","","",null,null],[17,"GDK_KEY_F6","","",null,null],[17,"GDK_KEY_F7","","",null,null],[17,"GDK_KEY_F8","","",null,null],[17,"GDK_KEY_F9","","",null,null],[17,"GDK_KEY_FFrancSign","","",null,null],[17,"GDK_KEY_Fabovedot","","",null,null],[17,"GDK_KEY_Farsi_0","","",null,null],[17,"GDK_KEY_Farsi_1","","",null,null],[17,"GDK_KEY_Farsi_2","","",null,null],[17,"GDK_KEY_Farsi_3","","",null,null],[17,"GDK_KEY_Farsi_4","","",null,null],[17,"GDK_KEY_Farsi_5","","",null,null],[17,"GDK_KEY_Farsi_6","","",null,null],[17,"GDK_KEY_Farsi_7","","",null,null],[17,"GDK_KEY_Farsi_8","","",null,null],[17,"GDK_KEY_Farsi_9","","",null,null],[17,"GDK_KEY_Farsi_yeh","","",null,null],[17,"GDK_KEY_Favorites","","",null,null],[17,"GDK_KEY_Finance","","",null,null],[17,"GDK_KEY_Find","","",null,null],[17,"GDK_KEY_First_Virtual_Screen","","",null,null],[17,"GDK_KEY_Forward","","",null,null],[17,"GDK_KEY_FrameBack","","",null,null],[17,"GDK_KEY_FrameForward","","",null,null],[17,"GDK_KEY_G","","",null,null],[17,"GDK_KEY_Gabovedot","","",null,null],[17,"GDK_KEY_Game","","",null,null],[17,"GDK_KEY_Gbreve","","",null,null],[17,"GDK_KEY_Gcaron","","",null,null],[17,"GDK_KEY_Gcedilla","","",null,null],[17,"GDK_KEY_Gcircumflex","","",null,null],[17,"GDK_KEY_Georgian_an","","",null,null],[17,"GDK_KEY_Georgian_ban","","",null,null],[17,"GDK_KEY_Georgian_can","","",null,null],[17,"GDK_KEY_Georgian_char","","",null,null],[17,"GDK_KEY_Georgian_chin","","",null,null],[17,"GDK_KEY_Georgian_cil","","",null,null],[17,"GDK_KEY_Georgian_don","","",null,null],[17,"GDK_KEY_Georgian_en","","",null,null],[17,"GDK_KEY_Georgian_fi","","",null,null],[17,"GDK_KEY_Georgian_gan","","",null,null],[17,"GDK_KEY_Georgian_ghan","","",null,null],[17,"GDK_KEY_Georgian_hae","","",null,null],[17,"GDK_KEY_Georgian_har","","",null,null],[17,"GDK_KEY_Georgian_he","","",null,null],[17,"GDK_KEY_Georgian_hie","","",null,null],[17,"GDK_KEY_Georgian_hoe","","",null,null],[17,"GDK_KEY_Georgian_in","","",null,null],[17,"GDK_KEY_Georgian_jhan","","",null,null],[17,"GDK_KEY_Georgian_jil","","",null,null],[17,"GDK_KEY_Georgian_kan","","",null,null],[17,"GDK_KEY_Georgian_khar","","",null,null],[17,"GDK_KEY_Georgian_las","","",null,null],[17,"GDK_KEY_Georgian_man","","",null,null],[17,"GDK_KEY_Georgian_nar","","",null,null],[17,"GDK_KEY_Georgian_on","","",null,null],[17,"GDK_KEY_Georgian_par","","",null,null],[17,"GDK_KEY_Georgian_phar","","",null,null],[17,"GDK_KEY_Georgian_qar","","",null,null],[17,"GDK_KEY_Georgian_rae","","",null,null],[17,"GDK_KEY_Georgian_san","","",null,null],[17,"GDK_KEY_Georgian_shin","","",null,null],[17,"GDK_KEY_Georgian_tan","","",null,null],[17,"GDK_KEY_Georgian_tar","","",null,null],[17,"GDK_KEY_Georgian_un","","",null,null],[17,"GDK_KEY_Georgian_vin","","",null,null],[17,"GDK_KEY_Georgian_we","","",null,null],[17,"GDK_KEY_Georgian_xan","","",null,null],[17,"GDK_KEY_Georgian_zen","","",null,null],[17,"GDK_KEY_Georgian_zhar","","",null,null],[17,"GDK_KEY_Go","","",null,null],[17,"GDK_KEY_Greek_ALPHA","","",null,null],[17,"GDK_KEY_Greek_ALPHAaccent","","",null,null],[17,"GDK_KEY_Greek_BETA","","",null,null],[17,"GDK_KEY_Greek_CHI","","",null,null],[17,"GDK_KEY_Greek_DELTA","","",null,null],[17,"GDK_KEY_Greek_EPSILON","","",null,null],[17,"GDK_KEY_Greek_EPSILONaccent","","",null,null],[17,"GDK_KEY_Greek_ETA","","",null,null],[17,"GDK_KEY_Greek_ETAaccent","","",null,null],[17,"GDK_KEY_Greek_GAMMA","","",null,null],[17,"GDK_KEY_Greek_IOTA","","",null,null],[17,"GDK_KEY_Greek_IOTAaccent","","",null,null],[17,"GDK_KEY_Greek_IOTAdiaeresis","","",null,null],[17,"GDK_KEY_Greek_IOTAdieresis","","",null,null],[17,"GDK_KEY_Greek_KAPPA","","",null,null],[17,"GDK_KEY_Greek_LAMBDA","","",null,null],[17,"GDK_KEY_Greek_LAMDA","","",null,null],[17,"GDK_KEY_Greek_MU","","",null,null],[17,"GDK_KEY_Greek_NU","","",null,null],[17,"GDK_KEY_Greek_OMEGA","","",null,null],[17,"GDK_KEY_Greek_OMEGAaccent","","",null,null],[17,"GDK_KEY_Greek_OMICRON","","",null,null],[17,"GDK_KEY_Greek_OMICRONaccent","","",null,null],[17,"GDK_KEY_Greek_PHI","","",null,null],[17,"GDK_KEY_Greek_PI","","",null,null],[17,"GDK_KEY_Greek_PSI","","",null,null],[17,"GDK_KEY_Greek_RHO","","",null,null],[17,"GDK_KEY_Greek_SIGMA","","",null,null],[17,"GDK_KEY_Greek_TAU","","",null,null],[17,"GDK_KEY_Greek_THETA","","",null,null],[17,"GDK_KEY_Greek_UPSILON","","",null,null],[17,"GDK_KEY_Greek_UPSILONaccent","","",null,null],[17,"GDK_KEY_Greek_UPSILONdieresis","","",null,null],[17,"GDK_KEY_Greek_XI","","",null,null],[17,"GDK_KEY_Greek_ZETA","","",null,null],[17,"GDK_KEY_Greek_accentdieresis","","",null,null],[17,"GDK_KEY_Greek_alpha","","",null,null],[17,"GDK_KEY_Greek_alphaaccent","","",null,null],[17,"GDK_KEY_Greek_beta","","",null,null],[17,"GDK_KEY_Greek_chi","","",null,null],[17,"GDK_KEY_Greek_delta","","",null,null],[17,"GDK_KEY_Greek_epsilon","","",null,null],[17,"GDK_KEY_Greek_epsilonaccent","","",null,null],[17,"GDK_KEY_Greek_eta","","",null,null],[17,"GDK_KEY_Greek_etaaccent","","",null,null],[17,"GDK_KEY_Greek_finalsmallsigma","","",null,null],[17,"GDK_KEY_Greek_gamma","","",null,null],[17,"GDK_KEY_Greek_horizbar","","",null,null],[17,"GDK_KEY_Greek_iota","","",null,null],[17,"GDK_KEY_Greek_iotaaccent","","",null,null],[17,"GDK_KEY_Greek_iotaaccentdieresis","","",null,null],[17,"GDK_KEY_Greek_iotadieresis","","",null,null],[17,"GDK_KEY_Greek_kappa","","",null,null],[17,"GDK_KEY_Greek_lambda","","",null,null],[17,"GDK_KEY_Greek_lamda","","",null,null],[17,"GDK_KEY_Greek_mu","","",null,null],[17,"GDK_KEY_Greek_nu","","",null,null],[17,"GDK_KEY_Greek_omega","","",null,null],[17,"GDK_KEY_Greek_omegaaccent","","",null,null],[17,"GDK_KEY_Greek_omicron","","",null,null],[17,"GDK_KEY_Greek_omicronaccent","","",null,null],[17,"GDK_KEY_Greek_phi","","",null,null],[17,"GDK_KEY_Greek_pi","","",null,null],[17,"GDK_KEY_Greek_psi","","",null,null],[17,"GDK_KEY_Greek_rho","","",null,null],[17,"GDK_KEY_Greek_sigma","","",null,null],[17,"GDK_KEY_Greek_switch","","",null,null],[17,"GDK_KEY_Greek_tau","","",null,null],[17,"GDK_KEY_Greek_theta","","",null,null],[17,"GDK_KEY_Greek_upsilon","","",null,null],[17,"GDK_KEY_Greek_upsilonaccent","","",null,null],[17,"GDK_KEY_Greek_upsilonaccentdieresis","","",null,null],[17,"GDK_KEY_Greek_upsilondieresis","","",null,null],[17,"GDK_KEY_Greek_xi","","",null,null],[17,"GDK_KEY_Greek_zeta","","",null,null],[17,"GDK_KEY_Green","","",null,null],[17,"GDK_KEY_H","","",null,null],[17,"GDK_KEY_Hangul","","",null,null],[17,"GDK_KEY_Hangul_A","","",null,null],[17,"GDK_KEY_Hangul_AE","","",null,null],[17,"GDK_KEY_Hangul_AraeA","","",null,null],[17,"GDK_KEY_Hangul_AraeAE","","",null,null],[17,"GDK_KEY_Hangul_Banja","","",null,null],[17,"GDK_KEY_Hangul_Cieuc","","",null,null],[17,"GDK_KEY_Hangul_Codeinput","","",null,null],[17,"GDK_KEY_Hangul_Dikeud","","",null,null],[17,"GDK_KEY_Hangul_E","","",null,null],[17,"GDK_KEY_Hangul_EO","","",null,null],[17,"GDK_KEY_Hangul_EU","","",null,null],[17,"GDK_KEY_Hangul_End","","",null,null],[17,"GDK_KEY_Hangul_Hanja","","",null,null],[17,"GDK_KEY_Hangul_Hieuh","","",null,null],[17,"GDK_KEY_Hangul_I","","",null,null],[17,"GDK_KEY_Hangul_Ieung","","",null,null],[17,"GDK_KEY_Hangul_J_Cieuc","","",null,null],[17,"GDK_KEY_Hangul_J_Dikeud","","",null,null],[17,"GDK_KEY_Hangul_J_Hieuh","","",null,null],[17,"GDK_KEY_Hangul_J_Ieung","","",null,null],[17,"GDK_KEY_Hangul_J_Jieuj","","",null,null],[17,"GDK_KEY_Hangul_J_Khieuq","","",null,null],[17,"GDK_KEY_Hangul_J_Kiyeog","","",null,null],[17,"GDK_KEY_Hangul_J_KiyeogSios","","",null,null],[17,"GDK_KEY_Hangul_J_KkogjiDalrinIeung","","",null,null],[17,"GDK_KEY_Hangul_J_Mieum","","",null,null],[17,"GDK_KEY_Hangul_J_Nieun","","",null,null],[17,"GDK_KEY_Hangul_J_NieunHieuh","","",null,null],[17,"GDK_KEY_Hangul_J_NieunJieuj","","",null,null],[17,"GDK_KEY_Hangul_J_PanSios","","",null,null],[17,"GDK_KEY_Hangul_J_Phieuf","","",null,null],[17,"GDK_KEY_Hangul_J_Pieub","","",null,null],[17,"GDK_KEY_Hangul_J_PieubSios","","",null,null],[17,"GDK_KEY_Hangul_J_Rieul","","",null,null],[17,"GDK_KEY_Hangul_J_RieulHieuh","","",null,null],[17,"GDK_KEY_Hangul_J_RieulKiyeog","","",null,null],[17,"GDK_KEY_Hangul_J_RieulMieum","","",null,null],[17,"GDK_KEY_Hangul_J_RieulPhieuf","","",null,null],[17,"GDK_KEY_Hangul_J_RieulPieub","","",null,null],[17,"GDK_KEY_Hangul_J_RieulSios","","",null,null],[17,"GDK_KEY_Hangul_J_RieulTieut","","",null,null],[17,"GDK_KEY_Hangul_J_Sios","","",null,null],[17,"GDK_KEY_Hangul_J_SsangKiyeog","","",null,null],[17,"GDK_KEY_Hangul_J_SsangSios","","",null,null],[17,"GDK_KEY_Hangul_J_Tieut","","",null,null],[17,"GDK_KEY_Hangul_J_YeorinHieuh","","",null,null],[17,"GDK_KEY_Hangul_Jamo","","",null,null],[17,"GDK_KEY_Hangul_Jeonja","","",null,null],[17,"GDK_KEY_Hangul_Jieuj","","",null,null],[17,"GDK_KEY_Hangul_Khieuq","","",null,null],[17,"GDK_KEY_Hangul_Kiyeog","","",null,null],[17,"GDK_KEY_Hangul_KiyeogSios","","",null,null],[17,"GDK_KEY_Hangul_KkogjiDalrinIeung","","",null,null],[17,"GDK_KEY_Hangul_Mieum","","",null,null],[17,"GDK_KEY_Hangul_MultipleCandidate","","",null,null],[17,"GDK_KEY_Hangul_Nieun","","",null,null],[17,"GDK_KEY_Hangul_NieunHieuh","","",null,null],[17,"GDK_KEY_Hangul_NieunJieuj","","",null,null],[17,"GDK_KEY_Hangul_O","","",null,null],[17,"GDK_KEY_Hangul_OE","","",null,null],[17,"GDK_KEY_Hangul_PanSios","","",null,null],[17,"GDK_KEY_Hangul_Phieuf","","",null,null],[17,"GDK_KEY_Hangul_Pieub","","",null,null],[17,"GDK_KEY_Hangul_PieubSios","","",null,null],[17,"GDK_KEY_Hangul_PostHanja","","",null,null],[17,"GDK_KEY_Hangul_PreHanja","","",null,null],[17,"GDK_KEY_Hangul_PreviousCandidate","","",null,null],[17,"GDK_KEY_Hangul_Rieul","","",null,null],[17,"GDK_KEY_Hangul_RieulHieuh","","",null,null],[17,"GDK_KEY_Hangul_RieulKiyeog","","",null,null],[17,"GDK_KEY_Hangul_RieulMieum","","",null,null],[17,"GDK_KEY_Hangul_RieulPhieuf","","",null,null],[17,"GDK_KEY_Hangul_RieulPieub","","",null,null],[17,"GDK_KEY_Hangul_RieulSios","","",null,null],[17,"GDK_KEY_Hangul_RieulTieut","","",null,null],[17,"GDK_KEY_Hangul_RieulYeorinHieuh","","",null,null],[17,"GDK_KEY_Hangul_Romaja","","",null,null],[17,"GDK_KEY_Hangul_SingleCandidate","","",null,null],[17,"GDK_KEY_Hangul_Sios","","",null,null],[17,"GDK_KEY_Hangul_Special","","",null,null],[17,"GDK_KEY_Hangul_SsangDikeud","","",null,null],[17,"GDK_KEY_Hangul_SsangJieuj","","",null,null],[17,"GDK_KEY_Hangul_SsangKiyeog","","",null,null],[17,"GDK_KEY_Hangul_SsangPieub","","",null,null],[17,"GDK_KEY_Hangul_SsangSios","","",null,null],[17,"GDK_KEY_Hangul_Start","","",null,null],[17,"GDK_KEY_Hangul_SunkyeongeumMieum","","",null,null],[17,"GDK_KEY_Hangul_SunkyeongeumPhieuf","","",null,null],[17,"GDK_KEY_Hangul_SunkyeongeumPieub","","",null,null],[17,"GDK_KEY_Hangul_Tieut","","",null,null],[17,"GDK_KEY_Hangul_U","","",null,null],[17,"GDK_KEY_Hangul_WA","","",null,null],[17,"GDK_KEY_Hangul_WAE","","",null,null],[17,"GDK_KEY_Hangul_WE","","",null,null],[17,"GDK_KEY_Hangul_WEO","","",null,null],[17,"GDK_KEY_Hangul_WI","","",null,null],[17,"GDK_KEY_Hangul_YA","","",null,null],[17,"GDK_KEY_Hangul_YAE","","",null,null],[17,"GDK_KEY_Hangul_YE","","",null,null],[17,"GDK_KEY_Hangul_YEO","","",null,null],[17,"GDK_KEY_Hangul_YI","","",null,null],[17,"GDK_KEY_Hangul_YO","","",null,null],[17,"GDK_KEY_Hangul_YU","","",null,null],[17,"GDK_KEY_Hangul_YeorinHieuh","","",null,null],[17,"GDK_KEY_Hangul_switch","","",null,null],[17,"GDK_KEY_Hankaku","","",null,null],[17,"GDK_KEY_Hcircumflex","","",null,null],[17,"GDK_KEY_Hebrew_switch","","",null,null],[17,"GDK_KEY_Help","","",null,null],[17,"GDK_KEY_Henkan","","",null,null],[17,"GDK_KEY_Henkan_Mode","","",null,null],[17,"GDK_KEY_Hibernate","","",null,null],[17,"GDK_KEY_Hiragana","","",null,null],[17,"GDK_KEY_Hiragana_Katakana","","",null,null],[17,"GDK_KEY_History","","",null,null],[17,"GDK_KEY_Home","","",null,null],[17,"GDK_KEY_HomePage","","",null,null],[17,"GDK_KEY_HotLinks","","",null,null],[17,"GDK_KEY_Hstroke","","",null,null],[17,"GDK_KEY_Hyper_L","","",null,null],[17,"GDK_KEY_Hyper_R","","",null,null],[17,"GDK_KEY_I","","",null,null],[17,"GDK_KEY_ISO_Center_Object","","",null,null],[17,"GDK_KEY_ISO_Continuous_Underline","","",null,null],[17,"GDK_KEY_ISO_Discontinuous_Underline","","",null,null],[17,"GDK_KEY_ISO_Emphasize","","",null,null],[17,"GDK_KEY_ISO_Enter","","",null,null],[17,"GDK_KEY_ISO_Fast_Cursor_Down","","",null,null],[17,"GDK_KEY_ISO_Fast_Cursor_Left","","",null,null],[17,"GDK_KEY_ISO_Fast_Cursor_Right","","",null,null],[17,"GDK_KEY_ISO_Fast_Cursor_Up","","",null,null],[17,"GDK_KEY_ISO_First_Group","","",null,null],[17,"GDK_KEY_ISO_First_Group_Lock","","",null,null],[17,"GDK_KEY_ISO_Group_Latch","","",null,null],[17,"GDK_KEY_ISO_Group_Lock","","",null,null],[17,"GDK_KEY_ISO_Group_Shift","","",null,null],[17,"GDK_KEY_ISO_Last_Group","","",null,null],[17,"GDK_KEY_ISO_Last_Group_Lock","","",null,null],[17,"GDK_KEY_ISO_Left_Tab","","",null,null],[17,"GDK_KEY_ISO_Level2_Latch","","",null,null],[17,"GDK_KEY_ISO_Level3_Latch","","",null,null],[17,"GDK_KEY_ISO_Level3_Lock","","",null,null],[17,"GDK_KEY_ISO_Level3_Shift","","",null,null],[17,"GDK_KEY_ISO_Level5_Latch","","",null,null],[17,"GDK_KEY_ISO_Level5_Lock","","",null,null],[17,"GDK_KEY_ISO_Level5_Shift","","",null,null],[17,"GDK_KEY_ISO_Lock","","",null,null],[17,"GDK_KEY_ISO_Move_Line_Down","","",null,null],[17,"GDK_KEY_ISO_Move_Line_Up","","",null,null],[17,"GDK_KEY_ISO_Next_Group","","",null,null],[17,"GDK_KEY_ISO_Next_Group_Lock","","",null,null],[17,"GDK_KEY_ISO_Partial_Line_Down","","",null,null],[17,"GDK_KEY_ISO_Partial_Line_Up","","",null,null],[17,"GDK_KEY_ISO_Partial_Space_Left","","",null,null],[17,"GDK_KEY_ISO_Partial_Space_Right","","",null,null],[17,"GDK_KEY_ISO_Prev_Group","","",null,null],[17,"GDK_KEY_ISO_Prev_Group_Lock","","",null,null],[17,"GDK_KEY_ISO_Release_Both_Margins","","",null,null],[17,"GDK_KEY_ISO_Release_Margin_Left","","",null,null],[17,"GDK_KEY_ISO_Release_Margin_Right","","",null,null],[17,"GDK_KEY_ISO_Set_Margin_Left","","",null,null],[17,"GDK_KEY_ISO_Set_Margin_Right","","",null,null],[17,"GDK_KEY_Iabovedot","","",null,null],[17,"GDK_KEY_Iacute","","",null,null],[17,"GDK_KEY_Ibelowdot","","",null,null],[17,"GDK_KEY_Ibreve","","",null,null],[17,"GDK_KEY_Icircumflex","","",null,null],[17,"GDK_KEY_Idiaeresis","","",null,null],[17,"GDK_KEY_Igrave","","",null,null],[17,"GDK_KEY_Ihook","","",null,null],[17,"GDK_KEY_Imacron","","",null,null],[17,"GDK_KEY_Insert","","",null,null],[17,"GDK_KEY_Iogonek","","",null,null],[17,"GDK_KEY_Itilde","","",null,null],[17,"GDK_KEY_J","","",null,null],[17,"GDK_KEY_Jcircumflex","","",null,null],[17,"GDK_KEY_K","","",null,null],[17,"GDK_KEY_KP_0","","",null,null],[17,"GDK_KEY_KP_1","","",null,null],[17,"GDK_KEY_KP_2","","",null,null],[17,"GDK_KEY_KP_3","","",null,null],[17,"GDK_KEY_KP_4","","",null,null],[17,"GDK_KEY_KP_5","","",null,null],[17,"GDK_KEY_KP_6","","",null,null],[17,"GDK_KEY_KP_7","","",null,null],[17,"GDK_KEY_KP_8","","",null,null],[17,"GDK_KEY_KP_9","","",null,null],[17,"GDK_KEY_KP_Add","","",null,null],[17,"GDK_KEY_KP_Begin","","",null,null],[17,"GDK_KEY_KP_Decimal","","",null,null],[17,"GDK_KEY_KP_Delete","","",null,null],[17,"GDK_KEY_KP_Divide","","",null,null],[17,"GDK_KEY_KP_Down","","",null,null],[17,"GDK_KEY_KP_End","","",null,null],[17,"GDK_KEY_KP_Enter","","",null,null],[17,"GDK_KEY_KP_Equal","","",null,null],[17,"GDK_KEY_KP_F1","","",null,null],[17,"GDK_KEY_KP_F2","","",null,null],[17,"GDK_KEY_KP_F3","","",null,null],[17,"GDK_KEY_KP_F4","","",null,null],[17,"GDK_KEY_KP_Home","","",null,null],[17,"GDK_KEY_KP_Insert","","",null,null],[17,"GDK_KEY_KP_Left","","",null,null],[17,"GDK_KEY_KP_Multiply","","",null,null],[17,"GDK_KEY_KP_Next","","",null,null],[17,"GDK_KEY_KP_Page_Down","","",null,null],[17,"GDK_KEY_KP_Page_Up","","",null,null],[17,"GDK_KEY_KP_Prior","","",null,null],[17,"GDK_KEY_KP_Right","","",null,null],[17,"GDK_KEY_KP_Separator","","",null,null],[17,"GDK_KEY_KP_Space","","",null,null],[17,"GDK_KEY_KP_Subtract","","",null,null],[17,"GDK_KEY_KP_Tab","","",null,null],[17,"GDK_KEY_KP_Up","","",null,null],[17,"GDK_KEY_Kana_Lock","","",null,null],[17,"GDK_KEY_Kana_Shift","","",null,null],[17,"GDK_KEY_Kanji","","",null,null],[17,"GDK_KEY_Kanji_Bangou","","",null,null],[17,"GDK_KEY_Katakana","","",null,null],[17,"GDK_KEY_KbdBrightnessDown","","",null,null],[17,"GDK_KEY_KbdBrightnessUp","","",null,null],[17,"GDK_KEY_KbdLightOnOff","","",null,null],[17,"GDK_KEY_Kcedilla","","",null,null],[17,"GDK_KEY_Korean_Won","","",null,null],[17,"GDK_KEY_L","","",null,null],[17,"GDK_KEY_L1","","",null,null],[17,"GDK_KEY_L10","","",null,null],[17,"GDK_KEY_L2","","",null,null],[17,"GDK_KEY_L3","","",null,null],[17,"GDK_KEY_L4","","",null,null],[17,"GDK_KEY_L5","","",null,null],[17,"GDK_KEY_L6","","",null,null],[17,"GDK_KEY_L7","","",null,null],[17,"GDK_KEY_L8","","",null,null],[17,"GDK_KEY_L9","","",null,null],[17,"GDK_KEY_Lacute","","",null,null],[17,"GDK_KEY_Last_Virtual_Screen","","",null,null],[17,"GDK_KEY_Launch0","","",null,null],[17,"GDK_KEY_Launch1","","",null,null],[17,"GDK_KEY_Launch2","","",null,null],[17,"GDK_KEY_Launch3","","",null,null],[17,"GDK_KEY_Launch4","","",null,null],[17,"GDK_KEY_Launch5","","",null,null],[17,"GDK_KEY_Launch6","","",null,null],[17,"GDK_KEY_Launch7","","",null,null],[17,"GDK_KEY_Launch8","","",null,null],[17,"GDK_KEY_Launch9","","",null,null],[17,"GDK_KEY_LaunchA","","",null,null],[17,"GDK_KEY_LaunchB","","",null,null],[17,"GDK_KEY_LaunchC","","",null,null],[17,"GDK_KEY_LaunchD","","",null,null],[17,"GDK_KEY_LaunchE","","",null,null],[17,"GDK_KEY_LaunchF","","",null,null],[17,"GDK_KEY_Lbelowdot","","",null,null],[17,"GDK_KEY_Lcaron","","",null,null],[17,"GDK_KEY_Lcedilla","","",null,null],[17,"GDK_KEY_Left","","",null,null],[17,"GDK_KEY_LightBulb","","",null,null],[17,"GDK_KEY_Linefeed","","",null,null],[17,"GDK_KEY_LiraSign","","",null,null],[17,"GDK_KEY_LogGrabInfo","","",null,null],[17,"GDK_KEY_LogOff","","",null,null],[17,"GDK_KEY_LogWindowTree","","",null,null],[17,"GDK_KEY_Lstroke","","",null,null],[17,"GDK_KEY_M","","",null,null],[17,"GDK_KEY_Mabovedot","","",null,null],[17,"GDK_KEY_Macedonia_DSE","","",null,null],[17,"GDK_KEY_Macedonia_GJE","","",null,null],[17,"GDK_KEY_Macedonia_KJE","","",null,null],[17,"GDK_KEY_Macedonia_dse","","",null,null],[17,"GDK_KEY_Macedonia_gje","","",null,null],[17,"GDK_KEY_Macedonia_kje","","",null,null],[17,"GDK_KEY_Mae_Koho","","",null,null],[17,"GDK_KEY_Mail","","",null,null],[17,"GDK_KEY_MailForward","","",null,null],[17,"GDK_KEY_Market","","",null,null],[17,"GDK_KEY_Massyo","","",null,null],[17,"GDK_KEY_Meeting","","",null,null],[17,"GDK_KEY_Memo","","",null,null],[17,"GDK_KEY_Menu","","",null,null],[17,"GDK_KEY_MenuKB","","",null,null],[17,"GDK_KEY_MenuPB","","",null,null],[17,"GDK_KEY_Messenger","","",null,null],[17,"GDK_KEY_Meta_L","","",null,null],[17,"GDK_KEY_Meta_R","","",null,null],[17,"GDK_KEY_MillSign","","",null,null],[17,"GDK_KEY_ModeLock","","",null,null],[17,"GDK_KEY_Mode_switch","","",null,null],[17,"GDK_KEY_MonBrightnessDown","","",null,null],[17,"GDK_KEY_MonBrightnessUp","","",null,null],[17,"GDK_KEY_MouseKeys_Accel_Enable","","",null,null],[17,"GDK_KEY_MouseKeys_Enable","","",null,null],[17,"GDK_KEY_Muhenkan","","",null,null],[17,"GDK_KEY_Multi_key","","",null,null],[17,"GDK_KEY_MultipleCandidate","","",null,null],[17,"GDK_KEY_Music","","",null,null],[17,"GDK_KEY_MyComputer","","",null,null],[17,"GDK_KEY_MySites","","",null,null],[17,"GDK_KEY_N","","",null,null],[17,"GDK_KEY_Nacute","","",null,null],[17,"GDK_KEY_NairaSign","","",null,null],[17,"GDK_KEY_Ncaron","","",null,null],[17,"GDK_KEY_Ncedilla","","",null,null],[17,"GDK_KEY_New","","",null,null],[17,"GDK_KEY_NewSheqelSign","","",null,null],[17,"GDK_KEY_News","","",null,null],[17,"GDK_KEY_Next","","",null,null],[17,"GDK_KEY_Next_VMode","","",null,null],[17,"GDK_KEY_Next_Virtual_Screen","","",null,null],[17,"GDK_KEY_Ntilde","","",null,null],[17,"GDK_KEY_Num_Lock","","",null,null],[17,"GDK_KEY_O","","",null,null],[17,"GDK_KEY_OE","","",null,null],[17,"GDK_KEY_Oacute","","",null,null],[17,"GDK_KEY_Obarred","","",null,null],[17,"GDK_KEY_Obelowdot","","",null,null],[17,"GDK_KEY_Ocaron","","",null,null],[17,"GDK_KEY_Ocircumflex","","",null,null],[17,"GDK_KEY_Ocircumflexacute","","",null,null],[17,"GDK_KEY_Ocircumflexbelowdot","","",null,null],[17,"GDK_KEY_Ocircumflexgrave","","",null,null],[17,"GDK_KEY_Ocircumflexhook","","",null,null],[17,"GDK_KEY_Ocircumflextilde","","",null,null],[17,"GDK_KEY_Odiaeresis","","",null,null],[17,"GDK_KEY_Odoubleacute","","",null,null],[17,"GDK_KEY_OfficeHome","","",null,null],[17,"GDK_KEY_Ograve","","",null,null],[17,"GDK_KEY_Ohook","","",null,null],[17,"GDK_KEY_Ohorn","","",null,null],[17,"GDK_KEY_Ohornacute","","",null,null],[17,"GDK_KEY_Ohornbelowdot","","",null,null],[17,"GDK_KEY_Ohorngrave","","",null,null],[17,"GDK_KEY_Ohornhook","","",null,null],[17,"GDK_KEY_Ohorntilde","","",null,null],[17,"GDK_KEY_Omacron","","",null,null],[17,"GDK_KEY_Ooblique","","",null,null],[17,"GDK_KEY_Open","","",null,null],[17,"GDK_KEY_OpenURL","","",null,null],[17,"GDK_KEY_Option","","",null,null],[17,"GDK_KEY_Oslash","","",null,null],[17,"GDK_KEY_Otilde","","",null,null],[17,"GDK_KEY_Overlay1_Enable","","",null,null],[17,"GDK_KEY_Overlay2_Enable","","",null,null],[17,"GDK_KEY_P","","",null,null],[17,"GDK_KEY_Pabovedot","","",null,null],[17,"GDK_KEY_Page_Down","","",null,null],[17,"GDK_KEY_Page_Up","","",null,null],[17,"GDK_KEY_Paste","","",null,null],[17,"GDK_KEY_Pause","","",null,null],[17,"GDK_KEY_PesetaSign","","",null,null],[17,"GDK_KEY_Phone","","",null,null],[17,"GDK_KEY_Pictures","","",null,null],[17,"GDK_KEY_Pointer_Accelerate","","",null,null],[17,"GDK_KEY_Pointer_Button1","","",null,null],[17,"GDK_KEY_Pointer_Button2","","",null,null],[17,"GDK_KEY_Pointer_Button3","","",null,null],[17,"GDK_KEY_Pointer_Button4","","",null,null],[17,"GDK_KEY_Pointer_Button5","","",null,null],[17,"GDK_KEY_Pointer_Button_Dflt","","",null,null],[17,"GDK_KEY_Pointer_DblClick1","","",null,null],[17,"GDK_KEY_Pointer_DblClick2","","",null,null],[17,"GDK_KEY_Pointer_DblClick3","","",null,null],[17,"GDK_KEY_Pointer_DblClick4","","",null,null],[17,"GDK_KEY_Pointer_DblClick5","","",null,null],[17,"GDK_KEY_Pointer_DblClick_Dflt","","",null,null],[17,"GDK_KEY_Pointer_DfltBtnNext","","",null,null],[17,"GDK_KEY_Pointer_DfltBtnPrev","","",null,null],[17,"GDK_KEY_Pointer_Down","","",null,null],[17,"GDK_KEY_Pointer_DownLeft","","",null,null],[17,"GDK_KEY_Pointer_DownRight","","",null,null],[17,"GDK_KEY_Pointer_Drag1","","",null,null],[17,"GDK_KEY_Pointer_Drag2","","",null,null],[17,"GDK_KEY_Pointer_Drag3","","",null,null],[17,"GDK_KEY_Pointer_Drag4","","",null,null],[17,"GDK_KEY_Pointer_Drag5","","",null,null],[17,"GDK_KEY_Pointer_Drag_Dflt","","",null,null],[17,"GDK_KEY_Pointer_EnableKeys","","",null,null],[17,"GDK_KEY_Pointer_Left","","",null,null],[17,"GDK_KEY_Pointer_Right","","",null,null],[17,"GDK_KEY_Pointer_Up","","",null,null],[17,"GDK_KEY_Pointer_UpLeft","","",null,null],[17,"GDK_KEY_Pointer_UpRight","","",null,null],[17,"GDK_KEY_PowerDown","","",null,null],[17,"GDK_KEY_PowerOff","","",null,null],[17,"GDK_KEY_Prev_VMode","","",null,null],[17,"GDK_KEY_Prev_Virtual_Screen","","",null,null],[17,"GDK_KEY_PreviousCandidate","","",null,null],[17,"GDK_KEY_Print","","",null,null],[17,"GDK_KEY_Prior","","",null,null],[17,"GDK_KEY_Q","","",null,null],[17,"GDK_KEY_R","","",null,null],[17,"GDK_KEY_R1","","",null,null],[17,"GDK_KEY_R10","","",null,null],[17,"GDK_KEY_R11","","",null,null],[17,"GDK_KEY_R12","","",null,null],[17,"GDK_KEY_R13","","",null,null],[17,"GDK_KEY_R14","","",null,null],[17,"GDK_KEY_R15","","",null,null],[17,"GDK_KEY_R2","","",null,null],[17,"GDK_KEY_R3","","",null,null],[17,"GDK_KEY_R4","","",null,null],[17,"GDK_KEY_R5","","",null,null],[17,"GDK_KEY_R6","","",null,null],[17,"GDK_KEY_R7","","",null,null],[17,"GDK_KEY_R8","","",null,null],[17,"GDK_KEY_R9","","",null,null],[17,"GDK_KEY_Racute","","",null,null],[17,"GDK_KEY_Rcaron","","",null,null],[17,"GDK_KEY_Rcedilla","","",null,null],[17,"GDK_KEY_Red","","",null,null],[17,"GDK_KEY_Redo","","",null,null],[17,"GDK_KEY_Refresh","","",null,null],[17,"GDK_KEY_Reload","","",null,null],[17,"GDK_KEY_RepeatKeys_Enable","","",null,null],[17,"GDK_KEY_Reply","","",null,null],[17,"GDK_KEY_Return","","",null,null],[17,"GDK_KEY_Right","","",null,null],[17,"GDK_KEY_RockerDown","","",null,null],[17,"GDK_KEY_RockerEnter","","",null,null],[17,"GDK_KEY_RockerUp","","",null,null],[17,"GDK_KEY_Romaji","","",null,null],[17,"GDK_KEY_RotateWindows","","",null,null],[17,"GDK_KEY_RotationKB","","",null,null],[17,"GDK_KEY_RotationPB","","",null,null],[17,"GDK_KEY_RupeeSign","","",null,null],[17,"GDK_KEY_S","","",null,null],[17,"GDK_KEY_SCHWA","","",null,null],[17,"GDK_KEY_Sabovedot","","",null,null],[17,"GDK_KEY_Sacute","","",null,null],[17,"GDK_KEY_Save","","",null,null],[17,"GDK_KEY_Scaron","","",null,null],[17,"GDK_KEY_Scedilla","","",null,null],[17,"GDK_KEY_Scircumflex","","",null,null],[17,"GDK_KEY_ScreenSaver","","",null,null],[17,"GDK_KEY_ScrollClick","","",null,null],[17,"GDK_KEY_ScrollDown","","",null,null],[17,"GDK_KEY_ScrollUp","","",null,null],[17,"GDK_KEY_Scroll_Lock","","",null,null],[17,"GDK_KEY_Search","","",null,null],[17,"GDK_KEY_Select","","",null,null],[17,"GDK_KEY_SelectButton","","",null,null],[17,"GDK_KEY_Send","","",null,null],[17,"GDK_KEY_Serbian_DJE","","",null,null],[17,"GDK_KEY_Serbian_DZE","","",null,null],[17,"GDK_KEY_Serbian_JE","","",null,null],[17,"GDK_KEY_Serbian_LJE","","",null,null],[17,"GDK_KEY_Serbian_NJE","","",null,null],[17,"GDK_KEY_Serbian_TSHE","","",null,null],[17,"GDK_KEY_Serbian_dje","","",null,null],[17,"GDK_KEY_Serbian_dze","","",null,null],[17,"GDK_KEY_Serbian_je","","",null,null],[17,"GDK_KEY_Serbian_lje","","",null,null],[17,"GDK_KEY_Serbian_nje","","",null,null],[17,"GDK_KEY_Serbian_tshe","","",null,null],[17,"GDK_KEY_Shift_L","","",null,null],[17,"GDK_KEY_Shift_Lock","","",null,null],[17,"GDK_KEY_Shift_R","","",null,null],[17,"GDK_KEY_Shop","","",null,null],[17,"GDK_KEY_SingleCandidate","","",null,null],[17,"GDK_KEY_Sinh_a","","",null,null],[17,"GDK_KEY_Sinh_aa","","",null,null],[17,"GDK_KEY_Sinh_aa2","","",null,null],[17,"GDK_KEY_Sinh_ae","","",null,null],[17,"GDK_KEY_Sinh_ae2","","",null,null],[17,"GDK_KEY_Sinh_aee","","",null,null],[17,"GDK_KEY_Sinh_aee2","","",null,null],[17,"GDK_KEY_Sinh_ai","","",null,null],[17,"GDK_KEY_Sinh_ai2","","",null,null],[17,"GDK_KEY_Sinh_al","","",null,null],[17,"GDK_KEY_Sinh_au","","",null,null],[17,"GDK_KEY_Sinh_au2","","",null,null],[17,"GDK_KEY_Sinh_ba","","",null,null],[17,"GDK_KEY_Sinh_bha","","",null,null],[17,"GDK_KEY_Sinh_ca","","",null,null],[17,"GDK_KEY_Sinh_cha","","",null,null],[17,"GDK_KEY_Sinh_dda","","",null,null],[17,"GDK_KEY_Sinh_ddha","","",null,null],[17,"GDK_KEY_Sinh_dha","","",null,null],[17,"GDK_KEY_Sinh_dhha","","",null,null],[17,"GDK_KEY_Sinh_e","","",null,null],[17,"GDK_KEY_Sinh_e2","","",null,null],[17,"GDK_KEY_Sinh_ee","","",null,null],[17,"GDK_KEY_Sinh_ee2","","",null,null],[17,"GDK_KEY_Sinh_fa","","",null,null],[17,"GDK_KEY_Sinh_ga","","",null,null],[17,"GDK_KEY_Sinh_gha","","",null,null],[17,"GDK_KEY_Sinh_h2","","",null,null],[17,"GDK_KEY_Sinh_ha","","",null,null],[17,"GDK_KEY_Sinh_i","","",null,null],[17,"GDK_KEY_Sinh_i2","","",null,null],[17,"GDK_KEY_Sinh_ii","","",null,null],[17,"GDK_KEY_Sinh_ii2","","",null,null],[17,"GDK_KEY_Sinh_ja","","",null,null],[17,"GDK_KEY_Sinh_jha","","",null,null],[17,"GDK_KEY_Sinh_jnya","","",null,null],[17,"GDK_KEY_Sinh_ka","","",null,null],[17,"GDK_KEY_Sinh_kha","","",null,null],[17,"GDK_KEY_Sinh_kunddaliya","","",null,null],[17,"GDK_KEY_Sinh_la","","",null,null],[17,"GDK_KEY_Sinh_lla","","",null,null],[17,"GDK_KEY_Sinh_lu","","",null,null],[17,"GDK_KEY_Sinh_lu2","","",null,null],[17,"GDK_KEY_Sinh_luu","","",null,null],[17,"GDK_KEY_Sinh_luu2","","",null,null],[17,"GDK_KEY_Sinh_ma","","",null,null],[17,"GDK_KEY_Sinh_mba","","",null,null],[17,"GDK_KEY_Sinh_na","","",null,null],[17,"GDK_KEY_Sinh_ndda","","",null,null],[17,"GDK_KEY_Sinh_ndha","","",null,null],[17,"GDK_KEY_Sinh_ng","","",null,null],[17,"GDK_KEY_Sinh_ng2","","",null,null],[17,"GDK_KEY_Sinh_nga","","",null,null],[17,"GDK_KEY_Sinh_nja","","",null,null],[17,"GDK_KEY_Sinh_nna","","",null,null],[17,"GDK_KEY_Sinh_nya","","",null,null],[17,"GDK_KEY_Sinh_o","","",null,null],[17,"GDK_KEY_Sinh_o2","","",null,null],[17,"GDK_KEY_Sinh_oo","","",null,null],[17,"GDK_KEY_Sinh_oo2","","",null,null],[17,"GDK_KEY_Sinh_pa","","",null,null],[17,"GDK_KEY_Sinh_pha","","",null,null],[17,"GDK_KEY_Sinh_ra","","",null,null],[17,"GDK_KEY_Sinh_ri","","",null,null],[17,"GDK_KEY_Sinh_rii","","",null,null],[17,"GDK_KEY_Sinh_ru2","","",null,null],[17,"GDK_KEY_Sinh_ruu2","","",null,null],[17,"GDK_KEY_Sinh_sa","","",null,null],[17,"GDK_KEY_Sinh_sha","","",null,null],[17,"GDK_KEY_Sinh_ssha","","",null,null],[17,"GDK_KEY_Sinh_tha","","",null,null],[17,"GDK_KEY_Sinh_thha","","",null,null],[17,"GDK_KEY_Sinh_tta","","",null,null],[17,"GDK_KEY_Sinh_ttha","","",null,null],[17,"GDK_KEY_Sinh_u","","",null,null],[17,"GDK_KEY_Sinh_u2","","",null,null],[17,"GDK_KEY_Sinh_uu","","",null,null],[17,"GDK_KEY_Sinh_uu2","","",null,null],[17,"GDK_KEY_Sinh_va","","",null,null],[17,"GDK_KEY_Sinh_ya","","",null,null],[17,"GDK_KEY_Sleep","","",null,null],[17,"GDK_KEY_SlowKeys_Enable","","",null,null],[17,"GDK_KEY_Spell","","",null,null],[17,"GDK_KEY_SplitScreen","","",null,null],[17,"GDK_KEY_Standby","","",null,null],[17,"GDK_KEY_Start","","",null,null],[17,"GDK_KEY_StickyKeys_Enable","","",null,null],[17,"GDK_KEY_Stop","","",null,null],[17,"GDK_KEY_Subtitle","","",null,null],[17,"GDK_KEY_Super_L","","",null,null],[17,"GDK_KEY_Super_R","","",null,null],[17,"GDK_KEY_Support","","",null,null],[17,"GDK_KEY_Suspend","","",null,null],[17,"GDK_KEY_Switch_VT_1","","",null,null],[17,"GDK_KEY_Switch_VT_10","","",null,null],[17,"GDK_KEY_Switch_VT_11","","",null,null],[17,"GDK_KEY_Switch_VT_12","","",null,null],[17,"GDK_KEY_Switch_VT_2","","",null,null],[17,"GDK_KEY_Switch_VT_3","","",null,null],[17,"GDK_KEY_Switch_VT_4","","",null,null],[17,"GDK_KEY_Switch_VT_5","","",null,null],[17,"GDK_KEY_Switch_VT_6","","",null,null],[17,"GDK_KEY_Switch_VT_7","","",null,null],[17,"GDK_KEY_Switch_VT_8","","",null,null],[17,"GDK_KEY_Switch_VT_9","","",null,null],[17,"GDK_KEY_Sys_Req","","",null,null],[17,"GDK_KEY_T","","",null,null],[17,"GDK_KEY_THORN","","",null,null],[17,"GDK_KEY_Tab","","",null,null],[17,"GDK_KEY_Tabovedot","","",null,null],[17,"GDK_KEY_TaskPane","","",null,null],[17,"GDK_KEY_Tcaron","","",null,null],[17,"GDK_KEY_Tcedilla","","",null,null],[17,"GDK_KEY_Terminal","","",null,null],[17,"GDK_KEY_Terminate_Server","","",null,null],[17,"GDK_KEY_Thai_baht","","",null,null],[17,"GDK_KEY_Thai_bobaimai","","",null,null],[17,"GDK_KEY_Thai_chochan","","",null,null],[17,"GDK_KEY_Thai_chochang","","",null,null],[17,"GDK_KEY_Thai_choching","","",null,null],[17,"GDK_KEY_Thai_chochoe","","",null,null],[17,"GDK_KEY_Thai_dochada","","",null,null],[17,"GDK_KEY_Thai_dodek","","",null,null],[17,"GDK_KEY_Thai_fofa","","",null,null],[17,"GDK_KEY_Thai_fofan","","",null,null],[17,"GDK_KEY_Thai_hohip","","",null,null],[17,"GDK_KEY_Thai_honokhuk","","",null,null],[17,"GDK_KEY_Thai_khokhai","","",null,null],[17,"GDK_KEY_Thai_khokhon","","",null,null],[17,"GDK_KEY_Thai_khokhuat","","",null,null],[17,"GDK_KEY_Thai_khokhwai","","",null,null],[17,"GDK_KEY_Thai_khorakhang","","",null,null],[17,"GDK_KEY_Thai_kokai","","",null,null],[17,"GDK_KEY_Thai_lakkhangyao","","",null,null],[17,"GDK_KEY_Thai_lekchet","","",null,null],[17,"GDK_KEY_Thai_lekha","","",null,null],[17,"GDK_KEY_Thai_lekhok","","",null,null],[17,"GDK_KEY_Thai_lekkao","","",null,null],[17,"GDK_KEY_Thai_leknung","","",null,null],[17,"GDK_KEY_Thai_lekpaet","","",null,null],[17,"GDK_KEY_Thai_leksam","","",null,null],[17,"GDK_KEY_Thai_leksi","","",null,null],[17,"GDK_KEY_Thai_leksong","","",null,null],[17,"GDK_KEY_Thai_leksun","","",null,null],[17,"GDK_KEY_Thai_lochula","","",null,null],[17,"GDK_KEY_Thai_loling","","",null,null],[17,"GDK_KEY_Thai_lu","","",null,null],[17,"GDK_KEY_Thai_maichattawa","","",null,null],[17,"GDK_KEY_Thai_maiek","","",null,null],[17,"GDK_KEY_Thai_maihanakat","","",null,null],[17,"GDK_KEY_Thai_maihanakat_maitho","","",null,null],[17,"GDK_KEY_Thai_maitaikhu","","",null,null],[17,"GDK_KEY_Thai_maitho","","",null,null],[17,"GDK_KEY_Thai_maitri","","",null,null],[17,"GDK_KEY_Thai_maiyamok","","",null,null],[17,"GDK_KEY_Thai_moma","","",null,null],[17,"GDK_KEY_Thai_ngongu","","",null,null],[17,"GDK_KEY_Thai_nikhahit","","",null,null],[17,"GDK_KEY_Thai_nonen","","",null,null],[17,"GDK_KEY_Thai_nonu","","",null,null],[17,"GDK_KEY_Thai_oang","","",null,null],[17,"GDK_KEY_Thai_paiyannoi","","",null,null],[17,"GDK_KEY_Thai_phinthu","","",null,null],[17,"GDK_KEY_Thai_phophan","","",null,null],[17,"GDK_KEY_Thai_phophung","","",null,null],[17,"GDK_KEY_Thai_phosamphao","","",null,null],[17,"GDK_KEY_Thai_popla","","",null,null],[17,"GDK_KEY_Thai_rorua","","",null,null],[17,"GDK_KEY_Thai_ru","","",null,null],[17,"GDK_KEY_Thai_saraa","","",null,null],[17,"GDK_KEY_Thai_saraaa","","",null,null],[17,"GDK_KEY_Thai_saraae","","",null,null],[17,"GDK_KEY_Thai_saraaimaimalai","","",null,null],[17,"GDK_KEY_Thai_saraaimaimuan","","",null,null],[17,"GDK_KEY_Thai_saraam","","",null,null],[17,"GDK_KEY_Thai_sarae","","",null,null],[17,"GDK_KEY_Thai_sarai","","",null,null],[17,"GDK_KEY_Thai_saraii","","",null,null],[17,"GDK_KEY_Thai_sarao","","",null,null],[17,"GDK_KEY_Thai_sarau","","",null,null],[17,"GDK_KEY_Thai_saraue","","",null,null],[17,"GDK_KEY_Thai_sarauee","","",null,null],[17,"GDK_KEY_Thai_sarauu","","",null,null],[17,"GDK_KEY_Thai_sorusi","","",null,null],[17,"GDK_KEY_Thai_sosala","","",null,null],[17,"GDK_KEY_Thai_soso","","",null,null],[17,"GDK_KEY_Thai_sosua","","",null,null],[17,"GDK_KEY_Thai_thanthakhat","","",null,null],[17,"GDK_KEY_Thai_thonangmontho","","",null,null],[17,"GDK_KEY_Thai_thophuthao","","",null,null],[17,"GDK_KEY_Thai_thothahan","","",null,null],[17,"GDK_KEY_Thai_thothan","","",null,null],[17,"GDK_KEY_Thai_thothong","","",null,null],[17,"GDK_KEY_Thai_thothung","","",null,null],[17,"GDK_KEY_Thai_topatak","","",null,null],[17,"GDK_KEY_Thai_totao","","",null,null],[17,"GDK_KEY_Thai_wowaen","","",null,null],[17,"GDK_KEY_Thai_yoyak","","",null,null],[17,"GDK_KEY_Thai_yoying","","",null,null],[17,"GDK_KEY_Thorn","","",null,null],[17,"GDK_KEY_Time","","",null,null],[17,"GDK_KEY_ToDoList","","",null,null],[17,"GDK_KEY_Tools","","",null,null],[17,"GDK_KEY_TopMenu","","",null,null],[17,"GDK_KEY_TouchpadOff","","",null,null],[17,"GDK_KEY_TouchpadOn","","",null,null],[17,"GDK_KEY_TouchpadToggle","","",null,null],[17,"GDK_KEY_Touroku","","",null,null],[17,"GDK_KEY_Travel","","",null,null],[17,"GDK_KEY_Tslash","","",null,null],[17,"GDK_KEY_U","","",null,null],[17,"GDK_KEY_UWB","","",null,null],[17,"GDK_KEY_Uacute","","",null,null],[17,"GDK_KEY_Ubelowdot","","",null,null],[17,"GDK_KEY_Ubreve","","",null,null],[17,"GDK_KEY_Ucircumflex","","",null,null],[17,"GDK_KEY_Udiaeresis","","",null,null],[17,"GDK_KEY_Udoubleacute","","",null,null],[17,"GDK_KEY_Ugrave","","",null,null],[17,"GDK_KEY_Uhook","","",null,null],[17,"GDK_KEY_Uhorn","","",null,null],[17,"GDK_KEY_Uhornacute","","",null,null],[17,"GDK_KEY_Uhornbelowdot","","",null,null],[17,"GDK_KEY_Uhorngrave","","",null,null],[17,"GDK_KEY_Uhornhook","","",null,null],[17,"GDK_KEY_Uhorntilde","","",null,null],[17,"GDK_KEY_Ukrainian_GHE_WITH_UPTURN","","",null,null],[17,"GDK_KEY_Ukrainian_I","","",null,null],[17,"GDK_KEY_Ukrainian_IE","","",null,null],[17,"GDK_KEY_Ukrainian_YI","","",null,null],[17,"GDK_KEY_Ukrainian_ghe_with_upturn","","",null,null],[17,"GDK_KEY_Ukrainian_i","","",null,null],[17,"GDK_KEY_Ukrainian_ie","","",null,null],[17,"GDK_KEY_Ukrainian_yi","","",null,null],[17,"GDK_KEY_Ukranian_I","","",null,null],[17,"GDK_KEY_Ukranian_JE","","",null,null],[17,"GDK_KEY_Ukranian_YI","","",null,null],[17,"GDK_KEY_Ukranian_i","","",null,null],[17,"GDK_KEY_Ukranian_je","","",null,null],[17,"GDK_KEY_Ukranian_yi","","",null,null],[17,"GDK_KEY_Umacron","","",null,null],[17,"GDK_KEY_Undo","","",null,null],[17,"GDK_KEY_Ungrab","","",null,null],[17,"GDK_KEY_Uogonek","","",null,null],[17,"GDK_KEY_Up","","",null,null],[17,"GDK_KEY_Uring","","",null,null],[17,"GDK_KEY_User1KB","","",null,null],[17,"GDK_KEY_User2KB","","",null,null],[17,"GDK_KEY_UserPB","","",null,null],[17,"GDK_KEY_Utilde","","",null,null],[17,"GDK_KEY_V","","",null,null],[17,"GDK_KEY_VendorHome","","",null,null],[17,"GDK_KEY_Video","","",null,null],[17,"GDK_KEY_View","","",null,null],[17,"GDK_KEY_VoidSymbol","","",null,null],[17,"GDK_KEY_W","","",null,null],[17,"GDK_KEY_WLAN","","",null,null],[17,"GDK_KEY_WWW","","",null,null],[17,"GDK_KEY_Wacute","","",null,null],[17,"GDK_KEY_WakeUp","","",null,null],[17,"GDK_KEY_Wcircumflex","","",null,null],[17,"GDK_KEY_Wdiaeresis","","",null,null],[17,"GDK_KEY_WebCam","","",null,null],[17,"GDK_KEY_Wgrave","","",null,null],[17,"GDK_KEY_WheelButton","","",null,null],[17,"GDK_KEY_WindowClear","","",null,null],[17,"GDK_KEY_WonSign","","",null,null],[17,"GDK_KEY_Word","","",null,null],[17,"GDK_KEY_X","","",null,null],[17,"GDK_KEY_Xabovedot","","",null,null],[17,"GDK_KEY_Xfer","","",null,null],[17,"GDK_KEY_Y","","",null,null],[17,"GDK_KEY_Yacute","","",null,null],[17,"GDK_KEY_Ybelowdot","","",null,null],[17,"GDK_KEY_Ycircumflex","","",null,null],[17,"GDK_KEY_Ydiaeresis","","",null,null],[17,"GDK_KEY_Yellow","","",null,null],[17,"GDK_KEY_Ygrave","","",null,null],[17,"GDK_KEY_Yhook","","",null,null],[17,"GDK_KEY_Ytilde","","",null,null],[17,"GDK_KEY_Z","","",null,null],[17,"GDK_KEY_Zabovedot","","",null,null],[17,"GDK_KEY_Zacute","","",null,null],[17,"GDK_KEY_Zcaron","","",null,null],[17,"GDK_KEY_Zen_Koho","","",null,null],[17,"GDK_KEY_Zenkaku","","",null,null],[17,"GDK_KEY_Zenkaku_Hankaku","","",null,null],[17,"GDK_KEY_ZoomIn","","",null,null],[17,"GDK_KEY_ZoomOut","","",null,null],[17,"GDK_KEY_Zstroke","","",null,null],[17,"GDK_KEY_a","","",null,null],[17,"GDK_KEY_aacute","","",null,null],[17,"GDK_KEY_abelowdot","","",null,null],[17,"GDK_KEY_abovedot","","",null,null],[17,"GDK_KEY_abreve","","",null,null],[17,"GDK_KEY_abreveacute","","",null,null],[17,"GDK_KEY_abrevebelowdot","","",null,null],[17,"GDK_KEY_abrevegrave","","",null,null],[17,"GDK_KEY_abrevehook","","",null,null],[17,"GDK_KEY_abrevetilde","","",null,null],[17,"GDK_KEY_acircumflex","","",null,null],[17,"GDK_KEY_acircumflexacute","","",null,null],[17,"GDK_KEY_acircumflexbelowdot","","",null,null],[17,"GDK_KEY_acircumflexgrave","","",null,null],[17,"GDK_KEY_acircumflexhook","","",null,null],[17,"GDK_KEY_acircumflextilde","","",null,null],[17,"GDK_KEY_acute","","",null,null],[17,"GDK_KEY_adiaeresis","","",null,null],[17,"GDK_KEY_ae","","",null,null],[17,"GDK_KEY_agrave","","",null,null],[17,"GDK_KEY_ahook","","",null,null],[17,"GDK_KEY_amacron","","",null,null],[17,"GDK_KEY_ampersand","","",null,null],[17,"GDK_KEY_aogonek","","",null,null],[17,"GDK_KEY_apostrophe","","",null,null],[17,"GDK_KEY_approxeq","","",null,null],[17,"GDK_KEY_approximate","","",null,null],[17,"GDK_KEY_aring","","",null,null],[17,"GDK_KEY_asciicircum","","",null,null],[17,"GDK_KEY_asciitilde","","",null,null],[17,"GDK_KEY_asterisk","","",null,null],[17,"GDK_KEY_at","","",null,null],[17,"GDK_KEY_atilde","","",null,null],[17,"GDK_KEY_b","","",null,null],[17,"GDK_KEY_babovedot","","",null,null],[17,"GDK_KEY_backslash","","",null,null],[17,"GDK_KEY_ballotcross","","",null,null],[17,"GDK_KEY_bar","","",null,null],[17,"GDK_KEY_because","","",null,null],[17,"GDK_KEY_blank","","",null,null],[17,"GDK_KEY_botintegral","","",null,null],[17,"GDK_KEY_botleftparens","","",null,null],[17,"GDK_KEY_botleftsqbracket","","",null,null],[17,"GDK_KEY_botleftsummation","","",null,null],[17,"GDK_KEY_botrightparens","","",null,null],[17,"GDK_KEY_botrightsqbracket","","",null,null],[17,"GDK_KEY_botrightsummation","","",null,null],[17,"GDK_KEY_bott","","",null,null],[17,"GDK_KEY_botvertsummationconnector","","",null,null],[17,"GDK_KEY_braceleft","","",null,null],[17,"GDK_KEY_braceright","","",null,null],[17,"GDK_KEY_bracketleft","","",null,null],[17,"GDK_KEY_bracketright","","",null,null],[17,"GDK_KEY_braille_blank","","",null,null],[17,"GDK_KEY_braille_dot_1","","",null,null],[17,"GDK_KEY_braille_dot_10","","",null,null],[17,"GDK_KEY_braille_dot_2","","",null,null],[17,"GDK_KEY_braille_dot_3","","",null,null],[17,"GDK_KEY_braille_dot_4","","",null,null],[17,"GDK_KEY_braille_dot_5","","",null,null],[17,"GDK_KEY_braille_dot_6","","",null,null],[17,"GDK_KEY_braille_dot_7","","",null,null],[17,"GDK_KEY_braille_dot_8","","",null,null],[17,"GDK_KEY_braille_dot_9","","",null,null],[17,"GDK_KEY_braille_dots_1","","",null,null],[17,"GDK_KEY_braille_dots_12","","",null,null],[17,"GDK_KEY_braille_dots_123","","",null,null],[17,"GDK_KEY_braille_dots_1234","","",null,null],[17,"GDK_KEY_braille_dots_12345","","",null,null],[17,"GDK_KEY_braille_dots_123456","","",null,null],[17,"GDK_KEY_braille_dots_1234567","","",null,null],[17,"GDK_KEY_braille_dots_12345678","","",null,null],[17,"GDK_KEY_braille_dots_1234568","","",null,null],[17,"GDK_KEY_braille_dots_123457","","",null,null],[17,"GDK_KEY_braille_dots_1234578","","",null,null],[17,"GDK_KEY_braille_dots_123458","","",null,null],[17,"GDK_KEY_braille_dots_12346","","",null,null],[17,"GDK_KEY_braille_dots_123467","","",null,null],[17,"GDK_KEY_braille_dots_1234678","","",null,null],[17,"GDK_KEY_braille_dots_123468","","",null,null],[17,"GDK_KEY_braille_dots_12347","","",null,null],[17,"GDK_KEY_braille_dots_123478","","",null,null],[17,"GDK_KEY_braille_dots_12348","","",null,null],[17,"GDK_KEY_braille_dots_1235","","",null,null],[17,"GDK_KEY_braille_dots_12356","","",null,null],[17,"GDK_KEY_braille_dots_123567","","",null,null],[17,"GDK_KEY_braille_dots_1235678","","",null,null],[17,"GDK_KEY_braille_dots_123568","","",null,null],[17,"GDK_KEY_braille_dots_12357","","",null,null],[17,"GDK_KEY_braille_dots_123578","","",null,null],[17,"GDK_KEY_braille_dots_12358","","",null,null],[17,"GDK_KEY_braille_dots_1236","","",null,null],[17,"GDK_KEY_braille_dots_12367","","",null,null],[17,"GDK_KEY_braille_dots_123678","","",null,null],[17,"GDK_KEY_braille_dots_12368","","",null,null],[17,"GDK_KEY_braille_dots_1237","","",null,null],[17,"GDK_KEY_braille_dots_12378","","",null,null],[17,"GDK_KEY_braille_dots_1238","","",null,null],[17,"GDK_KEY_braille_dots_124","","",null,null],[17,"GDK_KEY_braille_dots_1245","","",null,null],[17,"GDK_KEY_braille_dots_12456","","",null,null],[17,"GDK_KEY_braille_dots_124567","","",null,null],[17,"GDK_KEY_braille_dots_1245678","","",null,null],[17,"GDK_KEY_braille_dots_124568","","",null,null],[17,"GDK_KEY_braille_dots_12457","","",null,null],[17,"GDK_KEY_braille_dots_124578","","",null,null],[17,"GDK_KEY_braille_dots_12458","","",null,null],[17,"GDK_KEY_braille_dots_1246","","",null,null],[17,"GDK_KEY_braille_dots_12467","","",null,null],[17,"GDK_KEY_braille_dots_124678","","",null,null],[17,"GDK_KEY_braille_dots_12468","","",null,null],[17,"GDK_KEY_braille_dots_1247","","",null,null],[17,"GDK_KEY_braille_dots_12478","","",null,null],[17,"GDK_KEY_braille_dots_1248","","",null,null],[17,"GDK_KEY_braille_dots_125","","",null,null],[17,"GDK_KEY_braille_dots_1256","","",null,null],[17,"GDK_KEY_braille_dots_12567","","",null,null],[17,"GDK_KEY_braille_dots_125678","","",null,null],[17,"GDK_KEY_braille_dots_12568","","",null,null],[17,"GDK_KEY_braille_dots_1257","","",null,null],[17,"GDK_KEY_braille_dots_12578","","",null,null],[17,"GDK_KEY_braille_dots_1258","","",null,null],[17,"GDK_KEY_braille_dots_126","","",null,null],[17,"GDK_KEY_braille_dots_1267","","",null,null],[17,"GDK_KEY_braille_dots_12678","","",null,null],[17,"GDK_KEY_braille_dots_1268","","",null,null],[17,"GDK_KEY_braille_dots_127","","",null,null],[17,"GDK_KEY_braille_dots_1278","","",null,null],[17,"GDK_KEY_braille_dots_128","","",null,null],[17,"GDK_KEY_braille_dots_13","","",null,null],[17,"GDK_KEY_braille_dots_134","","",null,null],[17,"GDK_KEY_braille_dots_1345","","",null,null],[17,"GDK_KEY_braille_dots_13456","","",null,null],[17,"GDK_KEY_braille_dots_134567","","",null,null],[17,"GDK_KEY_braille_dots_1345678","","",null,null],[17,"GDK_KEY_braille_dots_134568","","",null,null],[17,"GDK_KEY_braille_dots_13457","","",null,null],[17,"GDK_KEY_braille_dots_134578","","",null,null],[17,"GDK_KEY_braille_dots_13458","","",null,null],[17,"GDK_KEY_braille_dots_1346","","",null,null],[17,"GDK_KEY_braille_dots_13467","","",null,null],[17,"GDK_KEY_braille_dots_134678","","",null,null],[17,"GDK_KEY_braille_dots_13468","","",null,null],[17,"GDK_KEY_braille_dots_1347","","",null,null],[17,"GDK_KEY_braille_dots_13478","","",null,null],[17,"GDK_KEY_braille_dots_1348","","",null,null],[17,"GDK_KEY_braille_dots_135","","",null,null],[17,"GDK_KEY_braille_dots_1356","","",null,null],[17,"GDK_KEY_braille_dots_13567","","",null,null],[17,"GDK_KEY_braille_dots_135678","","",null,null],[17,"GDK_KEY_braille_dots_13568","","",null,null],[17,"GDK_KEY_braille_dots_1357","","",null,null],[17,"GDK_KEY_braille_dots_13578","","",null,null],[17,"GDK_KEY_braille_dots_1358","","",null,null],[17,"GDK_KEY_braille_dots_136","","",null,null],[17,"GDK_KEY_braille_dots_1367","","",null,null],[17,"GDK_KEY_braille_dots_13678","","",null,null],[17,"GDK_KEY_braille_dots_1368","","",null,null],[17,"GDK_KEY_braille_dots_137","","",null,null],[17,"GDK_KEY_braille_dots_1378","","",null,null],[17,"GDK_KEY_braille_dots_138","","",null,null],[17,"GDK_KEY_braille_dots_14","","",null,null],[17,"GDK_KEY_braille_dots_145","","",null,null],[17,"GDK_KEY_braille_dots_1456","","",null,null],[17,"GDK_KEY_braille_dots_14567","","",null,null],[17,"GDK_KEY_braille_dots_145678","","",null,null],[17,"GDK_KEY_braille_dots_14568","","",null,null],[17,"GDK_KEY_braille_dots_1457","","",null,null],[17,"GDK_KEY_braille_dots_14578","","",null,null],[17,"GDK_KEY_braille_dots_1458","","",null,null],[17,"GDK_KEY_braille_dots_146","","",null,null],[17,"GDK_KEY_braille_dots_1467","","",null,null],[17,"GDK_KEY_braille_dots_14678","","",null,null],[17,"GDK_KEY_braille_dots_1468","","",null,null],[17,"GDK_KEY_braille_dots_147","","",null,null],[17,"GDK_KEY_braille_dots_1478","","",null,null],[17,"GDK_KEY_braille_dots_148","","",null,null],[17,"GDK_KEY_braille_dots_15","","",null,null],[17,"GDK_KEY_braille_dots_156","","",null,null],[17,"GDK_KEY_braille_dots_1567","","",null,null],[17,"GDK_KEY_braille_dots_15678","","",null,null],[17,"GDK_KEY_braille_dots_1568","","",null,null],[17,"GDK_KEY_braille_dots_157","","",null,null],[17,"GDK_KEY_braille_dots_1578","","",null,null],[17,"GDK_KEY_braille_dots_158","","",null,null],[17,"GDK_KEY_braille_dots_16","","",null,null],[17,"GDK_KEY_braille_dots_167","","",null,null],[17,"GDK_KEY_braille_dots_1678","","",null,null],[17,"GDK_KEY_braille_dots_168","","",null,null],[17,"GDK_KEY_braille_dots_17","","",null,null],[17,"GDK_KEY_braille_dots_178","","",null,null],[17,"GDK_KEY_braille_dots_18","","",null,null],[17,"GDK_KEY_braille_dots_2","","",null,null],[17,"GDK_KEY_braille_dots_23","","",null,null],[17,"GDK_KEY_braille_dots_234","","",null,null],[17,"GDK_KEY_braille_dots_2345","","",null,null],[17,"GDK_KEY_braille_dots_23456","","",null,null],[17,"GDK_KEY_braille_dots_234567","","",null,null],[17,"GDK_KEY_braille_dots_2345678","","",null,null],[17,"GDK_KEY_braille_dots_234568","","",null,null],[17,"GDK_KEY_braille_dots_23457","","",null,null],[17,"GDK_KEY_braille_dots_234578","","",null,null],[17,"GDK_KEY_braille_dots_23458","","",null,null],[17,"GDK_KEY_braille_dots_2346","","",null,null],[17,"GDK_KEY_braille_dots_23467","","",null,null],[17,"GDK_KEY_braille_dots_234678","","",null,null],[17,"GDK_KEY_braille_dots_23468","","",null,null],[17,"GDK_KEY_braille_dots_2347","","",null,null],[17,"GDK_KEY_braille_dots_23478","","",null,null],[17,"GDK_KEY_braille_dots_2348","","",null,null],[17,"GDK_KEY_braille_dots_235","","",null,null],[17,"GDK_KEY_braille_dots_2356","","",null,null],[17,"GDK_KEY_braille_dots_23567","","",null,null],[17,"GDK_KEY_braille_dots_235678","","",null,null],[17,"GDK_KEY_braille_dots_23568","","",null,null],[17,"GDK_KEY_braille_dots_2357","","",null,null],[17,"GDK_KEY_braille_dots_23578","","",null,null],[17,"GDK_KEY_braille_dots_2358","","",null,null],[17,"GDK_KEY_braille_dots_236","","",null,null],[17,"GDK_KEY_braille_dots_2367","","",null,null],[17,"GDK_KEY_braille_dots_23678","","",null,null],[17,"GDK_KEY_braille_dots_2368","","",null,null],[17,"GDK_KEY_braille_dots_237","","",null,null],[17,"GDK_KEY_braille_dots_2378","","",null,null],[17,"GDK_KEY_braille_dots_238","","",null,null],[17,"GDK_KEY_braille_dots_24","","",null,null],[17,"GDK_KEY_braille_dots_245","","",null,null],[17,"GDK_KEY_braille_dots_2456","","",null,null],[17,"GDK_KEY_braille_dots_24567","","",null,null],[17,"GDK_KEY_braille_dots_245678","","",null,null],[17,"GDK_KEY_braille_dots_24568","","",null,null],[17,"GDK_KEY_braille_dots_2457","","",null,null],[17,"GDK_KEY_braille_dots_24578","","",null,null],[17,"GDK_KEY_braille_dots_2458","","",null,null],[17,"GDK_KEY_braille_dots_246","","",null,null],[17,"GDK_KEY_braille_dots_2467","","",null,null],[17,"GDK_KEY_braille_dots_24678","","",null,null],[17,"GDK_KEY_braille_dots_2468","","",null,null],[17,"GDK_KEY_braille_dots_247","","",null,null],[17,"GDK_KEY_braille_dots_2478","","",null,null],[17,"GDK_KEY_braille_dots_248","","",null,null],[17,"GDK_KEY_braille_dots_25","","",null,null],[17,"GDK_KEY_braille_dots_256","","",null,null],[17,"GDK_KEY_braille_dots_2567","","",null,null],[17,"GDK_KEY_braille_dots_25678","","",null,null],[17,"GDK_KEY_braille_dots_2568","","",null,null],[17,"GDK_KEY_braille_dots_257","","",null,null],[17,"GDK_KEY_braille_dots_2578","","",null,null],[17,"GDK_KEY_braille_dots_258","","",null,null],[17,"GDK_KEY_braille_dots_26","","",null,null],[17,"GDK_KEY_braille_dots_267","","",null,null],[17,"GDK_KEY_braille_dots_2678","","",null,null],[17,"GDK_KEY_braille_dots_268","","",null,null],[17,"GDK_KEY_braille_dots_27","","",null,null],[17,"GDK_KEY_braille_dots_278","","",null,null],[17,"GDK_KEY_braille_dots_28","","",null,null],[17,"GDK_KEY_braille_dots_3","","",null,null],[17,"GDK_KEY_braille_dots_34","","",null,null],[17,"GDK_KEY_braille_dots_345","","",null,null],[17,"GDK_KEY_braille_dots_3456","","",null,null],[17,"GDK_KEY_braille_dots_34567","","",null,null],[17,"GDK_KEY_braille_dots_345678","","",null,null],[17,"GDK_KEY_braille_dots_34568","","",null,null],[17,"GDK_KEY_braille_dots_3457","","",null,null],[17,"GDK_KEY_braille_dots_34578","","",null,null],[17,"GDK_KEY_braille_dots_3458","","",null,null],[17,"GDK_KEY_braille_dots_346","","",null,null],[17,"GDK_KEY_braille_dots_3467","","",null,null],[17,"GDK_KEY_braille_dots_34678","","",null,null],[17,"GDK_KEY_braille_dots_3468","","",null,null],[17,"GDK_KEY_braille_dots_347","","",null,null],[17,"GDK_KEY_braille_dots_3478","","",null,null],[17,"GDK_KEY_braille_dots_348","","",null,null],[17,"GDK_KEY_braille_dots_35","","",null,null],[17,"GDK_KEY_braille_dots_356","","",null,null],[17,"GDK_KEY_braille_dots_3567","","",null,null],[17,"GDK_KEY_braille_dots_35678","","",null,null],[17,"GDK_KEY_braille_dots_3568","","",null,null],[17,"GDK_KEY_braille_dots_357","","",null,null],[17,"GDK_KEY_braille_dots_3578","","",null,null],[17,"GDK_KEY_braille_dots_358","","",null,null],[17,"GDK_KEY_braille_dots_36","","",null,null],[17,"GDK_KEY_braille_dots_367","","",null,null],[17,"GDK_KEY_braille_dots_3678","","",null,null],[17,"GDK_KEY_braille_dots_368","","",null,null],[17,"GDK_KEY_braille_dots_37","","",null,null],[17,"GDK_KEY_braille_dots_378","","",null,null],[17,"GDK_KEY_braille_dots_38","","",null,null],[17,"GDK_KEY_braille_dots_4","","",null,null],[17,"GDK_KEY_braille_dots_45","","",null,null],[17,"GDK_KEY_braille_dots_456","","",null,null],[17,"GDK_KEY_braille_dots_4567","","",null,null],[17,"GDK_KEY_braille_dots_45678","","",null,null],[17,"GDK_KEY_braille_dots_4568","","",null,null],[17,"GDK_KEY_braille_dots_457","","",null,null],[17,"GDK_KEY_braille_dots_4578","","",null,null],[17,"GDK_KEY_braille_dots_458","","",null,null],[17,"GDK_KEY_braille_dots_46","","",null,null],[17,"GDK_KEY_braille_dots_467","","",null,null],[17,"GDK_KEY_braille_dots_4678","","",null,null],[17,"GDK_KEY_braille_dots_468","","",null,null],[17,"GDK_KEY_braille_dots_47","","",null,null],[17,"GDK_KEY_braille_dots_478","","",null,null],[17,"GDK_KEY_braille_dots_48","","",null,null],[17,"GDK_KEY_braille_dots_5","","",null,null],[17,"GDK_KEY_braille_dots_56","","",null,null],[17,"GDK_KEY_braille_dots_567","","",null,null],[17,"GDK_KEY_braille_dots_5678","","",null,null],[17,"GDK_KEY_braille_dots_568","","",null,null],[17,"GDK_KEY_braille_dots_57","","",null,null],[17,"GDK_KEY_braille_dots_578","","",null,null],[17,"GDK_KEY_braille_dots_58","","",null,null],[17,"GDK_KEY_braille_dots_6","","",null,null],[17,"GDK_KEY_braille_dots_67","","",null,null],[17,"GDK_KEY_braille_dots_678","","",null,null],[17,"GDK_KEY_braille_dots_68","","",null,null],[17,"GDK_KEY_braille_dots_7","","",null,null],[17,"GDK_KEY_braille_dots_78","","",null,null],[17,"GDK_KEY_braille_dots_8","","",null,null],[17,"GDK_KEY_breve","","",null,null],[17,"GDK_KEY_brokenbar","","",null,null],[17,"GDK_KEY_c","","",null,null],[17,"GDK_KEY_c_h","","",null,null],[17,"GDK_KEY_cabovedot","","",null,null],[17,"GDK_KEY_cacute","","",null,null],[17,"GDK_KEY_careof","","",null,null],[17,"GDK_KEY_caret","","",null,null],[17,"GDK_KEY_caron","","",null,null],[17,"GDK_KEY_ccaron","","",null,null],[17,"GDK_KEY_ccedilla","","",null,null],[17,"GDK_KEY_ccircumflex","","",null,null],[17,"GDK_KEY_cedilla","","",null,null],[17,"GDK_KEY_cent","","",null,null],[17,"GDK_KEY_ch","","",null,null],[17,"GDK_KEY_checkerboard","","",null,null],[17,"GDK_KEY_checkmark","","",null,null],[17,"GDK_KEY_circle","","",null,null],[17,"GDK_KEY_club","","",null,null],[17,"GDK_KEY_colon","","",null,null],[17,"GDK_KEY_comma","","",null,null],[17,"GDK_KEY_containsas","","",null,null],[17,"GDK_KEY_copyright","","",null,null],[17,"GDK_KEY_cr","","",null,null],[17,"GDK_KEY_crossinglines","","",null,null],[17,"GDK_KEY_cuberoot","","",null,null],[17,"GDK_KEY_currency","","",null,null],[17,"GDK_KEY_cursor","","",null,null],[17,"GDK_KEY_d","","",null,null],[17,"GDK_KEY_dabovedot","","",null,null],[17,"GDK_KEY_dagger","","",null,null],[17,"GDK_KEY_dcaron","","",null,null],[17,"GDK_KEY_dead_A","","",null,null],[17,"GDK_KEY_dead_E","","",null,null],[17,"GDK_KEY_dead_I","","",null,null],[17,"GDK_KEY_dead_O","","",null,null],[17,"GDK_KEY_dead_U","","",null,null],[17,"GDK_KEY_dead_a","","",null,null],[17,"GDK_KEY_dead_abovecomma","","",null,null],[17,"GDK_KEY_dead_abovedot","","",null,null],[17,"GDK_KEY_dead_abovereversedcomma","","",null,null],[17,"GDK_KEY_dead_abovering","","",null,null],[17,"GDK_KEY_dead_acute","","",null,null],[17,"GDK_KEY_dead_belowbreve","","",null,null],[17,"GDK_KEY_dead_belowcircumflex","","",null,null],[17,"GDK_KEY_dead_belowcomma","","",null,null],[17,"GDK_KEY_dead_belowdiaeresis","","",null,null],[17,"GDK_KEY_dead_belowdot","","",null,null],[17,"GDK_KEY_dead_belowmacron","","",null,null],[17,"GDK_KEY_dead_belowring","","",null,null],[17,"GDK_KEY_dead_belowtilde","","",null,null],[17,"GDK_KEY_dead_breve","","",null,null],[17,"GDK_KEY_dead_capital_schwa","","",null,null],[17,"GDK_KEY_dead_caron","","",null,null],[17,"GDK_KEY_dead_cedilla","","",null,null],[17,"GDK_KEY_dead_circumflex","","",null,null],[17,"GDK_KEY_dead_currency","","",null,null],[17,"GDK_KEY_dead_dasia","","",null,null],[17,"GDK_KEY_dead_diaeresis","","",null,null],[17,"GDK_KEY_dead_doubleacute","","",null,null],[17,"GDK_KEY_dead_doublegrave","","",null,null],[17,"GDK_KEY_dead_e","","",null,null],[17,"GDK_KEY_dead_grave","","",null,null],[17,"GDK_KEY_dead_greek","","",null,null],[17,"GDK_KEY_dead_hook","","",null,null],[17,"GDK_KEY_dead_horn","","",null,null],[17,"GDK_KEY_dead_i","","",null,null],[17,"GDK_KEY_dead_invertedbreve","","",null,null],[17,"GDK_KEY_dead_iota","","",null,null],[17,"GDK_KEY_dead_macron","","",null,null],[17,"GDK_KEY_dead_o","","",null,null],[17,"GDK_KEY_dead_ogonek","","",null,null],[17,"GDK_KEY_dead_perispomeni","","",null,null],[17,"GDK_KEY_dead_psili","","",null,null],[17,"GDK_KEY_dead_semivoiced_sound","","",null,null],[17,"GDK_KEY_dead_small_schwa","","",null,null],[17,"GDK_KEY_dead_stroke","","",null,null],[17,"GDK_KEY_dead_tilde","","",null,null],[17,"GDK_KEY_dead_u","","",null,null],[17,"GDK_KEY_dead_voiced_sound","","",null,null],[17,"GDK_KEY_decimalpoint","","",null,null],[17,"GDK_KEY_degree","","",null,null],[17,"GDK_KEY_diaeresis","","",null,null],[17,"GDK_KEY_diamond","","",null,null],[17,"GDK_KEY_digitspace","","",null,null],[17,"GDK_KEY_dintegral","","",null,null],[17,"GDK_KEY_division","","",null,null],[17,"GDK_KEY_dollar","","",null,null],[17,"GDK_KEY_doubbaselinedot","","",null,null],[17,"GDK_KEY_doubleacute","","",null,null],[17,"GDK_KEY_doubledagger","","",null,null],[17,"GDK_KEY_doublelowquotemark","","",null,null],[17,"GDK_KEY_downarrow","","",null,null],[17,"GDK_KEY_downcaret","","",null,null],[17,"GDK_KEY_downshoe","","",null,null],[17,"GDK_KEY_downstile","","",null,null],[17,"GDK_KEY_downtack","","",null,null],[17,"GDK_KEY_dstroke","","",null,null],[17,"GDK_KEY_e","","",null,null],[17,"GDK_KEY_eabovedot","","",null,null],[17,"GDK_KEY_eacute","","",null,null],[17,"GDK_KEY_ebelowdot","","",null,null],[17,"GDK_KEY_ecaron","","",null,null],[17,"GDK_KEY_ecircumflex","","",null,null],[17,"GDK_KEY_ecircumflexacute","","",null,null],[17,"GDK_KEY_ecircumflexbelowdot","","",null,null],[17,"GDK_KEY_ecircumflexgrave","","",null,null],[17,"GDK_KEY_ecircumflexhook","","",null,null],[17,"GDK_KEY_ecircumflextilde","","",null,null],[17,"GDK_KEY_ediaeresis","","",null,null],[17,"GDK_KEY_egrave","","",null,null],[17,"GDK_KEY_ehook","","",null,null],[17,"GDK_KEY_eightsubscript","","",null,null],[17,"GDK_KEY_eightsuperior","","",null,null],[17,"GDK_KEY_elementof","","",null,null],[17,"GDK_KEY_ellipsis","","",null,null],[17,"GDK_KEY_em3space","","",null,null],[17,"GDK_KEY_em4space","","",null,null],[17,"GDK_KEY_emacron","","",null,null],[17,"GDK_KEY_emdash","","",null,null],[17,"GDK_KEY_emfilledcircle","","",null,null],[17,"GDK_KEY_emfilledrect","","",null,null],[17,"GDK_KEY_emopencircle","","",null,null],[17,"GDK_KEY_emopenrectangle","","",null,null],[17,"GDK_KEY_emptyset","","",null,null],[17,"GDK_KEY_emspace","","",null,null],[17,"GDK_KEY_endash","","",null,null],[17,"GDK_KEY_enfilledcircbullet","","",null,null],[17,"GDK_KEY_enfilledsqbullet","","",null,null],[17,"GDK_KEY_eng","","",null,null],[17,"GDK_KEY_enopencircbullet","","",null,null],[17,"GDK_KEY_enopensquarebullet","","",null,null],[17,"GDK_KEY_enspace","","",null,null],[17,"GDK_KEY_eogonek","","",null,null],[17,"GDK_KEY_equal","","",null,null],[17,"GDK_KEY_eth","","",null,null],[17,"GDK_KEY_etilde","","",null,null],[17,"GDK_KEY_exclam","","",null,null],[17,"GDK_KEY_exclamdown","","",null,null],[17,"GDK_KEY_ezh","","",null,null],[17,"GDK_KEY_f","","",null,null],[17,"GDK_KEY_fabovedot","","",null,null],[17,"GDK_KEY_femalesymbol","","",null,null],[17,"GDK_KEY_ff","","",null,null],[17,"GDK_KEY_figdash","","",null,null],[17,"GDK_KEY_filledlefttribullet","","",null,null],[17,"GDK_KEY_filledrectbullet","","",null,null],[17,"GDK_KEY_filledrighttribullet","","",null,null],[17,"GDK_KEY_filledtribulletdown","","",null,null],[17,"GDK_KEY_filledtribulletup","","",null,null],[17,"GDK_KEY_fiveeighths","","",null,null],[17,"GDK_KEY_fivesixths","","",null,null],[17,"GDK_KEY_fivesubscript","","",null,null],[17,"GDK_KEY_fivesuperior","","",null,null],[17,"GDK_KEY_fourfifths","","",null,null],[17,"GDK_KEY_foursubscript","","",null,null],[17,"GDK_KEY_foursuperior","","",null,null],[17,"GDK_KEY_fourthroot","","",null,null],[17,"GDK_KEY_function","","",null,null],[17,"GDK_KEY_g","","",null,null],[17,"GDK_KEY_gabovedot","","",null,null],[17,"GDK_KEY_gbreve","","",null,null],[17,"GDK_KEY_gcaron","","",null,null],[17,"GDK_KEY_gcedilla","","",null,null],[17,"GDK_KEY_gcircumflex","","",null,null],[17,"GDK_KEY_grave","","",null,null],[17,"GDK_KEY_greater","","",null,null],[17,"GDK_KEY_greaterthanequal","","",null,null],[17,"GDK_KEY_guillemotleft","","",null,null],[17,"GDK_KEY_guillemotright","","",null,null],[17,"GDK_KEY_h","","",null,null],[17,"GDK_KEY_hairspace","","",null,null],[17,"GDK_KEY_hcircumflex","","",null,null],[17,"GDK_KEY_heart","","",null,null],[17,"GDK_KEY_hebrew_aleph","","",null,null],[17,"GDK_KEY_hebrew_ayin","","",null,null],[17,"GDK_KEY_hebrew_bet","","",null,null],[17,"GDK_KEY_hebrew_beth","","",null,null],[17,"GDK_KEY_hebrew_chet","","",null,null],[17,"GDK_KEY_hebrew_dalet","","",null,null],[17,"GDK_KEY_hebrew_daleth","","",null,null],[17,"GDK_KEY_hebrew_doublelowline","","",null,null],[17,"GDK_KEY_hebrew_finalkaph","","",null,null],[17,"GDK_KEY_hebrew_finalmem","","",null,null],[17,"GDK_KEY_hebrew_finalnun","","",null,null],[17,"GDK_KEY_hebrew_finalpe","","",null,null],[17,"GDK_KEY_hebrew_finalzade","","",null,null],[17,"GDK_KEY_hebrew_finalzadi","","",null,null],[17,"GDK_KEY_hebrew_gimel","","",null,null],[17,"GDK_KEY_hebrew_gimmel","","",null,null],[17,"GDK_KEY_hebrew_he","","",null,null],[17,"GDK_KEY_hebrew_het","","",null,null],[17,"GDK_KEY_hebrew_kaph","","",null,null],[17,"GDK_KEY_hebrew_kuf","","",null,null],[17,"GDK_KEY_hebrew_lamed","","",null,null],[17,"GDK_KEY_hebrew_mem","","",null,null],[17,"GDK_KEY_hebrew_nun","","",null,null],[17,"GDK_KEY_hebrew_pe","","",null,null],[17,"GDK_KEY_hebrew_qoph","","",null,null],[17,"GDK_KEY_hebrew_resh","","",null,null],[17,"GDK_KEY_hebrew_samech","","",null,null],[17,"GDK_KEY_hebrew_samekh","","",null,null],[17,"GDK_KEY_hebrew_shin","","",null,null],[17,"GDK_KEY_hebrew_taf","","",null,null],[17,"GDK_KEY_hebrew_taw","","",null,null],[17,"GDK_KEY_hebrew_tet","","",null,null],[17,"GDK_KEY_hebrew_teth","","",null,null],[17,"GDK_KEY_hebrew_waw","","",null,null],[17,"GDK_KEY_hebrew_yod","","",null,null],[17,"GDK_KEY_hebrew_zade","","",null,null],[17,"GDK_KEY_hebrew_zadi","","",null,null],[17,"GDK_KEY_hebrew_zain","","",null,null],[17,"GDK_KEY_hebrew_zayin","","",null,null],[17,"GDK_KEY_hexagram","","",null,null],[17,"GDK_KEY_horizconnector","","",null,null],[17,"GDK_KEY_horizlinescan1","","",null,null],[17,"GDK_KEY_horizlinescan3","","",null,null],[17,"GDK_KEY_horizlinescan5","","",null,null],[17,"GDK_KEY_horizlinescan7","","",null,null],[17,"GDK_KEY_horizlinescan9","","",null,null],[17,"GDK_KEY_hstroke","","",null,null],[17,"GDK_KEY_ht","","",null,null],[17,"GDK_KEY_hyphen","","",null,null],[17,"GDK_KEY_i","","",null,null],[17,"GDK_KEY_iTouch","","",null,null],[17,"GDK_KEY_iacute","","",null,null],[17,"GDK_KEY_ibelowdot","","",null,null],[17,"GDK_KEY_ibreve","","",null,null],[17,"GDK_KEY_icircumflex","","",null,null],[17,"GDK_KEY_identical","","",null,null],[17,"GDK_KEY_idiaeresis","","",null,null],[17,"GDK_KEY_idotless","","",null,null],[17,"GDK_KEY_ifonlyif","","",null,null],[17,"GDK_KEY_igrave","","",null,null],[17,"GDK_KEY_ihook","","",null,null],[17,"GDK_KEY_imacron","","",null,null],[17,"GDK_KEY_implies","","",null,null],[17,"GDK_KEY_includedin","","",null,null],[17,"GDK_KEY_includes","","",null,null],[17,"GDK_KEY_infinity","","",null,null],[17,"GDK_KEY_integral","","",null,null],[17,"GDK_KEY_intersection","","",null,null],[17,"GDK_KEY_iogonek","","",null,null],[17,"GDK_KEY_itilde","","",null,null],[17,"GDK_KEY_j","","",null,null],[17,"GDK_KEY_jcircumflex","","",null,null],[17,"GDK_KEY_jot","","",null,null],[17,"GDK_KEY_k","","",null,null],[17,"GDK_KEY_kana_A","","",null,null],[17,"GDK_KEY_kana_CHI","","",null,null],[17,"GDK_KEY_kana_E","","",null,null],[17,"GDK_KEY_kana_FU","","",null,null],[17,"GDK_KEY_kana_HA","","",null,null],[17,"GDK_KEY_kana_HE","","",null,null],[17,"GDK_KEY_kana_HI","","",null,null],[17,"GDK_KEY_kana_HO","","",null,null],[17,"GDK_KEY_kana_HU","","",null,null],[17,"GDK_KEY_kana_I","","",null,null],[17,"GDK_KEY_kana_KA","","",null,null],[17,"GDK_KEY_kana_KE","","",null,null],[17,"GDK_KEY_kana_KI","","",null,null],[17,"GDK_KEY_kana_KO","","",null,null],[17,"GDK_KEY_kana_KU","","",null,null],[17,"GDK_KEY_kana_MA","","",null,null],[17,"GDK_KEY_kana_ME","","",null,null],[17,"GDK_KEY_kana_MI","","",null,null],[17,"GDK_KEY_kana_MO","","",null,null],[17,"GDK_KEY_kana_MU","","",null,null],[17,"GDK_KEY_kana_N","","",null,null],[17,"GDK_KEY_kana_NA","","",null,null],[17,"GDK_KEY_kana_NE","","",null,null],[17,"GDK_KEY_kana_NI","","",null,null],[17,"GDK_KEY_kana_NO","","",null,null],[17,"GDK_KEY_kana_NU","","",null,null],[17,"GDK_KEY_kana_O","","",null,null],[17,"GDK_KEY_kana_RA","","",null,null],[17,"GDK_KEY_kana_RE","","",null,null],[17,"GDK_KEY_kana_RI","","",null,null],[17,"GDK_KEY_kana_RO","","",null,null],[17,"GDK_KEY_kana_RU","","",null,null],[17,"GDK_KEY_kana_SA","","",null,null],[17,"GDK_KEY_kana_SE","","",null,null],[17,"GDK_KEY_kana_SHI","","",null,null],[17,"GDK_KEY_kana_SO","","",null,null],[17,"GDK_KEY_kana_SU","","",null,null],[17,"GDK_KEY_kana_TA","","",null,null],[17,"GDK_KEY_kana_TE","","",null,null],[17,"GDK_KEY_kana_TI","","",null,null],[17,"GDK_KEY_kana_TO","","",null,null],[17,"GDK_KEY_kana_TSU","","",null,null],[17,"GDK_KEY_kana_TU","","",null,null],[17,"GDK_KEY_kana_U","","",null,null],[17,"GDK_KEY_kana_WA","","",null,null],[17,"GDK_KEY_kana_WO","","",null,null],[17,"GDK_KEY_kana_YA","","",null,null],[17,"GDK_KEY_kana_YO","","",null,null],[17,"GDK_KEY_kana_YU","","",null,null],[17,"GDK_KEY_kana_a","","",null,null],[17,"GDK_KEY_kana_closingbracket","","",null,null],[17,"GDK_KEY_kana_comma","","",null,null],[17,"GDK_KEY_kana_conjunctive","","",null,null],[17,"GDK_KEY_kana_e","","",null,null],[17,"GDK_KEY_kana_fullstop","","",null,null],[17,"GDK_KEY_kana_i","","",null,null],[17,"GDK_KEY_kana_middledot","","",null,null],[17,"GDK_KEY_kana_o","","",null,null],[17,"GDK_KEY_kana_openingbracket","","",null,null],[17,"GDK_KEY_kana_switch","","",null,null],[17,"GDK_KEY_kana_tsu","","",null,null],[17,"GDK_KEY_kana_tu","","",null,null],[17,"GDK_KEY_kana_u","","",null,null],[17,"GDK_KEY_kana_ya","","",null,null],[17,"GDK_KEY_kana_yo","","",null,null],[17,"GDK_KEY_kana_yu","","",null,null],[17,"GDK_KEY_kappa","","",null,null],[17,"GDK_KEY_kcedilla","","",null,null],[17,"GDK_KEY_kra","","",null,null],[17,"GDK_KEY_l","","",null,null],[17,"GDK_KEY_lacute","","",null,null],[17,"GDK_KEY_latincross","","",null,null],[17,"GDK_KEY_lbelowdot","","",null,null],[17,"GDK_KEY_lcaron","","",null,null],[17,"GDK_KEY_lcedilla","","",null,null],[17,"GDK_KEY_leftanglebracket","","",null,null],[17,"GDK_KEY_leftarrow","","",null,null],[17,"GDK_KEY_leftcaret","","",null,null],[17,"GDK_KEY_leftdoublequotemark","","",null,null],[17,"GDK_KEY_leftmiddlecurlybrace","","",null,null],[17,"GDK_KEY_leftopentriangle","","",null,null],[17,"GDK_KEY_leftpointer","","",null,null],[17,"GDK_KEY_leftradical","","",null,null],[17,"GDK_KEY_leftshoe","","",null,null],[17,"GDK_KEY_leftsinglequotemark","","",null,null],[17,"GDK_KEY_leftt","","",null,null],[17,"GDK_KEY_lefttack","","",null,null],[17,"GDK_KEY_less","","",null,null],[17,"GDK_KEY_lessthanequal","","",null,null],[17,"GDK_KEY_lf","","",null,null],[17,"GDK_KEY_logicaland","","",null,null],[17,"GDK_KEY_logicalor","","",null,null],[17,"GDK_KEY_lowleftcorner","","",null,null],[17,"GDK_KEY_lowrightcorner","","",null,null],[17,"GDK_KEY_lstroke","","",null,null],[17,"GDK_KEY_m","","",null,null],[17,"GDK_KEY_mabovedot","","",null,null],[17,"GDK_KEY_macron","","",null,null],[17,"GDK_KEY_malesymbol","","",null,null],[17,"GDK_KEY_maltesecross","","",null,null],[17,"GDK_KEY_marker","","",null,null],[17,"GDK_KEY_masculine","","",null,null],[17,"GDK_KEY_minus","","",null,null],[17,"GDK_KEY_minutes","","",null,null],[17,"GDK_KEY_mu","","",null,null],[17,"GDK_KEY_multiply","","",null,null],[17,"GDK_KEY_musicalflat","","",null,null],[17,"GDK_KEY_musicalsharp","","",null,null],[17,"GDK_KEY_n","","",null,null],[17,"GDK_KEY_nabla","","",null,null],[17,"GDK_KEY_nacute","","",null,null],[17,"GDK_KEY_ncaron","","",null,null],[17,"GDK_KEY_ncedilla","","",null,null],[17,"GDK_KEY_ninesubscript","","",null,null],[17,"GDK_KEY_ninesuperior","","",null,null],[17,"GDK_KEY_nl","","",null,null],[17,"GDK_KEY_nobreakspace","","",null,null],[17,"GDK_KEY_notapproxeq","","",null,null],[17,"GDK_KEY_notelementof","","",null,null],[17,"GDK_KEY_notequal","","",null,null],[17,"GDK_KEY_notidentical","","",null,null],[17,"GDK_KEY_notsign","","",null,null],[17,"GDK_KEY_ntilde","","",null,null],[17,"GDK_KEY_numbersign","","",null,null],[17,"GDK_KEY_numerosign","","",null,null],[17,"GDK_KEY_o","","",null,null],[17,"GDK_KEY_oacute","","",null,null],[17,"GDK_KEY_obarred","","",null,null],[17,"GDK_KEY_obelowdot","","",null,null],[17,"GDK_KEY_ocaron","","",null,null],[17,"GDK_KEY_ocircumflex","","",null,null],[17,"GDK_KEY_ocircumflexacute","","",null,null],[17,"GDK_KEY_ocircumflexbelowdot","","",null,null],[17,"GDK_KEY_ocircumflexgrave","","",null,null],[17,"GDK_KEY_ocircumflexhook","","",null,null],[17,"GDK_KEY_ocircumflextilde","","",null,null],[17,"GDK_KEY_odiaeresis","","",null,null],[17,"GDK_KEY_odoubleacute","","",null,null],[17,"GDK_KEY_oe","","",null,null],[17,"GDK_KEY_ogonek","","",null,null],[17,"GDK_KEY_ograve","","",null,null],[17,"GDK_KEY_ohook","","",null,null],[17,"GDK_KEY_ohorn","","",null,null],[17,"GDK_KEY_ohornacute","","",null,null],[17,"GDK_KEY_ohornbelowdot","","",null,null],[17,"GDK_KEY_ohorngrave","","",null,null],[17,"GDK_KEY_ohornhook","","",null,null],[17,"GDK_KEY_ohorntilde","","",null,null],[17,"GDK_KEY_omacron","","",null,null],[17,"GDK_KEY_oneeighth","","",null,null],[17,"GDK_KEY_onefifth","","",null,null],[17,"GDK_KEY_onehalf","","",null,null],[17,"GDK_KEY_onequarter","","",null,null],[17,"GDK_KEY_onesixth","","",null,null],[17,"GDK_KEY_onesubscript","","",null,null],[17,"GDK_KEY_onesuperior","","",null,null],[17,"GDK_KEY_onethird","","",null,null],[17,"GDK_KEY_ooblique","","",null,null],[17,"GDK_KEY_openrectbullet","","",null,null],[17,"GDK_KEY_openstar","","",null,null],[17,"GDK_KEY_opentribulletdown","","",null,null],[17,"GDK_KEY_opentribulletup","","",null,null],[17,"GDK_KEY_ordfeminine","","",null,null],[17,"GDK_KEY_oslash","","",null,null],[17,"GDK_KEY_otilde","","",null,null],[17,"GDK_KEY_overbar","","",null,null],[17,"GDK_KEY_overline","","",null,null],[17,"GDK_KEY_p","","",null,null],[17,"GDK_KEY_pabovedot","","",null,null],[17,"GDK_KEY_paragraph","","",null,null],[17,"GDK_KEY_parenleft","","",null,null],[17,"GDK_KEY_parenright","","",null,null],[17,"GDK_KEY_partdifferential","","",null,null],[17,"GDK_KEY_partialderivative","","",null,null],[17,"GDK_KEY_percent","","",null,null],[17,"GDK_KEY_period","","",null,null],[17,"GDK_KEY_periodcentered","","",null,null],[17,"GDK_KEY_permille","","",null,null],[17,"GDK_KEY_phonographcopyright","","",null,null],[17,"GDK_KEY_plus","","",null,null],[17,"GDK_KEY_plusminus","","",null,null],[17,"GDK_KEY_prescription","","",null,null],[17,"GDK_KEY_prolongedsound","","",null,null],[17,"GDK_KEY_punctspace","","",null,null],[17,"GDK_KEY_q","","",null,null],[17,"GDK_KEY_quad","","",null,null],[17,"GDK_KEY_question","","",null,null],[17,"GDK_KEY_questiondown","","",null,null],[17,"GDK_KEY_quotedbl","","",null,null],[17,"GDK_KEY_quoteleft","","",null,null],[17,"GDK_KEY_quoteright","","",null,null],[17,"GDK_KEY_r","","",null,null],[17,"GDK_KEY_racute","","",null,null],[17,"GDK_KEY_radical","","",null,null],[17,"GDK_KEY_rcaron","","",null,null],[17,"GDK_KEY_rcedilla","","",null,null],[17,"GDK_KEY_registered","","",null,null],[17,"GDK_KEY_rightanglebracket","","",null,null],[17,"GDK_KEY_rightarrow","","",null,null],[17,"GDK_KEY_rightcaret","","",null,null],[17,"GDK_KEY_rightdoublequotemark","","",null,null],[17,"GDK_KEY_rightmiddlecurlybrace","","",null,null],[17,"GDK_KEY_rightmiddlesummation","","",null,null],[17,"GDK_KEY_rightopentriangle","","",null,null],[17,"GDK_KEY_rightpointer","","",null,null],[17,"GDK_KEY_rightshoe","","",null,null],[17,"GDK_KEY_rightsinglequotemark","","",null,null],[17,"GDK_KEY_rightt","","",null,null],[17,"GDK_KEY_righttack","","",null,null],[17,"GDK_KEY_s","","",null,null],[17,"GDK_KEY_sabovedot","","",null,null],[17,"GDK_KEY_sacute","","",null,null],[17,"GDK_KEY_scaron","","",null,null],[17,"GDK_KEY_scedilla","","",null,null],[17,"GDK_KEY_schwa","","",null,null],[17,"GDK_KEY_scircumflex","","",null,null],[17,"GDK_KEY_script_switch","","",null,null],[17,"GDK_KEY_seconds","","",null,null],[17,"GDK_KEY_section","","",null,null],[17,"GDK_KEY_semicolon","","",null,null],[17,"GDK_KEY_semivoicedsound","","",null,null],[17,"GDK_KEY_seveneighths","","",null,null],[17,"GDK_KEY_sevensubscript","","",null,null],[17,"GDK_KEY_sevensuperior","","",null,null],[17,"GDK_KEY_signaturemark","","",null,null],[17,"GDK_KEY_signifblank","","",null,null],[17,"GDK_KEY_similarequal","","",null,null],[17,"GDK_KEY_singlelowquotemark","","",null,null],[17,"GDK_KEY_sixsubscript","","",null,null],[17,"GDK_KEY_sixsuperior","","",null,null],[17,"GDK_KEY_slash","","",null,null],[17,"GDK_KEY_soliddiamond","","",null,null],[17,"GDK_KEY_space","","",null,null],[17,"GDK_KEY_squareroot","","",null,null],[17,"GDK_KEY_ssharp","","",null,null],[17,"GDK_KEY_sterling","","",null,null],[17,"GDK_KEY_stricteq","","",null,null],[17,"GDK_KEY_t","","",null,null],[17,"GDK_KEY_tabovedot","","",null,null],[17,"GDK_KEY_tcaron","","",null,null],[17,"GDK_KEY_tcedilla","","",null,null],[17,"GDK_KEY_telephone","","",null,null],[17,"GDK_KEY_telephonerecorder","","",null,null],[17,"GDK_KEY_therefore","","",null,null],[17,"GDK_KEY_thinspace","","",null,null],[17,"GDK_KEY_thorn","","",null,null],[17,"GDK_KEY_threeeighths","","",null,null],[17,"GDK_KEY_threefifths","","",null,null],[17,"GDK_KEY_threequarters","","",null,null],[17,"GDK_KEY_threesubscript","","",null,null],[17,"GDK_KEY_threesuperior","","",null,null],[17,"GDK_KEY_tintegral","","",null,null],[17,"GDK_KEY_topintegral","","",null,null],[17,"GDK_KEY_topleftparens","","",null,null],[17,"GDK_KEY_topleftradical","","",null,null],[17,"GDK_KEY_topleftsqbracket","","",null,null],[17,"GDK_KEY_topleftsummation","","",null,null],[17,"GDK_KEY_toprightparens","","",null,null],[17,"GDK_KEY_toprightsqbracket","","",null,null],[17,"GDK_KEY_toprightsummation","","",null,null],[17,"GDK_KEY_topt","","",null,null],[17,"GDK_KEY_topvertsummationconnector","","",null,null],[17,"GDK_KEY_trademark","","",null,null],[17,"GDK_KEY_trademarkincircle","","",null,null],[17,"GDK_KEY_tslash","","",null,null],[17,"GDK_KEY_twofifths","","",null,null],[17,"GDK_KEY_twosubscript","","",null,null],[17,"GDK_KEY_twosuperior","","",null,null],[17,"GDK_KEY_twothirds","","",null,null],[17,"GDK_KEY_u","","",null,null],[17,"GDK_KEY_uacute","","",null,null],[17,"GDK_KEY_ubelowdot","","",null,null],[17,"GDK_KEY_ubreve","","",null,null],[17,"GDK_KEY_ucircumflex","","",null,null],[17,"GDK_KEY_udiaeresis","","",null,null],[17,"GDK_KEY_udoubleacute","","",null,null],[17,"GDK_KEY_ugrave","","",null,null],[17,"GDK_KEY_uhook","","",null,null],[17,"GDK_KEY_uhorn","","",null,null],[17,"GDK_KEY_uhornacute","","",null,null],[17,"GDK_KEY_uhornbelowdot","","",null,null],[17,"GDK_KEY_uhorngrave","","",null,null],[17,"GDK_KEY_uhornhook","","",null,null],[17,"GDK_KEY_uhorntilde","","",null,null],[17,"GDK_KEY_umacron","","",null,null],[17,"GDK_KEY_underbar","","",null,null],[17,"GDK_KEY_underscore","","",null,null],[17,"GDK_KEY_union","","",null,null],[17,"GDK_KEY_uogonek","","",null,null],[17,"GDK_KEY_uparrow","","",null,null],[17,"GDK_KEY_upcaret","","",null,null],[17,"GDK_KEY_upleftcorner","","",null,null],[17,"GDK_KEY_uprightcorner","","",null,null],[17,"GDK_KEY_upshoe","","",null,null],[17,"GDK_KEY_upstile","","",null,null],[17,"GDK_KEY_uptack","","",null,null],[17,"GDK_KEY_uring","","",null,null],[17,"GDK_KEY_utilde","","",null,null],[17,"GDK_KEY_v","","",null,null],[17,"GDK_KEY_variation","","",null,null],[17,"GDK_KEY_vertbar","","",null,null],[17,"GDK_KEY_vertconnector","","",null,null],[17,"GDK_KEY_voicedsound","","",null,null],[17,"GDK_KEY_vt","","",null,null],[17,"GDK_KEY_w","","",null,null],[17,"GDK_KEY_wacute","","",null,null],[17,"GDK_KEY_wcircumflex","","",null,null],[17,"GDK_KEY_wdiaeresis","","",null,null],[17,"GDK_KEY_wgrave","","",null,null],[17,"GDK_KEY_x","","",null,null],[17,"GDK_KEY_xabovedot","","",null,null],[17,"GDK_KEY_y","","",null,null],[17,"GDK_KEY_yacute","","",null,null],[17,"GDK_KEY_ybelowdot","","",null,null],[17,"GDK_KEY_ycircumflex","","",null,null],[17,"GDK_KEY_ydiaeresis","","",null,null],[17,"GDK_KEY_yen","","",null,null],[17,"GDK_KEY_ygrave","","",null,null],[17,"GDK_KEY_yhook","","",null,null],[17,"GDK_KEY_ytilde","","",null,null],[17,"GDK_KEY_z","","",null,null],[17,"GDK_KEY_zabovedot","","",null,null],[17,"GDK_KEY_zacute","","",null,null],[17,"GDK_KEY_zcaron","","",null,null],[17,"GDK_KEY_zerosubscript","","",null,null],[17,"GDK_KEY_zerosuperior","","",null,null],[17,"GDK_KEY_zstroke","","",null,null],[17,"GDK_MAX_TIMECOORD_AXES","","",null,null],[17,"GDK_PARENT_RELATIVE","","",null,null],[17,"GDK_PRIORITY_REDRAW","","",null,null],[17,"GDK_ACTION_DEFAULT","","Means nothing, and should not be used.",null,null],[17,"GDK_ACTION_COPY","","Copy the data.",null,null],[17,"GDK_ACTION_MOVE","","Move the data, i.e. first copy it, then delete\nit from the source using the DELETE target of the X selection protocol.",null,null],[17,"GDK_ACTION_LINK","","Add a link to the data. Note that this is only\nuseful if source and destination agree on what it means.",null,null],[17,"GDK_ACTION_PRIVATE","","Special action which tells the source that the\ndestination will do something that the source doesn’t understand.",null,null],[17,"GDK_ACTION_ASK","","Ask the user what to do with the data.",null,null],[17,"GDK_EXPOSURE_MASK","","receive expose events",null,null],[17,"GDK_POINTER_MOTION_MASK","","receive all pointer motion events",null,null],[17,"GDK_POINTER_MOTION_HINT_MASK","","deprecated. see the explanation above",null,null],[17,"GDK_BUTTON_MOTION_MASK","","receive pointer motion events while any button is pressed",null,null],[17,"GDK_BUTTON1_MOTION_MASK","","receive pointer motion events while 1 button is pressed",null,null],[17,"GDK_BUTTON2_MOTION_MASK","","receive pointer motion events while 2 button is pressed",null,null],[17,"GDK_BUTTON3_MOTION_MASK","","receive pointer motion events while 3 button is pressed",null,null],[17,"GDK_BUTTON_PRESS_MASK","","receive button press events",null,null],[17,"GDK_BUTTON_RELEASE_MASK","","receive button release events",null,null],[17,"GDK_KEY_PRESS_MASK","","receive key press events",null,null],[17,"GDK_KEY_RELEASE_MASK","","receive key release events",null,null],[17,"GDK_ENTER_NOTIFY_MASK","","receive window enter events",null,null],[17,"GDK_LEAVE_NOTIFY_MASK","","receive window leave events",null,null],[17,"GDK_FOCUS_CHANGE_MASK","","receive focus change events",null,null],[17,"GDK_STRUCTURE_MASK","","receive events about window configuration change",null,null],[17,"GDK_PROPERTY_CHANGE_MASK","","receive property change events",null,null],[17,"GDK_VISIBILITY_NOTIFY_MASK","","receive visibility change events",null,null],[17,"GDK_PROXIMITY_IN_MASK","","receive proximity in events",null,null],[17,"GDK_PROXIMITY_OUT_MASK","","receive proximity out events",null,null],[17,"GDK_SUBSTRUCTURE_MASK","","receive events about window configuration changes of\nchild windows",null,null],[17,"GDK_SCROLL_MASK","","receive scroll events",null,null],[17,"GDK_TOUCH_MASK","","receive touch events. Since 3.4",null,null],[17,"GDK_SMOOTH_SCROLL_MASK","","receive smooth scrolling events. Since 3.4",null,null],[17,"GDK_ALL_EVENTS_MASK","","the combination of all the above event masks.",null,null],[17,"GDK_FRAME_CLOCK_PHASE_NONE","","no phase",null,null],[17,"GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS","","corresponds to `FrameClock`::flush-events. Should not be handled by applications.",null,null],[17,"GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT","","corresponds to `FrameClock`::before-paint. Should not be handled by applications.",null,null],[17,"GDK_FRAME_CLOCK_PHASE_UPDATE","","corresponds to `FrameClock`::update.",null,null],[17,"GDK_FRAME_CLOCK_PHASE_LAYOUT","","corresponds to `FrameClock`::layout.",null,null],[17,"GDK_FRAME_CLOCK_PHASE_PAINT","","corresponds to `FrameClock`::paint.",null,null],[17,"GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS","","corresponds to `FrameClock`::resume-events. Should not be handled by applications.",null,null],[17,"GDK_FRAME_CLOCK_PHASE_AFTER_PAINT","","corresponds to `FrameClock`::after-paint. Should not be handled by applications.",null,null],[17,"GDK_SHIFT_MASK","","the Shift key.",null,null],[17,"GDK_LOCK_MASK","","a Lock key (depending on the modifier mapping of the\nX server this may either be CapsLock or ShiftLock).",null,null],[17,"GDK_CONTROL_MASK","","the Control key.",null,null],[17,"GDK_MOD1_MASK","","the fourth modifier key (it depends on the modifier\nmapping of the X server which key is interpreted as this modifier, but\nnormally it is the Alt key).",null,null],[17,"GDK_MOD2_MASK","","the fifth modifier key (it depends on the modifier\nmapping of the X server which key is interpreted as this modifier).",null,null],[17,"GDK_MOD3_MASK","","the sixth modifier key (it depends on the modifier\nmapping of the X server which key is interpreted as this modifier).",null,null],[17,"GDK_MOD4_MASK","","the seventh modifier key (it depends on the modifier\nmapping of the X server which key is interpreted as this modifier).",null,null],[17,"GDK_MOD5_MASK","","the eighth modifier key (it depends on the modifier\nmapping of the X server which key is interpreted as this modifier).",null,null],[17,"GDK_BUTTON1_MASK","","the first mouse button.",null,null],[17,"GDK_BUTTON2_MASK","","the second mouse button.",null,null],[17,"GDK_BUTTON3_MASK","","the third mouse button.",null,null],[17,"GDK_BUTTON4_MASK","","the fourth mouse button.",null,null],[17,"GDK_BUTTON5_MASK","","the fifth mouse button.",null,null],[17,"GDK_MODIFIER_RESERVED_13_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_14_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_15_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_16_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_17_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_18_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_19_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_20_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_21_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_22_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_23_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_24_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_MODIFIER_RESERVED_25_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_SUPER_MASK","","the Super modifier. Since 2.10",null,null],[17,"GDK_HYPER_MASK","","the Hyper modifier. Since 2.10",null,null],[17,"GDK_META_MASK","","the Meta modifier. Since 2.10",null,null],[17,"GDK_MODIFIER_RESERVED_29_MASK","","A reserved bit flag; do not use in your own code",null,null],[17,"GDK_RELEASE_MASK","","not used in GDK itself. GTK+ uses it to differentiate\nbetween (keyval, modifiers) pairs from key press and release events.",null,null],[17,"GDK_MODIFIER_MASK","","a mask covering all modifier types.",null,null],[17,"GDK_DECOR_ALL","","all decorations should be applied.",null,null],[17,"GDK_DECOR_BORDER","","a frame should be drawn around the window.",null,null],[17,"GDK_DECOR_RESIZEH","","the frame should have resize handles.",null,null],[17,"GDK_DECOR_TITLE","","a titlebar should be placed above the window.",null,null],[17,"GDK_DECOR_MENU","","a button for opening a menu should be included.",null,null],[17,"GDK_DECOR_MINIMIZE","","a minimize button should be included.",null,null],[17,"GDK_DECOR_MAXIMIZE","","a maximize button should be included.",null,null],[17,"GDK_FUNC_ALL","","all functions should be offered.",null,null],[17,"GDK_FUNC_RESIZE","","the window should be resizable.",null,null],[17,"GDK_FUNC_MOVE","","the window should be movable.",null,null],[17,"GDK_FUNC_MINIMIZE","","the window should be minimizable.",null,null],[17,"GDK_FUNC_MAXIMIZE","","the window should be maximizable.",null,null],[17,"GDK_FUNC_CLOSE","","the window should be closable.",null,null],[17,"GDK_WA_TITLE","","Honor the title field",null,null],[17,"GDK_WA_X","","Honor the X coordinate field",null,null],[17,"GDK_WA_Y","","Honor the Y coordinate field",null,null],[17,"GDK_WA_CURSOR","","Honor the cursor field",null,null],[17,"GDK_WA_VISUAL","","Honor the visual field",null,null],[17,"GDK_WA_WMCLASS","","Honor the wmclass_class and wmclass_name fields",null,null],[17,"GDK_WA_NOREDIR","","Honor the override_redirect field",null,null],[17,"GDK_WA_TYPE_HINT","","Honor the type_hint field",null,null],[17,"GDK_HINT_POS","","indicates that the program has positioned the window",null,null],[17,"GDK_HINT_MIN_SIZE","","min size fields are set",null,null],[17,"GDK_HINT_MAX_SIZE","","max size fields are set",null,null],[17,"GDK_HINT_BASE_SIZE","","base size fields are set",null,null],[17,"GDK_HINT_ASPECT","","aspect ratio fields are set",null,null],[17,"GDK_HINT_RESIZE_INC","","resize increment fields are set",null,null],[17,"GDK_HINT_WIN_GRAVITY","","window gravity field is set",null,null],[17,"GDK_HINT_USER_POS","","indicates that the window’s position was explicitly set\nby the user",null,null],[17,"GDK_HINT_USER_SIZE","","indicates that the window’s size was explicitly set by\nthe user",null,null],[17,"GDK_WINDOW_STATE_WITHDRAWN","","the window is not shown.",null,null],[17,"GDK_WINDOW_STATE_ICONIFIED","","the window is minimized.",null,null],[17,"GDK_WINDOW_STATE_MAXIMIZED","","the window is maximized.",null,null],[17,"GDK_WINDOW_STATE_STICKY","","the window is sticky.",null,null],[17,"GDK_WINDOW_STATE_FULLSCREEN","","the window is maximized without\ndecorations.",null,null],[17,"GDK_WINDOW_STATE_ABOVE","","the window is kept above other windows.",null,null],[17,"GDK_WINDOW_STATE_BELOW","","the window is kept below other windows.",null,null],[17,"GDK_WINDOW_STATE_FOCUSED","","the window is presented as focused (with active decorations).",null,null],[17,"GDK_WINDOW_STATE_TILED","","the window is in a tiled state, Since 3.10",null,null],[11,"eq","","",27,{"inputs":[{"name":"gdkaxisuse"},{"name":"gdkaxisuse"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"gdkaxisuse"},{"name":"gdkaxisuse"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"gdkaxisuse"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"gdkaxisuse"}],"output":{"name":"gdkaxisuse"}}],[11,"eq","","",28,{"inputs":[{"name":"gdkbyteorder"},{"name":"gdkbyteorder"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"gdkbyteorder"},{"name":"gdkbyteorder"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"gdkbyteorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"gdkbyteorder"}],"output":{"name":"gdkbyteorder"}}],[11,"eq","","",29,{"inputs":[{"name":"gdkcrossingmode"},{"name":"gdkcrossingmode"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"gdkcrossingmode"},{"name":"gdkcrossingmode"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"gdkcrossingmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"gdkcrossingmode"}],"output":{"name":"gdkcrossingmode"}}],[11,"eq","","",30,{"inputs":[{"name":"gdkcursortype"},{"name":"gdkcursortype"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"gdkcursortype"},{"name":"gdkcursortype"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"gdkcursortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"gdkcursortype"}],"output":{"name":"gdkcursortype"}}],[11,"eq","","",31,{"inputs":[{"name":"gdkdevicetype"},{"name":"gdkdevicetype"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"gdkdevicetype"},{"name":"gdkdevicetype"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"gdkdevicetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"gdkdevicetype"}],"output":{"name":"gdkdevicetype"}}],[11,"eq","","",32,{"inputs":[{"name":"gdkdragprotocol"},{"name":"gdkdragprotocol"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"gdkdragprotocol"},{"name":"gdkdragprotocol"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"gdkdragprotocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"gdkdragprotocol"}],"output":{"name":"gdkdragprotocol"}}],[11,"eq","","",33,{"inputs":[{"name":"gdkeventtype"},{"name":"gdkeventtype"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"gdkeventtype"},{"name":"gdkeventtype"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"gdkeventtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"gdkeventtype"}],"output":{"name":"gdkeventtype"}}],[11,"eq","","",34,{"inputs":[{"name":"gdkfilterreturn"},{"name":"gdkfilterreturn"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"gdkfilterreturn"},{"name":"gdkfilterreturn"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"gdkfilterreturn"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"gdkfilterreturn"}],"output":{"name":"gdkfilterreturn"}}],[11,"eq","","",35,{"inputs":[{"name":"gdkfullscreenmode"},{"name":"gdkfullscreenmode"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"gdkfullscreenmode"},{"name":"gdkfullscreenmode"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"gdkfullscreenmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"gdkfullscreenmode"}],"output":{"name":"gdkfullscreenmode"}}],[11,"eq","","",36,{"inputs":[{"name":"gdkglerror"},{"name":"gdkglerror"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"gdkglerror"},{"name":"gdkglerror"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"gdkglerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"gdkglerror"}],"output":{"name":"gdkglerror"}}],[11,"eq","","",37,{"inputs":[{"name":"gdkgrabownership"},{"name":"gdkgrabownership"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"gdkgrabownership"},{"name":"gdkgrabownership"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"gdkgrabownership"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"gdkgrabownership"}],"output":{"name":"gdkgrabownership"}}],[11,"eq","","",38,{"inputs":[{"name":"gdkgrabstatus"},{"name":"gdkgrabstatus"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"gdkgrabstatus"},{"name":"gdkgrabstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"gdkgrabstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"gdkgrabstatus"}],"output":{"name":"gdkgrabstatus"}}],[11,"eq","","",39,{"inputs":[{"name":"gdkgravity"},{"name":"gdkgravity"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"gdkgravity"},{"name":"gdkgravity"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"gdkgravity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"gdkgravity"}],"output":{"name":"gdkgravity"}}],[11,"eq","","",40,{"inputs":[{"name":"gdkinputmode"},{"name":"gdkinputmode"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"gdkinputmode"},{"name":"gdkinputmode"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"gdkinputmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"gdkinputmode"}],"output":{"name":"gdkinputmode"}}],[11,"eq","","",41,{"inputs":[{"name":"gdkinputsource"},{"name":"gdkinputsource"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"gdkinputsource"},{"name":"gdkinputsource"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"gdkinputsource"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"gdkinputsource"}],"output":{"name":"gdkinputsource"}}],[11,"eq","","",42,{"inputs":[{"name":"gdkmodifierintent"},{"name":"gdkmodifierintent"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"gdkmodifierintent"},{"name":"gdkmodifierintent"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"gdkmodifierintent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"gdkmodifierintent"}],"output":{"name":"gdkmodifierintent"}}],[11,"eq","","",43,{"inputs":[{"name":"gdknotifytype"},{"name":"gdknotifytype"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"gdknotifytype"},{"name":"gdknotifytype"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"gdknotifytype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"gdknotifytype"}],"output":{"name":"gdknotifytype"}}],[11,"eq","","",44,{"inputs":[{"name":"gdkownerchange"},{"name":"gdkownerchange"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"gdkownerchange"},{"name":"gdkownerchange"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"gdkownerchange"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"gdkownerchange"}],"output":{"name":"gdkownerchange"}}],[11,"eq","","",45,{"inputs":[{"name":"gdkpropmode"},{"name":"gdkpropmode"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"gdkpropmode"},{"name":"gdkpropmode"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"gdkpropmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"gdkpropmode"}],"output":{"name":"gdkpropmode"}}],[11,"eq","","",46,{"inputs":[{"name":"gdkpropertystate"},{"name":"gdkpropertystate"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"gdkpropertystate"},{"name":"gdkpropertystate"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"gdkpropertystate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"gdkpropertystate"}],"output":{"name":"gdkpropertystate"}}],[11,"eq","","",47,{"inputs":[{"name":"gdkscrolldirection"},{"name":"gdkscrolldirection"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"gdkscrolldirection"},{"name":"gdkscrolldirection"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"gdkscrolldirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"gdkscrolldirection"}],"output":{"name":"gdkscrolldirection"}}],[11,"eq","","",48,{"inputs":[{"name":"gdksettingaction"},{"name":"gdksettingaction"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"gdksettingaction"},{"name":"gdksettingaction"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"gdksettingaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"gdksettingaction"}],"output":{"name":"gdksettingaction"}}],[11,"eq","","",49,{"inputs":[{"name":"gdkstatus"},{"name":"gdkstatus"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"gdkstatus"},{"name":"gdkstatus"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"gdkstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"gdkstatus"}],"output":{"name":"gdkstatus"}}],[11,"eq","","",50,{"inputs":[{"name":"gdkvisibilitystate"},{"name":"gdkvisibilitystate"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"gdkvisibilitystate"},{"name":"gdkvisibilitystate"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"gdkvisibilitystate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"gdkvisibilitystate"}],"output":{"name":"gdkvisibilitystate"}}],[11,"eq","","",51,{"inputs":[{"name":"gdkvisualtype"},{"name":"gdkvisualtype"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"gdkvisualtype"},{"name":"gdkvisualtype"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"gdkvisualtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"gdkvisualtype"}],"output":{"name":"gdkvisualtype"}}],[11,"eq","","",52,{"inputs":[{"name":"gdkwindowedge"},{"name":"gdkwindowedge"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"gdkwindowedge"},{"name":"gdkwindowedge"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"gdkwindowedge"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"gdkwindowedge"}],"output":{"name":"gdkwindowedge"}}],[11,"eq","","",53,{"inputs":[{"name":"gdkwindowtype"},{"name":"gdkwindowtype"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"gdkwindowtype"},{"name":"gdkwindowtype"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"gdkwindowtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"gdkwindowtype"}],"output":{"name":"gdkwindowtype"}}],[11,"eq","","",54,{"inputs":[{"name":"gdkwindowtypehint"},{"name":"gdkwindowtypehint"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"gdkwindowtypehint"},{"name":"gdkwindowtypehint"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"gdkwindowtypehint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"gdkwindowtypehint"}],"output":{"name":"gdkwindowtypehint"}}],[11,"eq","","",55,{"inputs":[{"name":"gdkwindowwindowclass"},{"name":"gdkwindowwindowclass"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"gdkwindowwindowclass"},{"name":"gdkwindowwindowclass"}],"output":{"name":"bool"}}],[11,"fmt","","",55,{"inputs":[{"name":"gdkwindowwindowclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"gdkwindowwindowclass"}],"output":{"name":"gdkwindowwindowclass"}}],[11,"hash","","",56,null],[11,"cmp","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"option"}}],[11,"lt","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"le","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"gt","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"ge","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"clone","","",56,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"eq","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"gdkdragaction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",56,{"inputs":[],"output":{"name":"gdkdragaction"}}],[11,"all","","Returns the set containing all flags.",56,{"inputs":[],"output":{"name":"gdkdragaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",56,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",56,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",56,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkdragaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",56,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",56,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"sub","","Returns the set difference of the two sets of flags.",56,{"inputs":[{"name":"gdkdragaction"},{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"not","","Returns the complement of this set of flags.",56,{"inputs":[{"name":"gdkdragaction"}],"output":{"name":"gdkdragaction"}}],[11,"from_iter","","",56,{"inputs":[{"name":"t"}],"output":{"name":"gdkdragaction"}}],[11,"hash","","",57,null],[11,"cmp","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"option"}}],[11,"lt","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"le","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"gt","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"ge","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"clone","","",57,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"eq","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"gdkeventmask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",57,{"inputs":[],"output":{"name":"gdkeventmask"}}],[11,"all","","Returns the set containing all flags.",57,{"inputs":[],"output":{"name":"gdkeventmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",57,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",57,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",57,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkeventmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",57,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",57,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",57,{"inputs":[{"name":"gdkeventmask"},{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"not","","Returns the complement of this set of flags.",57,{"inputs":[{"name":"gdkeventmask"}],"output":{"name":"gdkeventmask"}}],[11,"from_iter","","",57,{"inputs":[{"name":"t"}],"output":{"name":"gdkeventmask"}}],[11,"hash","","",58,null],[11,"cmp","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"option"}}],[11,"lt","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"le","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"gt","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"ge","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"eq","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",58,{"inputs":[],"output":{"name":"gdkframeclockphase"}}],[11,"all","","Returns the set containing all flags.",58,{"inputs":[],"output":{"name":"gdkframeclockphase"}}],[11,"bits","","Returns the raw value of the flags currently stored.",58,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",58,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",58,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkframeclockphase"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",58,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",58,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"sub","","Returns the set difference of the two sets of flags.",58,{"inputs":[{"name":"gdkframeclockphase"},{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"not","","Returns the complement of this set of flags.",58,{"inputs":[{"name":"gdkframeclockphase"}],"output":{"name":"gdkframeclockphase"}}],[11,"from_iter","","",58,{"inputs":[{"name":"t"}],"output":{"name":"gdkframeclockphase"}}],[11,"hash","","",59,null],[11,"cmp","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"option"}}],[11,"lt","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"le","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"gt","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"ge","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"eq","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",59,{"inputs":[],"output":{"name":"gdkmodifiertype"}}],[11,"all","","Returns the set containing all flags.",59,{"inputs":[],"output":{"name":"gdkmodifiertype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",59,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",59,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",59,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkmodifiertype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",59,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",59,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",59,{"inputs":[{"name":"gdkmodifiertype"},{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"not","","Returns the complement of this set of flags.",59,{"inputs":[{"name":"gdkmodifiertype"}],"output":{"name":"gdkmodifiertype"}}],[11,"from_iter","","",59,{"inputs":[{"name":"t"}],"output":{"name":"gdkmodifiertype"}}],[11,"hash","","",60,null],[11,"cmp","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"eq","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",60,{"inputs":[],"output":{"name":"gdkwmdecoration"}}],[11,"all","","Returns the set containing all flags.",60,{"inputs":[],"output":{"name":"gdkwmdecoration"}}],[11,"bits","","Returns the raw value of the flags currently stored.",60,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",60,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",60,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkwmdecoration"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",60,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",60,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"sub","","Returns the set difference of the two sets of flags.",60,{"inputs":[{"name":"gdkwmdecoration"},{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"not","","Returns the complement of this set of flags.",60,{"inputs":[{"name":"gdkwmdecoration"}],"output":{"name":"gdkwmdecoration"}}],[11,"from_iter","","",60,{"inputs":[{"name":"t"}],"output":{"name":"gdkwmdecoration"}}],[11,"hash","","",61,null],[11,"cmp","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"eq","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"gdkwmfunction"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"gdkwmfunction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",61,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkwmfunction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"gdkwmfunction"},{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"gdkwmfunction"}],"output":{"name":"gdkwmfunction"}}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"gdkwmfunction"}}],[11,"hash","","",62,null],[11,"cmp","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"eq","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"gdkwindowattributestype"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"gdkwindowattributestype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",62,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkwindowattributestype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"gdkwindowattributestype"},{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"gdkwindowattributestype"}],"output":{"name":"gdkwindowattributestype"}}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"gdkwindowattributestype"}}],[11,"hash","","",63,null],[11,"cmp","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"option"}}],[11,"lt","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"le","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"gt","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"ge","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"eq","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",63,{"inputs":[],"output":{"name":"gdkwindowhints"}}],[11,"all","","Returns the set containing all flags.",63,{"inputs":[],"output":{"name":"gdkwindowhints"}}],[11,"bits","","Returns the raw value of the flags currently stored.",63,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",63,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",63,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkwindowhints"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",63,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"sub","","Returns the set difference of the two sets of flags.",63,{"inputs":[{"name":"gdkwindowhints"},{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"not","","Returns the complement of this set of flags.",63,{"inputs":[{"name":"gdkwindowhints"}],"output":{"name":"gdkwindowhints"}}],[11,"from_iter","","",63,{"inputs":[{"name":"t"}],"output":{"name":"gdkwindowhints"}}],[11,"hash","","",64,null],[11,"cmp","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"option"}}],[11,"lt","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"le","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"gt","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"ge","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"eq","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",64,{"inputs":[],"output":{"name":"gdkwindowstate"}}],[11,"all","","Returns the set containing all flags.",64,{"inputs":[],"output":{"name":"gdkwindowstate"}}],[11,"bits","","Returns the raw value of the flags currently stored.",64,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",64,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",64,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkwindowstate"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",64,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",64,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"sub","","Returns the set difference of the two sets of flags.",64,{"inputs":[{"name":"gdkwindowstate"},{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"not","","Returns the complement of this set of flags.",64,{"inputs":[{"name":"gdkwindowstate"}],"output":{"name":"gdkwindowstate"}}],[11,"from_iter","","",64,{"inputs":[{"name":"t"}],"output":{"name":"gdkwindowstate"}}]],"paths":[[3,"GdkColor"],[3,"GdkEventAny"],[3,"GdkEventButton"],[3,"GdkEventConfigure"],[3,"GdkEventCrossing"],[3,"GdkEventDND"],[3,"GdkEventExpose"],[3,"GdkEventFocus"],[3,"GdkEventGrabBroken"],[3,"GdkEventKey"],[3,"GdkEventMotion"],[3,"GdkEventOwnerChange"],[3,"GdkEventProperty"],[3,"GdkEventProximity"],[3,"GdkEventScroll"],[3,"GdkEventSelection"],[3,"GdkEventSetting"],[3,"GdkEventTouch"],[3,"GdkEventVisibility"],[3,"GdkEventWindowState"],[3,"GdkGeometry"],[3,"GdkKeymapKey"],[3,"GdkPoint"],[3,"GdkRGBA"],[3,"GdkTimeCoord"],[3,"GdkWindowAttr"],[3,"GdkWindowClass"],[4,"GdkAxisUse"],[4,"GdkByteOrder"],[4,"GdkCrossingMode"],[4,"GdkCursorType"],[4,"GdkDeviceType"],[4,"GdkDragProtocol"],[4,"GdkEventType"],[4,"GdkFilterReturn"],[4,"GdkFullscreenMode"],[4,"GdkGLError"],[4,"GdkGrabOwnership"],[4,"GdkGrabStatus"],[4,"GdkGravity"],[4,"GdkInputMode"],[4,"GdkInputSource"],[4,"GdkModifierIntent"],[4,"GdkNotifyType"],[4,"GdkOwnerChange"],[4,"GdkPropMode"],[4,"GdkPropertyState"],[4,"GdkScrollDirection"],[4,"GdkSettingAction"],[4,"GdkStatus"],[4,"GdkVisibilityState"],[4,"GdkVisualType"],[4,"GdkWindowEdge"],[4,"GdkWindowType"],[4,"GdkWindowTypeHint"],[4,"GdkWindowWindowClass"],[3,"GdkDragAction"],[3,"GdkEventMask"],[3,"GdkFrameClockPhase"],[3,"GdkModifierType"],[3,"GdkWMDecoration"],[3,"GdkWMFunction"],[3,"GdkWindowAttributesType"],[3,"GdkWindowHints"],[3,"GdkWindowState"]]};
searchIndex["pango"] = {"doc":"","items":[[11,"eq","pango_sys","",0,{"inputs":[{"name":"pangoalignment"},{"name":"pangoalignment"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"pangoalignment"},{"name":"pangoalignment"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"pangoalignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"pangoalignment"}],"output":{"name":"pangoalignment"}}],[11,"eq","","",1,{"inputs":[{"name":"pangoattrtype"},{"name":"pangoattrtype"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"pangoattrtype"},{"name":"pangoattrtype"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"pangoattrtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"pangoattrtype"}],"output":{"name":"pangoattrtype"}}],[11,"eq","","",2,{"inputs":[{"name":"pangobiditype"},{"name":"pangobiditype"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"pangobiditype"},{"name":"pangobiditype"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"pangobiditype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"pangobiditype"}],"output":{"name":"pangobiditype"}}],[11,"eq","","",3,{"inputs":[{"name":"pangocoveragelevel"},{"name":"pangocoveragelevel"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"pangocoveragelevel"},{"name":"pangocoveragelevel"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"pangocoveragelevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"pangocoveragelevel"}],"output":{"name":"pangocoveragelevel"}}],[11,"eq","","",4,{"inputs":[{"name":"pangodirection"},{"name":"pangodirection"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"pangodirection"},{"name":"pangodirection"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"pangodirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"pangodirection"}],"output":{"name":"pangodirection"}}],[11,"eq","","",5,{"inputs":[{"name":"pangoellipsizemode"},{"name":"pangoellipsizemode"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"pangoellipsizemode"},{"name":"pangoellipsizemode"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"pangoellipsizemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"pangoellipsizemode"}],"output":{"name":"pangoellipsizemode"}}],[11,"eq","","",6,{"inputs":[{"name":"pangogravity"},{"name":"pangogravity"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"pangogravity"},{"name":"pangogravity"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"pangogravity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"pangogravity"}],"output":{"name":"pangogravity"}}],[11,"eq","","",7,{"inputs":[{"name":"pangogravityhint"},{"name":"pangogravityhint"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"pangogravityhint"},{"name":"pangogravityhint"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"pangogravityhint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"pangogravityhint"}],"output":{"name":"pangogravityhint"}}],[11,"eq","","",8,{"inputs":[{"name":"pangorenderpart"},{"name":"pangorenderpart"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"pangorenderpart"},{"name":"pangorenderpart"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"pangorenderpart"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"pangorenderpart"}],"output":{"name":"pangorenderpart"}}],[11,"eq","","",9,{"inputs":[{"name":"pangoscript"},{"name":"pangoscript"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"pangoscript"},{"name":"pangoscript"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"pangoscript"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"pangoscript"}],"output":{"name":"pangoscript"}}],[11,"eq","","",10,{"inputs":[{"name":"pangostretch"},{"name":"pangostretch"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"pangostretch"},{"name":"pangostretch"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"pangostretch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"pangostretch"}],"output":{"name":"pangostretch"}}],[11,"eq","","",11,{"inputs":[{"name":"pangostyle"},{"name":"pangostyle"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"pangostyle"},{"name":"pangostyle"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"pangostyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"pangostyle"}],"output":{"name":"pangostyle"}}],[11,"eq","","",12,{"inputs":[{"name":"pangounderline"},{"name":"pangounderline"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"pangounderline"},{"name":"pangounderline"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"pangounderline"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"pangounderline"}],"output":{"name":"pangounderline"}}],[11,"eq","","",13,{"inputs":[{"name":"pangovariant"},{"name":"pangovariant"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"pangovariant"},{"name":"pangovariant"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"pangovariant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"pangovariant"}],"output":{"name":"pangovariant"}}],[11,"eq","","",14,{"inputs":[{"name":"pangoweight"},{"name":"pangoweight"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"pangoweight"},{"name":"pangoweight"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"pangoweight"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"pangoweight"}],"output":{"name":"pangoweight"}}],[11,"eq","","",15,{"inputs":[{"name":"pangowrapmode"},{"name":"pangowrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"pangowrapmode"},{"name":"pangowrapmode"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"pangowrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"pangowrapmode"}],"output":{"name":"pangowrapmode"}}],[11,"hash","","",16,null],[11,"cmp","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"eq","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"pangofontmask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",16,{"inputs":[],"output":{"name":"pangofontmask"}}],[11,"all","","Returns the set containing all flags.",16,{"inputs":[],"output":{"name":"pangofontmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",16,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",16,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",16,{"inputs":[{"name":"u32"}],"output":{"name":"pangofontmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",16,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",16,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",16,null],[11,"remove","","Removes the specified flags in-place.",16,null],[11,"toggle","","Toggles the specified flags in-place.",16,null],[11,"bitor","","Returns the union of the two sets of flags.",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",16,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"not","","Returns the complement of this set of flags.",16,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"from_iter","","",16,{"inputs":[{"name":"t"}],"output":{"name":"pangofontmask"}}],[4,"Gravity","pango","",null,null],[13,"South","","",6,null],[13,"East","","",6,null],[13,"North","","",6,null],[13,"West","","",6,null],[13,"Auto","","",6,null],[4,"GravityHint","","",null,null],[13,"Natural","","",7,null],[13,"Strong","","",7,null],[13,"Line","","",7,null],[4,"Script","","",null,null],[13,"InvalidCode","","",9,null],[13,"Common","","",9,null],[13,"Inherited","","",9,null],[13,"Arabic","","",9,null],[13,"Armenian","","",9,null],[13,"Bengali","","",9,null],[13,"Bopomofo","","",9,null],[13,"Cherokee","","",9,null],[13,"Coptic","","",9,null],[13,"Cyrillic","","",9,null],[13,"Deseret","","",9,null],[13,"Devanagari","","",9,null],[13,"Ethiopic","","",9,null],[13,"Georgian","","",9,null],[13,"Gothic","","",9,null],[13,"Greek","","",9,null],[13,"Gujarati","","",9,null],[13,"Gurmukhi","","",9,null],[13,"Han","","",9,null],[13,"Hangul","","",9,null],[13,"Hebrew","","",9,null],[13,"Hiragana","","",9,null],[13,"Kannada","","",9,null],[13,"Katakana","","",9,null],[13,"Khmer","","",9,null],[13,"Lao","","",9,null],[13,"Latin","","",9,null],[13,"Malayalam","","",9,null],[13,"Mongolian","","",9,null],[13,"Myanmar","","",9,null],[13,"Ogham","","",9,null],[13,"OldItalic","","",9,null],[13,"Oriya","","",9,null],[13,"Runic","","",9,null],[13,"Sinhala","","",9,null],[13,"Syriac","","",9,null],[13,"Tamil","","",9,null],[13,"Telugu","","",9,null],[13,"Thaana","","",9,null],[13,"Thai","","",9,null],[13,"Tibetan","","",9,null],[13,"CanadianAboriginal","","",9,null],[13,"Yi","","",9,null],[13,"Tagalog","","",9,null],[13,"Hanunoo","","",9,null],[13,"Buhid","","",9,null],[13,"Tagbanwa","","",9,null],[13,"Braille","","",9,null],[13,"Cypriot","","",9,null],[13,"Limbu","","",9,null],[13,"Osmanya","","",9,null],[13,"Shavian","","",9,null],[13,"LinearB","","",9,null],[13,"TaiLe","","",9,null],[13,"Ugaritic","","",9,null],[13,"NewTaiLue","","",9,null],[13,"Buginese","","",9,null],[13,"Glagolitic","","",9,null],[13,"Tifinagh","","",9,null],[13,"SylotiNagri","","",9,null],[13,"OldPersian","","",9,null],[13,"Kharoshthi","","",9,null],[13,"Unknown","","",9,null],[13,"Balinese","","",9,null],[13,"Cuneiform","","",9,null],[13,"Phoenician","","",9,null],[13,"PhagsPa","","",9,null],[13,"Nko","","",9,null],[13,"KayahLi","","",9,null],[13,"Lepcha","","",9,null],[13,"Rejang","","",9,null],[13,"Sundanese","","",9,null],[13,"Saurashtra","","",9,null],[13,"Cham","","",9,null],[13,"OlChiki","","",9,null],[13,"Vai","","",9,null],[13,"Carian","","",9,null],[13,"Lycian","","",9,null],[13,"Lydian","","",9,null],[13,"Batak","","",9,null],[13,"Brahmi","","",9,null],[13,"Mandaic","","",9,null],[13,"Chakma","","",9,null],[13,"MeroiticCursive","","",9,null],[13,"MeroiticHieroglyphs","","",9,null],[13,"Miao","","",9,null],[13,"Sharada","","",9,null],[13,"SoraSompeng","","",9,null],[13,"Takri","","",9,null],[4,"Direction","","",null,null],[13,"Ltr","","",4,null],[13,"Rtl","","",4,null],[13,"TtbLtr","","",4,null],[13,"TtbRtl","","",4,null],[13,"WeakLtr","","",4,null],[13,"WeakRtl","","",4,null],[13,"Neutral","","",4,null],[4,"BidiType","","",null,null],[13,"L","","",2,null],[13,"Lre","","",2,null],[13,"Lro","","",2,null],[13,"R","","",2,null],[13,"Al","","",2,null],[13,"Rle","","",2,null],[13,"Rlo","","",2,null],[13,"Pdf","","",2,null],[13,"En","","",2,null],[13,"Es","","",2,null],[13,"Et","","",2,null],[13,"An","","",2,null],[13,"Cs","","",2,null],[13,"Nsm","","",2,null],[13,"Bn","","",2,null],[13,"B","","",2,null],[13,"S","","",2,null],[13,"Ws","","",2,null],[13,"On","","",2,null],[4,"Style","","",null,null],[13,"Normal","","",11,null],[13,"Oblique","","",11,null],[13,"Italic","","",11,null],[4,"Weight","","",null,null],[13,"Thin","","",14,null],[13,"Ultralight","","",14,null],[13,"Light","","",14,null],[13,"Semilight","","",14,null],[13,"Book","","",14,null],[13,"Normal","","",14,null],[13,"Medium","","",14,null],[13,"Semibold","","",14,null],[13,"Bold","","",14,null],[13,"Ultrabold","","",14,null],[13,"Heavy","","",14,null],[13,"Ultraheavy","","",14,null],[4,"Variant","","",null,null],[13,"Normal","","",13,null],[13,"SmallCaps","","",13,null],[4,"Stretch","","",null,null],[13,"UltraCondensed","","",10,null],[13,"ExtraCondensed","","",10,null],[13,"Condensed","","",10,null],[13,"SemiCondensed","","",10,null],[13,"Normal","","",10,null],[13,"SemiExpanded","","",10,null],[13,"Expanded","","",10,null],[13,"ExtraExpanded","","",10,null],[13,"UltraExpanded","","",10,null],[3,"FontMask","","",null,null],[3,"Item","","",null,null],[3,"GlyphString","","",null,null],[3,"FontDescription","","",null,null],[0,"widgets","","",null,null],[3,"Item","pango::widgets","",null,null],[3,"GlyphString","","",null,null],[3,"FontDescription","","",null,null],[11,"new","pango","",17,{"inputs":[],"output":{"name":"option"}}],[11,"copy","","",17,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"split","","",17,{"inputs":[{"name":"item"},{"name":"i32"},{"name":"i32"}],"output":{"name":"option"}}],[11,"drop","","",17,{"inputs":[{"name":"item"}],"output":null}],[11,"new","pango_sys","",18,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"pangorectangle"}}],[11,"new","","",19,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"pangomatrix"}}],[11,"copy","","",19,{"inputs":[{"name":"pangomatrix"}],"output":{"name":"pangomatrix"}}],[11,"translate","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"scale","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"rotate","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"f64"}],"output":null}],[11,"concat","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"pangomatrix"}],"output":null}],[11,"transform_point","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"transform_distance","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[11,"transform_rectangle","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"pangorectangle"}],"output":null}],[11,"transform_pixel_rectangle","","",19,{"inputs":[{"name":"pangomatrix"},{"name":"pangorectangle"}],"output":null}],[11,"get_font_scale_factor","","",19,{"inputs":[{"name":"pangomatrix"}],"output":{"name":"f64"}}],[11,"new","pango","",20,{"inputs":[],"output":{"name":"option"}}],[11,"copy","","",20,{"inputs":[{"name":"glyphstring"}],"output":{"name":"option"}}],[11,"set_size","","",20,{"inputs":[{"name":"glyphstring"},{"name":"i32"}],"output":null}],[11,"drop","","",20,{"inputs":[{"name":"glyphstring"}],"output":null}],[11,"from_glib_none","","",21,null],[11,"from_glib_full","","",21,null],[11,"new","","",21,{"inputs":[],"output":{"name":"fontdescription"}}],[11,"from_string","","",21,{"inputs":[{"name":"str"}],"output":{"name":"fontdescription"}}],[11,"set_family","","",21,{"inputs":[{"name":"fontdescription"},{"name":"str"}],"output":null}],[11,"get_family","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"option"}}],[11,"set_weight","","",21,{"inputs":[{"name":"fontdescription"},{"name":"weight"}],"output":null}],[11,"get_weight","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"weight"}}],[11,"set_size","","",21,{"inputs":[{"name":"fontdescription"},{"name":"i32"}],"output":null}],[11,"get_size","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"i32"}}],[11,"set_absolute_size","","",21,{"inputs":[{"name":"fontdescription"},{"name":"f64"}],"output":null}],[11,"get_size_is_absolute","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"bool"}}],[11,"set_gravity","","",21,{"inputs":[{"name":"fontdescription"},{"name":"gravity"}],"output":null}],[11,"get_gravity","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"gravity"}}],[11,"get_set_fields","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"fontmask"}}],[11,"unset_fields","","",21,{"inputs":[{"name":"fontdescription"},{"name":"fontmask"}],"output":null}],[11,"to_filename","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"string"}}],[11,"fmt","","",21,{"inputs":[{"name":"fontdescription"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",21,{"inputs":[{"name":"fontdescription"},{"name":"fontdescription"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"fontdescription"}],"output":{"name":"fontdescription"}}],[11,"drop","","",21,{"inputs":[{"name":"fontdescription"}],"output":null}],[8,"Rectangle","pango::widgets","",null,null],[10,"new","","",22,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[8,"Matrix","","",null,null],[10,"new","","",23,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"self"}}],[10,"copy","","",23,{"inputs":[{"name":"matrix"}],"output":{"name":"self"}}],[10,"translate","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"scale","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rotate","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"}],"output":null}],[10,"concat","","",23,{"inputs":[{"name":"matrix"},{"name":"self"}],"output":null}],[10,"transform_point","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"transform_distance","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"transform_rectangle","","",23,{"inputs":[{"name":"matrix"},{"name":"pangorectangle"}],"output":null}],[10,"transform_pixel_rectangle","","",23,{"inputs":[{"name":"matrix"},{"name":"pangorectangle"}],"output":null}],[10,"get_font_scale_factor","","",23,{"inputs":[{"name":"matrix"}],"output":{"name":"f64"}}],[8,"Rectangle","pango","",null,null],[10,"new","","",22,{"inputs":[{"name":"i32"},{"name":"i32"},{"name":"i32"},{"name":"i32"}],"output":{"name":"self"}}],[8,"Matrix","","",null,null],[10,"new","","",23,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"self"}}],[10,"copy","","",23,{"inputs":[{"name":"matrix"}],"output":{"name":"self"}}],[10,"translate","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"scale","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"rotate","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"}],"output":null}],[10,"concat","","",23,{"inputs":[{"name":"matrix"},{"name":"self"}],"output":null}],[10,"transform_point","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"transform_distance","","",23,{"inputs":[{"name":"matrix"},{"name":"f64"},{"name":"f64"}],"output":null}],[10,"transform_rectangle","","",23,{"inputs":[{"name":"matrix"},{"name":"pangorectangle"}],"output":null}],[10,"transform_pixel_rectangle","","",23,{"inputs":[{"name":"matrix"},{"name":"pangorectangle"}],"output":null}],[10,"get_font_scale_factor","","",23,{"inputs":[{"name":"matrix"}],"output":{"name":"f64"}}]],"paths":[[4,"PangoAlignment"],[4,"PangoAttrType"],[4,"BidiType"],[4,"PangoCoverageLevel"],[4,"Direction"],[4,"PangoEllipsizeMode"],[4,"Gravity"],[4,"GravityHint"],[4,"PangoRenderPart"],[4,"Script"],[4,"Stretch"],[4,"Style"],[4,"PangoUnderline"],[4,"Variant"],[4,"Weight"],[4,"PangoWrapMode"],[3,"FontMask"],[3,"Item"],[3,"PangoRectangle"],[3,"PangoMatrix"],[3,"GlyphString"],[3,"FontDescription"],[8,"Rectangle"],[8,"Matrix"]]};
searchIndex["glib"] = {"doc":"# **glib**, **gobject** and **gio** bindings for Rust","items":[[11,"eq","glib_sys","",0,{"inputs":[{"name":"gbookmarkfileerror"},{"name":"gbookmarkfileerror"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"gbookmarkfileerror"},{"name":"gbookmarkfileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"gbookmarkfileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"gbookmarkfileerror"}],"output":{"name":"gbookmarkfileerror"}}],[11,"eq","","",1,{"inputs":[{"name":"gchecksumtype"},{"name":"gchecksumtype"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"gchecksumtype"},{"name":"gchecksumtype"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"gchecksumtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"gchecksumtype"}],"output":{"name":"gchecksumtype"}}],[11,"eq","","",2,{"inputs":[{"name":"gconverterror"},{"name":"gconverterror"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"gconverterror"},{"name":"gconverterror"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"gconverterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"gconverterror"}],"output":{"name":"gconverterror"}}],[11,"eq","","",3,{"inputs":[{"name":"gdatedmy"},{"name":"gdatedmy"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"gdatedmy"},{"name":"gdatedmy"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"gdatedmy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"gdatedmy"}],"output":{"name":"gdatedmy"}}],[11,"eq","","",4,{"inputs":[{"name":"gdatemonth"},{"name":"gdatemonth"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"gdatemonth"},{"name":"gdatemonth"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"gdatemonth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"gdatemonth"}],"output":{"name":"gdatemonth"}}],[11,"eq","","",5,{"inputs":[{"name":"gdateweekday"},{"name":"gdateweekday"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"gdateweekday"},{"name":"gdateweekday"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"gdateweekday"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"gdateweekday"}],"output":{"name":"gdateweekday"}}],[11,"eq","","",6,{"inputs":[{"name":"gerrortype"},{"name":"gerrortype"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"gerrortype"},{"name":"gerrortype"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"gerrortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"gerrortype"}],"output":{"name":"gerrortype"}}],[11,"eq","","",7,{"inputs":[{"name":"gfileerror"},{"name":"gfileerror"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"gfileerror"},{"name":"gfileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"gfileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"gfileerror"}],"output":{"name":"gfileerror"}}],[11,"eq","","",8,{"inputs":[{"name":"giochannelerror"},{"name":"giochannelerror"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"giochannelerror"},{"name":"giochannelerror"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"giochannelerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"giochannelerror"}],"output":{"name":"giochannelerror"}}],[11,"eq","","",9,{"inputs":[{"name":"gioerror"},{"name":"gioerror"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"gioerror"},{"name":"gioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"gioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"gioerror"}],"output":{"name":"gioerror"}}],[11,"eq","","",10,{"inputs":[{"name":"giostatus"},{"name":"giostatus"}],"output":{"name":"bool"}}],[11,"ne","","",10,{"inputs":[{"name":"giostatus"},{"name":"giostatus"}],"output":{"name":"bool"}}],[11,"fmt","","",10,{"inputs":[{"name":"giostatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"giostatus"}],"output":{"name":"giostatus"}}],[11,"eq","","",11,{"inputs":[{"name":"gkeyfileerror"},{"name":"gkeyfileerror"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"gkeyfileerror"},{"name":"gkeyfileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",11,{"inputs":[{"name":"gkeyfileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",11,{"inputs":[{"name":"gkeyfileerror"}],"output":{"name":"gkeyfileerror"}}],[11,"eq","","",12,{"inputs":[{"name":"gmarkuperror"},{"name":"gmarkuperror"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"gmarkuperror"},{"name":"gmarkuperror"}],"output":{"name":"bool"}}],[11,"fmt","","",12,{"inputs":[{"name":"gmarkuperror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",12,{"inputs":[{"name":"gmarkuperror"}],"output":{"name":"gmarkuperror"}}],[11,"eq","","",13,{"inputs":[{"name":"gnormalizemode"},{"name":"gnormalizemode"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"gnormalizemode"},{"name":"gnormalizemode"}],"output":{"name":"bool"}}],[11,"fmt","","",13,{"inputs":[{"name":"gnormalizemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",13,{"inputs":[{"name":"gnormalizemode"}],"output":{"name":"gnormalizemode"}}],[11,"eq","","",14,{"inputs":[{"name":"goncestatus"},{"name":"goncestatus"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"goncestatus"},{"name":"goncestatus"}],"output":{"name":"bool"}}],[11,"fmt","","",14,{"inputs":[{"name":"goncestatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"goncestatus"}],"output":{"name":"goncestatus"}}],[11,"eq","","",15,{"inputs":[{"name":"goptionarg"},{"name":"goptionarg"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"goptionarg"},{"name":"goptionarg"}],"output":{"name":"bool"}}],[11,"fmt","","",15,{"inputs":[{"name":"goptionarg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",15,{"inputs":[{"name":"goptionarg"}],"output":{"name":"goptionarg"}}],[11,"eq","","",16,{"inputs":[{"name":"goptionerror"},{"name":"goptionerror"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"goptionerror"},{"name":"goptionerror"}],"output":{"name":"bool"}}],[11,"fmt","","",16,{"inputs":[{"name":"goptionerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",16,{"inputs":[{"name":"goptionerror"}],"output":{"name":"goptionerror"}}],[11,"eq","","",17,{"inputs":[{"name":"gregexerror"},{"name":"gregexerror"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"gregexerror"},{"name":"gregexerror"}],"output":{"name":"bool"}}],[11,"fmt","","",17,{"inputs":[{"name":"gregexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",17,{"inputs":[{"name":"gregexerror"}],"output":{"name":"gregexerror"}}],[11,"eq","","",18,{"inputs":[{"name":"gseektype"},{"name":"gseektype"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"gseektype"},{"name":"gseektype"}],"output":{"name":"bool"}}],[11,"fmt","","",18,{"inputs":[{"name":"gseektype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",18,{"inputs":[{"name":"gseektype"}],"output":{"name":"gseektype"}}],[11,"eq","","",19,{"inputs":[{"name":"gshellerror"},{"name":"gshellerror"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"gshellerror"},{"name":"gshellerror"}],"output":{"name":"bool"}}],[11,"fmt","","",19,{"inputs":[{"name":"gshellerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",19,{"inputs":[{"name":"gshellerror"}],"output":{"name":"gshellerror"}}],[11,"eq","","",20,{"inputs":[{"name":"gsliceconfig"},{"name":"gsliceconfig"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"gsliceconfig"},{"name":"gsliceconfig"}],"output":{"name":"bool"}}],[11,"fmt","","",20,{"inputs":[{"name":"gsliceconfig"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",20,{"inputs":[{"name":"gsliceconfig"}],"output":{"name":"gsliceconfig"}}],[11,"eq","","",21,{"inputs":[{"name":"gspawnerror"},{"name":"gspawnerror"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"gspawnerror"},{"name":"gspawnerror"}],"output":{"name":"bool"}}],[11,"fmt","","",21,{"inputs":[{"name":"gspawnerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",21,{"inputs":[{"name":"gspawnerror"}],"output":{"name":"gspawnerror"}}],[11,"eq","","",22,{"inputs":[{"name":"gtestfiletype"},{"name":"gtestfiletype"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"gtestfiletype"},{"name":"gtestfiletype"}],"output":{"name":"bool"}}],[11,"fmt","","",22,{"inputs":[{"name":"gtestfiletype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",22,{"inputs":[{"name":"gtestfiletype"}],"output":{"name":"gtestfiletype"}}],[11,"eq","","",23,{"inputs":[{"name":"gtestlogtype"},{"name":"gtestlogtype"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"gtestlogtype"},{"name":"gtestlogtype"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"gtestlogtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",23,{"inputs":[{"name":"gtestlogtype"}],"output":{"name":"gtestlogtype"}}],[11,"eq","","",24,{"inputs":[{"name":"gtimetype"},{"name":"gtimetype"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"gtimetype"},{"name":"gtimetype"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"gtimetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",24,{"inputs":[{"name":"gtimetype"}],"output":{"name":"gtimetype"}}],[11,"eq","","",25,{"inputs":[{"name":"gtokentype"},{"name":"gtokentype"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"gtokentype"},{"name":"gtokentype"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"gtokentype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",25,{"inputs":[{"name":"gtokentype"}],"output":{"name":"gtokentype"}}],[11,"eq","","",26,{"inputs":[{"name":"gtraversetype"},{"name":"gtraversetype"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"gtraversetype"},{"name":"gtraversetype"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"gtraversetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",26,{"inputs":[{"name":"gtraversetype"}],"output":{"name":"gtraversetype"}}],[11,"eq","","",27,{"inputs":[{"name":"gunicodebreaktype"},{"name":"gunicodebreaktype"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"gunicodebreaktype"},{"name":"gunicodebreaktype"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"gunicodebreaktype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"gunicodebreaktype"}],"output":{"name":"gunicodebreaktype"}}],[11,"eq","","",28,{"inputs":[{"name":"gunicodescript"},{"name":"gunicodescript"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"gunicodescript"},{"name":"gunicodescript"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"gunicodescript"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"gunicodescript"}],"output":{"name":"gunicodescript"}}],[11,"eq","","",29,{"inputs":[{"name":"gunicodetype"},{"name":"gunicodetype"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"gunicodetype"},{"name":"gunicodetype"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"gunicodetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"gunicodetype"}],"output":{"name":"gunicodetype"}}],[11,"eq","","",30,{"inputs":[{"name":"guserdirectory"},{"name":"guserdirectory"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"guserdirectory"},{"name":"guserdirectory"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"guserdirectory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"guserdirectory"}],"output":{"name":"guserdirectory"}}],[11,"eq","","",31,{"inputs":[{"name":"gvariantclass"},{"name":"gvariantclass"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"gvariantclass"},{"name":"gvariantclass"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"gvariantclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"gvariantclass"}],"output":{"name":"gvariantclass"}}],[11,"eq","","",32,{"inputs":[{"name":"gvariantparseerror"},{"name":"gvariantparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"gvariantparseerror"},{"name":"gvariantparseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"gvariantparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"gvariantparseerror"}],"output":{"name":"gvariantparseerror"}}],[11,"hash","","",33,null],[11,"cmp","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"eq","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"gasciitype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",33,{"inputs":[],"output":{"name":"gasciitype"}}],[11,"all","","Returns the set containing all flags.",33,{"inputs":[],"output":{"name":"gasciitype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",33,{"inputs":[{"name":"gasciitype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",33,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",33,{"inputs":[{"name":"u32"}],"output":{"name":"gasciitype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",33,{"inputs":[{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",33,{"inputs":[{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",33,null],[11,"remove","","Removes the specified flags in-place.",33,null],[11,"toggle","","Toggles the specified flags in-place.",33,null],[11,"bitor","","Returns the union of the two sets of flags.",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",33,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"not","","Returns the complement of this set of flags.",33,{"inputs":[{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"from_iter","","",33,{"inputs":[{"name":"t"}],"output":{"name":"gasciitype"}}],[11,"hash","","",34,null],[11,"cmp","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"option"}}],[11,"lt","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"le","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"gt","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"ge","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"clone","","",34,{"inputs":[{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"eq","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"gfiletest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",34,{"inputs":[],"output":{"name":"gfiletest"}}],[11,"all","","Returns the set containing all flags.",34,{"inputs":[],"output":{"name":"gfiletest"}}],[11,"bits","","Returns the raw value of the flags currently stored.",34,{"inputs":[{"name":"gfiletest"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",34,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",34,{"inputs":[{"name":"u32"}],"output":{"name":"gfiletest"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",34,{"inputs":[{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",34,{"inputs":[{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",34,null],[11,"remove","","Removes the specified flags in-place.",34,null],[11,"toggle","","Toggles the specified flags in-place.",34,null],[11,"bitor","","Returns the union of the two sets of flags.",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"sub","","Returns the set difference of the two sets of flags.",34,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"not","","Returns the complement of this set of flags.",34,{"inputs":[{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"from_iter","","",34,{"inputs":[{"name":"t"}],"output":{"name":"gfiletest"}}],[11,"hash","","",35,null],[11,"cmp","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"option"}}],[11,"lt","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"le","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"gt","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"ge","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"clone","","",35,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"eq","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",35,{"inputs":[],"output":{"name":"gformatsizeflags"}}],[11,"all","","Returns the set containing all flags.",35,{"inputs":[],"output":{"name":"gformatsizeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",35,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",35,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",35,{"inputs":[{"name":"u32"}],"output":{"name":"gformatsizeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",35,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",35,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",35,null],[11,"remove","","Removes the specified flags in-place.",35,null],[11,"toggle","","Toggles the specified flags in-place.",35,null],[11,"bitor","","Returns the union of the two sets of flags.",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",35,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"not","","Returns the complement of this set of flags.",35,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"from_iter","","",35,{"inputs":[{"name":"t"}],"output":{"name":"gformatsizeflags"}}],[11,"hash","","",36,null],[11,"cmp","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"option"}}],[11,"lt","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"le","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"gt","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"ge","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"clone","","",36,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"eq","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"ghookflagmask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",36,{"inputs":[],"output":{"name":"ghookflagmask"}}],[11,"all","","Returns the set containing all flags.",36,{"inputs":[],"output":{"name":"ghookflagmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",36,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",36,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",36,{"inputs":[{"name":"u32"}],"output":{"name":"ghookflagmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",36,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",36,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",36,null],[11,"remove","","Removes the specified flags in-place.",36,null],[11,"toggle","","Toggles the specified flags in-place.",36,null],[11,"bitor","","Returns the union of the two sets of flags.",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",36,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"not","","Returns the complement of this set of flags.",36,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"from_iter","","",36,{"inputs":[{"name":"t"}],"output":{"name":"ghookflagmask"}}],[11,"hash","","",37,null],[11,"cmp","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"option"}}],[11,"lt","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"le","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"gt","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"ge","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"eq","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"giocondition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",37,{"inputs":[],"output":{"name":"giocondition"}}],[11,"all","","Returns the set containing all flags.",37,{"inputs":[],"output":{"name":"giocondition"}}],[11,"bits","","Returns the raw value of the flags currently stored.",37,{"inputs":[{"name":"giocondition"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",37,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",37,{"inputs":[{"name":"u32"}],"output":{"name":"giocondition"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",37,{"inputs":[{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",37,{"inputs":[{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",37,null],[11,"remove","","Removes the specified flags in-place.",37,null],[11,"toggle","","Toggles the specified flags in-place.",37,null],[11,"bitor","","Returns the union of the two sets of flags.",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"sub","","Returns the set difference of the two sets of flags.",37,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"not","","Returns the complement of this set of flags.",37,{"inputs":[{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"from_iter","","",37,{"inputs":[{"name":"t"}],"output":{"name":"giocondition"}}],[11,"hash","","",38,null],[11,"cmp","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"option"}}],[11,"lt","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"le","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"gt","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"ge","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"eq","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"gioflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",38,{"inputs":[],"output":{"name":"gioflags"}}],[11,"all","","Returns the set containing all flags.",38,{"inputs":[],"output":{"name":"gioflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",38,{"inputs":[{"name":"gioflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",38,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",38,{"inputs":[{"name":"u32"}],"output":{"name":"gioflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",38,{"inputs":[{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",38,{"inputs":[{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",38,null],[11,"remove","","Removes the specified flags in-place.",38,null],[11,"toggle","","Toggles the specified flags in-place.",38,null],[11,"bitor","","Returns the union of the two sets of flags.",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",38,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"not","","Returns the complement of this set of flags.",38,{"inputs":[{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"from_iter","","",38,{"inputs":[{"name":"t"}],"output":{"name":"gioflags"}}],[11,"hash","","",39,null],[11,"cmp","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"option"}}],[11,"lt","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"le","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"gt","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"ge","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"eq","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",39,{"inputs":[],"output":{"name":"gkeyfileflags"}}],[11,"all","","Returns the set containing all flags.",39,{"inputs":[],"output":{"name":"gkeyfileflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",39,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",39,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",39,{"inputs":[{"name":"u32"}],"output":{"name":"gkeyfileflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",39,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",39,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",39,null],[11,"remove","","Removes the specified flags in-place.",39,null],[11,"toggle","","Toggles the specified flags in-place.",39,null],[11,"bitor","","Returns the union of the two sets of flags.",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",39,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"not","","Returns the complement of this set of flags.",39,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"from_iter","","",39,{"inputs":[{"name":"t"}],"output":{"name":"gkeyfileflags"}}],[11,"hash","","",40,null],[11,"cmp","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"option"}}],[11,"lt","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"le","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"gt","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"ge","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"eq","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"gloglevelflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",40,{"inputs":[],"output":{"name":"gloglevelflags"}}],[11,"all","","Returns the set containing all flags.",40,{"inputs":[],"output":{"name":"gloglevelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",40,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",40,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",40,{"inputs":[{"name":"u32"}],"output":{"name":"gloglevelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",40,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",40,null],[11,"remove","","Removes the specified flags in-place.",40,null],[11,"toggle","","Toggles the specified flags in-place.",40,null],[11,"bitor","","Returns the union of the two sets of flags.",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",40,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"not","","Returns the complement of this set of flags.",40,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"from_iter","","",40,{"inputs":[{"name":"t"}],"output":{"name":"gloglevelflags"}}],[11,"hash","","",41,null],[11,"cmp","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"option"}}],[11,"lt","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"le","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"gt","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"ge","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"eq","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",41,{"inputs":[],"output":{"name":"gmarkupcollecttype"}}],[11,"all","","Returns the set containing all flags.",41,{"inputs":[],"output":{"name":"gmarkupcollecttype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",41,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",41,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",41,{"inputs":[{"name":"u32"}],"output":{"name":"gmarkupcollecttype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",41,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",41,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",41,null],[11,"remove","","Removes the specified flags in-place.",41,null],[11,"toggle","","Toggles the specified flags in-place.",41,null],[11,"bitor","","Returns the union of the two sets of flags.",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",41,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"not","","Returns the complement of this set of flags.",41,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"from_iter","","",41,{"inputs":[{"name":"t"}],"output":{"name":"gmarkupcollecttype"}}],[11,"hash","","",42,null],[11,"cmp","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"option"}}],[11,"lt","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"le","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"gt","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"ge","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"clone","","",42,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"eq","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",42,{"inputs":[],"output":{"name":"gmarkupparseflags"}}],[11,"all","","Returns the set containing all flags.",42,{"inputs":[],"output":{"name":"gmarkupparseflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",42,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",42,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",42,{"inputs":[{"name":"u32"}],"output":{"name":"gmarkupparseflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",42,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",42,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",42,null],[11,"remove","","Removes the specified flags in-place.",42,null],[11,"toggle","","Toggles the specified flags in-place.",42,null],[11,"bitor","","Returns the union of the two sets of flags.",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",42,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"not","","Returns the complement of this set of flags.",42,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"from_iter","","",42,{"inputs":[{"name":"t"}],"output":{"name":"gmarkupparseflags"}}],[11,"hash","","",43,null],[11,"cmp","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"option"}}],[11,"lt","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"le","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"gt","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"ge","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"eq","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"goptionflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",43,{"inputs":[],"output":{"name":"goptionflags"}}],[11,"all","","Returns the set containing all flags.",43,{"inputs":[],"output":{"name":"goptionflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",43,{"inputs":[{"name":"goptionflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",43,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",43,{"inputs":[{"name":"u32"}],"output":{"name":"goptionflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",43,{"inputs":[{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",43,{"inputs":[{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",43,null],[11,"remove","","Removes the specified flags in-place.",43,null],[11,"toggle","","Toggles the specified flags in-place.",43,null],[11,"bitor","","Returns the union of the two sets of flags.",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",43,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"not","","Returns the complement of this set of flags.",43,{"inputs":[{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"from_iter","","",43,{"inputs":[{"name":"t"}],"output":{"name":"goptionflags"}}],[11,"hash","","",44,null],[11,"cmp","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"option"}}],[11,"lt","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"le","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"gt","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"ge","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"clone","","",44,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"eq","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",44,{"inputs":[],"output":{"name":"gregexcompileflags"}}],[11,"all","","Returns the set containing all flags.",44,{"inputs":[],"output":{"name":"gregexcompileflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",44,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",44,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",44,{"inputs":[{"name":"u32"}],"output":{"name":"gregexcompileflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",44,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",44,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",44,null],[11,"remove","","Removes the specified flags in-place.",44,null],[11,"toggle","","Toggles the specified flags in-place.",44,null],[11,"bitor","","Returns the union of the two sets of flags.",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",44,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"not","","Returns the complement of this set of flags.",44,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"from_iter","","",44,{"inputs":[{"name":"t"}],"output":{"name":"gregexcompileflags"}}],[11,"hash","","",45,null],[11,"cmp","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"option"}}],[11,"lt","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"le","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"gt","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"ge","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"eq","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",45,{"inputs":[],"output":{"name":"gregexmatchflags"}}],[11,"all","","Returns the set containing all flags.",45,{"inputs":[],"output":{"name":"gregexmatchflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",45,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",45,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",45,{"inputs":[{"name":"u32"}],"output":{"name":"gregexmatchflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",45,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",45,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",45,null],[11,"remove","","Removes the specified flags in-place.",45,null],[11,"toggle","","Toggles the specified flags in-place.",45,null],[11,"bitor","","Returns the union of the two sets of flags.",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",45,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"not","","Returns the complement of this set of flags.",45,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"from_iter","","",45,{"inputs":[{"name":"t"}],"output":{"name":"gregexmatchflags"}}],[11,"hash","","",46,null],[11,"cmp","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"option"}}],[11,"lt","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"le","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"gt","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"ge","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"clone","","",46,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"eq","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"gspawnflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",46,{"inputs":[],"output":{"name":"gspawnflags"}}],[11,"all","","Returns the set containing all flags.",46,{"inputs":[],"output":{"name":"gspawnflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",46,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",46,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",46,{"inputs":[{"name":"u32"}],"output":{"name":"gspawnflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",46,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",46,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",46,null],[11,"remove","","Removes the specified flags in-place.",46,null],[11,"toggle","","Toggles the specified flags in-place.",46,null],[11,"bitor","","Returns the union of the two sets of flags.",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",46,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"not","","Returns the complement of this set of flags.",46,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"from_iter","","",46,{"inputs":[{"name":"t"}],"output":{"name":"gspawnflags"}}],[11,"hash","","",47,null],[11,"cmp","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"option"}}],[11,"lt","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"le","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"gt","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"ge","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"clone","","",47,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"eq","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",47,{"inputs":[],"output":{"name":"gtestsubprocessflags"}}],[11,"all","","Returns the set containing all flags.",47,{"inputs":[],"output":{"name":"gtestsubprocessflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",47,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",47,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",47,{"inputs":[{"name":"u32"}],"output":{"name":"gtestsubprocessflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",47,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",47,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",47,null],[11,"remove","","Removes the specified flags in-place.",47,null],[11,"toggle","","Toggles the specified flags in-place.",47,null],[11,"bitor","","Returns the union of the two sets of flags.",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",47,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"not","","Returns the complement of this set of flags.",47,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"from_iter","","",47,{"inputs":[{"name":"t"}],"output":{"name":"gtestsubprocessflags"}}],[11,"hash","","",48,null],[11,"cmp","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"option"}}],[11,"lt","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"le","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"gt","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"ge","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"clone","","",48,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"eq","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",48,{"inputs":[],"output":{"name":"gtesttrapflags"}}],[11,"all","","Returns the set containing all flags.",48,{"inputs":[],"output":{"name":"gtesttrapflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",48,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",48,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",48,{"inputs":[{"name":"u32"}],"output":{"name":"gtesttrapflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",48,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",48,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",48,null],[11,"remove","","Removes the specified flags in-place.",48,null],[11,"toggle","","Toggles the specified flags in-place.",48,null],[11,"bitor","","Returns the union of the two sets of flags.",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",48,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"not","","Returns the complement of this set of flags.",48,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"from_iter","","",48,{"inputs":[{"name":"t"}],"output":{"name":"gtesttrapflags"}}],[11,"hash","","",49,null],[11,"cmp","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"eq","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"gtraverseflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",49,{"inputs":[],"output":{"name":"gtraverseflags"}}],[11,"all","","Returns the set containing all flags.",49,{"inputs":[],"output":{"name":"gtraverseflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",49,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",49,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",49,{"inputs":[{"name":"u32"}],"output":{"name":"gtraverseflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",49,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",49,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",49,null],[11,"remove","","Removes the specified flags in-place.",49,null],[11,"toggle","","Toggles the specified flags in-place.",49,null],[11,"bitor","","Returns the union of the two sets of flags.",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",49,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"not","","Returns the complement of this set of flags.",49,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"from_iter","","",49,{"inputs":[{"name":"t"}],"output":{"name":"gtraverseflags"}}],[3,"GTimeVal","glib","",null,null],[12,"tv_sec","","",50,null],[12,"tv_usec","","",50,null],[11,"empty","gio_sys","Returns an empty set of flags.",51,{"inputs":[],"output":{"name":"gapplicationflags"}}],[11,"all","","Returns the set containing all flags.",51,{"inputs":[],"output":{"name":"gapplicationflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",51,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",51,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",51,{"inputs":[{"name":"u32"}],"output":{"name":"gapplicationflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",51,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",51,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",51,null],[11,"remove","","Removes the specified flags in-place.",51,null],[11,"toggle","","Toggles the specified flags in-place.",51,null],[11,"eq","","",52,{"inputs":[{"name":"gbustype"},{"name":"gbustype"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"gbustype"},{"name":"gbustype"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"gbustype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"gbustype"}],"output":{"name":"gbustype"}}],[11,"eq","","",53,{"inputs":[{"name":"gconverterresult"},{"name":"gconverterresult"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"gconverterresult"},{"name":"gconverterresult"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"gconverterresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"gconverterresult"}],"output":{"name":"gconverterresult"}}],[11,"eq","","",54,{"inputs":[{"name":"gcredentialstype"},{"name":"gcredentialstype"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"gcredentialstype"},{"name":"gcredentialstype"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"gcredentialstype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"gcredentialstype"}],"output":{"name":"gcredentialstype"}}],[11,"eq","","",55,{"inputs":[{"name":"gdbuserror"},{"name":"gdbuserror"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"gdbuserror"},{"name":"gdbuserror"}],"output":{"name":"bool"}}],[11,"fmt","","",55,{"inputs":[{"name":"gdbuserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"gdbuserror"}],"output":{"name":"gdbuserror"}}],[11,"eq","","",56,{"inputs":[{"name":"gdbusmessagebyteorder"},{"name":"gdbusmessagebyteorder"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"gdbusmessagebyteorder"},{"name":"gdbusmessagebyteorder"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"gdbusmessagebyteorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"gdbusmessagebyteorder"}],"output":{"name":"gdbusmessagebyteorder"}}],[11,"eq","","",57,{"inputs":[{"name":"gdbusmessageheaderfield"},{"name":"gdbusmessageheaderfield"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"gdbusmessageheaderfield"},{"name":"gdbusmessageheaderfield"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"gdbusmessageheaderfield"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"gdbusmessageheaderfield"}],"output":{"name":"gdbusmessageheaderfield"}}],[11,"eq","","",58,{"inputs":[{"name":"gdbusmessagetype"},{"name":"gdbusmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"gdbusmessagetype"},{"name":"gdbusmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"gdbusmessagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"gdbusmessagetype"}],"output":{"name":"gdbusmessagetype"}}],[11,"eq","","",59,{"inputs":[{"name":"gdatastreambyteorder"},{"name":"gdatastreambyteorder"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"gdatastreambyteorder"},{"name":"gdatastreambyteorder"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"gdatastreambyteorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"gdatastreambyteorder"}],"output":{"name":"gdatastreambyteorder"}}],[11,"eq","","",60,{"inputs":[{"name":"gdatastreamnewlinetype"},{"name":"gdatastreamnewlinetype"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"gdatastreamnewlinetype"},{"name":"gdatastreamnewlinetype"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"gdatastreamnewlinetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",60,{"inputs":[{"name":"gdatastreamnewlinetype"}],"output":{"name":"gdatastreamnewlinetype"}}],[11,"eq","","",61,{"inputs":[{"name":"gdrivestartstoptype"},{"name":"gdrivestartstoptype"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"gdrivestartstoptype"},{"name":"gdrivestartstoptype"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"gdrivestartstoptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",61,{"inputs":[{"name":"gdrivestartstoptype"}],"output":{"name":"gdrivestartstoptype"}}],[11,"eq","","",62,{"inputs":[{"name":"gemblemorigin"},{"name":"gemblemorigin"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"gemblemorigin"},{"name":"gemblemorigin"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"gemblemorigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",62,{"inputs":[{"name":"gemblemorigin"}],"output":{"name":"gemblemorigin"}}],[11,"eq","","",63,{"inputs":[{"name":"gfileattributestatus"},{"name":"gfileattributestatus"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"gfileattributestatus"},{"name":"gfileattributestatus"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"gfileattributestatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",63,{"inputs":[{"name":"gfileattributestatus"}],"output":{"name":"gfileattributestatus"}}],[11,"eq","","",64,{"inputs":[{"name":"gfileattributetype"},{"name":"gfileattributetype"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"gfileattributetype"},{"name":"gfileattributetype"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"gfileattributetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",64,{"inputs":[{"name":"gfileattributetype"}],"output":{"name":"gfileattributetype"}}],[11,"eq","","",65,{"inputs":[{"name":"gfilemonitorevent"},{"name":"gfilemonitorevent"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"gfilemonitorevent"},{"name":"gfilemonitorevent"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"gfilemonitorevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",65,{"inputs":[{"name":"gfilemonitorevent"}],"output":{"name":"gfilemonitorevent"}}],[11,"eq","","",66,{"inputs":[{"name":"gfiletype"},{"name":"gfiletype"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"gfiletype"},{"name":"gfiletype"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"gfiletype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",66,{"inputs":[{"name":"gfiletype"}],"output":{"name":"gfiletype"}}],[11,"eq","","",67,{"inputs":[{"name":"gfilesystempreviewtype"},{"name":"gfilesystempreviewtype"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"gfilesystempreviewtype"},{"name":"gfilesystempreviewtype"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"gfilesystempreviewtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",67,{"inputs":[{"name":"gfilesystempreviewtype"}],"output":{"name":"gfilesystempreviewtype"}}],[11,"eq","","",68,{"inputs":[{"name":"gioerrorenum"},{"name":"gioerrorenum"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"gioerrorenum"},{"name":"gioerrorenum"}],"output":{"name":"bool"}}],[11,"fmt","","",68,{"inputs":[{"name":"gioerrorenum"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",68,{"inputs":[{"name":"gioerrorenum"}],"output":{"name":"gioerrorenum"}}],[11,"eq","","",69,{"inputs":[{"name":"giomodulescopeflags"},{"name":"giomodulescopeflags"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"giomodulescopeflags"},{"name":"giomodulescopeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"giomodulescopeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",69,{"inputs":[{"name":"giomodulescopeflags"}],"output":{"name":"giomodulescopeflags"}}],[11,"eq","","",70,{"inputs":[{"name":"gmountoperationresult"},{"name":"gmountoperationresult"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"gmountoperationresult"},{"name":"gmountoperationresult"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"gmountoperationresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",70,{"inputs":[{"name":"gmountoperationresult"}],"output":{"name":"gmountoperationresult"}}],[11,"eq","","",71,{"inputs":[{"name":"gnetworkconnectivity"},{"name":"gnetworkconnectivity"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"gnetworkconnectivity"},{"name":"gnetworkconnectivity"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"gnetworkconnectivity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",71,{"inputs":[{"name":"gnetworkconnectivity"}],"output":{"name":"gnetworkconnectivity"}}],[11,"eq","","",72,{"inputs":[{"name":"gnotificationpriority"},{"name":"gnotificationpriority"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"gnotificationpriority"},{"name":"gnotificationpriority"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"gnotificationpriority"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",72,{"inputs":[{"name":"gnotificationpriority"}],"output":{"name":"gnotificationpriority"}}],[11,"eq","","",73,{"inputs":[{"name":"gpasswordsave"},{"name":"gpasswordsave"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"gpasswordsave"},{"name":"gpasswordsave"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"gpasswordsave"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",73,{"inputs":[{"name":"gpasswordsave"}],"output":{"name":"gpasswordsave"}}],[11,"eq","","",74,{"inputs":[{"name":"gresolvererror"},{"name":"gresolvererror"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"gresolvererror"},{"name":"gresolvererror"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"gresolvererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",74,{"inputs":[{"name":"gresolvererror"}],"output":{"name":"gresolvererror"}}],[11,"eq","","",75,{"inputs":[{"name":"gresolverrecordtype"},{"name":"gresolverrecordtype"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"gresolverrecordtype"},{"name":"gresolverrecordtype"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"gresolverrecordtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",75,{"inputs":[{"name":"gresolverrecordtype"}],"output":{"name":"gresolverrecordtype"}}],[11,"eq","","",76,{"inputs":[{"name":"gresourceerror"},{"name":"gresourceerror"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"gresourceerror"},{"name":"gresourceerror"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"gresourceerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",76,{"inputs":[{"name":"gresourceerror"}],"output":{"name":"gresourceerror"}}],[11,"eq","","",77,{"inputs":[{"name":"gsocketclientevent"},{"name":"gsocketclientevent"}],"output":{"name":"bool"}}],[11,"ne","","",77,{"inputs":[{"name":"gsocketclientevent"},{"name":"gsocketclientevent"}],"output":{"name":"bool"}}],[11,"fmt","","",77,{"inputs":[{"name":"gsocketclientevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",77,{"inputs":[{"name":"gsocketclientevent"}],"output":{"name":"gsocketclientevent"}}],[11,"eq","","",78,{"inputs":[{"name":"gsocketfamily"},{"name":"gsocketfamily"}],"output":{"name":"bool"}}],[11,"ne","","",78,{"inputs":[{"name":"gsocketfamily"},{"name":"gsocketfamily"}],"output":{"name":"bool"}}],[11,"fmt","","",78,{"inputs":[{"name":"gsocketfamily"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",78,{"inputs":[{"name":"gsocketfamily"}],"output":{"name":"gsocketfamily"}}],[11,"eq","","",79,{"inputs":[{"name":"gsocketprotocol"},{"name":"gsocketprotocol"}],"output":{"name":"bool"}}],[11,"ne","","",79,{"inputs":[{"name":"gsocketprotocol"},{"name":"gsocketprotocol"}],"output":{"name":"bool"}}],[11,"fmt","","",79,{"inputs":[{"name":"gsocketprotocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",79,{"inputs":[{"name":"gsocketprotocol"}],"output":{"name":"gsocketprotocol"}}],[11,"eq","","",80,{"inputs":[{"name":"gsockettype"},{"name":"gsockettype"}],"output":{"name":"bool"}}],[11,"ne","","",80,{"inputs":[{"name":"gsockettype"},{"name":"gsockettype"}],"output":{"name":"bool"}}],[11,"fmt","","",80,{"inputs":[{"name":"gsockettype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",80,{"inputs":[{"name":"gsockettype"}],"output":{"name":"gsockettype"}}],[11,"eq","","",81,{"inputs":[{"name":"gtlsauthenticationmode"},{"name":"gtlsauthenticationmode"}],"output":{"name":"bool"}}],[11,"ne","","",81,{"inputs":[{"name":"gtlsauthenticationmode"},{"name":"gtlsauthenticationmode"}],"output":{"name":"bool"}}],[11,"fmt","","",81,{"inputs":[{"name":"gtlsauthenticationmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",81,{"inputs":[{"name":"gtlsauthenticationmode"}],"output":{"name":"gtlsauthenticationmode"}}],[11,"eq","","",82,{"inputs":[{"name":"gtlsdatabaselookupflags"},{"name":"gtlsdatabaselookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",82,{"inputs":[{"name":"gtlsdatabaselookupflags"},{"name":"gtlsdatabaselookupflags"}],"output":{"name":"bool"}}],[11,"fmt","","",82,{"inputs":[{"name":"gtlsdatabaselookupflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",82,{"inputs":[{"name":"gtlsdatabaselookupflags"}],"output":{"name":"gtlsdatabaselookupflags"}}],[11,"eq","","",83,{"inputs":[{"name":"gtlserror"},{"name":"gtlserror"}],"output":{"name":"bool"}}],[11,"ne","","",83,{"inputs":[{"name":"gtlserror"},{"name":"gtlserror"}],"output":{"name":"bool"}}],[11,"fmt","","",83,{"inputs":[{"name":"gtlserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",83,{"inputs":[{"name":"gtlserror"}],"output":{"name":"gtlserror"}}],[11,"eq","","",84,{"inputs":[{"name":"gtlsinteractionresult"},{"name":"gtlsinteractionresult"}],"output":{"name":"bool"}}],[11,"ne","","",84,{"inputs":[{"name":"gtlsinteractionresult"},{"name":"gtlsinteractionresult"}],"output":{"name":"bool"}}],[11,"fmt","","",84,{"inputs":[{"name":"gtlsinteractionresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",84,{"inputs":[{"name":"gtlsinteractionresult"}],"output":{"name":"gtlsinteractionresult"}}],[11,"eq","","",85,{"inputs":[{"name":"gtlsrehandshakemode"},{"name":"gtlsrehandshakemode"}],"output":{"name":"bool"}}],[11,"ne","","",85,{"inputs":[{"name":"gtlsrehandshakemode"},{"name":"gtlsrehandshakemode"}],"output":{"name":"bool"}}],[11,"fmt","","",85,{"inputs":[{"name":"gtlsrehandshakemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",85,{"inputs":[{"name":"gtlsrehandshakemode"}],"output":{"name":"gtlsrehandshakemode"}}],[11,"eq","","",86,{"inputs":[{"name":"gunixsocketaddresstype"},{"name":"gunixsocketaddresstype"}],"output":{"name":"bool"}}],[11,"ne","","",86,{"inputs":[{"name":"gunixsocketaddresstype"},{"name":"gunixsocketaddresstype"}],"output":{"name":"bool"}}],[11,"fmt","","",86,{"inputs":[{"name":"gunixsocketaddresstype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",86,{"inputs":[{"name":"gunixsocketaddresstype"}],"output":{"name":"gunixsocketaddresstype"}}],[11,"eq","","",87,{"inputs":[{"name":"gzlibcompressorformat"},{"name":"gzlibcompressorformat"}],"output":{"name":"bool"}}],[11,"ne","","",87,{"inputs":[{"name":"gzlibcompressorformat"},{"name":"gzlibcompressorformat"}],"output":{"name":"bool"}}],[11,"fmt","","",87,{"inputs":[{"name":"gzlibcompressorformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",87,{"inputs":[{"name":"gzlibcompressorformat"}],"output":{"name":"gzlibcompressorformat"}}],[11,"hash","","",88,null],[11,"cmp","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"option"}}],[11,"lt","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"le","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",88,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"eq","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",88,{"inputs":[],"output":{"name":"gappinfocreateflags"}}],[11,"all","","Returns the set containing all flags.",88,{"inputs":[],"output":{"name":"gappinfocreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",88,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",88,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",88,{"inputs":[{"name":"u32"}],"output":{"name":"gappinfocreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",88,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",88,null],[11,"remove","","Removes the specified flags in-place.",88,null],[11,"toggle","","Toggles the specified flags in-place.",88,null],[11,"bitor","","Returns the union of the two sets of flags.",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",88,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"not","","Returns the complement of this set of flags.",88,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"from_iter","","",88,{"inputs":[{"name":"t"}],"output":{"name":"gappinfocreateflags"}}],[11,"hash","","",51,null],[11,"cmp","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"option"}}],[11,"lt","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"le","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"gt","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"ge","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"eq","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"gapplicationflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bitor","","Returns the union of the two sets of flags.",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",51,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"not","","Returns the complement of this set of flags.",51,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"from_iter","","",51,{"inputs":[{"name":"t"}],"output":{"name":"gapplicationflags"}}],[11,"hash","","",89,null],[11,"cmp","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"option"}}],[11,"lt","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"le","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"gt","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"ge","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"clone","","",89,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"eq","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"ne","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"fmt","","",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",89,{"inputs":[],"output":{"name":"gaskpasswordflags"}}],[11,"all","","Returns the set containing all flags.",89,{"inputs":[],"output":{"name":"gaskpasswordflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",89,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",89,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",89,{"inputs":[{"name":"u32"}],"output":{"name":"gaskpasswordflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",89,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",89,null],[11,"remove","","Removes the specified flags in-place.",89,null],[11,"toggle","","Toggles the specified flags in-place.",89,null],[11,"bitor","","Returns the union of the two sets of flags.",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",89,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"not","","Returns the complement of this set of flags.",89,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"from_iter","","",89,{"inputs":[{"name":"t"}],"output":{"name":"gaskpasswordflags"}}],[11,"hash","","",90,null],[11,"cmp","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"option"}}],[11,"lt","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"le","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"gt","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"ge","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"clone","","",90,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"eq","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"ne","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"fmt","","",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",90,{"inputs":[],"output":{"name":"gbusnameownerflags"}}],[11,"all","","Returns the set containing all flags.",90,{"inputs":[],"output":{"name":"gbusnameownerflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",90,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",90,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",90,{"inputs":[{"name":"u32"}],"output":{"name":"gbusnameownerflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",90,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",90,null],[11,"remove","","Removes the specified flags in-place.",90,null],[11,"toggle","","Toggles the specified flags in-place.",90,null],[11,"bitor","","Returns the union of the two sets of flags.",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",90,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"not","","Returns the complement of this set of flags.",90,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"from_iter","","",90,{"inputs":[{"name":"t"}],"output":{"name":"gbusnameownerflags"}}],[11,"hash","","",91,null],[11,"cmp","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"option"}}],[11,"lt","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"le","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"gt","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"ge","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"eq","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"fmt","","",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",91,{"inputs":[],"output":{"name":"gbusnamewatcherflags"}}],[11,"all","","Returns the set containing all flags.",91,{"inputs":[],"output":{"name":"gbusnamewatcherflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",91,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",91,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",91,{"inputs":[{"name":"u32"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",91,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",91,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",91,null],[11,"remove","","Removes the specified flags in-place.",91,null],[11,"toggle","","Toggles the specified flags in-place.",91,null],[11,"bitor","","Returns the union of the two sets of flags.",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",91,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"not","","Returns the complement of this set of flags.",91,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"from_iter","","",91,{"inputs":[{"name":"t"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"hash","","",92,null],[11,"cmp","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"option"}}],[11,"lt","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"le","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"gt","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"ge","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"clone","","",92,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"eq","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"ne","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"fmt","","",92,{"inputs":[{"name":"gconverterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",92,{"inputs":[],"output":{"name":"gconverterflags"}}],[11,"all","","Returns the set containing all flags.",92,{"inputs":[],"output":{"name":"gconverterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",92,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",92,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",92,{"inputs":[{"name":"u32"}],"output":{"name":"gconverterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",92,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",92,null],[11,"remove","","Removes the specified flags in-place.",92,null],[11,"toggle","","Toggles the specified flags in-place.",92,null],[11,"bitor","","Returns the union of the two sets of flags.",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",92,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"not","","Returns the complement of this set of flags.",92,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"from_iter","","",92,{"inputs":[{"name":"t"}],"output":{"name":"gconverterflags"}}],[11,"hash","","",93,null],[11,"cmp","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"option"}}],[11,"lt","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"le","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"gt","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"ge","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"eq","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"ne","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"fmt","","",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",93,{"inputs":[],"output":{"name":"gdbuscallflags"}}],[11,"all","","Returns the set containing all flags.",93,{"inputs":[],"output":{"name":"gdbuscallflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",93,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",93,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",93,{"inputs":[{"name":"u32"}],"output":{"name":"gdbuscallflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",93,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",93,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",93,null],[11,"remove","","Removes the specified flags in-place.",93,null],[11,"toggle","","Toggles the specified flags in-place.",93,null],[11,"bitor","","Returns the union of the two sets of flags.",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",93,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"not","","Returns the complement of this set of flags.",93,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"from_iter","","",93,{"inputs":[{"name":"t"}],"output":{"name":"gdbuscallflags"}}],[11,"hash","","",94,null],[11,"cmp","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"option"}}],[11,"lt","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"le","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"gt","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"ge","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"clone","","",94,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"eq","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"ne","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"fmt","","",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",94,{"inputs":[],"output":{"name":"gdbuscapabilityflags"}}],[11,"all","","Returns the set containing all flags.",94,{"inputs":[],"output":{"name":"gdbuscapabilityflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",94,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",94,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",94,{"inputs":[{"name":"u32"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",94,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",94,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",94,null],[11,"remove","","Removes the specified flags in-place.",94,null],[11,"toggle","","Toggles the specified flags in-place.",94,null],[11,"bitor","","Returns the union of the two sets of flags.",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",94,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"not","","Returns the complement of this set of flags.",94,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"from_iter","","",94,{"inputs":[{"name":"t"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"hash","","",95,null],[11,"cmp","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"option"}}],[11,"lt","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"le","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"gt","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"ge","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"clone","","",95,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"eq","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"ne","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"fmt","","",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",95,{"inputs":[],"output":{"name":"gdbusconnectionflags"}}],[11,"all","","Returns the set containing all flags.",95,{"inputs":[],"output":{"name":"gdbusconnectionflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",95,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",95,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",95,{"inputs":[{"name":"u32"}],"output":{"name":"gdbusconnectionflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",95,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",95,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",95,null],[11,"remove","","Removes the specified flags in-place.",95,null],[11,"toggle","","Toggles the specified flags in-place.",95,null],[11,"bitor","","Returns the union of the two sets of flags.",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",95,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"not","","Returns the complement of this set of flags.",95,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"from_iter","","",95,{"inputs":[{"name":"t"}],"output":{"name":"gdbusconnectionflags"}}],[11,"hash","","",96,null],[11,"cmp","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"option"}}],[11,"lt","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"le","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"gt","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"ge","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"clone","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"eq","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"ne","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"fmt","","",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",96,{"inputs":[],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"all","","Returns the set containing all flags.",96,{"inputs":[],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",96,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",96,{"inputs":[{"name":"u32"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",96,null],[11,"remove","","Removes the specified flags in-place.",96,null],[11,"toggle","","Toggles the specified flags in-place.",96,null],[11,"bitor","","Returns the union of the two sets of flags.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"not","","Returns the complement of this set of flags.",96,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"from_iter","","",96,{"inputs":[{"name":"t"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"hash","","",97,null],[11,"cmp","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"option"}}],[11,"lt","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"le","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"gt","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"ge","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"clone","","",97,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"eq","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"ne","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"fmt","","",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",97,{"inputs":[],"output":{"name":"gdbusmessageflags"}}],[11,"all","","Returns the set containing all flags.",97,{"inputs":[],"output":{"name":"gdbusmessageflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",97,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",97,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",97,{"inputs":[{"name":"u32"}],"output":{"name":"gdbusmessageflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",97,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",97,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",97,null],[11,"remove","","Removes the specified flags in-place.",97,null],[11,"toggle","","Toggles the specified flags in-place.",97,null],[11,"bitor","","Returns the union of the two sets of flags.",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",97,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"not","","Returns the complement of this set of flags.",97,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"from_iter","","",97,{"inputs":[{"name":"t"}],"output":{"name":"gdbusmessageflags"}}],[11,"hash","","",98,null],[11,"cmp","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"option"}}],[11,"lt","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"le","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"gt","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"ge","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"clone","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"eq","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"ne","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"fmt","","",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",98,{"inputs":[],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"all","","Returns the set containing all flags.",98,{"inputs":[],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",98,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",98,{"inputs":[{"name":"u32"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",98,null],[11,"remove","","Removes the specified flags in-place.",98,null],[11,"toggle","","Toggles the specified flags in-place.",98,null],[11,"bitor","","Returns the union of the two sets of flags.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"not","","Returns the complement of this set of flags.",98,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"from_iter","","",98,{"inputs":[{"name":"t"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"hash","","",99,null],[11,"cmp","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"eq","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",99,{"inputs":[],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"all","","Returns the set containing all flags.",99,{"inputs":[],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",99,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",99,{"inputs":[{"name":"u32"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",99,null],[11,"remove","","Removes the specified flags in-place.",99,null],[11,"toggle","","Toggles the specified flags in-place.",99,null],[11,"bitor","","Returns the union of the two sets of flags.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",99,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"from_iter","","",99,{"inputs":[{"name":"t"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"hash","","",100,null],[11,"cmp","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"option"}}],[11,"lt","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"le","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"gt","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"ge","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"clone","","",100,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"eq","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"ne","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"fmt","","",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",100,{"inputs":[],"output":{"name":"gdbusproxyflags"}}],[11,"all","","Returns the set containing all flags.",100,{"inputs":[],"output":{"name":"gdbusproxyflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",100,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",100,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",100,{"inputs":[{"name":"u32"}],"output":{"name":"gdbusproxyflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",100,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",100,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",100,null],[11,"remove","","Removes the specified flags in-place.",100,null],[11,"toggle","","Toggles the specified flags in-place.",100,null],[11,"bitor","","Returns the union of the two sets of flags.",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",100,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"not","","Returns the complement of this set of flags.",100,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"from_iter","","",100,{"inputs":[{"name":"t"}],"output":{"name":"gdbusproxyflags"}}],[11,"hash","","",101,null],[11,"cmp","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"option"}}],[11,"lt","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"le","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"gt","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"ge","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"clone","","",101,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"eq","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"ne","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"fmt","","",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",101,{"inputs":[],"output":{"name":"gdbussendmessageflags"}}],[11,"all","","Returns the set containing all flags.",101,{"inputs":[],"output":{"name":"gdbussendmessageflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",101,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",101,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",101,{"inputs":[{"name":"u32"}],"output":{"name":"gdbussendmessageflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",101,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",101,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",101,null],[11,"remove","","Removes the specified flags in-place.",101,null],[11,"toggle","","Toggles the specified flags in-place.",101,null],[11,"bitor","","Returns the union of the two sets of flags.",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",101,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"not","","Returns the complement of this set of flags.",101,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"gdbussendmessageflags"}}],[11,"hash","","",102,null],[11,"cmp","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"option"}}],[11,"lt","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"le","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"gt","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"ge","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"clone","","",102,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"eq","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"ne","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"fmt","","",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",102,{"inputs":[],"output":{"name":"gdbusserverflags"}}],[11,"all","","Returns the set containing all flags.",102,{"inputs":[],"output":{"name":"gdbusserverflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",102,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",102,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",102,{"inputs":[{"name":"u32"}],"output":{"name":"gdbusserverflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",102,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",102,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",102,null],[11,"remove","","Removes the specified flags in-place.",102,null],[11,"toggle","","Toggles the specified flags in-place.",102,null],[11,"bitor","","Returns the union of the two sets of flags.",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",102,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"not","","Returns the complement of this set of flags.",102,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"from_iter","","",102,{"inputs":[{"name":"t"}],"output":{"name":"gdbusserverflags"}}],[11,"hash","","",103,null],[11,"cmp","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"option"}}],[11,"lt","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"le","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"gt","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"ge","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"clone","","",103,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"eq","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"ne","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"fmt","","",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",103,{"inputs":[],"output":{"name":"gdbussignalflags"}}],[11,"all","","Returns the set containing all flags.",103,{"inputs":[],"output":{"name":"gdbussignalflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",103,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",103,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",103,{"inputs":[{"name":"u32"}],"output":{"name":"gdbussignalflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",103,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",103,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",103,null],[11,"remove","","Removes the specified flags in-place.",103,null],[11,"toggle","","Toggles the specified flags in-place.",103,null],[11,"bitor","","Returns the union of the two sets of flags.",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",103,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"not","","Returns the complement of this set of flags.",103,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"from_iter","","",103,{"inputs":[{"name":"t"}],"output":{"name":"gdbussignalflags"}}],[11,"hash","","",104,null],[11,"cmp","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"option"}}],[11,"lt","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"le","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"gt","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"ge","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"clone","","",104,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"eq","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"ne","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",104,{"inputs":[],"output":{"name":"gdbussubtreeflags"}}],[11,"all","","Returns the set containing all flags.",104,{"inputs":[],"output":{"name":"gdbussubtreeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",104,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",104,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",104,{"inputs":[{"name":"u32"}],"output":{"name":"gdbussubtreeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",104,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",104,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",104,null],[11,"remove","","Removes the specified flags in-place.",104,null],[11,"toggle","","Toggles the specified flags in-place.",104,null],[11,"bitor","","Returns the union of the two sets of flags.",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",104,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"not","","Returns the complement of this set of flags.",104,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"from_iter","","",104,{"inputs":[{"name":"t"}],"output":{"name":"gdbussubtreeflags"}}],[11,"hash","","",105,null],[11,"cmp","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"option"}}],[11,"lt","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"le","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"gt","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"ge","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"clone","","",105,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"eq","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"ne","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"fmt","","",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",105,{"inputs":[],"output":{"name":"gdrivestartflags"}}],[11,"all","","Returns the set containing all flags.",105,{"inputs":[],"output":{"name":"gdrivestartflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",105,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",105,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",105,{"inputs":[{"name":"u32"}],"output":{"name":"gdrivestartflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",105,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",105,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",105,null],[11,"remove","","Removes the specified flags in-place.",105,null],[11,"toggle","","Toggles the specified flags in-place.",105,null],[11,"bitor","","Returns the union of the two sets of flags.",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",105,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"not","","Returns the complement of this set of flags.",105,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"from_iter","","",105,{"inputs":[{"name":"t"}],"output":{"name":"gdrivestartflags"}}],[11,"hash","","",106,null],[11,"cmp","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",106,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"eq","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",106,{"inputs":[],"output":{"name":"gfileattributeinfoflags"}}],[11,"all","","Returns the set containing all flags.",106,{"inputs":[],"output":{"name":"gfileattributeinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",106,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",106,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",106,{"inputs":[{"name":"u32"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",106,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",106,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",106,null],[11,"remove","","Removes the specified flags in-place.",106,null],[11,"toggle","","Toggles the specified flags in-place.",106,null],[11,"bitor","","Returns the union of the two sets of flags.",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",106,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",106,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"from_iter","","",106,{"inputs":[{"name":"t"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"hash","","",107,null],[11,"cmp","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"option"}}],[11,"lt","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"le","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"gt","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"ge","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"eq","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"fmt","","",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",107,{"inputs":[],"output":{"name":"gfilecopyflags"}}],[11,"all","","Returns the set containing all flags.",107,{"inputs":[],"output":{"name":"gfilecopyflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",107,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",107,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",107,{"inputs":[{"name":"u32"}],"output":{"name":"gfilecopyflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",107,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",107,null],[11,"remove","","Removes the specified flags in-place.",107,null],[11,"toggle","","Toggles the specified flags in-place.",107,null],[11,"bitor","","Returns the union of the two sets of flags.",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",107,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"not","","Returns the complement of this set of flags.",107,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"from_iter","","",107,{"inputs":[{"name":"t"}],"output":{"name":"gfilecopyflags"}}],[11,"hash","","",108,null],[11,"cmp","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"option"}}],[11,"lt","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"le","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",108,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"eq","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",108,{"inputs":[],"output":{"name":"gfilecreateflags"}}],[11,"all","","Returns the set containing all flags.",108,{"inputs":[],"output":{"name":"gfilecreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",108,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",108,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",108,{"inputs":[{"name":"u32"}],"output":{"name":"gfilecreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",108,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",108,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",108,null],[11,"remove","","Removes the specified flags in-place.",108,null],[11,"toggle","","Toggles the specified flags in-place.",108,null],[11,"bitor","","Returns the union of the two sets of flags.",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",108,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"not","","Returns the complement of this set of flags.",108,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"from_iter","","",108,{"inputs":[{"name":"t"}],"output":{"name":"gfilecreateflags"}}],[11,"hash","","",109,null],[11,"cmp","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"option"}}],[11,"lt","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"le","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"gt","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"ge","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"clone","","",109,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"eq","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"ne","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"fmt","","",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",109,{"inputs":[],"output":{"name":"gfilemeasureflags"}}],[11,"all","","Returns the set containing all flags.",109,{"inputs":[],"output":{"name":"gfilemeasureflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",109,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",109,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",109,{"inputs":[{"name":"u32"}],"output":{"name":"gfilemeasureflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",109,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",109,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",109,null],[11,"remove","","Removes the specified flags in-place.",109,null],[11,"toggle","","Toggles the specified flags in-place.",109,null],[11,"bitor","","Returns the union of the two sets of flags.",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",109,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"not","","Returns the complement of this set of flags.",109,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"from_iter","","",109,{"inputs":[{"name":"t"}],"output":{"name":"gfilemeasureflags"}}],[11,"hash","","",110,null],[11,"cmp","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"option"}}],[11,"lt","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"le","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"gt","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"ge","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"clone","","",110,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"eq","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"ne","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"fmt","","",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",110,{"inputs":[],"output":{"name":"gfilemonitorflags"}}],[11,"all","","Returns the set containing all flags.",110,{"inputs":[],"output":{"name":"gfilemonitorflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",110,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",110,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",110,{"inputs":[{"name":"u32"}],"output":{"name":"gfilemonitorflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",110,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",110,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",110,null],[11,"remove","","Removes the specified flags in-place.",110,null],[11,"toggle","","Toggles the specified flags in-place.",110,null],[11,"bitor","","Returns the union of the two sets of flags.",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",110,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"not","","Returns the complement of this set of flags.",110,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"from_iter","","",110,{"inputs":[{"name":"t"}],"output":{"name":"gfilemonitorflags"}}],[11,"hash","","",111,null],[11,"cmp","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",111,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"eq","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",111,{"inputs":[],"output":{"name":"gfilequeryinfoflags"}}],[11,"all","","Returns the set containing all flags.",111,{"inputs":[],"output":{"name":"gfilequeryinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",111,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",111,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",111,{"inputs":[{"name":"u32"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",111,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",111,null],[11,"remove","","Removes the specified flags in-place.",111,null],[11,"toggle","","Toggles the specified flags in-place.",111,null],[11,"bitor","","Returns the union of the two sets of flags.",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",111,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",111,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"from_iter","","",111,{"inputs":[{"name":"t"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"hash","","",112,null],[11,"cmp","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"eq","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"fmt","","",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",112,{"inputs":[],"output":{"name":"giostreamspliceflags"}}],[11,"all","","Returns the set containing all flags.",112,{"inputs":[],"output":{"name":"giostreamspliceflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",112,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",112,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",112,{"inputs":[{"name":"u32"}],"output":{"name":"giostreamspliceflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",112,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",112,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",112,null],[11,"remove","","Removes the specified flags in-place.",112,null],[11,"toggle","","Toggles the specified flags in-place.",112,null],[11,"bitor","","Returns the union of the two sets of flags.",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",112,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"not","","Returns the complement of this set of flags.",112,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"from_iter","","",112,{"inputs":[{"name":"t"}],"output":{"name":"giostreamspliceflags"}}],[11,"hash","","",113,null],[11,"cmp","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"option"}}],[11,"lt","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"le","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"gt","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"ge","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"clone","","",113,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"eq","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"ne","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"fmt","","",113,{"inputs":[{"name":"gmountmountflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",113,{"inputs":[],"output":{"name":"gmountmountflags"}}],[11,"all","","Returns the set containing all flags.",113,{"inputs":[],"output":{"name":"gmountmountflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",113,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",113,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",113,{"inputs":[{"name":"u32"}],"output":{"name":"gmountmountflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",113,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",113,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",113,null],[11,"remove","","Removes the specified flags in-place.",113,null],[11,"toggle","","Toggles the specified flags in-place.",113,null],[11,"bitor","","Returns the union of the two sets of flags.",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",113,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"not","","Returns the complement of this set of flags.",113,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"from_iter","","",113,{"inputs":[{"name":"t"}],"output":{"name":"gmountmountflags"}}],[11,"hash","","",114,null],[11,"cmp","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"option"}}],[11,"lt","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"le","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"gt","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"ge","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"clone","","",114,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"eq","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"ne","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"fmt","","",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",114,{"inputs":[],"output":{"name":"gmountunmountflags"}}],[11,"all","","Returns the set containing all flags.",114,{"inputs":[],"output":{"name":"gmountunmountflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",114,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",114,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",114,{"inputs":[{"name":"u32"}],"output":{"name":"gmountunmountflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",114,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",114,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",114,null],[11,"remove","","Removes the specified flags in-place.",114,null],[11,"toggle","","Toggles the specified flags in-place.",114,null],[11,"bitor","","Returns the union of the two sets of flags.",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",114,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"not","","Returns the complement of this set of flags.",114,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"from_iter","","",114,{"inputs":[{"name":"t"}],"output":{"name":"gmountunmountflags"}}],[11,"hash","","",115,null],[11,"cmp","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"option"}}],[11,"lt","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"le","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"gt","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"ge","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"clone","","",115,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"eq","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"ne","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"fmt","","",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",115,{"inputs":[],"output":{"name":"goutputstreamspliceflags"}}],[11,"all","","Returns the set containing all flags.",115,{"inputs":[],"output":{"name":"goutputstreamspliceflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",115,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",115,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",115,{"inputs":[{"name":"u32"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",115,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",115,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",115,null],[11,"remove","","Removes the specified flags in-place.",115,null],[11,"toggle","","Toggles the specified flags in-place.",115,null],[11,"bitor","","Returns the union of the two sets of flags.",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",115,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"not","","Returns the complement of this set of flags.",115,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"from_iter","","",115,{"inputs":[{"name":"t"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"hash","","",116,null],[11,"cmp","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"option"}}],[11,"lt","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"le","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"gt","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"ge","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"clone","","",116,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"eq","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"ne","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"fmt","","",116,{"inputs":[{"name":"gresourceflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",116,{"inputs":[],"output":{"name":"gresourceflags"}}],[11,"all","","Returns the set containing all flags.",116,{"inputs":[],"output":{"name":"gresourceflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",116,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",116,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",116,{"inputs":[{"name":"u32"}],"output":{"name":"gresourceflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",116,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",116,null],[11,"remove","","Removes the specified flags in-place.",116,null],[11,"toggle","","Toggles the specified flags in-place.",116,null],[11,"bitor","","Returns the union of the two sets of flags.",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",116,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"not","","Returns the complement of this set of flags.",116,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"from_iter","","",116,{"inputs":[{"name":"t"}],"output":{"name":"gresourceflags"}}],[11,"hash","","",117,null],[11,"cmp","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"option"}}],[11,"lt","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"le","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"gt","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"ge","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"clone","","",117,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"eq","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"fmt","","",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",117,{"inputs":[],"output":{"name":"gresourcelookupflags"}}],[11,"all","","Returns the set containing all flags.",117,{"inputs":[],"output":{"name":"gresourcelookupflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",117,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",117,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",117,{"inputs":[{"name":"u32"}],"output":{"name":"gresourcelookupflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",117,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",117,null],[11,"remove","","Removes the specified flags in-place.",117,null],[11,"toggle","","Toggles the specified flags in-place.",117,null],[11,"bitor","","Returns the union of the two sets of flags.",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",117,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"not","","Returns the complement of this set of flags.",117,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"from_iter","","",117,{"inputs":[{"name":"t"}],"output":{"name":"gresourcelookupflags"}}],[11,"hash","","",118,null],[11,"cmp","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"option"}}],[11,"lt","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"le","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"gt","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"ge","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"clone","","",118,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"eq","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"ne","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"fmt","","",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",118,{"inputs":[],"output":{"name":"gsettingsbindflags"}}],[11,"all","","Returns the set containing all flags.",118,{"inputs":[],"output":{"name":"gsettingsbindflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",118,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",118,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",118,{"inputs":[{"name":"u32"}],"output":{"name":"gsettingsbindflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",118,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",118,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",118,null],[11,"remove","","Removes the specified flags in-place.",118,null],[11,"toggle","","Toggles the specified flags in-place.",118,null],[11,"bitor","","Returns the union of the two sets of flags.",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",118,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"not","","Returns the complement of this set of flags.",118,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"from_iter","","",118,{"inputs":[{"name":"t"}],"output":{"name":"gsettingsbindflags"}}],[11,"hash","","",119,null],[11,"cmp","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"option"}}],[11,"lt","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"le","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"gt","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"ge","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"eq","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"fmt","","",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",119,{"inputs":[],"output":{"name":"gsocketmsgflags"}}],[11,"all","","Returns the set containing all flags.",119,{"inputs":[],"output":{"name":"gsocketmsgflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",119,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",119,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",119,{"inputs":[{"name":"u32"}],"output":{"name":"gsocketmsgflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",119,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",119,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",119,null],[11,"remove","","Removes the specified flags in-place.",119,null],[11,"toggle","","Toggles the specified flags in-place.",119,null],[11,"bitor","","Returns the union of the two sets of flags.",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",119,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"not","","Returns the complement of this set of flags.",119,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"from_iter","","",119,{"inputs":[{"name":"t"}],"output":{"name":"gsocketmsgflags"}}],[11,"hash","","",120,null],[11,"cmp","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"option"}}],[11,"lt","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"le","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"gt","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"ge","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"clone","","",120,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"eq","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"fmt","","",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",120,{"inputs":[],"output":{"name":"gsubprocessflags"}}],[11,"all","","Returns the set containing all flags.",120,{"inputs":[],"output":{"name":"gsubprocessflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",120,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",120,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",120,{"inputs":[{"name":"u32"}],"output":{"name":"gsubprocessflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",120,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",120,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",120,null],[11,"remove","","Removes the specified flags in-place.",120,null],[11,"toggle","","Toggles the specified flags in-place.",120,null],[11,"bitor","","Returns the union of the two sets of flags.",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",120,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"not","","Returns the complement of this set of flags.",120,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"from_iter","","",120,{"inputs":[{"name":"t"}],"output":{"name":"gsubprocessflags"}}],[11,"hash","","",121,null],[11,"cmp","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"option"}}],[11,"lt","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"le","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"gt","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"ge","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"clone","","",121,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"eq","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"ne","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"fmt","","",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",121,{"inputs":[],"output":{"name":"gtestdbusflags"}}],[11,"all","","Returns the set containing all flags.",121,{"inputs":[],"output":{"name":"gtestdbusflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",121,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",121,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",121,{"inputs":[{"name":"u32"}],"output":{"name":"gtestdbusflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",121,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",121,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",121,null],[11,"remove","","Removes the specified flags in-place.",121,null],[11,"toggle","","Toggles the specified flags in-place.",121,null],[11,"bitor","","Returns the union of the two sets of flags.",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",121,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"not","","Returns the complement of this set of flags.",121,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"from_iter","","",121,{"inputs":[{"name":"t"}],"output":{"name":"gtestdbusflags"}}],[11,"hash","","",122,null],[11,"cmp","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"option"}}],[11,"lt","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"le","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"gt","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"ge","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"clone","","",122,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"eq","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"ne","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",122,{"inputs":[],"output":{"name":"gtlscertificateflags"}}],[11,"all","","Returns the set containing all flags.",122,{"inputs":[],"output":{"name":"gtlscertificateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",122,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",122,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",122,{"inputs":[{"name":"u32"}],"output":{"name":"gtlscertificateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",122,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",122,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",122,null],[11,"remove","","Removes the specified flags in-place.",122,null],[11,"toggle","","Toggles the specified flags in-place.",122,null],[11,"bitor","","Returns the union of the two sets of flags.",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",122,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"not","","Returns the complement of this set of flags.",122,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"from_iter","","",122,{"inputs":[{"name":"t"}],"output":{"name":"gtlscertificateflags"}}],[11,"hash","","",123,null],[11,"cmp","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"option"}}],[11,"lt","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"le","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"gt","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"ge","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"clone","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"eq","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"ne","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"fmt","","",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",123,{"inputs":[],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"all","","Returns the set containing all flags.",123,{"inputs":[],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",123,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",123,{"inputs":[{"name":"u32"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",123,null],[11,"remove","","Removes the specified flags in-place.",123,null],[11,"toggle","","Toggles the specified flags in-place.",123,null],[11,"bitor","","Returns the union of the two sets of flags.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"not","","Returns the complement of this set of flags.",123,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"from_iter","","",123,{"inputs":[{"name":"t"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"hash","","",124,null],[11,"cmp","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"option"}}],[11,"lt","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"le","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"gt","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"ge","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"clone","","",124,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"eq","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"fmt","","",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",124,{"inputs":[],"output":{"name":"gtlspasswordflags"}}],[11,"all","","Returns the set containing all flags.",124,{"inputs":[],"output":{"name":"gtlspasswordflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",124,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",124,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",124,{"inputs":[{"name":"u32"}],"output":{"name":"gtlspasswordflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",124,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",124,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",124,null],[11,"remove","","Removes the specified flags in-place.",124,null],[11,"toggle","","Toggles the specified flags in-place.",124,null],[11,"bitor","","Returns the union of the two sets of flags.",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",124,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"not","","Returns the complement of this set of flags.",124,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"from_iter","","",124,{"inputs":[{"name":"t"}],"output":{"name":"gtlspasswordflags"}}],[3,"ApplicationFlags","glib","",null,null],[17,"APPLICATION_FLAGS_NONE","","",null,null],[17,"APPLICATION_IS_SERVICE","","",null,null],[17,"APPLICATION_IS_LAUNCHER","","",null,null],[17,"APPLICATION_HANDLES_OPEN","","",null,null],[17,"APPLICATION_HANDLES_COMMAND_LINE","","",null,null],[17,"APPLICATION_SEND_ENVIRONMENT","","",null,null],[17,"APPLICATION_NON_UNIQUE","","",null,null],[3,"AppInfo","","",null,null],[3,"CallbackGuard","","Unwinding propagation guard. Aborts the process if destroyed while\npanicking.",null,null],[3,"Continue","","Continue calling the closure in the future iterations or drop it.",null,null],[4,"FileError","","",null,null],[13,"Exist","","",125,null],[13,"Isdir","","",125,null],[13,"Acces","","",125,null],[13,"Nametoolong","","",125,null],[13,"Noent","","",125,null],[13,"Notdir","","",125,null],[13,"Nxio","","",125,null],[13,"Nodev","","",125,null],[13,"Rofs","","",125,null],[13,"Txtbsy","","",125,null],[13,"Fault","","",125,null],[13,"Loop","","",125,null],[13,"Nospc","","",125,null],[13,"Nomem","","",125,null],[13,"Mfile","","",125,null],[13,"Nfile","","",125,null],[13,"Badf","","",125,null],[13,"Inval","","",125,null],[13,"Pipe","","",125,null],[13,"Again","","",125,null],[13,"Intr","","",125,null],[13,"Io","","",125,null],[13,"Perm","","",125,null],[13,"Nosys","","",125,null],[13,"Failed","","",125,null],[5,"idle_add","","Adds a closure to be called by the default main loop when it&#39;s idle.",null,{"inputs":[{"name":"f"}],"output":{"name":"u32"}}],[5,"timeout_add","","Adds a closure to be called by the default main loop at regular intervals\nwith millisecond granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"u32"}}],[5,"timeout_add_seconds","","Adds a closure to be called by the default main loop at regular intervals\nwith second granularity.",null,{"inputs":[{"name":"u32"},{"name":"f"}],"output":{"name":"u32"}}],[5,"get_current_time","","",null,{"inputs":[],"output":{"name":"timeval"}}],[0,"wrapper","","`IMPL` The `glib_wrapper!` macro and miscellaneous wrapper traits.",null,null],[8,"Wrapper","glib::wrapper","A wrapper struct.",null,null],[16,"GlibType","","Foreign type represented by the struct.",126,null],[8,"UnsafeFrom","","",null,null],[10,"from","","",127,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[0,"boxed","glib","`IMPL` Boxed wrapper implementation.",null,null],[3,"Boxed","glib::boxed","Encapsulates memory management logic for boxed types.",null,null],[8,"BoxedMemoryManager","","Memory management functions for a boxed type.",null,null],[10,"copy","","Makes a copy.",128,null],[10,"free","","Frees the object.",128,null],[11,"uninitialized","","",129,{"inputs":[],"output":{"name":"self"}}],[11,"uninitialized","","",129,{"inputs":[],"output":{"name":"self"}}],[11,"to_glib_none","","",129,{"inputs":[{"name":"boxed"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",129,{"inputs":[{"name":"boxed"}],"output":{"name":"stashmut"}}],[11,"from_glib_none","","",129,null],[11,"from_glib_full","","",129,null],[11,"from_glib_borrow","","",129,null],[11,"drop","","",129,{"inputs":[{"name":"boxed"}],"output":null}],[11,"fmt","","",129,{"inputs":[{"name":"boxed"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"boxed"}],"output":{"name":"self"}}],[11,"deref","","",129,{"inputs":[{"name":"boxed"}],"output":{"name":"t"}}],[11,"deref_mut","","",129,{"inputs":[{"name":"boxed"}],"output":{"name":"t"}}],[0,"shared","glib","`IMPL` Shared (reference counted) wrapper implementation.",null,null],[3,"Shared","glib::shared","Encapsulates memory management logic for shared types.",null,null],[8,"SharedMemoryManager","","",null,null],[10,"ref_","","",130,null],[10,"unref","","",130,null],[11,"drop","","",131,{"inputs":[{"name":"shared"}],"output":null}],[11,"clone","","",131,{"inputs":[{"name":"shared"}],"output":{"name":"self"}}],[11,"fmt","","",131,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",131,{"inputs":[{"name":"shared"},{"name":"self"}],"output":{"name":"bool"}}],[11,"hash","","",131,{"inputs":[{"name":"shared"},{"name":"h"}],"output":null}],[11,"to_glib_none","","",131,{"inputs":[{"name":"shared"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",131,null],[11,"from_glib_none","","",131,null],[11,"from_glib_full","","",131,null],[11,"from_glib_borrow","","",131,null],[0,"object","glib","`IMPL` Object wrapper implementation and `Object` binding.",null,null],[11,"hash","gobject_sys","",132,null],[11,"cmp","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"option"}}],[11,"lt","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"le","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"gt","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"ge","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"clone","","",132,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"eq","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"fmt","","",132,{"inputs":[{"name":"gbindingflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",132,{"inputs":[],"output":{"name":"gbindingflags"}}],[11,"all","","Returns the set containing all flags.",132,{"inputs":[],"output":{"name":"gbindingflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",132,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",132,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",132,{"inputs":[{"name":"u32"}],"output":{"name":"gbindingflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",132,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",132,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",132,null],[11,"remove","","Removes the specified flags in-place.",132,null],[11,"toggle","","Toggles the specified flags in-place.",132,null],[11,"bitor","","Returns the union of the two sets of flags.",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",132,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"not","","Returns the complement of this set of flags.",132,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"from_iter","","",132,{"inputs":[{"name":"t"}],"output":{"name":"gbindingflags"}}],[11,"hash","","",133,null],[11,"cmp","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"option"}}],[11,"lt","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"le","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"gt","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"ge","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"clone","","",133,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"eq","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"fmt","","",133,{"inputs":[{"name":"gconnectflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",133,{"inputs":[],"output":{"name":"gconnectflags"}}],[11,"all","","Returns the set containing all flags.",133,{"inputs":[],"output":{"name":"gconnectflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",133,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",133,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",133,{"inputs":[{"name":"u32"}],"output":{"name":"gconnectflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",133,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",133,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",133,null],[11,"remove","","Removes the specified flags in-place.",133,null],[11,"toggle","","Toggles the specified flags in-place.",133,null],[11,"bitor","","Returns the union of the two sets of flags.",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",133,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"not","","Returns the complement of this set of flags.",133,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"from_iter","","",133,{"inputs":[{"name":"t"}],"output":{"name":"gconnectflags"}}],[11,"hash","","",134,null],[11,"cmp","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"option"}}],[11,"lt","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"le","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"gt","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"ge","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"clone","","",134,{"inputs":[{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"eq","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"gparamflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",134,{"inputs":[],"output":{"name":"gparamflags"}}],[11,"all","","Returns the set containing all flags.",134,{"inputs":[],"output":{"name":"gparamflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",134,{"inputs":[{"name":"gparamflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",134,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",134,{"inputs":[{"name":"u32"}],"output":{"name":"gparamflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",134,{"inputs":[{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",134,{"inputs":[{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",134,null],[11,"remove","","Removes the specified flags in-place.",134,null],[11,"toggle","","Toggles the specified flags in-place.",134,null],[11,"bitor","","Returns the union of the two sets of flags.",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",134,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"not","","Returns the complement of this set of flags.",134,{"inputs":[{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"from_iter","","",134,{"inputs":[{"name":"t"}],"output":{"name":"gparamflags"}}],[11,"hash","","",135,null],[11,"cmp","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"option"}}],[11,"lt","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"le","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"gt","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"ge","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"clone","","",135,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"eq","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"gsignalflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",135,{"inputs":[],"output":{"name":"gsignalflags"}}],[11,"all","","Returns the set containing all flags.",135,{"inputs":[],"output":{"name":"gsignalflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",135,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",135,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",135,{"inputs":[{"name":"u32"}],"output":{"name":"gsignalflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",135,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",135,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",135,null],[11,"remove","","Removes the specified flags in-place.",135,null],[11,"toggle","","Toggles the specified flags in-place.",135,null],[11,"bitor","","Returns the union of the two sets of flags.",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",135,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"not","","Returns the complement of this set of flags.",135,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"from_iter","","",135,{"inputs":[{"name":"t"}],"output":{"name":"gsignalflags"}}],[11,"hash","","",136,null],[11,"cmp","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"option"}}],[11,"lt","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"le","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"gt","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"ge","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"clone","","",136,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"eq","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"fmt","","",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",136,{"inputs":[],"output":{"name":"gsignalmatchtype"}}],[11,"all","","Returns the set containing all flags.",136,{"inputs":[],"output":{"name":"gsignalmatchtype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",136,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",136,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",136,{"inputs":[{"name":"u32"}],"output":{"name":"gsignalmatchtype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",136,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",136,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",136,null],[11,"remove","","Removes the specified flags in-place.",136,null],[11,"toggle","","Toggles the specified flags in-place.",136,null],[11,"bitor","","Returns the union of the two sets of flags.",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",136,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"not","","Returns the complement of this set of flags.",136,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"from_iter","","",136,{"inputs":[{"name":"t"}],"output":{"name":"gsignalmatchtype"}}],[11,"hash","","",137,null],[11,"cmp","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"option"}}],[11,"lt","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"le","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"gt","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"ge","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"clone","","",137,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"eq","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"fmt","","",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",137,{"inputs":[],"output":{"name":"gtypedebugflags"}}],[11,"all","","Returns the set containing all flags.",137,{"inputs":[],"output":{"name":"gtypedebugflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",137,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",137,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",137,{"inputs":[{"name":"u32"}],"output":{"name":"gtypedebugflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",137,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",137,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",137,null],[11,"remove","","Removes the specified flags in-place.",137,null],[11,"toggle","","Toggles the specified flags in-place.",137,null],[11,"bitor","","Returns the union of the two sets of flags.",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",137,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"not","","Returns the complement of this set of flags.",137,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"from_iter","","",137,{"inputs":[{"name":"t"}],"output":{"name":"gtypedebugflags"}}],[11,"hash","","",138,null],[11,"cmp","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"option"}}],[11,"lt","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"le","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"gt","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"ge","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"clone","","",138,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"eq","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"gtypeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",138,{"inputs":[],"output":{"name":"gtypeflags"}}],[11,"all","","Returns the set containing all flags.",138,{"inputs":[],"output":{"name":"gtypeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",138,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",138,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",138,{"inputs":[{"name":"u32"}],"output":{"name":"gtypeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",138,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",138,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",138,null],[11,"remove","","Removes the specified flags in-place.",138,null],[11,"toggle","","Toggles the specified flags in-place.",138,null],[11,"bitor","","Returns the union of the two sets of flags.",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",138,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"not","","Returns the complement of this set of flags.",138,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"from_iter","","",138,{"inputs":[{"name":"t"}],"output":{"name":"gtypeflags"}}],[11,"hash","","",139,null],[11,"cmp","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"option"}}],[11,"lt","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"le","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"gt","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"ge","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"clone","","",139,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"eq","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",139,{"inputs":[],"output":{"name":"gtypefundamentalflags"}}],[11,"all","","Returns the set containing all flags.",139,{"inputs":[],"output":{"name":"gtypefundamentalflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",139,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",139,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",139,{"inputs":[{"name":"u32"}],"output":{"name":"gtypefundamentalflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",139,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",139,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",139,null],[11,"remove","","Removes the specified flags in-place.",139,null],[11,"toggle","","Toggles the specified flags in-place.",139,null],[11,"bitor","","Returns the union of the two sets of flags.",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",139,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"not","","Returns the complement of this set of flags.",139,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"from_iter","","",139,{"inputs":[{"name":"t"}],"output":{"name":"gtypefundamentalflags"}}],[3,"GObject","glib::object","",null,null],[3,"Object","","The base class in the object hierarchy.",null,null],[8,"Cast","","Upcasting and downcasting support.",null,null],[11,"upcast","","Upcasts an object to a superclass or interface `T`.",140,{"inputs":[{"name":"cast"}],"output":{"name":"t"}}],[11,"downcast","","Tries to downcast to a subclass or interface implementor `T`.",140,{"inputs":[{"name":"cast"}],"output":{"name":"result"}}],[11,"is","","Returns `true` if the object is an instance of (can be downcast to) `T`.",140,{"inputs":[{"name":"cast"}],"output":{"name":"bool"}}],[8,"IsA","","Declares the &quot;is a&quot; relationship.",null,null],[8,"Downcast","","Downcasts support.",null,null],[10,"can_downcast","","Checks if it&#39;s possible to downcast to `T`.",141,{"inputs":[{"name":"downcast"}],"output":{"name":"bool"}}],[10,"downcast","","Tries to downcast to `T`.",141,{"inputs":[{"name":"downcast"}],"output":{"name":"result"}}],[10,"downcast_unchecked","","Downcasts to `T` unconditionally.",141,{"inputs":[{"name":"downcast"}],"output":{"name":"t"}}],[8,"ObjectExt","","",null,null],[11,"hash","","",142,null],[11,"fmt","","",142,{"inputs":[{"name":"object"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"object"}],"output":{"name":"object"}}],[11,"static_type","","",142,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",142,{"inputs":[{"name":"object"},{"name":"t"}],"output":{"name":"bool"}}],[11,"hash","glib","",143,null],[11,"fmt","","",143,{"inputs":[{"name":"appinfo"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"appinfo"}],"output":{"name":"appinfo"}}],[11,"static_type","","",143,{"inputs":[],"output":{"name":"type"}}],[11,"eq","","",143,{"inputs":[{"name":"appinfo"},{"name":"t"}],"output":{"name":"bool"}}],[0,"error","","`Error` binding and helper trait.",null,null],[3,"Error","glib::error","A generic error capable of representing various error domains (types).",null,null],[8,"ErrorDomain","","`GLib` error domain.",null,null],[10,"domain","","Returns the quark identifying the error domain.",144,{"inputs":[],"output":{"name":"gquark"}}],[10,"code","","Gets the integer representation of the variant.",144,{"inputs":[{"name":"errordomain"}],"output":{"name":"i32"}}],[10,"from","","Tries to convert an integer code to an enum variant.",144,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"fmt","","",145,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"new","","Creates an error with supplied error enum variant and message.",145,{"inputs":[{"name":"t"},{"name":"str"}],"output":{"name":"error"}}],[11,"is","","Checks if the error domain matches `T`.",145,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"kind","","Tries to convert to a specific error enum.",145,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"wrap","","",145,null],[11,"fmt","","",145,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",145,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"eq","glib","",125,{"inputs":[{"name":"fileerror"},{"name":"fileerror"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"fileerror"},{"name":"fileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",125,{"inputs":[{"name":"fileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"fileerror"}],"output":{"name":"fileerror"}}],[11,"domain","","",125,{"inputs":[],"output":{"name":"gquark"}}],[11,"code","","",125,{"inputs":[{"name":"fileerror"}],"output":{"name":"i32"}}],[11,"from","","",125,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[0,"prelude","","Traits and essential types inteded for blanket imports.",null,null],[3,"Continue","glib::prelude","Continue calling the closure in the future iterations or drop it.",null,null],[8,"AppInfoExt","","",null,null],[0,"signal","glib","`IMPL` Low level signal support.",null,null],[5,"connect","glib::signal","",null,null],[11,"to_glib","glib","",146,{"inputs":[{"name":"continue"}],"output":{"name":"gboolean"}}],[11,"new","","",147,{"inputs":[],"output":{"name":"callbackguard"}}],[11,"drop","","",147,{"inputs":[{"name":"callbackguard"}],"output":null}],[0,"translate","","Translation between GLib/GLib-based FFI types and their Rust counterparts.",null,null],[3,"Stash","glib::translate","Helper type that stores temporary values used for translation.",null,null],[3,"StashMut","","",null,null],[3,"PtrArray","","Temporary storage for passing a `NULL` terminated array of pointers.",null,null],[3,"List","","",null,null],[3,"SList","","",null,null],[3,"HashTable","","",null,null],[5,"mut_override","","Overrides pointer mutability.",null,null],[5,"uninitialized","","Returns an uninitialized value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"some_if","","Returns `Some(val)` if the condition is true and `None` otherwise.",null,{"inputs":[{"name":"b"},{"name":"f"}],"output":{"name":"option"}}],[5,"from_glib","","Translate a simple type.",null,{"inputs":[{"name":"g"}],"output":{"name":"t"}}],[5,"from_glib_none","","Translate from a pointer type, transfer: none.",null,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[5,"from_glib_full","","Translate from a pointer type, transfer: full (assume ownership).",null,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[5,"from_glib_borrow","","Translate from a pointer type, borrowing the pointer.",null,{"inputs":[{"name":"p"}],"output":{"name":"t"}}],[8,"Ptr","","A pointer",null,null],[10,"is_null","","",148,{"inputs":[{"name":"ptr"}],"output":{"name":"bool"}}],[10,"from","","",148,null],[10,"to","","",148,null],[8,"Uninitialized","","A trait for creating an uninitialized value. Handy for receiving outparams.",null,null],[10,"uninitialized","","Returns an uninitialized value.",149,{"inputs":[],"output":{"name":"self"}}],[8,"ToBool","","",null,null],[10,"to_bool","","",150,{"inputs":[{"name":"tobool"}],"output":{"name":"bool"}}],[8,"ToGlib","","Translate a simple type.",null,null],[16,"GlibType","","",151,null],[10,"to_glib","","",151,{"inputs":[{"name":"toglib"}],"output":{"name":"glibtype"}}],[8,"GlibPtrDefault","","Provides the default pointer type to be used in some container conversions.",null,null],[16,"GlibType","","",152,null],[8,"ToGlibPtr","","Translate to a pointer.",null,null],[16,"Storage","","",153,null],[10,"to_glib_none","","Transfer: none.",153,{"inputs":[{"name":"toglibptr"}],"output":{"name":"stash"}}],[11,"to_glib_container","","Transfer: container.",153,{"inputs":[{"name":"toglibptr"}],"output":{"name":"stash"}}],[11,"to_glib_full","","Transfer: full.",153,{"inputs":[{"name":"toglibptr"}],"output":{"name":"p"}}],[8,"ToGlibPtrMut","","",null,null],[16,"Storage","","",154,null],[10,"to_glib_none_mut","","Transfer: none.",154,{"inputs":[{"name":"toglibptrmut"}],"output":{"name":"stashmut"}}],[8,"FromGlib","","Translate a simple type.",null,null],[10,"from_glib","","",155,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"FromGlibPtr","","Translate from a pointer type.",null,null],[10,"from_glib_none","","Transfer: none.",156,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[10,"from_glib_full","","Transfer: full.",156,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[11,"from_glib_borrow","","Borrow. Don&#39;t increase the refcount.",156,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[8,"FromGlibPtrContainer","","Translate from a container of pointers.",null,null],[10,"from_glib_none","","Transfer: none.",157,{"inputs":[{"name":"pp"}],"output":{"name":"self"}}],[10,"from_glib_none_num","","Transfer: none.",157,{"inputs":[{"name":"pp"},{"name":"usize"}],"output":{"name":"self"}}],[10,"from_glib_container","","Transfer: container.",157,{"inputs":[{"name":"pp"}],"output":{"name":"self"}}],[10,"from_glib_container_num","","Transfer: container.",157,{"inputs":[{"name":"pp"},{"name":"usize"}],"output":{"name":"self"}}],[10,"from_glib_full","","Transfer: full.",157,{"inputs":[{"name":"pp"}],"output":{"name":"self"}}],[10,"from_glib_full_num","","Transfer: full.",157,{"inputs":[{"name":"pp"},{"name":"usize"}],"output":{"name":"self"}}],[11,"to_bool","","",158,{"inputs":[{"name":"gboolean"}],"output":{"name":"bool"}}],[11,"to_glib","core::option","",159,{"inputs":[{"name":"option"}],"output":{"name":"u32"}}],[11,"to_glib","core::cmp","",160,{"inputs":[{"name":"ordering"}],"output":{"name":"i32"}}],[11,"to_glib_none","core::option","",159,{"inputs":[{"name":"option"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",159,{"inputs":[{"name":"option"}],"output":{"name":"p"}}],[11,"to_glib_none_mut","","",159,{"inputs":[{"name":"option"}],"output":{"name":"stashmut"}}],[11,"to_glib_none","collections::string","",161,{"inputs":[{"name":"string"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",161,null],[11,"to_glib_none","","",161,{"inputs":[{"name":"string"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",161,null],[11,"to_glib_none","std::path","",162,{"inputs":[{"name":"path"}],"output":{"name":"stash"}}],[11,"to_glib_none","","",162,{"inputs":[{"name":"path"}],"output":{"name":"stash"}}],[11,"len","glib::translate","Returns the length of the array not counting the `NULL` terminator.",163,{"inputs":[{"name":"ptrarray"}],"output":{"name":"usize"}}],[11,"drop","","",164,{"inputs":[{"name":"list"}],"output":null}],[11,"drop","","",165,{"inputs":[{"name":"slist"}],"output":null}],[11,"to_glib_none","std::collections::hash::map","",166,{"inputs":[{"name":"hashmap"}],"output":{"name":"stash"}}],[11,"to_glib_full","","",166,null],[11,"drop","glib::translate","",167,{"inputs":[{"name":"hashtable"}],"output":null}],[11,"from_glib","core::cmp","",160,{"inputs":[{"name":"i32"}],"output":{"name":"ordering"}}],[11,"from_glib","core::option","",159,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_glib","","",159,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_glib","","",159,{"inputs":[{"name":"i64"}],"output":{"name":"option"}}],[11,"from_glib","","",159,{"inputs":[{"name":"i32"}],"output":{"name":"option"}}],[11,"from_glib_none","","",159,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"from_glib_full","","",159,{"inputs":[{"name":"p"}],"output":{"name":"option"}}],[11,"from_glib_none","collections::string","",161,null],[11,"from_glib_full","","",161,null],[11,"from_glib_none","","",161,null],[11,"from_glib_full","","",161,null],[11,"from_glib_none","std::path","",168,null],[11,"from_glib_full","","",168,null],[11,"from_glib_none","","",168,null],[11,"from_glib_full","","",168,null],[11,"from_glib_none","collections::vec","",169,null],[11,"from_glib_none_num","","",169,null],[11,"from_glib_container","","",169,null],[11,"from_glib_container_num","","",169,null],[11,"from_glib_full","","",169,null],[11,"from_glib_full_num","","",169,null],[11,"from_glib_none","","",169,null],[11,"from_glib_none_num","","",169,null],[11,"from_glib_container","","",169,null],[11,"from_glib_container_num","","",169,null],[11,"from_glib_full","","",169,null],[11,"from_glib_full_num","","",169,null],[11,"from_glib_none","","",169,null],[11,"from_glib_none_num","","",169,null],[11,"from_glib_container","","",169,null],[11,"from_glib_container_num","","",169,null],[11,"from_glib_full","","",169,null],[11,"from_glib_full_num","","",169,null],[11,"from_glib_none","","",169,null],[11,"from_glib_none_num","","",169,null],[11,"from_glib_container","","",169,null],[11,"from_glib_container_num","","",169,null],[11,"from_glib_full","","",169,null],[11,"from_glib_full_num","","",169,null],[11,"from_glib_none","","",169,null],[11,"from_glib_none_num","","",169,null],[11,"from_glib_container","","",169,null],[11,"from_glib_container_num","","",169,null],[11,"from_glib_full","","",169,null],[11,"from_glib_full_num","","",169,null],[11,"from_glib_none","std::collections::hash::map","",166,null],[11,"from_glib_none_num","","",166,null],[11,"from_glib_container","","",166,null],[11,"from_glib_container_num","","",166,null],[11,"from_glib_full","","",166,null],[11,"from_glib_full_num","","",166,null],[0,"types","glib","Runtime type infromation.",null,null],[4,"Type","glib::types","A GLib or GLib-based library type",null,null],[13,"Invalid","","An invalid `Type` used as error return value in some functions",170,null],[13,"Unit","","The fundamental type corresponding to the unit type `()`",170,null],[13,"I8","","The fundamental type corresponding to `i8`",170,null],[13,"U8","","The fundamental type corresponding to `u8`",170,null],[13,"Bool","","The fundamental type corresponding to `bool`",170,null],[13,"I32","","The fundamental type corresponding to `i32`",170,null],[13,"U32","","The fundamental type corresponding to `u32`",170,null],[13,"ILong","","The fundamental type corresponding to C `long`",170,null],[13,"ULong","","The fundamental type corresponding to C `unsigned long`",170,null],[13,"I64","","The fundamental type corresponding to `i64`",170,null],[13,"U64","","The fundamental type corresponding to `u64`",170,null],[13,"F32","","The fundamental type corresponding to `f32`",170,null],[13,"F64","","The fundamental type corresponding to `f64`",170,null],[13,"String","","The fundamental type corresponding to `String`",170,null],[13,"Pointer","","The fundamental type corresponding to a pointer",170,null],[13,"Variant","","The fundamental type of GVariant",170,null],[13,"BaseInterface","","The fundamental type from which all interfaces are derived",170,null],[13,"BaseEnum","","The fundamental type from which all enumeration types are derived",170,null],[13,"BaseFlags","","The fundamental type from which all flags types are derived",170,null],[13,"BaseBoxed","","The fundamental type from which all boxed types are derived",170,null],[13,"BaseParamSpec","","The fundamental type from which all `GParamSpec` types are derived",170,null],[13,"BaseObject","","The fundamental type from which all objects are derived",170,null],[13,"Other","","A non-fundamental type identified by value of type `usize`",170,null],[5,"instance_of","","",null,{"inputs":[{"name":"gconstpointer"}],"output":{"name":"bool"}}],[8,"StaticType","","Types that are supported by GLib dynamic typing.",null,null],[10,"static_type","","Returns the type identifier of `Self`.",171,{"inputs":[],"output":{"name":"type"}}],[8,"InstanceType","","",null,null],[10,"instance_type","","",172,{"inputs":[{"name":"instancetype"}],"output":{"name":"type"}}],[11,"eq","","",170,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"fmt","","",170,{"inputs":[{"name":"type"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",170,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"static_type","collections::string","",161,{"inputs":[],"output":{"name":"type"}}],[11,"from_glib","glib::types","",170,{"inputs":[{"name":"gtype"}],"output":{"name":"type"}}],[11,"to_glib","","",170,{"inputs":[{"name":"type"}],"output":{"name":"gtype"}}],[0,"value","glib","`Value` binding and helper traits.",null,null],[3,"Value","glib::value","A generic value capable of carrying various types.",null,null],[3,"ValueArray","","",null,null],[3,"TypedValue","","A statically typed [`Value`](struct.Value.html).",null,null],[8,"ToValue","","Converts to `Value`.",null,null],[10,"to_value","","Returns a `Value` clone of `self`.",173,{"inputs":[{"name":"tovalue"}],"output":{"name":"value"}}],[10,"to_value_type","","Returns the type identifer of `self`.",173,{"inputs":[{"name":"tovalue"}],"output":{"name":"type"}}],[8,"FromValueOptional","","Extracts a value.",null,null],[10,"from_value_optional","","",174,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[8,"FromValue","","Extracts a value.",null,null],[10,"from_value","","",175,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[8,"SetValueOptional","","Sets a value.",null,null],[10,"set_value_optional","","",176,{"inputs":[{"name":"value"},{"name":"option"}],"output":null}],[8,"SetValue","","Sets a value.",null,null],[10,"set_value","","",177,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"downcast","","Tries to downcast to a `TypedValue`.",178,{"inputs":[{"name":"value"}],"output":{"name":"result"}}],[11,"get","","Tries to get a value of type `T`.",178,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"is","","Returns `true` if the type of the value corresponds to `T`.",178,{"inputs":[{"name":"value"}],"output":{"name":"bool"}}],[11,"type_","","Returns the type of the value.",178,{"inputs":[{"name":"value"}],"output":{"name":"type"}}],[11,"type_transformable","","Returns whether `Value`s of type `src` can be transformed to type `dst`.",178,{"inputs":[{"name":"type"},{"name":"type"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"value"}],"output":{"name":"self"}}],[11,"drop","","",178,{"inputs":[{"name":"value"}],"output":null}],[11,"fmt","","",178,{"inputs":[{"name":"value"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",178,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"from","","",178,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",178,{"inputs":[{"name":"typedvalue"}],"output":{"name":"self"}}],[11,"uninitialized","","",178,{"inputs":[],"output":{"name":"value"}}],[11,"to_glib_none","","",178,{"inputs":[{"name":"value"}],"output":{"name":"stash"}}],[11,"to_glib_none_mut","","",178,{"inputs":[{"name":"value"}],"output":{"name":"stashmut"}}],[11,"drop","","",179,{"inputs":[{"name":"valuearray"}],"output":null}],[11,"get","","Returns the value.",180,{"inputs":[{"name":"typedvalue"}],"output":{"name":"option"}}],[11,"get_some","","Returns the value.",180,{"inputs":[{"name":"typedvalue"}],"output":{"name":"t"}}],[11,"set","","Sets the value.",180,{"inputs":[{"name":"typedvalue"},{"name":"option"}],"output":null}],[11,"set_none","","Sets the value to `None`.",180,{"inputs":[{"name":"typedvalue"}],"output":null}],[11,"set_some","","Sets the value.",180,{"inputs":[{"name":"typedvalue"},{"name":"u"}],"output":null}],[11,"clone","","",180,{"inputs":[{"name":"typedvalue"}],"output":{"name":"self"}}],[11,"fmt","","",180,{"inputs":[{"name":"typedvalue"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",180,{"inputs":[{"name":"typedvalue"}],"output":{"name":"value"}}],[11,"deref_mut","","",180,{"inputs":[{"name":"typedvalue"}],"output":{"name":"value"}}],[11,"from","","",180,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"from","","",180,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from","","",180,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"from","","",180,{"inputs":[{"name":"str"}],"output":{"name":"self"}}],[11,"to_value","core::option","",159,{"inputs":[{"name":"option"}],"output":{"name":"value"}}],[11,"to_value_type","","",159,{"inputs":[{"name":"option"}],"output":{"name":"type"}}],[11,"to_value","glib::value","",178,{"inputs":[{"name":"value"}],"output":{"name":"value"}}],[11,"to_value_type","","",178,{"inputs":[{"name":"value"}],"output":{"name":"type"}}],[11,"from_value_optional","collections::string","",161,{"inputs":[{"name":"value"}],"output":{"name":"option"}}],[11,"set_value","","",161,{"inputs":[{"name":"value"},{"name":"self"}],"output":null}],[11,"set_value_optional","","",161,{"inputs":[{"name":"value"},{"name":"option"}],"output":null}],[8,"AppInfoExt","glib","",null,null],[14,"glib_wrapper!","","Defines a wrapper type and implements the appropriate traits.",null,null],[14,"glib_boxed_wrapper!","","Wrapper implementations for Boxed types. See `glib_wrapper!`.",null,null],[14,"glib_shared_wrapper!","","Wrapper implementations for shared types. See `glib_wrapper!`.",null,null],[14,"glib_object_wrapper!","","Wrapper implementations for Object types. See `glib_wrapper!`.",null,null]],"paths":[[4,"GBookmarkFileError"],[4,"GChecksumType"],[4,"GConvertError"],[4,"GDateDMY"],[4,"GDateMonth"],[4,"GDateWeekday"],[4,"GErrorType"],[4,"GFileError"],[4,"GIOChannelError"],[4,"GIOError"],[4,"GIOStatus"],[4,"GKeyFileError"],[4,"GMarkupError"],[4,"GNormalizeMode"],[4,"GOnceStatus"],[4,"GOptionArg"],[4,"GOptionError"],[4,"GRegexError"],[4,"GSeekType"],[4,"GShellError"],[4,"GSliceConfig"],[4,"GSpawnError"],[4,"GTestFileType"],[4,"GTestLogType"],[4,"GTimeType"],[4,"GTokenType"],[4,"GTraverseType"],[4,"GUnicodeBreakType"],[4,"GUnicodeScript"],[4,"GUnicodeType"],[4,"GUserDirectory"],[4,"GVariantClass"],[4,"GVariantParseError"],[3,"GAsciiType"],[3,"GFileTest"],[3,"GFormatSizeFlags"],[3,"GHookFlagMask"],[3,"GIOCondition"],[3,"GIOFlags"],[3,"GKeyFileFlags"],[3,"GLogLevelFlags"],[3,"GMarkupCollectType"],[3,"GMarkupParseFlags"],[3,"GOptionFlags"],[3,"GRegexCompileFlags"],[3,"GRegexMatchFlags"],[3,"GSpawnFlags"],[3,"GTestSubprocessFlags"],[3,"GTestTrapFlags"],[3,"GTraverseFlags"],[3,"GTimeVal"],[3,"ApplicationFlags"],[4,"GBusType"],[4,"GConverterResult"],[4,"GCredentialsType"],[4,"GDBusError"],[4,"GDBusMessageByteOrder"],[4,"GDBusMessageHeaderField"],[4,"GDBusMessageType"],[4,"GDataStreamByteOrder"],[4,"GDataStreamNewlineType"],[4,"GDriveStartStopType"],[4,"GEmblemOrigin"],[4,"GFileAttributeStatus"],[4,"GFileAttributeType"],[4,"GFileMonitorEvent"],[4,"GFileType"],[4,"GFilesystemPreviewType"],[4,"GIOErrorEnum"],[4,"GIOModuleScopeFlags"],[4,"GMountOperationResult"],[4,"GNetworkConnectivity"],[4,"GNotificationPriority"],[4,"GPasswordSave"],[4,"GResolverError"],[4,"GResolverRecordType"],[4,"GResourceError"],[4,"GSocketClientEvent"],[4,"GSocketFamily"],[4,"GSocketProtocol"],[4,"GSocketType"],[4,"GTlsAuthenticationMode"],[4,"GTlsDatabaseLookupFlags"],[4,"GTlsError"],[4,"GTlsInteractionResult"],[4,"GTlsRehandshakeMode"],[4,"GUnixSocketAddressType"],[4,"GZlibCompressorFormat"],[3,"GAppInfoCreateFlags"],[3,"GAskPasswordFlags"],[3,"GBusNameOwnerFlags"],[3,"GBusNameWatcherFlags"],[3,"GConverterFlags"],[3,"GDBusCallFlags"],[3,"GDBusCapabilityFlags"],[3,"GDBusConnectionFlags"],[3,"GDBusInterfaceSkeletonFlags"],[3,"GDBusMessageFlags"],[3,"GDBusObjectManagerClientFlags"],[3,"GDBusPropertyInfoFlags"],[3,"GDBusProxyFlags"],[3,"GDBusSendMessageFlags"],[3,"GDBusServerFlags"],[3,"GDBusSignalFlags"],[3,"GDBusSubtreeFlags"],[3,"GDriveStartFlags"],[3,"GFileAttributeInfoFlags"],[3,"GFileCopyFlags"],[3,"GFileCreateFlags"],[3,"GFileMeasureFlags"],[3,"GFileMonitorFlags"],[3,"GFileQueryInfoFlags"],[3,"GIOStreamSpliceFlags"],[3,"GMountMountFlags"],[3,"GMountUnmountFlags"],[3,"GOutputStreamSpliceFlags"],[3,"GResourceFlags"],[3,"GResourceLookupFlags"],[3,"GSettingsBindFlags"],[3,"GSocketMsgFlags"],[3,"GSubprocessFlags"],[3,"GTestDBusFlags"],[3,"GTlsCertificateFlags"],[3,"GTlsDatabaseVerifyFlags"],[3,"GTlsPasswordFlags"],[4,"FileError"],[8,"Wrapper"],[8,"UnsafeFrom"],[8,"BoxedMemoryManager"],[3,"Boxed"],[8,"SharedMemoryManager"],[3,"Shared"],[3,"GBindingFlags"],[3,"GConnectFlags"],[3,"GParamFlags"],[3,"GSignalFlags"],[3,"GSignalMatchType"],[3,"GTypeDebugFlags"],[3,"GTypeFlags"],[3,"GTypeFundamentalFlags"],[8,"Cast"],[8,"Downcast"],[3,"Object"],[3,"AppInfo"],[8,"ErrorDomain"],[3,"Error"],[3,"Continue"],[3,"CallbackGuard"],[8,"Ptr"],[8,"Uninitialized"],[8,"ToBool"],[8,"ToGlib"],[8,"GlibPtrDefault"],[8,"ToGlibPtr"],[8,"ToGlibPtrMut"],[8,"FromGlib"],[8,"FromGlibPtr"],[8,"FromGlibPtrContainer"],[6,"gboolean"],[4,"Option"],[4,"Ordering"],[3,"String"],[3,"Path"],[3,"PtrArray"],[3,"List"],[3,"SList"],[3,"HashMap"],[3,"HashTable"],[3,"PathBuf"],[3,"Vec"],[4,"Type"],[8,"StaticType"],[8,"InstanceType"],[8,"ToValue"],[8,"FromValueOptional"],[8,"FromValue"],[8,"SetValueOptional"],[8,"SetValue"],[3,"Value"],[3,"ValueArray"],[3,"TypedValue"]]};
searchIndex["gdk_pixbuf_sys"] = {"doc":"","items":[[3,"GdkPixdataDumpType","gdk_pixbuf_sys","An enumeration which is used by `Pixdata::to_csource` to\ndetermine the form of C source to be generated. The three values\n`PixdataDumpType::PixdataStream`, `PixdataDumpType::PixdataStruct`\nand `PixdataDumpType::Macros` are mutually exclusive, as are\n`GDK_PIXBUF_DUMP_GTYPES` and `GDK_PIXBUF_DUMP_CTYPES`. The remaining\nelements are optional flags that can be freely added.",null,null],[3,"GdkPixdataType","","An enumeration containing three sets of flags for a `Pixdata` struct:\none for the used colorspace, one for the width of the samples and one\nfor the encoding of the pixel data.",null,null],[3,"GdkPixbufFormat","","",null,null],[3,"GdkPixbufLoaderClass","","",null,null],[12,"parent_class","","",0,null],[12,"size_prepared","","",0,null],[12,"area_prepared","","",0,null],[12,"area_updated","","",0,null],[12,"closed","","",0,null],[3,"GdkPixbufSimpleAnimClass","","",null,null],[3,"GdkPixdata","","",null,null],[12,"magic","","",1,null],[12,"length","","",1,null],[12,"pixdata_type","","",1,null],[12,"rowstride","","",1,null],[12,"width","","",1,null],[12,"height","","",1,null],[12,"pixel_data","","",1,null],[3,"GdkPixbuf","","",null,null],[3,"GdkPixbufAnimation","","",null,null],[3,"GdkPixbufAnimationIter","","",null,null],[3,"GdkPixbufLoader","","",null,null],[3,"GdkPixbufSimpleAnim","","",null,null],[3,"GdkPixbufSimpleAnimIter","","",null,null],[4,"GdkInterpType","","This enumeration describes the different interpolation modes that\ncan be used with the scaling functions. `InterpType::Nearest` is\nthe fastest scaling method, but has horrible quality when\nscaling down. `InterpType::Bilinear` is the best choice if you\naren&#39;t sure what to choose, it has a good speed/quality balance.",null,null],[13,"Nearest","","Nearest neighbor sampling; this is the fastest\nand lowest quality mode. Quality is normally unacceptable when scaling\ndown, but may be OK when scaling up.",2,null],[13,"Tiles","","This is an accurate simulation of the PostScript\nimage operator without any interpolation enabled. Each pixel is\nrendered as a tiny parallelogram of solid color, the edges of which\nare implemented with antialiasing. It resembles nearest neighbor for\nenlargement, and bilinear for reduction.",2,null],[13,"Bilinear","","Best quality/speed balance; use this mode by\ndefault. Bilinear interpolation. For enlargement, it is\nequivalent to point-sampling the ideal bilinear-interpolated image.\nFor reduction, it is equivalent to laying down small tiles and\nintegrating over the coverage area.",2,null],[13,"Hyper","","This is the slowest and highest quality\nreconstruction function. It is derived from the hyperbolic filters in\nWolberg&#39;s &quot;Digital Image Warping&quot;, and is formally defined as the\nhyperbolic-filter sampling the ideal hyperbolic-filter interpolated\nimage (the filter is designed to be idempotent for 1:1 pixel mapping).",2,null],[4,"GdkPixbufAlphaMode","","These values can be passed to\n`gdk_pixbuf_render_to_drawable_alpha` to control how the alpha\nchannel of an image should be handled. This function can create a\nbilevel clipping mask (black and white) and use it while painting\nthe image. In the future, when the X Window System gets an alpha\nchannel extension, it will be possible to do full alpha\ncompositing onto arbitrary drawables. For now both cases fall\nback to a bilevel clipping mask.",null,null],[13,"Bilevel","","A bilevel clipping mask (black and white)\nwill be created and used to draw the image. Pixels below 0.5 opacity\nwill be considered fully transparent, and all others will be\nconsidered fully opaque.",3,null],[13,"Full","","For now falls back to `PixbufAlphaMode::Bilevel`.\nIn the future it will do full alpha compositing.",3,null],[4,"GdkPixbufError","","An error code in the `GDK_PIXBUF_ERROR` domain. Many gdk-pixbuf\noperations can cause errors in this domain, or in the `G_FILE_ERROR`\ndomain.",null,null],[13,"CorruptImage","","An image file was broken somehow.",4,null],[13,"InsufficientMemory","","Not enough memory.",4,null],[13,"BadOption","","A bad option was passed to a pixbuf save module.",4,null],[13,"UnknownType","","Unknown image type.",4,null],[13,"UnsupportedOperation","","Don&#39;t know how to perform the\ngiven operation on the type of image at hand.",4,null],[13,"Failed","","Generic failure code, something went wrong.",4,null],[4,"GdkPixbufRotation","","The possible rotations which can be passed to `Pixbuf::rotate_simple`.\nTo make them easier to use, their numerical values are the actual degrees.",null,null],[13,"None","","No rotation.",5,null],[13,"Counterclockwise","","Rotate by 90 degrees.",5,null],[13,"Upsidedown","","Rotate by 180 degrees.",5,null],[13,"Clockwise","","Rotate by 270 degrees.",5,null],[5,"gdk_pixbuf_error_quark","","",null,null],[5,"gdk_pixbuf_format_get_type","","",null,null],[5,"gdk_pixbuf_format_copy","","",null,null],[5,"gdk_pixbuf_format_free","","",null,null],[5,"gdk_pixbuf_format_get_description","","",null,null],[5,"gdk_pixbuf_format_get_extensions","","",null,null],[5,"gdk_pixbuf_format_get_license","","",null,null],[5,"gdk_pixbuf_format_get_mime_types","","",null,null],[5,"gdk_pixbuf_format_get_name","","",null,null],[5,"gdk_pixbuf_format_is_disabled","","",null,null],[5,"gdk_pixbuf_format_is_scalable","","",null,null],[5,"gdk_pixbuf_format_is_writable","","",null,null],[5,"gdk_pixbuf_format_set_disabled","","",null,null],[5,"gdk_pixdata_deserialize","","",null,null],[5,"gdk_pixdata_from_pixbuf","","",null,null],[5,"gdk_pixdata_serialize","","",null,null],[5,"gdk_pixdata_to_csource","","",null,null],[5,"gdk_pixbuf_get_type","","",null,null],[5,"gdk_pixbuf_new","","",null,null],[5,"gdk_pixbuf_new_from_data","","",null,null],[5,"gdk_pixbuf_new_from_file","","",null,null],[5,"gdk_pixbuf_new_from_file_at_scale","","",null,null],[5,"gdk_pixbuf_new_from_file_at_size","","",null,null],[5,"gdk_pixbuf_new_from_inline","","",null,null],[5,"gdk_pixbuf_new_from_resource","","",null,null],[5,"gdk_pixbuf_new_from_resource_at_scale","","",null,null],[5,"gdk_pixbuf_new_from_stream","","",null,null],[5,"gdk_pixbuf_new_from_stream_at_scale","","",null,null],[5,"gdk_pixbuf_new_from_stream_finish","","",null,null],[5,"gdk_pixbuf_new_from_xpm_data","","",null,null],[5,"gdk_pixbuf_from_pixdata","","",null,null],[5,"gdk_pixbuf_get_file_info","","",null,null],[5,"gdk_pixbuf_get_formats","","",null,null],[5,"gdk_pixbuf_new_from_stream_async","","",null,null],[5,"gdk_pixbuf_new_from_stream_at_scale_async","","",null,null],[5,"gdk_pixbuf_save_to_stream_finish","","",null,null],[5,"gdk_pixbuf_add_alpha","","",null,null],[5,"gdk_pixbuf_apply_embedded_orientation","","",null,null],[5,"gdk_pixbuf_composite","","",null,null],[5,"gdk_pixbuf_composite_color","","",null,null],[5,"gdk_pixbuf_composite_color_simple","","",null,null],[5,"gdk_pixbuf_copy","","",null,null],[5,"gdk_pixbuf_copy_area","","",null,null],[5,"gdk_pixbuf_fill","","",null,null],[5,"gdk_pixbuf_flip","","",null,null],[5,"gdk_pixbuf_get_bits_per_sample","","",null,null],[5,"gdk_pixbuf_get_byte_length","","",null,null],[5,"gdk_pixbuf_get_colorspace","","",null,null],[5,"gdk_pixbuf_get_has_alpha","","",null,null],[5,"gdk_pixbuf_get_height","","",null,null],[5,"gdk_pixbuf_get_n_channels","","",null,null],[5,"gdk_pixbuf_get_option","","",null,null],[5,"gdk_pixbuf_get_pixels","","",null,null],[5,"gdk_pixbuf_get_pixels_with_length","","",null,null],[5,"gdk_pixbuf_get_rowstride","","",null,null],[5,"gdk_pixbuf_get_width","","",null,null],[5,"gdk_pixbuf_new_subpixbuf","","",null,null],[5,"gdk_pixbuf_ref","","",null,null],[5,"gdk_pixbuf_rotate_simple","","",null,null],[5,"gdk_pixbuf_saturate_and_pixelate","","",null,null],[5,"gdk_pixbuf_save","","",null,null],[5,"gdk_pixbuf_save_to_buffer","","",null,null],[5,"gdk_pixbuf_save_to_bufferv","","",null,null],[5,"gdk_pixbuf_save_to_callback","","",null,null],[5,"gdk_pixbuf_save_to_callbackv","","",null,null],[5,"gdk_pixbuf_save_to_stream","","",null,null],[5,"gdk_pixbuf_save_to_stream_async","","",null,null],[5,"gdk_pixbuf_savev","","",null,null],[5,"gdk_pixbuf_scale","","",null,null],[5,"gdk_pixbuf_scale_simple","","",null,null],[5,"gdk_pixbuf_unref","","",null,null],[5,"gdk_pixbuf_animation_get_type","","",null,null],[5,"gdk_pixbuf_animation_new_from_file","","",null,null],[5,"gdk_pixbuf_animation_new_from_resource","","",null,null],[5,"gdk_pixbuf_animation_new_from_stream","","",null,null],[5,"gdk_pixbuf_animation_new_from_stream_finish","","",null,null],[5,"gdk_pixbuf_animation_new_from_stream_async","","",null,null],[5,"gdk_pixbuf_animation_get_height","","",null,null],[5,"gdk_pixbuf_animation_get_iter","","",null,null],[5,"gdk_pixbuf_animation_get_static_image","","",null,null],[5,"gdk_pixbuf_animation_get_width","","",null,null],[5,"gdk_pixbuf_animation_is_static_image","","",null,null],[5,"gdk_pixbuf_animation_ref","","",null,null],[5,"gdk_pixbuf_animation_unref","","",null,null],[5,"gdk_pixbuf_animation_iter_get_type","","",null,null],[5,"gdk_pixbuf_animation_iter_advance","","",null,null],[5,"gdk_pixbuf_animation_iter_get_delay_time","","",null,null],[5,"gdk_pixbuf_animation_iter_get_pixbuf","","",null,null],[5,"gdk_pixbuf_animation_iter_on_currently_loading_frame","","",null,null],[5,"gdk_pixbuf_loader_get_type","","",null,null],[5,"gdk_pixbuf_loader_new","","",null,null],[5,"gdk_pixbuf_loader_new_with_mime_type","","",null,null],[5,"gdk_pixbuf_loader_new_with_type","","",null,null],[5,"gdk_pixbuf_loader_close","","",null,null],[5,"gdk_pixbuf_loader_get_animation","","",null,null],[5,"gdk_pixbuf_loader_get_format","","",null,null],[5,"gdk_pixbuf_loader_get_pixbuf","","",null,null],[5,"gdk_pixbuf_loader_set_size","","",null,null],[5,"gdk_pixbuf_loader_write","","",null,null],[5,"gdk_pixbuf_loader_write_bytes","","",null,null],[5,"gdk_pixbuf_simple_anim_get_type","","",null,null],[5,"gdk_pixbuf_simple_anim_new","","",null,null],[5,"gdk_pixbuf_simple_anim_add_frame","","",null,null],[5,"gdk_pixbuf_simple_anim_get_loop","","",null,null],[5,"gdk_pixbuf_simple_anim_set_loop","","",null,null],[5,"gdk_pixbuf_simple_anim_iter_get_type","","",null,null],[6,"Colorspace","","",null,null],[6,"GdkColorspace","","",null,null],[6,"GdkPixbufDestroyNotify","","",null,null],[6,"GdkPixbufSaveFunc","","",null,null],[17,"GDK_COLORSPACE_RGB","","",null,null],[17,"GDK_INTERP_NEAREST","","",null,null],[17,"GDK_INTERP_TILES","","",null,null],[17,"GDK_INTERP_BILINEAR","","",null,null],[17,"GDK_INTERP_HYPER","","",null,null],[17,"GDK_PIXBUF_ALPHA_BILEVEL","","",null,null],[17,"GDK_PIXBUF_ALPHA_FULL","","",null,null],[17,"GDK_PIXBUF_ERROR_CORRUPT_IMAGE","","",null,null],[17,"GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY","","",null,null],[17,"GDK_PIXBUF_ERROR_BAD_OPTION","","",null,null],[17,"GDK_PIXBUF_ERROR_UNKNOWN_TYPE","","",null,null],[17,"GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION","","",null,null],[17,"GDK_PIXBUF_ERROR_FAILED","","",null,null],[17,"GDK_PIXBUF_ROTATE_NONE","","",null,null],[17,"GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE","","",null,null],[17,"GDK_PIXBUF_ROTATE_UPSIDEDOWN","","",null,null],[17,"GDK_PIXBUF_ROTATE_CLOCKWISE","","",null,null],[17,"GDK_PIXBUF_FEATURES_H","","",null,null],[17,"GDK_PIXBUF_MAGIC_NUMBER","","",null,null],[17,"GDK_PIXBUF_MAJOR","","",null,null],[17,"GDK_PIXBUF_MICRO","","",null,null],[17,"GDK_PIXBUF_MINOR","","",null,null],[17,"GDK_PIXBUF_VERSION","","",null,null],[17,"GDK_PIXDATA_HEADER_LENGTH","","",null,null],[17,"GDK_PIXDATA_DUMP_PIXDATA_STREAM","","Generate pixbuf data stream (a single\nstring containing a serialized `Pixdata` structure in network byte\norder).",null,null],[17,"GDK_PIXDATA_DUMP_PIXDATA_STRUCT","","Generate `Pixdata` structure (needs\nthe `Pixdata` structure definition from gdk-pixdata.h).",null,null],[17,"GDK_PIXDATA_DUMP_MACROS","","Generate `&lt;function&gt;`*_ROWSTRIDE`&lt;/function&gt;`,\n`&lt;function&gt;`*_WIDTH`&lt;/function&gt;`, `&lt;function&gt;`*_HEIGHT`&lt;/function&gt;`,\n`&lt;function&gt;`*_BYTES_PER_PIXEL`&lt;/function&gt;` and\n`&lt;function&gt;`*_RLE_PIXEL_DATA`&lt;/function&gt;` or `&lt;function&gt;`*_PIXEL_DATA`&lt;/function&gt;`\nmacro definitions for the image.",null,null],[17,"GDK_PIXDATA_DUMP_GTYPES","","Generate GLib data types instead of\nstandard C data types.",null,null],[17,"GDK_PIXDATA_DUMP_CTYPES","","Generate standard C data types instead of\nGLib data types.",null,null],[17,"GDK_PIXDATA_DUMP_STATIC","","Generate static symbols.",null,null],[17,"GDK_PIXDATA_DUMP_CONST","","Generate const symbols.",null,null],[17,"GDK_PIXDATA_DUMP_RLE_DECODER","","Provide a `&lt;function&gt;`*_RUN_LENGTH_DECODE(image_buf, rle_data, size, bpp)`&lt;/function&gt;`\nmacro definition to decode run-length encoded image data.",null,null],[17,"GDK_PIXDATA_COLOR_TYPE_RGB","","each pixel has red, green and blue samples.",null,null],[17,"GDK_PIXDATA_COLOR_TYPE_RGBA","","each pixel has red, green and blue samples\nand an alpha value.",null,null],[17,"GDK_PIXDATA_COLOR_TYPE_MASK","","mask for the colortype flags of the enum.",null,null],[17,"GDK_PIXDATA_SAMPLE_WIDTH_8","","each sample has 8 bits.",null,null],[17,"GDK_PIXDATA_SAMPLE_WIDTH_MASK","","mask for the sample width flags of the enum.",null,null],[17,"GDK_PIXDATA_ENCODING_RAW","","the pixel data is in raw form.",null,null],[17,"GDK_PIXDATA_ENCODING_RLE","","the pixel data is run-length encoded. Runs may\nbe up to 127 bytes long; their length is stored in a single byte\npreceding the pixel data for the run. If a run is constant, its length\nbyte has the high bit set and the pixel data consists of a single pixel\nwhich must be repeated.",null,null],[17,"GDK_PIXDATA_ENCODING_MASK","","mask for the encoding flags of the enum.",null,null],[11,"eq","","",2,{"inputs":[{"name":"gdkinterptype"},{"name":"gdkinterptype"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"gdkinterptype"},{"name":"gdkinterptype"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"gdkinterptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"gdkinterptype"}],"output":{"name":"gdkinterptype"}}],[11,"eq","","",3,{"inputs":[{"name":"gdkpixbufalphamode"},{"name":"gdkpixbufalphamode"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"gdkpixbufalphamode"},{"name":"gdkpixbufalphamode"}],"output":{"name":"bool"}}],[11,"fmt","","",3,{"inputs":[{"name":"gdkpixbufalphamode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",3,{"inputs":[{"name":"gdkpixbufalphamode"}],"output":{"name":"gdkpixbufalphamode"}}],[11,"eq","","",4,{"inputs":[{"name":"gdkpixbuferror"},{"name":"gdkpixbuferror"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"gdkpixbuferror"},{"name":"gdkpixbuferror"}],"output":{"name":"bool"}}],[11,"fmt","","",4,{"inputs":[{"name":"gdkpixbuferror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",4,{"inputs":[{"name":"gdkpixbuferror"}],"output":{"name":"gdkpixbuferror"}}],[11,"eq","","",5,{"inputs":[{"name":"gdkpixbufrotation"},{"name":"gdkpixbufrotation"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"gdkpixbufrotation"},{"name":"gdkpixbufrotation"}],"output":{"name":"bool"}}],[11,"fmt","","",5,{"inputs":[{"name":"gdkpixbufrotation"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"gdkpixbufrotation"}],"output":{"name":"gdkpixbufrotation"}}],[11,"hash","","",6,null],[11,"cmp","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"option"}}],[11,"lt","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"le","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"gt","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"ge","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"clone","","",6,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"eq","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",6,{"inputs":[],"output":{"name":"gdkpixdatadumptype"}}],[11,"all","","Returns the set containing all flags.",6,{"inputs":[],"output":{"name":"gdkpixdatadumptype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",6,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",6,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",6,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",6,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",6,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",6,{"inputs":[{"name":"gdkpixdatadumptype"},{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"not","","Returns the complement of this set of flags.",6,{"inputs":[{"name":"gdkpixdatadumptype"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"from_iter","","",6,{"inputs":[{"name":"t"}],"output":{"name":"gdkpixdatadumptype"}}],[11,"hash","","",7,null],[11,"cmp","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"option"}}],[11,"lt","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"le","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"gt","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"ge","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"clone","","",7,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"eq","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",7,{"inputs":[],"output":{"name":"gdkpixdatatype"}}],[11,"all","","Returns the set containing all flags.",7,{"inputs":[],"output":{"name":"gdkpixdatatype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",7,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",7,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",7,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdkpixdatatype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",7,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",7,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",7,{"inputs":[{"name":"gdkpixdatatype"},{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"not","","Returns the complement of this set of flags.",7,{"inputs":[{"name":"gdkpixdatatype"}],"output":{"name":"gdkpixdatatype"}}],[11,"from_iter","","",7,{"inputs":[{"name":"t"}],"output":{"name":"gdkpixdatatype"}}]],"paths":[[3,"GdkPixbufLoaderClass"],[3,"GdkPixdata"],[4,"GdkInterpType"],[4,"GdkPixbufAlphaMode"],[4,"GdkPixbufError"],[4,"GdkPixbufRotation"],[3,"GdkPixdataDumpType"],[3,"GdkPixdataType"]]};
searchIndex["gio_sys"] = {"doc":"","items":[[3,"GAppInfoCreateFlags","gio_sys","",null,null],[3,"GApplicationFlags","","",null,null],[3,"GAskPasswordFlags","","",null,null],[3,"GBusNameOwnerFlags","","",null,null],[3,"GBusNameWatcherFlags","","",null,null],[3,"GConverterFlags","","",null,null],[3,"GDBusCallFlags","","",null,null],[3,"GDBusCapabilityFlags","","",null,null],[3,"GDBusConnectionFlags","","",null,null],[3,"GDBusInterfaceSkeletonFlags","","",null,null],[3,"GDBusMessageFlags","","",null,null],[3,"GDBusObjectManagerClientFlags","","",null,null],[3,"GDBusPropertyInfoFlags","","",null,null],[3,"GDBusProxyFlags","","",null,null],[3,"GDBusSendMessageFlags","","",null,null],[3,"GDBusServerFlags","","",null,null],[3,"GDBusSignalFlags","","",null,null],[3,"GDBusSubtreeFlags","","",null,null],[3,"GDriveStartFlags","","",null,null],[3,"GFileAttributeInfoFlags","","",null,null],[3,"GFileCopyFlags","","",null,null],[3,"GFileCreateFlags","","",null,null],[3,"GFileMeasureFlags","","",null,null],[3,"GFileMonitorFlags","","",null,null],[3,"GFileQueryInfoFlags","","",null,null],[3,"GIOStreamSpliceFlags","","",null,null],[3,"GMountMountFlags","","",null,null],[3,"GMountUnmountFlags","","",null,null],[3,"GOutputStreamSpliceFlags","","",null,null],[3,"GResourceFlags","","",null,null],[3,"GResourceLookupFlags","","",null,null],[3,"GSettingsBindFlags","","",null,null],[3,"GSocketMsgFlags","","",null,null],[3,"GSubprocessFlags","","",null,null],[3,"GTestDBusFlags","","",null,null],[3,"GTlsCertificateFlags","","",null,null],[3,"GTlsDatabaseVerifyFlags","","",null,null],[3,"GTlsPasswordFlags","","",null,null],[3,"GActionEntry","","",null,null],[12,"name","","",0,null],[12,"activate","","",0,null],[12,"parameter_type","","",0,null],[12,"state","","",0,null],[12,"change_state","","",0,null],[3,"GActionGroupInterface","","",null,null],[12,"g_iface","","",1,null],[12,"has_action","","",1,null],[12,"list_actions","","",1,null],[12,"get_action_enabled","","",1,null],[12,"get_action_parameter_type","","",1,null],[12,"get_action_state_type","","",1,null],[12,"get_action_state_hint","","",1,null],[12,"get_action_state","","",1,null],[12,"change_action_state","","",1,null],[12,"activate_action","","",1,null],[12,"action_added","","",1,null],[12,"action_removed","","",1,null],[12,"action_enabled_changed","","",1,null],[12,"action_state_changed","","",1,null],[12,"query_action","","",1,null],[3,"GActionInterface","","",null,null],[12,"g_iface","","",2,null],[12,"get_name","","",2,null],[12,"get_parameter_type","","",2,null],[12,"get_state_type","","",2,null],[12,"get_state_hint","","",2,null],[12,"get_enabled","","",2,null],[12,"get_state","","",2,null],[12,"change_state","","",2,null],[12,"activate","","",2,null],[3,"GActionMapInterface","","",null,null],[12,"g_iface","","",3,null],[12,"lookup_action","","",3,null],[12,"add_action","","",3,null],[12,"remove_action","","",3,null],[3,"GAppInfoIface","","",null,null],[12,"g_iface","","",4,null],[12,"dup","","",4,null],[12,"equal","","",4,null],[12,"get_id","","",4,null],[12,"get_name","","",4,null],[12,"get_description","","",4,null],[12,"get_executable","","",4,null],[12,"get_icon","","",4,null],[12,"launch","","",4,null],[12,"supports_uris","","",4,null],[12,"supports_files","","",4,null],[12,"launch_uris","","",4,null],[12,"should_show","","",4,null],[12,"set_as_default_for_type","","",4,null],[12,"set_as_default_for_extension","","",4,null],[12,"add_supports_type","","",4,null],[12,"can_remove_supports_type","","",4,null],[12,"remove_supports_type","","",4,null],[12,"can_delete","","",4,null],[12,"do_delete","","",4,null],[12,"get_commandline","","",4,null],[12,"get_display_name","","",4,null],[12,"set_as_last_used_for_type","","",4,null],[12,"get_supported_types","","",4,null],[3,"GAppLaunchContextClass","","",null,null],[12,"parent_class","","",5,null],[12,"get_display","","",5,null],[12,"get_startup_notify_id","","",5,null],[12,"launch_failed","","",5,null],[12,"launched","","",5,null],[12,"_g_reserved1","","",5,null],[12,"_g_reserved2","","",5,null],[12,"_g_reserved3","","",5,null],[12,"_g_reserved4","","",5,null],[3,"GAppLaunchContextPrivate","","",null,null],[3,"GApplicationClass","","",null,null],[12,"startup","","",6,null],[12,"activate","","",6,null],[12,"open","","",6,null],[12,"command_line","","",6,null],[12,"local_command_line","","",6,null],[12,"before_emit","","",6,null],[12,"after_emit","","",6,null],[12,"add_platform_data","","",6,null],[12,"quit_mainloop","","",6,null],[12,"run_mainloop","","",6,null],[12,"shutdown","","",6,null],[12,"dbus_register","","",6,null],[12,"dbus_unregister","","",6,null],[12,"handle_local_options","","",6,null],[3,"GApplicationCommandLineClass","","",null,null],[12,"print_literal","","",7,null],[12,"printerr_literal","","",7,null],[12,"get_stdin","","",7,null],[3,"GApplicationCommandLinePrivate","","",null,null],[3,"GApplicationPrivate","","",null,null],[3,"GAsyncInitableIface","","",null,null],[12,"g_iface","","",8,null],[12,"init_async","","",8,null],[12,"init_finish","","",8,null],[3,"GAsyncResultIface","","",null,null],[12,"g_iface","","",9,null],[12,"get_user_data","","",9,null],[12,"get_source_object","","",9,null],[12,"is_tagged","","",9,null],[3,"GBufferedInputStreamClass","","",null,null],[12,"parent_class","","",10,null],[12,"fill","","",10,null],[12,"fill_async","","",10,null],[12,"fill_finish","","",10,null],[12,"_g_reserved1","","",10,null],[12,"_g_reserved2","","",10,null],[12,"_g_reserved3","","",10,null],[12,"_g_reserved4","","",10,null],[12,"_g_reserved5","","",10,null],[3,"GBufferedInputStreamPrivate","","",null,null],[3,"GBufferedOutputStreamClass","","",null,null],[12,"parent_class","","",11,null],[12,"_g_reserved1","","",11,null],[12,"_g_reserved2","","",11,null],[3,"GBufferedOutputStreamPrivate","","",null,null],[3,"GCancellableClass","","",null,null],[12,"parent_class","","",12,null],[12,"cancelled","","",12,null],[12,"_g_reserved1","","",12,null],[12,"_g_reserved2","","",12,null],[12,"_g_reserved3","","",12,null],[12,"_g_reserved4","","",12,null],[12,"_g_reserved5","","",12,null],[3,"GCancellablePrivate","","",null,null],[3,"GCharsetConverterClass","","",null,null],[12,"parent_class","","",13,null],[3,"GConverterIface","","",null,null],[12,"g_iface","","",14,null],[12,"convert","","",14,null],[12,"reset","","",14,null],[3,"GConverterInputStreamClass","","",null,null],[12,"parent_class","","",15,null],[12,"_g_reserved1","","",15,null],[12,"_g_reserved2","","",15,null],[12,"_g_reserved3","","",15,null],[12,"_g_reserved4","","",15,null],[12,"_g_reserved5","","",15,null],[3,"GConverterInputStreamPrivate","","",null,null],[3,"GConverterOutputStreamClass","","",null,null],[12,"parent_class","","",16,null],[12,"_g_reserved1","","",16,null],[12,"_g_reserved2","","",16,null],[12,"_g_reserved3","","",16,null],[12,"_g_reserved4","","",16,null],[12,"_g_reserved5","","",16,null],[3,"GConverterOutputStreamPrivate","","",null,null],[3,"GCredentialsClass","","",null,null],[3,"GDBusAnnotationInfo","","",null,null],[12,"ref_count","","",17,null],[12,"key","","",17,null],[12,"value","","",17,null],[12,"annotations","","",17,null],[3,"GDBusArgInfo","","",null,null],[12,"ref_count","","",18,null],[12,"name","","",18,null],[12,"signature","","",18,null],[12,"annotations","","",18,null],[3,"GDBusErrorEntry","","",null,null],[12,"error_code","","",19,null],[12,"dbus_error_name","","",19,null],[3,"GDBusInterfaceIface","","",null,null],[12,"parent_iface","","",20,null],[12,"get_info","","",20,null],[12,"get_object","","",20,null],[12,"set_object","","",20,null],[12,"dup_object","","",20,null],[3,"GDBusInterfaceInfo","","",null,null],[12,"ref_count","","",21,null],[12,"name","","",21,null],[12,"methods","","",21,null],[12,"signals","","",21,null],[12,"properties","","",21,null],[12,"annotations","","",21,null],[3,"GDBusInterfaceSkeletonClass","","",null,null],[12,"parent_class","","",22,null],[12,"get_info","","",22,null],[12,"get_vtable","","",22,null],[12,"get_properties","","",22,null],[12,"flush","","",22,null],[12,"g_authorize_method","","",22,null],[3,"GDBusInterfaceSkeletonPrivate","","",null,null],[3,"GDBusInterfaceVTable","","",null,null],[12,"method_call","","",23,null],[12,"get_property","","",23,null],[12,"set_property","","",23,null],[3,"GDBusMethodInfo","","",null,null],[12,"ref_count","","",24,null],[12,"name","","",24,null],[12,"in_args","","",24,null],[12,"out_args","","",24,null],[12,"annotations","","",24,null],[3,"GDBusNodeInfo","","",null,null],[12,"ref_count","","",25,null],[12,"path","","",25,null],[12,"interfaces","","",25,null],[12,"nodes","","",25,null],[12,"annotations","","",25,null],[3,"GDBusObjectIface","","",null,null],[12,"parent_iface","","",26,null],[12,"get_object_path","","",26,null],[12,"get_interfaces","","",26,null],[12,"get_interface","","",26,null],[12,"interface_added","","",26,null],[12,"interface_removed","","",26,null],[3,"GDBusObjectManagerClientClass","","",null,null],[12,"parent_class","","",27,null],[12,"interface_proxy_signal","","",27,null],[12,"interface_proxy_properties_changed","","",27,null],[3,"GDBusObjectManagerClientPrivate","","",null,null],[3,"GDBusObjectManagerIface","","",null,null],[12,"parent_iface","","",28,null],[12,"get_object_path","","",28,null],[12,"get_objects","","",28,null],[12,"get_object","","",28,null],[12,"get_interface","","",28,null],[12,"object_added","","",28,null],[12,"object_removed","","",28,null],[12,"interface_added","","",28,null],[12,"interface_removed","","",28,null],[3,"GDBusObjectManagerServerClass","","",null,null],[12,"parent_class","","",29,null],[3,"GDBusObjectManagerServerPrivate","","",null,null],[3,"GDBusObjectProxyClass","","",null,null],[12,"parent_class","","",30,null],[3,"GDBusObjectProxyPrivate","","",null,null],[3,"GDBusObjectSkeletonClass","","",null,null],[12,"parent_class","","",31,null],[12,"authorize_method","","",31,null],[3,"GDBusObjectSkeletonPrivate","","",null,null],[3,"GDBusPropertyInfo","","",null,null],[12,"ref_count","","",32,null],[12,"name","","",32,null],[12,"signature","","",32,null],[12,"flags","","",32,null],[12,"annotations","","",32,null],[3,"GDBusProxyClass","","",null,null],[12,"g_properties_changed","","",33,null],[12,"g_signal","","",33,null],[3,"GDBusProxyPrivate","","",null,null],[3,"GDBusSignalInfo","","",null,null],[12,"ref_count","","",34,null],[12,"name","","",34,null],[12,"args","","",34,null],[12,"annotations","","",34,null],[3,"GDBusSubtreeVTable","","",null,null],[12,"enumerate","","",35,null],[12,"introspect","","",35,null],[12,"dispatch","","",35,null],[3,"GDataInputStreamClass","","",null,null],[12,"parent_class","","",36,null],[12,"_g_reserved1","","",36,null],[12,"_g_reserved2","","",36,null],[12,"_g_reserved3","","",36,null],[12,"_g_reserved4","","",36,null],[12,"_g_reserved5","","",36,null],[3,"GDataInputStreamPrivate","","",null,null],[3,"GDataOutputStreamClass","","",null,null],[12,"parent_class","","",37,null],[12,"_g_reserved1","","",37,null],[12,"_g_reserved2","","",37,null],[12,"_g_reserved3","","",37,null],[12,"_g_reserved4","","",37,null],[12,"_g_reserved5","","",37,null],[3,"GDataOutputStreamPrivate","","",null,null],[3,"GDesktopAppInfoClass","","",null,null],[12,"parent_class","","",38,null],[3,"GDesktopAppInfoLookupIface","","",null,null],[12,"g_iface","","",39,null],[12,"get_default_for_uri_scheme","","",39,null],[3,"GDriveIface","","",null,null],[12,"g_iface","","",40,null],[12,"changed","","",40,null],[12,"disconnected","","",40,null],[12,"eject_button","","",40,null],[12,"get_name","","",40,null],[12,"get_icon","","",40,null],[12,"has_volumes","","",40,null],[12,"get_volumes","","",40,null],[12,"is_media_removable","","",40,null],[12,"has_media","","",40,null],[12,"is_media_check_automatic","","",40,null],[12,"can_eject","","",40,null],[12,"can_poll_for_media","","",40,null],[12,"eject","","",40,null],[12,"eject_finish","","",40,null],[12,"poll_for_media","","",40,null],[12,"poll_for_media_finish","","",40,null],[12,"get_identifier","","",40,null],[12,"enumerate_identifiers","","",40,null],[12,"get_start_stop_type","","",40,null],[12,"can_start","","",40,null],[12,"can_start_degraded","","",40,null],[12,"start","","",40,null],[12,"start_finish","","",40,null],[12,"can_stop","","",40,null],[12,"stop","","",40,null],[12,"stop_finish","","",40,null],[12,"stop_button","","",40,null],[12,"eject_with_operation","","",40,null],[12,"eject_with_operation_finish","","",40,null],[12,"get_sort_key","","",40,null],[12,"get_symbolic_icon","","",40,null],[3,"GEmblemClass","","",null,null],[3,"GEmblemedIconClass","","",null,null],[12,"parent_class","","",41,null],[3,"GEmblemedIconPrivate","","",null,null],[3,"GFileAttributeInfo","","",null,null],[12,"name","","",42,null],[12,"type_","","",42,null],[12,"flags","","",42,null],[3,"GFileAttributeInfoList","","",null,null],[12,"infos","","",43,null],[12,"n_infos","","",43,null],[3,"GFileAttributeMatcher","","",null,null],[3,"GFileDescriptorBasedIface","","",null,null],[12,"g_iface","","",44,null],[12,"get_fd","","",44,null],[3,"GFileEnumeratorClass","","",null,null],[12,"parent_class","","",45,null],[12,"next_file","","",45,null],[12,"close_fn","","",45,null],[12,"next_files_async","","",45,null],[12,"next_files_finish","","",45,null],[12,"close_async","","",45,null],[12,"close_finish","","",45,null],[12,"_g_reserved1","","",45,null],[12,"_g_reserved2","","",45,null],[12,"_g_reserved3","","",45,null],[12,"_g_reserved4","","",45,null],[12,"_g_reserved5","","",45,null],[12,"_g_reserved6","","",45,null],[12,"_g_reserved7","","",45,null],[3,"GFileEnumeratorPrivate","","",null,null],[3,"GFileIOStreamClass","","",null,null],[12,"parent_class","","",46,null],[12,"tell","","",46,null],[12,"can_seek","","",46,null],[12,"seek","","",46,null],[12,"can_truncate","","",46,null],[12,"truncate_fn","","",46,null],[12,"query_info","","",46,null],[12,"query_info_async","","",46,null],[12,"query_info_finish","","",46,null],[12,"get_etag","","",46,null],[12,"_g_reserved1","","",46,null],[12,"_g_reserved2","","",46,null],[12,"_g_reserved3","","",46,null],[12,"_g_reserved4","","",46,null],[12,"_g_reserved5","","",46,null],[3,"GFileIOStreamPrivate","","",null,null],[3,"GFileIconClass","","",null,null],[3,"GFileIface","","",null,null],[12,"g_iface","","",47,null],[12,"dup","","",47,null],[12,"hash","","",47,null],[12,"equal","","",47,null],[12,"is_native","","",47,null],[12,"has_uri_scheme","","",47,null],[12,"get_uri_scheme","","",47,null],[12,"get_basename","","",47,null],[12,"get_path","","",47,null],[12,"get_uri","","",47,null],[12,"get_parse_name","","",47,null],[12,"get_parent","","",47,null],[12,"prefix_matches","","",47,null],[12,"get_relative_path","","",47,null],[12,"resolve_relative_path","","",47,null],[12,"get_child_for_display_name","","",47,null],[12,"enumerate_children","","",47,null],[12,"enumerate_children_async","","",47,null],[12,"enumerate_children_finish","","",47,null],[12,"query_info","","",47,null],[12,"query_info_async","","",47,null],[12,"query_info_finish","","",47,null],[12,"query_filesystem_info","","",47,null],[12,"query_filesystem_info_async","","",47,null],[12,"query_filesystem_info_finish","","",47,null],[12,"find_enclosing_mount","","",47,null],[12,"find_enclosing_mount_async","","",47,null],[12,"find_enclosing_mount_finish","","",47,null],[12,"set_display_name","","",47,null],[12,"set_display_name_async","","",47,null],[12,"set_display_name_finish","","",47,null],[12,"query_settable_attributes","","",47,null],[12,"_query_settable_attributes_async","","",47,null],[12,"_query_settable_attributes_finish","","",47,null],[12,"query_writable_namespaces","","",47,null],[12,"_query_writable_namespaces_async","","",47,null],[12,"_query_writable_namespaces_finish","","",47,null],[12,"set_attribute","","",47,null],[12,"set_attributes_from_info","","",47,null],[12,"set_attributes_async","","",47,null],[12,"set_attributes_finish","","",47,null],[12,"read_fn","","",47,null],[12,"read_async","","",47,null],[12,"read_finish","","",47,null],[12,"append_to","","",47,null],[12,"append_to_async","","",47,null],[12,"append_to_finish","","",47,null],[12,"create","","",47,null],[12,"create_async","","",47,null],[12,"create_finish","","",47,null],[12,"replace","","",47,null],[12,"replace_async","","",47,null],[12,"replace_finish","","",47,null],[12,"delete_file","","",47,null],[12,"delete_file_async","","",47,null],[12,"delete_file_finish","","",47,null],[12,"trash","","",47,null],[12,"trash_async","","",47,null],[12,"trash_finish","","",47,null],[12,"make_directory","","",47,null],[12,"make_directory_async","","",47,null],[12,"make_directory_finish","","",47,null],[12,"make_symbolic_link","","",47,null],[12,"_make_symbolic_link_async","","",47,null],[12,"_make_symbolic_link_finish","","",47,null],[12,"copy","","",47,null],[12,"copy_async","","",47,null],[12,"copy_finish","","",47,null],[12,"move_","","",47,null],[12,"_move_async","","",47,null],[12,"_move_finish","","",47,null],[12,"mount_mountable","","",47,null],[12,"mount_mountable_finish","","",47,null],[12,"unmount_mountable","","",47,null],[12,"unmount_mountable_finish","","",47,null],[12,"eject_mountable","","",47,null],[12,"eject_mountable_finish","","",47,null],[12,"mount_enclosing_volume","","",47,null],[12,"mount_enclosing_volume_finish","","",47,null],[12,"monitor_dir","","",47,null],[12,"monitor_file","","",47,null],[12,"open_readwrite","","",47,null],[12,"open_readwrite_async","","",47,null],[12,"open_readwrite_finish","","",47,null],[12,"create_readwrite","","",47,null],[12,"create_readwrite_async","","",47,null],[12,"create_readwrite_finish","","",47,null],[12,"replace_readwrite","","",47,null],[12,"replace_readwrite_async","","",47,null],[12,"replace_readwrite_finish","","",47,null],[12,"start_mountable","","",47,null],[12,"start_mountable_finish","","",47,null],[12,"stop_mountable","","",47,null],[12,"stop_mountable_finish","","",47,null],[12,"supports_thread_contexts","","",47,null],[12,"unmount_mountable_with_operation","","",47,null],[12,"unmount_mountable_with_operation_finish","","",47,null],[12,"eject_mountable_with_operation","","",47,null],[12,"eject_mountable_with_operation_finish","","",47,null],[12,"poll_mountable","","",47,null],[12,"poll_mountable_finish","","",47,null],[12,"measure_disk_usage","","",47,null],[12,"measure_disk_usage_async","","",47,null],[12,"measure_disk_usage_finish","","",47,null],[3,"GFileInfoClass","","",null,null],[3,"GFileInputStreamClass","","",null,null],[12,"parent_class","","",48,null],[12,"tell","","",48,null],[12,"can_seek","","",48,null],[12,"seek","","",48,null],[12,"query_info","","",48,null],[12,"query_info_async","","",48,null],[12,"query_info_finish","","",48,null],[12,"_g_reserved1","","",48,null],[12,"_g_reserved2","","",48,null],[12,"_g_reserved3","","",48,null],[12,"_g_reserved4","","",48,null],[12,"_g_reserved5","","",48,null],[3,"GFileInputStreamPrivate","","",null,null],[3,"GFileMonitorClass","","",null,null],[12,"parent_class","","",49,null],[12,"changed","","",49,null],[12,"cancel","","",49,null],[12,"_g_reserved1","","",49,null],[12,"_g_reserved2","","",49,null],[12,"_g_reserved3","","",49,null],[12,"_g_reserved4","","",49,null],[12,"_g_reserved5","","",49,null],[3,"GFileMonitorPrivate","","",null,null],[3,"GFileOutputStreamClass","","",null,null],[12,"parent_class","","",50,null],[12,"tell","","",50,null],[12,"can_seek","","",50,null],[12,"seek","","",50,null],[12,"can_truncate","","",50,null],[12,"truncate_fn","","",50,null],[12,"query_info","","",50,null],[12,"query_info_async","","",50,null],[12,"query_info_finish","","",50,null],[12,"get_etag","","",50,null],[12,"_g_reserved1","","",50,null],[12,"_g_reserved2","","",50,null],[12,"_g_reserved3","","",50,null],[12,"_g_reserved4","","",50,null],[12,"_g_reserved5","","",50,null],[3,"GFileOutputStreamPrivate","","",null,null],[3,"GFilenameCompleterClass","","",null,null],[12,"parent_class","","",51,null],[12,"got_completion_data","","",51,null],[12,"_g_reserved1","","",51,null],[12,"_g_reserved2","","",51,null],[12,"_g_reserved3","","",51,null],[3,"GFilterInputStreamClass","","",null,null],[12,"parent_class","","",52,null],[12,"_g_reserved1","","",52,null],[12,"_g_reserved2","","",52,null],[12,"_g_reserved3","","",52,null],[3,"GFilterOutputStreamClass","","",null,null],[12,"parent_class","","",53,null],[12,"_g_reserved1","","",53,null],[12,"_g_reserved2","","",53,null],[12,"_g_reserved3","","",53,null],[3,"GIOExtension","","",null,null],[3,"GIOExtensionPoint","","",null,null],[3,"GIOModuleClass","","",null,null],[3,"GIOModuleScope","","",null,null],[3,"GIOSchedulerJob","","",null,null],[3,"GIOStreamAdapter","","",null,null],[3,"GIOStreamClass","","",null,null],[12,"parent_class","","",54,null],[12,"get_input_stream","","",54,null],[12,"get_output_stream","","",54,null],[12,"close_fn","","",54,null],[12,"close_async","","",54,null],[12,"close_finish","","",54,null],[12,"_g_reserved1","","",54,null],[12,"_g_reserved2","","",54,null],[12,"_g_reserved3","","",54,null],[12,"_g_reserved4","","",54,null],[12,"_g_reserved5","","",54,null],[12,"_g_reserved6","","",54,null],[12,"_g_reserved7","","",54,null],[12,"_g_reserved8","","",54,null],[12,"_g_reserved9","","",54,null],[12,"_g_reserved10","","",54,null],[3,"GIOStreamPrivate","","",null,null],[3,"GIconIface","","",null,null],[12,"g_iface","","",55,null],[12,"hash","","",55,null],[12,"equal","","",55,null],[12,"to_tokens","","",55,null],[12,"from_tokens","","",55,null],[12,"serialize","","",55,null],[3,"GInetAddressClass","","",null,null],[12,"parent_class","","",56,null],[12,"to_string","","",56,null],[12,"to_bytes","","",56,null],[3,"GInetAddressMaskClass","","",null,null],[12,"parent_class","","",57,null],[3,"GInetAddressMaskPrivate","","",null,null],[3,"GInetAddressPrivate","","",null,null],[3,"GInetSocketAddressClass","","",null,null],[12,"parent_class","","",58,null],[3,"GInetSocketAddressPrivate","","",null,null],[3,"GInitableIface","","",null,null],[12,"g_iface","","",59,null],[12,"init","","",59,null],[3,"GInputStreamClass","","",null,null],[12,"parent_class","","",60,null],[12,"read_fn","","",60,null],[12,"skip","","",60,null],[12,"close_fn","","",60,null],[12,"read_async","","",60,null],[12,"read_finish","","",60,null],[12,"skip_async","","",60,null],[12,"skip_finish","","",60,null],[12,"close_async","","",60,null],[12,"close_finish","","",60,null],[12,"_g_reserved1","","",60,null],[12,"_g_reserved2","","",60,null],[12,"_g_reserved3","","",60,null],[12,"_g_reserved4","","",60,null],[12,"_g_reserved5","","",60,null],[3,"GInputStreamPrivate","","",null,null],[3,"GInputVector","","",null,null],[12,"buffer","","",61,null],[12,"size","","",61,null],[3,"GListModelInterface","","",null,null],[12,"g_iface","","",62,null],[12,"get_item_type","","",62,null],[12,"get_n_items","","",62,null],[12,"get_item","","",62,null],[3,"GListStoreClass","","",null,null],[12,"parent_class","","",63,null],[3,"GLoadableIconIface","","",null,null],[12,"g_iface","","",64,null],[12,"load","","",64,null],[12,"load_async","","",64,null],[12,"load_finish","","",64,null],[3,"GMemoryInputStreamClass","","",null,null],[12,"parent_class","","",65,null],[12,"_g_reserved1","","",65,null],[12,"_g_reserved2","","",65,null],[12,"_g_reserved3","","",65,null],[12,"_g_reserved4","","",65,null],[12,"_g_reserved5","","",65,null],[3,"GMemoryInputStreamPrivate","","",null,null],[3,"GMemoryOutputStreamClass","","",null,null],[12,"parent_class","","",66,null],[12,"_g_reserved1","","",66,null],[12,"_g_reserved2","","",66,null],[12,"_g_reserved3","","",66,null],[12,"_g_reserved4","","",66,null],[12,"_g_reserved5","","",66,null],[3,"GMemoryOutputStreamPrivate","","",null,null],[3,"GMenuAttributeIterClass","","",null,null],[12,"parent_class","","",67,null],[12,"get_next","","",67,null],[3,"GMenuAttributeIterPrivate","","",null,null],[3,"GMenuLinkIterClass","","",null,null],[12,"parent_class","","",68,null],[12,"get_next","","",68,null],[3,"GMenuLinkIterPrivate","","",null,null],[3,"GMenuModelClass","","",null,null],[12,"parent_class","","",69,null],[12,"is_mutable","","",69,null],[12,"get_n_items","","",69,null],[12,"get_item_attributes","","",69,null],[12,"iterate_item_attributes","","",69,null],[12,"get_item_attribute_value","","",69,null],[12,"get_item_links","","",69,null],[12,"iterate_item_links","","",69,null],[12,"get_item_link","","",69,null],[3,"GMenuModelPrivate","","",null,null],[3,"GMountIface","","",null,null],[12,"g_iface","","",70,null],[12,"changed","","",70,null],[12,"unmounted","","",70,null],[12,"get_root","","",70,null],[12,"get_name","","",70,null],[12,"get_icon","","",70,null],[12,"get_uuid","","",70,null],[12,"get_volume","","",70,null],[12,"get_drive","","",70,null],[12,"can_unmount","","",70,null],[12,"can_eject","","",70,null],[12,"unmount","","",70,null],[12,"unmount_finish","","",70,null],[12,"eject","","",70,null],[12,"eject_finish","","",70,null],[12,"remount","","",70,null],[12,"remount_finish","","",70,null],[12,"guess_content_type","","",70,null],[12,"guess_content_type_finish","","",70,null],[12,"guess_content_type_sync","","",70,null],[12,"pre_unmount","","",70,null],[12,"unmount_with_operation","","",70,null],[12,"unmount_with_operation_finish","","",70,null],[12,"eject_with_operation","","",70,null],[12,"eject_with_operation_finish","","",70,null],[12,"get_default_location","","",70,null],[12,"get_sort_key","","",70,null],[12,"get_symbolic_icon","","",70,null],[3,"GMountOperationClass","","",null,null],[12,"parent_class","","",71,null],[12,"ask_password","","",71,null],[12,"ask_question","","",71,null],[12,"reply","","",71,null],[12,"aborted","","",71,null],[12,"show_processes","","",71,null],[12,"show_unmount_progress","","",71,null],[12,"_g_reserved1","","",71,null],[12,"_g_reserved2","","",71,null],[12,"_g_reserved3","","",71,null],[12,"_g_reserved4","","",71,null],[12,"_g_reserved5","","",71,null],[12,"_g_reserved6","","",71,null],[12,"_g_reserved7","","",71,null],[12,"_g_reserved8","","",71,null],[12,"_g_reserved9","","",71,null],[3,"GMountOperationPrivate","","",null,null],[3,"GNativeVolumeMonitorClass","","",null,null],[12,"parent_class","","",72,null],[12,"get_mount_for_mount_path","","",72,null],[3,"GNetworkAddressClass","","",null,null],[12,"parent_class","","",73,null],[3,"GNetworkAddressPrivate","","",null,null],[3,"GNetworkMonitorInterface","","",null,null],[12,"g_iface","","",74,null],[12,"network_changed","","",74,null],[12,"can_reach","","",74,null],[12,"can_reach_async","","",74,null],[12,"can_reach_finish","","",74,null],[3,"GNetworkServiceClass","","",null,null],[12,"parent_class","","",75,null],[3,"GNetworkServicePrivate","","",null,null],[3,"GOutputMessage","","",null,null],[12,"address","","",76,null],[12,"vectors","","",76,null],[12,"num_vectors","","",76,null],[12,"bytes_sent","","",76,null],[12,"control_messages","","",76,null],[12,"num_control_messages","","",76,null],[3,"GOutputStreamClass","","",null,null],[12,"parent_class","","",77,null],[12,"write_fn","","",77,null],[12,"splice","","",77,null],[12,"flush","","",77,null],[12,"close_fn","","",77,null],[12,"write_async","","",77,null],[12,"write_finish","","",77,null],[12,"splice_async","","",77,null],[12,"splice_finish","","",77,null],[12,"flush_async","","",77,null],[12,"flush_finish","","",77,null],[12,"close_async","","",77,null],[12,"close_finish","","",77,null],[12,"_g_reserved1","","",77,null],[12,"_g_reserved2","","",77,null],[12,"_g_reserved3","","",77,null],[12,"_g_reserved4","","",77,null],[12,"_g_reserved5","","",77,null],[12,"_g_reserved6","","",77,null],[12,"_g_reserved7","","",77,null],[12,"_g_reserved8","","",77,null],[3,"GOutputStreamPrivate","","",null,null],[3,"GOutputVector","","",null,null],[12,"buffer","","",78,null],[12,"size","","",78,null],[3,"GPermissionClass","","",null,null],[12,"parent_class","","",79,null],[12,"acquire","","",79,null],[12,"acquire_async","","",79,null],[12,"acquire_finish","","",79,null],[12,"release","","",79,null],[12,"release_async","","",79,null],[12,"release_finish","","",79,null],[12,"reserved","","",79,null],[3,"GPermissionPrivate","","",null,null],[3,"GPollableInputStreamInterface","","",null,null],[12,"g_iface","","",80,null],[12,"can_poll","","",80,null],[12,"is_readable","","",80,null],[12,"create_source","","",80,null],[12,"read_nonblocking","","",80,null],[3,"GPollableOutputStreamInterface","","",null,null],[12,"g_iface","","",81,null],[12,"can_poll","","",81,null],[12,"is_writable","","",81,null],[12,"create_source","","",81,null],[12,"write_nonblocking","","",81,null],[3,"GProxyAddressClass","","",null,null],[12,"parent_class","","",82,null],[3,"GProxyAddressEnumeratorClass","","",null,null],[12,"parent_class","","",83,null],[12,"_g_reserved1","","",83,null],[12,"_g_reserved2","","",83,null],[12,"_g_reserved3","","",83,null],[12,"_g_reserved4","","",83,null],[12,"_g_reserved5","","",83,null],[12,"_g_reserved6","","",83,null],[12,"_g_reserved7","","",83,null],[3,"GProxyAddressEnumeratorPrivate","","",null,null],[3,"GProxyAddressPrivate","","",null,null],[3,"GProxyInterface","","",null,null],[12,"g_iface","","",84,null],[12,"connect","","",84,null],[12,"connect_async","","",84,null],[12,"connect_finish","","",84,null],[12,"supports_hostname","","",84,null],[3,"GProxyResolverInterface","","",null,null],[12,"g_iface","","",85,null],[12,"is_supported","","",85,null],[12,"lookup","","",85,null],[12,"lookup_async","","",85,null],[12,"lookup_finish","","",85,null],[3,"GRemoteActionGroupInterface","","",null,null],[12,"g_iface","","",86,null],[12,"activate_action_full","","",86,null],[12,"change_action_state_full","","",86,null],[3,"GResolverClass","","",null,null],[12,"parent_class","","",87,null],[12,"reload","","",87,null],[12,"lookup_by_name","","",87,null],[12,"lookup_by_name_async","","",87,null],[12,"lookup_by_name_finish","","",87,null],[12,"lookup_by_address","","",87,null],[12,"lookup_by_address_async","","",87,null],[12,"lookup_by_address_finish","","",87,null],[12,"lookup_service","","",87,null],[12,"lookup_service_async","","",87,null],[12,"lookup_service_finish","","",87,null],[12,"lookup_records","","",87,null],[12,"lookup_records_async","","",87,null],[12,"lookup_records_finish","","",87,null],[12,"_g_reserved4","","",87,null],[12,"_g_reserved5","","",87,null],[12,"_g_reserved6","","",87,null],[3,"GResolverPrivate","","",null,null],[3,"GResource","","",null,null],[3,"GSeekableIface","","",null,null],[12,"g_iface","","",88,null],[12,"tell","","",88,null],[12,"can_seek","","",88,null],[12,"seek","","",88,null],[12,"can_truncate","","",88,null],[12,"truncate_fn","","",88,null],[3,"GSettingsBackend","","",null,null],[3,"GSettingsClass","","",null,null],[12,"parent_class","","",89,null],[12,"writable_changed","","",89,null],[12,"changed","","",89,null],[12,"writable_change_event","","",89,null],[12,"change_event","","",89,null],[12,"padding","","",89,null],[3,"GSettingsPrivate","","",null,null],[3,"GSettingsSchema","","",null,null],[3,"GSettingsSchemaKey","","",null,null],[3,"GSettingsSchemaSource","","",null,null],[3,"GSimpleActionGroupClass","","",null,null],[3,"GSimpleActionGroupPrivate","","",null,null],[3,"GSimpleAsyncResultClass","","",null,null],[3,"GSimpleProxyResolverClass","","",null,null],[12,"parent_class","","",90,null],[12,"_g_reserved1","","",90,null],[12,"_g_reserved2","","",90,null],[12,"_g_reserved3","","",90,null],[12,"_g_reserved4","","",90,null],[12,"_g_reserved5","","",90,null],[3,"GSimpleProxyResolverPrivate","","",null,null],[3,"GSocketAddressClass","","",null,null],[12,"parent_class","","",91,null],[12,"get_family","","",91,null],[12,"get_native_size","","",91,null],[12,"to_native","","",91,null],[3,"GSocketAddressEnumeratorClass","","",null,null],[12,"parent_class","","",92,null],[12,"next","","",92,null],[12,"next_async","","",92,null],[12,"next_finish","","",92,null],[3,"GSocketClass","","",null,null],[12,"parent_class","","",93,null],[12,"_g_reserved1","","",93,null],[12,"_g_reserved2","","",93,null],[12,"_g_reserved3","","",93,null],[12,"_g_reserved4","","",93,null],[12,"_g_reserved5","","",93,null],[12,"_g_reserved6","","",93,null],[12,"_g_reserved7","","",93,null],[12,"_g_reserved8","","",93,null],[12,"_g_reserved9","","",93,null],[12,"_g_reserved10","","",93,null],[3,"GSocketClientClass","","",null,null],[12,"parent_class","","",94,null],[12,"event","","",94,null],[12,"_g_reserved1","","",94,null],[12,"_g_reserved2","","",94,null],[12,"_g_reserved3","","",94,null],[12,"_g_reserved4","","",94,null],[3,"GSocketClientPrivate","","",null,null],[3,"GSocketConnectableIface","","",null,null],[12,"g_iface","","",95,null],[12,"enumerate","","",95,null],[12,"proxy_enumerate","","",95,null],[3,"GSocketConnectionClass","","",null,null],[12,"parent_class","","",96,null],[12,"_g_reserved1","","",96,null],[12,"_g_reserved2","","",96,null],[12,"_g_reserved3","","",96,null],[12,"_g_reserved4","","",96,null],[12,"_g_reserved5","","",96,null],[12,"_g_reserved6","","",96,null],[3,"GSocketConnectionPrivate","","",null,null],[3,"GSocketControlMessageClass","","",null,null],[12,"parent_class","","",97,null],[12,"get_size","","",97,null],[12,"get_level","","",97,null],[12,"get_type","","",97,null],[12,"serialize","","",97,null],[12,"deserialize","","",97,null],[12,"_g_reserved1","","",97,null],[12,"_g_reserved2","","",97,null],[12,"_g_reserved3","","",97,null],[12,"_g_reserved4","","",97,null],[12,"_g_reserved5","","",97,null],[3,"GSocketControlMessagePrivate","","",null,null],[3,"GSocketListenerClass","","",null,null],[12,"parent_class","","",98,null],[12,"changed","","",98,null],[12,"_g_reserved1","","",98,null],[12,"_g_reserved2","","",98,null],[12,"_g_reserved3","","",98,null],[12,"_g_reserved4","","",98,null],[12,"_g_reserved5","","",98,null],[12,"_g_reserved6","","",98,null],[3,"GSocketListenerPrivate","","",null,null],[3,"GSocketPrivate","","",null,null],[3,"GSocketServiceClass","","",null,null],[12,"parent_class","","",99,null],[12,"incoming","","",99,null],[12,"_g_reserved1","","",99,null],[12,"_g_reserved2","","",99,null],[12,"_g_reserved3","","",99,null],[12,"_g_reserved4","","",99,null],[12,"_g_reserved5","","",99,null],[12,"_g_reserved6","","",99,null],[3,"GSocketServicePrivate","","",null,null],[3,"GSrvTarget","","",null,null],[3,"GStaticResource","","",null,null],[3,"GTaskClass","","",null,null],[3,"GTcpConnectionClass","","",null,null],[12,"parent_class","","",100,null],[3,"GTcpConnectionPrivate","","",null,null],[3,"GTcpWrapperConnectionClass","","",null,null],[12,"parent_class","","",101,null],[3,"GTcpWrapperConnectionPrivate","","",null,null],[3,"GThemedIconClass","","",null,null],[3,"GThreadedSocketServiceClass","","",null,null],[12,"parent_class","","",102,null],[12,"run","","",102,null],[12,"_g_reserved1","","",102,null],[12,"_g_reserved2","","",102,null],[12,"_g_reserved3","","",102,null],[12,"_g_reserved4","","",102,null],[12,"_g_reserved5","","",102,null],[3,"GThreadedSocketServicePrivate","","",null,null],[3,"GTlsBackendInterface","","",null,null],[12,"g_iface","","",103,null],[12,"supports_tls","","",103,null],[12,"get_certificate_type","","",103,null],[12,"get_client_connection_type","","",103,null],[12,"get_server_connection_type","","",103,null],[12,"get_file_database_type","","",103,null],[12,"get_default_database","","",103,null],[3,"GTlsCertificateClass","","",null,null],[12,"parent_class","","",104,null],[12,"verify","","",104,null],[3,"GTlsCertificatePrivate","","",null,null],[3,"GTlsClientConnectionInterface","","",null,null],[12,"g_iface","","",105,null],[3,"GTlsConnectionClass","","",null,null],[12,"parent_class","","",106,null],[12,"accept_certificate","","",106,null],[12,"handshake","","",106,null],[12,"handshake_async","","",106,null],[12,"handshake_finish","","",106,null],[3,"GTlsConnectionPrivate","","",null,null],[3,"GTlsDatabaseClass","","",null,null],[12,"parent_class","","",107,null],[12,"verify_chain","","",107,null],[12,"verify_chain_async","","",107,null],[12,"verify_chain_finish","","",107,null],[12,"create_certificate_handle","","",107,null],[12,"lookup_certificate_for_handle","","",107,null],[12,"lookup_certificate_for_handle_async","","",107,null],[12,"lookup_certificate_for_handle_finish","","",107,null],[12,"lookup_certificate_issuer","","",107,null],[12,"lookup_certificate_issuer_async","","",107,null],[12,"lookup_certificate_issuer_finish","","",107,null],[12,"lookup_certificates_issued_by","","",107,null],[12,"lookup_certificates_issued_by_async","","",107,null],[12,"lookup_certificates_issued_by_finish","","",107,null],[3,"GTlsDatabasePrivate","","",null,null],[3,"GTlsFileDatabaseInterface","","",null,null],[12,"g_iface","","",108,null],[3,"GTlsInteractionClass","","",null,null],[12,"ask_password","","",109,null],[12,"ask_password_async","","",109,null],[12,"ask_password_finish","","",109,null],[12,"request_certificate","","",109,null],[12,"request_certificate_async","","",109,null],[12,"request_certificate_finish","","",109,null],[3,"GTlsInteractionPrivate","","",null,null],[3,"GTlsPasswordClass","","",null,null],[12,"parent_class","","",110,null],[12,"get_value","","",110,null],[12,"set_value","","",110,null],[12,"get_default_warning","","",110,null],[3,"GTlsPasswordPrivate","","",null,null],[3,"GTlsServerConnectionInterface","","",null,null],[12,"g_iface","","",111,null],[3,"GUnixConnectionClass","","",null,null],[12,"parent_class","","",112,null],[3,"GUnixConnectionPrivate","","",null,null],[3,"GUnixCredentialsMessageClass","","",null,null],[12,"parent_class","","",113,null],[12,"_g_reserved1","","",113,null],[12,"_g_reserved2","","",113,null],[3,"GUnixCredentialsMessagePrivate","","",null,null],[3,"GUnixFDListClass","","",null,null],[12,"parent_class","","",114,null],[12,"_g_reserved1","","",114,null],[12,"_g_reserved2","","",114,null],[12,"_g_reserved3","","",114,null],[12,"_g_reserved4","","",114,null],[12,"_g_reserved5","","",114,null],[3,"GUnixFDListPrivate","","",null,null],[3,"GUnixFDMessageClass","","",null,null],[12,"parent_class","","",115,null],[12,"_g_reserved1","","",115,null],[12,"_g_reserved2","","",115,null],[3,"GUnixFDMessagePrivate","","",null,null],[3,"GUnixInputStreamClass","","",null,null],[12,"parent_class","","",116,null],[12,"_g_reserved1","","",116,null],[12,"_g_reserved2","","",116,null],[12,"_g_reserved3","","",116,null],[12,"_g_reserved4","","",116,null],[12,"_g_reserved5","","",116,null],[3,"GUnixInputStreamPrivate","","",null,null],[3,"GUnixMountEntry","","",null,null],[3,"GUnixMountMonitorClass","","",null,null],[3,"GUnixMountPoint","","",null,null],[3,"GUnixOutputStreamClass","","",null,null],[12,"parent_class","","",117,null],[12,"_g_reserved1","","",117,null],[12,"_g_reserved2","","",117,null],[12,"_g_reserved3","","",117,null],[12,"_g_reserved4","","",117,null],[12,"_g_reserved5","","",117,null],[3,"GUnixOutputStreamPrivate","","",null,null],[3,"GUnixSocketAddressClass","","",null,null],[12,"parent_class","","",118,null],[3,"GUnixSocketAddressPrivate","","",null,null],[3,"GVfsClass","","",null,null],[12,"parent_class","","",119,null],[12,"is_active","","",119,null],[12,"get_file_for_path","","",119,null],[12,"get_file_for_uri","","",119,null],[12,"get_supported_uri_schemes","","",119,null],[12,"parse_name","","",119,null],[12,"local_file_add_info","","",119,null],[12,"add_writable_namespaces","","",119,null],[12,"local_file_set_attributes","","",119,null],[12,"local_file_removed","","",119,null],[12,"local_file_moved","","",119,null],[12,"deserialize_icon","","",119,null],[12,"_g_reserved1","","",119,null],[12,"_g_reserved2","","",119,null],[12,"_g_reserved3","","",119,null],[12,"_g_reserved4","","",119,null],[12,"_g_reserved5","","",119,null],[12,"_g_reserved6","","",119,null],[3,"GVolumeIface","","",null,null],[12,"g_iface","","",120,null],[12,"changed","","",120,null],[12,"removed","","",120,null],[12,"get_name","","",120,null],[12,"get_icon","","",120,null],[12,"get_uuid","","",120,null],[12,"get_drive","","",120,null],[12,"get_mount","","",120,null],[12,"can_mount","","",120,null],[12,"can_eject","","",120,null],[12,"mount_fn","","",120,null],[12,"mount_finish","","",120,null],[12,"eject","","",120,null],[12,"eject_finish","","",120,null],[12,"get_identifier","","",120,null],[12,"enumerate_identifiers","","",120,null],[12,"should_automount","","",120,null],[12,"get_activation_root","","",120,null],[12,"eject_with_operation","","",120,null],[12,"eject_with_operation_finish","","",120,null],[12,"get_sort_key","","",120,null],[12,"get_symbolic_icon","","",120,null],[3,"GVolumeMonitorClass","","",null,null],[12,"parent_class","","",121,null],[12,"volume_added","","",121,null],[12,"volume_removed","","",121,null],[12,"volume_changed","","",121,null],[12,"mount_added","","",121,null],[12,"mount_removed","","",121,null],[12,"mount_pre_unmount","","",121,null],[12,"mount_changed","","",121,null],[12,"drive_connected","","",121,null],[12,"drive_disconnected","","",121,null],[12,"drive_changed","","",121,null],[12,"is_supported","","",121,null],[12,"get_connected_drives","","",121,null],[12,"get_volumes","","",121,null],[12,"get_mounts","","",121,null],[12,"get_volume_for_uuid","","",121,null],[12,"get_mount_for_uuid","","",121,null],[12,"adopt_orphan_mount","","",121,null],[12,"drive_eject_button","","",121,null],[12,"drive_stop_button","","",121,null],[12,"_g_reserved1","","",121,null],[12,"_g_reserved2","","",121,null],[12,"_g_reserved3","","",121,null],[12,"_g_reserved4","","",121,null],[12,"_g_reserved5","","",121,null],[12,"_g_reserved6","","",121,null],[3,"GZlibCompressorClass","","",null,null],[12,"parent_class","","",122,null],[3,"GZlibDecompressorClass","","",null,null],[12,"parent_class","","",123,null],[3,"GAppInfoMonitor","","",null,null],[3,"GAppLaunchContext","","",null,null],[3,"GApplication","","",null,null],[3,"GApplicationCommandLine","","",null,null],[3,"GBufferedInputStream","","",null,null],[3,"GBufferedOutputStream","","",null,null],[3,"GBytesIcon","","",null,null],[3,"GCancellable","","",null,null],[3,"GCharsetConverter","","",null,null],[3,"GConverterInputStream","","",null,null],[3,"GConverterOutputStream","","",null,null],[3,"GCredentials","","",null,null],[3,"GDBusActionGroup","","",null,null],[3,"GDBusAuthObserver","","",null,null],[3,"GDBusConnection","","",null,null],[3,"GDBusInterfaceSkeleton","","",null,null],[3,"GDBusMenuModel","","",null,null],[3,"GDBusMessage","","",null,null],[3,"GDBusMethodInvocation","","",null,null],[3,"GDBusObjectManagerClient","","",null,null],[3,"GDBusObjectManagerServer","","",null,null],[3,"GDBusObjectProxy","","",null,null],[3,"GDBusObjectSkeleton","","",null,null],[3,"GDBusProxy","","",null,null],[3,"GDBusServer","","",null,null],[3,"GDataInputStream","","",null,null],[3,"GDataOutputStream","","",null,null],[3,"GDesktopAppInfo","","",null,null],[3,"GEmblem","","",null,null],[3,"GEmblemedIcon","","",null,null],[3,"GFileEnumerator","","",null,null],[3,"GFileIOStream","","",null,null],[3,"GFileIcon","","",null,null],[3,"GFileInfo","","",null,null],[3,"GFileInputStream","","",null,null],[3,"GFileMonitor","","",null,null],[3,"GFileOutputStream","","",null,null],[3,"GFilenameCompleter","","",null,null],[3,"GFilterInputStream","","",null,null],[3,"GFilterOutputStream","","",null,null],[3,"GIOModule","","",null,null],[3,"GIOStream","","",null,null],[3,"GInetAddress","","",null,null],[3,"GInetAddressMask","","",null,null],[3,"GInetSocketAddress","","",null,null],[3,"GInputStream","","",null,null],[3,"GListStore","","",null,null],[3,"GMemoryInputStream","","",null,null],[3,"GMemoryOutputStream","","",null,null],[3,"GMenu","","",null,null],[3,"GMenuAttributeIter","","",null,null],[3,"GMenuItem","","",null,null],[3,"GMenuLinkIter","","",null,null],[3,"GMenuModel","","",null,null],[3,"GMountOperation","","",null,null],[3,"GNativeVolumeMonitor","","",null,null],[3,"GNetworkAddress","","",null,null],[3,"GNetworkService","","",null,null],[3,"GNotification","","",null,null],[3,"GOutputStream","","",null,null],[3,"GPermission","","",null,null],[3,"GPropertyAction","","",null,null],[3,"GProxyAddress","","",null,null],[3,"GProxyAddressEnumerator","","",null,null],[3,"GResolver","","",null,null],[3,"GSettings","","",null,null],[3,"GSimpleAction","","",null,null],[3,"GSimpleActionGroup","","",null,null],[3,"GSimpleAsyncResult","","",null,null],[3,"GSimpleIOStream","","",null,null],[3,"GSimplePermission","","",null,null],[3,"GSimpleProxyResolver","","",null,null],[3,"GSocket","","",null,null],[3,"GSocketAddress","","",null,null],[3,"GSocketAddressEnumerator","","",null,null],[3,"GSocketClient","","",null,null],[3,"GSocketConnection","","",null,null],[3,"GSocketControlMessage","","",null,null],[3,"GSocketListener","","",null,null],[3,"GSocketService","","",null,null],[3,"GSubprocess","","",null,null],[3,"GSubprocessLauncher","","",null,null],[3,"GTask","","",null,null],[3,"GTcpConnection","","",null,null],[3,"GTcpWrapperConnection","","",null,null],[3,"GTestDBus","","",null,null],[3,"GThemedIcon","","",null,null],[3,"GThreadedSocketService","","",null,null],[3,"GTlsCertificate","","",null,null],[3,"GTlsConnection","","",null,null],[3,"GTlsDatabase","","",null,null],[3,"GTlsInteraction","","",null,null],[3,"GTlsPassword","","",null,null],[3,"GUnixConnection","","",null,null],[3,"GUnixCredentialsMessage","","",null,null],[3,"GUnixFDList","","",null,null],[3,"GUnixFDMessage","","",null,null],[3,"GUnixInputStream","","",null,null],[3,"GUnixMountMonitor","","",null,null],[3,"GUnixOutputStream","","",null,null],[3,"GUnixSocketAddress","","",null,null],[3,"GVfs","","",null,null],[3,"GVolumeMonitor","","",null,null],[3,"GZlibCompressor","","",null,null],[3,"GZlibDecompressor","","",null,null],[3,"GAction","","",null,null],[3,"GActionGroup","","",null,null],[3,"GActionMap","","",null,null],[3,"GAppInfo","","",null,null],[3,"GAsyncInitable","","",null,null],[3,"GAsyncResult","","",null,null],[3,"GConverter","","",null,null],[3,"GDBusInterface","","",null,null],[3,"GDBusObject","","",null,null],[3,"GDBusObjectManager","","",null,null],[3,"GDesktopAppInfoLookup","","",null,null],[3,"GDrive","","",null,null],[3,"GFile","","",null,null],[3,"GFileDescriptorBased","","",null,null],[3,"GIcon","","",null,null],[3,"GInitable","","",null,null],[3,"GListModel","","",null,null],[3,"GLoadableIcon","","",null,null],[3,"GMount","","",null,null],[3,"GNetworkMonitor","","",null,null],[3,"GPollableInputStream","","",null,null],[3,"GPollableOutputStream","","",null,null],[3,"GProxy","","",null,null],[3,"GProxyResolver","","",null,null],[3,"GRemoteActionGroup","","",null,null],[3,"GSeekable","","",null,null],[3,"GSocketConnectable","","",null,null],[3,"GTlsBackend","","",null,null],[3,"GTlsClientConnection","","",null,null],[3,"GTlsFileDatabase","","",null,null],[3,"GTlsServerConnection","","",null,null],[3,"GVolume","","",null,null],[4,"GBusType","","",null,null],[13,"Starter","","",124,null],[13,"None","","",124,null],[13,"System","","",124,null],[13,"Session","","",124,null],[4,"GConverterResult","","",null,null],[13,"Error","","",125,null],[13,"Converted","","",125,null],[13,"Finished","","",125,null],[13,"Flushed","","",125,null],[4,"GCredentialsType","","",null,null],[13,"Invalid","","",126,null],[13,"LinuxUcred","","",126,null],[13,"FreebsdCmsgcred","","",126,null],[13,"OpenbsdSockpeercred","","",126,null],[13,"SolarisUcred","","",126,null],[13,"NetbsdUnpcbid","","",126,null],[4,"GDBusError","","",null,null],[13,"Failed","","",127,null],[13,"NoMemory","","",127,null],[13,"ServiceUnknown","","",127,null],[13,"NameHasNoOwner","","",127,null],[13,"NoReply","","",127,null],[13,"IoError","","",127,null],[13,"BadAddress","","",127,null],[13,"NotSupported","","",127,null],[13,"LimitsExceeded","","",127,null],[13,"AccessDenied","","",127,null],[13,"AuthFailed","","",127,null],[13,"NoServer","","",127,null],[13,"Timeout","","",127,null],[13,"NoNetwork","","",127,null],[13,"AddressInUse","","",127,null],[13,"Disconnected","","",127,null],[13,"InvalidArgs","","",127,null],[13,"FileNotFound","","",127,null],[13,"FileExists","","",127,null],[13,"UnknownMethod","","",127,null],[13,"TimedOut","","",127,null],[13,"MatchRuleNotFound","","",127,null],[13,"MatchRuleInvalid","","",127,null],[13,"SpawnExecFailed","","",127,null],[13,"SpawnForkFailed","","",127,null],[13,"SpawnChildExited","","",127,null],[13,"SpawnChildSignaled","","",127,null],[13,"SpawnFailed","","",127,null],[13,"SpawnSetupFailed","","",127,null],[13,"SpawnConfigInvalid","","",127,null],[13,"SpawnServiceInvalid","","",127,null],[13,"SpawnServiceNotFound","","",127,null],[13,"SpawnPermissionsInvalid","","",127,null],[13,"SpawnFileInvalid","","",127,null],[13,"SpawnNoMemory","","",127,null],[13,"UnixProcessIdUnknown","","",127,null],[13,"InvalidSignature","","",127,null],[13,"InvalidFileContent","","",127,null],[13,"SelinuxSecurityContextUnknown","","",127,null],[13,"AdtAuditDataUnknown","","",127,null],[13,"ObjectPathInUse","","",127,null],[13,"UnknownObject","","",127,null],[13,"UnknownInterface","","",127,null],[13,"UnknownProperty","","",127,null],[13,"PropertyReadOnly","","",127,null],[4,"GDBusMessageByteOrder","","",null,null],[13,"BigEndian","","",128,null],[13,"LittleEndian","","",128,null],[4,"GDBusMessageHeaderField","","",null,null],[13,"Invalid","","",129,null],[13,"Path","","",129,null],[13,"Interface","","",129,null],[13,"Member","","",129,null],[13,"ErrorName","","",129,null],[13,"ReplySerial","","",129,null],[13,"Destination","","",129,null],[13,"Sender","","",129,null],[13,"Signature","","",129,null],[13,"NumUnixFds","","",129,null],[4,"GDBusMessageType","","",null,null],[13,"Invalid","","",130,null],[13,"MethodCall","","",130,null],[13,"MethodReturn","","",130,null],[13,"Error","","",130,null],[13,"Signal","","",130,null],[4,"GDataStreamByteOrder","","",null,null],[13,"BigEndian","","",131,null],[13,"LittleEndian","","",131,null],[13,"HostEndian","","",131,null],[4,"GDataStreamNewlineType","","",null,null],[13,"Lf","","",132,null],[13,"Cr","","",132,null],[13,"CrLf","","",132,null],[13,"Any","","",132,null],[4,"GDriveStartStopType","","",null,null],[13,"Unknown","","",133,null],[13,"Shutdown","","",133,null],[13,"Network","","",133,null],[13,"Multidisk","","",133,null],[13,"Password","","",133,null],[4,"GEmblemOrigin","","",null,null],[13,"Unknown","","",134,null],[13,"Device","","",134,null],[13,"Livemetadata","","",134,null],[13,"Tag","","",134,null],[4,"GFileAttributeStatus","","",null,null],[13,"Unset","","",135,null],[13,"Set","","",135,null],[13,"ErrorSetting","","",135,null],[4,"GFileAttributeType","","",null,null],[13,"Invalid","","",136,null],[13,"String","","",136,null],[13,"ByteString","","",136,null],[13,"Boolean","","",136,null],[13,"Uint32","","",136,null],[13,"Int32","","",136,null],[13,"Uint64","","",136,null],[13,"Int64","","",136,null],[13,"Object","","",136,null],[13,"Stringv","","",136,null],[4,"GFileMonitorEvent","","",null,null],[13,"Changed","","",137,null],[13,"ChangesDoneHint","","",137,null],[13,"Deleted","","",137,null],[13,"Created","","",137,null],[13,"AttributeChanged","","",137,null],[13,"PreUnmount","","",137,null],[13,"Unmounted","","",137,null],[13,"Moved","","",137,null],[4,"GFileType","","",null,null],[13,"Unknown","","",138,null],[13,"Regular","","",138,null],[13,"Directory","","",138,null],[13,"SymbolicLink","","",138,null],[13,"Special","","",138,null],[13,"Shortcut","","",138,null],[13,"Mountable","","",138,null],[4,"GFilesystemPreviewType","","",null,null],[13,"IfAlways","","",139,null],[13,"IfLocal","","",139,null],[13,"Never","","",139,null],[4,"GIOErrorEnum","","",null,null],[13,"Failed","","",140,null],[13,"NotFound","","",140,null],[13,"Exists","","",140,null],[13,"IsDirectory","","",140,null],[13,"NotDirectory","","",140,null],[13,"NotEmpty","","",140,null],[13,"NotRegularFile","","",140,null],[13,"NotSymbolicLink","","",140,null],[13,"NotMountableFile","","",140,null],[13,"FilenameTooLong","","",140,null],[13,"InvalidFilename","","",140,null],[13,"TooManyLinks","","",140,null],[13,"NoSpace","","",140,null],[13,"InvalidArgument","","",140,null],[13,"PermissionDenied","","",140,null],[13,"NotSupported","","",140,null],[13,"NotMounted","","",140,null],[13,"AlreadyMounted","","",140,null],[13,"Closed","","",140,null],[13,"Cancelled","","",140,null],[13,"Pending","","",140,null],[13,"ReadOnly","","",140,null],[13,"CantCreateBackup","","",140,null],[13,"WrongEtag","","",140,null],[13,"TimedOut","","",140,null],[13,"WouldRecurse","","",140,null],[13,"Busy","","",140,null],[13,"WouldBlock","","",140,null],[13,"HostNotFound","","",140,null],[13,"WouldMerge","","",140,null],[13,"FailedHandled","","",140,null],[13,"TooManyOpenFiles","","",140,null],[13,"NotInitialized","","",140,null],[13,"AddressInUse","","",140,null],[13,"PartialInput","","",140,null],[13,"InvalidData","","",140,null],[13,"DbusError","","",140,null],[13,"HostUnreachable","","",140,null],[13,"NetworkUnreachable","","",140,null],[13,"ConnectionRefused","","",140,null],[13,"ProxyFailed","","",140,null],[13,"ProxyAuthFailed","","",140,null],[13,"ProxyNeedAuth","","",140,null],[13,"ProxyNotAllowed","","",140,null],[13,"BrokenPipe","","",140,null],[13,"NotConnected","","",140,null],[4,"GIOModuleScopeFlags","","",null,null],[13,"None","","",141,null],[13,"BlockDuplicates","","",141,null],[4,"GMountOperationResult","","",null,null],[13,"Handled","","",142,null],[13,"Aborted","","",142,null],[13,"Unhandled","","",142,null],[4,"GNetworkConnectivity","","",null,null],[13,"Local","","",143,null],[13,"Limited","","",143,null],[13,"Portal","","",143,null],[13,"Full","","",143,null],[4,"GNotificationPriority","","",null,null],[13,"Normal","","",144,null],[13,"Low","","",144,null],[13,"High","","",144,null],[13,"Urgent","","",144,null],[4,"GPasswordSave","","",null,null],[13,"Never","","",145,null],[13,"ForSession","","",145,null],[13,"Permanently","","",145,null],[4,"GResolverError","","",null,null],[13,"NotFound","","",146,null],[13,"TemporaryFailure","","",146,null],[13,"Internal","","",146,null],[4,"GResolverRecordType","","",null,null],[13,"Srv","","",147,null],[13,"Mx","","",147,null],[13,"Txt","","",147,null],[13,"Soa","","",147,null],[13,"Ns","","",147,null],[4,"GResourceError","","",null,null],[13,"NotFound","","",148,null],[13,"Internal","","",148,null],[4,"GSocketClientEvent","","",null,null],[13,"Resolving","","",149,null],[13,"Resolved","","",149,null],[13,"Connecting","","",149,null],[13,"Connected","","",149,null],[13,"ProxyNegotiating","","",149,null],[13,"ProxyNegotiated","","",149,null],[13,"TlsHandshaking","","",149,null],[13,"TlsHandshaked","","",149,null],[13,"Complete","","",149,null],[4,"GSocketFamily","","",null,null],[13,"Invalid","","",150,null],[13,"Unix","","",150,null],[13,"Ipv4","","",150,null],[13,"Ipv6","","",150,null],[4,"GSocketProtocol","","",null,null],[13,"Unknown","","",151,null],[13,"Default","","",151,null],[13,"Tcp","","",151,null],[13,"Udp","","",151,null],[13,"Sctp","","",151,null],[4,"GSocketType","","",null,null],[13,"Invalid","","",152,null],[13,"Stream","","",152,null],[13,"Datagram","","",152,null],[13,"Seqpacket","","",152,null],[4,"GTlsAuthenticationMode","","",null,null],[13,"None","","",153,null],[13,"Requested","","",153,null],[13,"Required","","",153,null],[4,"GTlsDatabaseLookupFlags","","",null,null],[13,"None","","",154,null],[13,"Keypair","","",154,null],[4,"GTlsError","","",null,null],[13,"Unavailable","","",155,null],[13,"Misc","","",155,null],[13,"BadCertificate","","",155,null],[13,"NotTls","","",155,null],[13,"Handshake","","",155,null],[13,"CertificateRequired","","",155,null],[13,"Eof","","",155,null],[4,"GTlsInteractionResult","","",null,null],[13,"Unhandled","","",156,null],[13,"Handled","","",156,null],[13,"Failed","","",156,null],[4,"GTlsRehandshakeMode","","",null,null],[13,"Never","","",157,null],[13,"Safely","","",157,null],[13,"Unsafely","","",157,null],[4,"GUnixSocketAddressType","","",null,null],[13,"Invalid","","",158,null],[13,"Anonymous","","",158,null],[13,"Path","","",158,null],[13,"Abstract","","",158,null],[13,"AbstractPadded","","",158,null],[4,"GZlibCompressorFormat","","",null,null],[13,"Zlib","","",159,null],[13,"Gzip","","",159,null],[13,"Raw","","",159,null],[5,"g_dbus_error_encode_gerror","","",null,null],[5,"g_dbus_error_get_remote_error","","",null,null],[5,"g_dbus_error_is_remote_error","","",null,null],[5,"g_dbus_error_new_for_dbus_error","","",null,null],[5,"g_dbus_error_quark","","",null,null],[5,"g_dbus_error_register_error","","",null,null],[5,"g_dbus_error_register_error_domain","","",null,null],[5,"g_dbus_error_set_dbus_error","","",null,null],[5,"g_dbus_error_strip_remote_error","","",null,null],[5,"g_dbus_error_unregister_error","","",null,null],[5,"g_resolver_error_quark","","",null,null],[5,"g_resource_error_quark","","",null,null],[5,"g_tls_error_quark","","",null,null],[5,"g_dbus_annotation_info_get_type","","",null,null],[5,"g_dbus_annotation_info_ref","","",null,null],[5,"g_dbus_annotation_info_unref","","",null,null],[5,"g_dbus_annotation_info_lookup","","",null,null],[5,"g_dbus_arg_info_get_type","","",null,null],[5,"g_dbus_arg_info_ref","","",null,null],[5,"g_dbus_arg_info_unref","","",null,null],[5,"g_dbus_interface_info_get_type","","",null,null],[5,"g_dbus_interface_info_cache_build","","",null,null],[5,"g_dbus_interface_info_cache_release","","",null,null],[5,"g_dbus_interface_info_generate_xml","","",null,null],[5,"g_dbus_interface_info_lookup_method","","",null,null],[5,"g_dbus_interface_info_lookup_property","","",null,null],[5,"g_dbus_interface_info_lookup_signal","","",null,null],[5,"g_dbus_interface_info_ref","","",null,null],[5,"g_dbus_interface_info_unref","","",null,null],[5,"g_dbus_method_info_get_type","","",null,null],[5,"g_dbus_method_info_ref","","",null,null],[5,"g_dbus_method_info_unref","","",null,null],[5,"g_dbus_node_info_get_type","","",null,null],[5,"g_dbus_node_info_new_for_xml","","",null,null],[5,"g_dbus_node_info_generate_xml","","",null,null],[5,"g_dbus_node_info_lookup_interface","","",null,null],[5,"g_dbus_node_info_ref","","",null,null],[5,"g_dbus_node_info_unref","","",null,null],[5,"g_dbus_property_info_get_type","","",null,null],[5,"g_dbus_property_info_ref","","",null,null],[5,"g_dbus_property_info_unref","","",null,null],[5,"g_dbus_signal_info_get_type","","",null,null],[5,"g_dbus_signal_info_ref","","",null,null],[5,"g_dbus_signal_info_unref","","",null,null],[5,"g_file_attribute_info_list_get_type","","",null,null],[5,"g_file_attribute_info_list_new","","",null,null],[5,"g_file_attribute_info_list_add","","",null,null],[5,"g_file_attribute_info_list_dup","","",null,null],[5,"g_file_attribute_info_list_lookup","","",null,null],[5,"g_file_attribute_info_list_ref","","",null,null],[5,"g_file_attribute_info_list_unref","","",null,null],[5,"g_file_attribute_matcher_get_type","","",null,null],[5,"g_file_attribute_matcher_new","","",null,null],[5,"g_file_attribute_matcher_enumerate_namespace","","",null,null],[5,"g_file_attribute_matcher_enumerate_next","","",null,null],[5,"g_file_attribute_matcher_matches","","",null,null],[5,"g_file_attribute_matcher_matches_only","","",null,null],[5,"g_file_attribute_matcher_ref","","",null,null],[5,"g_file_attribute_matcher_subtract","","",null,null],[5,"g_file_attribute_matcher_to_string","","",null,null],[5,"g_file_attribute_matcher_unref","","",null,null],[5,"g_io_extension_get_name","","",null,null],[5,"g_io_extension_get_priority","","",null,null],[5,"g_io_extension_get_type","","",null,null],[5,"g_io_extension_ref_class","","",null,null],[5,"g_io_extension_point_get_extension_by_name","","",null,null],[5,"g_io_extension_point_get_extensions","","",null,null],[5,"g_io_extension_point_get_required_type","","",null,null],[5,"g_io_extension_point_set_required_type","","",null,null],[5,"g_io_extension_point_implement","","",null,null],[5,"g_io_extension_point_lookup","","",null,null],[5,"g_io_extension_point_register","","",null,null],[5,"g_io_module_scope_block","","",null,null],[5,"g_io_module_scope_free","","",null,null],[5,"g_io_module_scope_new","","",null,null],[5,"g_io_scheduler_job_send_to_mainloop","","",null,null],[5,"g_io_scheduler_job_send_to_mainloop_async","","",null,null],[5,"g_resource_get_type","","",null,null],[5,"g_resource_new_from_data","","",null,null],[5,"g_resource_enumerate_children","","",null,null],[5,"g_resource_get_info","","",null,null],[5,"g_resource_lookup_data","","",null,null],[5,"g_resource_open_stream","","",null,null],[5,"g_resource_ref","","",null,null],[5,"g_resource_unref","","",null,null],[5,"g_resource_load","","",null,null],[5,"g_settings_schema_get_type","","",null,null],[5,"g_settings_schema_get_id","","",null,null],[5,"g_settings_schema_get_path","","",null,null],[5,"g_settings_schema_ref","","",null,null],[5,"g_settings_schema_unref","","",null,null],[5,"g_settings_schema_key_get_type","","",null,null],[5,"g_settings_schema_source_get_type","","",null,null],[5,"g_settings_schema_source_new_from_directory","","",null,null],[5,"g_settings_schema_source_lookup","","",null,null],[5,"g_settings_schema_source_ref","","",null,null],[5,"g_settings_schema_source_unref","","",null,null],[5,"g_settings_schema_source_get_default","","",null,null],[5,"g_srv_target_get_type","","",null,null],[5,"g_srv_target_new","","",null,null],[5,"g_srv_target_copy","","",null,null],[5,"g_srv_target_free","","",null,null],[5,"g_srv_target_get_hostname","","",null,null],[5,"g_srv_target_get_port","","",null,null],[5,"g_srv_target_get_priority","","",null,null],[5,"g_srv_target_get_weight","","",null,null],[5,"g_srv_target_list_sort","","",null,null],[5,"g_static_resource_fini","","",null,null],[5,"g_static_resource_get_resource","","",null,null],[5,"g_static_resource_init","","",null,null],[5,"g_unix_mount_point_compare","","",null,null],[5,"g_unix_mount_point_free","","",null,null],[5,"g_unix_mount_point_get_device_path","","",null,null],[5,"g_unix_mount_point_get_fs_type","","",null,null],[5,"g_unix_mount_point_get_mount_path","","",null,null],[5,"g_unix_mount_point_get_options","","",null,null],[5,"g_unix_mount_point_guess_can_eject","","",null,null],[5,"g_unix_mount_point_guess_icon","","",null,null],[5,"g_unix_mount_point_guess_name","","",null,null],[5,"g_unix_mount_point_is_loopback","","",null,null],[5,"g_unix_mount_point_is_readonly","","",null,null],[5,"g_unix_mount_point_is_user_mountable","","",null,null],[5,"g_app_info_monitor_get_type","","",null,null],[5,"g_app_launch_context_get_type","","",null,null],[5,"g_app_launch_context_new","","",null,null],[5,"g_app_launch_context_get_display","","",null,null],[5,"g_app_launch_context_get_environment","","",null,null],[5,"g_app_launch_context_get_startup_notify_id","","",null,null],[5,"g_app_launch_context_launch_failed","","",null,null],[5,"g_app_launch_context_setenv","","",null,null],[5,"g_app_launch_context_unsetenv","","",null,null],[5,"g_application_get_type","","",null,null],[5,"g_application_new","","",null,null],[5,"g_application_get_default","","",null,null],[5,"g_application_id_is_valid","","",null,null],[5,"g_application_activate","","",null,null],[5,"g_application_get_application_id","","",null,null],[5,"g_application_get_flags","","",null,null],[5,"g_application_get_inactivity_timeout","","",null,null],[5,"g_application_get_is_registered","","",null,null],[5,"g_application_get_is_remote","","",null,null],[5,"g_application_hold","","",null,null],[5,"g_application_open","","",null,null],[5,"g_application_quit","","",null,null],[5,"g_application_register","","",null,null],[5,"g_application_release","","",null,null],[5,"g_application_run","","",null,null],[5,"g_application_set_action_group","","",null,null],[5,"g_application_set_application_id","","",null,null],[5,"g_application_set_default","","",null,null],[5,"g_application_set_flags","","",null,null],[5,"g_application_set_inactivity_timeout","","",null,null],[5,"g_application_command_line_get_type","","",null,null],[5,"g_application_command_line_get_arguments","","",null,null],[5,"g_application_command_line_get_cwd","","",null,null],[5,"g_application_command_line_get_environ","","",null,null],[5,"g_application_command_line_get_exit_status","","",null,null],[5,"g_application_command_line_get_is_remote","","",null,null],[5,"g_application_command_line_get_platform_data","","",null,null],[5,"g_application_command_line_getenv","","",null,null],[5,"g_application_command_line_print","","",null,null],[5,"g_application_command_line_printerr","","",null,null],[5,"g_application_command_line_set_exit_status","","",null,null],[5,"g_buffered_input_stream_get_type","","",null,null],[5,"g_buffered_input_stream_new","","",null,null],[5,"g_buffered_input_stream_new_sized","","",null,null],[5,"g_buffered_input_stream_fill","","",null,null],[5,"g_buffered_input_stream_fill_async","","",null,null],[5,"g_buffered_input_stream_fill_finish","","",null,null],[5,"g_buffered_input_stream_get_available","","",null,null],[5,"g_buffered_input_stream_get_buffer_size","","",null,null],[5,"g_buffered_input_stream_peek","","",null,null],[5,"g_buffered_input_stream_peek_buffer","","",null,null],[5,"g_buffered_input_stream_read_byte","","",null,null],[5,"g_buffered_input_stream_set_buffer_size","","",null,null],[5,"g_buffered_output_stream_get_type","","",null,null],[5,"g_buffered_output_stream_new","","",null,null],[5,"g_buffered_output_stream_new_sized","","",null,null],[5,"g_buffered_output_stream_get_auto_grow","","",null,null],[5,"g_buffered_output_stream_get_buffer_size","","",null,null],[5,"g_buffered_output_stream_set_auto_grow","","",null,null],[5,"g_buffered_output_stream_set_buffer_size","","",null,null],[5,"g_bytes_icon_get_type","","",null,null],[5,"g_cancellable_get_type","","",null,null],[5,"g_cancellable_new","","",null,null],[5,"g_cancellable_get_current","","",null,null],[5,"g_cancellable_cancel","","",null,null],[5,"g_cancellable_connect","","",null,null],[5,"g_cancellable_disconnect","","",null,null],[5,"g_cancellable_get_fd","","",null,null],[5,"g_cancellable_is_cancelled","","",null,null],[5,"g_cancellable_make_pollfd","","",null,null],[5,"g_cancellable_pop_current","","",null,null],[5,"g_cancellable_push_current","","",null,null],[5,"g_cancellable_release_fd","","",null,null],[5,"g_cancellable_reset","","",null,null],[5,"g_cancellable_set_error_if_cancelled","","",null,null],[5,"g_cancellable_source_new","","",null,null],[5,"g_charset_converter_get_type","","",null,null],[5,"g_charset_converter_new","","",null,null],[5,"g_charset_converter_get_num_fallbacks","","",null,null],[5,"g_charset_converter_get_use_fallback","","",null,null],[5,"g_charset_converter_set_use_fallback","","",null,null],[5,"g_converter_input_stream_get_type","","",null,null],[5,"g_converter_input_stream_new","","",null,null],[5,"g_converter_input_stream_get_converter","","",null,null],[5,"g_converter_output_stream_get_type","","",null,null],[5,"g_converter_output_stream_new","","",null,null],[5,"g_converter_output_stream_get_converter","","",null,null],[5,"g_credentials_get_type","","",null,null],[5,"g_credentials_new","","",null,null],[5,"g_credentials_get_native","","",null,null],[5,"g_credentials_get_unix_user","","",null,null],[5,"g_credentials_is_same_user","","",null,null],[5,"g_credentials_set_native","","",null,null],[5,"g_credentials_set_unix_user","","",null,null],[5,"g_credentials_to_string","","",null,null],[5,"g_dbus_action_group_get_type","","",null,null],[5,"g_dbus_action_group_get","","",null,null],[5,"g_dbus_auth_observer_get_type","","",null,null],[5,"g_dbus_auth_observer_new","","",null,null],[5,"g_dbus_auth_observer_authorize_authenticated_peer","","",null,null],[5,"g_dbus_connection_get_type","","",null,null],[5,"g_dbus_connection_new_finish","","",null,null],[5,"g_dbus_connection_new_for_address_finish","","",null,null],[5,"g_dbus_connection_new_for_address_sync","","",null,null],[5,"g_dbus_connection_new_sync","","",null,null],[5,"g_dbus_connection_new","","",null,null],[5,"g_dbus_connection_new_for_address","","",null,null],[5,"g_dbus_connection_add_filter","","",null,null],[5,"g_dbus_connection_call","","",null,null],[5,"g_dbus_connection_call_finish","","",null,null],[5,"g_dbus_connection_call_sync","","",null,null],[5,"g_dbus_connection_call_with_unix_fd_list","","",null,null],[5,"g_dbus_connection_call_with_unix_fd_list_finish","","",null,null],[5,"g_dbus_connection_call_with_unix_fd_list_sync","","",null,null],[5,"g_dbus_connection_close","","",null,null],[5,"g_dbus_connection_close_finish","","",null,null],[5,"g_dbus_connection_close_sync","","",null,null],[5,"g_dbus_connection_emit_signal","","",null,null],[5,"g_dbus_connection_export_action_group","","",null,null],[5,"g_dbus_connection_export_menu_model","","",null,null],[5,"g_dbus_connection_flush","","",null,null],[5,"g_dbus_connection_flush_finish","","",null,null],[5,"g_dbus_connection_flush_sync","","",null,null],[5,"g_dbus_connection_get_capabilities","","",null,null],[5,"g_dbus_connection_get_exit_on_close","","",null,null],[5,"g_dbus_connection_get_guid","","",null,null],[5,"g_dbus_connection_get_peer_credentials","","",null,null],[5,"g_dbus_connection_get_stream","","",null,null],[5,"g_dbus_connection_get_unique_name","","",null,null],[5,"g_dbus_connection_is_closed","","",null,null],[5,"g_dbus_connection_register_object","","",null,null],[5,"g_dbus_connection_register_subtree","","",null,null],[5,"g_dbus_connection_remove_filter","","",null,null],[5,"g_dbus_connection_send_message","","",null,null],[5,"g_dbus_connection_send_message_with_reply","","",null,null],[5,"g_dbus_connection_send_message_with_reply_finish","","",null,null],[5,"g_dbus_connection_send_message_with_reply_sync","","",null,null],[5,"g_dbus_connection_set_exit_on_close","","",null,null],[5,"g_dbus_connection_signal_subscribe","","",null,null],[5,"g_dbus_connection_signal_unsubscribe","","",null,null],[5,"g_dbus_connection_start_message_processing","","",null,null],[5,"g_dbus_connection_unexport_action_group","","",null,null],[5,"g_dbus_connection_unexport_menu_model","","",null,null],[5,"g_dbus_connection_unregister_object","","",null,null],[5,"g_dbus_connection_unregister_subtree","","",null,null],[5,"g_dbus_interface_skeleton_get_type","","",null,null],[5,"g_dbus_interface_skeleton_export","","",null,null],[5,"g_dbus_interface_skeleton_flush","","",null,null],[5,"g_dbus_interface_skeleton_get_connection","","",null,null],[5,"g_dbus_interface_skeleton_get_connections","","",null,null],[5,"g_dbus_interface_skeleton_get_flags","","",null,null],[5,"g_dbus_interface_skeleton_get_info","","",null,null],[5,"g_dbus_interface_skeleton_get_object_path","","",null,null],[5,"g_dbus_interface_skeleton_get_properties","","",null,null],[5,"g_dbus_interface_skeleton_get_vtable","","",null,null],[5,"g_dbus_interface_skeleton_has_connection","","",null,null],[5,"g_dbus_interface_skeleton_set_flags","","",null,null],[5,"g_dbus_interface_skeleton_unexport","","",null,null],[5,"g_dbus_interface_skeleton_unexport_from_connection","","",null,null],[5,"g_dbus_menu_model_get_type","","",null,null],[5,"g_dbus_menu_model_get","","",null,null],[5,"g_dbus_message_get_type","","",null,null],[5,"g_dbus_message_new","","",null,null],[5,"g_dbus_message_new_from_blob","","",null,null],[5,"g_dbus_message_new_method_call","","",null,null],[5,"g_dbus_message_new_signal","","",null,null],[5,"g_dbus_message_bytes_needed","","",null,null],[5,"g_dbus_message_copy","","",null,null],[5,"g_dbus_message_get_arg0","","",null,null],[5,"g_dbus_message_get_body","","",null,null],[5,"g_dbus_message_get_byte_order","","",null,null],[5,"g_dbus_message_get_destination","","",null,null],[5,"g_dbus_message_get_error_name","","",null,null],[5,"g_dbus_message_get_flags","","",null,null],[5,"g_dbus_message_get_header","","",null,null],[5,"g_dbus_message_get_header_fields","","",null,null],[5,"g_dbus_message_get_interface","","",null,null],[5,"g_dbus_message_get_locked","","",null,null],[5,"g_dbus_message_get_member","","",null,null],[5,"g_dbus_message_get_message_type","","",null,null],[5,"g_dbus_message_get_num_unix_fds","","",null,null],[5,"g_dbus_message_get_path","","",null,null],[5,"g_dbus_message_get_reply_serial","","",null,null],[5,"g_dbus_message_get_sender","","",null,null],[5,"g_dbus_message_get_serial","","",null,null],[5,"g_dbus_message_get_signature","","",null,null],[5,"g_dbus_message_get_unix_fd_list","","",null,null],[5,"g_dbus_message_lock","","",null,null],[5,"g_dbus_message_new_method_error","","",null,null],[5,"g_dbus_message_new_method_error_literal","","",null,null],[5,"g_dbus_message_new_method_reply","","",null,null],[5,"g_dbus_message_print","","",null,null],[5,"g_dbus_message_set_body","","",null,null],[5,"g_dbus_message_set_byte_order","","",null,null],[5,"g_dbus_message_set_destination","","",null,null],[5,"g_dbus_message_set_error_name","","",null,null],[5,"g_dbus_message_set_flags","","",null,null],[5,"g_dbus_message_set_header","","",null,null],[5,"g_dbus_message_set_interface","","",null,null],[5,"g_dbus_message_set_member","","",null,null],[5,"g_dbus_message_set_message_type","","",null,null],[5,"g_dbus_message_set_num_unix_fds","","",null,null],[5,"g_dbus_message_set_path","","",null,null],[5,"g_dbus_message_set_reply_serial","","",null,null],[5,"g_dbus_message_set_sender","","",null,null],[5,"g_dbus_message_set_serial","","",null,null],[5,"g_dbus_message_set_signature","","",null,null],[5,"g_dbus_message_set_unix_fd_list","","",null,null],[5,"g_dbus_message_to_blob","","",null,null],[5,"g_dbus_message_to_gerror","","",null,null],[5,"g_dbus_method_invocation_get_type","","",null,null],[5,"g_dbus_method_invocation_get_connection","","",null,null],[5,"g_dbus_method_invocation_get_interface_name","","",null,null],[5,"g_dbus_method_invocation_get_message","","",null,null],[5,"g_dbus_method_invocation_get_method_info","","",null,null],[5,"g_dbus_method_invocation_get_method_name","","",null,null],[5,"g_dbus_method_invocation_get_object_path","","",null,null],[5,"g_dbus_method_invocation_get_parameters","","",null,null],[5,"g_dbus_method_invocation_get_sender","","",null,null],[5,"g_dbus_method_invocation_get_user_data","","",null,null],[5,"g_dbus_method_invocation_return_dbus_error","","",null,null],[5,"g_dbus_method_invocation_return_error","","",null,null],[5,"g_dbus_method_invocation_return_error_literal","","",null,null],[5,"g_dbus_method_invocation_return_gerror","","",null,null],[5,"g_dbus_method_invocation_return_value","","",null,null],[5,"g_dbus_method_invocation_return_value_with_unix_fd_list","","",null,null],[5,"g_dbus_method_invocation_take_error","","",null,null],[5,"g_dbus_object_manager_client_get_type","","",null,null],[5,"g_dbus_object_manager_client_new_finish","","",null,null],[5,"g_dbus_object_manager_client_new_for_bus_finish","","",null,null],[5,"g_dbus_object_manager_client_new_for_bus_sync","","",null,null],[5,"g_dbus_object_manager_client_new_sync","","",null,null],[5,"g_dbus_object_manager_client_new","","",null,null],[5,"g_dbus_object_manager_client_new_for_bus","","",null,null],[5,"g_dbus_object_manager_client_get_connection","","",null,null],[5,"g_dbus_object_manager_client_get_flags","","",null,null],[5,"g_dbus_object_manager_client_get_name","","",null,null],[5,"g_dbus_object_manager_client_get_name_owner","","",null,null],[5,"g_dbus_object_manager_server_get_type","","",null,null],[5,"g_dbus_object_manager_server_new","","",null,null],[5,"g_dbus_object_manager_server_export","","",null,null],[5,"g_dbus_object_manager_server_export_uniquely","","",null,null],[5,"g_dbus_object_manager_server_get_connection","","",null,null],[5,"g_dbus_object_manager_server_set_connection","","",null,null],[5,"g_dbus_object_manager_server_unexport","","",null,null],[5,"g_dbus_object_proxy_get_type","","",null,null],[5,"g_dbus_object_proxy_new","","",null,null],[5,"g_dbus_object_proxy_get_connection","","",null,null],[5,"g_dbus_object_skeleton_get_type","","",null,null],[5,"g_dbus_object_skeleton_new","","",null,null],[5,"g_dbus_object_skeleton_add_interface","","",null,null],[5,"g_dbus_object_skeleton_flush","","",null,null],[5,"g_dbus_object_skeleton_remove_interface","","",null,null],[5,"g_dbus_object_skeleton_remove_interface_by_name","","",null,null],[5,"g_dbus_object_skeleton_set_object_path","","",null,null],[5,"g_dbus_proxy_get_type","","",null,null],[5,"g_dbus_proxy_new_finish","","",null,null],[5,"g_dbus_proxy_new_for_bus_finish","","",null,null],[5,"g_dbus_proxy_new_for_bus_sync","","",null,null],[5,"g_dbus_proxy_new_sync","","",null,null],[5,"g_dbus_proxy_new","","",null,null],[5,"g_dbus_proxy_new_for_bus","","",null,null],[5,"g_dbus_proxy_call","","",null,null],[5,"g_dbus_proxy_call_finish","","",null,null],[5,"g_dbus_proxy_call_sync","","",null,null],[5,"g_dbus_proxy_call_with_unix_fd_list","","",null,null],[5,"g_dbus_proxy_call_with_unix_fd_list_finish","","",null,null],[5,"g_dbus_proxy_call_with_unix_fd_list_sync","","",null,null],[5,"g_dbus_proxy_get_cached_property","","",null,null],[5,"g_dbus_proxy_get_cached_property_names","","",null,null],[5,"g_dbus_proxy_get_connection","","",null,null],[5,"g_dbus_proxy_get_default_timeout","","",null,null],[5,"g_dbus_proxy_get_flags","","",null,null],[5,"g_dbus_proxy_get_interface_info","","",null,null],[5,"g_dbus_proxy_get_interface_name","","",null,null],[5,"g_dbus_proxy_get_name","","",null,null],[5,"g_dbus_proxy_get_name_owner","","",null,null],[5,"g_dbus_proxy_get_object_path","","",null,null],[5,"g_dbus_proxy_set_cached_property","","",null,null],[5,"g_dbus_proxy_set_default_timeout","","",null,null],[5,"g_dbus_proxy_set_interface_info","","",null,null],[5,"g_dbus_server_get_type","","",null,null],[5,"g_dbus_server_new_sync","","",null,null],[5,"g_dbus_server_get_client_address","","",null,null],[5,"g_dbus_server_get_flags","","",null,null],[5,"g_dbus_server_get_guid","","",null,null],[5,"g_dbus_server_is_active","","",null,null],[5,"g_dbus_server_start","","",null,null],[5,"g_dbus_server_stop","","",null,null],[5,"g_data_input_stream_get_type","","",null,null],[5,"g_data_input_stream_new","","",null,null],[5,"g_data_input_stream_get_byte_order","","",null,null],[5,"g_data_input_stream_get_newline_type","","",null,null],[5,"g_data_input_stream_read_byte","","",null,null],[5,"g_data_input_stream_read_int16","","",null,null],[5,"g_data_input_stream_read_int32","","",null,null],[5,"g_data_input_stream_read_int64","","",null,null],[5,"g_data_input_stream_read_line","","",null,null],[5,"g_data_input_stream_read_line_async","","",null,null],[5,"g_data_input_stream_read_line_finish","","",null,null],[5,"g_data_input_stream_read_line_finish_utf8","","",null,null],[5,"g_data_input_stream_read_line_utf8","","",null,null],[5,"g_data_input_stream_read_uint16","","",null,null],[5,"g_data_input_stream_read_uint32","","",null,null],[5,"g_data_input_stream_read_uint64","","",null,null],[5,"g_data_input_stream_read_until","","",null,null],[5,"g_data_input_stream_read_until_async","","",null,null],[5,"g_data_input_stream_read_until_finish","","",null,null],[5,"g_data_input_stream_read_upto","","",null,null],[5,"g_data_input_stream_read_upto_async","","",null,null],[5,"g_data_input_stream_read_upto_finish","","",null,null],[5,"g_data_input_stream_set_byte_order","","",null,null],[5,"g_data_input_stream_set_newline_type","","",null,null],[5,"g_data_output_stream_get_type","","",null,null],[5,"g_data_output_stream_new","","",null,null],[5,"g_data_output_stream_get_byte_order","","",null,null],[5,"g_data_output_stream_put_byte","","",null,null],[5,"g_data_output_stream_put_int16","","",null,null],[5,"g_data_output_stream_put_int32","","",null,null],[5,"g_data_output_stream_put_int64","","",null,null],[5,"g_data_output_stream_put_string","","",null,null],[5,"g_data_output_stream_put_uint16","","",null,null],[5,"g_data_output_stream_put_uint32","","",null,null],[5,"g_data_output_stream_put_uint64","","",null,null],[5,"g_data_output_stream_set_byte_order","","",null,null],[5,"g_desktop_app_info_get_type","","",null,null],[5,"g_desktop_app_info_new","","",null,null],[5,"g_desktop_app_info_new_from_filename","","",null,null],[5,"g_desktop_app_info_new_from_keyfile","","",null,null],[5,"g_desktop_app_info_search","","",null,null],[5,"g_desktop_app_info_set_desktop_env","","",null,null],[5,"g_desktop_app_info_get_categories","","",null,null],[5,"g_desktop_app_info_get_filename","","",null,null],[5,"g_desktop_app_info_get_generic_name","","",null,null],[5,"g_desktop_app_info_get_is_hidden","","",null,null],[5,"g_desktop_app_info_get_keywords","","",null,null],[5,"g_desktop_app_info_get_nodisplay","","",null,null],[5,"g_desktop_app_info_get_show_in","","",null,null],[5,"g_desktop_app_info_launch_uris_as_manager","","",null,null],[5,"g_emblem_get_type","","",null,null],[5,"g_emblem_new","","",null,null],[5,"g_emblem_new_with_origin","","",null,null],[5,"g_emblem_get_icon","","",null,null],[5,"g_emblem_get_origin","","",null,null],[5,"g_emblemed_icon_get_type","","",null,null],[5,"g_emblemed_icon_new","","",null,null],[5,"g_emblemed_icon_add_emblem","","",null,null],[5,"g_emblemed_icon_clear_emblems","","",null,null],[5,"g_emblemed_icon_get_emblems","","",null,null],[5,"g_emblemed_icon_get_icon","","",null,null],[5,"g_file_enumerator_get_type","","",null,null],[5,"g_file_enumerator_close","","",null,null],[5,"g_file_enumerator_close_async","","",null,null],[5,"g_file_enumerator_close_finish","","",null,null],[5,"g_file_enumerator_get_container","","",null,null],[5,"g_file_enumerator_has_pending","","",null,null],[5,"g_file_enumerator_is_closed","","",null,null],[5,"g_file_enumerator_next_file","","",null,null],[5,"g_file_enumerator_next_files_async","","",null,null],[5,"g_file_enumerator_next_files_finish","","",null,null],[5,"g_file_enumerator_set_pending","","",null,null],[5,"g_file_io_stream_get_type","","",null,null],[5,"g_file_io_stream_get_etag","","",null,null],[5,"g_file_io_stream_query_info","","",null,null],[5,"g_file_io_stream_query_info_async","","",null,null],[5,"g_file_io_stream_query_info_finish","","",null,null],[5,"g_file_icon_get_type","","",null,null],[5,"g_file_icon_new","","",null,null],[5,"g_file_icon_get_file","","",null,null],[5,"g_file_info_get_type","","",null,null],[5,"g_file_info_new","","",null,null],[5,"g_file_info_clear_status","","",null,null],[5,"g_file_info_copy_into","","",null,null],[5,"g_file_info_dup","","",null,null],[5,"g_file_info_get_attribute_as_string","","",null,null],[5,"g_file_info_get_attribute_boolean","","",null,null],[5,"g_file_info_get_attribute_byte_string","","",null,null],[5,"g_file_info_get_attribute_data","","",null,null],[5,"g_file_info_get_attribute_int32","","",null,null],[5,"g_file_info_get_attribute_int64","","",null,null],[5,"g_file_info_get_attribute_object","","",null,null],[5,"g_file_info_get_attribute_status","","",null,null],[5,"g_file_info_get_attribute_string","","",null,null],[5,"g_file_info_get_attribute_stringv","","",null,null],[5,"g_file_info_get_attribute_type","","",null,null],[5,"g_file_info_get_attribute_uint32","","",null,null],[5,"g_file_info_get_attribute_uint64","","",null,null],[5,"g_file_info_get_content_type","","",null,null],[5,"g_file_info_get_display_name","","",null,null],[5,"g_file_info_get_edit_name","","",null,null],[5,"g_file_info_get_etag","","",null,null],[5,"g_file_info_get_file_type","","",null,null],[5,"g_file_info_get_icon","","",null,null],[5,"g_file_info_get_is_backup","","",null,null],[5,"g_file_info_get_is_hidden","","",null,null],[5,"g_file_info_get_is_symlink","","",null,null],[5,"g_file_info_get_modification_time","","",null,null],[5,"g_file_info_get_name","","",null,null],[5,"g_file_info_get_size","","",null,null],[5,"g_file_info_get_sort_order","","",null,null],[5,"g_file_info_get_symlink_target","","",null,null],[5,"g_file_info_has_attribute","","",null,null],[5,"g_file_info_has_namespace","","",null,null],[5,"g_file_info_list_attributes","","",null,null],[5,"g_file_info_remove_attribute","","",null,null],[5,"g_file_info_set_attribute","","",null,null],[5,"g_file_info_set_attribute_boolean","","",null,null],[5,"g_file_info_set_attribute_byte_string","","",null,null],[5,"g_file_info_set_attribute_int32","","",null,null],[5,"g_file_info_set_attribute_int64","","",null,null],[5,"g_file_info_set_attribute_mask","","",null,null],[5,"g_file_info_set_attribute_object","","",null,null],[5,"g_file_info_set_attribute_status","","",null,null],[5,"g_file_info_set_attribute_string","","",null,null],[5,"g_file_info_set_attribute_stringv","","",null,null],[5,"g_file_info_set_attribute_uint32","","",null,null],[5,"g_file_info_set_attribute_uint64","","",null,null],[5,"g_file_info_set_content_type","","",null,null],[5,"g_file_info_set_display_name","","",null,null],[5,"g_file_info_set_edit_name","","",null,null],[5,"g_file_info_set_file_type","","",null,null],[5,"g_file_info_set_icon","","",null,null],[5,"g_file_info_set_is_hidden","","",null,null],[5,"g_file_info_set_is_symlink","","",null,null],[5,"g_file_info_set_modification_time","","",null,null],[5,"g_file_info_set_name","","",null,null],[5,"g_file_info_set_size","","",null,null],[5,"g_file_info_set_sort_order","","",null,null],[5,"g_file_info_set_symlink_target","","",null,null],[5,"g_file_info_unset_attribute_mask","","",null,null],[5,"g_file_input_stream_get_type","","",null,null],[5,"g_file_input_stream_query_info","","",null,null],[5,"g_file_input_stream_query_info_async","","",null,null],[5,"g_file_input_stream_query_info_finish","","",null,null],[5,"g_file_monitor_get_type","","",null,null],[5,"g_file_monitor_cancel","","",null,null],[5,"g_file_monitor_emit_event","","",null,null],[5,"g_file_monitor_is_cancelled","","",null,null],[5,"g_file_monitor_set_rate_limit","","",null,null],[5,"g_file_output_stream_get_type","","",null,null],[5,"g_file_output_stream_get_etag","","",null,null],[5,"g_file_output_stream_query_info","","",null,null],[5,"g_file_output_stream_query_info_async","","",null,null],[5,"g_file_output_stream_query_info_finish","","",null,null],[5,"g_filename_completer_get_type","","",null,null],[5,"g_filename_completer_new","","",null,null],[5,"g_filename_completer_get_completion_suffix","","",null,null],[5,"g_filename_completer_get_completions","","",null,null],[5,"g_filename_completer_set_dirs_only","","",null,null],[5,"g_filter_input_stream_get_type","","",null,null],[5,"g_filter_input_stream_get_base_stream","","",null,null],[5,"g_filter_input_stream_get_close_base_stream","","",null,null],[5,"g_filter_input_stream_set_close_base_stream","","",null,null],[5,"g_filter_output_stream_get_type","","",null,null],[5,"g_filter_output_stream_get_base_stream","","",null,null],[5,"g_filter_output_stream_get_close_base_stream","","",null,null],[5,"g_filter_output_stream_set_close_base_stream","","",null,null],[5,"g_io_module_get_type","","",null,null],[5,"g_io_module_new","","",null,null],[5,"g_io_module_query","","",null,null],[5,"g_io_module_load","","",null,null],[5,"g_io_module_unload","","",null,null],[5,"g_io_stream_get_type","","",null,null],[5,"g_io_stream_splice_finish","","",null,null],[5,"g_io_stream_clear_pending","","",null,null],[5,"g_io_stream_close","","",null,null],[5,"g_io_stream_close_async","","",null,null],[5,"g_io_stream_close_finish","","",null,null],[5,"g_io_stream_get_input_stream","","",null,null],[5,"g_io_stream_get_output_stream","","",null,null],[5,"g_io_stream_has_pending","","",null,null],[5,"g_io_stream_is_closed","","",null,null],[5,"g_io_stream_set_pending","","",null,null],[5,"g_io_stream_splice_async","","",null,null],[5,"g_inet_address_get_type","","",null,null],[5,"g_inet_address_new_any","","",null,null],[5,"g_inet_address_new_from_bytes","","",null,null],[5,"g_inet_address_new_from_string","","",null,null],[5,"g_inet_address_new_loopback","","",null,null],[5,"g_inet_address_equal","","",null,null],[5,"g_inet_address_get_family","","",null,null],[5,"g_inet_address_get_is_any","","",null,null],[5,"g_inet_address_get_is_link_local","","",null,null],[5,"g_inet_address_get_is_loopback","","",null,null],[5,"g_inet_address_get_is_mc_global","","",null,null],[5,"g_inet_address_get_is_mc_link_local","","",null,null],[5,"g_inet_address_get_is_mc_node_local","","",null,null],[5,"g_inet_address_get_is_mc_org_local","","",null,null],[5,"g_inet_address_get_is_mc_site_local","","",null,null],[5,"g_inet_address_get_is_multicast","","",null,null],[5,"g_inet_address_get_is_site_local","","",null,null],[5,"g_inet_address_get_native_size","","",null,null],[5,"g_inet_address_to_bytes","","",null,null],[5,"g_inet_address_to_string","","",null,null],[5,"g_inet_address_mask_get_type","","",null,null],[5,"g_inet_address_mask_new","","",null,null],[5,"g_inet_address_mask_new_from_string","","",null,null],[5,"g_inet_address_mask_equal","","",null,null],[5,"g_inet_address_mask_get_address","","",null,null],[5,"g_inet_address_mask_get_family","","",null,null],[5,"g_inet_address_mask_get_length","","",null,null],[5,"g_inet_address_mask_matches","","",null,null],[5,"g_inet_address_mask_to_string","","",null,null],[5,"g_inet_socket_address_get_type","","",null,null],[5,"g_inet_socket_address_new","","",null,null],[5,"g_inet_socket_address_get_address","","",null,null],[5,"g_inet_socket_address_get_flowinfo","","",null,null],[5,"g_inet_socket_address_get_port","","",null,null],[5,"g_inet_socket_address_get_scope_id","","",null,null],[5,"g_input_stream_get_type","","",null,null],[5,"g_input_stream_clear_pending","","",null,null],[5,"g_input_stream_close","","",null,null],[5,"g_input_stream_close_async","","",null,null],[5,"g_input_stream_close_finish","","",null,null],[5,"g_input_stream_has_pending","","",null,null],[5,"g_input_stream_is_closed","","",null,null],[5,"g_input_stream_read","","",null,null],[5,"g_input_stream_read_all","","",null,null],[5,"g_input_stream_read_async","","",null,null],[5,"g_input_stream_read_finish","","",null,null],[5,"g_input_stream_set_pending","","",null,null],[5,"g_input_stream_skip","","",null,null],[5,"g_input_stream_skip_async","","",null,null],[5,"g_input_stream_skip_finish","","",null,null],[5,"g_list_store_get_type","","",null,null],[5,"g_memory_input_stream_get_type","","",null,null],[5,"g_memory_input_stream_new","","",null,null],[5,"g_memory_input_stream_new_from_data","","",null,null],[5,"g_memory_input_stream_add_data","","",null,null],[5,"g_memory_output_stream_get_type","","",null,null],[5,"g_memory_output_stream_new","","",null,null],[5,"g_memory_output_stream_get_data","","",null,null],[5,"g_memory_output_stream_get_data_size","","",null,null],[5,"g_memory_output_stream_get_size","","",null,null],[5,"g_memory_output_stream_steal_data","","",null,null],[5,"g_menu_get_type","","",null,null],[5,"g_menu_new","","",null,null],[5,"g_menu_append","","",null,null],[5,"g_menu_append_item","","",null,null],[5,"g_menu_append_section","","",null,null],[5,"g_menu_append_submenu","","",null,null],[5,"g_menu_freeze","","",null,null],[5,"g_menu_insert","","",null,null],[5,"g_menu_insert_item","","",null,null],[5,"g_menu_insert_section","","",null,null],[5,"g_menu_insert_submenu","","",null,null],[5,"g_menu_prepend","","",null,null],[5,"g_menu_prepend_item","","",null,null],[5,"g_menu_prepend_section","","",null,null],[5,"g_menu_prepend_submenu","","",null,null],[5,"g_menu_remove","","",null,null],[5,"g_menu_attribute_iter_get_type","","",null,null],[5,"g_menu_attribute_iter_get_name","","",null,null],[5,"g_menu_attribute_iter_get_next","","",null,null],[5,"g_menu_attribute_iter_get_value","","",null,null],[5,"g_menu_attribute_iter_next","","",null,null],[5,"g_menu_item_get_type","","",null,null],[5,"g_menu_item_new","","",null,null],[5,"g_menu_item_new_section","","",null,null],[5,"g_menu_item_new_submenu","","",null,null],[5,"g_menu_item_set_action_and_target","","",null,null],[5,"g_menu_item_set_action_and_target_value","","",null,null],[5,"g_menu_item_set_attribute","","",null,null],[5,"g_menu_item_set_attribute_value","","",null,null],[5,"g_menu_item_set_detailed_action","","",null,null],[5,"g_menu_item_set_label","","",null,null],[5,"g_menu_item_set_link","","",null,null],[5,"g_menu_item_set_section","","",null,null],[5,"g_menu_item_set_submenu","","",null,null],[5,"g_menu_link_iter_get_type","","",null,null],[5,"g_menu_link_iter_get_name","","",null,null],[5,"g_menu_link_iter_get_next","","",null,null],[5,"g_menu_link_iter_get_value","","",null,null],[5,"g_menu_link_iter_next","","",null,null],[5,"g_menu_model_get_type","","",null,null],[5,"g_menu_model_get_item_attribute","","",null,null],[5,"g_menu_model_get_item_attribute_value","","",null,null],[5,"g_menu_model_get_item_link","","",null,null],[5,"g_menu_model_get_n_items","","",null,null],[5,"g_menu_model_is_mutable","","",null,null],[5,"g_menu_model_items_changed","","",null,null],[5,"g_menu_model_iterate_item_attributes","","",null,null],[5,"g_menu_model_iterate_item_links","","",null,null],[5,"g_mount_operation_get_type","","",null,null],[5,"g_mount_operation_new","","",null,null],[5,"g_mount_operation_get_anonymous","","",null,null],[5,"g_mount_operation_get_choice","","",null,null],[5,"g_mount_operation_get_domain","","",null,null],[5,"g_mount_operation_get_password","","",null,null],[5,"g_mount_operation_get_password_save","","",null,null],[5,"g_mount_operation_get_username","","",null,null],[5,"g_mount_operation_reply","","",null,null],[5,"g_mount_operation_set_anonymous","","",null,null],[5,"g_mount_operation_set_choice","","",null,null],[5,"g_mount_operation_set_domain","","",null,null],[5,"g_mount_operation_set_password","","",null,null],[5,"g_mount_operation_set_password_save","","",null,null],[5,"g_mount_operation_set_username","","",null,null],[5,"g_native_volume_monitor_get_type","","",null,null],[5,"g_network_address_get_type","","",null,null],[5,"g_network_address_new","","",null,null],[5,"g_network_address_parse","","",null,null],[5,"g_network_address_parse_uri","","",null,null],[5,"g_network_address_get_hostname","","",null,null],[5,"g_network_address_get_port","","",null,null],[5,"g_network_address_get_scheme","","",null,null],[5,"g_network_service_get_type","","",null,null],[5,"g_network_service_new","","",null,null],[5,"g_network_service_get_domain","","",null,null],[5,"g_network_service_get_protocol","","",null,null],[5,"g_network_service_get_scheme","","",null,null],[5,"g_network_service_get_service","","",null,null],[5,"g_network_service_set_scheme","","",null,null],[5,"g_notification_get_type","","",null,null],[5,"g_notification_set_priority","","",null,null],[5,"g_output_stream_get_type","","",null,null],[5,"g_output_stream_clear_pending","","",null,null],[5,"g_output_stream_close","","",null,null],[5,"g_output_stream_close_async","","",null,null],[5,"g_output_stream_close_finish","","",null,null],[5,"g_output_stream_flush","","",null,null],[5,"g_output_stream_flush_async","","",null,null],[5,"g_output_stream_flush_finish","","",null,null],[5,"g_output_stream_has_pending","","",null,null],[5,"g_output_stream_is_closed","","",null,null],[5,"g_output_stream_is_closing","","",null,null],[5,"g_output_stream_set_pending","","",null,null],[5,"g_output_stream_splice","","",null,null],[5,"g_output_stream_splice_async","","",null,null],[5,"g_output_stream_splice_finish","","",null,null],[5,"g_output_stream_write","","",null,null],[5,"g_output_stream_write_all","","",null,null],[5,"g_output_stream_write_async","","",null,null],[5,"g_output_stream_write_bytes","","",null,null],[5,"g_output_stream_write_bytes_async","","",null,null],[5,"g_output_stream_write_bytes_finish","","",null,null],[5,"g_output_stream_write_finish","","",null,null],[5,"g_permission_get_type","","",null,null],[5,"g_permission_acquire","","",null,null],[5,"g_permission_acquire_async","","",null,null],[5,"g_permission_acquire_finish","","",null,null],[5,"g_permission_get_allowed","","",null,null],[5,"g_permission_get_can_acquire","","",null,null],[5,"g_permission_get_can_release","","",null,null],[5,"g_permission_impl_update","","",null,null],[5,"g_permission_release","","",null,null],[5,"g_permission_release_async","","",null,null],[5,"g_permission_release_finish","","",null,null],[5,"g_property_action_get_type","","",null,null],[5,"g_proxy_address_get_type","","",null,null],[5,"g_proxy_address_new","","",null,null],[5,"g_proxy_address_get_destination_hostname","","",null,null],[5,"g_proxy_address_get_destination_port","","",null,null],[5,"g_proxy_address_get_password","","",null,null],[5,"g_proxy_address_get_protocol","","",null,null],[5,"g_proxy_address_get_username","","",null,null],[5,"g_proxy_address_enumerator_get_type","","",null,null],[5,"g_resolver_get_type","","",null,null],[5,"g_resolver_free_addresses","","",null,null],[5,"g_resolver_free_targets","","",null,null],[5,"g_resolver_get_default","","",null,null],[5,"g_resolver_lookup_by_address","","",null,null],[5,"g_resolver_lookup_by_address_async","","",null,null],[5,"g_resolver_lookup_by_address_finish","","",null,null],[5,"g_resolver_lookup_by_name","","",null,null],[5,"g_resolver_lookup_by_name_async","","",null,null],[5,"g_resolver_lookup_by_name_finish","","",null,null],[5,"g_resolver_lookup_service","","",null,null],[5,"g_resolver_lookup_service_async","","",null,null],[5,"g_resolver_lookup_service_finish","","",null,null],[5,"g_resolver_set_default","","",null,null],[5,"g_settings_get_type","","",null,null],[5,"g_settings_new","","",null,null],[5,"g_settings_new_full","","",null,null],[5,"g_settings_new_with_backend","","",null,null],[5,"g_settings_new_with_backend_and_path","","",null,null],[5,"g_settings_new_with_path","","",null,null],[5,"g_settings_list_relocatable_schemas","","",null,null],[5,"g_settings_list_schemas","","",null,null],[5,"g_settings_sync","","",null,null],[5,"g_settings_unbind","","",null,null],[5,"g_settings_apply","","",null,null],[5,"g_settings_bind","","",null,null],[5,"g_settings_bind_with_mapping","","",null,null],[5,"g_settings_bind_writable","","",null,null],[5,"g_settings_create_action","","",null,null],[5,"g_settings_delay","","",null,null],[5,"g_settings_get","","",null,null],[5,"g_settings_get_boolean","","",null,null],[5,"g_settings_get_child","","",null,null],[5,"g_settings_get_double","","",null,null],[5,"g_settings_get_enum","","",null,null],[5,"g_settings_get_flags","","",null,null],[5,"g_settings_get_has_unapplied","","",null,null],[5,"g_settings_get_int","","",null,null],[5,"g_settings_get_mapped","","",null,null],[5,"g_settings_get_range","","",null,null],[5,"g_settings_get_string","","",null,null],[5,"g_settings_get_strv","","",null,null],[5,"g_settings_get_uint","","",null,null],[5,"g_settings_get_value","","",null,null],[5,"g_settings_is_writable","","",null,null],[5,"g_settings_list_children","","",null,null],[5,"g_settings_list_keys","","",null,null],[5,"g_settings_range_check","","",null,null],[5,"g_settings_reset","","",null,null],[5,"g_settings_revert","","",null,null],[5,"g_settings_set","","",null,null],[5,"g_settings_set_boolean","","",null,null],[5,"g_settings_set_double","","",null,null],[5,"g_settings_set_enum","","",null,null],[5,"g_settings_set_flags","","",null,null],[5,"g_settings_set_int","","",null,null],[5,"g_settings_set_string","","",null,null],[5,"g_settings_set_strv","","",null,null],[5,"g_settings_set_uint","","",null,null],[5,"g_settings_set_value","","",null,null],[5,"g_simple_action_get_type","","",null,null],[5,"g_simple_action_new","","",null,null],[5,"g_simple_action_new_stateful","","",null,null],[5,"g_simple_action_set_enabled","","",null,null],[5,"g_simple_action_set_state","","",null,null],[5,"g_simple_action_group_get_type","","",null,null],[5,"g_simple_action_group_new","","",null,null],[5,"g_simple_action_group_add_entries","","",null,null],[5,"g_simple_action_group_insert","","",null,null],[5,"g_simple_action_group_lookup","","",null,null],[5,"g_simple_action_group_remove","","",null,null],[5,"g_simple_async_result_get_type","","",null,null],[5,"g_simple_async_result_new","","",null,null],[5,"g_simple_async_result_new_error","","",null,null],[5,"g_simple_async_result_new_from_error","","",null,null],[5,"g_simple_async_result_new_take_error","","",null,null],[5,"g_simple_async_result_is_valid","","",null,null],[5,"g_simple_async_result_complete","","",null,null],[5,"g_simple_async_result_complete_in_idle","","",null,null],[5,"g_simple_async_result_get_op_res_gboolean","","",null,null],[5,"g_simple_async_result_get_op_res_gpointer","","",null,null],[5,"g_simple_async_result_get_op_res_gssize","","",null,null],[5,"g_simple_async_result_get_source_tag","","",null,null],[5,"g_simple_async_result_propagate_error","","",null,null],[5,"g_simple_async_result_run_in_thread","","",null,null],[5,"g_simple_async_result_set_check_cancellable","","",null,null],[5,"g_simple_async_result_set_error","","",null,null],[5,"g_simple_async_result_set_from_error","","",null,null],[5,"g_simple_async_result_set_handle_cancellation","","",null,null],[5,"g_simple_async_result_set_op_res_gboolean","","",null,null],[5,"g_simple_async_result_set_op_res_gpointer","","",null,null],[5,"g_simple_async_result_set_op_res_gssize","","",null,null],[5,"g_simple_async_result_take_error","","",null,null],[5,"g_simple_io_stream_get_type","","",null,null],[5,"g_simple_permission_get_type","","",null,null],[5,"g_simple_permission_new","","",null,null],[5,"g_simple_proxy_resolver_get_type","","",null,null],[5,"g_socket_get_type","","",null,null],[5,"g_socket_new","","",null,null],[5,"g_socket_new_from_fd","","",null,null],[5,"g_socket_accept","","",null,null],[5,"g_socket_bind","","",null,null],[5,"g_socket_check_connect_result","","",null,null],[5,"g_socket_close","","",null,null],[5,"g_socket_condition_check","","",null,null],[5,"g_socket_condition_timed_wait","","",null,null],[5,"g_socket_condition_wait","","",null,null],[5,"g_socket_connect","","",null,null],[5,"g_socket_connection_factory_create_connection","","",null,null],[5,"g_socket_create_source","","",null,null],[5,"g_socket_get_available_bytes","","",null,null],[5,"g_socket_get_blocking","","",null,null],[5,"g_socket_get_broadcast","","",null,null],[5,"g_socket_get_credentials","","",null,null],[5,"g_socket_get_family","","",null,null],[5,"g_socket_get_fd","","",null,null],[5,"g_socket_get_keepalive","","",null,null],[5,"g_socket_get_listen_backlog","","",null,null],[5,"g_socket_get_local_address","","",null,null],[5,"g_socket_get_multicast_loopback","","",null,null],[5,"g_socket_get_multicast_ttl","","",null,null],[5,"g_socket_get_protocol","","",null,null],[5,"g_socket_get_remote_address","","",null,null],[5,"g_socket_get_socket_type","","",null,null],[5,"g_socket_get_timeout","","",null,null],[5,"g_socket_get_ttl","","",null,null],[5,"g_socket_is_closed","","",null,null],[5,"g_socket_is_connected","","",null,null],[5,"g_socket_join_multicast_group","","",null,null],[5,"g_socket_leave_multicast_group","","",null,null],[5,"g_socket_listen","","",null,null],[5,"g_socket_receive","","",null,null],[5,"g_socket_receive_from","","",null,null],[5,"g_socket_receive_message","","",null,null],[5,"g_socket_receive_with_blocking","","",null,null],[5,"g_socket_send","","",null,null],[5,"g_socket_send_message","","",null,null],[5,"g_socket_send_to","","",null,null],[5,"g_socket_send_with_blocking","","",null,null],[5,"g_socket_set_blocking","","",null,null],[5,"g_socket_set_broadcast","","",null,null],[5,"g_socket_set_keepalive","","",null,null],[5,"g_socket_set_listen_backlog","","",null,null],[5,"g_socket_set_multicast_loopback","","",null,null],[5,"g_socket_set_multicast_ttl","","",null,null],[5,"g_socket_set_timeout","","",null,null],[5,"g_socket_set_ttl","","",null,null],[5,"g_socket_shutdown","","",null,null],[5,"g_socket_speaks_ipv4","","",null,null],[5,"g_socket_address_get_type","","",null,null],[5,"g_socket_address_new_from_native","","",null,null],[5,"g_socket_address_get_family","","",null,null],[5,"g_socket_address_get_native_size","","",null,null],[5,"g_socket_address_to_native","","",null,null],[5,"g_socket_address_enumerator_get_type","","",null,null],[5,"g_socket_address_enumerator_next","","",null,null],[5,"g_socket_address_enumerator_next_async","","",null,null],[5,"g_socket_address_enumerator_next_finish","","",null,null],[5,"g_socket_client_get_type","","",null,null],[5,"g_socket_client_new","","",null,null],[5,"g_socket_client_add_application_proxy","","",null,null],[5,"g_socket_client_connect","","",null,null],[5,"g_socket_client_connect_async","","",null,null],[5,"g_socket_client_connect_finish","","",null,null],[5,"g_socket_client_connect_to_host","","",null,null],[5,"g_socket_client_connect_to_host_async","","",null,null],[5,"g_socket_client_connect_to_host_finish","","",null,null],[5,"g_socket_client_connect_to_service","","",null,null],[5,"g_socket_client_connect_to_service_async","","",null,null],[5,"g_socket_client_connect_to_service_finish","","",null,null],[5,"g_socket_client_connect_to_uri","","",null,null],[5,"g_socket_client_connect_to_uri_async","","",null,null],[5,"g_socket_client_connect_to_uri_finish","","",null,null],[5,"g_socket_client_get_enable_proxy","","",null,null],[5,"g_socket_client_get_family","","",null,null],[5,"g_socket_client_get_local_address","","",null,null],[5,"g_socket_client_get_protocol","","",null,null],[5,"g_socket_client_get_socket_type","","",null,null],[5,"g_socket_client_get_timeout","","",null,null],[5,"g_socket_client_get_tls","","",null,null],[5,"g_socket_client_get_tls_validation_flags","","",null,null],[5,"g_socket_client_set_enable_proxy","","",null,null],[5,"g_socket_client_set_family","","",null,null],[5,"g_socket_client_set_local_address","","",null,null],[5,"g_socket_client_set_protocol","","",null,null],[5,"g_socket_client_set_socket_type","","",null,null],[5,"g_socket_client_set_timeout","","",null,null],[5,"g_socket_client_set_tls","","",null,null],[5,"g_socket_client_set_tls_validation_flags","","",null,null],[5,"g_socket_connection_get_type","","",null,null],[5,"g_socket_connection_factory_lookup_type","","",null,null],[5,"g_socket_connection_factory_register_type","","",null,null],[5,"g_socket_connection_connect","","",null,null],[5,"g_socket_connection_connect_async","","",null,null],[5,"g_socket_connection_connect_finish","","",null,null],[5,"g_socket_connection_get_local_address","","",null,null],[5,"g_socket_connection_get_remote_address","","",null,null],[5,"g_socket_connection_get_socket","","",null,null],[5,"g_socket_connection_is_connected","","",null,null],[5,"g_socket_control_message_get_type","","",null,null],[5,"g_socket_control_message_deserialize","","",null,null],[5,"g_socket_control_message_get_level","","",null,null],[5,"g_socket_control_message_get_msg_type","","",null,null],[5,"g_socket_control_message_get_size","","",null,null],[5,"g_socket_control_message_serialize","","",null,null],[5,"g_socket_listener_get_type","","",null,null],[5,"g_socket_listener_new","","",null,null],[5,"g_socket_listener_accept","","",null,null],[5,"g_socket_listener_accept_async","","",null,null],[5,"g_socket_listener_accept_finish","","",null,null],[5,"g_socket_listener_accept_socket","","",null,null],[5,"g_socket_listener_accept_socket_async","","",null,null],[5,"g_socket_listener_accept_socket_finish","","",null,null],[5,"g_socket_listener_add_address","","",null,null],[5,"g_socket_listener_add_any_inet_port","","",null,null],[5,"g_socket_listener_add_inet_port","","",null,null],[5,"g_socket_listener_add_socket","","",null,null],[5,"g_socket_listener_close","","",null,null],[5,"g_socket_listener_set_backlog","","",null,null],[5,"g_socket_service_get_type","","",null,null],[5,"g_socket_service_new","","",null,null],[5,"g_socket_service_is_active","","",null,null],[5,"g_socket_service_start","","",null,null],[5,"g_socket_service_stop","","",null,null],[5,"g_subprocess_get_type","","",null,null],[5,"g_subprocess_communicate_async","","",null,null],[5,"g_subprocess_communicate_finish","","",null,null],[5,"g_subprocess_communicate_utf8","","",null,null],[5,"g_subprocess_communicate_utf8_async","","",null,null],[5,"g_subprocess_communicate_utf8_finish","","",null,null],[5,"g_subprocess_get_identifier","","",null,null],[5,"g_subprocess_launcher_get_type","","",null,null],[5,"g_subprocess_launcher_take_fd","","",null,null],[5,"g_task_get_type","","",null,null],[5,"g_tcp_connection_get_type","","",null,null],[5,"g_tcp_connection_get_graceful_disconnect","","",null,null],[5,"g_tcp_connection_set_graceful_disconnect","","",null,null],[5,"g_tcp_wrapper_connection_get_type","","",null,null],[5,"g_tcp_wrapper_connection_new","","",null,null],[5,"g_tcp_wrapper_connection_get_base_io_stream","","",null,null],[5,"g_test_dbus_get_type","","",null,null],[5,"g_test_dbus_new","","",null,null],[5,"g_test_dbus_unset","","",null,null],[5,"g_test_dbus_add_service_dir","","",null,null],[5,"g_test_dbus_down","","",null,null],[5,"g_test_dbus_get_bus_address","","",null,null],[5,"g_test_dbus_get_flags","","",null,null],[5,"g_test_dbus_stop","","",null,null],[5,"g_test_dbus_up","","",null,null],[5,"g_themed_icon_get_type","","",null,null],[5,"g_themed_icon_new","","",null,null],[5,"g_themed_icon_new_from_names","","",null,null],[5,"g_themed_icon_new_with_default_fallbacks","","",null,null],[5,"g_themed_icon_append_name","","",null,null],[5,"g_themed_icon_get_names","","",null,null],[5,"g_themed_icon_prepend_name","","",null,null],[5,"g_threaded_socket_service_get_type","","",null,null],[5,"g_threaded_socket_service_new","","",null,null],[5,"g_tls_certificate_get_type","","",null,null],[5,"g_tls_certificate_new_from_file","","",null,null],[5,"g_tls_certificate_new_from_files","","",null,null],[5,"g_tls_certificate_new_from_pem","","",null,null],[5,"g_tls_certificate_list_new_from_file","","",null,null],[5,"g_tls_certificate_get_issuer","","",null,null],[5,"g_tls_certificate_verify","","",null,null],[5,"g_tls_connection_get_type","","",null,null],[5,"g_tls_connection_emit_accept_certificate","","",null,null],[5,"g_tls_connection_get_certificate","","",null,null],[5,"g_tls_connection_get_database","","",null,null],[5,"g_tls_connection_get_interaction","","",null,null],[5,"g_tls_connection_get_peer_certificate","","",null,null],[5,"g_tls_connection_get_peer_certificate_errors","","",null,null],[5,"g_tls_connection_get_rehandshake_mode","","",null,null],[5,"g_tls_connection_get_require_close_notify","","",null,null],[5,"g_tls_connection_get_use_system_certdb","","",null,null],[5,"g_tls_connection_handshake","","",null,null],[5,"g_tls_connection_handshake_async","","",null,null],[5,"g_tls_connection_handshake_finish","","",null,null],[5,"g_tls_connection_set_certificate","","",null,null],[5,"g_tls_connection_set_database","","",null,null],[5,"g_tls_connection_set_interaction","","",null,null],[5,"g_tls_connection_set_rehandshake_mode","","",null,null],[5,"g_tls_connection_set_require_close_notify","","",null,null],[5,"g_tls_connection_set_use_system_certdb","","",null,null],[5,"g_tls_database_get_type","","",null,null],[5,"g_tls_database_create_certificate_handle","","",null,null],[5,"g_tls_database_lookup_certificate_for_handle","","",null,null],[5,"g_tls_database_lookup_certificate_for_handle_async","","",null,null],[5,"g_tls_database_lookup_certificate_for_handle_finish","","",null,null],[5,"g_tls_database_lookup_certificate_issuer","","",null,null],[5,"g_tls_database_lookup_certificate_issuer_async","","",null,null],[5,"g_tls_database_lookup_certificate_issuer_finish","","",null,null],[5,"g_tls_database_lookup_certificates_issued_by","","",null,null],[5,"g_tls_database_lookup_certificates_issued_by_async","","",null,null],[5,"g_tls_database_lookup_certificates_issued_by_finish","","",null,null],[5,"g_tls_database_verify_chain","","",null,null],[5,"g_tls_database_verify_chain_async","","",null,null],[5,"g_tls_database_verify_chain_finish","","",null,null],[5,"g_tls_interaction_get_type","","",null,null],[5,"g_tls_interaction_ask_password","","",null,null],[5,"g_tls_interaction_ask_password_async","","",null,null],[5,"g_tls_interaction_ask_password_finish","","",null,null],[5,"g_tls_interaction_invoke_ask_password","","",null,null],[5,"g_tls_password_get_type","","",null,null],[5,"g_tls_password_new","","",null,null],[5,"g_tls_password_get_description","","",null,null],[5,"g_tls_password_get_flags","","",null,null],[5,"g_tls_password_get_value","","",null,null],[5,"g_tls_password_get_warning","","",null,null],[5,"g_tls_password_set_description","","",null,null],[5,"g_tls_password_set_flags","","",null,null],[5,"g_tls_password_set_value","","",null,null],[5,"g_tls_password_set_value_full","","",null,null],[5,"g_tls_password_set_warning","","",null,null],[5,"g_unix_connection_get_type","","",null,null],[5,"g_unix_connection_receive_credentials","","",null,null],[5,"g_unix_connection_receive_credentials_async","","",null,null],[5,"g_unix_connection_receive_credentials_finish","","",null,null],[5,"g_unix_connection_receive_fd","","",null,null],[5,"g_unix_connection_send_credentials","","",null,null],[5,"g_unix_connection_send_credentials_async","","",null,null],[5,"g_unix_connection_send_credentials_finish","","",null,null],[5,"g_unix_connection_send_fd","","",null,null],[5,"g_unix_credentials_message_get_type","","",null,null],[5,"g_unix_credentials_message_new","","",null,null],[5,"g_unix_credentials_message_new_with_credentials","","",null,null],[5,"g_unix_credentials_message_is_supported","","",null,null],[5,"g_unix_credentials_message_get_credentials","","",null,null],[5,"g_unix_fd_list_get_type","","",null,null],[5,"g_unix_fd_list_new","","",null,null],[5,"g_unix_fd_list_new_from_array","","",null,null],[5,"g_unix_fd_list_append","","",null,null],[5,"g_unix_fd_list_get","","",null,null],[5,"g_unix_fd_list_get_length","","",null,null],[5,"g_unix_fd_list_peek_fds","","",null,null],[5,"g_unix_fd_list_steal_fds","","",null,null],[5,"g_unix_fd_message_get_type","","",null,null],[5,"g_unix_fd_message_new","","",null,null],[5,"g_unix_fd_message_new_with_fd_list","","",null,null],[5,"g_unix_fd_message_append_fd","","",null,null],[5,"g_unix_fd_message_get_fd_list","","",null,null],[5,"g_unix_fd_message_steal_fds","","",null,null],[5,"g_unix_input_stream_get_type","","",null,null],[5,"g_unix_input_stream_new","","",null,null],[5,"g_unix_input_stream_get_close_fd","","",null,null],[5,"g_unix_input_stream_get_fd","","",null,null],[5,"g_unix_input_stream_set_close_fd","","",null,null],[5,"g_unix_mount_monitor_get_type","","",null,null],[5,"g_unix_mount_monitor_new","","",null,null],[5,"g_unix_mount_monitor_set_rate_limit","","",null,null],[5,"g_unix_output_stream_get_type","","",null,null],[5,"g_unix_output_stream_new","","",null,null],[5,"g_unix_output_stream_get_close_fd","","",null,null],[5,"g_unix_output_stream_get_fd","","",null,null],[5,"g_unix_output_stream_set_close_fd","","",null,null],[5,"g_unix_socket_address_get_type","","",null,null],[5,"g_unix_socket_address_new","","",null,null],[5,"g_unix_socket_address_new_abstract","","",null,null],[5,"g_unix_socket_address_new_with_type","","",null,null],[5,"g_unix_socket_address_abstract_names_supported","","",null,null],[5,"g_unix_socket_address_get_address_type","","",null,null],[5,"g_unix_socket_address_get_is_abstract","","",null,null],[5,"g_unix_socket_address_get_path","","",null,null],[5,"g_unix_socket_address_get_path_len","","",null,null],[5,"g_vfs_get_type","","",null,null],[5,"g_vfs_get_default","","",null,null],[5,"g_vfs_get_local","","",null,null],[5,"g_vfs_get_file_for_path","","",null,null],[5,"g_vfs_get_file_for_uri","","",null,null],[5,"g_vfs_get_supported_uri_schemes","","",null,null],[5,"g_vfs_is_active","","",null,null],[5,"g_vfs_parse_name","","",null,null],[5,"g_volume_monitor_get_type","","",null,null],[5,"g_volume_monitor_adopt_orphan_mount","","",null,null],[5,"g_volume_monitor_get","","",null,null],[5,"g_volume_monitor_get_connected_drives","","",null,null],[5,"g_volume_monitor_get_mount_for_uuid","","",null,null],[5,"g_volume_monitor_get_mounts","","",null,null],[5,"g_volume_monitor_get_volume_for_uuid","","",null,null],[5,"g_volume_monitor_get_volumes","","",null,null],[5,"g_zlib_compressor_get_type","","",null,null],[5,"g_zlib_compressor_new","","",null,null],[5,"g_zlib_compressor_get_file_info","","",null,null],[5,"g_zlib_compressor_set_file_info","","",null,null],[5,"g_zlib_decompressor_get_type","","",null,null],[5,"g_zlib_decompressor_new","","",null,null],[5,"g_zlib_decompressor_get_file_info","","",null,null],[5,"g_action_get_type","","",null,null],[5,"g_action_activate","","",null,null],[5,"g_action_change_state","","",null,null],[5,"g_action_get_enabled","","",null,null],[5,"g_action_get_name","","",null,null],[5,"g_action_get_parameter_type","","",null,null],[5,"g_action_get_state","","",null,null],[5,"g_action_get_state_hint","","",null,null],[5,"g_action_get_state_type","","",null,null],[5,"g_action_group_get_type","","",null,null],[5,"g_action_group_action_added","","",null,null],[5,"g_action_group_action_enabled_changed","","",null,null],[5,"g_action_group_action_removed","","",null,null],[5,"g_action_group_action_state_changed","","",null,null],[5,"g_action_group_activate_action","","",null,null],[5,"g_action_group_change_action_state","","",null,null],[5,"g_action_group_get_action_enabled","","",null,null],[5,"g_action_group_get_action_parameter_type","","",null,null],[5,"g_action_group_get_action_state","","",null,null],[5,"g_action_group_get_action_state_hint","","",null,null],[5,"g_action_group_get_action_state_type","","",null,null],[5,"g_action_group_has_action","","",null,null],[5,"g_action_group_list_actions","","",null,null],[5,"g_action_group_query_action","","",null,null],[5,"g_action_map_get_type","","",null,null],[5,"g_action_map_add_action","","",null,null],[5,"g_action_map_add_action_entries","","",null,null],[5,"g_action_map_lookup_action","","",null,null],[5,"g_action_map_remove_action","","",null,null],[5,"g_app_info_get_type","","",null,null],[5,"g_app_info_create_from_commandline","","",null,null],[5,"g_app_info_get_all","","",null,null],[5,"g_app_info_get_all_for_type","","",null,null],[5,"g_app_info_get_default_for_type","","",null,null],[5,"g_app_info_get_default_for_uri_scheme","","",null,null],[5,"g_app_info_get_fallback_for_type","","",null,null],[5,"g_app_info_get_recommended_for_type","","",null,null],[5,"g_app_info_launch_default_for_uri","","",null,null],[5,"g_app_info_reset_type_associations","","",null,null],[5,"g_app_info_add_supports_type","","",null,null],[5,"g_app_info_can_delete","","",null,null],[5,"g_app_info_can_remove_supports_type","","",null,null],[5,"g_app_info_delete","","",null,null],[5,"g_app_info_dup","","",null,null],[5,"g_app_info_equal","","",null,null],[5,"g_app_info_get_commandline","","",null,null],[5,"g_app_info_get_description","","",null,null],[5,"g_app_info_get_display_name","","",null,null],[5,"g_app_info_get_executable","","",null,null],[5,"g_app_info_get_icon","","",null,null],[5,"g_app_info_get_id","","",null,null],[5,"g_app_info_get_name","","",null,null],[5,"g_app_info_launch","","",null,null],[5,"g_app_info_launch_uris","","",null,null],[5,"g_app_info_remove_supports_type","","",null,null],[5,"g_app_info_set_as_default_for_extension","","",null,null],[5,"g_app_info_set_as_default_for_type","","",null,null],[5,"g_app_info_set_as_last_used_for_type","","",null,null],[5,"g_app_info_should_show","","",null,null],[5,"g_app_info_supports_files","","",null,null],[5,"g_app_info_supports_uris","","",null,null],[5,"g_async_initable_get_type","","",null,null],[5,"g_async_initable_new_async","","",null,null],[5,"g_async_initable_newv_async","","",null,null],[5,"g_async_initable_init_async","","",null,null],[5,"g_async_initable_init_finish","","",null,null],[5,"g_async_initable_new_finish","","",null,null],[5,"g_async_result_get_type","","",null,null],[5,"g_async_result_get_source_object","","",null,null],[5,"g_async_result_get_user_data","","",null,null],[5,"g_converter_get_type","","",null,null],[5,"g_converter_convert","","",null,null],[5,"g_converter_reset","","",null,null],[5,"g_dbus_interface_get_type","","",null,null],[5,"g_dbus_interface_dup_object","","",null,null],[5,"g_dbus_interface_get_info","","",null,null],[5,"g_dbus_interface_get_object","","",null,null],[5,"g_dbus_interface_set_object","","",null,null],[5,"g_dbus_object_get_type","","",null,null],[5,"g_dbus_object_get_interface","","",null,null],[5,"g_dbus_object_get_interfaces","","",null,null],[5,"g_dbus_object_get_object_path","","",null,null],[5,"g_dbus_object_manager_get_type","","",null,null],[5,"g_dbus_object_manager_get_interface","","",null,null],[5,"g_dbus_object_manager_get_object","","",null,null],[5,"g_dbus_object_manager_get_object_path","","",null,null],[5,"g_dbus_object_manager_get_objects","","",null,null],[5,"g_desktop_app_info_lookup_get_type","","",null,null],[5,"g_desktop_app_info_lookup_get_default_for_uri_scheme","","",null,null],[5,"g_drive_get_type","","",null,null],[5,"g_drive_can_eject","","",null,null],[5,"g_drive_can_poll_for_media","","",null,null],[5,"g_drive_can_start","","",null,null],[5,"g_drive_can_start_degraded","","",null,null],[5,"g_drive_can_stop","","",null,null],[5,"g_drive_eject","","",null,null],[5,"g_drive_eject_finish","","",null,null],[5,"g_drive_eject_with_operation","","",null,null],[5,"g_drive_eject_with_operation_finish","","",null,null],[5,"g_drive_enumerate_identifiers","","",null,null],[5,"g_drive_get_icon","","",null,null],[5,"g_drive_get_identifier","","",null,null],[5,"g_drive_get_name","","",null,null],[5,"g_drive_get_sort_key","","",null,null],[5,"g_drive_get_start_stop_type","","",null,null],[5,"g_drive_get_volumes","","",null,null],[5,"g_drive_has_media","","",null,null],[5,"g_drive_has_volumes","","",null,null],[5,"g_drive_is_media_check_automatic","","",null,null],[5,"g_drive_is_media_removable","","",null,null],[5,"g_drive_poll_for_media","","",null,null],[5,"g_drive_poll_for_media_finish","","",null,null],[5,"g_drive_start","","",null,null],[5,"g_drive_start_finish","","",null,null],[5,"g_drive_stop","","",null,null],[5,"g_drive_stop_finish","","",null,null],[5,"g_file_get_type","","",null,null],[5,"g_file_new_for_commandline_arg","","",null,null],[5,"g_file_new_for_path","","",null,null],[5,"g_file_new_for_uri","","",null,null],[5,"g_file_new_tmp","","",null,null],[5,"g_file_parse_name","","",null,null],[5,"g_file_append_to","","",null,null],[5,"g_file_append_to_async","","",null,null],[5,"g_file_append_to_finish","","",null,null],[5,"g_file_copy","","",null,null],[5,"g_file_copy_async","","",null,null],[5,"g_file_copy_attributes","","",null,null],[5,"g_file_copy_finish","","",null,null],[5,"g_file_create","","",null,null],[5,"g_file_create_async","","",null,null],[5,"g_file_create_finish","","",null,null],[5,"g_file_create_readwrite","","",null,null],[5,"g_file_create_readwrite_async","","",null,null],[5,"g_file_create_readwrite_finish","","",null,null],[5,"g_file_delete","","",null,null],[5,"g_file_dup","","",null,null],[5,"g_file_eject_mountable","","",null,null],[5,"g_file_eject_mountable_finish","","",null,null],[5,"g_file_eject_mountable_with_operation","","",null,null],[5,"g_file_eject_mountable_with_operation_finish","","",null,null],[5,"g_file_enumerate_children","","",null,null],[5,"g_file_enumerate_children_async","","",null,null],[5,"g_file_enumerate_children_finish","","",null,null],[5,"g_file_equal","","",null,null],[5,"g_file_find_enclosing_mount","","",null,null],[5,"g_file_find_enclosing_mount_async","","",null,null],[5,"g_file_find_enclosing_mount_finish","","",null,null],[5,"g_file_get_basename","","",null,null],[5,"g_file_get_child","","",null,null],[5,"g_file_get_child_for_display_name","","",null,null],[5,"g_file_get_parent","","",null,null],[5,"g_file_get_parse_name","","",null,null],[5,"g_file_get_path","","",null,null],[5,"g_file_get_relative_path","","",null,null],[5,"g_file_get_uri","","",null,null],[5,"g_file_get_uri_scheme","","",null,null],[5,"g_file_has_parent","","",null,null],[5,"g_file_has_prefix","","",null,null],[5,"g_file_has_uri_scheme","","",null,null],[5,"g_file_hash","","",null,null],[5,"g_file_is_native","","",null,null],[5,"g_file_load_contents","","",null,null],[5,"g_file_load_contents_async","","",null,null],[5,"g_file_load_contents_finish","","",null,null],[5,"g_file_load_partial_contents_async","","",null,null],[5,"g_file_load_partial_contents_finish","","",null,null],[5,"g_file_make_directory","","",null,null],[5,"g_file_make_directory_with_parents","","",null,null],[5,"g_file_make_symbolic_link","","",null,null],[5,"g_file_monitor","","",null,null],[5,"g_file_monitor_directory","","",null,null],[5,"g_file_monitor_file","","",null,null],[5,"g_file_mount_enclosing_volume","","",null,null],[5,"g_file_mount_enclosing_volume_finish","","",null,null],[5,"g_file_mount_mountable","","",null,null],[5,"g_file_mount_mountable_finish","","",null,null],[5,"g_file_move","","",null,null],[5,"g_file_open_readwrite","","",null,null],[5,"g_file_open_readwrite_async","","",null,null],[5,"g_file_open_readwrite_finish","","",null,null],[5,"g_file_poll_mountable","","",null,null],[5,"g_file_poll_mountable_finish","","",null,null],[5,"g_file_query_default_handler","","",null,null],[5,"g_file_query_exists","","",null,null],[5,"g_file_query_file_type","","",null,null],[5,"g_file_query_filesystem_info","","",null,null],[5,"g_file_query_filesystem_info_async","","",null,null],[5,"g_file_query_filesystem_info_finish","","",null,null],[5,"g_file_query_info","","",null,null],[5,"g_file_query_info_async","","",null,null],[5,"g_file_query_info_finish","","",null,null],[5,"g_file_query_settable_attributes","","",null,null],[5,"g_file_query_writable_namespaces","","",null,null],[5,"g_file_read","","",null,null],[5,"g_file_read_async","","",null,null],[5,"g_file_read_finish","","",null,null],[5,"g_file_replace","","",null,null],[5,"g_file_replace_async","","",null,null],[5,"g_file_replace_contents","","",null,null],[5,"g_file_replace_contents_async","","",null,null],[5,"g_file_replace_contents_finish","","",null,null],[5,"g_file_replace_finish","","",null,null],[5,"g_file_replace_readwrite","","",null,null],[5,"g_file_replace_readwrite_async","","",null,null],[5,"g_file_replace_readwrite_finish","","",null,null],[5,"g_file_resolve_relative_path","","",null,null],[5,"g_file_set_attribute","","",null,null],[5,"g_file_set_attribute_byte_string","","",null,null],[5,"g_file_set_attribute_int32","","",null,null],[5,"g_file_set_attribute_int64","","",null,null],[5,"g_file_set_attribute_string","","",null,null],[5,"g_file_set_attribute_uint32","","",null,null],[5,"g_file_set_attribute_uint64","","",null,null],[5,"g_file_set_attributes_async","","",null,null],[5,"g_file_set_attributes_finish","","",null,null],[5,"g_file_set_attributes_from_info","","",null,null],[5,"g_file_set_display_name","","",null,null],[5,"g_file_set_display_name_async","","",null,null],[5,"g_file_set_display_name_finish","","",null,null],[5,"g_file_start_mountable","","",null,null],[5,"g_file_start_mountable_finish","","",null,null],[5,"g_file_stop_mountable","","",null,null],[5,"g_file_stop_mountable_finish","","",null,null],[5,"g_file_supports_thread_contexts","","",null,null],[5,"g_file_trash","","",null,null],[5,"g_file_unmount_mountable","","",null,null],[5,"g_file_unmount_mountable_finish","","",null,null],[5,"g_file_unmount_mountable_with_operation","","",null,null],[5,"g_file_unmount_mountable_with_operation_finish","","",null,null],[5,"g_file_descriptor_based_get_type","","",null,null],[5,"g_file_descriptor_based_get_fd","","",null,null],[5,"g_icon_get_type","","",null,null],[5,"g_icon_hash","","",null,null],[5,"g_icon_new_for_string","","",null,null],[5,"g_icon_equal","","",null,null],[5,"g_icon_to_string","","",null,null],[5,"g_initable_get_type","","",null,null],[5,"g_initable_new","","",null,null],[5,"g_initable_newv","","",null,null],[5,"g_initable_init","","",null,null],[5,"g_list_model_get_type","","",null,null],[5,"g_loadable_icon_get_type","","",null,null],[5,"g_loadable_icon_load","","",null,null],[5,"g_loadable_icon_load_async","","",null,null],[5,"g_loadable_icon_load_finish","","",null,null],[5,"g_mount_get_type","","",null,null],[5,"g_mount_can_eject","","",null,null],[5,"g_mount_can_unmount","","",null,null],[5,"g_mount_eject","","",null,null],[5,"g_mount_eject_finish","","",null,null],[5,"g_mount_eject_with_operation","","",null,null],[5,"g_mount_eject_with_operation_finish","","",null,null],[5,"g_mount_get_default_location","","",null,null],[5,"g_mount_get_drive","","",null,null],[5,"g_mount_get_icon","","",null,null],[5,"g_mount_get_name","","",null,null],[5,"g_mount_get_root","","",null,null],[5,"g_mount_get_sort_key","","",null,null],[5,"g_mount_get_uuid","","",null,null],[5,"g_mount_get_volume","","",null,null],[5,"g_mount_guess_content_type","","",null,null],[5,"g_mount_guess_content_type_finish","","",null,null],[5,"g_mount_guess_content_type_sync","","",null,null],[5,"g_mount_is_shadowed","","",null,null],[5,"g_mount_remount","","",null,null],[5,"g_mount_remount_finish","","",null,null],[5,"g_mount_shadow","","",null,null],[5,"g_mount_unmount","","",null,null],[5,"g_mount_unmount_finish","","",null,null],[5,"g_mount_unmount_with_operation","","",null,null],[5,"g_mount_unmount_with_operation_finish","","",null,null],[5,"g_mount_unshadow","","",null,null],[5,"g_network_monitor_get_type","","",null,null],[5,"g_network_monitor_get_default","","",null,null],[5,"g_network_monitor_can_reach","","",null,null],[5,"g_network_monitor_can_reach_async","","",null,null],[5,"g_network_monitor_can_reach_finish","","",null,null],[5,"g_network_monitor_get_network_available","","",null,null],[5,"g_pollable_input_stream_get_type","","",null,null],[5,"g_pollable_input_stream_can_poll","","",null,null],[5,"g_pollable_input_stream_create_source","","",null,null],[5,"g_pollable_input_stream_is_readable","","",null,null],[5,"g_pollable_input_stream_read_nonblocking","","",null,null],[5,"g_pollable_output_stream_get_type","","",null,null],[5,"g_pollable_output_stream_can_poll","","",null,null],[5,"g_pollable_output_stream_create_source","","",null,null],[5,"g_pollable_output_stream_is_writable","","",null,null],[5,"g_pollable_output_stream_write_nonblocking","","",null,null],[5,"g_proxy_get_type","","",null,null],[5,"g_proxy_get_default_for_protocol","","",null,null],[5,"g_proxy_connect","","",null,null],[5,"g_proxy_connect_async","","",null,null],[5,"g_proxy_connect_finish","","",null,null],[5,"g_proxy_supports_hostname","","",null,null],[5,"g_proxy_resolver_get_type","","",null,null],[5,"g_proxy_resolver_get_default","","",null,null],[5,"g_proxy_resolver_is_supported","","",null,null],[5,"g_proxy_resolver_lookup","","",null,null],[5,"g_proxy_resolver_lookup_async","","",null,null],[5,"g_proxy_resolver_lookup_finish","","",null,null],[5,"g_remote_action_group_get_type","","",null,null],[5,"g_remote_action_group_activate_action_full","","",null,null],[5,"g_remote_action_group_change_action_state_full","","",null,null],[5,"g_seekable_get_type","","",null,null],[5,"g_seekable_can_seek","","",null,null],[5,"g_seekable_can_truncate","","",null,null],[5,"g_seekable_seek","","",null,null],[5,"g_seekable_tell","","",null,null],[5,"g_seekable_truncate","","",null,null],[5,"g_socket_connectable_get_type","","",null,null],[5,"g_socket_connectable_enumerate","","",null,null],[5,"g_socket_connectable_proxy_enumerate","","",null,null],[5,"g_tls_backend_get_type","","",null,null],[5,"g_tls_backend_get_default","","",null,null],[5,"g_tls_backend_get_certificate_type","","",null,null],[5,"g_tls_backend_get_client_connection_type","","",null,null],[5,"g_tls_backend_get_default_database","","",null,null],[5,"g_tls_backend_get_file_database_type","","",null,null],[5,"g_tls_backend_get_server_connection_type","","",null,null],[5,"g_tls_backend_supports_tls","","",null,null],[5,"g_tls_client_connection_get_type","","",null,null],[5,"g_tls_client_connection_new","","",null,null],[5,"g_tls_client_connection_get_accepted_cas","","",null,null],[5,"g_tls_client_connection_get_server_identity","","",null,null],[5,"g_tls_client_connection_get_use_ssl3","","",null,null],[5,"g_tls_client_connection_get_validation_flags","","",null,null],[5,"g_tls_client_connection_set_server_identity","","",null,null],[5,"g_tls_client_connection_set_use_ssl3","","",null,null],[5,"g_tls_client_connection_set_validation_flags","","",null,null],[5,"g_tls_file_database_get_type","","",null,null],[5,"g_tls_file_database_new","","",null,null],[5,"g_tls_server_connection_get_type","","",null,null],[5,"g_tls_server_connection_new","","",null,null],[5,"g_volume_get_type","","",null,null],[5,"g_volume_can_eject","","",null,null],[5,"g_volume_can_mount","","",null,null],[5,"g_volume_eject","","",null,null],[5,"g_volume_eject_finish","","",null,null],[5,"g_volume_eject_with_operation","","",null,null],[5,"g_volume_eject_with_operation_finish","","",null,null],[5,"g_volume_enumerate_identifiers","","",null,null],[5,"g_volume_get_activation_root","","",null,null],[5,"g_volume_get_drive","","",null,null],[5,"g_volume_get_icon","","",null,null],[5,"g_volume_get_identifier","","",null,null],[5,"g_volume_get_mount","","",null,null],[5,"g_volume_get_name","","",null,null],[5,"g_volume_get_sort_key","","",null,null],[5,"g_volume_get_uuid","","",null,null],[5,"g_volume_mount","","",null,null],[5,"g_volume_mount_finish","","",null,null],[5,"g_volume_should_automount","","",null,null],[5,"g_bus_get","","",null,null],[5,"g_bus_get_finish","","",null,null],[5,"g_bus_get_sync","","",null,null],[5,"g_bus_own_name","","",null,null],[5,"g_bus_own_name_on_connection","","",null,null],[5,"g_bus_own_name_on_connection_with_closures","","",null,null],[5,"g_bus_own_name_with_closures","","",null,null],[5,"g_bus_unown_name","","",null,null],[5,"g_bus_unwatch_name","","",null,null],[5,"g_bus_watch_name","","",null,null],[5,"g_bus_watch_name_on_connection","","",null,null],[5,"g_bus_watch_name_on_connection_with_closures","","",null,null],[5,"g_bus_watch_name_with_closures","","",null,null],[5,"g_content_type_can_be_executable","","",null,null],[5,"g_content_type_equals","","",null,null],[5,"g_content_type_from_mime_type","","",null,null],[5,"g_content_type_get_description","","",null,null],[5,"g_content_type_get_icon","","",null,null],[5,"g_content_type_get_mime_type","","",null,null],[5,"g_content_type_guess","","",null,null],[5,"g_content_type_guess_for_tree","","",null,null],[5,"g_content_type_is_a","","",null,null],[5,"g_content_type_is_unknown","","",null,null],[5,"g_content_types_get_registered","","",null,null],[5,"g_dbus_address_get_for_bus_sync","","",null,null],[5,"g_dbus_address_get_stream","","",null,null],[5,"g_dbus_address_get_stream_finish","","",null,null],[5,"g_dbus_address_get_stream_sync","","",null,null],[5,"g_dbus_generate_guid","","",null,null],[5,"g_dbus_gvalue_to_gvariant","","",null,null],[5,"g_dbus_gvariant_to_gvalue","","",null,null],[5,"g_dbus_is_address","","",null,null],[5,"g_dbus_is_guid","","",null,null],[5,"g_dbus_is_interface_name","","",null,null],[5,"g_dbus_is_member_name","","",null,null],[5,"g_dbus_is_name","","",null,null],[5,"g_dbus_is_supported_address","","",null,null],[5,"g_dbus_is_unique_name","","",null,null],[5,"g_io_error_from_errno","","",null,null],[5,"g_io_error_quark","","",null,null],[5,"g_io_modules_load_all_in_directory","","",null,null],[5,"g_io_modules_load_all_in_directory_with_scope","","",null,null],[5,"g_io_modules_scan_all_in_directory","","",null,null],[5,"g_io_modules_scan_all_in_directory_with_scope","","",null,null],[5,"g_io_scheduler_cancel_all_jobs","","",null,null],[5,"g_io_scheduler_push_job","","",null,null],[5,"g_pollable_source_new","","",null,null],[5,"g_resources_enumerate_children","","",null,null],[5,"g_resources_get_info","","",null,null],[5,"g_resources_lookup_data","","",null,null],[5,"g_resources_open_stream","","",null,null],[5,"g_resources_register","","",null,null],[5,"g_resources_unregister","","",null,null],[5,"g_simple_async_report_error_in_idle","","",null,null],[5,"g_simple_async_report_gerror_in_idle","","",null,null],[5,"g_simple_async_report_take_gerror_in_idle","","",null,null],[5,"g_unix_is_mount_path_system_internal","","",null,null],[5,"g_unix_mount_at","","",null,null],[5,"g_unix_mount_compare","","",null,null],[5,"g_unix_mount_free","","",null,null],[5,"g_unix_mount_get_device_path","","",null,null],[5,"g_unix_mount_get_fs_type","","",null,null],[5,"g_unix_mount_get_mount_path","","",null,null],[5,"g_unix_mount_guess_can_eject","","",null,null],[5,"g_unix_mount_guess_icon","","",null,null],[5,"g_unix_mount_guess_name","","",null,null],[5,"g_unix_mount_guess_should_display","","",null,null],[5,"g_unix_mount_is_readonly","","",null,null],[5,"g_unix_mount_is_system_internal","","",null,null],[5,"g_unix_mount_points_changed_since","","",null,null],[5,"g_unix_mount_points_get","","",null,null],[5,"g_unix_mounts_changed_since","","",null,null],[5,"g_unix_mounts_get","","",null,null],[6,"GActionMap_autoptr","","",null,null],[6,"GAction_autoptr","","",null,null],[6,"GAppInfoMonitor_autoptr","","",null,null],[6,"GAppInfo_autoptr","","",null,null],[6,"GAppLaunchContext_autoptr","","",null,null],[6,"GApplicationCommandLine_autoptr","","",null,null],[6,"GApplication_autoptr","","",null,null],[6,"GAsyncInitable_autoptr","","",null,null],[6,"GAsyncResult_autoptr","","",null,null],[6,"GBufferedInputStream_autoptr","","",null,null],[6,"GBufferedOutputStream_autoptr","","",null,null],[6,"GBytesIcon_autoptr","","",null,null],[6,"GCancellable_autoptr","","",null,null],[6,"GCharsetConverter_autoptr","","",null,null],[6,"GConverterInputStream_autoptr","","",null,null],[6,"GConverterOutputStream_autoptr","","",null,null],[6,"GConverter_autoptr","","",null,null],[6,"GCredentials_autoptr","","",null,null],[6,"GDBusActionGroup_autoptr","","",null,null],[6,"GDBusAuthObserver_autoptr","","",null,null],[6,"GDBusConnection_autoptr","","",null,null],[6,"GDBusInterfaceSkeleton_autoptr","","",null,null],[6,"GDBusInterface_autoptr","","",null,null],[6,"GDBusMenuModel_autoptr","","",null,null],[6,"GDBusMessage_autoptr","","",null,null],[6,"GDBusMethodInvocation_autoptr","","",null,null],[6,"GDBusNodeInfo_autoptr","","",null,null],[6,"GDBusObjectManagerClient_autoptr","","",null,null],[6,"GDBusObjectManagerServer_autoptr","","",null,null],[6,"GDBusObjectManager_autoptr","","",null,null],[6,"GDBusObjectProxy_autoptr","","",null,null],[6,"GDBusObjectSkeleton_autoptr","","",null,null],[6,"GDBusObject_autoptr","","",null,null],[6,"GDBusProxy_autoptr","","",null,null],[6,"GDBusServer_autoptr","","",null,null],[6,"GDataInputStream_autoptr","","",null,null],[6,"GDataOutputStream_autoptr","","",null,null],[6,"GDesktopAppInfo_autoptr","","",null,null],[6,"GDrive_autoptr","","",null,null],[6,"GEmblem_autoptr","","",null,null],[6,"GEmblemedIcon_autoptr","","",null,null],[6,"GFileDescriptorBased_autoptr","","",null,null],[6,"GFileEnumerator_autoptr","","",null,null],[6,"GFileIOStream_autoptr","","",null,null],[6,"GFileIcon_autoptr","","",null,null],[6,"GFileInfo_autoptr","","",null,null],[6,"GFileInputStream_autoptr","","",null,null],[6,"GFileMonitor_autoptr","","",null,null],[6,"GFileOutputStream_autoptr","","",null,null],[6,"GFile_autoptr","","",null,null],[6,"GFilenameCompleter_autoptr","","",null,null],[6,"GFilterInputStream_autoptr","","",null,null],[6,"GFilterOutputStream_autoptr","","",null,null],[6,"GIOModule_autoptr","","",null,null],[6,"GIOStream_autoptr","","",null,null],[6,"GIcon_autoptr","","",null,null],[6,"GInetAddressMask_autoptr","","",null,null],[6,"GInetAddress_autoptr","","",null,null],[6,"GInetSocketAddress_autoptr","","",null,null],[6,"GInitable_autoptr","","",null,null],[6,"GInputStream_autoptr","","",null,null],[6,"GListModel_autoptr","","",null,null],[6,"GListStore_autoptr","","",null,null],[6,"GLoadableIcon_autoptr","","",null,null],[6,"GMemoryInputStream_autoptr","","",null,null],[6,"GMemoryOutputStream_autoptr","","",null,null],[6,"GMenuAttributeIter_autoptr","","",null,null],[6,"GMenuItem_autoptr","","",null,null],[6,"GMenuLinkIter_autoptr","","",null,null],[6,"GMenuModel_autoptr","","",null,null],[6,"GMenu_autoptr","","",null,null],[6,"GMountOperation_autoptr","","",null,null],[6,"GMount_autoptr","","",null,null],[6,"GNativeVolumeMonitor_autoptr","","",null,null],[6,"GNetworkAddress_autoptr","","",null,null],[6,"GNetworkMonitor_autoptr","","",null,null],[6,"GNetworkService_autoptr","","",null,null],[6,"GNotification_autoptr","","",null,null],[6,"GOutputStream_autoptr","","",null,null],[6,"GPermission_autoptr","","",null,null],[6,"GPollableInputStream_autoptr","","",null,null],[6,"GPollableOutputStream_autoptr","","",null,null],[6,"GPropertyAction_autoptr","","",null,null],[6,"GProxyAddressEnumerator_autoptr","","",null,null],[6,"GProxyAddress_autoptr","","",null,null],[6,"GProxyResolver_autoptr","","",null,null],[6,"GProxy_autoptr","","",null,null],[6,"GRemoteActionGroup_autoptr","","",null,null],[6,"GResolver_autoptr","","",null,null],[6,"GSeekable_autoptr","","",null,null],[6,"GSettingsBackend_autoptr","","",null,null],[6,"GSettingsSchema_autoptr","","",null,null],[6,"GSettings_autoptr","","",null,null],[6,"GSimpleActionGroup_autoptr","","",null,null],[6,"GSimpleAction_autoptr","","",null,null],[6,"GSimpleAsyncResult_autoptr","","",null,null],[6,"GSimplePermission_autoptr","","",null,null],[6,"GSimpleProxyResolver_autoptr","","",null,null],[6,"GSocketAddressEnumerator_autoptr","","",null,null],[6,"GSocketAddress_autoptr","","",null,null],[6,"GSocketClient_autoptr","","",null,null],[6,"GSocketConnectable_autoptr","","",null,null],[6,"GSocketConnection_autoptr","","",null,null],[6,"GSocketControlMessage_autoptr","","",null,null],[6,"GSocketListener_autoptr","","",null,null],[6,"GSocketService_autoptr","","",null,null],[6,"GSocket_autoptr","","",null,null],[6,"GSubprocessLauncher_autoptr","","",null,null],[6,"GSubprocess_autoptr","","",null,null],[6,"GTask_autoptr","","",null,null],[6,"GTcpConnection_autoptr","","",null,null],[6,"GTcpWrapperConnection_autoptr","","",null,null],[6,"GTestDBus_autoptr","","",null,null],[6,"GThemedIcon_autoptr","","",null,null],[6,"GThreadedSocketService_autoptr","","",null,null],[6,"GTlsBackend_autoptr","","",null,null],[6,"GTlsCertificate_autoptr","","",null,null],[6,"GTlsClientConnection_autoptr","","",null,null],[6,"GTlsConnection_autoptr","","",null,null],[6,"GTlsDatabase_autoptr","","",null,null],[6,"GTlsFileDatabase_autoptr","","",null,null],[6,"GTlsInteraction_autoptr","","",null,null],[6,"GTlsPassword_autoptr","","",null,null],[6,"GTlsServerConnection_autoptr","","",null,null],[6,"GUnixConnection_autoptr","","",null,null],[6,"GUnixCredentialsMessage_autoptr","","",null,null],[6,"GUnixFDList_autoptr","","",null,null],[6,"GUnixFDMessage_autoptr","","",null,null],[6,"GUnixInputStream_autoptr","","",null,null],[6,"GUnixMountMonitor_autoptr","","",null,null],[6,"GUnixOutputStream_autoptr","","",null,null],[6,"GUnixSocketAddress_autoptr","","",null,null],[6,"GVfs_autoptr","","",null,null],[6,"GVolumeMonitor_autoptr","","",null,null],[6,"GVolume_autoptr","","",null,null],[6,"GZlibCompressor_autoptr","","",null,null],[6,"GZlibDecompressor_autoptr","","",null,null],[6,"TlsCertificateRequestFlags","","",null,null],[6,"GTlsCertificateRequestFlags","","",null,null],[6,"GAsyncReadyCallback","","",null,null],[6,"GBusAcquiredCallback","","",null,null],[6,"GBusNameAcquiredCallback","","",null,null],[6,"GBusNameAppearedCallback","","",null,null],[6,"GBusNameLostCallback","","",null,null],[6,"GBusNameVanishedCallback","","",null,null],[6,"GCancellableSourceFunc","","",null,null],[6,"GDBusInterfaceGetPropertyFunc","","",null,null],[6,"GDBusInterfaceMethodCallFunc","","",null,null],[6,"GDBusInterfaceSetPropertyFunc","","",null,null],[6,"GDBusMessageFilterFunction","","",null,null],[6,"GDBusProxyTypeFunc","","",null,null],[6,"GDBusSignalCallback","","",null,null],[6,"GDBusSubtreeDispatchFunc","","",null,null],[6,"GDBusSubtreeEnumerateFunc","","",null,null],[6,"GDBusSubtreeIntrospectFunc","","",null,null],[6,"GDesktopAppLaunchCallback","","",null,null],[6,"GFileMeasureProgressCallback","","",null,null],[6,"GFileProgressCallback","","",null,null],[6,"GFileReadMoreCallback","","",null,null],[6,"GIOSchedulerJobFunc","","",null,null],[6,"GPollableSourceFunc","","",null,null],[6,"GReallocFunc","","",null,null],[6,"GSettingsBindGetMapping","","",null,null],[6,"GSettingsBindSetMapping","","",null,null],[6,"GSettingsGetMapping","","",null,null],[6,"GSimpleAsyncThreadFunc","","",null,null],[6,"GSocketSourceFunc","","",null,null],[6,"GTaskThreadFunc","","",null,null],[17,"G_BUS_TYPE_STARTER","","",null,null],[17,"G_BUS_TYPE_NONE","","",null,null],[17,"G_BUS_TYPE_SYSTEM","","",null,null],[17,"G_BUS_TYPE_SESSION","","",null,null],[17,"G_CONVERTER_ERROR","","",null,null],[17,"G_CONVERTER_CONVERTED","","",null,null],[17,"G_CONVERTER_FINISHED","","",null,null],[17,"G_CONVERTER_FLUSHED","","",null,null],[17,"G_CREDENTIALS_TYPE_INVALID","","",null,null],[17,"G_CREDENTIALS_TYPE_LINUX_UCRED","","",null,null],[17,"G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED","","",null,null],[17,"G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED","","",null,null],[17,"G_CREDENTIALS_TYPE_SOLARIS_UCRED","","",null,null],[17,"G_CREDENTIALS_TYPE_NETBSD_UNPCBID","","",null,null],[17,"G_DBUS_ERROR_FAILED","","",null,null],[17,"G_DBUS_ERROR_NO_MEMORY","","",null,null],[17,"G_DBUS_ERROR_SERVICE_UNKNOWN","","",null,null],[17,"G_DBUS_ERROR_NAME_HAS_NO_OWNER","","",null,null],[17,"G_DBUS_ERROR_NO_REPLY","","",null,null],[17,"G_DBUS_ERROR_IO_ERROR","","",null,null],[17,"G_DBUS_ERROR_BAD_ADDRESS","","",null,null],[17,"G_DBUS_ERROR_NOT_SUPPORTED","","",null,null],[17,"G_DBUS_ERROR_LIMITS_EXCEEDED","","",null,null],[17,"G_DBUS_ERROR_ACCESS_DENIED","","",null,null],[17,"G_DBUS_ERROR_AUTH_FAILED","","",null,null],[17,"G_DBUS_ERROR_NO_SERVER","","",null,null],[17,"G_DBUS_ERROR_TIMEOUT","","",null,null],[17,"G_DBUS_ERROR_NO_NETWORK","","",null,null],[17,"G_DBUS_ERROR_ADDRESS_IN_USE","","",null,null],[17,"G_DBUS_ERROR_DISCONNECTED","","",null,null],[17,"G_DBUS_ERROR_INVALID_ARGS","","",null,null],[17,"G_DBUS_ERROR_FILE_NOT_FOUND","","",null,null],[17,"G_DBUS_ERROR_FILE_EXISTS","","",null,null],[17,"G_DBUS_ERROR_UNKNOWN_METHOD","","",null,null],[17,"G_DBUS_ERROR_TIMED_OUT","","",null,null],[17,"G_DBUS_ERROR_MATCH_RULE_NOT_FOUND","","",null,null],[17,"G_DBUS_ERROR_MATCH_RULE_INVALID","","",null,null],[17,"G_DBUS_ERROR_SPAWN_EXEC_FAILED","","",null,null],[17,"G_DBUS_ERROR_SPAWN_FORK_FAILED","","",null,null],[17,"G_DBUS_ERROR_SPAWN_CHILD_EXITED","","",null,null],[17,"G_DBUS_ERROR_SPAWN_CHILD_SIGNALED","","",null,null],[17,"G_DBUS_ERROR_SPAWN_FAILED","","",null,null],[17,"G_DBUS_ERROR_SPAWN_SETUP_FAILED","","",null,null],[17,"G_DBUS_ERROR_SPAWN_CONFIG_INVALID","","",null,null],[17,"G_DBUS_ERROR_SPAWN_SERVICE_INVALID","","",null,null],[17,"G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND","","",null,null],[17,"G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID","","",null,null],[17,"G_DBUS_ERROR_SPAWN_FILE_INVALID","","",null,null],[17,"G_DBUS_ERROR_SPAWN_NO_MEMORY","","",null,null],[17,"G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN","","",null,null],[17,"G_DBUS_ERROR_INVALID_SIGNATURE","","",null,null],[17,"G_DBUS_ERROR_INVALID_FILE_CONTENT","","",null,null],[17,"G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN","","",null,null],[17,"G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN","","",null,null],[17,"G_DBUS_ERROR_OBJECT_PATH_IN_USE","","",null,null],[17,"G_DBUS_ERROR_UNKNOWN_OBJECT","","",null,null],[17,"G_DBUS_ERROR_UNKNOWN_INTERFACE","","",null,null],[17,"G_DBUS_ERROR_UNKNOWN_PROPERTY","","",null,null],[17,"G_DBUS_ERROR_PROPERTY_READ_ONLY","","",null,null],[17,"G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN","","",null,null],[17,"G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_INVALID","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_PATH","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_MEMBER","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_SENDER","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE","","",null,null],[17,"G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS","","",null,null],[17,"G_DBUS_MESSAGE_TYPE_INVALID","","",null,null],[17,"G_DBUS_MESSAGE_TYPE_METHOD_CALL","","",null,null],[17,"G_DBUS_MESSAGE_TYPE_METHOD_RETURN","","",null,null],[17,"G_DBUS_MESSAGE_TYPE_ERROR","","",null,null],[17,"G_DBUS_MESSAGE_TYPE_SIGNAL","","",null,null],[17,"G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN","","",null,null],[17,"G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN","","",null,null],[17,"G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN","","",null,null],[17,"G_DATA_STREAM_NEWLINE_TYPE_LF","","",null,null],[17,"G_DATA_STREAM_NEWLINE_TYPE_CR","","",null,null],[17,"G_DATA_STREAM_NEWLINE_TYPE_CR_LF","","",null,null],[17,"G_DATA_STREAM_NEWLINE_TYPE_ANY","","",null,null],[17,"G_DRIVE_START_STOP_TYPE_UNKNOWN","","",null,null],[17,"G_DRIVE_START_STOP_TYPE_SHUTDOWN","","",null,null],[17,"G_DRIVE_START_STOP_TYPE_NETWORK","","",null,null],[17,"G_DRIVE_START_STOP_TYPE_MULTIDISK","","",null,null],[17,"G_DRIVE_START_STOP_TYPE_PASSWORD","","",null,null],[17,"G_EMBLEM_ORIGIN_UNKNOWN","","",null,null],[17,"G_EMBLEM_ORIGIN_DEVICE","","",null,null],[17,"G_EMBLEM_ORIGIN_LIVEMETADATA","","",null,null],[17,"G_EMBLEM_ORIGIN_TAG","","",null,null],[17,"G_FILE_ATTRIBUTE_STATUS_UNSET","","",null,null],[17,"G_FILE_ATTRIBUTE_STATUS_SET","","",null,null],[17,"G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_INVALID","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_STRING","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_BYTE_STRING","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_BOOLEAN","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_UINT32","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_INT32","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_UINT64","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_INT64","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_OBJECT","","",null,null],[17,"G_FILE_ATTRIBUTE_TYPE_STRINGV","","",null,null],[17,"G_FILE_MONITOR_EVENT_CHANGED","","",null,null],[17,"G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT","","",null,null],[17,"G_FILE_MONITOR_EVENT_DELETED","","",null,null],[17,"G_FILE_MONITOR_EVENT_CREATED","","",null,null],[17,"G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED","","",null,null],[17,"G_FILE_MONITOR_EVENT_PRE_UNMOUNT","","",null,null],[17,"G_FILE_MONITOR_EVENT_UNMOUNTED","","",null,null],[17,"G_FILE_MONITOR_EVENT_MOVED","","",null,null],[17,"G_FILE_TYPE_UNKNOWN","","",null,null],[17,"G_FILE_TYPE_REGULAR","","",null,null],[17,"G_FILE_TYPE_DIRECTORY","","",null,null],[17,"G_FILE_TYPE_SYMBOLIC_LINK","","",null,null],[17,"G_FILE_TYPE_SPECIAL","","",null,null],[17,"G_FILE_TYPE_SHORTCUT","","",null,null],[17,"G_FILE_TYPE_MOUNTABLE","","",null,null],[17,"G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS","","",null,null],[17,"G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL","","",null,null],[17,"G_FILESYSTEM_PREVIEW_TYPE_NEVER","","",null,null],[17,"G_IO_ERROR_FAILED","","",null,null],[17,"G_IO_ERROR_NOT_FOUND","","",null,null],[17,"G_IO_ERROR_EXISTS","","",null,null],[17,"G_IO_ERROR_IS_DIRECTORY","","",null,null],[17,"G_IO_ERROR_NOT_DIRECTORY","","",null,null],[17,"G_IO_ERROR_NOT_EMPTY","","",null,null],[17,"G_IO_ERROR_NOT_REGULAR_FILE","","",null,null],[17,"G_IO_ERROR_NOT_SYMBOLIC_LINK","","",null,null],[17,"G_IO_ERROR_NOT_MOUNTABLE_FILE","","",null,null],[17,"G_IO_ERROR_FILENAME_TOO_LONG","","",null,null],[17,"G_IO_ERROR_INVALID_FILENAME","","",null,null],[17,"G_IO_ERROR_TOO_MANY_LINKS","","",null,null],[17,"G_IO_ERROR_NO_SPACE","","",null,null],[17,"G_IO_ERROR_INVALID_ARGUMENT","","",null,null],[17,"G_IO_ERROR_PERMISSION_DENIED","","",null,null],[17,"G_IO_ERROR_NOT_SUPPORTED","","",null,null],[17,"G_IO_ERROR_NOT_MOUNTED","","",null,null],[17,"G_IO_ERROR_ALREADY_MOUNTED","","",null,null],[17,"G_IO_ERROR_CLOSED","","",null,null],[17,"G_IO_ERROR_CANCELLED","","",null,null],[17,"G_IO_ERROR_PENDING","","",null,null],[17,"G_IO_ERROR_READ_ONLY","","",null,null],[17,"G_IO_ERROR_CANT_CREATE_BACKUP","","",null,null],[17,"G_IO_ERROR_WRONG_ETAG","","",null,null],[17,"G_IO_ERROR_TIMED_OUT","","",null,null],[17,"G_IO_ERROR_WOULD_RECURSE","","",null,null],[17,"G_IO_ERROR_BUSY","","",null,null],[17,"G_IO_ERROR_WOULD_BLOCK","","",null,null],[17,"G_IO_ERROR_HOST_NOT_FOUND","","",null,null],[17,"G_IO_ERROR_WOULD_MERGE","","",null,null],[17,"G_IO_ERROR_FAILED_HANDLED","","",null,null],[17,"G_IO_ERROR_TOO_MANY_OPEN_FILES","","",null,null],[17,"G_IO_ERROR_NOT_INITIALIZED","","",null,null],[17,"G_IO_ERROR_ADDRESS_IN_USE","","",null,null],[17,"G_IO_ERROR_PARTIAL_INPUT","","",null,null],[17,"G_IO_ERROR_INVALID_DATA","","",null,null],[17,"G_IO_ERROR_DBUS_ERROR","","",null,null],[17,"G_IO_ERROR_HOST_UNREACHABLE","","",null,null],[17,"G_IO_ERROR_NETWORK_UNREACHABLE","","",null,null],[17,"G_IO_ERROR_CONNECTION_REFUSED","","",null,null],[17,"G_IO_ERROR_PROXY_FAILED","","",null,null],[17,"G_IO_ERROR_PROXY_AUTH_FAILED","","",null,null],[17,"G_IO_ERROR_PROXY_NEED_AUTH","","",null,null],[17,"G_IO_ERROR_PROXY_NOT_ALLOWED","","",null,null],[17,"G_IO_ERROR_BROKEN_PIPE","","",null,null],[17,"G_IO_ERROR_CONNECTION_CLOSED","","",null,null],[17,"G_IO_ERROR_NOT_CONNECTED","","",null,null],[17,"G_IO_MODULE_SCOPE_NONE","","",null,null],[17,"G_IO_MODULE_SCOPE_BLOCK_DUPLICATES","","",null,null],[17,"G_MOUNT_OPERATION_HANDLED","","",null,null],[17,"G_MOUNT_OPERATION_ABORTED","","",null,null],[17,"G_MOUNT_OPERATION_UNHANDLED","","",null,null],[17,"G_NETWORK_CONNECTIVITY_LOCAL","","",null,null],[17,"G_NETWORK_CONNECTIVITY_LIMITED","","",null,null],[17,"G_NETWORK_CONNECTIVITY_PORTAL","","",null,null],[17,"G_NETWORK_CONNECTIVITY_FULL","","",null,null],[17,"G_NOTIFICATION_PRIORITY_NORMAL","","",null,null],[17,"G_NOTIFICATION_PRIORITY_LOW","","",null,null],[17,"G_NOTIFICATION_PRIORITY_HIGH","","",null,null],[17,"G_NOTIFICATION_PRIORITY_URGENT","","",null,null],[17,"G_PASSWORD_SAVE_NEVER","","",null,null],[17,"G_PASSWORD_SAVE_FOR_SESSION","","",null,null],[17,"G_PASSWORD_SAVE_PERMANENTLY","","",null,null],[17,"G_RESOLVER_ERROR_NOT_FOUND","","",null,null],[17,"G_RESOLVER_ERROR_TEMPORARY_FAILURE","","",null,null],[17,"G_RESOLVER_ERROR_INTERNAL","","",null,null],[17,"G_RESOLVER_RECORD_SRV","","",null,null],[17,"G_RESOLVER_RECORD_MX","","",null,null],[17,"G_RESOLVER_RECORD_TXT","","",null,null],[17,"G_RESOLVER_RECORD_SOA","","",null,null],[17,"G_RESOLVER_RECORD_NS","","",null,null],[17,"G_RESOURCE_ERROR_NOT_FOUND","","",null,null],[17,"G_RESOURCE_ERROR_INTERNAL","","",null,null],[17,"G_SOCKET_CLIENT_RESOLVING","","",null,null],[17,"G_SOCKET_CLIENT_RESOLVED","","",null,null],[17,"G_SOCKET_CLIENT_CONNECTING","","",null,null],[17,"G_SOCKET_CLIENT_CONNECTED","","",null,null],[17,"G_SOCKET_CLIENT_PROXY_NEGOTIATING","","",null,null],[17,"G_SOCKET_CLIENT_PROXY_NEGOTIATED","","",null,null],[17,"G_SOCKET_CLIENT_TLS_HANDSHAKING","","",null,null],[17,"G_SOCKET_CLIENT_TLS_HANDSHAKED","","",null,null],[17,"G_SOCKET_CLIENT_COMPLETE","","",null,null],[17,"G_SOCKET_FAMILY_INVALID","","",null,null],[17,"G_SOCKET_FAMILY_UNIX","","",null,null],[17,"G_SOCKET_FAMILY_IPV4","","",null,null],[17,"G_SOCKET_FAMILY_IPV6","","",null,null],[17,"G_SOCKET_PROTOCOL_UNKNOWN","","",null,null],[17,"G_SOCKET_PROTOCOL_DEFAULT","","",null,null],[17,"G_SOCKET_PROTOCOL_TCP","","",null,null],[17,"G_SOCKET_PROTOCOL_UDP","","",null,null],[17,"G_SOCKET_PROTOCOL_SCTP","","",null,null],[17,"G_SOCKET_TYPE_INVALID","","",null,null],[17,"G_SOCKET_TYPE_STREAM","","",null,null],[17,"G_SOCKET_TYPE_DATAGRAM","","",null,null],[17,"G_SOCKET_TYPE_SEQPACKET","","",null,null],[17,"G_TLS_AUTHENTICATION_NONE","","",null,null],[17,"G_TLS_AUTHENTICATION_REQUESTED","","",null,null],[17,"G_TLS_AUTHENTICATION_REQUIRED","","",null,null],[17,"G_TLS_CERTIFICATE_REQUEST_NONE","","",null,null],[17,"G_TLS_DATABASE_LOOKUP_NONE","","",null,null],[17,"G_TLS_DATABASE_LOOKUP_KEYPAIR","","",null,null],[17,"G_TLS_ERROR_UNAVAILABLE","","",null,null],[17,"G_TLS_ERROR_MISC","","",null,null],[17,"G_TLS_ERROR_BAD_CERTIFICATE","","",null,null],[17,"G_TLS_ERROR_NOT_TLS","","",null,null],[17,"G_TLS_ERROR_HANDSHAKE","","",null,null],[17,"G_TLS_ERROR_CERTIFICATE_REQUIRED","","",null,null],[17,"G_TLS_ERROR_EOF","","",null,null],[17,"G_TLS_INTERACTION_UNHANDLED","","",null,null],[17,"G_TLS_INTERACTION_HANDLED","","",null,null],[17,"G_TLS_INTERACTION_FAILED","","",null,null],[17,"G_TLS_REHANDSHAKE_NEVER","","",null,null],[17,"G_TLS_REHANDSHAKE_SAFELY","","",null,null],[17,"G_TLS_REHANDSHAKE_UNSAFELY","","",null,null],[17,"G_UNIX_SOCKET_ADDRESS_INVALID","","",null,null],[17,"G_UNIX_SOCKET_ADDRESS_ANONYMOUS","","",null,null],[17,"G_UNIX_SOCKET_ADDRESS_PATH","","",null,null],[17,"G_UNIX_SOCKET_ADDRESS_ABSTRACT","","",null,null],[17,"G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED","","",null,null],[17,"G_ZLIB_COMPRESSOR_FORMAT_ZLIB","","",null,null],[17,"G_ZLIB_COMPRESSOR_FORMAT_GZIP","","",null,null],[17,"G_ZLIB_COMPRESSOR_FORMAT_RAW","","",null,null],[17,"G_DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME","","",null,null],[17,"G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE","","",null,null],[17,"G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE","","",null,null],[17,"G_FILE_ATTRIBUTE_ACCESS_CAN_READ","","",null,null],[17,"G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME","","",null,null],[17,"G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH","","",null,null],[17,"G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE","","",null,null],[17,"G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE","","",null,null],[17,"G_FILE_ATTRIBUTE_DOS_IS_SYSTEM","","",null,null],[17,"G_FILE_ATTRIBUTE_ETAG_VALUE","","",null,null],[17,"G_FILE_ATTRIBUTE_FILESYSTEM_FREE","","",null,null],[17,"G_FILE_ATTRIBUTE_FILESYSTEM_READONLY","","",null,null],[17,"G_FILE_ATTRIBUTE_FILESYSTEM_SIZE","","",null,null],[17,"G_FILE_ATTRIBUTE_FILESYSTEM_TYPE","","",null,null],[17,"G_FILE_ATTRIBUTE_FILESYSTEM_USED","","",null,null],[17,"G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW","","",null,null],[17,"G_FILE_ATTRIBUTE_GVFS_BACKEND","","",null,null],[17,"G_FILE_ATTRIBUTE_ID_FILE","","",null,null],[17,"G_FILE_ATTRIBUTE_ID_FILESYSTEM","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE","","",null,null],[17,"G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE","","",null,null],[17,"G_FILE_ATTRIBUTE_OWNER_GROUP","","",null,null],[17,"G_FILE_ATTRIBUTE_OWNER_USER","","",null,null],[17,"G_FILE_ATTRIBUTE_OWNER_USER_REAL","","",null,null],[17,"G_FILE_ATTRIBUTE_PREVIEW_ICON","","",null,null],[17,"G_FILE_ATTRIBUTE_SELINUX_CONTEXT","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_COPY_NAME","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_ICON","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_NAME","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_SIZE","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_TARGET_URI","","",null,null],[17,"G_FILE_ATTRIBUTE_STANDARD_TYPE","","",null,null],[17,"G_FILE_ATTRIBUTE_THUMBNAILING_FAILED","","",null,null],[17,"G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID","","",null,null],[17,"G_FILE_ATTRIBUTE_THUMBNAIL_PATH","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_ACCESS","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_ACCESS_USEC","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_CHANGED","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_CHANGED_USEC","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_CREATED","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_CREATED_USEC","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_MODIFIED","","",null,null],[17,"G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC","","",null,null],[17,"G_FILE_ATTRIBUTE_TRASH_DELETION_DATE","","",null,null],[17,"G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT","","",null,null],[17,"G_FILE_ATTRIBUTE_TRASH_ORIG_PATH","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_BLOCKS","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_DEVICE","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_GID","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_INODE","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_MODE","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_NLINK","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_RDEV","","",null,null],[17,"G_FILE_ATTRIBUTE_UNIX_UID","","",null,null],[17,"G_MENU_ATTRIBUTE_ACTION","","",null,null],[17,"G_MENU_ATTRIBUTE_ACTION_NAMESPACE","","",null,null],[17,"G_MENU_ATTRIBUTE_ICON","","",null,null],[17,"G_MENU_ATTRIBUTE_LABEL","","",null,null],[17,"G_MENU_ATTRIBUTE_TARGET","","",null,null],[17,"G_MENU_LINK_SECTION","","",null,null],[17,"G_MENU_LINK_SUBMENU","","",null,null],[17,"G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME","","",null,null],[17,"G_NETWORK_MONITOR_EXTENSION_POINT_NAME","","",null,null],[17,"G_PROXY_EXTENSION_POINT_NAME","","",null,null],[17,"G_PROXY_RESOLVER_EXTENSION_POINT_NAME","","",null,null],[17,"G_TLS_BACKEND_EXTENSION_POINT_NAME","","",null,null],[17,"G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT","","",null,null],[17,"G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER","","",null,null],[17,"G_VFS_EXTENSION_POINT_NAME","","",null,null],[17,"G_VOLUME_IDENTIFIER_KIND_CLASS","","",null,null],[17,"G_VOLUME_IDENTIFIER_KIND_HAL_UDI","","",null,null],[17,"G_VOLUME_IDENTIFIER_KIND_LABEL","","",null,null],[17,"G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT","","",null,null],[17,"G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE","","",null,null],[17,"G_VOLUME_IDENTIFIER_KIND_UUID","","",null,null],[17,"G_VOLUME_MONITOR_EXTENSION_POINT_NAME","","",null,null],[17,"G_APP_INFO_CREATE_NONE","","",null,null],[17,"G_APP_INFO_CREATE_NEEDS_TERMINAL","","",null,null],[17,"G_APP_INFO_CREATE_SUPPORTS_URIS","","",null,null],[17,"G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION","","",null,null],[17,"G_APPLICATION_FLAGS_NONE","","",null,null],[17,"G_APPLICATION_IS_SERVICE","","",null,null],[17,"G_APPLICATION_IS_LAUNCHER","","",null,null],[17,"G_APPLICATION_HANDLES_OPEN","","",null,null],[17,"G_APPLICATION_HANDLES_COMMAND_LINE","","",null,null],[17,"G_APPLICATION_SEND_ENVIRONMENT","","",null,null],[17,"G_APPLICATION_NON_UNIQUE","","",null,null],[17,"G_ASK_PASSWORD_NEED_PASSWORD","","",null,null],[17,"G_ASK_PASSWORD_NEED_USERNAME","","",null,null],[17,"G_ASK_PASSWORD_NEED_DOMAIN","","",null,null],[17,"G_ASK_PASSWORD_SAVING_SUPPORTED","","",null,null],[17,"G_ASK_PASSWORD_ANONYMOUS_SUPPORTED","","",null,null],[17,"G_BUS_NAME_OWNER_FLAGS_NONE","","",null,null],[17,"G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT","","",null,null],[17,"G_BUS_NAME_OWNER_FLAGS_REPLACE","","",null,null],[17,"G_BUS_NAME_WATCHER_FLAGS_NONE","","",null,null],[17,"G_BUS_NAME_WATCHER_FLAGS_AUTO_START","","",null,null],[17,"G_CONVERTER_NO_FLAGS","","",null,null],[17,"G_CONVERTER_INPUT_AT_END","","",null,null],[17,"G_CONVERTER_FLUSH","","",null,null],[17,"G_DBUS_CALL_FLAGS_NONE","","",null,null],[17,"G_DBUS_CALL_FLAGS_NO_AUTO_START","","",null,null],[17,"G_DBUS_CAPABILITY_FLAGS_NONE","","",null,null],[17,"G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING","","",null,null],[17,"G_DBUS_CONNECTION_FLAGS_NONE","","",null,null],[17,"G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT","","",null,null],[17,"G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER","","",null,null],[17,"G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS","","",null,null],[17,"G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION","","",null,null],[17,"G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING","","",null,null],[17,"G_DBUS_INTERFACE_SKELETON_FLAGS_NONE","","",null,null],[17,"G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD","","",null,null],[17,"G_DBUS_MESSAGE_FLAGS_NONE","","",null,null],[17,"G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED","","",null,null],[17,"G_DBUS_MESSAGE_FLAGS_NO_AUTO_START","","",null,null],[17,"G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE","","",null,null],[17,"G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START","","",null,null],[17,"G_DBUS_PROPERTY_INFO_FLAGS_NONE","","",null,null],[17,"G_DBUS_PROPERTY_INFO_FLAGS_READABLE","","",null,null],[17,"G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE","","",null,null],[17,"G_DBUS_PROXY_FLAGS_NONE","","",null,null],[17,"G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES","","",null,null],[17,"G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS","","",null,null],[17,"G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START","","",null,null],[17,"G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES","","",null,null],[17,"G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION","","",null,null],[17,"G_DBUS_SEND_MESSAGE_FLAGS_NONE","","",null,null],[17,"G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL","","",null,null],[17,"G_DBUS_SERVER_FLAGS_NONE","","",null,null],[17,"G_DBUS_SERVER_FLAGS_RUN_IN_THREAD","","",null,null],[17,"G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS","","",null,null],[17,"G_DBUS_SIGNAL_FLAGS_NONE","","",null,null],[17,"G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE","","",null,null],[17,"G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE","","",null,null],[17,"G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH","","",null,null],[17,"G_DBUS_SUBTREE_FLAGS_NONE","","",null,null],[17,"G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES","","",null,null],[17,"G_DRIVE_START_NONE","","",null,null],[17,"G_FILE_ATTRIBUTE_INFO_NONE","","",null,null],[17,"G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE","","",null,null],[17,"G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED","","",null,null],[17,"G_FILE_COPY_NONE","","",null,null],[17,"G_FILE_COPY_OVERWRITE","","",null,null],[17,"G_FILE_COPY_BACKUP","","",null,null],[17,"G_FILE_COPY_NOFOLLOW_SYMLINKS","","",null,null],[17,"G_FILE_COPY_ALL_METADATA","","",null,null],[17,"G_FILE_COPY_NO_FALLBACK_FOR_MOVE","","",null,null],[17,"G_FILE_COPY_TARGET_DEFAULT_PERMS","","",null,null],[17,"G_FILE_CREATE_NONE","","",null,null],[17,"G_FILE_CREATE_PRIVATE","","",null,null],[17,"G_FILE_CREATE_REPLACE_DESTINATION","","",null,null],[17,"G_FILE_MEASURE_NONE","","",null,null],[17,"G_FILE_MEASURE_REPORT_ANY_ERROR","","",null,null],[17,"G_FILE_MEASURE_APPARENT_SIZE","","",null,null],[17,"G_FILE_MEASURE_NO_XDEV","","",null,null],[17,"G_FILE_MONITOR_NONE","","",null,null],[17,"G_FILE_MONITOR_WATCH_MOUNTS","","",null,null],[17,"G_FILE_MONITOR_SEND_MOVED","","",null,null],[17,"G_FILE_MONITOR_WATCH_HARD_LINKS","","",null,null],[17,"G_FILE_QUERY_INFO_NONE","","",null,null],[17,"G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS","","",null,null],[17,"G_IO_STREAM_SPLICE_NONE","","",null,null],[17,"G_IO_STREAM_SPLICE_CLOSE_STREAM1","","",null,null],[17,"G_IO_STREAM_SPLICE_CLOSE_STREAM2","","",null,null],[17,"G_IO_STREAM_SPLICE_WAIT_FOR_BOTH","","",null,null],[17,"G_MOUNT_MOUNT_NONE","","",null,null],[17,"G_MOUNT_UNMOUNT_NONE","","",null,null],[17,"G_MOUNT_UNMOUNT_FORCE","","",null,null],[17,"G_OUTPUT_STREAM_SPLICE_NONE","","",null,null],[17,"G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE","","",null,null],[17,"G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET","","",null,null],[17,"G_RESOURCE_FLAGS_NONE","","",null,null],[17,"G_RESOURCE_FLAGS_COMPRESSED","","",null,null],[17,"G_RESOURCE_LOOKUP_FLAGS_NONE","","",null,null],[17,"G_SETTINGS_BIND_DEFAULT","","",null,null],[17,"G_SETTINGS_BIND_GET","","",null,null],[17,"G_SETTINGS_BIND_SET","","",null,null],[17,"G_SETTINGS_BIND_NO_SENSITIVITY","","",null,null],[17,"G_SETTINGS_BIND_GET_NO_CHANGES","","",null,null],[17,"G_SETTINGS_BIND_INVERT_BOOLEAN","","",null,null],[17,"G_SOCKET_MSG_NONE","","",null,null],[17,"G_SOCKET_MSG_OOB","","",null,null],[17,"G_SOCKET_MSG_PEEK","","",null,null],[17,"G_SOCKET_MSG_DONTROUTE","","",null,null],[17,"G_SUBPROCESS_FLAGS_NONE","","",null,null],[17,"G_SUBPROCESS_FLAGS_STDIN_PIPE","","",null,null],[17,"G_SUBPROCESS_FLAGS_STDIN_INHERIT","","",null,null],[17,"G_SUBPROCESS_FLAGS_STDOUT_PIPE","","",null,null],[17,"G_SUBPROCESS_FLAGS_STDOUT_SILENCE","","",null,null],[17,"G_SUBPROCESS_FLAGS_STDERR_PIPE","","",null,null],[17,"G_SUBPROCESS_FLAGS_STDERR_SILENCE","","",null,null],[17,"G_SUBPROCESS_FLAGS_STDERR_MERGE","","",null,null],[17,"G_SUBPROCESS_FLAGS_INHERIT_FDS","","",null,null],[17,"G_TEST_DBUS_NONE","","",null,null],[17,"G_TLS_CERTIFICATE_UNKNOWN_CA","","",null,null],[17,"G_TLS_CERTIFICATE_BAD_IDENTITY","","",null,null],[17,"G_TLS_CERTIFICATE_NOT_ACTIVATED","","",null,null],[17,"G_TLS_CERTIFICATE_EXPIRED","","",null,null],[17,"G_TLS_CERTIFICATE_REVOKED","","",null,null],[17,"G_TLS_CERTIFICATE_INSECURE","","",null,null],[17,"G_TLS_CERTIFICATE_GENERIC_ERROR","","",null,null],[17,"G_TLS_CERTIFICATE_VALIDATE_ALL","","",null,null],[17,"G_TLS_DATABASE_VERIFY_NONE","","",null,null],[17,"G_TLS_PASSWORD_NONE","","",null,null],[17,"G_TLS_PASSWORD_RETRY","","",null,null],[17,"G_TLS_PASSWORD_MANY_TRIES","","",null,null],[17,"G_TLS_PASSWORD_FINAL_TRY","","",null,null],[11,"eq","","",124,{"inputs":[{"name":"gbustype"},{"name":"gbustype"}],"output":{"name":"bool"}}],[11,"ne","","",124,{"inputs":[{"name":"gbustype"},{"name":"gbustype"}],"output":{"name":"bool"}}],[11,"fmt","","",124,{"inputs":[{"name":"gbustype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",124,{"inputs":[{"name":"gbustype"}],"output":{"name":"gbustype"}}],[11,"eq","","",125,{"inputs":[{"name":"gconverterresult"},{"name":"gconverterresult"}],"output":{"name":"bool"}}],[11,"ne","","",125,{"inputs":[{"name":"gconverterresult"},{"name":"gconverterresult"}],"output":{"name":"bool"}}],[11,"fmt","","",125,{"inputs":[{"name":"gconverterresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",125,{"inputs":[{"name":"gconverterresult"}],"output":{"name":"gconverterresult"}}],[11,"eq","","",126,{"inputs":[{"name":"gcredentialstype"},{"name":"gcredentialstype"}],"output":{"name":"bool"}}],[11,"ne","","",126,{"inputs":[{"name":"gcredentialstype"},{"name":"gcredentialstype"}],"output":{"name":"bool"}}],[11,"fmt","","",126,{"inputs":[{"name":"gcredentialstype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",126,{"inputs":[{"name":"gcredentialstype"}],"output":{"name":"gcredentialstype"}}],[11,"eq","","",127,{"inputs":[{"name":"gdbuserror"},{"name":"gdbuserror"}],"output":{"name":"bool"}}],[11,"ne","","",127,{"inputs":[{"name":"gdbuserror"},{"name":"gdbuserror"}],"output":{"name":"bool"}}],[11,"fmt","","",127,{"inputs":[{"name":"gdbuserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",127,{"inputs":[{"name":"gdbuserror"}],"output":{"name":"gdbuserror"}}],[11,"eq","","",128,{"inputs":[{"name":"gdbusmessagebyteorder"},{"name":"gdbusmessagebyteorder"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"gdbusmessagebyteorder"},{"name":"gdbusmessagebyteorder"}],"output":{"name":"bool"}}],[11,"fmt","","",128,{"inputs":[{"name":"gdbusmessagebyteorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",128,{"inputs":[{"name":"gdbusmessagebyteorder"}],"output":{"name":"gdbusmessagebyteorder"}}],[11,"eq","","",129,{"inputs":[{"name":"gdbusmessageheaderfield"},{"name":"gdbusmessageheaderfield"}],"output":{"name":"bool"}}],[11,"ne","","",129,{"inputs":[{"name":"gdbusmessageheaderfield"},{"name":"gdbusmessageheaderfield"}],"output":{"name":"bool"}}],[11,"fmt","","",129,{"inputs":[{"name":"gdbusmessageheaderfield"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",129,{"inputs":[{"name":"gdbusmessageheaderfield"}],"output":{"name":"gdbusmessageheaderfield"}}],[11,"eq","","",130,{"inputs":[{"name":"gdbusmessagetype"},{"name":"gdbusmessagetype"}],"output":{"name":"bool"}}],[11,"ne","","",130,{"inputs":[{"name":"gdbusmessagetype"},{"name":"gdbusmessagetype"}],"output":{"name":"bool"}}],[11,"fmt","","",130,{"inputs":[{"name":"gdbusmessagetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",130,{"inputs":[{"name":"gdbusmessagetype"}],"output":{"name":"gdbusmessagetype"}}],[11,"eq","","",131,{"inputs":[{"name":"gdatastreambyteorder"},{"name":"gdatastreambyteorder"}],"output":{"name":"bool"}}],[11,"ne","","",131,{"inputs":[{"name":"gdatastreambyteorder"},{"name":"gdatastreambyteorder"}],"output":{"name":"bool"}}],[11,"fmt","","",131,{"inputs":[{"name":"gdatastreambyteorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",131,{"inputs":[{"name":"gdatastreambyteorder"}],"output":{"name":"gdatastreambyteorder"}}],[11,"eq","","",132,{"inputs":[{"name":"gdatastreamnewlinetype"},{"name":"gdatastreamnewlinetype"}],"output":{"name":"bool"}}],[11,"ne","","",132,{"inputs":[{"name":"gdatastreamnewlinetype"},{"name":"gdatastreamnewlinetype"}],"output":{"name":"bool"}}],[11,"fmt","","",132,{"inputs":[{"name":"gdatastreamnewlinetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",132,{"inputs":[{"name":"gdatastreamnewlinetype"}],"output":{"name":"gdatastreamnewlinetype"}}],[11,"eq","","",133,{"inputs":[{"name":"gdrivestartstoptype"},{"name":"gdrivestartstoptype"}],"output":{"name":"bool"}}],[11,"ne","","",133,{"inputs":[{"name":"gdrivestartstoptype"},{"name":"gdrivestartstoptype"}],"output":{"name":"bool"}}],[11,"fmt","","",133,{"inputs":[{"name":"gdrivestartstoptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",133,{"inputs":[{"name":"gdrivestartstoptype"}],"output":{"name":"gdrivestartstoptype"}}],[11,"eq","","",134,{"inputs":[{"name":"gemblemorigin"},{"name":"gemblemorigin"}],"output":{"name":"bool"}}],[11,"ne","","",134,{"inputs":[{"name":"gemblemorigin"},{"name":"gemblemorigin"}],"output":{"name":"bool"}}],[11,"fmt","","",134,{"inputs":[{"name":"gemblemorigin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"gemblemorigin"}],"output":{"name":"gemblemorigin"}}],[11,"eq","","",135,{"inputs":[{"name":"gfileattributestatus"},{"name":"gfileattributestatus"}],"output":{"name":"bool"}}],[11,"ne","","",135,{"inputs":[{"name":"gfileattributestatus"},{"name":"gfileattributestatus"}],"output":{"name":"bool"}}],[11,"fmt","","",135,{"inputs":[{"name":"gfileattributestatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"gfileattributestatus"}],"output":{"name":"gfileattributestatus"}}],[11,"eq","","",136,{"inputs":[{"name":"gfileattributetype"},{"name":"gfileattributetype"}],"output":{"name":"bool"}}],[11,"ne","","",136,{"inputs":[{"name":"gfileattributetype"},{"name":"gfileattributetype"}],"output":{"name":"bool"}}],[11,"fmt","","",136,{"inputs":[{"name":"gfileattributetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"gfileattributetype"}],"output":{"name":"gfileattributetype"}}],[11,"eq","","",137,{"inputs":[{"name":"gfilemonitorevent"},{"name":"gfilemonitorevent"}],"output":{"name":"bool"}}],[11,"ne","","",137,{"inputs":[{"name":"gfilemonitorevent"},{"name":"gfilemonitorevent"}],"output":{"name":"bool"}}],[11,"fmt","","",137,{"inputs":[{"name":"gfilemonitorevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"gfilemonitorevent"}],"output":{"name":"gfilemonitorevent"}}],[11,"eq","","",138,{"inputs":[{"name":"gfiletype"},{"name":"gfiletype"}],"output":{"name":"bool"}}],[11,"ne","","",138,{"inputs":[{"name":"gfiletype"},{"name":"gfiletype"}],"output":{"name":"bool"}}],[11,"fmt","","",138,{"inputs":[{"name":"gfiletype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",138,{"inputs":[{"name":"gfiletype"}],"output":{"name":"gfiletype"}}],[11,"eq","","",139,{"inputs":[{"name":"gfilesystempreviewtype"},{"name":"gfilesystempreviewtype"}],"output":{"name":"bool"}}],[11,"ne","","",139,{"inputs":[{"name":"gfilesystempreviewtype"},{"name":"gfilesystempreviewtype"}],"output":{"name":"bool"}}],[11,"fmt","","",139,{"inputs":[{"name":"gfilesystempreviewtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",139,{"inputs":[{"name":"gfilesystempreviewtype"}],"output":{"name":"gfilesystempreviewtype"}}],[11,"eq","","",140,{"inputs":[{"name":"gioerrorenum"},{"name":"gioerrorenum"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"gioerrorenum"},{"name":"gioerrorenum"}],"output":{"name":"bool"}}],[11,"fmt","","",140,{"inputs":[{"name":"gioerrorenum"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",140,{"inputs":[{"name":"gioerrorenum"}],"output":{"name":"gioerrorenum"}}],[11,"eq","","",141,{"inputs":[{"name":"giomodulescopeflags"},{"name":"giomodulescopeflags"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"giomodulescopeflags"},{"name":"giomodulescopeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",141,{"inputs":[{"name":"giomodulescopeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"giomodulescopeflags"}],"output":{"name":"giomodulescopeflags"}}],[11,"eq","","",142,{"inputs":[{"name":"gmountoperationresult"},{"name":"gmountoperationresult"}],"output":{"name":"bool"}}],[11,"ne","","",142,{"inputs":[{"name":"gmountoperationresult"},{"name":"gmountoperationresult"}],"output":{"name":"bool"}}],[11,"fmt","","",142,{"inputs":[{"name":"gmountoperationresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"gmountoperationresult"}],"output":{"name":"gmountoperationresult"}}],[11,"eq","","",143,{"inputs":[{"name":"gnetworkconnectivity"},{"name":"gnetworkconnectivity"}],"output":{"name":"bool"}}],[11,"ne","","",143,{"inputs":[{"name":"gnetworkconnectivity"},{"name":"gnetworkconnectivity"}],"output":{"name":"bool"}}],[11,"fmt","","",143,{"inputs":[{"name":"gnetworkconnectivity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",143,{"inputs":[{"name":"gnetworkconnectivity"}],"output":{"name":"gnetworkconnectivity"}}],[11,"eq","","",144,{"inputs":[{"name":"gnotificationpriority"},{"name":"gnotificationpriority"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"gnotificationpriority"},{"name":"gnotificationpriority"}],"output":{"name":"bool"}}],[11,"fmt","","",144,{"inputs":[{"name":"gnotificationpriority"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",144,{"inputs":[{"name":"gnotificationpriority"}],"output":{"name":"gnotificationpriority"}}],[11,"eq","","",145,{"inputs":[{"name":"gpasswordsave"},{"name":"gpasswordsave"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"gpasswordsave"},{"name":"gpasswordsave"}],"output":{"name":"bool"}}],[11,"fmt","","",145,{"inputs":[{"name":"gpasswordsave"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",145,{"inputs":[{"name":"gpasswordsave"}],"output":{"name":"gpasswordsave"}}],[11,"eq","","",146,{"inputs":[{"name":"gresolvererror"},{"name":"gresolvererror"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"gresolvererror"},{"name":"gresolvererror"}],"output":{"name":"bool"}}],[11,"fmt","","",146,{"inputs":[{"name":"gresolvererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",146,{"inputs":[{"name":"gresolvererror"}],"output":{"name":"gresolvererror"}}],[11,"eq","","",147,{"inputs":[{"name":"gresolverrecordtype"},{"name":"gresolverrecordtype"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"gresolverrecordtype"},{"name":"gresolverrecordtype"}],"output":{"name":"bool"}}],[11,"fmt","","",147,{"inputs":[{"name":"gresolverrecordtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",147,{"inputs":[{"name":"gresolverrecordtype"}],"output":{"name":"gresolverrecordtype"}}],[11,"eq","","",148,{"inputs":[{"name":"gresourceerror"},{"name":"gresourceerror"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"gresourceerror"},{"name":"gresourceerror"}],"output":{"name":"bool"}}],[11,"fmt","","",148,{"inputs":[{"name":"gresourceerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",148,{"inputs":[{"name":"gresourceerror"}],"output":{"name":"gresourceerror"}}],[11,"eq","","",149,{"inputs":[{"name":"gsocketclientevent"},{"name":"gsocketclientevent"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"gsocketclientevent"},{"name":"gsocketclientevent"}],"output":{"name":"bool"}}],[11,"fmt","","",149,{"inputs":[{"name":"gsocketclientevent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",149,{"inputs":[{"name":"gsocketclientevent"}],"output":{"name":"gsocketclientevent"}}],[11,"eq","","",150,{"inputs":[{"name":"gsocketfamily"},{"name":"gsocketfamily"}],"output":{"name":"bool"}}],[11,"ne","","",150,{"inputs":[{"name":"gsocketfamily"},{"name":"gsocketfamily"}],"output":{"name":"bool"}}],[11,"fmt","","",150,{"inputs":[{"name":"gsocketfamily"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",150,{"inputs":[{"name":"gsocketfamily"}],"output":{"name":"gsocketfamily"}}],[11,"eq","","",151,{"inputs":[{"name":"gsocketprotocol"},{"name":"gsocketprotocol"}],"output":{"name":"bool"}}],[11,"ne","","",151,{"inputs":[{"name":"gsocketprotocol"},{"name":"gsocketprotocol"}],"output":{"name":"bool"}}],[11,"fmt","","",151,{"inputs":[{"name":"gsocketprotocol"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",151,{"inputs":[{"name":"gsocketprotocol"}],"output":{"name":"gsocketprotocol"}}],[11,"eq","","",152,{"inputs":[{"name":"gsockettype"},{"name":"gsockettype"}],"output":{"name":"bool"}}],[11,"ne","","",152,{"inputs":[{"name":"gsockettype"},{"name":"gsockettype"}],"output":{"name":"bool"}}],[11,"fmt","","",152,{"inputs":[{"name":"gsockettype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",152,{"inputs":[{"name":"gsockettype"}],"output":{"name":"gsockettype"}}],[11,"eq","","",153,{"inputs":[{"name":"gtlsauthenticationmode"},{"name":"gtlsauthenticationmode"}],"output":{"name":"bool"}}],[11,"ne","","",153,{"inputs":[{"name":"gtlsauthenticationmode"},{"name":"gtlsauthenticationmode"}],"output":{"name":"bool"}}],[11,"fmt","","",153,{"inputs":[{"name":"gtlsauthenticationmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",153,{"inputs":[{"name":"gtlsauthenticationmode"}],"output":{"name":"gtlsauthenticationmode"}}],[11,"eq","","",154,{"inputs":[{"name":"gtlsdatabaselookupflags"},{"name":"gtlsdatabaselookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",154,{"inputs":[{"name":"gtlsdatabaselookupflags"},{"name":"gtlsdatabaselookupflags"}],"output":{"name":"bool"}}],[11,"fmt","","",154,{"inputs":[{"name":"gtlsdatabaselookupflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",154,{"inputs":[{"name":"gtlsdatabaselookupflags"}],"output":{"name":"gtlsdatabaselookupflags"}}],[11,"eq","","",155,{"inputs":[{"name":"gtlserror"},{"name":"gtlserror"}],"output":{"name":"bool"}}],[11,"ne","","",155,{"inputs":[{"name":"gtlserror"},{"name":"gtlserror"}],"output":{"name":"bool"}}],[11,"fmt","","",155,{"inputs":[{"name":"gtlserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",155,{"inputs":[{"name":"gtlserror"}],"output":{"name":"gtlserror"}}],[11,"eq","","",156,{"inputs":[{"name":"gtlsinteractionresult"},{"name":"gtlsinteractionresult"}],"output":{"name":"bool"}}],[11,"ne","","",156,{"inputs":[{"name":"gtlsinteractionresult"},{"name":"gtlsinteractionresult"}],"output":{"name":"bool"}}],[11,"fmt","","",156,{"inputs":[{"name":"gtlsinteractionresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",156,{"inputs":[{"name":"gtlsinteractionresult"}],"output":{"name":"gtlsinteractionresult"}}],[11,"eq","","",157,{"inputs":[{"name":"gtlsrehandshakemode"},{"name":"gtlsrehandshakemode"}],"output":{"name":"bool"}}],[11,"ne","","",157,{"inputs":[{"name":"gtlsrehandshakemode"},{"name":"gtlsrehandshakemode"}],"output":{"name":"bool"}}],[11,"fmt","","",157,{"inputs":[{"name":"gtlsrehandshakemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",157,{"inputs":[{"name":"gtlsrehandshakemode"}],"output":{"name":"gtlsrehandshakemode"}}],[11,"eq","","",158,{"inputs":[{"name":"gunixsocketaddresstype"},{"name":"gunixsocketaddresstype"}],"output":{"name":"bool"}}],[11,"ne","","",158,{"inputs":[{"name":"gunixsocketaddresstype"},{"name":"gunixsocketaddresstype"}],"output":{"name":"bool"}}],[11,"fmt","","",158,{"inputs":[{"name":"gunixsocketaddresstype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"gunixsocketaddresstype"}],"output":{"name":"gunixsocketaddresstype"}}],[11,"eq","","",159,{"inputs":[{"name":"gzlibcompressorformat"},{"name":"gzlibcompressorformat"}],"output":{"name":"bool"}}],[11,"ne","","",159,{"inputs":[{"name":"gzlibcompressorformat"},{"name":"gzlibcompressorformat"}],"output":{"name":"bool"}}],[11,"fmt","","",159,{"inputs":[{"name":"gzlibcompressorformat"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",159,{"inputs":[{"name":"gzlibcompressorformat"}],"output":{"name":"gzlibcompressorformat"}}],[11,"hash","","",160,null],[11,"cmp","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"option"}}],[11,"lt","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"le","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",160,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"eq","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",160,{"inputs":[],"output":{"name":"gappinfocreateflags"}}],[11,"all","","Returns the set containing all flags.",160,{"inputs":[],"output":{"name":"gappinfocreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",160,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",160,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",160,{"inputs":[{"name":"c_uint"}],"output":{"name":"gappinfocreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",160,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",160,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",160,{"inputs":[{"name":"gappinfocreateflags"},{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"not","","Returns the complement of this set of flags.",160,{"inputs":[{"name":"gappinfocreateflags"}],"output":{"name":"gappinfocreateflags"}}],[11,"from_iter","","",160,{"inputs":[{"name":"t"}],"output":{"name":"gappinfocreateflags"}}],[11,"hash","","",161,null],[11,"cmp","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"option"}}],[11,"lt","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"le","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"gt","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"ge","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"clone","","",161,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"eq","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"ne","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"fmt","","",161,{"inputs":[{"name":"gapplicationflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",161,{"inputs":[],"output":{"name":"gapplicationflags"}}],[11,"all","","Returns the set containing all flags.",161,{"inputs":[],"output":{"name":"gapplicationflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",161,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",161,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",161,{"inputs":[{"name":"c_uint"}],"output":{"name":"gapplicationflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",161,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",161,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",161,{"inputs":[{"name":"gapplicationflags"},{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"not","","Returns the complement of this set of flags.",161,{"inputs":[{"name":"gapplicationflags"}],"output":{"name":"gapplicationflags"}}],[11,"from_iter","","",161,{"inputs":[{"name":"t"}],"output":{"name":"gapplicationflags"}}],[11,"hash","","",162,null],[11,"cmp","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"option"}}],[11,"lt","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"le","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"gt","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"ge","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"clone","","",162,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"eq","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"ne","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"fmt","","",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",162,{"inputs":[],"output":{"name":"gaskpasswordflags"}}],[11,"all","","Returns the set containing all flags.",162,{"inputs":[],"output":{"name":"gaskpasswordflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",162,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",162,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",162,{"inputs":[{"name":"c_uint"}],"output":{"name":"gaskpasswordflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",162,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",162,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",162,{"inputs":[{"name":"gaskpasswordflags"},{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"not","","Returns the complement of this set of flags.",162,{"inputs":[{"name":"gaskpasswordflags"}],"output":{"name":"gaskpasswordflags"}}],[11,"from_iter","","",162,{"inputs":[{"name":"t"}],"output":{"name":"gaskpasswordflags"}}],[11,"hash","","",163,null],[11,"cmp","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"option"}}],[11,"lt","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"le","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"gt","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"ge","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"clone","","",163,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"eq","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"fmt","","",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",163,{"inputs":[],"output":{"name":"gbusnameownerflags"}}],[11,"all","","Returns the set containing all flags.",163,{"inputs":[],"output":{"name":"gbusnameownerflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",163,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",163,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",163,{"inputs":[{"name":"c_uint"}],"output":{"name":"gbusnameownerflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",163,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",163,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",163,{"inputs":[{"name":"gbusnameownerflags"},{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"not","","Returns the complement of this set of flags.",163,{"inputs":[{"name":"gbusnameownerflags"}],"output":{"name":"gbusnameownerflags"}}],[11,"from_iter","","",163,{"inputs":[{"name":"t"}],"output":{"name":"gbusnameownerflags"}}],[11,"hash","","",164,null],[11,"cmp","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"option"}}],[11,"lt","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"le","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"gt","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"ge","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"clone","","",164,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"eq","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"ne","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"fmt","","",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",164,{"inputs":[],"output":{"name":"gbusnamewatcherflags"}}],[11,"all","","Returns the set containing all flags.",164,{"inputs":[],"output":{"name":"gbusnamewatcherflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",164,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",164,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",164,{"inputs":[{"name":"c_uint"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",164,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",164,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",164,{"inputs":[{"name":"gbusnamewatcherflags"},{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"not","","Returns the complement of this set of flags.",164,{"inputs":[{"name":"gbusnamewatcherflags"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"from_iter","","",164,{"inputs":[{"name":"t"}],"output":{"name":"gbusnamewatcherflags"}}],[11,"hash","","",165,null],[11,"cmp","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"option"}}],[11,"lt","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"le","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"gt","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"ge","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"eq","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"fmt","","",165,{"inputs":[{"name":"gconverterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",165,{"inputs":[],"output":{"name":"gconverterflags"}}],[11,"all","","Returns the set containing all flags.",165,{"inputs":[],"output":{"name":"gconverterflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",165,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",165,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",165,{"inputs":[{"name":"c_uint"}],"output":{"name":"gconverterflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",165,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",165,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",165,{"inputs":[{"name":"gconverterflags"},{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"not","","Returns the complement of this set of flags.",165,{"inputs":[{"name":"gconverterflags"}],"output":{"name":"gconverterflags"}}],[11,"from_iter","","",165,{"inputs":[{"name":"t"}],"output":{"name":"gconverterflags"}}],[11,"hash","","",166,null],[11,"cmp","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"option"}}],[11,"lt","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"le","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"gt","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"ge","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"clone","","",166,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"eq","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"fmt","","",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",166,{"inputs":[],"output":{"name":"gdbuscallflags"}}],[11,"all","","Returns the set containing all flags.",166,{"inputs":[],"output":{"name":"gdbuscallflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",166,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",166,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",166,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbuscallflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",166,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",166,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",166,{"inputs":[{"name":"gdbuscallflags"},{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"not","","Returns the complement of this set of flags.",166,{"inputs":[{"name":"gdbuscallflags"}],"output":{"name":"gdbuscallflags"}}],[11,"from_iter","","",166,{"inputs":[{"name":"t"}],"output":{"name":"gdbuscallflags"}}],[11,"hash","","",167,null],[11,"cmp","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"option"}}],[11,"lt","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"le","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"gt","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"ge","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"clone","","",167,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"eq","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"fmt","","",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",167,{"inputs":[],"output":{"name":"gdbuscapabilityflags"}}],[11,"all","","Returns the set containing all flags.",167,{"inputs":[],"output":{"name":"gdbuscapabilityflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",167,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",167,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",167,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",167,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",167,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",167,{"inputs":[{"name":"gdbuscapabilityflags"},{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"not","","Returns the complement of this set of flags.",167,{"inputs":[{"name":"gdbuscapabilityflags"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"from_iter","","",167,{"inputs":[{"name":"t"}],"output":{"name":"gdbuscapabilityflags"}}],[11,"hash","","",168,null],[11,"cmp","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"option"}}],[11,"lt","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"le","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"gt","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"ge","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"eq","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"fmt","","",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",168,{"inputs":[],"output":{"name":"gdbusconnectionflags"}}],[11,"all","","Returns the set containing all flags.",168,{"inputs":[],"output":{"name":"gdbusconnectionflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",168,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",168,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",168,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbusconnectionflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",168,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",168,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",168,{"inputs":[{"name":"gdbusconnectionflags"},{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"not","","Returns the complement of this set of flags.",168,{"inputs":[{"name":"gdbusconnectionflags"}],"output":{"name":"gdbusconnectionflags"}}],[11,"from_iter","","",168,{"inputs":[{"name":"t"}],"output":{"name":"gdbusconnectionflags"}}],[11,"hash","","",169,null],[11,"cmp","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"option"}}],[11,"lt","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"le","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"gt","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"ge","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"eq","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"fmt","","",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",169,{"inputs":[],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"all","","Returns the set containing all flags.",169,{"inputs":[],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",169,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",169,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"},{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"not","","Returns the complement of this set of flags.",169,{"inputs":[{"name":"gdbusinterfaceskeletonflags"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"from_iter","","",169,{"inputs":[{"name":"t"}],"output":{"name":"gdbusinterfaceskeletonflags"}}],[11,"hash","","",170,null],[11,"cmp","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"option"}}],[11,"lt","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"le","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"gt","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"ge","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"eq","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"fmt","","",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",170,{"inputs":[],"output":{"name":"gdbusmessageflags"}}],[11,"all","","Returns the set containing all flags.",170,{"inputs":[],"output":{"name":"gdbusmessageflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",170,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",170,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",170,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbusmessageflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",170,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",170,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",170,{"inputs":[{"name":"gdbusmessageflags"},{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"not","","Returns the complement of this set of flags.",170,{"inputs":[{"name":"gdbusmessageflags"}],"output":{"name":"gdbusmessageflags"}}],[11,"from_iter","","",170,{"inputs":[{"name":"t"}],"output":{"name":"gdbusmessageflags"}}],[11,"hash","","",171,null],[11,"cmp","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"option"}}],[11,"lt","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"le","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"gt","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"ge","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"clone","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"eq","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"ne","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"fmt","","",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",171,{"inputs":[],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"all","","Returns the set containing all flags.",171,{"inputs":[],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",171,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",171,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"},{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"not","","Returns the complement of this set of flags.",171,{"inputs":[{"name":"gdbusobjectmanagerclientflags"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"from_iter","","",171,{"inputs":[{"name":"t"}],"output":{"name":"gdbusobjectmanagerclientflags"}}],[11,"hash","","",172,null],[11,"cmp","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"eq","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",172,{"inputs":[],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"all","","Returns the set containing all flags.",172,{"inputs":[],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",172,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",172,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"},{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",172,{"inputs":[{"name":"gdbuspropertyinfoflags"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"from_iter","","",172,{"inputs":[{"name":"t"}],"output":{"name":"gdbuspropertyinfoflags"}}],[11,"hash","","",173,null],[11,"cmp","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"option"}}],[11,"lt","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"le","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"gt","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"ge","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"clone","","",173,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"eq","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"ne","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"fmt","","",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",173,{"inputs":[],"output":{"name":"gdbusproxyflags"}}],[11,"all","","Returns the set containing all flags.",173,{"inputs":[],"output":{"name":"gdbusproxyflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",173,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",173,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",173,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbusproxyflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",173,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",173,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",173,{"inputs":[{"name":"gdbusproxyflags"},{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"not","","Returns the complement of this set of flags.",173,{"inputs":[{"name":"gdbusproxyflags"}],"output":{"name":"gdbusproxyflags"}}],[11,"from_iter","","",173,{"inputs":[{"name":"t"}],"output":{"name":"gdbusproxyflags"}}],[11,"hash","","",174,null],[11,"cmp","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"option"}}],[11,"lt","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"le","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"gt","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"ge","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"clone","","",174,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"eq","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"ne","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"fmt","","",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",174,{"inputs":[],"output":{"name":"gdbussendmessageflags"}}],[11,"all","","Returns the set containing all flags.",174,{"inputs":[],"output":{"name":"gdbussendmessageflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",174,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",174,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",174,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbussendmessageflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",174,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",174,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",174,{"inputs":[{"name":"gdbussendmessageflags"},{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"not","","Returns the complement of this set of flags.",174,{"inputs":[{"name":"gdbussendmessageflags"}],"output":{"name":"gdbussendmessageflags"}}],[11,"from_iter","","",174,{"inputs":[{"name":"t"}],"output":{"name":"gdbussendmessageflags"}}],[11,"hash","","",175,null],[11,"cmp","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"option"}}],[11,"lt","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"le","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"gt","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"ge","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"clone","","",175,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"eq","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"ne","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"fmt","","",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",175,{"inputs":[],"output":{"name":"gdbusserverflags"}}],[11,"all","","Returns the set containing all flags.",175,{"inputs":[],"output":{"name":"gdbusserverflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",175,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",175,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",175,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbusserverflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",175,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",175,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",175,{"inputs":[{"name":"gdbusserverflags"},{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"not","","Returns the complement of this set of flags.",175,{"inputs":[{"name":"gdbusserverflags"}],"output":{"name":"gdbusserverflags"}}],[11,"from_iter","","",175,{"inputs":[{"name":"t"}],"output":{"name":"gdbusserverflags"}}],[11,"hash","","",176,null],[11,"cmp","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"option"}}],[11,"lt","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"le","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"gt","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"ge","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"clone","","",176,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"eq","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"ne","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"fmt","","",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",176,{"inputs":[],"output":{"name":"gdbussignalflags"}}],[11,"all","","Returns the set containing all flags.",176,{"inputs":[],"output":{"name":"gdbussignalflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",176,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",176,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",176,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbussignalflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",176,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",176,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",176,{"inputs":[{"name":"gdbussignalflags"},{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"not","","Returns the complement of this set of flags.",176,{"inputs":[{"name":"gdbussignalflags"}],"output":{"name":"gdbussignalflags"}}],[11,"from_iter","","",176,{"inputs":[{"name":"t"}],"output":{"name":"gdbussignalflags"}}],[11,"hash","","",177,null],[11,"cmp","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"option"}}],[11,"lt","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"le","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"gt","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"ge","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"clone","","",177,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"eq","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"ne","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",177,{"inputs":[],"output":{"name":"gdbussubtreeflags"}}],[11,"all","","Returns the set containing all flags.",177,{"inputs":[],"output":{"name":"gdbussubtreeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",177,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",177,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",177,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdbussubtreeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",177,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",177,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",177,{"inputs":[{"name":"gdbussubtreeflags"},{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"not","","Returns the complement of this set of flags.",177,{"inputs":[{"name":"gdbussubtreeflags"}],"output":{"name":"gdbussubtreeflags"}}],[11,"from_iter","","",177,{"inputs":[{"name":"t"}],"output":{"name":"gdbussubtreeflags"}}],[11,"hash","","",178,null],[11,"cmp","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"option"}}],[11,"lt","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"le","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"gt","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"ge","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"clone","","",178,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"eq","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"ne","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"fmt","","",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",178,{"inputs":[],"output":{"name":"gdrivestartflags"}}],[11,"all","","Returns the set containing all flags.",178,{"inputs":[],"output":{"name":"gdrivestartflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",178,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",178,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",178,{"inputs":[{"name":"c_uint"}],"output":{"name":"gdrivestartflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",178,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",178,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",178,{"inputs":[{"name":"gdrivestartflags"},{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"not","","Returns the complement of this set of flags.",178,{"inputs":[{"name":"gdrivestartflags"}],"output":{"name":"gdrivestartflags"}}],[11,"from_iter","","",178,{"inputs":[{"name":"t"}],"output":{"name":"gdrivestartflags"}}],[11,"hash","","",179,null],[11,"cmp","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",179,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"eq","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",179,{"inputs":[],"output":{"name":"gfileattributeinfoflags"}}],[11,"all","","Returns the set containing all flags.",179,{"inputs":[],"output":{"name":"gfileattributeinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",179,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",179,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",179,{"inputs":[{"name":"c_uint"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",179,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",179,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",179,{"inputs":[{"name":"gfileattributeinfoflags"},{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",179,{"inputs":[{"name":"gfileattributeinfoflags"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"from_iter","","",179,{"inputs":[{"name":"t"}],"output":{"name":"gfileattributeinfoflags"}}],[11,"hash","","",180,null],[11,"cmp","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"option"}}],[11,"lt","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"le","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"gt","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"ge","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"clone","","",180,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"eq","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"ne","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"fmt","","",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",180,{"inputs":[],"output":{"name":"gfilecopyflags"}}],[11,"all","","Returns the set containing all flags.",180,{"inputs":[],"output":{"name":"gfilecopyflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",180,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",180,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",180,{"inputs":[{"name":"c_uint"}],"output":{"name":"gfilecopyflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",180,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",180,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",180,{"inputs":[{"name":"gfilecopyflags"},{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"not","","Returns the complement of this set of flags.",180,{"inputs":[{"name":"gfilecopyflags"}],"output":{"name":"gfilecopyflags"}}],[11,"from_iter","","",180,{"inputs":[{"name":"t"}],"output":{"name":"gfilecopyflags"}}],[11,"hash","","",181,null],[11,"cmp","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"option"}}],[11,"lt","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"le","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"gt","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"ge","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"clone","","",181,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"eq","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"ne","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",181,{"inputs":[],"output":{"name":"gfilecreateflags"}}],[11,"all","","Returns the set containing all flags.",181,{"inputs":[],"output":{"name":"gfilecreateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",181,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",181,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",181,{"inputs":[{"name":"c_uint"}],"output":{"name":"gfilecreateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",181,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",181,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",181,{"inputs":[{"name":"gfilecreateflags"},{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"not","","Returns the complement of this set of flags.",181,{"inputs":[{"name":"gfilecreateflags"}],"output":{"name":"gfilecreateflags"}}],[11,"from_iter","","",181,{"inputs":[{"name":"t"}],"output":{"name":"gfilecreateflags"}}],[11,"hash","","",182,null],[11,"cmp","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"option"}}],[11,"lt","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"le","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"gt","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"ge","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"clone","","",182,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"eq","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"ne","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"fmt","","",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",182,{"inputs":[],"output":{"name":"gfilemeasureflags"}}],[11,"all","","Returns the set containing all flags.",182,{"inputs":[],"output":{"name":"gfilemeasureflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",182,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",182,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",182,{"inputs":[{"name":"c_uint"}],"output":{"name":"gfilemeasureflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",182,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",182,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",182,{"inputs":[{"name":"gfilemeasureflags"},{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"not","","Returns the complement of this set of flags.",182,{"inputs":[{"name":"gfilemeasureflags"}],"output":{"name":"gfilemeasureflags"}}],[11,"from_iter","","",182,{"inputs":[{"name":"t"}],"output":{"name":"gfilemeasureflags"}}],[11,"hash","","",183,null],[11,"cmp","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"option"}}],[11,"lt","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"le","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"gt","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"ge","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"clone","","",183,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"eq","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"ne","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"fmt","","",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",183,{"inputs":[],"output":{"name":"gfilemonitorflags"}}],[11,"all","","Returns the set containing all flags.",183,{"inputs":[],"output":{"name":"gfilemonitorflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",183,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",183,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",183,{"inputs":[{"name":"c_uint"}],"output":{"name":"gfilemonitorflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",183,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",183,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",183,{"inputs":[{"name":"gfilemonitorflags"},{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"not","","Returns the complement of this set of flags.",183,{"inputs":[{"name":"gfilemonitorflags"}],"output":{"name":"gfilemonitorflags"}}],[11,"from_iter","","",183,{"inputs":[{"name":"t"}],"output":{"name":"gfilemonitorflags"}}],[11,"hash","","",184,null],[11,"cmp","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"option"}}],[11,"lt","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"le","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"gt","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"ge","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"clone","","",184,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"eq","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"fmt","","",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",184,{"inputs":[],"output":{"name":"gfilequeryinfoflags"}}],[11,"all","","Returns the set containing all flags.",184,{"inputs":[],"output":{"name":"gfilequeryinfoflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",184,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",184,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",184,{"inputs":[{"name":"c_uint"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",184,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",184,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",184,{"inputs":[{"name":"gfilequeryinfoflags"},{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"not","","Returns the complement of this set of flags.",184,{"inputs":[{"name":"gfilequeryinfoflags"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"from_iter","","",184,{"inputs":[{"name":"t"}],"output":{"name":"gfilequeryinfoflags"}}],[11,"hash","","",185,null],[11,"cmp","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"option"}}],[11,"lt","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"le","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"gt","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"ge","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"clone","","",185,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"eq","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"ne","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"fmt","","",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",185,{"inputs":[],"output":{"name":"giostreamspliceflags"}}],[11,"all","","Returns the set containing all flags.",185,{"inputs":[],"output":{"name":"giostreamspliceflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",185,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",185,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",185,{"inputs":[{"name":"c_uint"}],"output":{"name":"giostreamspliceflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",185,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",185,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",185,{"inputs":[{"name":"giostreamspliceflags"},{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"not","","Returns the complement of this set of flags.",185,{"inputs":[{"name":"giostreamspliceflags"}],"output":{"name":"giostreamspliceflags"}}],[11,"from_iter","","",185,{"inputs":[{"name":"t"}],"output":{"name":"giostreamspliceflags"}}],[11,"hash","","",186,null],[11,"cmp","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"option"}}],[11,"lt","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"le","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"gt","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"ge","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"clone","","",186,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"eq","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"ne","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"fmt","","",186,{"inputs":[{"name":"gmountmountflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",186,{"inputs":[],"output":{"name":"gmountmountflags"}}],[11,"all","","Returns the set containing all flags.",186,{"inputs":[],"output":{"name":"gmountmountflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",186,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",186,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",186,{"inputs":[{"name":"c_uint"}],"output":{"name":"gmountmountflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",186,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",186,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",186,{"inputs":[{"name":"gmountmountflags"},{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"not","","Returns the complement of this set of flags.",186,{"inputs":[{"name":"gmountmountflags"}],"output":{"name":"gmountmountflags"}}],[11,"from_iter","","",186,{"inputs":[{"name":"t"}],"output":{"name":"gmountmountflags"}}],[11,"hash","","",187,null],[11,"cmp","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"option"}}],[11,"lt","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"le","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"gt","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"ge","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"clone","","",187,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"eq","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"ne","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"fmt","","",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",187,{"inputs":[],"output":{"name":"gmountunmountflags"}}],[11,"all","","Returns the set containing all flags.",187,{"inputs":[],"output":{"name":"gmountunmountflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",187,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",187,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",187,{"inputs":[{"name":"c_uint"}],"output":{"name":"gmountunmountflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",187,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",187,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",187,{"inputs":[{"name":"gmountunmountflags"},{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"not","","Returns the complement of this set of flags.",187,{"inputs":[{"name":"gmountunmountflags"}],"output":{"name":"gmountunmountflags"}}],[11,"from_iter","","",187,{"inputs":[{"name":"t"}],"output":{"name":"gmountunmountflags"}}],[11,"hash","","",188,null],[11,"cmp","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"option"}}],[11,"lt","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"le","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"gt","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"ge","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"clone","","",188,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"eq","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"ne","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"fmt","","",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",188,{"inputs":[],"output":{"name":"goutputstreamspliceflags"}}],[11,"all","","Returns the set containing all flags.",188,{"inputs":[],"output":{"name":"goutputstreamspliceflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",188,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",188,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",188,{"inputs":[{"name":"c_uint"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",188,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",188,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",188,{"inputs":[{"name":"goutputstreamspliceflags"},{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"not","","Returns the complement of this set of flags.",188,{"inputs":[{"name":"goutputstreamspliceflags"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"from_iter","","",188,{"inputs":[{"name":"t"}],"output":{"name":"goutputstreamspliceflags"}}],[11,"hash","","",189,null],[11,"cmp","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"option"}}],[11,"lt","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"le","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"gt","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"ge","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"clone","","",189,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"eq","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"ne","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"fmt","","",189,{"inputs":[{"name":"gresourceflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",189,{"inputs":[],"output":{"name":"gresourceflags"}}],[11,"all","","Returns the set containing all flags.",189,{"inputs":[],"output":{"name":"gresourceflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",189,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",189,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",189,{"inputs":[{"name":"c_uint"}],"output":{"name":"gresourceflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",189,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",189,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",189,{"inputs":[{"name":"gresourceflags"},{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"not","","Returns the complement of this set of flags.",189,{"inputs":[{"name":"gresourceflags"}],"output":{"name":"gresourceflags"}}],[11,"from_iter","","",189,{"inputs":[{"name":"t"}],"output":{"name":"gresourceflags"}}],[11,"hash","","",190,null],[11,"cmp","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"option"}}],[11,"lt","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"le","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"gt","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"ge","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"clone","","",190,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"eq","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"ne","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"fmt","","",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",190,{"inputs":[],"output":{"name":"gresourcelookupflags"}}],[11,"all","","Returns the set containing all flags.",190,{"inputs":[],"output":{"name":"gresourcelookupflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",190,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",190,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",190,{"inputs":[{"name":"c_uint"}],"output":{"name":"gresourcelookupflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",190,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",190,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",190,{"inputs":[{"name":"gresourcelookupflags"},{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"not","","Returns the complement of this set of flags.",190,{"inputs":[{"name":"gresourcelookupflags"}],"output":{"name":"gresourcelookupflags"}}],[11,"from_iter","","",190,{"inputs":[{"name":"t"}],"output":{"name":"gresourcelookupflags"}}],[11,"hash","","",191,null],[11,"cmp","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"option"}}],[11,"lt","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"le","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"gt","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"ge","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"clone","","",191,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"eq","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"ne","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"fmt","","",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",191,{"inputs":[],"output":{"name":"gsettingsbindflags"}}],[11,"all","","Returns the set containing all flags.",191,{"inputs":[],"output":{"name":"gsettingsbindflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",191,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",191,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",191,{"inputs":[{"name":"c_uint"}],"output":{"name":"gsettingsbindflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",191,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",191,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",191,{"inputs":[{"name":"gsettingsbindflags"},{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"not","","Returns the complement of this set of flags.",191,{"inputs":[{"name":"gsettingsbindflags"}],"output":{"name":"gsettingsbindflags"}}],[11,"from_iter","","",191,{"inputs":[{"name":"t"}],"output":{"name":"gsettingsbindflags"}}],[11,"hash","","",192,null],[11,"cmp","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"option"}}],[11,"lt","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"le","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"gt","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"ge","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"clone","","",192,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"eq","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"fmt","","",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",192,{"inputs":[],"output":{"name":"gsocketmsgflags"}}],[11,"all","","Returns the set containing all flags.",192,{"inputs":[],"output":{"name":"gsocketmsgflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",192,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",192,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",192,{"inputs":[{"name":"c_uint"}],"output":{"name":"gsocketmsgflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",192,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",192,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",192,{"inputs":[{"name":"gsocketmsgflags"},{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"not","","Returns the complement of this set of flags.",192,{"inputs":[{"name":"gsocketmsgflags"}],"output":{"name":"gsocketmsgflags"}}],[11,"from_iter","","",192,{"inputs":[{"name":"t"}],"output":{"name":"gsocketmsgflags"}}],[11,"hash","","",193,null],[11,"cmp","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"option"}}],[11,"lt","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"le","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"gt","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"ge","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"eq","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"fmt","","",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",193,{"inputs":[],"output":{"name":"gsubprocessflags"}}],[11,"all","","Returns the set containing all flags.",193,{"inputs":[],"output":{"name":"gsubprocessflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",193,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",193,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",193,{"inputs":[{"name":"c_uint"}],"output":{"name":"gsubprocessflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",193,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",193,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",193,{"inputs":[{"name":"gsubprocessflags"},{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"not","","Returns the complement of this set of flags.",193,{"inputs":[{"name":"gsubprocessflags"}],"output":{"name":"gsubprocessflags"}}],[11,"from_iter","","",193,{"inputs":[{"name":"t"}],"output":{"name":"gsubprocessflags"}}],[11,"hash","","",194,null],[11,"cmp","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"option"}}],[11,"lt","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"le","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"gt","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"ge","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"clone","","",194,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"eq","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"ne","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"fmt","","",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",194,{"inputs":[],"output":{"name":"gtestdbusflags"}}],[11,"all","","Returns the set containing all flags.",194,{"inputs":[],"output":{"name":"gtestdbusflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",194,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",194,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",194,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtestdbusflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",194,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",194,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",194,{"inputs":[{"name":"gtestdbusflags"},{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"not","","Returns the complement of this set of flags.",194,{"inputs":[{"name":"gtestdbusflags"}],"output":{"name":"gtestdbusflags"}}],[11,"from_iter","","",194,{"inputs":[{"name":"t"}],"output":{"name":"gtestdbusflags"}}],[11,"hash","","",195,null],[11,"cmp","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"option"}}],[11,"lt","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"le","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"gt","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"ge","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"clone","","",195,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"eq","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"ne","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",195,{"inputs":[],"output":{"name":"gtlscertificateflags"}}],[11,"all","","Returns the set containing all flags.",195,{"inputs":[],"output":{"name":"gtlscertificateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",195,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",195,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",195,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtlscertificateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",195,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",195,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",195,{"inputs":[{"name":"gtlscertificateflags"},{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"not","","Returns the complement of this set of flags.",195,{"inputs":[{"name":"gtlscertificateflags"}],"output":{"name":"gtlscertificateflags"}}],[11,"from_iter","","",195,{"inputs":[{"name":"t"}],"output":{"name":"gtlscertificateflags"}}],[11,"hash","","",196,null],[11,"cmp","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"option"}}],[11,"lt","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"le","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"gt","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"ge","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"clone","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"eq","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"ne","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"fmt","","",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",196,{"inputs":[],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"all","","Returns the set containing all flags.",196,{"inputs":[],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",196,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",196,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"},{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"not","","Returns the complement of this set of flags.",196,{"inputs":[{"name":"gtlsdatabaseverifyflags"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"from_iter","","",196,{"inputs":[{"name":"t"}],"output":{"name":"gtlsdatabaseverifyflags"}}],[11,"hash","","",197,null],[11,"cmp","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"option"}}],[11,"lt","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"le","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"gt","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"ge","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"clone","","",197,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"eq","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"ne","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"fmt","","",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",197,{"inputs":[],"output":{"name":"gtlspasswordflags"}}],[11,"all","","Returns the set containing all flags.",197,{"inputs":[],"output":{"name":"gtlspasswordflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",197,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",197,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",197,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtlspasswordflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",197,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",197,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",197,{"inputs":[{"name":"gtlspasswordflags"},{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"not","","Returns the complement of this set of flags.",197,{"inputs":[{"name":"gtlspasswordflags"}],"output":{"name":"gtlspasswordflags"}}],[11,"from_iter","","",197,{"inputs":[{"name":"t"}],"output":{"name":"gtlspasswordflags"}}]],"paths":[[3,"GActionEntry"],[3,"GActionGroupInterface"],[3,"GActionInterface"],[3,"GActionMapInterface"],[3,"GAppInfoIface"],[3,"GAppLaunchContextClass"],[3,"GApplicationClass"],[3,"GApplicationCommandLineClass"],[3,"GAsyncInitableIface"],[3,"GAsyncResultIface"],[3,"GBufferedInputStreamClass"],[3,"GBufferedOutputStreamClass"],[3,"GCancellableClass"],[3,"GCharsetConverterClass"],[3,"GConverterIface"],[3,"GConverterInputStreamClass"],[3,"GConverterOutputStreamClass"],[3,"GDBusAnnotationInfo"],[3,"GDBusArgInfo"],[3,"GDBusErrorEntry"],[3,"GDBusInterfaceIface"],[3,"GDBusInterfaceInfo"],[3,"GDBusInterfaceSkeletonClass"],[3,"GDBusInterfaceVTable"],[3,"GDBusMethodInfo"],[3,"GDBusNodeInfo"],[3,"GDBusObjectIface"],[3,"GDBusObjectManagerClientClass"],[3,"GDBusObjectManagerIface"],[3,"GDBusObjectManagerServerClass"],[3,"GDBusObjectProxyClass"],[3,"GDBusObjectSkeletonClass"],[3,"GDBusPropertyInfo"],[3,"GDBusProxyClass"],[3,"GDBusSignalInfo"],[3,"GDBusSubtreeVTable"],[3,"GDataInputStreamClass"],[3,"GDataOutputStreamClass"],[3,"GDesktopAppInfoClass"],[3,"GDesktopAppInfoLookupIface"],[3,"GDriveIface"],[3,"GEmblemedIconClass"],[3,"GFileAttributeInfo"],[3,"GFileAttributeInfoList"],[3,"GFileDescriptorBasedIface"],[3,"GFileEnumeratorClass"],[3,"GFileIOStreamClass"],[3,"GFileIface"],[3,"GFileInputStreamClass"],[3,"GFileMonitorClass"],[3,"GFileOutputStreamClass"],[3,"GFilenameCompleterClass"],[3,"GFilterInputStreamClass"],[3,"GFilterOutputStreamClass"],[3,"GIOStreamClass"],[3,"GIconIface"],[3,"GInetAddressClass"],[3,"GInetAddressMaskClass"],[3,"GInetSocketAddressClass"],[3,"GInitableIface"],[3,"GInputStreamClass"],[3,"GInputVector"],[3,"GListModelInterface"],[3,"GListStoreClass"],[3,"GLoadableIconIface"],[3,"GMemoryInputStreamClass"],[3,"GMemoryOutputStreamClass"],[3,"GMenuAttributeIterClass"],[3,"GMenuLinkIterClass"],[3,"GMenuModelClass"],[3,"GMountIface"],[3,"GMountOperationClass"],[3,"GNativeVolumeMonitorClass"],[3,"GNetworkAddressClass"],[3,"GNetworkMonitorInterface"],[3,"GNetworkServiceClass"],[3,"GOutputMessage"],[3,"GOutputStreamClass"],[3,"GOutputVector"],[3,"GPermissionClass"],[3,"GPollableInputStreamInterface"],[3,"GPollableOutputStreamInterface"],[3,"GProxyAddressClass"],[3,"GProxyAddressEnumeratorClass"],[3,"GProxyInterface"],[3,"GProxyResolverInterface"],[3,"GRemoteActionGroupInterface"],[3,"GResolverClass"],[3,"GSeekableIface"],[3,"GSettingsClass"],[3,"GSimpleProxyResolverClass"],[3,"GSocketAddressClass"],[3,"GSocketAddressEnumeratorClass"],[3,"GSocketClass"],[3,"GSocketClientClass"],[3,"GSocketConnectableIface"],[3,"GSocketConnectionClass"],[3,"GSocketControlMessageClass"],[3,"GSocketListenerClass"],[3,"GSocketServiceClass"],[3,"GTcpConnectionClass"],[3,"GTcpWrapperConnectionClass"],[3,"GThreadedSocketServiceClass"],[3,"GTlsBackendInterface"],[3,"GTlsCertificateClass"],[3,"GTlsClientConnectionInterface"],[3,"GTlsConnectionClass"],[3,"GTlsDatabaseClass"],[3,"GTlsFileDatabaseInterface"],[3,"GTlsInteractionClass"],[3,"GTlsPasswordClass"],[3,"GTlsServerConnectionInterface"],[3,"GUnixConnectionClass"],[3,"GUnixCredentialsMessageClass"],[3,"GUnixFDListClass"],[3,"GUnixFDMessageClass"],[3,"GUnixInputStreamClass"],[3,"GUnixOutputStreamClass"],[3,"GUnixSocketAddressClass"],[3,"GVfsClass"],[3,"GVolumeIface"],[3,"GVolumeMonitorClass"],[3,"GZlibCompressorClass"],[3,"GZlibDecompressorClass"],[4,"GBusType"],[4,"GConverterResult"],[4,"GCredentialsType"],[4,"GDBusError"],[4,"GDBusMessageByteOrder"],[4,"GDBusMessageHeaderField"],[4,"GDBusMessageType"],[4,"GDataStreamByteOrder"],[4,"GDataStreamNewlineType"],[4,"GDriveStartStopType"],[4,"GEmblemOrigin"],[4,"GFileAttributeStatus"],[4,"GFileAttributeType"],[4,"GFileMonitorEvent"],[4,"GFileType"],[4,"GFilesystemPreviewType"],[4,"GIOErrorEnum"],[4,"GIOModuleScopeFlags"],[4,"GMountOperationResult"],[4,"GNetworkConnectivity"],[4,"GNotificationPriority"],[4,"GPasswordSave"],[4,"GResolverError"],[4,"GResolverRecordType"],[4,"GResourceError"],[4,"GSocketClientEvent"],[4,"GSocketFamily"],[4,"GSocketProtocol"],[4,"GSocketType"],[4,"GTlsAuthenticationMode"],[4,"GTlsDatabaseLookupFlags"],[4,"GTlsError"],[4,"GTlsInteractionResult"],[4,"GTlsRehandshakeMode"],[4,"GUnixSocketAddressType"],[4,"GZlibCompressorFormat"],[3,"GAppInfoCreateFlags"],[3,"GApplicationFlags"],[3,"GAskPasswordFlags"],[3,"GBusNameOwnerFlags"],[3,"GBusNameWatcherFlags"],[3,"GConverterFlags"],[3,"GDBusCallFlags"],[3,"GDBusCapabilityFlags"],[3,"GDBusConnectionFlags"],[3,"GDBusInterfaceSkeletonFlags"],[3,"GDBusMessageFlags"],[3,"GDBusObjectManagerClientFlags"],[3,"GDBusPropertyInfoFlags"],[3,"GDBusProxyFlags"],[3,"GDBusSendMessageFlags"],[3,"GDBusServerFlags"],[3,"GDBusSignalFlags"],[3,"GDBusSubtreeFlags"],[3,"GDriveStartFlags"],[3,"GFileAttributeInfoFlags"],[3,"GFileCopyFlags"],[3,"GFileCreateFlags"],[3,"GFileMeasureFlags"],[3,"GFileMonitorFlags"],[3,"GFileQueryInfoFlags"],[3,"GIOStreamSpliceFlags"],[3,"GMountMountFlags"],[3,"GMountUnmountFlags"],[3,"GOutputStreamSpliceFlags"],[3,"GResourceFlags"],[3,"GResourceLookupFlags"],[3,"GSettingsBindFlags"],[3,"GSocketMsgFlags"],[3,"GSubprocessFlags"],[3,"GTestDBusFlags"],[3,"GTlsCertificateFlags"],[3,"GTlsDatabaseVerifyFlags"],[3,"GTlsPasswordFlags"]]};
searchIndex["atk_sys"] = {"doc":"","items":[[3,"AtkHyperlinkStateFlags","atk_sys","",null,null],[3,"AtkActionIface","","",null,null],[12,"parent","","",0,null],[12,"do_action","","",0,null],[12,"get_n_actions","","",0,null],[12,"get_description","","",0,null],[12,"get_name","","",0,null],[12,"get_keybinding","","",0,null],[12,"set_description","","",0,null],[12,"get_localized_name","","",0,null],[3,"AtkAttribute","","",null,null],[12,"name","","",1,null],[12,"value","","",1,null],[3,"AtkComponentIface","","",null,null],[12,"parent","","",2,null],[12,"add_focus_handler","","",2,null],[12,"contains","","",2,null],[12,"ref_accessible_at_point","","",2,null],[12,"get_extents","","",2,null],[12,"get_position","","",2,null],[12,"get_size","","",2,null],[12,"grab_focus","","",2,null],[12,"remove_focus_handler","","",2,null],[12,"set_extents","","",2,null],[12,"set_position","","",2,null],[12,"set_size","","",2,null],[12,"get_layer","","",2,null],[12,"get_mdi_zorder","","",2,null],[12,"bounds_changed","","",2,null],[12,"get_alpha","","",2,null],[3,"AtkDocumentIface","","",null,null],[12,"parent","","",3,null],[12,"get_document_type","","",3,null],[12,"get_document","","",3,null],[12,"get_document_locale","","",3,null],[12,"get_document_attributes","","",3,null],[12,"get_document_attribute_value","","",3,null],[12,"set_document_attribute","","",3,null],[12,"get_current_page_number","","",3,null],[12,"get_page_count","","",3,null],[3,"AtkEditableTextIface","","",null,null],[12,"parent_interface","","",4,null],[12,"set_run_attributes","","",4,null],[12,"set_text_contents","","",4,null],[12,"insert_text","","",4,null],[12,"copy_text","","",4,null],[12,"cut_text","","",4,null],[12,"delete_text","","",4,null],[12,"paste_text","","",4,null],[3,"AtkGObjectAccessibleClass","","",null,null],[12,"parent_class","","",5,null],[12,"pad1","","",5,null],[12,"pad2","","",5,null],[3,"AtkHyperlinkClass","","",null,null],[12,"parent","","",6,null],[12,"get_uri","","",6,null],[12,"get_object","","",6,null],[12,"get_end_index","","",6,null],[12,"get_start_index","","",6,null],[12,"is_valid","","",6,null],[12,"get_n_anchors","","",6,null],[12,"link_state","","",6,null],[12,"is_selected_link","","",6,null],[12,"link_activated","","",6,null],[12,"pad1","","",6,null],[3,"AtkHyperlinkImplIface","","",null,null],[12,"parent","","",7,null],[12,"get_hyperlink","","",7,null],[3,"AtkHypertextIface","","",null,null],[12,"parent","","",8,null],[12,"get_link","","",8,null],[12,"get_n_links","","",8,null],[12,"get_link_index","","",8,null],[12,"link_selected","","",8,null],[3,"AtkImageIface","","",null,null],[12,"parent","","",9,null],[12,"get_image_position","","",9,null],[12,"get_image_description","","",9,null],[12,"get_image_size","","",9,null],[12,"set_image_description","","",9,null],[12,"get_image_locale","","",9,null],[3,"AtkImplementor","","",null,null],[3,"AtkKeyEventStruct","","",null,null],[12,"type_","","",10,null],[12,"state","","",10,null],[12,"keyval","","",10,null],[12,"length","","",10,null],[12,"string","","",10,null],[12,"keycode","","",10,null],[12,"timestamp","","",10,null],[3,"AtkMiscClass","","",null,null],[12,"parent","","",11,null],[12,"threads_enter","","",11,null],[12,"threads_leave","","",11,null],[12,"vfuncs","","",11,null],[3,"AtkNoOpObjectClass","","",null,null],[12,"parent_class","","",12,null],[3,"AtkNoOpObjectFactoryClass","","",null,null],[12,"parent_class","","",13,null],[3,"AtkObjectClass","","",null,null],[12,"parent","","",14,null],[12,"get_name","","",14,null],[12,"get_description","","",14,null],[12,"get_parent","","",14,null],[12,"get_n_children","","",14,null],[12,"ref_child","","",14,null],[12,"get_index_in_parent","","",14,null],[12,"ref_relation_set","","",14,null],[12,"get_role","","",14,null],[12,"get_layer","","",14,null],[12,"get_mdi_zorder","","",14,null],[12,"ref_state_set","","",14,null],[12,"set_name","","",14,null],[12,"set_description","","",14,null],[12,"set_parent","","",14,null],[12,"set_role","","",14,null],[12,"connect_property_change_handler","","",14,null],[12,"remove_property_change_handler","","",14,null],[12,"initialize","","",14,null],[12,"children_changed","","",14,null],[12,"focus_event","","",14,null],[12,"property_change","","",14,null],[12,"state_change","","",14,null],[12,"visible_data_changed","","",14,null],[12,"active_descendant_changed","","",14,null],[12,"get_attributes","","",14,null],[12,"get_object_locale","","",14,null],[12,"pad1","","",14,null],[3,"AtkObjectFactoryClass","","",null,null],[12,"parent_class","","",15,null],[12,"create_accessible","","",15,null],[12,"invalidate","","",15,null],[12,"get_accessible_type","","",15,null],[12,"pad1","","",15,null],[12,"pad2","","",15,null],[3,"AtkPlugClass","","",null,null],[12,"parent_class","","",16,null],[12,"get_object_id","","",16,null],[3,"AtkPropertyValues","","",null,null],[12,"property_name","","",17,null],[12,"old_value","","",17,null],[12,"new_value","","",17,null],[3,"AtkRange","","",null,null],[3,"AtkRectangle","","",null,null],[12,"x","","",18,null],[12,"y","","",18,null],[12,"width","","",18,null],[12,"height","","",18,null],[3,"AtkRegistryClass","","",null,null],[12,"parent_class","","",19,null],[3,"AtkRelationClass","","",null,null],[12,"parent","","",20,null],[3,"AtkRelationSetClass","","",null,null],[12,"parent","","",21,null],[12,"pad1","","",21,null],[12,"pad2","","",21,null],[3,"AtkSelectionIface","","",null,null],[12,"parent","","",22,null],[12,"add_selection","","",22,null],[12,"clear_selection","","",22,null],[12,"ref_selection","","",22,null],[12,"get_selection_count","","",22,null],[12,"is_child_selected","","",22,null],[12,"remove_selection","","",22,null],[12,"select_all_selection","","",22,null],[12,"selection_changed","","",22,null],[3,"AtkSocketClass","","",null,null],[12,"parent_class","","",23,null],[12,"embed","","",23,null],[3,"AtkStateSetClass","","",null,null],[12,"parent","","",24,null],[3,"AtkStreamableContentIface","","",null,null],[12,"parent","","",25,null],[12,"get_n_mime_types","","",25,null],[12,"get_mime_type","","",25,null],[12,"get_stream","","",25,null],[12,"get_uri","","",25,null],[12,"pad1","","",25,null],[12,"pad2","","",25,null],[12,"pad3","","",25,null],[3,"AtkTableCellIface","","",null,null],[12,"parent","","",26,null],[12,"get_column_span","","",26,null],[12,"get_column_header_cells","","",26,null],[12,"get_position","","",26,null],[12,"get_row_span","","",26,null],[12,"get_row_header_cells","","",26,null],[12,"get_row_column_span","","",26,null],[12,"get_table","","",26,null],[3,"AtkTableIface","","",null,null],[12,"parent","","",27,null],[12,"ref_at","","",27,null],[12,"get_index_at","","",27,null],[12,"get_column_at_index","","",27,null],[12,"get_row_at_index","","",27,null],[12,"get_n_columns","","",27,null],[12,"get_n_rows","","",27,null],[12,"get_column_extent_at","","",27,null],[12,"get_row_extent_at","","",27,null],[12,"get_caption","","",27,null],[12,"get_column_description","","",27,null],[12,"get_column_header","","",27,null],[12,"get_row_description","","",27,null],[12,"get_row_header","","",27,null],[12,"get_summary","","",27,null],[12,"set_caption","","",27,null],[12,"set_column_description","","",27,null],[12,"set_column_header","","",27,null],[12,"set_row_description","","",27,null],[12,"set_row_header","","",27,null],[12,"set_summary","","",27,null],[12,"get_selected_columns","","",27,null],[12,"get_selected_rows","","",27,null],[12,"is_column_selected","","",27,null],[12,"is_row_selected","","",27,null],[12,"is_selected","","",27,null],[12,"add_row_selection","","",27,null],[12,"remove_row_selection","","",27,null],[12,"add_column_selection","","",27,null],[12,"remove_column_selection","","",27,null],[12,"row_inserted","","",27,null],[12,"column_inserted","","",27,null],[12,"row_deleted","","",27,null],[12,"column_deleted","","",27,null],[12,"row_reordered","","",27,null],[12,"column_reordered","","",27,null],[12,"model_changed","","",27,null],[3,"AtkTextIface","","",null,null],[12,"parent","","",28,null],[12,"get_text","","",28,null],[12,"get_text_after_offset","","",28,null],[12,"get_text_at_offset","","",28,null],[12,"get_character_at_offset","","",28,null],[12,"get_text_before_offset","","",28,null],[12,"get_caret_offset","","",28,null],[12,"get_run_attributes","","",28,null],[12,"get_default_attributes","","",28,null],[12,"get_character_extents","","",28,null],[12,"get_character_count","","",28,null],[12,"get_offset_at_point","","",28,null],[12,"get_n_selections","","",28,null],[12,"get_selection","","",28,null],[12,"add_selection","","",28,null],[12,"remove_selection","","",28,null],[12,"set_selection","","",28,null],[12,"set_caret_offset","","",28,null],[12,"text_changed","","",28,null],[12,"text_caret_moved","","",28,null],[12,"text_selection_changed","","",28,null],[12,"text_attributes_changed","","",28,null],[12,"get_range_extents","","",28,null],[12,"get_bounded_ranges","","",28,null],[12,"get_string_at_offset","","",28,null],[3,"AtkTextRange","","",null,null],[12,"bounds","","",29,null],[12,"start_offset","","",29,null],[12,"end_offset","","",29,null],[12,"content","","",29,null],[3,"AtkTextRectangle","","",null,null],[12,"x","","",30,null],[12,"y","","",30,null],[12,"width","","",30,null],[12,"height","","",30,null],[3,"AtkUtilClass","","",null,null],[12,"parent","","",31,null],[12,"add_global_event_listener","","",31,null],[12,"remove_global_event_listener","","",31,null],[12,"add_key_event_listener","","",31,null],[12,"remove_key_event_listener","","",31,null],[12,"get_root","","",31,null],[12,"get_toolkit_name","","",31,null],[12,"get_toolkit_version","","",31,null],[3,"AtkValueIface","","",null,null],[12,"parent","","",32,null],[12,"get_current_value","","",32,null],[12,"get_maximum_value","","",32,null],[12,"get_minimum_value","","",32,null],[12,"set_current_value","","",32,null],[12,"get_minimum_increment","","",32,null],[12,"get_value_and_text","","",32,null],[12,"get_range","","",32,null],[12,"get_increment","","",32,null],[12,"get_sub_ranges","","",32,null],[12,"set_value","","",32,null],[3,"AtkWindowIface","","",null,null],[12,"parent","","",33,null],[3,"AtkGObjectAccessible","","",null,null],[3,"AtkHyperlink","","",null,null],[3,"AtkMisc","","",null,null],[3,"AtkNoOpObject","","",null,null],[3,"AtkNoOpObjectFactory","","",null,null],[3,"AtkObject","","",null,null],[3,"AtkObjectFactory","","",null,null],[3,"AtkPlug","","",null,null],[3,"AtkRegistry","","",null,null],[3,"AtkRelation","","",null,null],[3,"AtkRelationSet","","",null,null],[3,"AtkSocket","","",null,null],[3,"AtkStateSet","","",null,null],[3,"AtkUtil","","",null,null],[3,"AtkAction","","",null,null],[3,"AtkComponent","","",null,null],[3,"AtkDocument","","",null,null],[3,"AtkEditableText","","",null,null],[3,"AtkHyperlinkImpl","","",null,null],[3,"AtkHypertext","","",null,null],[3,"AtkImage","","",null,null],[3,"AtkImplementorIface","","",null,null],[3,"AtkSelection","","",null,null],[3,"AtkStreamableContent","","",null,null],[3,"AtkTable","","",null,null],[3,"AtkTableCell","","",null,null],[3,"AtkText","","",null,null],[3,"AtkValue","","",null,null],[3,"AtkWindow","","",null,null],[4,"AtkCoordType","","",null,null],[13,"Screen","","",34,null],[13,"Window","","",34,null],[4,"AtkKeyEventType","","",null,null],[13,"Press","","",35,null],[13,"Release","","",35,null],[13,"LastDefined","","",35,null],[4,"AtkLayer","","",null,null],[13,"Invalid","","",36,null],[13,"Background","","",36,null],[13,"Canvas","","",36,null],[13,"Widget","","",36,null],[13,"Mdi","","",36,null],[13,"Popup","","",36,null],[13,"Overlay","","",36,null],[13,"Window","","",36,null],[4,"AtkRelationType","","",null,null],[13,"Null","","",37,null],[13,"ControlledBy","","",37,null],[13,"ControllerFor","","",37,null],[13,"LabelFor","","",37,null],[13,"LabelledBy","","",37,null],[13,"MemberOf","","",37,null],[13,"NodeChildOf","","",37,null],[13,"FlowsTo","","",37,null],[13,"FlowsFrom","","",37,null],[13,"SubwindowOf","","",37,null],[13,"Embeds","","",37,null],[13,"EmbeddedBy","","",37,null],[13,"PopupFor","","",37,null],[13,"ParentWindowOf","","",37,null],[13,"DescribedBy","","",37,null],[13,"DescriptionFor","","",37,null],[13,"NodeParentOf","","",37,null],[13,"LastDefined","","",37,null],[4,"AtkRole","","",null,null],[13,"Invalid","","",38,null],[13,"AcceleratorLabel","","",38,null],[13,"Alert","","",38,null],[13,"Animation","","",38,null],[13,"Arrow","","",38,null],[13,"Calendar","","",38,null],[13,"Canvas","","",38,null],[13,"CheckBox","","",38,null],[13,"CheckMenuItem","","",38,null],[13,"ColorChooser","","",38,null],[13,"ColumnHeader","","",38,null],[13,"ComboBox","","",38,null],[13,"DateEditor","","",38,null],[13,"DesktopIcon","","",38,null],[13,"DesktopFrame","","",38,null],[13,"Dial","","",38,null],[13,"Dialog","","",38,null],[13,"DirectoryPane","","",38,null],[13,"DrawingArea","","",38,null],[13,"FileChooser","","",38,null],[13,"Filler","","",38,null],[13,"FontChooser","","",38,null],[13,"Frame","","",38,null],[13,"GlassPane","","",38,null],[13,"HtmlContainer","","",38,null],[13,"Icon","","",38,null],[13,"Image","","",38,null],[13,"InternalFrame","","",38,null],[13,"Label","","",38,null],[13,"LayeredPane","","",38,null],[13,"List","","",38,null],[13,"ListItem","","",38,null],[13,"Menu","","",38,null],[13,"MenuBar","","",38,null],[13,"MenuItem","","",38,null],[13,"OptionPane","","",38,null],[13,"PageTab","","",38,null],[13,"PageTabList","","",38,null],[13,"Panel","","",38,null],[13,"PasswordText","","",38,null],[13,"PopupMenu","","",38,null],[13,"ProgressBar","","",38,null],[13,"PushButton","","",38,null],[13,"RadioButton","","",38,null],[13,"RadioMenuItem","","",38,null],[13,"RootPane","","",38,null],[13,"RowHeader","","",38,null],[13,"ScrollBar","","",38,null],[13,"ScrollPane","","",38,null],[13,"Separator","","",38,null],[13,"Slider","","",38,null],[13,"SplitPane","","",38,null],[13,"SpinButton","","",38,null],[13,"Statusbar","","",38,null],[13,"Table","","",38,null],[13,"TableCell","","",38,null],[13,"TableColumnHeader","","",38,null],[13,"TableRowHeader","","",38,null],[13,"TearOffMenuItem","","",38,null],[13,"Terminal","","",38,null],[13,"Text","","",38,null],[13,"ToggleButton","","",38,null],[13,"ToolBar","","",38,null],[13,"ToolTip","","",38,null],[13,"Tree","","",38,null],[13,"TreeTable","","",38,null],[13,"Unknown","","",38,null],[13,"Viewport","","",38,null],[13,"Window","","",38,null],[13,"Header","","",38,null],[13,"Footer","","",38,null],[13,"Paragraph","","",38,null],[13,"Ruler","","",38,null],[13,"Application","","",38,null],[13,"Autocomplete","","",38,null],[13,"EditBar","","",38,null],[13,"Embedded","","",38,null],[13,"Entry","","",38,null],[13,"Chart","","",38,null],[13,"Caption","","",38,null],[13,"DocumentFrame","","",38,null],[13,"Heading","","",38,null],[13,"Page","","",38,null],[13,"Section","","",38,null],[13,"RedundantObject","","",38,null],[13,"Form","","",38,null],[13,"Link","","",38,null],[13,"InputMethodWindow","","",38,null],[13,"TableRow","","",38,null],[13,"TreeItem","","",38,null],[13,"DocumentSpreadsheet","","",38,null],[13,"DocumentPresentation","","",38,null],[13,"DocumentText","","",38,null],[13,"DocumentWeb","","",38,null],[13,"DocumentEmail","","",38,null],[13,"Comment","","",38,null],[13,"ListBox","","",38,null],[13,"Grouping","","",38,null],[13,"ImageMap","","",38,null],[13,"Notification","","",38,null],[13,"InfoBar","","",38,null],[13,"LevelBar","","",38,null],[13,"TitleBar","","",38,null],[13,"BlockQuote","","",38,null],[13,"Audio","","",38,null],[13,"Video","","",38,null],[13,"Definition","","",38,null],[13,"Article","","",38,null],[13,"Landmark","","",38,null],[13,"Log","","",38,null],[13,"Marquee","","",38,null],[13,"Math","","",38,null],[13,"Rating","","",38,null],[13,"Timer","","",38,null],[13,"DescriptionList","","",38,null],[13,"DescriptionTerm","","",38,null],[13,"DescriptionValue","","",38,null],[13,"Static","","",38,null],[13,"MathFraction","","",38,null],[13,"MathRoot","","",38,null],[13,"Subscript","","",38,null],[13,"Superscript","","",38,null],[13,"LastDefined","","",38,null],[4,"AtkStateType","","",null,null],[13,"Invalid","","",39,null],[13,"Active","","",39,null],[13,"Armed","","",39,null],[13,"Busy","","",39,null],[13,"Checked","","",39,null],[13,"Defunct","","",39,null],[13,"Editable","","",39,null],[13,"Enabled","","",39,null],[13,"Expandable","","",39,null],[13,"Expanded","","",39,null],[13,"Focusable","","",39,null],[13,"Focused","","",39,null],[13,"Horizontal","","",39,null],[13,"Iconified","","",39,null],[13,"Modal","","",39,null],[13,"MultiLine","","",39,null],[13,"Multiselectable","","",39,null],[13,"Opaque","","",39,null],[13,"Pressed","","",39,null],[13,"Resizable","","",39,null],[13,"Selectable","","",39,null],[13,"Selected","","",39,null],[13,"Sensitive","","",39,null],[13,"Showing","","",39,null],[13,"SingleLine","","",39,null],[13,"Stale","","",39,null],[13,"Transient","","",39,null],[13,"Vertical","","",39,null],[13,"Visible","","",39,null],[13,"ManagesDescendants","","",39,null],[13,"Indeterminate","","",39,null],[13,"Truncated","","",39,null],[13,"Required","","",39,null],[13,"InvalidEntry","","",39,null],[13,"SupportsAutocompletion","","",39,null],[13,"SelectableText","","",39,null],[13,"Default","","",39,null],[13,"Animated","","",39,null],[13,"Visited","","",39,null],[13,"Checkable","","",39,null],[13,"HasPopup","","",39,null],[13,"HasTooltip","","",39,null],[13,"ReadOnly","","",39,null],[13,"LastDefined","","",39,null],[4,"AtkTextAttribute","","",null,null],[13,"Invalid","","",40,null],[13,"LeftMargin","","",40,null],[13,"RightMargin","","",40,null],[13,"Indent","","",40,null],[13,"Invisible","","",40,null],[13,"Editable","","",40,null],[13,"PixelsAboveLines","","",40,null],[13,"PixelsBelowLines","","",40,null],[13,"PixelsInsideWrap","","",40,null],[13,"BgFullHeight","","",40,null],[13,"Rise","","",40,null],[13,"Underline","","",40,null],[13,"Strikethrough","","",40,null],[13,"Size","","",40,null],[13,"Scale","","",40,null],[13,"Weight","","",40,null],[13,"Language","","",40,null],[13,"FamilyName","","",40,null],[13,"BgColor","","",40,null],[13,"FgColor","","",40,null],[13,"BgStipple","","",40,null],[13,"FgStipple","","",40,null],[13,"WrapMode","","",40,null],[13,"Direction","","",40,null],[13,"Justification","","",40,null],[13,"Stretch","","",40,null],[13,"Variant","","",40,null],[13,"Style","","",40,null],[13,"LastDefined","","",40,null],[4,"AtkTextBoundary","","",null,null],[13,"Char","","",41,null],[13,"WordStart","","",41,null],[13,"WordEnd","","",41,null],[13,"SentenceStart","","",41,null],[13,"SentenceEnd","","",41,null],[13,"LineStart","","",41,null],[13,"LineEnd","","",41,null],[4,"AtkTextClipType","","",null,null],[13,"None","","",42,null],[13,"Min","","",42,null],[13,"Max","","",42,null],[13,"Both","","",42,null],[4,"AtkTextGranularity","","",null,null],[13,"Char","","",43,null],[13,"Word","","",43,null],[13,"Sentence","","",43,null],[13,"Line","","",43,null],[13,"Paragraph","","",43,null],[4,"AtkValueType","","",null,null],[13,"VeryWeak","","",44,null],[13,"Weak","","",44,null],[13,"Acceptable","","",44,null],[13,"Strong","","",44,null],[13,"VeryStrong","","",44,null],[13,"VeryLow","","",44,null],[13,"Low","","",44,null],[13,"Medium","","",44,null],[13,"High","","",44,null],[13,"VeryHigh","","",44,null],[13,"VeryBad","","",44,null],[13,"Bad","","",44,null],[13,"Good","","",44,null],[13,"VeryGood","","",44,null],[13,"Best","","",44,null],[13,"LastDefined","","",44,null],[5,"atk_relation_type_for_name","","",null,null],[5,"atk_relation_type_get_name","","",null,null],[5,"atk_relation_type_register","","",null,null],[5,"atk_role_for_name","","",null,null],[5,"atk_role_get_localized_name","","",null,null],[5,"atk_role_get_name","","",null,null],[5,"atk_role_register","","",null,null],[5,"atk_state_type_for_name","","",null,null],[5,"atk_state_type_get_name","","",null,null],[5,"atk_state_type_register","","",null,null],[5,"atk_text_attribute_for_name","","",null,null],[5,"atk_text_attribute_get_name","","",null,null],[5,"atk_text_attribute_get_value","","",null,null],[5,"atk_text_attribute_register","","",null,null],[5,"atk_value_type_get_localized_name","","",null,null],[5,"atk_value_type_get_name","","",null,null],[5,"atk_attribute_set_free","","",null,null],[5,"atk_implementor_ref_accessible","","",null,null],[5,"atk_range_get_type","","",null,null],[5,"atk_rectangle_get_type","","",null,null],[5,"atk_text_range_get_type","","",null,null],[5,"atk_gobject_accessible_get_type","","",null,null],[5,"atk_gobject_accessible_for_object","","",null,null],[5,"atk_gobject_accessible_get_object","","",null,null],[5,"atk_hyperlink_get_type","","",null,null],[5,"atk_hyperlink_get_end_index","","",null,null],[5,"atk_hyperlink_get_n_anchors","","",null,null],[5,"atk_hyperlink_get_object","","",null,null],[5,"atk_hyperlink_get_start_index","","",null,null],[5,"atk_hyperlink_get_uri","","",null,null],[5,"atk_hyperlink_is_inline","","",null,null],[5,"atk_hyperlink_is_selected_link","","",null,null],[5,"atk_hyperlink_is_valid","","",null,null],[5,"atk_misc_get_type","","",null,null],[5,"atk_misc_get_instance","","",null,null],[5,"atk_misc_threads_enter","","",null,null],[5,"atk_misc_threads_leave","","",null,null],[5,"atk_no_op_object_get_type","","",null,null],[5,"atk_no_op_object_new","","",null,null],[5,"atk_no_op_object_factory_get_type","","",null,null],[5,"atk_no_op_object_factory_new","","",null,null],[5,"atk_object_get_type","","",null,null],[5,"atk_object_add_relationship","","",null,null],[5,"atk_object_connect_property_change_handler","","",null,null],[5,"atk_object_get_attributes","","",null,null],[5,"atk_object_get_description","","",null,null],[5,"atk_object_get_index_in_parent","","",null,null],[5,"atk_object_get_layer","","",null,null],[5,"atk_object_get_mdi_zorder","","",null,null],[5,"atk_object_get_n_accessible_children","","",null,null],[5,"atk_object_get_name","","",null,null],[5,"atk_object_get_parent","","",null,null],[5,"atk_object_get_role","","",null,null],[5,"atk_object_initialize","","",null,null],[5,"atk_object_notify_state_change","","",null,null],[5,"atk_object_peek_parent","","",null,null],[5,"atk_object_ref_accessible_child","","",null,null],[5,"atk_object_ref_relation_set","","",null,null],[5,"atk_object_ref_state_set","","",null,null],[5,"atk_object_remove_property_change_handler","","",null,null],[5,"atk_object_remove_relationship","","",null,null],[5,"atk_object_set_description","","",null,null],[5,"atk_object_set_name","","",null,null],[5,"atk_object_set_parent","","",null,null],[5,"atk_object_set_role","","",null,null],[5,"atk_object_factory_get_type","","",null,null],[5,"atk_object_factory_create_accessible","","",null,null],[5,"atk_object_factory_get_accessible_type","","",null,null],[5,"atk_object_factory_invalidate","","",null,null],[5,"atk_plug_get_type","","",null,null],[5,"atk_plug_new","","",null,null],[5,"atk_plug_get_id","","",null,null],[5,"atk_registry_get_type","","",null,null],[5,"atk_registry_get_factory","","",null,null],[5,"atk_registry_get_factory_type","","",null,null],[5,"atk_registry_set_factory_type","","",null,null],[5,"atk_relation_get_type","","",null,null],[5,"atk_relation_new","","",null,null],[5,"atk_relation_add_target","","",null,null],[5,"atk_relation_get_relation_type","","",null,null],[5,"atk_relation_get_target","","",null,null],[5,"atk_relation_remove_target","","",null,null],[5,"atk_relation_set_get_type","","",null,null],[5,"atk_relation_set_new","","",null,null],[5,"atk_relation_set_add","","",null,null],[5,"atk_relation_set_add_relation_by_type","","",null,null],[5,"atk_relation_set_contains","","",null,null],[5,"atk_relation_set_contains_target","","",null,null],[5,"atk_relation_set_get_n_relations","","",null,null],[5,"atk_relation_set_get_relation","","",null,null],[5,"atk_relation_set_get_relation_by_type","","",null,null],[5,"atk_relation_set_remove","","",null,null],[5,"atk_socket_get_type","","",null,null],[5,"atk_socket_new","","",null,null],[5,"atk_socket_embed","","",null,null],[5,"atk_socket_is_occupied","","",null,null],[5,"atk_state_set_get_type","","",null,null],[5,"atk_state_set_new","","",null,null],[5,"atk_state_set_add_state","","",null,null],[5,"atk_state_set_add_states","","",null,null],[5,"atk_state_set_and_sets","","",null,null],[5,"atk_state_set_clear_states","","",null,null],[5,"atk_state_set_contains_state","","",null,null],[5,"atk_state_set_contains_states","","",null,null],[5,"atk_state_set_is_empty","","",null,null],[5,"atk_state_set_or_sets","","",null,null],[5,"atk_state_set_remove_state","","",null,null],[5,"atk_state_set_xor_sets","","",null,null],[5,"atk_util_get_type","","",null,null],[5,"atk_action_get_type","","",null,null],[5,"atk_action_do_action","","",null,null],[5,"atk_action_get_description","","",null,null],[5,"atk_action_get_keybinding","","",null,null],[5,"atk_action_get_localized_name","","",null,null],[5,"atk_action_get_n_actions","","",null,null],[5,"atk_action_get_name","","",null,null],[5,"atk_action_set_description","","",null,null],[5,"atk_component_get_type","","",null,null],[5,"atk_component_add_focus_handler","","",null,null],[5,"atk_component_contains","","",null,null],[5,"atk_component_get_alpha","","",null,null],[5,"atk_component_get_extents","","",null,null],[5,"atk_component_get_layer","","",null,null],[5,"atk_component_get_mdi_zorder","","",null,null],[5,"atk_component_get_position","","",null,null],[5,"atk_component_get_size","","",null,null],[5,"atk_component_grab_focus","","",null,null],[5,"atk_component_ref_accessible_at_point","","",null,null],[5,"atk_component_remove_focus_handler","","",null,null],[5,"atk_component_set_extents","","",null,null],[5,"atk_component_set_position","","",null,null],[5,"atk_component_set_size","","",null,null],[5,"atk_document_get_type","","",null,null],[5,"atk_document_get_attribute_value","","",null,null],[5,"atk_document_get_attributes","","",null,null],[5,"atk_document_get_document","","",null,null],[5,"atk_document_get_document_type","","",null,null],[5,"atk_document_get_locale","","",null,null],[5,"atk_document_set_attribute_value","","",null,null],[5,"atk_editable_text_get_type","","",null,null],[5,"atk_editable_text_copy_text","","",null,null],[5,"atk_editable_text_cut_text","","",null,null],[5,"atk_editable_text_delete_text","","",null,null],[5,"atk_editable_text_insert_text","","",null,null],[5,"atk_editable_text_paste_text","","",null,null],[5,"atk_editable_text_set_run_attributes","","",null,null],[5,"atk_editable_text_set_text_contents","","",null,null],[5,"atk_hyperlink_impl_get_type","","",null,null],[5,"atk_hyperlink_impl_get_hyperlink","","",null,null],[5,"atk_hypertext_get_type","","",null,null],[5,"atk_hypertext_get_link","","",null,null],[5,"atk_hypertext_get_link_index","","",null,null],[5,"atk_hypertext_get_n_links","","",null,null],[5,"atk_image_get_type","","",null,null],[5,"atk_image_get_image_description","","",null,null],[5,"atk_image_get_image_locale","","",null,null],[5,"atk_image_get_image_position","","",null,null],[5,"atk_image_get_image_size","","",null,null],[5,"atk_image_set_image_description","","",null,null],[5,"atk_implementor_get_type","","",null,null],[5,"atk_selection_get_type","","",null,null],[5,"atk_selection_add_selection","","",null,null],[5,"atk_selection_clear_selection","","",null,null],[5,"atk_selection_get_selection_count","","",null,null],[5,"atk_selection_is_child_selected","","",null,null],[5,"atk_selection_ref_selection","","",null,null],[5,"atk_selection_remove_selection","","",null,null],[5,"atk_selection_select_all_selection","","",null,null],[5,"atk_streamable_content_get_type","","",null,null],[5,"atk_streamable_content_get_mime_type","","",null,null],[5,"atk_streamable_content_get_n_mime_types","","",null,null],[5,"atk_streamable_content_get_stream","","",null,null],[5,"atk_streamable_content_get_uri","","",null,null],[5,"atk_table_get_type","","",null,null],[5,"atk_table_add_column_selection","","",null,null],[5,"atk_table_add_row_selection","","",null,null],[5,"atk_table_get_caption","","",null,null],[5,"atk_table_get_column_at_index","","",null,null],[5,"atk_table_get_column_description","","",null,null],[5,"atk_table_get_column_extent_at","","",null,null],[5,"atk_table_get_column_header","","",null,null],[5,"atk_table_get_index_at","","",null,null],[5,"atk_table_get_n_columns","","",null,null],[5,"atk_table_get_n_rows","","",null,null],[5,"atk_table_get_row_at_index","","",null,null],[5,"atk_table_get_row_description","","",null,null],[5,"atk_table_get_row_extent_at","","",null,null],[5,"atk_table_get_row_header","","",null,null],[5,"atk_table_get_selected_columns","","",null,null],[5,"atk_table_get_selected_rows","","",null,null],[5,"atk_table_get_summary","","",null,null],[5,"atk_table_is_column_selected","","",null,null],[5,"atk_table_is_row_selected","","",null,null],[5,"atk_table_is_selected","","",null,null],[5,"atk_table_ref_at","","",null,null],[5,"atk_table_remove_column_selection","","",null,null],[5,"atk_table_remove_row_selection","","",null,null],[5,"atk_table_set_caption","","",null,null],[5,"atk_table_set_column_description","","",null,null],[5,"atk_table_set_column_header","","",null,null],[5,"atk_table_set_row_description","","",null,null],[5,"atk_table_set_row_header","","",null,null],[5,"atk_table_set_summary","","",null,null],[5,"atk_table_cell_get_type","","",null,null],[5,"atk_text_get_type","","",null,null],[5,"atk_text_free_ranges","","",null,null],[5,"atk_text_add_selection","","",null,null],[5,"atk_text_get_bounded_ranges","","",null,null],[5,"atk_text_get_caret_offset","","",null,null],[5,"atk_text_get_character_at_offset","","",null,null],[5,"atk_text_get_character_count","","",null,null],[5,"atk_text_get_character_extents","","",null,null],[5,"atk_text_get_default_attributes","","",null,null],[5,"atk_text_get_n_selections","","",null,null],[5,"atk_text_get_offset_at_point","","",null,null],[5,"atk_text_get_range_extents","","",null,null],[5,"atk_text_get_run_attributes","","",null,null],[5,"atk_text_get_selection","","",null,null],[5,"atk_text_get_text","","",null,null],[5,"atk_text_get_text_after_offset","","",null,null],[5,"atk_text_get_text_at_offset","","",null,null],[5,"atk_text_get_text_before_offset","","",null,null],[5,"atk_text_remove_selection","","",null,null],[5,"atk_text_set_caret_offset","","",null,null],[5,"atk_text_set_selection","","",null,null],[5,"atk_value_get_type","","",null,null],[5,"atk_value_get_current_value","","",null,null],[5,"atk_value_get_maximum_value","","",null,null],[5,"atk_value_get_minimum_increment","","",null,null],[5,"atk_value_get_minimum_value","","",null,null],[5,"atk_value_set_current_value","","",null,null],[5,"atk_window_get_type","","",null,null],[5,"atk_add_focus_tracker","","",null,null],[5,"atk_add_global_event_listener","","",null,null],[5,"atk_add_key_event_listener","","",null,null],[5,"atk_focus_tracker_init","","",null,null],[5,"atk_focus_tracker_notify","","",null,null],[5,"atk_get_default_registry","","",null,null],[5,"atk_get_focus_object","","",null,null],[5,"atk_get_root","","",null,null],[5,"atk_get_toolkit_name","","",null,null],[5,"atk_get_toolkit_version","","",null,null],[5,"atk_get_version","","",null,null],[5,"atk_remove_focus_tracker","","",null,null],[5,"atk_remove_global_event_listener","","",null,null],[5,"atk_remove_key_event_listener","","",null,null],[6,"AtkAttributeSet","","",null,null],[6,"AtkState","","",null,null],[6,"AtkEventListener","","",null,null],[6,"AtkEventListenerInit","","",null,null],[6,"AtkFocusHandler","","",null,null],[6,"AtkFunction","","",null,null],[6,"AtkKeySnoopFunc","","",null,null],[6,"AtkPropertyChangeHandler","","",null,null],[17,"ATK_XY_SCREEN","","",null,null],[17,"ATK_XY_WINDOW","","",null,null],[17,"ATK_KEY_EVENT_PRESS","","",null,null],[17,"ATK_KEY_EVENT_RELEASE","","",null,null],[17,"ATK_KEY_EVENT_LAST_DEFINED","","",null,null],[17,"ATK_LAYER_INVALID","","",null,null],[17,"ATK_LAYER_BACKGROUND","","",null,null],[17,"ATK_LAYER_CANVAS","","",null,null],[17,"ATK_LAYER_WIDGET","","",null,null],[17,"ATK_LAYER_MDI","","",null,null],[17,"ATK_LAYER_POPUP","","",null,null],[17,"ATK_LAYER_OVERLAY","","",null,null],[17,"ATK_LAYER_WINDOW","","",null,null],[17,"ATK_RELATION_NULL","","",null,null],[17,"ATK_RELATION_CONTROLLED_BY","","",null,null],[17,"ATK_RELATION_CONTROLLER_FOR","","",null,null],[17,"ATK_RELATION_LABEL_FOR","","",null,null],[17,"ATK_RELATION_LABELLED_BY","","",null,null],[17,"ATK_RELATION_MEMBER_OF","","",null,null],[17,"ATK_RELATION_NODE_CHILD_OF","","",null,null],[17,"ATK_RELATION_FLOWS_TO","","",null,null],[17,"ATK_RELATION_FLOWS_FROM","","",null,null],[17,"ATK_RELATION_SUBWINDOW_OF","","",null,null],[17,"ATK_RELATION_EMBEDS","","",null,null],[17,"ATK_RELATION_EMBEDDED_BY","","",null,null],[17,"ATK_RELATION_POPUP_FOR","","",null,null],[17,"ATK_RELATION_PARENT_WINDOW_OF","","",null,null],[17,"ATK_RELATION_DESCRIBED_BY","","",null,null],[17,"ATK_RELATION_DESCRIPTION_FOR","","",null,null],[17,"ATK_RELATION_NODE_PARENT_OF","","",null,null],[17,"ATK_RELATION_LAST_DEFINED","","",null,null],[17,"ATK_ROLE_INVALID","","",null,null],[17,"ATK_ROLE_ACCEL_LABEL","","",null,null],[17,"ATK_ROLE_ALERT","","",null,null],[17,"ATK_ROLE_ANIMATION","","",null,null],[17,"ATK_ROLE_ARROW","","",null,null],[17,"ATK_ROLE_CALENDAR","","",null,null],[17,"ATK_ROLE_CANVAS","","",null,null],[17,"ATK_ROLE_CHECK_BOX","","",null,null],[17,"ATK_ROLE_CHECK_MENU_ITEM","","",null,null],[17,"ATK_ROLE_COLOR_CHOOSER","","",null,null],[17,"ATK_ROLE_COLUMN_HEADER","","",null,null],[17,"ATK_ROLE_COMBO_BOX","","",null,null],[17,"ATK_ROLE_DATE_EDITOR","","",null,null],[17,"ATK_ROLE_DESKTOP_ICON","","",null,null],[17,"ATK_ROLE_DESKTOP_FRAME","","",null,null],[17,"ATK_ROLE_DIAL","","",null,null],[17,"ATK_ROLE_DIALOG","","",null,null],[17,"ATK_ROLE_DIRECTORY_PANE","","",null,null],[17,"ATK_ROLE_DRAWING_AREA","","",null,null],[17,"ATK_ROLE_FILE_CHOOSER","","",null,null],[17,"ATK_ROLE_FILLER","","",null,null],[17,"ATK_ROLE_FONT_CHOOSER","","",null,null],[17,"ATK_ROLE_FRAME","","",null,null],[17,"ATK_ROLE_GLASS_PANE","","",null,null],[17,"ATK_ROLE_HTML_CONTAINER","","",null,null],[17,"ATK_ROLE_ICON","","",null,null],[17,"ATK_ROLE_IMAGE","","",null,null],[17,"ATK_ROLE_INTERNAL_FRAME","","",null,null],[17,"ATK_ROLE_LABEL","","",null,null],[17,"ATK_ROLE_LAYERED_PANE","","",null,null],[17,"ATK_ROLE_LIST","","",null,null],[17,"ATK_ROLE_LIST_ITEM","","",null,null],[17,"ATK_ROLE_MENU","","",null,null],[17,"ATK_ROLE_MENU_BAR","","",null,null],[17,"ATK_ROLE_MENU_ITEM","","",null,null],[17,"ATK_ROLE_OPTION_PANE","","",null,null],[17,"ATK_ROLE_PAGE_TAB","","",null,null],[17,"ATK_ROLE_PAGE_TAB_LIST","","",null,null],[17,"ATK_ROLE_PANEL","","",null,null],[17,"ATK_ROLE_PASSWORD_TEXT","","",null,null],[17,"ATK_ROLE_POPUP_MENU","","",null,null],[17,"ATK_ROLE_PROGRESS_BAR","","",null,null],[17,"ATK_ROLE_PUSH_BUTTON","","",null,null],[17,"ATK_ROLE_RADIO_BUTTON","","",null,null],[17,"ATK_ROLE_RADIO_MENU_ITEM","","",null,null],[17,"ATK_ROLE_ROOT_PANE","","",null,null],[17,"ATK_ROLE_ROW_HEADER","","",null,null],[17,"ATK_ROLE_SCROLL_BAR","","",null,null],[17,"ATK_ROLE_SCROLL_PANE","","",null,null],[17,"ATK_ROLE_SEPARATOR","","",null,null],[17,"ATK_ROLE_SLIDER","","",null,null],[17,"ATK_ROLE_SPLIT_PANE","","",null,null],[17,"ATK_ROLE_SPIN_BUTTON","","",null,null],[17,"ATK_ROLE_STATUSBAR","","",null,null],[17,"ATK_ROLE_TABLE","","",null,null],[17,"ATK_ROLE_TABLE_CELL","","",null,null],[17,"ATK_ROLE_TABLE_COLUMN_HEADER","","",null,null],[17,"ATK_ROLE_TABLE_ROW_HEADER","","",null,null],[17,"ATK_ROLE_TEAR_OFF_MENU_ITEM","","",null,null],[17,"ATK_ROLE_TERMINAL","","",null,null],[17,"ATK_ROLE_TEXT","","",null,null],[17,"ATK_ROLE_TOGGLE_BUTTON","","",null,null],[17,"ATK_ROLE_TOOL_BAR","","",null,null],[17,"ATK_ROLE_TOOL_TIP","","",null,null],[17,"ATK_ROLE_TREE","","",null,null],[17,"ATK_ROLE_TREE_TABLE","","",null,null],[17,"ATK_ROLE_UNKNOWN","","",null,null],[17,"ATK_ROLE_VIEWPORT","","",null,null],[17,"ATK_ROLE_WINDOW","","",null,null],[17,"ATK_ROLE_HEADER","","",null,null],[17,"ATK_ROLE_FOOTER","","",null,null],[17,"ATK_ROLE_PARAGRAPH","","",null,null],[17,"ATK_ROLE_RULER","","",null,null],[17,"ATK_ROLE_APPLICATION","","",null,null],[17,"ATK_ROLE_AUTOCOMPLETE","","",null,null],[17,"ATK_ROLE_EDITBAR","","",null,null],[17,"ATK_ROLE_EMBEDDED","","",null,null],[17,"ATK_ROLE_ENTRY","","",null,null],[17,"ATK_ROLE_CHART","","",null,null],[17,"ATK_ROLE_CAPTION","","",null,null],[17,"ATK_ROLE_DOCUMENT_FRAME","","",null,null],[17,"ATK_ROLE_HEADING","","",null,null],[17,"ATK_ROLE_PAGE","","",null,null],[17,"ATK_ROLE_SECTION","","",null,null],[17,"ATK_ROLE_REDUNDANT_OBJECT","","",null,null],[17,"ATK_ROLE_FORM","","",null,null],[17,"ATK_ROLE_LINK","","",null,null],[17,"ATK_ROLE_INPUT_METHOD_WINDOW","","",null,null],[17,"ATK_ROLE_TABLE_ROW","","",null,null],[17,"ATK_ROLE_TREE_ITEM","","",null,null],[17,"ATK_ROLE_DOCUMENT_SPREADSHEET","","",null,null],[17,"ATK_ROLE_DOCUMENT_PRESENTATION","","",null,null],[17,"ATK_ROLE_DOCUMENT_TEXT","","",null,null],[17,"ATK_ROLE_DOCUMENT_WEB","","",null,null],[17,"ATK_ROLE_DOCUMENT_EMAIL","","",null,null],[17,"ATK_ROLE_COMMENT","","",null,null],[17,"ATK_ROLE_LIST_BOX","","",null,null],[17,"ATK_ROLE_GROUPING","","",null,null],[17,"ATK_ROLE_IMAGE_MAP","","",null,null],[17,"ATK_ROLE_NOTIFICATION","","",null,null],[17,"ATK_ROLE_INFO_BAR","","",null,null],[17,"ATK_ROLE_LEVEL_BAR","","",null,null],[17,"ATK_ROLE_TITLE_BAR","","",null,null],[17,"ATK_ROLE_BLOCK_QUOTE","","",null,null],[17,"ATK_ROLE_AUDIO","","",null,null],[17,"ATK_ROLE_VIDEO","","",null,null],[17,"ATK_ROLE_DEFINITION","","",null,null],[17,"ATK_ROLE_ARTICLE","","",null,null],[17,"ATK_ROLE_LANDMARK","","",null,null],[17,"ATK_ROLE_LOG","","",null,null],[17,"ATK_ROLE_MARQUEE","","",null,null],[17,"ATK_ROLE_MATH","","",null,null],[17,"ATK_ROLE_RATING","","",null,null],[17,"ATK_ROLE_TIMER","","",null,null],[17,"ATK_ROLE_DESCRIPTION_LIST","","",null,null],[17,"ATK_ROLE_DESCRIPTION_TERM","","",null,null],[17,"ATK_ROLE_DESCRIPTION_VALUE","","",null,null],[17,"ATK_ROLE_STATIC","","",null,null],[17,"ATK_ROLE_MATH_FRACTION","","",null,null],[17,"ATK_ROLE_MATH_ROOT","","",null,null],[17,"ATK_ROLE_SUBSCRIPT","","",null,null],[17,"ATK_ROLE_SUPERSCRIPT","","",null,null],[17,"ATK_ROLE_LAST_DEFINED","","",null,null],[17,"ATK_STATE_INVALID","","",null,null],[17,"ATK_STATE_ACTIVE","","",null,null],[17,"ATK_STATE_ARMED","","",null,null],[17,"ATK_STATE_BUSY","","",null,null],[17,"ATK_STATE_CHECKED","","",null,null],[17,"ATK_STATE_DEFUNCT","","",null,null],[17,"ATK_STATE_EDITABLE","","",null,null],[17,"ATK_STATE_ENABLED","","",null,null],[17,"ATK_STATE_EXPANDABLE","","",null,null],[17,"ATK_STATE_EXPANDED","","",null,null],[17,"ATK_STATE_FOCUSABLE","","",null,null],[17,"ATK_STATE_FOCUSED","","",null,null],[17,"ATK_STATE_HORIZONTAL","","",null,null],[17,"ATK_STATE_ICONIFIED","","",null,null],[17,"ATK_STATE_MODAL","","",null,null],[17,"ATK_STATE_MULTI_LINE","","",null,null],[17,"ATK_STATE_MULTISELECTABLE","","",null,null],[17,"ATK_STATE_OPAQUE","","",null,null],[17,"ATK_STATE_PRESSED","","",null,null],[17,"ATK_STATE_RESIZABLE","","",null,null],[17,"ATK_STATE_SELECTABLE","","",null,null],[17,"ATK_STATE_SELECTED","","",null,null],[17,"ATK_STATE_SENSITIVE","","",null,null],[17,"ATK_STATE_SHOWING","","",null,null],[17,"ATK_STATE_SINGLE_LINE","","",null,null],[17,"ATK_STATE_STALE","","",null,null],[17,"ATK_STATE_TRANSIENT","","",null,null],[17,"ATK_STATE_VERTICAL","","",null,null],[17,"ATK_STATE_VISIBLE","","",null,null],[17,"ATK_STATE_MANAGES_DESCENDANTS","","",null,null],[17,"ATK_STATE_INDETERMINATE","","",null,null],[17,"ATK_STATE_TRUNCATED","","",null,null],[17,"ATK_STATE_REQUIRED","","",null,null],[17,"ATK_STATE_INVALID_ENTRY","","",null,null],[17,"ATK_STATE_SUPPORTS_AUTOCOMPLETION","","",null,null],[17,"ATK_STATE_SELECTABLE_TEXT","","",null,null],[17,"ATK_STATE_DEFAULT","","",null,null],[17,"ATK_STATE_ANIMATED","","",null,null],[17,"ATK_STATE_VISITED","","",null,null],[17,"ATK_STATE_CHECKABLE","","",null,null],[17,"ATK_STATE_HAS_POPUP","","",null,null],[17,"ATK_STATE_HAS_TOOLTIP","","",null,null],[17,"ATK_STATE_READ_ONLY","","",null,null],[17,"ATK_STATE_LAST_DEFINED","","",null,null],[17,"ATK_TEXT_ATTR_INVALID","","",null,null],[17,"ATK_TEXT_ATTR_LEFT_MARGIN","","",null,null],[17,"ATK_TEXT_ATTR_RIGHT_MARGIN","","",null,null],[17,"ATK_TEXT_ATTR_INDENT","","",null,null],[17,"ATK_TEXT_ATTR_INVISIBLE","","",null,null],[17,"ATK_TEXT_ATTR_EDITABLE","","",null,null],[17,"ATK_TEXT_ATTR_PIXELS_ABOVE_LINES","","",null,null],[17,"ATK_TEXT_ATTR_PIXELS_BELOW_LINES","","",null,null],[17,"ATK_TEXT_ATTR_PIXELS_INSIDE_WRAP","","",null,null],[17,"ATK_TEXT_ATTR_BG_FULL_HEIGHT","","",null,null],[17,"ATK_TEXT_ATTR_RISE","","",null,null],[17,"ATK_TEXT_ATTR_UNDERLINE","","",null,null],[17,"ATK_TEXT_ATTR_STRIKETHROUGH","","",null,null],[17,"ATK_TEXT_ATTR_SIZE","","",null,null],[17,"ATK_TEXT_ATTR_SCALE","","",null,null],[17,"ATK_TEXT_ATTR_WEIGHT","","",null,null],[17,"ATK_TEXT_ATTR_LANGUAGE","","",null,null],[17,"ATK_TEXT_ATTR_FAMILY_NAME","","",null,null],[17,"ATK_TEXT_ATTR_BG_COLOR","","",null,null],[17,"ATK_TEXT_ATTR_FG_COLOR","","",null,null],[17,"ATK_TEXT_ATTR_BG_STIPPLE","","",null,null],[17,"ATK_TEXT_ATTR_FG_STIPPLE","","",null,null],[17,"ATK_TEXT_ATTR_WRAP_MODE","","",null,null],[17,"ATK_TEXT_ATTR_DIRECTION","","",null,null],[17,"ATK_TEXT_ATTR_JUSTIFICATION","","",null,null],[17,"ATK_TEXT_ATTR_STRETCH","","",null,null],[17,"ATK_TEXT_ATTR_VARIANT","","",null,null],[17,"ATK_TEXT_ATTR_STYLE","","",null,null],[17,"ATK_TEXT_ATTR_LAST_DEFINED","","",null,null],[17,"ATK_TEXT_BOUNDARY_CHAR","","",null,null],[17,"ATK_TEXT_BOUNDARY_WORD_START","","",null,null],[17,"ATK_TEXT_BOUNDARY_WORD_END","","",null,null],[17,"ATK_TEXT_BOUNDARY_SENTENCE_START","","",null,null],[17,"ATK_TEXT_BOUNDARY_SENTENCE_END","","",null,null],[17,"ATK_TEXT_BOUNDARY_LINE_START","","",null,null],[17,"ATK_TEXT_BOUNDARY_LINE_END","","",null,null],[17,"ATK_TEXT_CLIP_NONE","","",null,null],[17,"ATK_TEXT_CLIP_MIN","","",null,null],[17,"ATK_TEXT_CLIP_MAX","","",null,null],[17,"ATK_TEXT_CLIP_BOTH","","",null,null],[17,"ATK_TEXT_GRANULARITY_CHAR","","",null,null],[17,"ATK_TEXT_GRANULARITY_WORD","","",null,null],[17,"ATK_TEXT_GRANULARITY_SENTENCE","","",null,null],[17,"ATK_TEXT_GRANULARITY_LINE","","",null,null],[17,"ATK_TEXT_GRANULARITY_PARAGRAPH","","",null,null],[17,"ATK_VALUE_VERY_WEAK","","",null,null],[17,"ATK_VALUE_WEAK","","",null,null],[17,"ATK_VALUE_ACCEPTABLE","","",null,null],[17,"ATK_VALUE_STRONG","","",null,null],[17,"ATK_VALUE_VERY_STRONG","","",null,null],[17,"ATK_VALUE_VERY_LOW","","",null,null],[17,"ATK_VALUE_LOW","","",null,null],[17,"ATK_VALUE_MEDIUM","","",null,null],[17,"ATK_VALUE_HIGH","","",null,null],[17,"ATK_VALUE_VERY_HIGH","","",null,null],[17,"ATK_VALUE_VERY_BAD","","",null,null],[17,"ATK_VALUE_BAD","","",null,null],[17,"ATK_VALUE_GOOD","","",null,null],[17,"ATK_VALUE_VERY_GOOD","","",null,null],[17,"ATK_VALUE_BEST","","",null,null],[17,"ATK_VALUE_LAST_DEFINED","","",null,null],[17,"ATK_BINARY_AGE","","",null,null],[17,"ATK_INTERFACE_AGE","","",null,null],[17,"ATK_MAJOR_VERSION","","",null,null],[17,"ATK_MICRO_VERSION","","",null,null],[17,"ATK_MINOR_VERSION","","",null,null],[17,"ATK_VERSION_MIN_REQUIRED","","",null,null],[17,"ATK_HYPERLINK_IS_INLINE","","",null,null],[11,"eq","","",34,{"inputs":[{"name":"atkcoordtype"},{"name":"atkcoordtype"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"atkcoordtype"},{"name":"atkcoordtype"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"atkcoordtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"atkcoordtype"}],"output":{"name":"atkcoordtype"}}],[11,"eq","","",35,{"inputs":[{"name":"atkkeyeventtype"},{"name":"atkkeyeventtype"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"atkkeyeventtype"},{"name":"atkkeyeventtype"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"atkkeyeventtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"atkkeyeventtype"}],"output":{"name":"atkkeyeventtype"}}],[11,"eq","","",36,{"inputs":[{"name":"atklayer"},{"name":"atklayer"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"atklayer"},{"name":"atklayer"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"atklayer"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"atklayer"}],"output":{"name":"atklayer"}}],[11,"eq","","",37,{"inputs":[{"name":"atkrelationtype"},{"name":"atkrelationtype"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"atkrelationtype"},{"name":"atkrelationtype"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"atkrelationtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"atkrelationtype"}],"output":{"name":"atkrelationtype"}}],[11,"eq","","",38,{"inputs":[{"name":"atkrole"},{"name":"atkrole"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"atkrole"},{"name":"atkrole"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"atkrole"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"atkrole"}],"output":{"name":"atkrole"}}],[11,"eq","","",39,{"inputs":[{"name":"atkstatetype"},{"name":"atkstatetype"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"atkstatetype"},{"name":"atkstatetype"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"atkstatetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"atkstatetype"}],"output":{"name":"atkstatetype"}}],[11,"eq","","",40,{"inputs":[{"name":"atktextattribute"},{"name":"atktextattribute"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"atktextattribute"},{"name":"atktextattribute"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"atktextattribute"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"atktextattribute"}],"output":{"name":"atktextattribute"}}],[11,"eq","","",41,{"inputs":[{"name":"atktextboundary"},{"name":"atktextboundary"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"atktextboundary"},{"name":"atktextboundary"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"atktextboundary"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"atktextboundary"}],"output":{"name":"atktextboundary"}}],[11,"eq","","",42,{"inputs":[{"name":"atktextcliptype"},{"name":"atktextcliptype"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"atktextcliptype"},{"name":"atktextcliptype"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"atktextcliptype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"atktextcliptype"}],"output":{"name":"atktextcliptype"}}],[11,"eq","","",43,{"inputs":[{"name":"atktextgranularity"},{"name":"atktextgranularity"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"atktextgranularity"},{"name":"atktextgranularity"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"atktextgranularity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"atktextgranularity"}],"output":{"name":"atktextgranularity"}}],[11,"eq","","",44,{"inputs":[{"name":"atkvaluetype"},{"name":"atkvaluetype"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"atkvaluetype"},{"name":"atkvaluetype"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"atkvaluetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"atkvaluetype"}],"output":{"name":"atkvaluetype"}}],[11,"hash","","",45,null],[11,"cmp","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"option"}}],[11,"lt","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"le","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"gt","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"ge","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"clone","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"}],"output":{"name":"atkhyperlinkstateflags"}}],[11,"eq","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",45,{"inputs":[],"output":{"name":"atkhyperlinkstateflags"}}],[11,"all","","Returns the set containing all flags.",45,{"inputs":[],"output":{"name":"atkhyperlinkstateflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",45,{"inputs":[{"name":"atkhyperlinkstateflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",45,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",45,{"inputs":[{"name":"c_uint"}],"output":{"name":"atkhyperlinkstateflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",45,{"inputs":[{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",45,{"inputs":[{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"atkhyperlinkstateflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"atkhyperlinkstateflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"atkhyperlinkstateflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",45,{"inputs":[{"name":"atkhyperlinkstateflags"},{"name":"atkhyperlinkstateflags"}],"output":{"name":"atkhyperlinkstateflags"}}],[11,"not","","Returns the complement of this set of flags.",45,{"inputs":[{"name":"atkhyperlinkstateflags"}],"output":{"name":"atkhyperlinkstateflags"}}],[11,"from_iter","","",45,{"inputs":[{"name":"t"}],"output":{"name":"atkhyperlinkstateflags"}}]],"paths":[[3,"AtkActionIface"],[3,"AtkAttribute"],[3,"AtkComponentIface"],[3,"AtkDocumentIface"],[3,"AtkEditableTextIface"],[3,"AtkGObjectAccessibleClass"],[3,"AtkHyperlinkClass"],[3,"AtkHyperlinkImplIface"],[3,"AtkHypertextIface"],[3,"AtkImageIface"],[3,"AtkKeyEventStruct"],[3,"AtkMiscClass"],[3,"AtkNoOpObjectClass"],[3,"AtkNoOpObjectFactoryClass"],[3,"AtkObjectClass"],[3,"AtkObjectFactoryClass"],[3,"AtkPlugClass"],[3,"AtkPropertyValues"],[3,"AtkRectangle"],[3,"AtkRegistryClass"],[3,"AtkRelationClass"],[3,"AtkRelationSetClass"],[3,"AtkSelectionIface"],[3,"AtkSocketClass"],[3,"AtkStateSetClass"],[3,"AtkStreamableContentIface"],[3,"AtkTableCellIface"],[3,"AtkTableIface"],[3,"AtkTextIface"],[3,"AtkTextRange"],[3,"AtkTextRectangle"],[3,"AtkUtilClass"],[3,"AtkValueIface"],[3,"AtkWindowIface"],[4,"AtkCoordType"],[4,"AtkKeyEventType"],[4,"AtkLayer"],[4,"AtkRelationType"],[4,"AtkRole"],[4,"AtkStateType"],[4,"AtkTextAttribute"],[4,"AtkTextBoundary"],[4,"AtkTextClipType"],[4,"AtkTextGranularity"],[4,"AtkValueType"],[3,"AtkHyperlinkStateFlags"]]};
searchIndex["pango_sys"] = {"doc":"","items":[[3,"PangoFontMask","pango_sys","",null,null],[3,"PangoAnalysis","","",null,null],[12,"shape_engine","","",0,null],[12,"lang_engine","","",0,null],[12,"font","","",0,null],[12,"level","","",0,null],[12,"gravity","","",0,null],[12,"flags","","",0,null],[12,"script","","",0,null],[12,"language","","",0,null],[12,"extra_attrs","","",0,null],[3,"PangoAttrClass","","",null,null],[12,"type_","","",1,null],[12,"copy","","",1,null],[12,"destroy","","",1,null],[12,"equal","","",1,null],[3,"PangoAttrColor","","",null,null],[12,"attr","","",2,null],[12,"color","","",2,null],[3,"PangoAttrFloat","","",null,null],[12,"attr","","",3,null],[12,"value","","",3,null],[3,"PangoAttrFontDesc","","",null,null],[12,"attr","","",4,null],[12,"desc","","",4,null],[3,"PangoAttrInt","","",null,null],[12,"attr","","",5,null],[12,"value","","",5,null],[3,"PangoAttrIterator","","",null,null],[3,"PangoAttrLanguage","","",null,null],[12,"attr","","",6,null],[12,"value","","",6,null],[3,"PangoAttrList","","",null,null],[3,"PangoAttrShape","","",null,null],[12,"attr","","",7,null],[12,"ink_rect","","",7,null],[12,"logical_rect","","",7,null],[12,"data","","",7,null],[12,"copy_func","","",7,null],[12,"destroy_func","","",7,null],[3,"PangoAttrSize","","",null,null],[12,"attr","","",8,null],[12,"size","","",8,null],[3,"PangoAttrString","","",null,null],[12,"attr","","",9,null],[12,"value","","",9,null],[3,"PangoAttribute","","",null,null],[12,"klass","","",10,null],[12,"start_index","","",10,null],[12,"end_index","","",10,null],[3,"PangoColor","","",null,null],[12,"red","","",11,null],[12,"green","","",11,null],[12,"blue","","",11,null],[3,"PangoContextClass","","",null,null],[3,"PangoCoverage","","",null,null],[3,"PangoEngineClass","","",null,null],[3,"PangoEngineInfo","","",null,null],[12,"id","","",12,null],[12,"engine_type","","",12,null],[12,"render_type","","",12,null],[12,"scripts","","",12,null],[12,"n_scripts","","",12,null],[3,"PangoEngineLangClass","","",null,null],[12,"script_break","","",13,null],[3,"PangoEngineScriptInfo","","",null,null],[12,"script","","",14,null],[12,"langs","","",14,null],[3,"PangoEngineShapeClass","","",null,null],[12,"script_shape","","",15,null],[12,"covers","","",15,null],[3,"PangoFontClass","","",null,null],[12,"parent_class","","",16,null],[12,"describe","","",16,null],[12,"get_coverage","","",16,null],[12,"find_shaper","","",16,null],[12,"get_glyph_extents","","",16,null],[12,"get_metrics","","",16,null],[12,"get_font_map","","",16,null],[12,"describe_absolute","","",16,null],[12,"_pango_reserved1","","",16,null],[12,"_pango_reserved2","","",16,null],[3,"PangoFontDescription","","",null,null],[3,"PangoFontFaceClass","","",null,null],[12,"parent_class","","",17,null],[12,"get_face_name","","",17,null],[12,"describe","","",17,null],[12,"list_sizes","","",17,null],[12,"is_synthesized","","",17,null],[12,"_pango_reserved3","","",17,null],[12,"_pango_reserved4","","",17,null],[3,"PangoFontFamilyClass","","",null,null],[12,"parent_class","","",18,null],[12,"list_faces","","",18,null],[12,"get_name","","",18,null],[12,"is_monospace","","",18,null],[12,"_pango_reserved2","","",18,null],[12,"_pango_reserved3","","",18,null],[12,"_pango_reserved4","","",18,null],[3,"PangoFontMapClass","","",null,null],[12,"parent_class","","",19,null],[12,"load_font","","",19,null],[12,"list_families","","",19,null],[12,"load_fontset","","",19,null],[12,"shape_engine_type","","",19,null],[12,"get_serial","","",19,null],[12,"changed","","",19,null],[12,"_pango_reserved1","","",19,null],[12,"_pango_reserved2","","",19,null],[3,"PangoFontMetrics","","",null,null],[12,"ref_count","","",20,null],[12,"ascent","","",20,null],[12,"descent","","",20,null],[12,"approximate_char_width","","",20,null],[12,"approximate_digit_width","","",20,null],[12,"underline_position","","",20,null],[12,"underline_thickness","","",20,null],[12,"strikethrough_position","","",20,null],[12,"strikethrough_thickness","","",20,null],[3,"PangoFontsetClass","","",null,null],[12,"parent_class","","",21,null],[12,"get_font","","",21,null],[12,"get_metrics","","",21,null],[12,"get_language","","",21,null],[12,"foreach","","",21,null],[12,"_pango_reserved1","","",21,null],[12,"_pango_reserved2","","",21,null],[12,"_pango_reserved3","","",21,null],[12,"_pango_reserved4","","",21,null],[3,"PangoFontsetSimpleClass","","",null,null],[3,"PangoGlyphGeometry","","",null,null],[12,"width","","",22,null],[12,"x_offset","","",22,null],[12,"y_offset","","",22,null],[3,"PangoGlyphInfo","","",null,null],[12,"glyph","","",23,null],[12,"geometry","","",23,null],[12,"attr","","",23,null],[3,"PangoGlyphItem","","",null,null],[12,"item","","",24,null],[12,"glyphs","","",24,null],[3,"PangoGlyphItemIter","","",null,null],[12,"glyph_item","","",25,null],[12,"text","","",25,null],[12,"start_glyph","","",25,null],[12,"start_index","","",25,null],[12,"start_char","","",25,null],[12,"end_glyph","","",25,null],[12,"end_index","","",25,null],[12,"end_char","","",25,null],[3,"PangoGlyphString","","",null,null],[12,"num_glyphs","","",26,null],[12,"glyphs","","",26,null],[12,"log_clusters","","",26,null],[3,"PangoGlyphVisAttr","","",null,null],[3,"PangoIncludedModule","","",null,null],[12,"list","","",27,null],[12,"init","","",27,null],[12,"exit","","",27,null],[12,"create","","",27,null],[3,"PangoItem","","",null,null],[12,"offset","","",28,null],[12,"length","","",28,null],[12,"num_chars","","",28,null],[12,"analysis","","",28,null],[3,"PangoLanguage","","",null,null],[3,"PangoLayoutClass","","",null,null],[3,"PangoLayoutIter","","",null,null],[3,"PangoLayoutLine","","",null,null],[12,"layout","","",29,null],[12,"start_index","","",29,null],[12,"length","","",29,null],[12,"runs","","",29,null],[3,"PangoLogAttr","","",null,null],[3,"PangoMap","","",null,null],[3,"PangoMapEntry","","",null,null],[3,"PangoMatrix","","",null,null],[12,"xx","","",30,null],[12,"xy","","",30,null],[12,"yx","","",30,null],[12,"yy","","",30,null],[12,"x0","","",30,null],[12,"y0","","",30,null],[3,"PangoRectangle","","",null,null],[12,"x","","",31,null],[12,"y","","",31,null],[12,"width","","",31,null],[12,"height","","",31,null],[3,"PangoRendererClass","","",null,null],[12,"draw_glyphs","","",32,null],[12,"draw_rectangle","","",32,null],[12,"draw_error_underline","","",32,null],[12,"draw_shape","","",32,null],[12,"draw_trapezoid","","",32,null],[12,"draw_glyph","","",32,null],[12,"part_changed","","",32,null],[12,"begin","","",32,null],[12,"end","","",32,null],[12,"prepare_run","","",32,null],[12,"draw_glyph_item","","",32,null],[12,"_pango_reserved2","","",32,null],[12,"_pango_reserved3","","",32,null],[12,"_pango_reserved4","","",32,null],[3,"PangoRendererPrivate","","",null,null],[3,"PangoScriptForLang","","",null,null],[12,"lang","","",33,null],[12,"scripts","","",33,null],[3,"PangoScriptIter","","",null,null],[3,"PangoTabArray","","",null,null],[3,"PangoContext","","",null,null],[3,"PangoEngine","","",null,null],[3,"PangoEngineLang","","",null,null],[3,"PangoEngineShape","","",null,null],[3,"PangoFont","","",null,null],[3,"PangoFontFace","","",null,null],[3,"PangoFontFamily","","",null,null],[3,"PangoFontMap","","",null,null],[3,"PangoFontset","","",null,null],[3,"PangoFontsetSimple","","",null,null],[3,"PangoLayout","","",null,null],[3,"PangoRenderer","","",null,null],[4,"PangoAlignment","","",null,null],[13,"Left","","",34,null],[13,"Center","","",34,null],[13,"Right","","",34,null],[4,"PangoAttrType","","",null,null],[13,"Invalid","","",35,null],[13,"Language","","",35,null],[13,"Family","","",35,null],[13,"Style","","",35,null],[13,"Weight","","",35,null],[13,"Variant","","",35,null],[13,"Stretch","","",35,null],[13,"Size","","",35,null],[13,"FontDesc","","",35,null],[13,"Foreground","","",35,null],[13,"Background","","",35,null],[13,"Underline","","",35,null],[13,"Strikethrough","","",35,null],[13,"Rise","","",35,null],[13,"Shape","","",35,null],[13,"Scale","","",35,null],[13,"Fallback","","",35,null],[13,"LetterSpacing","","",35,null],[13,"UnderlineColor","","",35,null],[13,"StrikethroughColor","","",35,null],[13,"AbsoluteSize","","",35,null],[13,"Gravity","","",35,null],[13,"GravityHint","","",35,null],[4,"PangoBidiType","","",null,null],[13,"L","","",36,null],[13,"Lre","","",36,null],[13,"Lro","","",36,null],[13,"R","","",36,null],[13,"Al","","",36,null],[13,"Rle","","",36,null],[13,"Rlo","","",36,null],[13,"Pdf","","",36,null],[13,"En","","",36,null],[13,"Es","","",36,null],[13,"Et","","",36,null],[13,"An","","",36,null],[13,"Cs","","",36,null],[13,"Nsm","","",36,null],[13,"Bn","","",36,null],[13,"B","","",36,null],[13,"S","","",36,null],[13,"Ws","","",36,null],[13,"On","","",36,null],[4,"PangoCoverageLevel","","",null,null],[13,"None","","",37,null],[13,"Fallback","","",37,null],[13,"Approximate","","",37,null],[13,"Exact","","",37,null],[4,"PangoDirection","","",null,null],[13,"Ltr","","",38,null],[13,"Rtl","","",38,null],[13,"TtbLtr","","",38,null],[13,"TtbRtl","","",38,null],[13,"WeakLtr","","",38,null],[13,"WeakRtl","","",38,null],[13,"Neutral","","",38,null],[4,"PangoEllipsizeMode","","",null,null],[13,"None","","",39,null],[13,"Start","","",39,null],[13,"Middle","","",39,null],[13,"End","","",39,null],[4,"PangoGravity","","",null,null],[13,"South","","",40,null],[13,"East","","",40,null],[13,"North","","",40,null],[13,"West","","",40,null],[13,"Auto","","",40,null],[4,"PangoGravityHint","","",null,null],[13,"Natural","","",41,null],[13,"Strong","","",41,null],[13,"Line","","",41,null],[4,"PangoRenderPart","","",null,null],[13,"Foreground","","",42,null],[13,"Background","","",42,null],[13,"Underline","","",42,null],[13,"Strikethrough","","",42,null],[4,"PangoScript","","",null,null],[13,"InvalidCode","","",43,null],[13,"Common","","",43,null],[13,"Inherited","","",43,null],[13,"Arabic","","",43,null],[13,"Armenian","","",43,null],[13,"Bengali","","",43,null],[13,"Bopomofo","","",43,null],[13,"Cherokee","","",43,null],[13,"Coptic","","",43,null],[13,"Cyrillic","","",43,null],[13,"Deseret","","",43,null],[13,"Devanagari","","",43,null],[13,"Ethiopic","","",43,null],[13,"Georgian","","",43,null],[13,"Gothic","","",43,null],[13,"Greek","","",43,null],[13,"Gujarati","","",43,null],[13,"Gurmukhi","","",43,null],[13,"Han","","",43,null],[13,"Hangul","","",43,null],[13,"Hebrew","","",43,null],[13,"Hiragana","","",43,null],[13,"Kannada","","",43,null],[13,"Katakana","","",43,null],[13,"Khmer","","",43,null],[13,"Lao","","",43,null],[13,"Latin","","",43,null],[13,"Malayalam","","",43,null],[13,"Mongolian","","",43,null],[13,"Myanmar","","",43,null],[13,"Ogham","","",43,null],[13,"OldItalic","","",43,null],[13,"Oriya","","",43,null],[13,"Runic","","",43,null],[13,"Sinhala","","",43,null],[13,"Syriac","","",43,null],[13,"Tamil","","",43,null],[13,"Telugu","","",43,null],[13,"Thaana","","",43,null],[13,"Thai","","",43,null],[13,"Tibetan","","",43,null],[13,"CanadianAboriginal","","",43,null],[13,"Yi","","",43,null],[13,"Tagalog","","",43,null],[13,"Hanunoo","","",43,null],[13,"Buhid","","",43,null],[13,"Tagbanwa","","",43,null],[13,"Braille","","",43,null],[13,"Cypriot","","",43,null],[13,"Limbu","","",43,null],[13,"Osmanya","","",43,null],[13,"Shavian","","",43,null],[13,"LinearB","","",43,null],[13,"TaiLe","","",43,null],[13,"Ugaritic","","",43,null],[13,"NewTaiLue","","",43,null],[13,"Buginese","","",43,null],[13,"Glagolitic","","",43,null],[13,"Tifinagh","","",43,null],[13,"SylotiNagri","","",43,null],[13,"OldPersian","","",43,null],[13,"Kharoshthi","","",43,null],[13,"Unknown","","",43,null],[13,"Balinese","","",43,null],[13,"Cuneiform","","",43,null],[13,"Phoenician","","",43,null],[13,"PhagsPa","","",43,null],[13,"Nko","","",43,null],[13,"KayahLi","","",43,null],[13,"Lepcha","","",43,null],[13,"Rejang","","",43,null],[13,"Sundanese","","",43,null],[13,"Saurashtra","","",43,null],[13,"Cham","","",43,null],[13,"OlChiki","","",43,null],[13,"Vai","","",43,null],[13,"Carian","","",43,null],[13,"Lycian","","",43,null],[13,"Lydian","","",43,null],[13,"Batak","","",43,null],[13,"Brahmi","","",43,null],[13,"Mandaic","","",43,null],[13,"Chakma","","",43,null],[13,"MeroiticCursive","","",43,null],[13,"MeroiticHieroglyphs","","",43,null],[13,"Miao","","",43,null],[13,"Sharada","","",43,null],[13,"SoraSompeng","","",43,null],[13,"Takri","","",43,null],[4,"PangoStretch","","",null,null],[13,"UltraCondensed","","",44,null],[13,"ExtraCondensed","","",44,null],[13,"Condensed","","",44,null],[13,"SemiCondensed","","",44,null],[13,"Normal","","",44,null],[13,"SemiExpanded","","",44,null],[13,"Expanded","","",44,null],[13,"ExtraExpanded","","",44,null],[13,"UltraExpanded","","",44,null],[4,"PangoStyle","","",null,null],[13,"Normal","","",45,null],[13,"Oblique","","",45,null],[13,"Italic","","",45,null],[4,"PangoUnderline","","",null,null],[13,"None","","",46,null],[13,"Single","","",46,null],[13,"Double","","",46,null],[13,"Low","","",46,null],[13,"Error","","",46,null],[4,"PangoVariant","","",null,null],[13,"Normal","","",47,null],[13,"SmallCaps","","",47,null],[4,"PangoWeight","","",null,null],[13,"Thin","","",48,null],[13,"Ultralight","","",48,null],[13,"Light","","",48,null],[13,"Semilight","","",48,null],[13,"Book","","",48,null],[13,"Normal","","",48,null],[13,"Medium","","",48,null],[13,"Semibold","","",48,null],[13,"Bold","","",48,null],[13,"Ultrabold","","",48,null],[13,"Heavy","","",48,null],[13,"Ultraheavy","","",48,null],[4,"PangoWrapMode","","",null,null],[13,"Word","","",49,null],[13,"Char","","",49,null],[13,"WordChar","","",49,null],[5,"pango_attr_type_get_name","","",null,null],[5,"pango_attr_type_register","","",null,null],[5,"pango_bidi_type_for_unichar","","",null,null],[5,"pango_gravity_get_for_matrix","","",null,null],[5,"pango_gravity_get_for_script","","",null,null],[5,"pango_gravity_get_for_script_and_width","","",null,null],[5,"pango_gravity_to_rotation","","",null,null],[5,"pango_script_for_unichar","","",null,null],[5,"pango_script_get_sample_language","","",null,null],[5,"pango_attr_font_desc_new","","",null,null],[5,"pango_attr_iterator_copy","","",null,null],[5,"pango_attr_iterator_destroy","","",null,null],[5,"pango_attr_iterator_get","","",null,null],[5,"pango_attr_iterator_get_attrs","","",null,null],[5,"pango_attr_iterator_get_font","","",null,null],[5,"pango_attr_iterator_next","","",null,null],[5,"pango_attr_iterator_range","","",null,null],[5,"pango_attr_language_new","","",null,null],[5,"pango_attr_list_get_type","","",null,null],[5,"pango_attr_list_new","","",null,null],[5,"pango_attr_list_change","","",null,null],[5,"pango_attr_list_copy","","",null,null],[5,"pango_attr_list_filter","","",null,null],[5,"pango_attr_list_get_iterator","","",null,null],[5,"pango_attr_list_insert","","",null,null],[5,"pango_attr_list_insert_before","","",null,null],[5,"pango_attr_list_ref","","",null,null],[5,"pango_attr_list_splice","","",null,null],[5,"pango_attr_list_unref","","",null,null],[5,"pango_attr_shape_new","","",null,null],[5,"pango_attr_shape_new_with_data","","",null,null],[5,"pango_attr_size_new","","",null,null],[5,"pango_attr_size_new_absolute","","",null,null],[5,"pango_attribute_copy","","",null,null],[5,"pango_attribute_destroy","","",null,null],[5,"pango_attribute_equal","","",null,null],[5,"pango_attribute_init","","",null,null],[5,"pango_color_get_type","","",null,null],[5,"pango_color_copy","","",null,null],[5,"pango_color_free","","",null,null],[5,"pango_color_parse","","",null,null],[5,"pango_color_to_string","","",null,null],[5,"pango_coverage_copy","","",null,null],[5,"pango_coverage_get","","",null,null],[5,"pango_coverage_max","","",null,null],[5,"pango_coverage_ref","","",null,null],[5,"pango_coverage_set","","",null,null],[5,"pango_coverage_to_bytes","","",null,null],[5,"pango_coverage_unref","","",null,null],[5,"pango_coverage_from_bytes","","",null,null],[5,"pango_coverage_new","","",null,null],[5,"pango_font_description_get_type","","",null,null],[5,"pango_font_description_new","","",null,null],[5,"pango_font_description_better_match","","",null,null],[5,"pango_font_description_copy","","",null,null],[5,"pango_font_description_copy_static","","",null,null],[5,"pango_font_description_equal","","",null,null],[5,"pango_font_description_free","","",null,null],[5,"pango_font_description_get_family","","",null,null],[5,"pango_font_description_get_gravity","","",null,null],[5,"pango_font_description_get_set_fields","","",null,null],[5,"pango_font_description_get_size","","",null,null],[5,"pango_font_description_get_size_is_absolute","","",null,null],[5,"pango_font_description_get_stretch","","",null,null],[5,"pango_font_description_get_style","","",null,null],[5,"pango_font_description_get_variant","","",null,null],[5,"pango_font_description_get_weight","","",null,null],[5,"pango_font_description_hash","","",null,null],[5,"pango_font_description_merge","","",null,null],[5,"pango_font_description_merge_static","","",null,null],[5,"pango_font_description_set_absolute_size","","",null,null],[5,"pango_font_description_set_family","","",null,null],[5,"pango_font_description_set_family_static","","",null,null],[5,"pango_font_description_set_gravity","","",null,null],[5,"pango_font_description_set_size","","",null,null],[5,"pango_font_description_set_stretch","","",null,null],[5,"pango_font_description_set_style","","",null,null],[5,"pango_font_description_set_variant","","",null,null],[5,"pango_font_description_set_weight","","",null,null],[5,"pango_font_description_to_filename","","",null,null],[5,"pango_font_description_to_string","","",null,null],[5,"pango_font_description_unset_fields","","",null,null],[5,"pango_font_description_from_string","","",null,null],[5,"pango_font_metrics_get_type","","",null,null],[5,"pango_font_metrics_new","","",null,null],[5,"pango_font_metrics_get_approximate_char_width","","",null,null],[5,"pango_font_metrics_get_approximate_digit_width","","",null,null],[5,"pango_font_metrics_get_ascent","","",null,null],[5,"pango_font_metrics_get_descent","","",null,null],[5,"pango_font_metrics_get_strikethrough_position","","",null,null],[5,"pango_font_metrics_get_strikethrough_thickness","","",null,null],[5,"pango_font_metrics_get_underline_position","","",null,null],[5,"pango_font_metrics_get_underline_thickness","","",null,null],[5,"pango_font_metrics_ref","","",null,null],[5,"pango_font_metrics_unref","","",null,null],[5,"pango_glyph_item_get_type","","",null,null],[5,"pango_glyph_item_apply_attrs","","",null,null],[5,"pango_glyph_item_copy","","",null,null],[5,"pango_glyph_item_free","","",null,null],[5,"pango_glyph_item_get_logical_widths","","",null,null],[5,"pango_glyph_item_letter_space","","",null,null],[5,"pango_glyph_item_split","","",null,null],[5,"pango_glyph_item_iter_get_type","","",null,null],[5,"pango_glyph_item_iter_copy","","",null,null],[5,"pango_glyph_item_iter_free","","",null,null],[5,"pango_glyph_item_iter_init_end","","",null,null],[5,"pango_glyph_item_iter_init_start","","",null,null],[5,"pango_glyph_item_iter_next_cluster","","",null,null],[5,"pango_glyph_item_iter_prev_cluster","","",null,null],[5,"pango_glyph_string_get_type","","",null,null],[5,"pango_glyph_string_new","","",null,null],[5,"pango_glyph_string_copy","","",null,null],[5,"pango_glyph_string_extents","","",null,null],[5,"pango_glyph_string_extents_range","","",null,null],[5,"pango_glyph_string_free","","",null,null],[5,"pango_glyph_string_get_logical_widths","","",null,null],[5,"pango_glyph_string_get_width","","",null,null],[5,"pango_glyph_string_index_to_x","","",null,null],[5,"pango_glyph_string_set_size","","",null,null],[5,"pango_glyph_string_x_to_index","","",null,null],[5,"pango_item_get_type","","",null,null],[5,"pango_item_new","","",null,null],[5,"pango_item_copy","","",null,null],[5,"pango_item_free","","",null,null],[5,"pango_item_split","","",null,null],[5,"pango_language_get_type","","",null,null],[5,"pango_language_get_sample_string","","",null,null],[5,"pango_language_get_scripts","","",null,null],[5,"pango_language_includes_script","","",null,null],[5,"pango_language_matches","","",null,null],[5,"pango_language_to_string","","",null,null],[5,"pango_language_from_string","","",null,null],[5,"pango_language_get_default","","",null,null],[5,"pango_layout_iter_get_type","","",null,null],[5,"pango_layout_iter_at_last_line","","",null,null],[5,"pango_layout_iter_copy","","",null,null],[5,"pango_layout_iter_free","","",null,null],[5,"pango_layout_iter_get_baseline","","",null,null],[5,"pango_layout_iter_get_char_extents","","",null,null],[5,"pango_layout_iter_get_cluster_extents","","",null,null],[5,"pango_layout_iter_get_index","","",null,null],[5,"pango_layout_iter_get_layout","","",null,null],[5,"pango_layout_iter_get_layout_extents","","",null,null],[5,"pango_layout_iter_get_line","","",null,null],[5,"pango_layout_iter_get_line_extents","","",null,null],[5,"pango_layout_iter_get_line_readonly","","",null,null],[5,"pango_layout_iter_get_line_yrange","","",null,null],[5,"pango_layout_iter_get_run","","",null,null],[5,"pango_layout_iter_get_run_extents","","",null,null],[5,"pango_layout_iter_get_run_readonly","","",null,null],[5,"pango_layout_iter_next_char","","",null,null],[5,"pango_layout_iter_next_cluster","","",null,null],[5,"pango_layout_iter_next_line","","",null,null],[5,"pango_layout_iter_next_run","","",null,null],[5,"pango_layout_line_get_type","","",null,null],[5,"pango_layout_line_get_extents","","",null,null],[5,"pango_layout_line_get_pixel_extents","","",null,null],[5,"pango_layout_line_get_x_ranges","","",null,null],[5,"pango_layout_line_index_to_x","","",null,null],[5,"pango_layout_line_ref","","",null,null],[5,"pango_layout_line_unref","","",null,null],[5,"pango_layout_line_x_to_index","","",null,null],[5,"pango_map_get_engine","","",null,null],[5,"pango_map_get_engines","","",null,null],[5,"pango_matrix_get_type","","",null,null],[5,"pango_matrix_concat","","",null,null],[5,"pango_matrix_copy","","",null,null],[5,"pango_matrix_free","","",null,null],[5,"pango_matrix_get_font_scale_factor","","",null,null],[5,"pango_matrix_rotate","","",null,null],[5,"pango_matrix_scale","","",null,null],[5,"pango_matrix_transform_distance","","",null,null],[5,"pango_matrix_transform_pixel_rectangle","","",null,null],[5,"pango_matrix_transform_point","","",null,null],[5,"pango_matrix_transform_rectangle","","",null,null],[5,"pango_matrix_translate","","",null,null],[5,"pango_script_iter_free","","",null,null],[5,"pango_script_iter_get_range","","",null,null],[5,"pango_script_iter_next","","",null,null],[5,"pango_script_iter_new","","",null,null],[5,"pango_tab_array_get_type","","",null,null],[5,"pango_tab_array_new","","",null,null],[5,"pango_tab_array_new_with_positions","","",null,null],[5,"pango_tab_array_copy","","",null,null],[5,"pango_tab_array_free","","",null,null],[5,"pango_tab_array_get_positions_in_pixels","","",null,null],[5,"pango_tab_array_get_size","","",null,null],[5,"pango_tab_array_get_tab","","",null,null],[5,"pango_tab_array_get_tabs","","",null,null],[5,"pango_tab_array_resize","","",null,null],[5,"pango_tab_array_set_tab","","",null,null],[5,"pango_context_get_type","","",null,null],[5,"pango_context_new","","",null,null],[5,"pango_context_changed","","",null,null],[5,"pango_context_get_base_dir","","",null,null],[5,"pango_context_get_base_gravity","","",null,null],[5,"pango_context_get_font_description","","",null,null],[5,"pango_context_get_font_map","","",null,null],[5,"pango_context_get_gravity","","",null,null],[5,"pango_context_get_gravity_hint","","",null,null],[5,"pango_context_get_language","","",null,null],[5,"pango_context_get_matrix","","",null,null],[5,"pango_context_get_metrics","","",null,null],[5,"pango_context_get_serial","","",null,null],[5,"pango_context_list_families","","",null,null],[5,"pango_context_load_font","","",null,null],[5,"pango_context_load_fontset","","",null,null],[5,"pango_context_set_base_dir","","",null,null],[5,"pango_context_set_base_gravity","","",null,null],[5,"pango_context_set_font_description","","",null,null],[5,"pango_context_set_font_map","","",null,null],[5,"pango_context_set_gravity_hint","","",null,null],[5,"pango_context_set_language","","",null,null],[5,"pango_context_set_matrix","","",null,null],[5,"pango_engine_get_type","","",null,null],[5,"pango_engine_lang_get_type","","",null,null],[5,"pango_engine_shape_get_type","","",null,null],[5,"pango_font_get_type","","",null,null],[5,"pango_font_descriptions_free","","",null,null],[5,"pango_font_describe","","",null,null],[5,"pango_font_describe_with_absolute_size","","",null,null],[5,"pango_font_find_shaper","","",null,null],[5,"pango_font_get_coverage","","",null,null],[5,"pango_font_get_font_map","","",null,null],[5,"pango_font_get_glyph_extents","","",null,null],[5,"pango_font_get_metrics","","",null,null],[5,"pango_font_face_get_type","","",null,null],[5,"pango_font_face_describe","","",null,null],[5,"pango_font_face_get_face_name","","",null,null],[5,"pango_font_face_is_synthesized","","",null,null],[5,"pango_font_face_list_sizes","","",null,null],[5,"pango_font_family_get_type","","",null,null],[5,"pango_font_family_get_name","","",null,null],[5,"pango_font_family_is_monospace","","",null,null],[5,"pango_font_family_list_faces","","",null,null],[5,"pango_font_map_get_type","","",null,null],[5,"pango_font_map_changed","","",null,null],[5,"pango_font_map_create_context","","",null,null],[5,"pango_font_map_get_serial","","",null,null],[5,"pango_font_map_get_shape_engine_type","","",null,null],[5,"pango_font_map_list_families","","",null,null],[5,"pango_font_map_load_font","","",null,null],[5,"pango_font_map_load_fontset","","",null,null],[5,"pango_fontset_get_type","","",null,null],[5,"pango_fontset_foreach","","",null,null],[5,"pango_fontset_get_font","","",null,null],[5,"pango_fontset_get_metrics","","",null,null],[5,"pango_fontset_simple_get_type","","",null,null],[5,"pango_fontset_simple_new","","",null,null],[5,"pango_fontset_simple_append","","",null,null],[5,"pango_fontset_simple_size","","",null,null],[5,"pango_layout_get_type","","",null,null],[5,"pango_layout_new","","",null,null],[5,"pango_layout_context_changed","","",null,null],[5,"pango_layout_copy","","",null,null],[5,"pango_layout_get_alignment","","",null,null],[5,"pango_layout_get_attributes","","",null,null],[5,"pango_layout_get_auto_dir","","",null,null],[5,"pango_layout_get_baseline","","",null,null],[5,"pango_layout_get_character_count","","",null,null],[5,"pango_layout_get_context","","",null,null],[5,"pango_layout_get_cursor_pos","","",null,null],[5,"pango_layout_get_ellipsize","","",null,null],[5,"pango_layout_get_extents","","",null,null],[5,"pango_layout_get_font_description","","",null,null],[5,"pango_layout_get_height","","",null,null],[5,"pango_layout_get_indent","","",null,null],[5,"pango_layout_get_iter","","",null,null],[5,"pango_layout_get_justify","","",null,null],[5,"pango_layout_get_line","","",null,null],[5,"pango_layout_get_line_count","","",null,null],[5,"pango_layout_get_line_readonly","","",null,null],[5,"pango_layout_get_lines","","",null,null],[5,"pango_layout_get_lines_readonly","","",null,null],[5,"pango_layout_get_log_attrs","","",null,null],[5,"pango_layout_get_log_attrs_readonly","","",null,null],[5,"pango_layout_get_pixel_extents","","",null,null],[5,"pango_layout_get_pixel_size","","",null,null],[5,"pango_layout_get_serial","","",null,null],[5,"pango_layout_get_single_paragraph_mode","","",null,null],[5,"pango_layout_get_size","","",null,null],[5,"pango_layout_get_spacing","","",null,null],[5,"pango_layout_get_tabs","","",null,null],[5,"pango_layout_get_text","","",null,null],[5,"pango_layout_get_unknown_glyphs_count","","",null,null],[5,"pango_layout_get_width","","",null,null],[5,"pango_layout_get_wrap","","",null,null],[5,"pango_layout_index_to_line_x","","",null,null],[5,"pango_layout_index_to_pos","","",null,null],[5,"pango_layout_is_ellipsized","","",null,null],[5,"pango_layout_is_wrapped","","",null,null],[5,"pango_layout_move_cursor_visually","","",null,null],[5,"pango_layout_set_alignment","","",null,null],[5,"pango_layout_set_attributes","","",null,null],[5,"pango_layout_set_auto_dir","","",null,null],[5,"pango_layout_set_ellipsize","","",null,null],[5,"pango_layout_set_font_description","","",null,null],[5,"pango_layout_set_height","","",null,null],[5,"pango_layout_set_indent","","",null,null],[5,"pango_layout_set_justify","","",null,null],[5,"pango_layout_set_markup","","",null,null],[5,"pango_layout_set_markup_with_accel","","",null,null],[5,"pango_layout_set_single_paragraph_mode","","",null,null],[5,"pango_layout_set_spacing","","",null,null],[5,"pango_layout_set_tabs","","",null,null],[5,"pango_layout_set_text","","",null,null],[5,"pango_layout_set_width","","",null,null],[5,"pango_layout_set_wrap","","",null,null],[5,"pango_layout_xy_to_index","","",null,null],[5,"pango_renderer_get_type","","",null,null],[5,"pango_renderer_activate","","",null,null],[5,"pango_renderer_deactivate","","",null,null],[5,"pango_renderer_draw_error_underline","","",null,null],[5,"pango_renderer_draw_glyph","","",null,null],[5,"pango_renderer_draw_glyph_item","","",null,null],[5,"pango_renderer_draw_glyphs","","",null,null],[5,"pango_renderer_draw_layout","","",null,null],[5,"pango_renderer_draw_layout_line","","",null,null],[5,"pango_renderer_draw_rectangle","","",null,null],[5,"pango_renderer_draw_trapezoid","","",null,null],[5,"pango_renderer_get_color","","",null,null],[5,"pango_renderer_get_layout","","",null,null],[5,"pango_renderer_get_layout_line","","",null,null],[5,"pango_renderer_get_matrix","","",null,null],[5,"pango_renderer_part_changed","","",null,null],[5,"pango_renderer_set_color","","",null,null],[5,"pango_renderer_set_matrix","","",null,null],[5,"pango_attr_background_new","","",null,null],[5,"pango_attr_fallback_new","","",null,null],[5,"pango_attr_family_new","","",null,null],[5,"pango_attr_foreground_new","","",null,null],[5,"pango_attr_gravity_hint_new","","",null,null],[5,"pango_attr_gravity_new","","",null,null],[5,"pango_attr_letter_spacing_new","","",null,null],[5,"pango_attr_rise_new","","",null,null],[5,"pango_attr_scale_new","","",null,null],[5,"pango_attr_stretch_new","","",null,null],[5,"pango_attr_strikethrough_color_new","","",null,null],[5,"pango_attr_strikethrough_new","","",null,null],[5,"pango_attr_style_new","","",null,null],[5,"pango_attr_underline_color_new","","",null,null],[5,"pango_attr_underline_new","","",null,null],[5,"pango_attr_variant_new","","",null,null],[5,"pango_attr_weight_new","","",null,null],[5,"pango_break","","",null,null],[5,"pango_config_key_get","","",null,null],[5,"pango_config_key_get_system","","",null,null],[5,"pango_default_break","","",null,null],[5,"pango_extents_to_pixels","","",null,null],[5,"pango_find_base_dir","","",null,null],[5,"pango_find_map","","",null,null],[5,"pango_find_paragraph_boundary","","",null,null],[5,"pango_get_lib_subdirectory","","",null,null],[5,"pango_get_log_attrs","","",null,null],[5,"pango_get_mirror_char","","",null,null],[5,"pango_get_sysconf_subdirectory","","",null,null],[5,"pango_is_zero_width","","",null,null],[5,"pango_itemize","","",null,null],[5,"pango_itemize_with_base_dir","","",null,null],[5,"pango_log2vis_get_embedding_levels","","",null,null],[5,"pango_lookup_aliases","","",null,null],[5,"pango_markup_parser_finish","","",null,null],[5,"pango_markup_parser_new","","",null,null],[5,"pango_module_register","","",null,null],[5,"pango_parse_enum","","",null,null],[5,"pango_parse_markup","","",null,null],[5,"pango_parse_stretch","","",null,null],[5,"pango_parse_style","","",null,null],[5,"pango_parse_variant","","",null,null],[5,"pango_parse_weight","","",null,null],[5,"pango_quantize_line_geometry","","",null,null],[5,"pango_read_line","","",null,null],[5,"pango_reorder_items","","",null,null],[5,"pango_scan_int","","",null,null],[5,"pango_scan_string","","",null,null],[5,"pango_scan_word","","",null,null],[5,"pango_shape","","",null,null],[5,"pango_shape_full","","",null,null],[5,"pango_skip_space","","",null,null],[5,"pango_split_file_list","","",null,null],[5,"pango_trim_string","","",null,null],[5,"pango_unichar_direction","","",null,null],[5,"pango_units_from_double","","",null,null],[5,"pango_units_to_double","","",null,null],[5,"pango_version","","",null,null],[5,"pango_version_check","","",null,null],[5,"pango_version_string","","",null,null],[6,"PangoGlyph","","",null,null],[6,"PangoGlyphUnit","","",null,null],[6,"PangoLayoutRun","","",null,null],[6,"TabAlign","","",null,null],[6,"PangoTabAlign","","",null,null],[6,"PangoAttrDataCopyFunc","","",null,null],[6,"PangoAttrFilterFunc","","",null,null],[6,"PangoFontsetForeachFunc","","",null,null],[17,"PANGO_ALIGN_LEFT","","",null,null],[17,"PANGO_ALIGN_CENTER","","",null,null],[17,"PANGO_ALIGN_RIGHT","","",null,null],[17,"PANGO_ATTR_INVALID","","",null,null],[17,"PANGO_ATTR_LANGUAGE","","",null,null],[17,"PANGO_ATTR_FAMILY","","",null,null],[17,"PANGO_ATTR_STYLE","","",null,null],[17,"PANGO_ATTR_WEIGHT","","",null,null],[17,"PANGO_ATTR_VARIANT","","",null,null],[17,"PANGO_ATTR_STRETCH","","",null,null],[17,"PANGO_ATTR_SIZE","","",null,null],[17,"PANGO_ATTR_FONT_DESC","","",null,null],[17,"PANGO_ATTR_FOREGROUND","","",null,null],[17,"PANGO_ATTR_BACKGROUND","","",null,null],[17,"PANGO_ATTR_UNDERLINE","","",null,null],[17,"PANGO_ATTR_STRIKETHROUGH","","",null,null],[17,"PANGO_ATTR_RISE","","",null,null],[17,"PANGO_ATTR_SHAPE","","",null,null],[17,"PANGO_ATTR_SCALE","","",null,null],[17,"PANGO_ATTR_FALLBACK","","",null,null],[17,"PANGO_ATTR_LETTER_SPACING","","",null,null],[17,"PANGO_ATTR_UNDERLINE_COLOR","","",null,null],[17,"PANGO_ATTR_STRIKETHROUGH_COLOR","","",null,null],[17,"PANGO_ATTR_ABSOLUTE_SIZE","","",null,null],[17,"PANGO_ATTR_GRAVITY","","",null,null],[17,"PANGO_ATTR_GRAVITY_HINT","","",null,null],[17,"PANGO_BIDI_TYPE_L","","",null,null],[17,"PANGO_BIDI_TYPE_LRE","","",null,null],[17,"PANGO_BIDI_TYPE_LRO","","",null,null],[17,"PANGO_BIDI_TYPE_R","","",null,null],[17,"PANGO_BIDI_TYPE_AL","","",null,null],[17,"PANGO_BIDI_TYPE_RLE","","",null,null],[17,"PANGO_BIDI_TYPE_RLO","","",null,null],[17,"PANGO_BIDI_TYPE_PDF","","",null,null],[17,"PANGO_BIDI_TYPE_EN","","",null,null],[17,"PANGO_BIDI_TYPE_ES","","",null,null],[17,"PANGO_BIDI_TYPE_ET","","",null,null],[17,"PANGO_BIDI_TYPE_AN","","",null,null],[17,"PANGO_BIDI_TYPE_CS","","",null,null],[17,"PANGO_BIDI_TYPE_NSM","","",null,null],[17,"PANGO_BIDI_TYPE_BN","","",null,null],[17,"PANGO_BIDI_TYPE_B","","",null,null],[17,"PANGO_BIDI_TYPE_S","","",null,null],[17,"PANGO_BIDI_TYPE_WS","","",null,null],[17,"PANGO_BIDI_TYPE_ON","","",null,null],[17,"PANGO_COVERAGE_NONE","","",null,null],[17,"PANGO_COVERAGE_FALLBACK","","",null,null],[17,"PANGO_COVERAGE_APPROXIMATE","","",null,null],[17,"PANGO_COVERAGE_EXACT","","",null,null],[17,"PANGO_DIRECTION_LTR","","",null,null],[17,"PANGO_DIRECTION_RTL","","",null,null],[17,"PANGO_DIRECTION_TTB_LTR","","",null,null],[17,"PANGO_DIRECTION_TTB_RTL","","",null,null],[17,"PANGO_DIRECTION_WEAK_LTR","","",null,null],[17,"PANGO_DIRECTION_WEAK_RTL","","",null,null],[17,"PANGO_DIRECTION_NEUTRAL","","",null,null],[17,"PANGO_ELLIPSIZE_NONE","","",null,null],[17,"PANGO_ELLIPSIZE_START","","",null,null],[17,"PANGO_ELLIPSIZE_MIDDLE","","",null,null],[17,"PANGO_ELLIPSIZE_END","","",null,null],[17,"PANGO_GRAVITY_SOUTH","","",null,null],[17,"PANGO_GRAVITY_EAST","","",null,null],[17,"PANGO_GRAVITY_NORTH","","",null,null],[17,"PANGO_GRAVITY_WEST","","",null,null],[17,"PANGO_GRAVITY_AUTO","","",null,null],[17,"PANGO_GRAVITY_HINT_NATURAL","","",null,null],[17,"PANGO_GRAVITY_HINT_STRONG","","",null,null],[17,"PANGO_GRAVITY_HINT_LINE","","",null,null],[17,"PANGO_RENDER_PART_FOREGROUND","","",null,null],[17,"PANGO_RENDER_PART_BACKGROUND","","",null,null],[17,"PANGO_RENDER_PART_UNDERLINE","","",null,null],[17,"PANGO_RENDER_PART_STRIKETHROUGH","","",null,null],[17,"PANGO_SCRIPT_INVALID_CODE","","",null,null],[17,"PANGO_SCRIPT_COMMON","","",null,null],[17,"PANGO_SCRIPT_INHERITED","","",null,null],[17,"PANGO_SCRIPT_ARABIC","","",null,null],[17,"PANGO_SCRIPT_ARMENIAN","","",null,null],[17,"PANGO_SCRIPT_BENGALI","","",null,null],[17,"PANGO_SCRIPT_BOPOMOFO","","",null,null],[17,"PANGO_SCRIPT_CHEROKEE","","",null,null],[17,"PANGO_SCRIPT_COPTIC","","",null,null],[17,"PANGO_SCRIPT_CYRILLIC","","",null,null],[17,"PANGO_SCRIPT_DESERET","","",null,null],[17,"PANGO_SCRIPT_DEVANAGARI","","",null,null],[17,"PANGO_SCRIPT_ETHIOPIC","","",null,null],[17,"PANGO_SCRIPT_GEORGIAN","","",null,null],[17,"PANGO_SCRIPT_GOTHIC","","",null,null],[17,"PANGO_SCRIPT_GREEK","","",null,null],[17,"PANGO_SCRIPT_GUJARATI","","",null,null],[17,"PANGO_SCRIPT_GURMUKHI","","",null,null],[17,"PANGO_SCRIPT_HAN","","",null,null],[17,"PANGO_SCRIPT_HANGUL","","",null,null],[17,"PANGO_SCRIPT_HEBREW","","",null,null],[17,"PANGO_SCRIPT_HIRAGANA","","",null,null],[17,"PANGO_SCRIPT_KANNADA","","",null,null],[17,"PANGO_SCRIPT_KATAKANA","","",null,null],[17,"PANGO_SCRIPT_KHMER","","",null,null],[17,"PANGO_SCRIPT_LAO","","",null,null],[17,"PANGO_SCRIPT_LATIN","","",null,null],[17,"PANGO_SCRIPT_MALAYALAM","","",null,null],[17,"PANGO_SCRIPT_MONGOLIAN","","",null,null],[17,"PANGO_SCRIPT_MYANMAR","","",null,null],[17,"PANGO_SCRIPT_OGHAM","","",null,null],[17,"PANGO_SCRIPT_OLD_ITALIC","","",null,null],[17,"PANGO_SCRIPT_ORIYA","","",null,null],[17,"PANGO_SCRIPT_RUNIC","","",null,null],[17,"PANGO_SCRIPT_SINHALA","","",null,null],[17,"PANGO_SCRIPT_SYRIAC","","",null,null],[17,"PANGO_SCRIPT_TAMIL","","",null,null],[17,"PANGO_SCRIPT_TELUGU","","",null,null],[17,"PANGO_SCRIPT_THAANA","","",null,null],[17,"PANGO_SCRIPT_THAI","","",null,null],[17,"PANGO_SCRIPT_TIBETAN","","",null,null],[17,"PANGO_SCRIPT_CANADIAN_ABORIGINAL","","",null,null],[17,"PANGO_SCRIPT_YI","","",null,null],[17,"PANGO_SCRIPT_TAGALOG","","",null,null],[17,"PANGO_SCRIPT_HANUNOO","","",null,null],[17,"PANGO_SCRIPT_BUHID","","",null,null],[17,"PANGO_SCRIPT_TAGBANWA","","",null,null],[17,"PANGO_SCRIPT_BRAILLE","","",null,null],[17,"PANGO_SCRIPT_CYPRIOT","","",null,null],[17,"PANGO_SCRIPT_LIMBU","","",null,null],[17,"PANGO_SCRIPT_OSMANYA","","",null,null],[17,"PANGO_SCRIPT_SHAVIAN","","",null,null],[17,"PANGO_SCRIPT_LINEAR_B","","",null,null],[17,"PANGO_SCRIPT_TAI_LE","","",null,null],[17,"PANGO_SCRIPT_UGARITIC","","",null,null],[17,"PANGO_SCRIPT_NEW_TAI_LUE","","",null,null],[17,"PANGO_SCRIPT_BUGINESE","","",null,null],[17,"PANGO_SCRIPT_GLAGOLITIC","","",null,null],[17,"PANGO_SCRIPT_TIFINAGH","","",null,null],[17,"PANGO_SCRIPT_SYLOTI_NAGRI","","",null,null],[17,"PANGO_SCRIPT_OLD_PERSIAN","","",null,null],[17,"PANGO_SCRIPT_KHAROSHTHI","","",null,null],[17,"PANGO_SCRIPT_UNKNOWN","","",null,null],[17,"PANGO_SCRIPT_BALINESE","","",null,null],[17,"PANGO_SCRIPT_CUNEIFORM","","",null,null],[17,"PANGO_SCRIPT_PHOENICIAN","","",null,null],[17,"PANGO_SCRIPT_PHAGS_PA","","",null,null],[17,"PANGO_SCRIPT_NKO","","",null,null],[17,"PANGO_SCRIPT_KAYAH_LI","","",null,null],[17,"PANGO_SCRIPT_LEPCHA","","",null,null],[17,"PANGO_SCRIPT_REJANG","","",null,null],[17,"PANGO_SCRIPT_SUNDANESE","","",null,null],[17,"PANGO_SCRIPT_SAURASHTRA","","",null,null],[17,"PANGO_SCRIPT_CHAM","","",null,null],[17,"PANGO_SCRIPT_OL_CHIKI","","",null,null],[17,"PANGO_SCRIPT_VAI","","",null,null],[17,"PANGO_SCRIPT_CARIAN","","",null,null],[17,"PANGO_SCRIPT_LYCIAN","","",null,null],[17,"PANGO_SCRIPT_LYDIAN","","",null,null],[17,"PANGO_SCRIPT_BATAK","","",null,null],[17,"PANGO_SCRIPT_BRAHMI","","",null,null],[17,"PANGO_SCRIPT_MANDAIC","","",null,null],[17,"PANGO_SCRIPT_CHAKMA","","",null,null],[17,"PANGO_SCRIPT_MEROITIC_CURSIVE","","",null,null],[17,"PANGO_SCRIPT_MEROITIC_HIEROGLYPHS","","",null,null],[17,"PANGO_SCRIPT_MIAO","","",null,null],[17,"PANGO_SCRIPT_SHARADA","","",null,null],[17,"PANGO_SCRIPT_SORA_SOMPENG","","",null,null],[17,"PANGO_SCRIPT_TAKRI","","",null,null],[17,"PANGO_STRETCH_ULTRA_CONDENSED","","",null,null],[17,"PANGO_STRETCH_EXTRA_CONDENSED","","",null,null],[17,"PANGO_STRETCH_CONDENSED","","",null,null],[17,"PANGO_STRETCH_SEMI_CONDENSED","","",null,null],[17,"PANGO_STRETCH_NORMAL","","",null,null],[17,"PANGO_STRETCH_SEMI_EXPANDED","","",null,null],[17,"PANGO_STRETCH_EXPANDED","","",null,null],[17,"PANGO_STRETCH_EXTRA_EXPANDED","","",null,null],[17,"PANGO_STRETCH_ULTRA_EXPANDED","","",null,null],[17,"PANGO_STYLE_NORMAL","","",null,null],[17,"PANGO_STYLE_OBLIQUE","","",null,null],[17,"PANGO_STYLE_ITALIC","","",null,null],[17,"PANGO_TAB_LEFT","","",null,null],[17,"PANGO_UNDERLINE_NONE","","",null,null],[17,"PANGO_UNDERLINE_SINGLE","","",null,null],[17,"PANGO_UNDERLINE_DOUBLE","","",null,null],[17,"PANGO_UNDERLINE_LOW","","",null,null],[17,"PANGO_UNDERLINE_ERROR","","",null,null],[17,"PANGO_VARIANT_NORMAL","","",null,null],[17,"PANGO_VARIANT_SMALL_CAPS","","",null,null],[17,"PANGO_WEIGHT_THIN","","",null,null],[17,"PANGO_WEIGHT_ULTRALIGHT","","",null,null],[17,"PANGO_WEIGHT_LIGHT","","",null,null],[17,"PANGO_WEIGHT_SEMILIGHT","","",null,null],[17,"PANGO_WEIGHT_BOOK","","",null,null],[17,"PANGO_WEIGHT_NORMAL","","",null,null],[17,"PANGO_WEIGHT_MEDIUM","","",null,null],[17,"PANGO_WEIGHT_SEMIBOLD","","",null,null],[17,"PANGO_WEIGHT_BOLD","","",null,null],[17,"PANGO_WEIGHT_ULTRABOLD","","",null,null],[17,"PANGO_WEIGHT_HEAVY","","",null,null],[17,"PANGO_WEIGHT_ULTRAHEAVY","","",null,null],[17,"PANGO_WRAP_WORD","","",null,null],[17,"PANGO_WRAP_CHAR","","",null,null],[17,"PANGO_WRAP_WORD_CHAR","","",null,null],[17,"PANGO_ANALYSIS_FLAG_CENTERED_BASELINE","","",null,null],[17,"PANGO_ANALYSIS_FLAG_IS_ELLIPSIS","","",null,null],[17,"PANGO_ATTR_INDEX_FROM_TEXT_BEGINNING","","",null,null],[17,"PANGO_ENGINE_TYPE_LANG","","",null,null],[17,"PANGO_ENGINE_TYPE_SHAPE","","",null,null],[17,"PANGO_GLYPH_EMPTY","","",null,null],[17,"PANGO_GLYPH_INVALID_INPUT","","",null,null],[17,"PANGO_GLYPH_UNKNOWN_FLAG","","",null,null],[17,"PANGO_RENDER_TYPE_NONE","","",null,null],[17,"PANGO_SCALE","","",null,null],[17,"PANGO_UNKNOWN_GLYPH_HEIGHT","","",null,null],[17,"PANGO_UNKNOWN_GLYPH_WIDTH","","",null,null],[17,"PANGO_FONT_MASK_FAMILY","","",null,null],[17,"PANGO_FONT_MASK_STYLE","","",null,null],[17,"PANGO_FONT_MASK_VARIANT","","",null,null],[17,"PANGO_FONT_MASK_WEIGHT","","",null,null],[17,"PANGO_FONT_MASK_STRETCH","","",null,null],[17,"PANGO_FONT_MASK_SIZE","","",null,null],[17,"PANGO_FONT_MASK_GRAVITY","","",null,null],[11,"eq","","",34,{"inputs":[{"name":"pangoalignment"},{"name":"pangoalignment"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"pangoalignment"},{"name":"pangoalignment"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"pangoalignment"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"pangoalignment"}],"output":{"name":"pangoalignment"}}],[11,"eq","","",35,{"inputs":[{"name":"pangoattrtype"},{"name":"pangoattrtype"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"pangoattrtype"},{"name":"pangoattrtype"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"pangoattrtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"pangoattrtype"}],"output":{"name":"pangoattrtype"}}],[11,"eq","","",36,{"inputs":[{"name":"pangobiditype"},{"name":"pangobiditype"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"pangobiditype"},{"name":"pangobiditype"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"pangobiditype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"pangobiditype"}],"output":{"name":"pangobiditype"}}],[11,"eq","","",37,{"inputs":[{"name":"pangocoveragelevel"},{"name":"pangocoveragelevel"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"pangocoveragelevel"},{"name":"pangocoveragelevel"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"pangocoveragelevel"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"pangocoveragelevel"}],"output":{"name":"pangocoveragelevel"}}],[11,"eq","","",38,{"inputs":[{"name":"pangodirection"},{"name":"pangodirection"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"pangodirection"},{"name":"pangodirection"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"pangodirection"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"pangodirection"}],"output":{"name":"pangodirection"}}],[11,"eq","","",39,{"inputs":[{"name":"pangoellipsizemode"},{"name":"pangoellipsizemode"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"pangoellipsizemode"},{"name":"pangoellipsizemode"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"pangoellipsizemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"pangoellipsizemode"}],"output":{"name":"pangoellipsizemode"}}],[11,"eq","","",40,{"inputs":[{"name":"pangogravity"},{"name":"pangogravity"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"pangogravity"},{"name":"pangogravity"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"pangogravity"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"pangogravity"}],"output":{"name":"pangogravity"}}],[11,"eq","","",41,{"inputs":[{"name":"pangogravityhint"},{"name":"pangogravityhint"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"pangogravityhint"},{"name":"pangogravityhint"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"pangogravityhint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"pangogravityhint"}],"output":{"name":"pangogravityhint"}}],[11,"eq","","",42,{"inputs":[{"name":"pangorenderpart"},{"name":"pangorenderpart"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"pangorenderpart"},{"name":"pangorenderpart"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"pangorenderpart"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"pangorenderpart"}],"output":{"name":"pangorenderpart"}}],[11,"eq","","",43,{"inputs":[{"name":"pangoscript"},{"name":"pangoscript"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"pangoscript"},{"name":"pangoscript"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"pangoscript"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"pangoscript"}],"output":{"name":"pangoscript"}}],[11,"eq","","",44,{"inputs":[{"name":"pangostretch"},{"name":"pangostretch"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"pangostretch"},{"name":"pangostretch"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"pangostretch"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"pangostretch"}],"output":{"name":"pangostretch"}}],[11,"eq","","",45,{"inputs":[{"name":"pangostyle"},{"name":"pangostyle"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"pangostyle"},{"name":"pangostyle"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"pangostyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"pangostyle"}],"output":{"name":"pangostyle"}}],[11,"eq","","",46,{"inputs":[{"name":"pangounderline"},{"name":"pangounderline"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"pangounderline"},{"name":"pangounderline"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"pangounderline"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"pangounderline"}],"output":{"name":"pangounderline"}}],[11,"eq","","",47,{"inputs":[{"name":"pangovariant"},{"name":"pangovariant"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"pangovariant"},{"name":"pangovariant"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"pangovariant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"pangovariant"}],"output":{"name":"pangovariant"}}],[11,"eq","","",48,{"inputs":[{"name":"pangoweight"},{"name":"pangoweight"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"pangoweight"},{"name":"pangoweight"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"pangoweight"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"pangoweight"}],"output":{"name":"pangoweight"}}],[11,"eq","","",49,{"inputs":[{"name":"pangowrapmode"},{"name":"pangowrapmode"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"pangowrapmode"},{"name":"pangowrapmode"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"pangowrapmode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"pangowrapmode"}],"output":{"name":"pangowrapmode"}}],[11,"hash","","",50,null],[11,"cmp","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"eq","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"pangofontmask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",50,{"inputs":[],"output":{"name":"pangofontmask"}}],[11,"all","","Returns the set containing all flags.",50,{"inputs":[],"output":{"name":"pangofontmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",50,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",50,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",50,{"inputs":[{"name":"c_uint"}],"output":{"name":"pangofontmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",50,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",50,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",50,{"inputs":[{"name":"pangofontmask"},{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"not","","Returns the complement of this set of flags.",50,{"inputs":[{"name":"pangofontmask"}],"output":{"name":"pangofontmask"}}],[11,"from_iter","","",50,{"inputs":[{"name":"t"}],"output":{"name":"pangofontmask"}}]],"paths":[[3,"PangoAnalysis"],[3,"PangoAttrClass"],[3,"PangoAttrColor"],[3,"PangoAttrFloat"],[3,"PangoAttrFontDesc"],[3,"PangoAttrInt"],[3,"PangoAttrLanguage"],[3,"PangoAttrShape"],[3,"PangoAttrSize"],[3,"PangoAttrString"],[3,"PangoAttribute"],[3,"PangoColor"],[3,"PangoEngineInfo"],[3,"PangoEngineLangClass"],[3,"PangoEngineScriptInfo"],[3,"PangoEngineShapeClass"],[3,"PangoFontClass"],[3,"PangoFontFaceClass"],[3,"PangoFontFamilyClass"],[3,"PangoFontMapClass"],[3,"PangoFontMetrics"],[3,"PangoFontsetClass"],[3,"PangoGlyphGeometry"],[3,"PangoGlyphInfo"],[3,"PangoGlyphItem"],[3,"PangoGlyphItemIter"],[3,"PangoGlyphString"],[3,"PangoIncludedModule"],[3,"PangoItem"],[3,"PangoLayoutLine"],[3,"PangoMatrix"],[3,"PangoRectangle"],[3,"PangoRendererClass"],[3,"PangoScriptForLang"],[4,"PangoAlignment"],[4,"PangoAttrType"],[4,"PangoBidiType"],[4,"PangoCoverageLevel"],[4,"PangoDirection"],[4,"PangoEllipsizeMode"],[4,"PangoGravity"],[4,"PangoGravityHint"],[4,"PangoRenderPart"],[4,"PangoScript"],[4,"PangoStretch"],[4,"PangoStyle"],[4,"PangoUnderline"],[4,"PangoVariant"],[4,"PangoWeight"],[4,"PangoWrapMode"],[3,"PangoFontMask"]]};
searchIndex["gobject_sys"] = {"doc":"","items":[[3,"GBindingFlags","gobject_sys","",null,null],[3,"GConnectFlags","","",null,null],[3,"GParamFlags","","",null,null],[3,"GSignalFlags","","",null,null],[3,"GSignalMatchType","","",null,null],[3,"GTypeDebugFlags","","",null,null],[3,"GTypeFlags","","",null,null],[3,"GTypeFundamentalFlags","","",null,null],[3,"GCClosure","","",null,null],[12,"closure","","",0,null],[12,"callback","","",0,null],[3,"GClosure","","",null,null],[3,"GClosureNotifyData","","",null,null],[12,"data","","",1,null],[12,"notify","","",1,null],[3,"GEnumClass","","",null,null],[12,"g_type_class","","",2,null],[12,"minimum","","",2,null],[12,"maximum","","",2,null],[12,"n_values","","",2,null],[12,"values","","",2,null],[3,"GEnumValue","","",null,null],[12,"value","","",3,null],[12,"value_name","","",3,null],[12,"value_nick","","",3,null],[3,"GFlagsClass","","",null,null],[12,"g_type_class","","",4,null],[12,"mask","","",4,null],[12,"n_values","","",4,null],[12,"values","","",4,null],[3,"GFlagsValue","","",null,null],[12,"value","","",5,null],[12,"value_name","","",5,null],[12,"value_nick","","",5,null],[3,"GInitiallyUnownedClass","","",null,null],[12,"g_type_class","","",6,null],[12,"constructor","","",6,null],[12,"set_property","","",6,null],[12,"get_property","","",6,null],[12,"dispose","","",6,null],[12,"finalize","","",6,null],[12,"dispatch_properties_changed","","",6,null],[12,"notify","","",6,null],[12,"constructed","","",6,null],[3,"GInterfaceInfo","","",null,null],[12,"interface_init","","",7,null],[12,"interface_finalize","","",7,null],[12,"interface_data","","",7,null],[3,"GObjectClass","","",null,null],[12,"g_type_class","","",8,null],[12,"constructor","","",8,null],[12,"set_property","","",8,null],[12,"get_property","","",8,null],[12,"dispose","","",8,null],[12,"finalize","","",8,null],[12,"dispatch_properties_changed","","",8,null],[12,"notify","","",8,null],[12,"constructed","","",8,null],[3,"GObjectConstructParam","","",null,null],[12,"pspec","","",9,null],[12,"value","","",9,null],[3,"GParamSpecClass","","",null,null],[12,"g_type_class","","",10,null],[12,"value_type","","",10,null],[12,"finalize","","",10,null],[12,"value_set_default","","",10,null],[12,"value_validate","","",10,null],[12,"values_cmp","","",10,null],[3,"GParamSpecPool","","",null,null],[3,"GParamSpecTypeInfo","","",null,null],[12,"instance_size","","",11,null],[12,"n_preallocs","","",11,null],[12,"instance_init","","",11,null],[12,"value_type","","",11,null],[12,"finalize","","",11,null],[12,"value_set_default","","",11,null],[12,"value_validate","","",11,null],[12,"values_cmp","","",11,null],[3,"GParameter","","",null,null],[12,"name","","",12,null],[12,"value","","",12,null],[3,"GSignalInvocationHint","","",null,null],[12,"signal_id","","",13,null],[12,"detail","","",13,null],[12,"run_type","","",13,null],[3,"GSignalQuery","","",null,null],[12,"signal_id","","",14,null],[12,"signal_name","","",14,null],[12,"itype","","",14,null],[12,"signal_flags","","",14,null],[12,"return_type","","",14,null],[12,"n_params","","",14,null],[12,"param_types","","",14,null],[3,"GTypeClass","","",null,null],[3,"GTypeFundamentalInfo","","",null,null],[12,"type_flags","","",15,null],[3,"GTypeInfo","","",null,null],[12,"class_size","","",16,null],[12,"base_init","","",16,null],[12,"base_finalize","","",16,null],[12,"class_init","","",16,null],[12,"class_finalize","","",16,null],[12,"class_data","","",16,null],[12,"instance_size","","",16,null],[12,"n_preallocs","","",16,null],[12,"instance_init","","",16,null],[12,"value_table","","",16,null],[3,"GTypeInstance","","",null,null],[3,"GTypeInterface","","",null,null],[3,"GTypeModuleClass","","",null,null],[12,"parent_class","","",17,null],[12,"load","","",17,null],[12,"unload","","",17,null],[12,"reserved1","","",17,null],[12,"reserved2","","",17,null],[12,"reserved3","","",17,null],[12,"reserved4","","",17,null],[3,"GTypePluginClass","","",null,null],[12,"use_plugin","","",18,null],[12,"unuse_plugin","","",18,null],[12,"complete_type_info","","",18,null],[12,"complete_interface_info","","",18,null],[3,"GTypeQuery","","",null,null],[12,"type_","","",19,null],[12,"type_name","","",19,null],[12,"class_size","","",19,null],[12,"instance_size","","",19,null],[3,"GTypeValueTable","","",null,null],[12,"value_init","","",20,null],[12,"value_free","","",20,null],[12,"value_copy","","",20,null],[12,"value_peek_pointer","","",20,null],[12,"collect_format","","",20,null],[12,"collect_value","","",20,null],[12,"lcopy_format","","",20,null],[12,"lcopy_value","","",20,null],[3,"GValue","","",null,null],[12,"data","","",21,null],[3,"GValueArray","","",null,null],[12,"n_values","","",22,null],[12,"values","","",22,null],[3,"GWeakRef","","",null,null],[3,"GBinding","","",null,null],[3,"GInitiallyUnowned","","",null,null],[3,"GObject","","",null,null],[3,"GParamSpec","","",null,null],[3,"GParamSpecBoolean","","",null,null],[3,"GParamSpecBoxed","","",null,null],[3,"GParamSpecChar","","",null,null],[3,"GParamSpecDouble","","",null,null],[3,"GParamSpecEnum","","",null,null],[3,"GParamSpecFlags","","",null,null],[3,"GParamSpecFloat","","",null,null],[3,"GParamSpecGType","","",null,null],[3,"GParamSpecInt","","",null,null],[3,"GParamSpecInt64","","",null,null],[3,"GParamSpecLong","","",null,null],[3,"GParamSpecObject","","",null,null],[3,"GParamSpecOverride","","",null,null],[3,"GParamSpecParam","","",null,null],[3,"GParamSpecPointer","","",null,null],[3,"GParamSpecString","","",null,null],[3,"GParamSpecUChar","","",null,null],[3,"GParamSpecUInt","","",null,null],[3,"GParamSpecUInt64","","",null,null],[3,"GParamSpecULong","","",null,null],[3,"GParamSpecUnichar","","",null,null],[3,"GParamSpecValueArray","","",null,null],[3,"GParamSpecVariant","","",null,null],[3,"GTypeModule","","",null,null],[3,"GTypePlugin","","",null,null],[5,"g_cclosure_marshal_BOOLEAN__BOXED_BOXED","","",null,null],[5,"g_cclosure_marshal_BOOLEAN__FLAGS","","",null,null],[5,"g_cclosure_marshal_STRING__OBJECT_POINTER","","",null,null],[5,"g_cclosure_marshal_VOID__BOOLEAN","","",null,null],[5,"g_cclosure_marshal_VOID__BOXED","","",null,null],[5,"g_cclosure_marshal_VOID__CHAR","","",null,null],[5,"g_cclosure_marshal_VOID__DOUBLE","","",null,null],[5,"g_cclosure_marshal_VOID__ENUM","","",null,null],[5,"g_cclosure_marshal_VOID__FLAGS","","",null,null],[5,"g_cclosure_marshal_VOID__FLOAT","","",null,null],[5,"g_cclosure_marshal_VOID__INT","","",null,null],[5,"g_cclosure_marshal_VOID__LONG","","",null,null],[5,"g_cclosure_marshal_VOID__OBJECT","","",null,null],[5,"g_cclosure_marshal_VOID__PARAM","","",null,null],[5,"g_cclosure_marshal_VOID__POINTER","","",null,null],[5,"g_cclosure_marshal_VOID__STRING","","",null,null],[5,"g_cclosure_marshal_VOID__UCHAR","","",null,null],[5,"g_cclosure_marshal_VOID__UINT","","",null,null],[5,"g_cclosure_marshal_VOID__UINT_POINTER","","",null,null],[5,"g_cclosure_marshal_VOID__ULONG","","",null,null],[5,"g_cclosure_marshal_VOID__VARIANT","","",null,null],[5,"g_cclosure_marshal_VOID__VOID","","",null,null],[5,"g_cclosure_marshal_generic","","",null,null],[5,"g_cclosure_new","","",null,null],[5,"g_cclosure_new_object","","",null,null],[5,"g_cclosure_new_object_swap","","",null,null],[5,"g_cclosure_new_swap","","",null,null],[5,"g_closure_get_type","","",null,null],[5,"g_closure_new_object","","",null,null],[5,"g_closure_new_simple","","",null,null],[5,"g_closure_add_finalize_notifier","","",null,null],[5,"g_closure_add_invalidate_notifier","","",null,null],[5,"g_closure_add_marshal_guards","","",null,null],[5,"g_closure_invalidate","","",null,null],[5,"g_closure_invoke","","",null,null],[5,"g_closure_ref","","",null,null],[5,"g_closure_remove_finalize_notifier","","",null,null],[5,"g_closure_remove_invalidate_notifier","","",null,null],[5,"g_closure_set_marshal","","",null,null],[5,"g_closure_set_meta_marshal","","",null,null],[5,"g_closure_sink","","",null,null],[5,"g_closure_unref","","",null,null],[5,"g_object_class_find_property","","",null,null],[5,"g_object_class_install_properties","","",null,null],[5,"g_object_class_install_property","","",null,null],[5,"g_object_class_list_properties","","",null,null],[5,"g_object_class_override_property","","",null,null],[5,"g_param_spec_pool_insert","","",null,null],[5,"g_param_spec_pool_list","","",null,null],[5,"g_param_spec_pool_list_owned","","",null,null],[5,"g_param_spec_pool_lookup","","",null,null],[5,"g_param_spec_pool_remove","","",null,null],[5,"g_param_spec_pool_new","","",null,null],[5,"g_type_class_get_private","","",null,null],[5,"g_type_class_peek_parent","","",null,null],[5,"g_type_class_unref","","",null,null],[5,"g_type_class_unref_uncached","","",null,null],[5,"g_type_class_add_private","","",null,null],[5,"g_type_class_adjust_private_offset","","",null,null],[5,"g_type_class_peek","","",null,null],[5,"g_type_class_peek_static","","",null,null],[5,"g_type_class_ref","","",null,null],[5,"g_type_instance_get_private","","",null,null],[5,"g_type_interface_peek_parent","","",null,null],[5,"g_type_interface_add_prerequisite","","",null,null],[5,"g_type_interface_get_plugin","","",null,null],[5,"g_type_interface_peek","","",null,null],[5,"g_type_interface_prerequisites","","",null,null],[5,"g_type_value_table_peek","","",null,null],[5,"g_value_get_type","","",null,null],[5,"g_value_copy","","",null,null],[5,"g_value_dup_boxed","","",null,null],[5,"g_value_dup_object","","",null,null],[5,"g_value_dup_param","","",null,null],[5,"g_value_dup_string","","",null,null],[5,"g_value_dup_variant","","",null,null],[5,"g_value_fits_pointer","","",null,null],[5,"g_value_get_boolean","","",null,null],[5,"g_value_get_boxed","","",null,null],[5,"g_value_get_char","","",null,null],[5,"g_value_get_double","","",null,null],[5,"g_value_get_enum","","",null,null],[5,"g_value_get_flags","","",null,null],[5,"g_value_get_float","","",null,null],[5,"g_value_get_gtype","","",null,null],[5,"g_value_get_int","","",null,null],[5,"g_value_get_int64","","",null,null],[5,"g_value_get_long","","",null,null],[5,"g_value_get_object","","",null,null],[5,"g_value_get_param","","",null,null],[5,"g_value_get_pointer","","",null,null],[5,"g_value_get_schar","","",null,null],[5,"g_value_get_string","","",null,null],[5,"g_value_get_uchar","","",null,null],[5,"g_value_get_uint","","",null,null],[5,"g_value_get_uint64","","",null,null],[5,"g_value_get_ulong","","",null,null],[5,"g_value_get_variant","","",null,null],[5,"g_value_init","","",null,null],[5,"g_value_peek_pointer","","",null,null],[5,"g_value_reset","","",null,null],[5,"g_value_set_boolean","","",null,null],[5,"g_value_set_boxed","","",null,null],[5,"g_value_set_boxed_take_ownership","","",null,null],[5,"g_value_set_char","","",null,null],[5,"g_value_set_double","","",null,null],[5,"g_value_set_enum","","",null,null],[5,"g_value_set_flags","","",null,null],[5,"g_value_set_float","","",null,null],[5,"g_value_set_gtype","","",null,null],[5,"g_value_set_instance","","",null,null],[5,"g_value_set_int","","",null,null],[5,"g_value_set_int64","","",null,null],[5,"g_value_set_long","","",null,null],[5,"g_value_set_object","","",null,null],[5,"g_value_set_object_take_ownership","","",null,null],[5,"g_value_set_param","","",null,null],[5,"g_value_set_param_take_ownership","","",null,null],[5,"g_value_set_pointer","","",null,null],[5,"g_value_set_schar","","",null,null],[5,"g_value_set_static_boxed","","",null,null],[5,"g_value_set_static_string","","",null,null],[5,"g_value_set_string","","",null,null],[5,"g_value_set_string_take_ownership","","",null,null],[5,"g_value_set_uchar","","",null,null],[5,"g_value_set_uint","","",null,null],[5,"g_value_set_uint64","","",null,null],[5,"g_value_set_ulong","","",null,null],[5,"g_value_set_variant","","",null,null],[5,"g_value_take_boxed","","",null,null],[5,"g_value_take_object","","",null,null],[5,"g_value_take_param","","",null,null],[5,"g_value_take_string","","",null,null],[5,"g_value_take_variant","","",null,null],[5,"g_value_transform","","",null,null],[5,"g_value_unset","","",null,null],[5,"g_value_register_transform_func","","",null,null],[5,"g_value_type_compatible","","",null,null],[5,"g_value_type_transformable","","",null,null],[5,"g_value_array_get_type","","",null,null],[5,"g_value_array_new","","",null,null],[5,"g_value_array_append","","",null,null],[5,"g_value_array_copy","","",null,null],[5,"g_value_array_free","","",null,null],[5,"g_value_array_get_nth","","",null,null],[5,"g_value_array_insert","","",null,null],[5,"g_value_array_prepend","","",null,null],[5,"g_value_array_remove","","",null,null],[5,"g_value_array_sort","","",null,null],[5,"g_value_array_sort_with_data","","",null,null],[5,"g_weak_ref_clear","","",null,null],[5,"g_weak_ref_get","","",null,null],[5,"g_weak_ref_init","","",null,null],[5,"g_weak_ref_set","","",null,null],[5,"g_binding_get_type","","",null,null],[5,"g_binding_get_flags","","",null,null],[5,"g_binding_get_source","","",null,null],[5,"g_binding_get_source_property","","",null,null],[5,"g_binding_get_target","","",null,null],[5,"g_binding_get_target_property","","",null,null],[5,"g_initially_unowned_get_type","","",null,null],[5,"g_object_get_type","","",null,null],[5,"g_object_newv","","",null,null],[5,"g_object_compat_control","","",null,null],[5,"g_object_connect","","",null,null],[5,"g_object_disconnect","","",null,null],[5,"g_object_get","","",null,null],[5,"g_object_interface_find_property","","",null,null],[5,"g_object_interface_install_property","","",null,null],[5,"g_object_interface_list_properties","","",null,null],[5,"g_object_new","","",null,null],[5,"g_object_set","","",null,null],[5,"g_object_add_toggle_ref","","",null,null],[5,"g_object_add_weak_pointer","","",null,null],[5,"g_object_bind_property","","",null,null],[5,"g_object_bind_property_full","","",null,null],[5,"g_object_bind_property_with_closures","","",null,null],[5,"g_object_force_floating","","",null,null],[5,"g_object_freeze_notify","","",null,null],[5,"g_object_get_data","","",null,null],[5,"g_object_get_property","","",null,null],[5,"g_object_get_qdata","","",null,null],[5,"g_object_is_floating","","",null,null],[5,"g_object_notify","","",null,null],[5,"g_object_notify_by_pspec","","",null,null],[5,"g_object_ref","","",null,null],[5,"g_object_ref_sink","","",null,null],[5,"g_object_remove_toggle_ref","","",null,null],[5,"g_object_remove_weak_pointer","","",null,null],[5,"g_object_run_dispose","","",null,null],[5,"g_object_set_data","","",null,null],[5,"g_object_set_data_full","","",null,null],[5,"g_object_set_property","","",null,null],[5,"g_object_set_qdata","","",null,null],[5,"g_object_set_qdata_full","","",null,null],[5,"g_object_steal_data","","",null,null],[5,"g_object_steal_qdata","","",null,null],[5,"g_object_thaw_notify","","",null,null],[5,"g_object_unref","","",null,null],[5,"g_object_watch_closure","","",null,null],[5,"g_object_weak_ref","","",null,null],[5,"g_object_weak_unref","","",null,null],[5,"g_param_spec_internal","","",null,null],[5,"g_param_spec_get_blurb","","",null,null],[5,"g_param_spec_get_name","","",null,null],[5,"g_param_spec_get_nick","","",null,null],[5,"g_param_spec_get_qdata","","",null,null],[5,"g_param_spec_get_redirect_target","","",null,null],[5,"g_param_spec_ref","","",null,null],[5,"g_param_spec_ref_sink","","",null,null],[5,"g_param_spec_set_qdata","","",null,null],[5,"g_param_spec_set_qdata_full","","",null,null],[5,"g_param_spec_sink","","",null,null],[5,"g_param_spec_steal_qdata","","",null,null],[5,"g_param_spec_unref","","",null,null],[5,"g_type_module_get_type","","",null,null],[5,"g_type_module_add_interface","","",null,null],[5,"g_type_module_register_enum","","",null,null],[5,"g_type_module_register_flags","","",null,null],[5,"g_type_module_register_type","","",null,null],[5,"g_type_module_set_name","","",null,null],[5,"g_type_module_unuse","","",null,null],[5,"g_type_module_use","","",null,null],[5,"g_type_plugin_get_type","","",null,null],[5,"g_type_plugin_complete_interface_info","","",null,null],[5,"g_type_plugin_complete_type_info","","",null,null],[5,"g_type_plugin_unuse","","",null,null],[5,"g_type_plugin_use","","",null,null],[5,"g_boxed_copy","","",null,null],[5,"g_boxed_free","","",null,null],[5,"g_boxed_type_register_static","","",null,null],[5,"g_clear_object","","",null,null],[5,"g_enum_complete_type_info","","",null,null],[5,"g_enum_get_value","","",null,null],[5,"g_enum_get_value_by_name","","",null,null],[5,"g_enum_get_value_by_nick","","",null,null],[5,"g_enum_register_static","","",null,null],[5,"g_flags_complete_type_info","","",null,null],[5,"g_flags_get_first_value","","",null,null],[5,"g_flags_get_value_by_name","","",null,null],[5,"g_flags_get_value_by_nick","","",null,null],[5,"g_flags_register_static","","",null,null],[5,"g_gtype_get_type","","",null,null],[5,"g_param_spec_boolean","","",null,null],[5,"g_param_spec_boxed","","",null,null],[5,"g_param_spec_char","","",null,null],[5,"g_param_spec_double","","",null,null],[5,"g_param_spec_enum","","",null,null],[5,"g_param_spec_flags","","",null,null],[5,"g_param_spec_float","","",null,null],[5,"g_param_spec_gtype","","",null,null],[5,"g_param_spec_int","","",null,null],[5,"g_param_spec_int64","","",null,null],[5,"g_param_spec_long","","",null,null],[5,"g_param_spec_object","","",null,null],[5,"g_param_spec_override","","",null,null],[5,"g_param_spec_param","","",null,null],[5,"g_param_spec_pointer","","",null,null],[5,"g_param_spec_string","","",null,null],[5,"g_param_spec_uchar","","",null,null],[5,"g_param_spec_uint","","",null,null],[5,"g_param_spec_uint64","","",null,null],[5,"g_param_spec_ulong","","",null,null],[5,"g_param_spec_unichar","","",null,null],[5,"g_param_spec_value_array","","",null,null],[5,"g_param_spec_variant","","",null,null],[5,"g_param_type_register_static","","",null,null],[5,"g_param_value_convert","","",null,null],[5,"g_param_value_defaults","","",null,null],[5,"g_param_value_set_default","","",null,null],[5,"g_param_value_validate","","",null,null],[5,"g_param_values_cmp","","",null,null],[5,"g_pointer_type_register_static","","",null,null],[5,"g_signal_accumulator_first_wins","","",null,null],[5,"g_signal_accumulator_true_handled","","",null,null],[5,"g_signal_add_emission_hook","","",null,null],[5,"g_signal_chain_from_overridden","","",null,null],[5,"g_signal_chain_from_overridden_handler","","",null,null],[5,"g_signal_connect_closure","","",null,null],[5,"g_signal_connect_closure_by_id","","",null,null],[5,"g_signal_connect_data","","",null,null],[5,"g_signal_connect_object","","",null,null],[5,"g_signal_emit","","",null,null],[5,"g_signal_emit_by_name","","",null,null],[5,"g_signal_emitv","","",null,null],[5,"g_signal_get_invocation_hint","","",null,null],[5,"g_signal_handler_block","","",null,null],[5,"g_signal_handler_disconnect","","",null,null],[5,"g_signal_handler_find","","",null,null],[5,"g_signal_handler_is_connected","","",null,null],[5,"g_signal_handler_unblock","","",null,null],[5,"g_signal_handlers_block_matched","","",null,null],[5,"g_signal_handlers_destroy","","",null,null],[5,"g_signal_handlers_disconnect_matched","","",null,null],[5,"g_signal_handlers_unblock_matched","","",null,null],[5,"g_signal_has_handler_pending","","",null,null],[5,"g_signal_list_ids","","",null,null],[5,"g_signal_lookup","","",null,null],[5,"g_signal_name","","",null,null],[5,"g_signal_new","","",null,null],[5,"g_signal_new_class_handler","","",null,null],[5,"g_signal_newv","","",null,null],[5,"g_signal_override_class_closure","","",null,null],[5,"g_signal_override_class_handler","","",null,null],[5,"g_signal_parse_name","","",null,null],[5,"g_signal_query","","",null,null],[5,"g_signal_remove_emission_hook","","",null,null],[5,"g_signal_stop_emission","","",null,null],[5,"g_signal_stop_emission_by_name","","",null,null],[5,"g_signal_type_cclosure_new","","",null,null],[5,"g_source_set_closure","","",null,null],[5,"g_source_set_dummy_callback","","",null,null],[5,"g_strdup_value_contents","","",null,null],[5,"g_type_add_class_cache_func","","",null,null],[5,"g_type_add_class_private","","",null,null],[5,"g_type_add_instance_private","","",null,null],[5,"g_type_add_interface_check","","",null,null],[5,"g_type_add_interface_dynamic","","",null,null],[5,"g_type_add_interface_static","","",null,null],[5,"g_type_check_class_cast","","",null,null],[5,"g_type_check_class_is_a","","",null,null],[5,"g_type_check_instance","","",null,null],[5,"g_type_check_instance_cast","","",null,null],[5,"g_type_check_instance_is_a","","",null,null],[5,"g_type_check_instance_is_fundamentally_a","","",null,null],[5,"g_type_check_is_value_type","","",null,null],[5,"g_type_check_value","","",null,null],[5,"g_type_check_value_holds","","",null,null],[5,"g_type_children","","",null,null],[5,"g_type_create_instance","","",null,null],[5,"g_type_default_interface_peek","","",null,null],[5,"g_type_default_interface_ref","","",null,null],[5,"g_type_default_interface_unref","","",null,null],[5,"g_type_depth","","",null,null],[5,"g_type_free_instance","","",null,null],[5,"g_type_from_name","","",null,null],[5,"g_type_fundamental","","",null,null],[5,"g_type_fundamental_next","","",null,null],[5,"g_type_get_plugin","","",null,null],[5,"g_type_get_qdata","","",null,null],[5,"g_type_init","","",null,null],[5,"g_type_init_with_debug_flags","","",null,null],[5,"g_type_interfaces","","",null,null],[5,"g_type_is_a","","",null,null],[5,"g_type_name","","",null,null],[5,"g_type_name_from_class","","",null,null],[5,"g_type_name_from_instance","","",null,null],[5,"g_type_next_base","","",null,null],[5,"g_type_parent","","",null,null],[5,"g_type_qname","","",null,null],[5,"g_type_query","","",null,null],[5,"g_type_register_dynamic","","",null,null],[5,"g_type_register_fundamental","","",null,null],[5,"g_type_register_static","","",null,null],[5,"g_type_register_static_simple","","",null,null],[5,"g_type_remove_class_cache_func","","",null,null],[5,"g_type_remove_interface_check","","",null,null],[5,"g_type_set_qdata","","",null,null],[5,"g_type_test_flags","","",null,null],[6,"GInitiallyUnowned_autoptr","","",null,null],[6,"GObject_autoptr","","",null,null],[6,"GSignalCMarshaller","","",null,null],[6,"GTypeCValue","","",null,null],[6,"GBaseFinalizeFunc","","",null,null],[6,"GBaseInitFunc","","",null,null],[6,"GBindingTransformFunc","","",null,null],[6,"GBoxedCopyFunc","","",null,null],[6,"GBoxedFreeFunc","","",null,null],[6,"GCallback","","",null,null],[6,"GClassFinalizeFunc","","",null,null],[6,"GClassInitFunc","","",null,null],[6,"GClosureMarshal","","",null,null],[6,"GClosureNotify","","",null,null],[6,"GInstanceInitFunc","","",null,null],[6,"GInterfaceFinalizeFunc","","",null,null],[6,"GInterfaceInitFunc","","",null,null],[6,"GObjectFinalizeFunc","","",null,null],[6,"GObjectGetPropertyFunc","","",null,null],[6,"GObjectSetPropertyFunc","","",null,null],[6,"GSignalAccumulator","","",null,null],[6,"GSignalEmissionHook","","",null,null],[6,"GToggleNotify","","",null,null],[6,"GTypeClassCacheFunc","","",null,null],[6,"GTypeInterfaceCheckFunc","","",null,null],[6,"GTypePluginCompleteInterfaceInfo","","",null,null],[6,"GTypePluginCompleteTypeInfo","","",null,null],[6,"GTypePluginUnuse","","",null,null],[6,"GTypePluginUse","","",null,null],[6,"GValueTransform","","",null,null],[6,"GWeakNotify","","",null,null],[17,"G_TYPE_INVALID","","",null,null],[17,"G_TYPE_NONE","","",null,null],[17,"G_TYPE_INTERFACE","","",null,null],[17,"G_TYPE_CHAR","","",null,null],[17,"G_TYPE_UCHAR","","",null,null],[17,"G_TYPE_BOOLEAN","","",null,null],[17,"G_TYPE_INT","","",null,null],[17,"G_TYPE_UINT","","",null,null],[17,"G_TYPE_LONG","","",null,null],[17,"G_TYPE_ULONG","","",null,null],[17,"G_TYPE_INT64","","",null,null],[17,"G_TYPE_UINT64","","",null,null],[17,"G_TYPE_ENUM","","",null,null],[17,"G_TYPE_FLAGS","","",null,null],[17,"G_TYPE_FLOAT","","",null,null],[17,"G_TYPE_DOUBLE","","",null,null],[17,"G_TYPE_STRING","","",null,null],[17,"G_TYPE_POINTER","","",null,null],[17,"G_TYPE_BOXED","","",null,null],[17,"G_TYPE_PARAM","","",null,null],[17,"G_TYPE_OBJECT","","",null,null],[17,"G_TYPE_VARIANT","","",null,null],[17,"G_PARAM_MASK","","",null,null],[17,"G_PARAM_STATIC_STRINGS","","",null,null],[17,"G_PARAM_USER_SHIFT","","",null,null],[17,"G_SIGNAL_FLAGS_MASK","","",null,null],[17,"G_SIGNAL_MATCH_MASK","","",null,null],[17,"G_TYPE_FUNDAMENTAL_MAX","","",null,null],[17,"G_TYPE_FUNDAMENTAL_SHIFT","","",null,null],[17,"G_TYPE_RESERVED_BSE_FIRST","","",null,null],[17,"G_TYPE_RESERVED_BSE_LAST","","",null,null],[17,"G_TYPE_RESERVED_GLIB_FIRST","","",null,null],[17,"G_TYPE_RESERVED_GLIB_LAST","","",null,null],[17,"G_TYPE_RESERVED_USER_FIRST","","",null,null],[17,"G_VALUE_COLLECT_FORMAT_MAX_LENGTH","","",null,null],[17,"G_VALUE_NOCOPY_CONTENTS","","",null,null],[17,"G_BINDING_DEFAULT","","",null,null],[17,"G_BINDING_BIDIRECTIONAL","","",null,null],[17,"G_BINDING_SYNC_CREATE","","",null,null],[17,"G_BINDING_INVERT_BOOLEAN","","",null,null],[17,"G_CONNECT_AFTER","","",null,null],[17,"G_CONNECT_SWAPPED","","",null,null],[17,"G_PARAM_READABLE","","",null,null],[17,"G_PARAM_WRITABLE","","",null,null],[17,"G_PARAM_READWRITE","","",null,null],[17,"G_PARAM_CONSTRUCT","","",null,null],[17,"G_PARAM_CONSTRUCT_ONLY","","",null,null],[17,"G_PARAM_LAX_VALIDATION","","",null,null],[17,"G_PARAM_STATIC_NAME","","",null,null],[17,"G_PARAM_PRIVATE","","",null,null],[17,"G_PARAM_STATIC_NICK","","",null,null],[17,"G_PARAM_STATIC_BLURB","","",null,null],[17,"G_PARAM_EXPLICIT_NOTIFY","","",null,null],[17,"G_PARAM_DEPRECATED","","",null,null],[17,"G_SIGNAL_RUN_FIRST","","",null,null],[17,"G_SIGNAL_RUN_LAST","","",null,null],[17,"G_SIGNAL_RUN_CLEANUP","","",null,null],[17,"G_SIGNAL_NO_RECURSE","","",null,null],[17,"G_SIGNAL_DETAILED","","",null,null],[17,"G_SIGNAL_ACTION","","",null,null],[17,"G_SIGNAL_NO_HOOKS","","",null,null],[17,"G_SIGNAL_MUST_COLLECT","","",null,null],[17,"G_SIGNAL_DEPRECATED","","",null,null],[17,"G_SIGNAL_MATCH_ID","","",null,null],[17,"G_SIGNAL_MATCH_DETAIL","","",null,null],[17,"G_SIGNAL_MATCH_CLOSURE","","",null,null],[17,"G_SIGNAL_MATCH_FUNC","","",null,null],[17,"G_SIGNAL_MATCH_DATA","","",null,null],[17,"G_SIGNAL_MATCH_UNBLOCKED","","",null,null],[17,"G_TYPE_DEBUG_NONE","","",null,null],[17,"G_TYPE_DEBUG_OBJECTS","","",null,null],[17,"G_TYPE_DEBUG_SIGNALS","","",null,null],[17,"G_TYPE_DEBUG_INSTANCE_COUNT","","",null,null],[17,"G_TYPE_DEBUG_MASK","","",null,null],[17,"G_TYPE_FLAG_ABSTRACT","","",null,null],[17,"G_TYPE_FLAG_VALUE_ABSTRACT","","",null,null],[17,"G_TYPE_FLAG_CLASSED","","",null,null],[17,"G_TYPE_FLAG_INSTANTIATABLE","","",null,null],[17,"G_TYPE_FLAG_DERIVABLE","","",null,null],[17,"G_TYPE_FLAG_DEEP_DERIVABLE","","",null,null],[11,"hash","","",23,null],[11,"cmp","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"eq","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"fmt","","",23,{"inputs":[{"name":"gbindingflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",23,{"inputs":[],"output":{"name":"gbindingflags"}}],[11,"all","","Returns the set containing all flags.",23,{"inputs":[],"output":{"name":"gbindingflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",23,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",23,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",23,{"inputs":[{"name":"c_uint"}],"output":{"name":"gbindingflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",23,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",23,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",23,{"inputs":[{"name":"gbindingflags"},{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"not","","Returns the complement of this set of flags.",23,{"inputs":[{"name":"gbindingflags"}],"output":{"name":"gbindingflags"}}],[11,"from_iter","","",23,{"inputs":[{"name":"t"}],"output":{"name":"gbindingflags"}}],[11,"hash","","",24,null],[11,"cmp","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"eq","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"fmt","","",24,{"inputs":[{"name":"gconnectflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",24,{"inputs":[],"output":{"name":"gconnectflags"}}],[11,"all","","Returns the set containing all flags.",24,{"inputs":[],"output":{"name":"gconnectflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",24,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",24,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",24,{"inputs":[{"name":"c_uint"}],"output":{"name":"gconnectflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",24,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",24,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",24,{"inputs":[{"name":"gconnectflags"},{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"not","","Returns the complement of this set of flags.",24,{"inputs":[{"name":"gconnectflags"}],"output":{"name":"gconnectflags"}}],[11,"from_iter","","",24,{"inputs":[{"name":"t"}],"output":{"name":"gconnectflags"}}],[11,"hash","","",25,null],[11,"cmp","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"eq","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"fmt","","",25,{"inputs":[{"name":"gparamflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",25,{"inputs":[],"output":{"name":"gparamflags"}}],[11,"all","","Returns the set containing all flags.",25,{"inputs":[],"output":{"name":"gparamflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",25,{"inputs":[{"name":"gparamflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",25,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",25,{"inputs":[{"name":"c_uint"}],"output":{"name":"gparamflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,{"inputs":[{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",25,{"inputs":[{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",25,{"inputs":[{"name":"gparamflags"},{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"not","","Returns the complement of this set of flags.",25,{"inputs":[{"name":"gparamflags"}],"output":{"name":"gparamflags"}}],[11,"from_iter","","",25,{"inputs":[{"name":"t"}],"output":{"name":"gparamflags"}}],[11,"hash","","",26,null],[11,"cmp","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"eq","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"fmt","","",26,{"inputs":[{"name":"gsignalflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",26,{"inputs":[],"output":{"name":"gsignalflags"}}],[11,"all","","Returns the set containing all flags.",26,{"inputs":[],"output":{"name":"gsignalflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",26,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",26,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",26,{"inputs":[{"name":"c_uint"}],"output":{"name":"gsignalflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",26,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",26,{"inputs":[{"name":"gsignalflags"},{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"not","","Returns the complement of this set of flags.",26,{"inputs":[{"name":"gsignalflags"}],"output":{"name":"gsignalflags"}}],[11,"from_iter","","",26,{"inputs":[{"name":"t"}],"output":{"name":"gsignalflags"}}],[11,"hash","","",27,null],[11,"cmp","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"eq","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",27,{"inputs":[],"output":{"name":"gsignalmatchtype"}}],[11,"all","","Returns the set containing all flags.",27,{"inputs":[],"output":{"name":"gsignalmatchtype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",27,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",27,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",27,{"inputs":[{"name":"c_uint"}],"output":{"name":"gsignalmatchtype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",27,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",27,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",27,{"inputs":[{"name":"gsignalmatchtype"},{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"not","","Returns the complement of this set of flags.",27,{"inputs":[{"name":"gsignalmatchtype"}],"output":{"name":"gsignalmatchtype"}}],[11,"from_iter","","",27,{"inputs":[{"name":"t"}],"output":{"name":"gsignalmatchtype"}}],[11,"hash","","",28,null],[11,"cmp","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"eq","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",28,{"inputs":[],"output":{"name":"gtypedebugflags"}}],[11,"all","","Returns the set containing all flags.",28,{"inputs":[],"output":{"name":"gtypedebugflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",28,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",28,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",28,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtypedebugflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",28,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",28,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",28,{"inputs":[{"name":"gtypedebugflags"},{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"not","","Returns the complement of this set of flags.",28,{"inputs":[{"name":"gtypedebugflags"}],"output":{"name":"gtypedebugflags"}}],[11,"from_iter","","",28,{"inputs":[{"name":"t"}],"output":{"name":"gtypedebugflags"}}],[11,"hash","","",29,null],[11,"cmp","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"clone","","",29,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"eq","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"gtypeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",29,{"inputs":[],"output":{"name":"gtypeflags"}}],[11,"all","","Returns the set containing all flags.",29,{"inputs":[],"output":{"name":"gtypeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",29,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",29,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",29,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtypeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",29,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",29,{"inputs":[{"name":"gtypeflags"},{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"not","","Returns the complement of this set of flags.",29,{"inputs":[{"name":"gtypeflags"}],"output":{"name":"gtypeflags"}}],[11,"from_iter","","",29,{"inputs":[{"name":"t"}],"output":{"name":"gtypeflags"}}],[11,"hash","","",30,null],[11,"cmp","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"option"}}],[11,"lt","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"le","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"gt","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"ge","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"eq","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",30,{"inputs":[],"output":{"name":"gtypefundamentalflags"}}],[11,"all","","Returns the set containing all flags.",30,{"inputs":[],"output":{"name":"gtypefundamentalflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",30,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",30,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",30,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtypefundamentalflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",30,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",30,{"inputs":[{"name":"gtypefundamentalflags"},{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"not","","Returns the complement of this set of flags.",30,{"inputs":[{"name":"gtypefundamentalflags"}],"output":{"name":"gtypefundamentalflags"}}],[11,"from_iter","","",30,{"inputs":[{"name":"t"}],"output":{"name":"gtypefundamentalflags"}}]],"paths":[[3,"GCClosure"],[3,"GClosureNotifyData"],[3,"GEnumClass"],[3,"GEnumValue"],[3,"GFlagsClass"],[3,"GFlagsValue"],[3,"GInitiallyUnownedClass"],[3,"GInterfaceInfo"],[3,"GObjectClass"],[3,"GObjectConstructParam"],[3,"GParamSpecClass"],[3,"GParamSpecTypeInfo"],[3,"GParameter"],[3,"GSignalInvocationHint"],[3,"GSignalQuery"],[3,"GTypeFundamentalInfo"],[3,"GTypeInfo"],[3,"GTypeModuleClass"],[3,"GTypePluginClass"],[3,"GTypeQuery"],[3,"GTypeValueTable"],[3,"GValue"],[3,"GValueArray"],[3,"GBindingFlags"],[3,"GConnectFlags"],[3,"GParamFlags"],[3,"GSignalFlags"],[3,"GSignalMatchType"],[3,"GTypeDebugFlags"],[3,"GTypeFlags"],[3,"GTypeFundamentalFlags"]]};
searchIndex["glib_sys"] = {"doc":"","items":[[3,"Volatile","glib_sys","",null,null],[3,"GAsciiType","","",null,null],[3,"GFileTest","","",null,null],[3,"GFormatSizeFlags","","",null,null],[3,"GHookFlagMask","","",null,null],[3,"GIOCondition","","",null,null],[3,"GIOFlags","","",null,null],[3,"GKeyFileFlags","","",null,null],[3,"GLogLevelFlags","","",null,null],[3,"GMarkupCollectType","","",null,null],[3,"GMarkupParseFlags","","",null,null],[3,"GOptionFlags","","",null,null],[3,"GRegexCompileFlags","","",null,null],[3,"GRegexMatchFlags","","",null,null],[3,"GSpawnFlags","","",null,null],[3,"GTestSubprocessFlags","","",null,null],[3,"GTestTrapFlags","","",null,null],[3,"GTraverseFlags","","",null,null],[3,"GArray","","",null,null],[12,"data","","",0,null],[12,"len","","",0,null],[3,"GAsyncQueue","","",null,null],[3,"GBookmarkFile","","",null,null],[3,"GByteArray","","",null,null],[12,"data","","",1,null],[12,"len","","",1,null],[3,"GBytes","","",null,null],[3,"GChecksum","","",null,null],[3,"GCond","","",null,null],[3,"GData","","",null,null],[3,"GDate","","",null,null],[3,"GDateTime","","",null,null],[3,"GDebugKey","","",null,null],[12,"key","","",2,null],[12,"value","","",2,null],[3,"GDir","","",null,null],[3,"GError","","",null,null],[12,"domain","","",3,null],[12,"code","","",3,null],[12,"message","","",3,null],[3,"GHashTable","","",null,null],[3,"GHashTableIter","","",null,null],[3,"GHmac","","",null,null],[3,"GHook","","",null,null],[12,"data","","",4,null],[12,"next","","",4,null],[12,"prev","","",4,null],[12,"ref_count","","",4,null],[12,"hook_id","","",4,null],[12,"flags","","",4,null],[12,"func","","",4,null],[12,"destroy","","",4,null],[3,"GHookList","","",null,null],[12,"seq_id","","",5,null],[3,"GIConv","","",null,null],[3,"GIOChannel","","",null,null],[3,"GIOFuncs","","",null,null],[12,"io_read","","",6,null],[12,"io_write","","",6,null],[12,"io_seek","","",6,null],[12,"io_close","","",6,null],[12,"io_create_watch","","",6,null],[12,"io_free","","",6,null],[12,"io_set_flags","","",6,null],[12,"io_get_flags","","",6,null],[3,"GKeyFile","","",null,null],[3,"GList","","",null,null],[12,"data","","",7,null],[12,"next","","",7,null],[12,"prev","","",7,null],[3,"GMainContext","","",null,null],[3,"GMainLoop","","",null,null],[3,"GMappedFile","","",null,null],[3,"GMarkupParseContext","","",null,null],[3,"GMarkupParser","","",null,null],[12,"start_element","","",8,null],[12,"end_element","","",8,null],[12,"text","","",8,null],[12,"passthrough","","",8,null],[12,"error","","",8,null],[3,"GMatchInfo","","",null,null],[3,"GMemVTable","","",null,null],[12,"malloc","","",9,null],[12,"realloc","","",9,null],[12,"free","","",9,null],[12,"calloc","","",9,null],[12,"try_malloc","","",9,null],[12,"try_realloc","","",9,null],[3,"GNode","","",null,null],[12,"data","","",10,null],[12,"next","","",10,null],[12,"prev","","",10,null],[12,"parent","","",10,null],[12,"children","","",10,null],[3,"GOnce","","",null,null],[12,"status","","",11,null],[12,"retval","","",11,null],[3,"GOptionContext","","",null,null],[3,"GOptionEntry","","",null,null],[12,"long_name","","",12,null],[12,"short_name","","",12,null],[12,"flags","","",12,null],[12,"arg","","",12,null],[12,"arg_data","","",12,null],[12,"description","","",12,null],[12,"arg_description","","",12,null],[3,"GOptionGroup","","",null,null],[3,"GPatternSpec","","",null,null],[3,"GPollFD","","",null,null],[12,"fd","","",13,null],[12,"events","","",13,null],[12,"revents","","",13,null],[3,"GPrivate","","",null,null],[3,"GPtrArray","","",null,null],[12,"pdata","","",14,null],[12,"len","","",14,null],[3,"GQueue","","",null,null],[12,"head","","",15,null],[12,"tail","","",15,null],[12,"length","","",15,null],[3,"GRWLock","","",null,null],[3,"GRand","","",null,null],[3,"GRecMutex","","",null,null],[3,"GRegex","","",null,null],[3,"GSList","","",null,null],[12,"data","","",16,null],[12,"next","","",16,null],[3,"GScanner","","",null,null],[12,"user_data","","",17,null],[12,"max_parse_errors","","",17,null],[12,"parse_errors","","",17,null],[12,"input_name","","",17,null],[12,"qdata","","",17,null],[12,"config","","",17,null],[12,"token","","",17,null],[3,"GScannerConfig","","",null,null],[12,"cset_skip_characters","","",18,null],[12,"cset_identifier_first","","",18,null],[12,"cset_identifier_nth","","",18,null],[12,"cpair_comment_single","","",18,null],[3,"GSequence","","",null,null],[3,"GSequenceIter","","",null,null],[3,"GSource","","",null,null],[3,"GSourceCallbackFuncs","","",null,null],[12,"ref_","","",19,null],[12,"unref","","",19,null],[12,"get","","",19,null],[3,"GSourceFuncs","","",null,null],[12,"prepare","","",20,null],[12,"check","","",20,null],[12,"dispatch","","",20,null],[12,"finalize","","",20,null],[3,"GSourcePrivate","","",null,null],[3,"GStatBuf","","",null,null],[3,"GString","","",null,null],[12,"str","","",21,null],[12,"len","","",21,null],[12,"allocated_len","","",21,null],[3,"GStringChunk","","",null,null],[3,"GTestCase","","",null,null],[3,"GTestConfig","","",null,null],[12,"test_initialized","","",22,null],[12,"test_quick","","",22,null],[12,"test_perf","","",22,null],[12,"test_verbose","","",22,null],[12,"test_quiet","","",22,null],[12,"test_undefined","","",22,null],[3,"GTestLogBuffer","","",null,null],[3,"GTestLogMsg","","",null,null],[12,"log_type","","",23,null],[12,"n_strings","","",23,null],[12,"strings","","",23,null],[12,"n_nums","","",23,null],[12,"nums","","",23,null],[3,"GTestSuite","","",null,null],[3,"GThread","","",null,null],[3,"GThreadPool","","",null,null],[12,"func","","",24,null],[12,"user_data","","",24,null],[12,"exclusive","","",24,null],[3,"GTimeVal","","",null,null],[12,"tv_sec","","",25,null],[12,"tv_usec","","",25,null],[3,"GTimeZone","","",null,null],[3,"GTimer","","",null,null],[3,"GTrashStack","","",null,null],[12,"next","","",26,null],[3,"GTree","","",null,null],[3,"GVariant","","",null,null],[3,"GVariantBuilder","","",null,null],[3,"GVariantDict","","",null,null],[3,"GVariantIter","","",null,null],[3,"GVariantType","","",null,null],[4,"GBookmarkFileError","","",null,null],[13,"InvalidUri","","",27,null],[13,"InvalidValue","","",27,null],[13,"AppNotRegistered","","",27,null],[13,"UriNotFound","","",27,null],[13,"Read","","",27,null],[13,"UnknownEncoding","","",27,null],[13,"Write","","",27,null],[13,"FileNotFound","","",27,null],[4,"GChecksumType","","",null,null],[13,"Md5","","",28,null],[13,"Sha1","","",28,null],[13,"Sha256","","",28,null],[13,"Sha512","","",28,null],[4,"GConvertError","","",null,null],[13,"NoConversion","","",29,null],[13,"IllegalSequence","","",29,null],[13,"Failed","","",29,null],[13,"PartialInput","","",29,null],[13,"BadUri","","",29,null],[13,"NotAbsolutePath","","",29,null],[13,"NoMemory","","",29,null],[4,"GDateDMY","","",null,null],[13,"Day","","",30,null],[13,"Month","","",30,null],[13,"Year","","",30,null],[4,"GDateMonth","","",null,null],[13,"BadMonth","","",31,null],[13,"January","","",31,null],[13,"February","","",31,null],[13,"March","","",31,null],[13,"April","","",31,null],[13,"May","","",31,null],[13,"June","","",31,null],[13,"July","","",31,null],[13,"August","","",31,null],[13,"September","","",31,null],[13,"October","","",31,null],[13,"November","","",31,null],[13,"December","","",31,null],[4,"GDateWeekday","","",null,null],[13,"BadWeekday","","",32,null],[13,"Monday","","",32,null],[13,"Tuesday","","",32,null],[13,"Wednesday","","",32,null],[13,"Thursday","","",32,null],[13,"Friday","","",32,null],[13,"Saturday","","",32,null],[13,"Sunday","","",32,null],[4,"GErrorType","","",null,null],[13,"Unknown","","",33,null],[13,"UnexpEof","","",33,null],[13,"UnexpEofInString","","",33,null],[13,"UnexpEofInComment","","",33,null],[13,"NonDigitInConst","","",33,null],[13,"DigitRadix","","",33,null],[13,"FloatRadix","","",33,null],[13,"FloatMalformed","","",33,null],[4,"GFileError","","",null,null],[13,"Exist","","",34,null],[13,"Isdir","","",34,null],[13,"Acces","","",34,null],[13,"Nametoolong","","",34,null],[13,"Noent","","",34,null],[13,"Notdir","","",34,null],[13,"Nxio","","",34,null],[13,"Nodev","","",34,null],[13,"Rofs","","",34,null],[13,"Txtbsy","","",34,null],[13,"Fault","","",34,null],[13,"Loop","","",34,null],[13,"Nospc","","",34,null],[13,"Nomem","","",34,null],[13,"Mfile","","",34,null],[13,"Nfile","","",34,null],[13,"Badf","","",34,null],[13,"Inval","","",34,null],[13,"Pipe","","",34,null],[13,"Again","","",34,null],[13,"Intr","","",34,null],[13,"Io","","",34,null],[13,"Perm","","",34,null],[13,"Nosys","","",34,null],[13,"Failed","","",34,null],[4,"GIOChannelError","","",null,null],[13,"Fbig","","",35,null],[13,"Inval","","",35,null],[13,"Io","","",35,null],[13,"Isdir","","",35,null],[13,"Nospc","","",35,null],[13,"Nxio","","",35,null],[13,"Overflow","","",35,null],[13,"Pipe","","",35,null],[13,"Failed","","",35,null],[4,"GIOError","","",null,null],[13,"None","","",36,null],[13,"Again","","",36,null],[13,"Inval","","",36,null],[13,"Unknown","","",36,null],[4,"GIOStatus","","",null,null],[13,"Error","","",37,null],[13,"Normal","","",37,null],[13,"Eof","","",37,null],[13,"Again","","",37,null],[4,"GKeyFileError","","",null,null],[13,"UnknownEncoding","","",38,null],[13,"Parse","","",38,null],[13,"NotFound","","",38,null],[13,"KeyNotFound","","",38,null],[13,"GroupNotFound","","",38,null],[13,"InvalidValue","","",38,null],[4,"GMarkupError","","",null,null],[13,"BadUtf8","","",39,null],[13,"Empty","","",39,null],[13,"Parse","","",39,null],[13,"UnknownElement","","",39,null],[13,"UnknownAttribute","","",39,null],[13,"InvalidContent","","",39,null],[13,"MissingAttribute","","",39,null],[4,"GNormalizeMode","","",null,null],[13,"Default","","",40,null],[13,"DefaultCompose","","",40,null],[13,"All","","",40,null],[13,"AllCompose","","",40,null],[4,"GOnceStatus","","",null,null],[13,"Notcalled","","",41,null],[13,"Progress","","",41,null],[13,"Ready","","",41,null],[4,"GOptionArg","","",null,null],[13,"None","","",42,null],[13,"String","","",42,null],[13,"Int","","",42,null],[13,"Callback","","",42,null],[13,"Filename","","",42,null],[13,"StringArray","","",42,null],[13,"FilenameArray","","",42,null],[13,"Double","","",42,null],[13,"Int64","","",42,null],[4,"GOptionError","","",null,null],[13,"UnknownOption","","",43,null],[13,"BadValue","","",43,null],[13,"Failed","","",43,null],[4,"GRegexError","","",null,null],[13,"Compile","","",44,null],[13,"Optimize","","",44,null],[13,"Replace","","",44,null],[13,"Match","","",44,null],[13,"Internal","","",44,null],[13,"StrayBackslash","","",44,null],[13,"MissingControlChar","","",44,null],[13,"UnrecognizedEscape","","",44,null],[13,"QuantifiersOutOfOrder","","",44,null],[13,"QuantifierTooBig","","",44,null],[13,"UnterminatedCharacterClass","","",44,null],[13,"InvalidEscapeInCharacterClass","","",44,null],[13,"RangeOutOfOrder","","",44,null],[13,"NothingToRepeat","","",44,null],[13,"UnrecognizedCharacter","","",44,null],[13,"PosixNamedClassOutsideClass","","",44,null],[13,"UnmatchedParenthesis","","",44,null],[13,"InexistentSubpatternReference","","",44,null],[13,"UnterminatedComment","","",44,null],[13,"ExpressionTooLarge","","",44,null],[13,"MemoryError","","",44,null],[13,"VariableLengthLookbehind","","",44,null],[13,"MalformedCondition","","",44,null],[13,"TooManyConditionalBranches","","",44,null],[13,"AssertionExpected","","",44,null],[13,"UnknownPosixClassName","","",44,null],[13,"PosixCollatingElementsNotSupported","","",44,null],[13,"HexCodeTooLarge","","",44,null],[13,"InvalidCondition","","",44,null],[13,"SingleByteMatchInLookbehind","","",44,null],[13,"InfiniteLoop","","",44,null],[13,"MissingSubpatternNameTerminator","","",44,null],[13,"DuplicateSubpatternName","","",44,null],[13,"MalformedProperty","","",44,null],[13,"UnknownProperty","","",44,null],[13,"SubpatternNameTooLong","","",44,null],[13,"TooManySubpatterns","","",44,null],[13,"InvalidOctalValue","","",44,null],[13,"TooManyBranchesInDefine","","",44,null],[13,"DefineRepetion","","",44,null],[13,"InconsistentNewlineOptions","","",44,null],[13,"MissingBackReference","","",44,null],[13,"InvalidRelativeReference","","",44,null],[13,"BacktrackingControlVerbArgumentForbidden","","",44,null],[13,"UnknownBacktrackingControlVerb","","",44,null],[13,"NumberTooBig","","",44,null],[13,"MissingSubpatternName","","",44,null],[13,"MissingDigit","","",44,null],[13,"InvalidDataCharacter","","",44,null],[13,"ExtraSubpatternName","","",44,null],[13,"BacktrackingControlVerbArgumentRequired","","",44,null],[13,"InvalidControlChar","","",44,null],[13,"MissingName","","",44,null],[13,"NotSupportedInClass","","",44,null],[13,"TooManyForwardReferences","","",44,null],[13,"NameTooLong","","",44,null],[13,"CharacterValueTooLarge","","",44,null],[4,"GSeekType","","",null,null],[13,"Cur","","",45,null],[13,"Set","","",45,null],[13,"End","","",45,null],[4,"GShellError","","",null,null],[13,"BadQuoting","","",46,null],[13,"EmptyString","","",46,null],[13,"Failed","","",46,null],[4,"GSliceConfig","","",null,null],[13,"AlwaysMalloc","","",47,null],[13,"BypassMagazines","","",47,null],[13,"WorkingSetMsecs","","",47,null],[13,"ColorIncrement","","",47,null],[13,"ChunkSizes","","",47,null],[13,"ContentionCounter","","",47,null],[4,"GSpawnError","","",null,null],[13,"Fork","","",48,null],[13,"Read","","",48,null],[13,"Chdir","","",48,null],[13,"Acces","","",48,null],[13,"Perm","","",48,null],[13,"TooBig","","",48,null],[13,"Noexec","","",48,null],[13,"Nametoolong","","",48,null],[13,"Noent","","",48,null],[13,"Nomem","","",48,null],[13,"Notdir","","",48,null],[13,"Loop","","",48,null],[13,"Txtbusy","","",48,null],[13,"Io","","",48,null],[13,"Nfile","","",48,null],[13,"Mfile","","",48,null],[13,"Inval","","",48,null],[13,"Isdir","","",48,null],[13,"Libbad","","",48,null],[13,"Failed","","",48,null],[4,"GTestFileType","","",null,null],[13,"Dist","","",49,null],[13,"Built","","",49,null],[4,"GTestLogType","","",null,null],[13,"None","","",50,null],[13,"Error","","",50,null],[13,"StartBinary","","",50,null],[13,"ListCase","","",50,null],[13,"SkipCase","","",50,null],[13,"StartCase","","",50,null],[13,"StopCase","","",50,null],[13,"MinResult","","",50,null],[13,"MaxResult","","",50,null],[13,"Message","","",50,null],[13,"StartSuite","","",50,null],[13,"StopSuite","","",50,null],[4,"GTimeType","","",null,null],[13,"Standard","","",51,null],[13,"Daylight","","",51,null],[13,"Universal","","",51,null],[4,"GTokenType","","",null,null],[13,"Eof","","",52,null],[13,"LeftParen","","",52,null],[13,"RightParen","","",52,null],[13,"LeftCurly","","",52,null],[13,"RightCurly","","",52,null],[13,"LeftBrace","","",52,null],[13,"RightBrace","","",52,null],[13,"EqualSign","","",52,null],[13,"Comma","","",52,null],[13,"None","","",52,null],[13,"Error","","",52,null],[13,"Char","","",52,null],[13,"Binary","","",52,null],[13,"Octal","","",52,null],[13,"Int","","",52,null],[13,"Hex","","",52,null],[13,"Float","","",52,null],[13,"String","","",52,null],[13,"Symbol","","",52,null],[13,"Identifier","","",52,null],[13,"IdentifierNull","","",52,null],[13,"CommentSingle","","",52,null],[13,"CommentMulti","","",52,null],[4,"GTraverseType","","",null,null],[13,"InOrder","","",53,null],[13,"PreOrder","","",53,null],[13,"PostOrder","","",53,null],[13,"LevelOrder","","",53,null],[4,"GUnicodeBreakType","","",null,null],[13,"Mandatory","","",54,null],[13,"CarriageReturn","","",54,null],[13,"LineFeed","","",54,null],[13,"CombiningMark","","",54,null],[13,"Surrogate","","",54,null],[13,"ZeroWidthSpace","","",54,null],[13,"Inseparable","","",54,null],[13,"NonBreakingGlue","","",54,null],[13,"Contingent","","",54,null],[13,"Space","","",54,null],[13,"After","","",54,null],[13,"Before","","",54,null],[13,"BeforeAndAfter","","",54,null],[13,"Hyphen","","",54,null],[13,"NonStarter","","",54,null],[13,"OpenPunctuation","","",54,null],[13,"ClosePunctuation","","",54,null],[13,"Quotation","","",54,null],[13,"Exclamation","","",54,null],[13,"Ideographic","","",54,null],[13,"Numeric","","",54,null],[13,"InfixSeparator","","",54,null],[13,"Symbol","","",54,null],[13,"Alphabetic","","",54,null],[13,"Prefix","","",54,null],[13,"Postfix","","",54,null],[13,"ComplexContext","","",54,null],[13,"Ambiguous","","",54,null],[13,"Unknown","","",54,null],[13,"NextLine","","",54,null],[13,"WordJoiner","","",54,null],[13,"HangulLJamo","","",54,null],[13,"HangulVJamo","","",54,null],[13,"HangulTJamo","","",54,null],[13,"HangulLvSyllable","","",54,null],[13,"HangulLvtSyllable","","",54,null],[13,"CloseParanthesis","","",54,null],[13,"ConditionalJapaneseStarter","","",54,null],[13,"HebrewLetter","","",54,null],[13,"RegionalIndicator","","",54,null],[4,"GUnicodeScript","","",null,null],[13,"InvalidCode","","",55,null],[13,"Common","","",55,null],[13,"Inherited","","",55,null],[13,"Arabic","","",55,null],[13,"Armenian","","",55,null],[13,"Bengali","","",55,null],[13,"Bopomofo","","",55,null],[13,"Cherokee","","",55,null],[13,"Coptic","","",55,null],[13,"Cyrillic","","",55,null],[13,"Deseret","","",55,null],[13,"Devanagari","","",55,null],[13,"Ethiopic","","",55,null],[13,"Georgian","","",55,null],[13,"Gothic","","",55,null],[13,"Greek","","",55,null],[13,"Gujarati","","",55,null],[13,"Gurmukhi","","",55,null],[13,"Han","","",55,null],[13,"Hangul","","",55,null],[13,"Hebrew","","",55,null],[13,"Hiragana","","",55,null],[13,"Kannada","","",55,null],[13,"Katakana","","",55,null],[13,"Khmer","","",55,null],[13,"Lao","","",55,null],[13,"Latin","","",55,null],[13,"Malayalam","","",55,null],[13,"Mongolian","","",55,null],[13,"Myanmar","","",55,null],[13,"Ogham","","",55,null],[13,"OldItalic","","",55,null],[13,"Oriya","","",55,null],[13,"Runic","","",55,null],[13,"Sinhala","","",55,null],[13,"Syriac","","",55,null],[13,"Tamil","","",55,null],[13,"Telugu","","",55,null],[13,"Thaana","","",55,null],[13,"Thai","","",55,null],[13,"Tibetan","","",55,null],[13,"CanadianAboriginal","","",55,null],[13,"Yi","","",55,null],[13,"Tagalog","","",55,null],[13,"Hanunoo","","",55,null],[13,"Buhid","","",55,null],[13,"Tagbanwa","","",55,null],[13,"Braille","","",55,null],[13,"Cypriot","","",55,null],[13,"Limbu","","",55,null],[13,"Osmanya","","",55,null],[13,"Shavian","","",55,null],[13,"LinearB","","",55,null],[13,"TaiLe","","",55,null],[13,"Ugaritic","","",55,null],[13,"NewTaiLue","","",55,null],[13,"Buginese","","",55,null],[13,"Glagolitic","","",55,null],[13,"Tifinagh","","",55,null],[13,"SylotiNagri","","",55,null],[13,"OldPersian","","",55,null],[13,"Kharoshthi","","",55,null],[13,"Unknown","","",55,null],[13,"Balinese","","",55,null],[13,"Cuneiform","","",55,null],[13,"Phoenician","","",55,null],[13,"PhagsPa","","",55,null],[13,"Nko","","",55,null],[13,"KayahLi","","",55,null],[13,"Lepcha","","",55,null],[13,"Rejang","","",55,null],[13,"Sundanese","","",55,null],[13,"Saurashtra","","",55,null],[13,"Cham","","",55,null],[13,"OlChiki","","",55,null],[13,"Vai","","",55,null],[13,"Carian","","",55,null],[13,"Lycian","","",55,null],[13,"Lydian","","",55,null],[13,"Avestan","","",55,null],[13,"Bamum","","",55,null],[13,"EgyptianHieroglyphs","","",55,null],[13,"ImperialAramaic","","",55,null],[13,"InscriptionalPahlavi","","",55,null],[13,"InscriptionalParthian","","",55,null],[13,"Javanese","","",55,null],[13,"Kaithi","","",55,null],[13,"Lisu","","",55,null],[13,"MeeteiMayek","","",55,null],[13,"OldSouthArabian","","",55,null],[13,"OldTurkic","","",55,null],[13,"Samaritan","","",55,null],[13,"TaiTham","","",55,null],[13,"TaiViet","","",55,null],[13,"Batak","","",55,null],[13,"Brahmi","","",55,null],[13,"Mandaic","","",55,null],[13,"Chakma","","",55,null],[13,"MeroiticCursive","","",55,null],[13,"MeroiticHieroglyphs","","",55,null],[13,"Miao","","",55,null],[13,"Sharada","","",55,null],[13,"SoraSompeng","","",55,null],[13,"Takri","","",55,null],[13,"BassaVah","","",55,null],[13,"CaucasianAlbanian","","",55,null],[13,"Duployan","","",55,null],[13,"Elbasan","","",55,null],[13,"Grantha","","",55,null],[13,"Khojki","","",55,null],[13,"Khudawadi","","",55,null],[13,"LinearA","","",55,null],[13,"Mahajani","","",55,null],[13,"Manichaean","","",55,null],[13,"MendeKikakui","","",55,null],[13,"Modi","","",55,null],[13,"Mro","","",55,null],[13,"Nabataean","","",55,null],[13,"OldNorthArabian","","",55,null],[13,"OldPermic","","",55,null],[13,"PahawhHmong","","",55,null],[13,"Palmyrene","","",55,null],[13,"PauCinHau","","",55,null],[13,"PsalterPahlavi","","",55,null],[13,"Siddham","","",55,null],[13,"Tirhuta","","",55,null],[13,"WarangCiti","","",55,null],[4,"GUnicodeType","","",null,null],[13,"Control","","",56,null],[13,"Format","","",56,null],[13,"Unassigned","","",56,null],[13,"PrivateUse","","",56,null],[13,"Surrogate","","",56,null],[13,"LowercaseLetter","","",56,null],[13,"ModifierLetter","","",56,null],[13,"OtherLetter","","",56,null],[13,"TitlecaseLetter","","",56,null],[13,"UppercaseLetter","","",56,null],[13,"SpacingMark","","",56,null],[13,"EnclosingMark","","",56,null],[13,"NonSpacingMark","","",56,null],[13,"DecimalNumber","","",56,null],[13,"LetterNumber","","",56,null],[13,"OtherNumber","","",56,null],[13,"ConnectPunctuation","","",56,null],[13,"DashPunctuation","","",56,null],[13,"ClosePunctuation","","",56,null],[13,"FinalPunctuation","","",56,null],[13,"InitialPunctuation","","",56,null],[13,"OtherPunctuation","","",56,null],[13,"OpenPunctuation","","",56,null],[13,"CurrencySymbol","","",56,null],[13,"ModifierSymbol","","",56,null],[13,"MathSymbol","","",56,null],[13,"OtherSymbol","","",56,null],[13,"LineSeparator","","",56,null],[13,"ParagraphSeparator","","",56,null],[13,"SpaceSeparator","","",56,null],[4,"GUserDirectory","","",null,null],[13,"DirectoryDesktop","","",57,null],[13,"DirectoryDocuments","","",57,null],[13,"DirectoryDownload","","",57,null],[13,"DirectoryMusic","","",57,null],[13,"DirectoryPictures","","",57,null],[13,"DirectoryPublicShare","","",57,null],[13,"DirectoryTemplates","","",57,null],[13,"DirectoryVideos","","",57,null],[13,"NDirectories","","",57,null],[4,"GVariantClass","","",null,null],[13,"Boolean","","",58,null],[13,"Byte","","",58,null],[13,"Int16","","",58,null],[13,"Uint16","","",58,null],[13,"Int32","","",58,null],[13,"Uint32","","",58,null],[13,"Int64","","",58,null],[13,"Uint64","","",58,null],[13,"Handle","","",58,null],[13,"Double","","",58,null],[13,"String","","",58,null],[13,"ObjectPath","","",58,null],[13,"Signature","","",58,null],[13,"Variant","","",58,null],[13,"Maybe","","",58,null],[13,"Array","","",58,null],[13,"Tuple","","",58,null],[13,"DictEntry","","",58,null],[4,"GVariantParseError","","",null,null],[13,"Failed","","",59,null],[13,"BasicTypeExpected","","",59,null],[13,"CannotInferType","","",59,null],[13,"DefiniteTypeExpected","","",59,null],[13,"InputNotAtEnd","","",59,null],[13,"InvalidCharacter","","",59,null],[13,"InvalidFormatString","","",59,null],[13,"InvalidObjectPath","","",59,null],[13,"InvalidSignature","","",59,null],[13,"InvalidTypeString","","",59,null],[13,"NoCommonType","","",59,null],[13,"NumberOutOfRange","","",59,null],[13,"NumberTooBig","","",59,null],[13,"TypeError","","",59,null],[13,"UnexpectedToken","","",59,null],[13,"UnknownKeyword","","",59,null],[13,"UnterminatedStringConstant","","",59,null],[13,"ValueExpected","","",59,null],[5,"g_mutex_clear","","",null,null],[5,"g_mutex_init","","",null,null],[5,"g_mutex_lock","","",null,null],[5,"g_mutex_trylock","","",null,null],[5,"g_mutex_unlock","","",null,null],[5,"g_array_get_type","","",null,null],[5,"g_array_append_vals","","",null,null],[5,"g_array_free","","",null,null],[5,"g_array_get_element_size","","",null,null],[5,"g_array_insert_vals","","",null,null],[5,"g_array_new","","",null,null],[5,"g_array_prepend_vals","","",null,null],[5,"g_array_ref","","",null,null],[5,"g_array_remove_index","","",null,null],[5,"g_array_remove_index_fast","","",null,null],[5,"g_array_remove_range","","",null,null],[5,"g_array_set_clear_func","","",null,null],[5,"g_array_set_size","","",null,null],[5,"g_array_sized_new","","",null,null],[5,"g_array_sort","","",null,null],[5,"g_array_sort_with_data","","",null,null],[5,"g_array_unref","","",null,null],[5,"g_async_queue_length","","",null,null],[5,"g_async_queue_length_unlocked","","",null,null],[5,"g_async_queue_lock","","",null,null],[5,"g_async_queue_pop","","",null,null],[5,"g_async_queue_pop_unlocked","","",null,null],[5,"g_async_queue_push","","",null,null],[5,"g_async_queue_push_sorted","","",null,null],[5,"g_async_queue_push_sorted_unlocked","","",null,null],[5,"g_async_queue_push_unlocked","","",null,null],[5,"g_async_queue_ref","","",null,null],[5,"g_async_queue_ref_unlocked","","",null,null],[5,"g_async_queue_sort","","",null,null],[5,"g_async_queue_sort_unlocked","","",null,null],[5,"g_async_queue_timed_pop","","",null,null],[5,"g_async_queue_timed_pop_unlocked","","",null,null],[5,"g_async_queue_timeout_pop","","",null,null],[5,"g_async_queue_timeout_pop_unlocked","","",null,null],[5,"g_async_queue_try_pop","","",null,null],[5,"g_async_queue_try_pop_unlocked","","",null,null],[5,"g_async_queue_unlock","","",null,null],[5,"g_async_queue_unref","","",null,null],[5,"g_async_queue_unref_and_unlock","","",null,null],[5,"g_async_queue_new","","",null,null],[5,"g_async_queue_new_full","","",null,null],[5,"g_bookmark_file_add_application","","",null,null],[5,"g_bookmark_file_add_group","","",null,null],[5,"g_bookmark_file_free","","",null,null],[5,"g_bookmark_file_get_added","","",null,null],[5,"g_bookmark_file_get_app_info","","",null,null],[5,"g_bookmark_file_get_applications","","",null,null],[5,"g_bookmark_file_get_description","","",null,null],[5,"g_bookmark_file_get_groups","","",null,null],[5,"g_bookmark_file_get_icon","","",null,null],[5,"g_bookmark_file_get_is_private","","",null,null],[5,"g_bookmark_file_get_mime_type","","",null,null],[5,"g_bookmark_file_get_modified","","",null,null],[5,"g_bookmark_file_get_size","","",null,null],[5,"g_bookmark_file_get_title","","",null,null],[5,"g_bookmark_file_get_uris","","",null,null],[5,"g_bookmark_file_get_visited","","",null,null],[5,"g_bookmark_file_has_application","","",null,null],[5,"g_bookmark_file_has_group","","",null,null],[5,"g_bookmark_file_has_item","","",null,null],[5,"g_bookmark_file_load_from_data","","",null,null],[5,"g_bookmark_file_load_from_data_dirs","","",null,null],[5,"g_bookmark_file_load_from_file","","",null,null],[5,"g_bookmark_file_move_item","","",null,null],[5,"g_bookmark_file_remove_application","","",null,null],[5,"g_bookmark_file_remove_group","","",null,null],[5,"g_bookmark_file_remove_item","","",null,null],[5,"g_bookmark_file_set_added","","",null,null],[5,"g_bookmark_file_set_app_info","","",null,null],[5,"g_bookmark_file_set_description","","",null,null],[5,"g_bookmark_file_set_groups","","",null,null],[5,"g_bookmark_file_set_icon","","",null,null],[5,"g_bookmark_file_set_is_private","","",null,null],[5,"g_bookmark_file_set_mime_type","","",null,null],[5,"g_bookmark_file_set_modified","","",null,null],[5,"g_bookmark_file_set_title","","",null,null],[5,"g_bookmark_file_set_visited","","",null,null],[5,"g_bookmark_file_to_data","","",null,null],[5,"g_bookmark_file_to_file","","",null,null],[5,"g_bookmark_file_error_quark","","",null,null],[5,"g_bookmark_file_new","","",null,null],[5,"g_byte_array_get_type","","",null,null],[5,"g_byte_array_append","","",null,null],[5,"g_byte_array_free","","",null,null],[5,"g_byte_array_free_to_bytes","","",null,null],[5,"g_byte_array_new","","",null,null],[5,"g_byte_array_new_take","","",null,null],[5,"g_byte_array_prepend","","",null,null],[5,"g_byte_array_ref","","",null,null],[5,"g_byte_array_remove_index","","",null,null],[5,"g_byte_array_remove_index_fast","","",null,null],[5,"g_byte_array_remove_range","","",null,null],[5,"g_byte_array_set_size","","",null,null],[5,"g_byte_array_sized_new","","",null,null],[5,"g_byte_array_sort","","",null,null],[5,"g_byte_array_sort_with_data","","",null,null],[5,"g_byte_array_unref","","",null,null],[5,"g_bytes_get_type","","",null,null],[5,"g_bytes_new","","",null,null],[5,"g_bytes_new_static","","",null,null],[5,"g_bytes_new_take","","",null,null],[5,"g_bytes_new_with_free_func","","",null,null],[5,"g_bytes_compare","","",null,null],[5,"g_bytes_equal","","",null,null],[5,"g_bytes_get_data","","",null,null],[5,"g_bytes_get_size","","",null,null],[5,"g_bytes_hash","","",null,null],[5,"g_bytes_new_from_bytes","","",null,null],[5,"g_bytes_ref","","",null,null],[5,"g_bytes_unref","","",null,null],[5,"g_bytes_unref_to_array","","",null,null],[5,"g_bytes_unref_to_data","","",null,null],[5,"g_checksum_get_type","","",null,null],[5,"g_checksum_new","","",null,null],[5,"g_checksum_copy","","",null,null],[5,"g_checksum_free","","",null,null],[5,"g_checksum_get_digest","","",null,null],[5,"g_checksum_get_string","","",null,null],[5,"g_checksum_reset","","",null,null],[5,"g_checksum_update","","",null,null],[5,"g_checksum_type_get_length","","",null,null],[5,"g_cond_broadcast","","",null,null],[5,"g_cond_clear","","",null,null],[5,"g_cond_init","","",null,null],[5,"g_cond_signal","","",null,null],[5,"g_cond_wait","","",null,null],[5,"g_cond_wait_until","","",null,null],[5,"g_date_get_type","","",null,null],[5,"g_date_new","","",null,null],[5,"g_date_new_dmy","","",null,null],[5,"g_date_new_julian","","",null,null],[5,"g_date_add_days","","",null,null],[5,"g_date_add_months","","",null,null],[5,"g_date_add_years","","",null,null],[5,"g_date_clamp","","",null,null],[5,"g_date_clear","","",null,null],[5,"g_date_compare","","",null,null],[5,"g_date_days_between","","",null,null],[5,"g_date_free","","",null,null],[5,"g_date_get_day","","",null,null],[5,"g_date_get_day_of_year","","",null,null],[5,"g_date_get_iso8601_week_of_year","","",null,null],[5,"g_date_get_julian","","",null,null],[5,"g_date_get_monday_week_of_year","","",null,null],[5,"g_date_get_month","","",null,null],[5,"g_date_get_sunday_week_of_year","","",null,null],[5,"g_date_get_weekday","","",null,null],[5,"g_date_get_year","","",null,null],[5,"g_date_is_first_of_month","","",null,null],[5,"g_date_is_last_of_month","","",null,null],[5,"g_date_order","","",null,null],[5,"g_date_set_day","","",null,null],[5,"g_date_set_dmy","","",null,null],[5,"g_date_set_julian","","",null,null],[5,"g_date_set_month","","",null,null],[5,"g_date_set_parse","","",null,null],[5,"g_date_set_time","","",null,null],[5,"g_date_set_time_t","","",null,null],[5,"g_date_set_time_val","","",null,null],[5,"g_date_set_year","","",null,null],[5,"g_date_subtract_days","","",null,null],[5,"g_date_subtract_months","","",null,null],[5,"g_date_subtract_years","","",null,null],[5,"g_date_valid","","",null,null],[5,"g_date_get_days_in_month","","",null,null],[5,"g_date_get_monday_weeks_in_year","","",null,null],[5,"g_date_get_sunday_weeks_in_year","","",null,null],[5,"g_date_is_leap_year","","",null,null],[5,"g_date_strftime","","",null,null],[5,"g_date_valid_day","","",null,null],[5,"g_date_valid_dmy","","",null,null],[5,"g_date_valid_julian","","",null,null],[5,"g_date_valid_month","","",null,null],[5,"g_date_valid_weekday","","",null,null],[5,"g_date_valid_year","","",null,null],[5,"g_date_time_get_type","","",null,null],[5,"g_date_time_new","","",null,null],[5,"g_date_time_new_from_timeval_local","","",null,null],[5,"g_date_time_new_from_timeval_utc","","",null,null],[5,"g_date_time_new_from_unix_local","","",null,null],[5,"g_date_time_new_from_unix_utc","","",null,null],[5,"g_date_time_new_local","","",null,null],[5,"g_date_time_new_now","","",null,null],[5,"g_date_time_new_now_local","","",null,null],[5,"g_date_time_new_now_utc","","",null,null],[5,"g_date_time_new_utc","","",null,null],[5,"g_date_time_add","","",null,null],[5,"g_date_time_add_days","","",null,null],[5,"g_date_time_add_full","","",null,null],[5,"g_date_time_add_hours","","",null,null],[5,"g_date_time_add_minutes","","",null,null],[5,"g_date_time_add_months","","",null,null],[5,"g_date_time_add_seconds","","",null,null],[5,"g_date_time_add_weeks","","",null,null],[5,"g_date_time_add_years","","",null,null],[5,"g_date_time_difference","","",null,null],[5,"g_date_time_format","","",null,null],[5,"g_date_time_get_day_of_month","","",null,null],[5,"g_date_time_get_day_of_week","","",null,null],[5,"g_date_time_get_day_of_year","","",null,null],[5,"g_date_time_get_hour","","",null,null],[5,"g_date_time_get_microsecond","","",null,null],[5,"g_date_time_get_minute","","",null,null],[5,"g_date_time_get_month","","",null,null],[5,"g_date_time_get_second","","",null,null],[5,"g_date_time_get_seconds","","",null,null],[5,"g_date_time_get_timezone_abbreviation","","",null,null],[5,"g_date_time_get_utc_offset","","",null,null],[5,"g_date_time_get_week_numbering_year","","",null,null],[5,"g_date_time_get_week_of_year","","",null,null],[5,"g_date_time_get_year","","",null,null],[5,"g_date_time_get_ymd","","",null,null],[5,"g_date_time_is_daylight_savings","","",null,null],[5,"g_date_time_ref","","",null,null],[5,"g_date_time_to_local","","",null,null],[5,"g_date_time_to_timeval","","",null,null],[5,"g_date_time_to_timezone","","",null,null],[5,"g_date_time_to_unix","","",null,null],[5,"g_date_time_to_utc","","",null,null],[5,"g_date_time_unref","","",null,null],[5,"g_date_time_compare","","",null,null],[5,"g_date_time_equal","","",null,null],[5,"g_date_time_hash","","",null,null],[5,"g_dir_close","","",null,null],[5,"g_dir_read_name","","",null,null],[5,"g_dir_rewind","","",null,null],[5,"g_dir_make_tmp","","",null,null],[5,"g_dir_open","","",null,null],[5,"g_error_get_type","","",null,null],[5,"g_error_new","","",null,null],[5,"g_error_new_literal","","",null,null],[5,"g_error_copy","","",null,null],[5,"g_error_free","","",null,null],[5,"g_error_matches","","",null,null],[5,"g_hash_table_get_type","","",null,null],[5,"g_hash_table_add","","",null,null],[5,"g_hash_table_contains","","",null,null],[5,"g_hash_table_destroy","","",null,null],[5,"g_hash_table_find","","",null,null],[5,"g_hash_table_foreach","","",null,null],[5,"g_hash_table_foreach_remove","","",null,null],[5,"g_hash_table_foreach_steal","","",null,null],[5,"g_hash_table_get_keys","","",null,null],[5,"g_hash_table_get_values","","",null,null],[5,"g_hash_table_insert","","",null,null],[5,"g_hash_table_lookup","","",null,null],[5,"g_hash_table_lookup_extended","","",null,null],[5,"g_hash_table_new","","",null,null],[5,"g_hash_table_new_full","","",null,null],[5,"g_hash_table_ref","","",null,null],[5,"g_hash_table_remove","","",null,null],[5,"g_hash_table_remove_all","","",null,null],[5,"g_hash_table_replace","","",null,null],[5,"g_hash_table_size","","",null,null],[5,"g_hash_table_steal","","",null,null],[5,"g_hash_table_steal_all","","",null,null],[5,"g_hash_table_unref","","",null,null],[5,"g_hash_table_iter_get_hash_table","","",null,null],[5,"g_hash_table_iter_init","","",null,null],[5,"g_hash_table_iter_next","","",null,null],[5,"g_hash_table_iter_remove","","",null,null],[5,"g_hash_table_iter_replace","","",null,null],[5,"g_hash_table_iter_steal","","",null,null],[5,"g_hmac_copy","","",null,null],[5,"g_hmac_get_digest","","",null,null],[5,"g_hmac_get_string","","",null,null],[5,"g_hmac_ref","","",null,null],[5,"g_hmac_unref","","",null,null],[5,"g_hmac_update","","",null,null],[5,"g_hmac_new","","",null,null],[5,"g_hook_compare_ids","","",null,null],[5,"g_hook_alloc","","",null,null],[5,"g_hook_destroy","","",null,null],[5,"g_hook_destroy_link","","",null,null],[5,"g_hook_find","","",null,null],[5,"g_hook_find_data","","",null,null],[5,"g_hook_find_func","","",null,null],[5,"g_hook_find_func_data","","",null,null],[5,"g_hook_first_valid","","",null,null],[5,"g_hook_free","","",null,null],[5,"g_hook_get","","",null,null],[5,"g_hook_insert_before","","",null,null],[5,"g_hook_insert_sorted","","",null,null],[5,"g_hook_next_valid","","",null,null],[5,"g_hook_prepend","","",null,null],[5,"g_hook_ref","","",null,null],[5,"g_hook_unref","","",null,null],[5,"g_hook_list_clear","","",null,null],[5,"g_hook_list_init","","",null,null],[5,"g_hook_list_invoke","","",null,null],[5,"g_hook_list_invoke_check","","",null,null],[5,"g_hook_list_marshal","","",null,null],[5,"g_hook_list_marshal_check","","",null,null],[5,"g_iconv_close","","",null,null],[5,"g_iconv_open","","",null,null],[5,"g_io_channel_get_type","","",null,null],[5,"g_io_channel_new_file","","",null,null],[5,"g_io_channel_unix_new","","",null,null],[5,"g_io_channel_close","","",null,null],[5,"g_io_channel_flush","","",null,null],[5,"g_io_channel_get_buffer_condition","","",null,null],[5,"g_io_channel_get_buffer_size","","",null,null],[5,"g_io_channel_get_buffered","","",null,null],[5,"g_io_channel_get_close_on_unref","","",null,null],[5,"g_io_channel_get_encoding","","",null,null],[5,"g_io_channel_get_flags","","",null,null],[5,"g_io_channel_get_line_term","","",null,null],[5,"g_io_channel_init","","",null,null],[5,"g_io_channel_read","","",null,null],[5,"g_io_channel_read_chars","","",null,null],[5,"g_io_channel_read_line","","",null,null],[5,"g_io_channel_read_line_string","","",null,null],[5,"g_io_channel_read_to_end","","",null,null],[5,"g_io_channel_read_unichar","","",null,null],[5,"g_io_channel_ref","","",null,null],[5,"g_io_channel_seek","","",null,null],[5,"g_io_channel_seek_position","","",null,null],[5,"g_io_channel_set_buffer_size","","",null,null],[5,"g_io_channel_set_buffered","","",null,null],[5,"g_io_channel_set_close_on_unref","","",null,null],[5,"g_io_channel_set_encoding","","",null,null],[5,"g_io_channel_set_flags","","",null,null],[5,"g_io_channel_set_line_term","","",null,null],[5,"g_io_channel_shutdown","","",null,null],[5,"g_io_channel_unix_get_fd","","",null,null],[5,"g_io_channel_unref","","",null,null],[5,"g_io_channel_write","","",null,null],[5,"g_io_channel_write_chars","","",null,null],[5,"g_io_channel_write_unichar","","",null,null],[5,"g_io_channel_error_from_errno","","",null,null],[5,"g_io_channel_error_quark","","",null,null],[5,"g_key_file_get_type","","",null,null],[5,"g_key_file_new","","",null,null],[5,"g_key_file_free","","",null,null],[5,"g_key_file_get_boolean","","",null,null],[5,"g_key_file_get_boolean_list","","",null,null],[5,"g_key_file_get_comment","","",null,null],[5,"g_key_file_get_double","","",null,null],[5,"g_key_file_get_double_list","","",null,null],[5,"g_key_file_get_groups","","",null,null],[5,"g_key_file_get_int64","","",null,null],[5,"g_key_file_get_integer","","",null,null],[5,"g_key_file_get_integer_list","","",null,null],[5,"g_key_file_get_keys","","",null,null],[5,"g_key_file_get_locale_string","","",null,null],[5,"g_key_file_get_locale_string_list","","",null,null],[5,"g_key_file_get_start_group","","",null,null],[5,"g_key_file_get_string","","",null,null],[5,"g_key_file_get_string_list","","",null,null],[5,"g_key_file_get_uint64","","",null,null],[5,"g_key_file_get_value","","",null,null],[5,"g_key_file_has_group","","",null,null],[5,"g_key_file_has_key","","",null,null],[5,"g_key_file_load_from_data","","",null,null],[5,"g_key_file_load_from_data_dirs","","",null,null],[5,"g_key_file_load_from_dirs","","",null,null],[5,"g_key_file_load_from_file","","",null,null],[5,"g_key_file_ref","","",null,null],[5,"g_key_file_remove_comment","","",null,null],[5,"g_key_file_remove_group","","",null,null],[5,"g_key_file_remove_key","","",null,null],[5,"g_key_file_set_boolean","","",null,null],[5,"g_key_file_set_boolean_list","","",null,null],[5,"g_key_file_set_comment","","",null,null],[5,"g_key_file_set_double","","",null,null],[5,"g_key_file_set_double_list","","",null,null],[5,"g_key_file_set_int64","","",null,null],[5,"g_key_file_set_integer","","",null,null],[5,"g_key_file_set_integer_list","","",null,null],[5,"g_key_file_set_list_separator","","",null,null],[5,"g_key_file_set_locale_string","","",null,null],[5,"g_key_file_set_locale_string_list","","",null,null],[5,"g_key_file_set_string","","",null,null],[5,"g_key_file_set_string_list","","",null,null],[5,"g_key_file_set_uint64","","",null,null],[5,"g_key_file_set_value","","",null,null],[5,"g_key_file_to_data","","",null,null],[5,"g_key_file_unref","","",null,null],[5,"g_key_file_error_quark","","",null,null],[5,"g_list_alloc","","",null,null],[5,"g_list_append","","",null,null],[5,"g_list_concat","","",null,null],[5,"g_list_copy","","",null,null],[5,"g_list_delete_link","","",null,null],[5,"g_list_find","","",null,null],[5,"g_list_find_custom","","",null,null],[5,"g_list_first","","",null,null],[5,"g_list_foreach","","",null,null],[5,"g_list_free","","",null,null],[5,"g_list_free_1","","",null,null],[5,"g_list_free_full","","",null,null],[5,"g_list_index","","",null,null],[5,"g_list_insert","","",null,null],[5,"g_list_insert_before","","",null,null],[5,"g_list_insert_sorted","","",null,null],[5,"g_list_insert_sorted_with_data","","",null,null],[5,"g_list_last","","",null,null],[5,"g_list_length","","",null,null],[5,"g_list_nth","","",null,null],[5,"g_list_nth_data","","",null,null],[5,"g_list_nth_prev","","",null,null],[5,"g_list_position","","",null,null],[5,"g_list_prepend","","",null,null],[5,"g_list_remove","","",null,null],[5,"g_list_remove_all","","",null,null],[5,"g_list_remove_link","","",null,null],[5,"g_list_reverse","","",null,null],[5,"g_list_sort","","",null,null],[5,"g_list_sort_with_data","","",null,null],[5,"g_main_context_get_type","","",null,null],[5,"g_main_context_new","","",null,null],[5,"g_main_context_acquire","","",null,null],[5,"g_main_context_add_poll","","",null,null],[5,"g_main_context_check","","",null,null],[5,"g_main_context_dispatch","","",null,null],[5,"g_main_context_find_source_by_funcs_user_data","","",null,null],[5,"g_main_context_find_source_by_id","","",null,null],[5,"g_main_context_find_source_by_user_data","","",null,null],[5,"g_main_context_get_poll_func","","",null,null],[5,"g_main_context_invoke","","",null,null],[5,"g_main_context_invoke_full","","",null,null],[5,"g_main_context_is_owner","","",null,null],[5,"g_main_context_iteration","","",null,null],[5,"g_main_context_pending","","",null,null],[5,"g_main_context_pop_thread_default","","",null,null],[5,"g_main_context_prepare","","",null,null],[5,"g_main_context_push_thread_default","","",null,null],[5,"g_main_context_query","","",null,null],[5,"g_main_context_ref","","",null,null],[5,"g_main_context_release","","",null,null],[5,"g_main_context_remove_poll","","",null,null],[5,"g_main_context_set_poll_func","","",null,null],[5,"g_main_context_unref","","",null,null],[5,"g_main_context_wait","","",null,null],[5,"g_main_context_wakeup","","",null,null],[5,"g_main_context_default","","",null,null],[5,"g_main_context_get_thread_default","","",null,null],[5,"g_main_context_ref_thread_default","","",null,null],[5,"g_main_loop_get_type","","",null,null],[5,"g_main_loop_new","","",null,null],[5,"g_main_loop_get_context","","",null,null],[5,"g_main_loop_is_running","","",null,null],[5,"g_main_loop_quit","","",null,null],[5,"g_main_loop_ref","","",null,null],[5,"g_main_loop_run","","",null,null],[5,"g_main_loop_unref","","",null,null],[5,"g_mapped_file_get_type","","",null,null],[5,"g_mapped_file_new","","",null,null],[5,"g_mapped_file_new_from_fd","","",null,null],[5,"g_mapped_file_free","","",null,null],[5,"g_mapped_file_get_contents","","",null,null],[5,"g_mapped_file_get_length","","",null,null],[5,"g_mapped_file_ref","","",null,null],[5,"g_mapped_file_unref","","",null,null],[5,"g_markup_parse_context_get_type","","",null,null],[5,"g_markup_parse_context_new","","",null,null],[5,"g_markup_parse_context_end_parse","","",null,null],[5,"g_markup_parse_context_free","","",null,null],[5,"g_markup_parse_context_get_element","","",null,null],[5,"g_markup_parse_context_get_element_stack","","",null,null],[5,"g_markup_parse_context_get_position","","",null,null],[5,"g_markup_parse_context_get_user_data","","",null,null],[5,"g_markup_parse_context_parse","","",null,null],[5,"g_markup_parse_context_pop","","",null,null],[5,"g_markup_parse_context_push","","",null,null],[5,"g_match_info_get_type","","",null,null],[5,"g_match_info_expand_references","","",null,null],[5,"g_match_info_fetch","","",null,null],[5,"g_match_info_fetch_all","","",null,null],[5,"g_match_info_fetch_named","","",null,null],[5,"g_match_info_fetch_named_pos","","",null,null],[5,"g_match_info_fetch_pos","","",null,null],[5,"g_match_info_free","","",null,null],[5,"g_match_info_get_match_count","","",null,null],[5,"g_match_info_get_regex","","",null,null],[5,"g_match_info_get_string","","",null,null],[5,"g_match_info_is_partial_match","","",null,null],[5,"g_match_info_matches","","",null,null],[5,"g_match_info_next","","",null,null],[5,"g_match_info_ref","","",null,null],[5,"g_match_info_unref","","",null,null],[5,"g_node_child_index","","",null,null],[5,"g_node_child_position","","",null,null],[5,"g_node_children_foreach","","",null,null],[5,"g_node_copy","","",null,null],[5,"g_node_copy_deep","","",null,null],[5,"g_node_depth","","",null,null],[5,"g_node_destroy","","",null,null],[5,"g_node_find","","",null,null],[5,"g_node_find_child","","",null,null],[5,"g_node_first_sibling","","",null,null],[5,"g_node_get_root","","",null,null],[5,"g_node_insert","","",null,null],[5,"g_node_insert_after","","",null,null],[5,"g_node_insert_before","","",null,null],[5,"g_node_is_ancestor","","",null,null],[5,"g_node_last_child","","",null,null],[5,"g_node_last_sibling","","",null,null],[5,"g_node_max_height","","",null,null],[5,"g_node_n_children","","",null,null],[5,"g_node_n_nodes","","",null,null],[5,"g_node_nth_child","","",null,null],[5,"g_node_prepend","","",null,null],[5,"g_node_reverse_children","","",null,null],[5,"g_node_traverse","","",null,null],[5,"g_node_unlink","","",null,null],[5,"g_node_new","","",null,null],[5,"g_once_impl","","",null,null],[5,"g_once_init_enter","","",null,null],[5,"g_once_init_leave","","",null,null],[5,"g_option_context_add_group","","",null,null],[5,"g_option_context_add_main_entries","","",null,null],[5,"g_option_context_free","","",null,null],[5,"g_option_context_get_description","","",null,null],[5,"g_option_context_get_help","","",null,null],[5,"g_option_context_get_help_enabled","","",null,null],[5,"g_option_context_get_ignore_unknown_options","","",null,null],[5,"g_option_context_get_main_group","","",null,null],[5,"g_option_context_get_summary","","",null,null],[5,"g_option_context_parse","","",null,null],[5,"g_option_context_set_description","","",null,null],[5,"g_option_context_set_help_enabled","","",null,null],[5,"g_option_context_set_ignore_unknown_options","","",null,null],[5,"g_option_context_set_main_group","","",null,null],[5,"g_option_context_set_summary","","",null,null],[5,"g_option_context_set_translate_func","","",null,null],[5,"g_option_context_set_translation_domain","","",null,null],[5,"g_option_context_new","","",null,null],[5,"g_option_group_get_type","","",null,null],[5,"g_option_group_new","","",null,null],[5,"g_option_group_add_entries","","",null,null],[5,"g_option_group_free","","",null,null],[5,"g_option_group_set_error_hook","","",null,null],[5,"g_option_group_set_parse_hooks","","",null,null],[5,"g_option_group_set_translate_func","","",null,null],[5,"g_option_group_set_translation_domain","","",null,null],[5,"g_pattern_spec_equal","","",null,null],[5,"g_pattern_spec_free","","",null,null],[5,"g_pattern_spec_new","","",null,null],[5,"g_pollfd_get_type","","",null,null],[5,"g_private_get","","",null,null],[5,"g_private_replace","","",null,null],[5,"g_private_set","","",null,null],[5,"g_ptr_array_get_type","","",null,null],[5,"g_ptr_array_add","","",null,null],[5,"g_ptr_array_foreach","","",null,null],[5,"g_ptr_array_free","","",null,null],[5,"g_ptr_array_new","","",null,null],[5,"g_ptr_array_new_full","","",null,null],[5,"g_ptr_array_new_with_free_func","","",null,null],[5,"g_ptr_array_ref","","",null,null],[5,"g_ptr_array_remove","","",null,null],[5,"g_ptr_array_remove_fast","","",null,null],[5,"g_ptr_array_remove_index","","",null,null],[5,"g_ptr_array_remove_index_fast","","",null,null],[5,"g_ptr_array_remove_range","","",null,null],[5,"g_ptr_array_set_free_func","","",null,null],[5,"g_ptr_array_set_size","","",null,null],[5,"g_ptr_array_sized_new","","",null,null],[5,"g_ptr_array_sort","","",null,null],[5,"g_ptr_array_sort_with_data","","",null,null],[5,"g_ptr_array_unref","","",null,null],[5,"g_queue_clear","","",null,null],[5,"g_queue_copy","","",null,null],[5,"g_queue_delete_link","","",null,null],[5,"g_queue_find","","",null,null],[5,"g_queue_find_custom","","",null,null],[5,"g_queue_foreach","","",null,null],[5,"g_queue_free","","",null,null],[5,"g_queue_free_full","","",null,null],[5,"g_queue_get_length","","",null,null],[5,"g_queue_index","","",null,null],[5,"g_queue_init","","",null,null],[5,"g_queue_insert_after","","",null,null],[5,"g_queue_insert_before","","",null,null],[5,"g_queue_insert_sorted","","",null,null],[5,"g_queue_is_empty","","",null,null],[5,"g_queue_link_index","","",null,null],[5,"g_queue_peek_head","","",null,null],[5,"g_queue_peek_head_link","","",null,null],[5,"g_queue_peek_nth","","",null,null],[5,"g_queue_peek_nth_link","","",null,null],[5,"g_queue_peek_tail","","",null,null],[5,"g_queue_peek_tail_link","","",null,null],[5,"g_queue_pop_head","","",null,null],[5,"g_queue_pop_head_link","","",null,null],[5,"g_queue_pop_nth","","",null,null],[5,"g_queue_pop_nth_link","","",null,null],[5,"g_queue_pop_tail","","",null,null],[5,"g_queue_pop_tail_link","","",null,null],[5,"g_queue_push_head","","",null,null],[5,"g_queue_push_head_link","","",null,null],[5,"g_queue_push_nth","","",null,null],[5,"g_queue_push_nth_link","","",null,null],[5,"g_queue_push_tail","","",null,null],[5,"g_queue_push_tail_link","","",null,null],[5,"g_queue_remove","","",null,null],[5,"g_queue_remove_all","","",null,null],[5,"g_queue_reverse","","",null,null],[5,"g_queue_sort","","",null,null],[5,"g_queue_unlink","","",null,null],[5,"g_queue_new","","",null,null],[5,"g_rw_lock_clear","","",null,null],[5,"g_rw_lock_init","","",null,null],[5,"g_rw_lock_reader_lock","","",null,null],[5,"g_rw_lock_reader_trylock","","",null,null],[5,"g_rw_lock_reader_unlock","","",null,null],[5,"g_rw_lock_writer_lock","","",null,null],[5,"g_rw_lock_writer_trylock","","",null,null],[5,"g_rw_lock_writer_unlock","","",null,null],[5,"g_rand_copy","","",null,null],[5,"g_rand_double","","",null,null],[5,"g_rand_double_range","","",null,null],[5,"g_rand_free","","",null,null],[5,"g_rand_int","","",null,null],[5,"g_rand_int_range","","",null,null],[5,"g_rand_set_seed","","",null,null],[5,"g_rand_set_seed_array","","",null,null],[5,"g_rand_new","","",null,null],[5,"g_rand_new_with_seed","","",null,null],[5,"g_rand_new_with_seed_array","","",null,null],[5,"g_rec_mutex_clear","","",null,null],[5,"g_rec_mutex_init","","",null,null],[5,"g_rec_mutex_lock","","",null,null],[5,"g_rec_mutex_trylock","","",null,null],[5,"g_rec_mutex_unlock","","",null,null],[5,"g_regex_get_type","","",null,null],[5,"g_regex_new","","",null,null],[5,"g_regex_get_capture_count","","",null,null],[5,"g_regex_get_compile_flags","","",null,null],[5,"g_regex_get_match_flags","","",null,null],[5,"g_regex_get_max_backref","","",null,null],[5,"g_regex_get_pattern","","",null,null],[5,"g_regex_get_string_number","","",null,null],[5,"g_regex_match","","",null,null],[5,"g_regex_match_all","","",null,null],[5,"g_regex_match_all_full","","",null,null],[5,"g_regex_match_full","","",null,null],[5,"g_regex_ref","","",null,null],[5,"g_regex_replace","","",null,null],[5,"g_regex_replace_eval","","",null,null],[5,"g_regex_replace_literal","","",null,null],[5,"g_regex_split","","",null,null],[5,"g_regex_split_full","","",null,null],[5,"g_regex_unref","","",null,null],[5,"g_regex_check_replacement","","",null,null],[5,"g_regex_error_quark","","",null,null],[5,"g_regex_escape_nul","","",null,null],[5,"g_regex_escape_string","","",null,null],[5,"g_regex_match_simple","","",null,null],[5,"g_regex_split_simple","","",null,null],[5,"g_slist_alloc","","",null,null],[5,"g_slist_append","","",null,null],[5,"g_slist_concat","","",null,null],[5,"g_slist_copy","","",null,null],[5,"g_slist_delete_link","","",null,null],[5,"g_slist_find","","",null,null],[5,"g_slist_find_custom","","",null,null],[5,"g_slist_foreach","","",null,null],[5,"g_slist_free","","",null,null],[5,"g_slist_free_1","","",null,null],[5,"g_slist_free_full","","",null,null],[5,"g_slist_index","","",null,null],[5,"g_slist_insert","","",null,null],[5,"g_slist_insert_before","","",null,null],[5,"g_slist_insert_sorted","","",null,null],[5,"g_slist_insert_sorted_with_data","","",null,null],[5,"g_slist_last","","",null,null],[5,"g_slist_length","","",null,null],[5,"g_slist_nth","","",null,null],[5,"g_slist_nth_data","","",null,null],[5,"g_slist_position","","",null,null],[5,"g_slist_prepend","","",null,null],[5,"g_slist_remove","","",null,null],[5,"g_slist_remove_all","","",null,null],[5,"g_slist_remove_link","","",null,null],[5,"g_slist_reverse","","",null,null],[5,"g_slist_sort","","",null,null],[5,"g_slist_sort_with_data","","",null,null],[5,"g_scanner_cur_line","","",null,null],[5,"g_scanner_cur_position","","",null,null],[5,"g_scanner_cur_token","","",null,null],[5,"g_scanner_cur_value","","",null,null],[5,"g_scanner_destroy","","",null,null],[5,"g_scanner_eof","","",null,null],[5,"g_scanner_error","","",null,null],[5,"g_scanner_get_next_token","","",null,null],[5,"g_scanner_input_file","","",null,null],[5,"g_scanner_input_text","","",null,null],[5,"g_scanner_lookup_symbol","","",null,null],[5,"g_scanner_peek_next_token","","",null,null],[5,"g_scanner_scope_add_symbol","","",null,null],[5,"g_scanner_scope_foreach_symbol","","",null,null],[5,"g_scanner_scope_lookup_symbol","","",null,null],[5,"g_scanner_scope_remove_symbol","","",null,null],[5,"g_scanner_set_scope","","",null,null],[5,"g_scanner_sync_file_offset","","",null,null],[5,"g_scanner_unexp_token","","",null,null],[5,"g_scanner_warn","","",null,null],[5,"g_scanner_new","","",null,null],[5,"g_sequence_append","","",null,null],[5,"g_sequence_foreach","","",null,null],[5,"g_sequence_free","","",null,null],[5,"g_sequence_get_begin_iter","","",null,null],[5,"g_sequence_get_end_iter","","",null,null],[5,"g_sequence_get_iter_at_pos","","",null,null],[5,"g_sequence_get_length","","",null,null],[5,"g_sequence_insert_sorted","","",null,null],[5,"g_sequence_insert_sorted_iter","","",null,null],[5,"g_sequence_lookup","","",null,null],[5,"g_sequence_lookup_iter","","",null,null],[5,"g_sequence_prepend","","",null,null],[5,"g_sequence_search","","",null,null],[5,"g_sequence_search_iter","","",null,null],[5,"g_sequence_sort","","",null,null],[5,"g_sequence_sort_iter","","",null,null],[5,"g_sequence_foreach_range","","",null,null],[5,"g_sequence_get","","",null,null],[5,"g_sequence_insert_before","","",null,null],[5,"g_sequence_move","","",null,null],[5,"g_sequence_move_range","","",null,null],[5,"g_sequence_new","","",null,null],[5,"g_sequence_range_get_midpoint","","",null,null],[5,"g_sequence_remove","","",null,null],[5,"g_sequence_remove_range","","",null,null],[5,"g_sequence_set","","",null,null],[5,"g_sequence_sort_changed","","",null,null],[5,"g_sequence_sort_changed_iter","","",null,null],[5,"g_sequence_swap","","",null,null],[5,"g_sequence_iter_compare","","",null,null],[5,"g_sequence_iter_get_position","","",null,null],[5,"g_sequence_iter_get_sequence","","",null,null],[5,"g_sequence_iter_is_begin","","",null,null],[5,"g_sequence_iter_is_end","","",null,null],[5,"g_sequence_iter_move","","",null,null],[5,"g_sequence_iter_next","","",null,null],[5,"g_sequence_iter_prev","","",null,null],[5,"g_source_get_type","","",null,null],[5,"g_source_new","","",null,null],[5,"g_source_add_child_source","","",null,null],[5,"g_source_add_poll","","",null,null],[5,"g_source_attach","","",null,null],[5,"g_source_destroy","","",null,null],[5,"g_source_get_can_recurse","","",null,null],[5,"g_source_get_context","","",null,null],[5,"g_source_get_current_time","","",null,null],[5,"g_source_get_id","","",null,null],[5,"g_source_get_name","","",null,null],[5,"g_source_get_priority","","",null,null],[5,"g_source_get_ready_time","","",null,null],[5,"g_source_get_time","","",null,null],[5,"g_source_is_destroyed","","",null,null],[5,"g_source_ref","","",null,null],[5,"g_source_remove_child_source","","",null,null],[5,"g_source_remove_poll","","",null,null],[5,"g_source_set_callback","","",null,null],[5,"g_source_set_callback_indirect","","",null,null],[5,"g_source_set_can_recurse","","",null,null],[5,"g_source_set_funcs","","",null,null],[5,"g_source_set_name","","",null,null],[5,"g_source_set_priority","","",null,null],[5,"g_source_unref","","",null,null],[5,"g_source_remove","","",null,null],[5,"g_source_remove_by_funcs_user_data","","",null,null],[5,"g_source_remove_by_user_data","","",null,null],[5,"g_source_set_name_by_id","","",null,null],[5,"g_gstring_get_type","","",null,null],[5,"g_string_append","","",null,null],[5,"g_string_append_c","","",null,null],[5,"g_string_append_len","","",null,null],[5,"g_string_append_printf","","",null,null],[5,"g_string_append_unichar","","",null,null],[5,"g_string_append_uri_escaped","","",null,null],[5,"g_string_ascii_down","","",null,null],[5,"g_string_ascii_up","","",null,null],[5,"g_string_assign","","",null,null],[5,"g_string_down","","",null,null],[5,"g_string_equal","","",null,null],[5,"g_string_erase","","",null,null],[5,"g_string_free","","",null,null],[5,"g_string_hash","","",null,null],[5,"g_string_insert","","",null,null],[5,"g_string_insert_c","","",null,null],[5,"g_string_insert_len","","",null,null],[5,"g_string_insert_unichar","","",null,null],[5,"g_string_overwrite","","",null,null],[5,"g_string_overwrite_len","","",null,null],[5,"g_string_prepend","","",null,null],[5,"g_string_prepend_c","","",null,null],[5,"g_string_prepend_len","","",null,null],[5,"g_string_prepend_unichar","","",null,null],[5,"g_string_printf","","",null,null],[5,"g_string_set_size","","",null,null],[5,"g_string_truncate","","",null,null],[5,"g_string_up","","",null,null],[5,"g_string_chunk_clear","","",null,null],[5,"g_string_chunk_free","","",null,null],[5,"g_string_chunk_insert","","",null,null],[5,"g_string_chunk_insert_const","","",null,null],[5,"g_string_chunk_insert_len","","",null,null],[5,"g_string_chunk_new","","",null,null],[5,"g_test_log_buffer_free","","",null,null],[5,"g_test_log_buffer_pop","","",null,null],[5,"g_test_log_buffer_push","","",null,null],[5,"g_test_log_buffer_new","","",null,null],[5,"g_test_log_msg_free","","",null,null],[5,"g_test_suite_add","","",null,null],[5,"g_test_suite_add_suite","","",null,null],[5,"g_thread_get_type","","",null,null],[5,"g_thread_new","","",null,null],[5,"g_thread_try_new","","",null,null],[5,"g_thread_join","","",null,null],[5,"g_thread_ref","","",null,null],[5,"g_thread_unref","","",null,null],[5,"g_thread_error_quark","","",null,null],[5,"g_thread_exit","","",null,null],[5,"g_thread_self","","",null,null],[5,"g_thread_yield","","",null,null],[5,"g_thread_pool_free","","",null,null],[5,"g_thread_pool_get_max_threads","","",null,null],[5,"g_thread_pool_get_num_threads","","",null,null],[5,"g_thread_pool_push","","",null,null],[5,"g_thread_pool_set_max_threads","","",null,null],[5,"g_thread_pool_set_sort_function","","",null,null],[5,"g_thread_pool_unprocessed","","",null,null],[5,"g_thread_pool_get_max_idle_time","","",null,null],[5,"g_thread_pool_get_max_unused_threads","","",null,null],[5,"g_thread_pool_get_num_unused_threads","","",null,null],[5,"g_thread_pool_new","","",null,null],[5,"g_thread_pool_set_max_idle_time","","",null,null],[5,"g_thread_pool_set_max_unused_threads","","",null,null],[5,"g_thread_pool_stop_unused_threads","","",null,null],[5,"g_time_val_add","","",null,null],[5,"g_time_val_to_iso8601","","",null,null],[5,"g_time_val_from_iso8601","","",null,null],[5,"g_time_zone_get_type","","",null,null],[5,"g_time_zone_new","","",null,null],[5,"g_time_zone_new_local","","",null,null],[5,"g_time_zone_new_utc","","",null,null],[5,"g_time_zone_adjust_time","","",null,null],[5,"g_time_zone_find_interval","","",null,null],[5,"g_time_zone_get_abbreviation","","",null,null],[5,"g_time_zone_get_offset","","",null,null],[5,"g_time_zone_is_dst","","",null,null],[5,"g_time_zone_ref","","",null,null],[5,"g_time_zone_unref","","",null,null],[5,"g_timer_continue","","",null,null],[5,"g_timer_destroy","","",null,null],[5,"g_timer_elapsed","","",null,null],[5,"g_timer_reset","","",null,null],[5,"g_timer_start","","",null,null],[5,"g_timer_stop","","",null,null],[5,"g_timer_new","","",null,null],[5,"g_trash_stack_height","","",null,null],[5,"g_trash_stack_peek","","",null,null],[5,"g_trash_stack_pop","","",null,null],[5,"g_trash_stack_push","","",null,null],[5,"g_tree_destroy","","",null,null],[5,"g_tree_foreach","","",null,null],[5,"g_tree_height","","",null,null],[5,"g_tree_insert","","",null,null],[5,"g_tree_lookup","","",null,null],[5,"g_tree_lookup_extended","","",null,null],[5,"g_tree_nnodes","","",null,null],[5,"g_tree_ref","","",null,null],[5,"g_tree_remove","","",null,null],[5,"g_tree_replace","","",null,null],[5,"g_tree_search","","",null,null],[5,"g_tree_steal","","",null,null],[5,"g_tree_traverse","","",null,null],[5,"g_tree_unref","","",null,null],[5,"g_tree_new","","",null,null],[5,"g_tree_new_full","","",null,null],[5,"g_tree_new_with_data","","",null,null],[5,"g_variant_new","","",null,null],[5,"g_variant_new_array","","",null,null],[5,"g_variant_new_boolean","","",null,null],[5,"g_variant_new_byte","","",null,null],[5,"g_variant_new_bytestring","","",null,null],[5,"g_variant_new_bytestring_array","","",null,null],[5,"g_variant_new_dict_entry","","",null,null],[5,"g_variant_new_double","","",null,null],[5,"g_variant_new_fixed_array","","",null,null],[5,"g_variant_new_from_data","","",null,null],[5,"g_variant_new_handle","","",null,null],[5,"g_variant_new_int16","","",null,null],[5,"g_variant_new_int32","","",null,null],[5,"g_variant_new_int64","","",null,null],[5,"g_variant_new_maybe","","",null,null],[5,"g_variant_new_object_path","","",null,null],[5,"g_variant_new_objv","","",null,null],[5,"g_variant_new_parsed","","",null,null],[5,"g_variant_new_signature","","",null,null],[5,"g_variant_new_string","","",null,null],[5,"g_variant_new_strv","","",null,null],[5,"g_variant_new_tuple","","",null,null],[5,"g_variant_new_uint16","","",null,null],[5,"g_variant_new_uint32","","",null,null],[5,"g_variant_new_uint64","","",null,null],[5,"g_variant_new_variant","","",null,null],[5,"g_variant_byteswap","","",null,null],[5,"g_variant_classify","","",null,null],[5,"g_variant_compare","","",null,null],[5,"g_variant_dup_bytestring","","",null,null],[5,"g_variant_dup_bytestring_array","","",null,null],[5,"g_variant_dup_objv","","",null,null],[5,"g_variant_dup_string","","",null,null],[5,"g_variant_dup_strv","","",null,null],[5,"g_variant_equal","","",null,null],[5,"g_variant_get","","",null,null],[5,"g_variant_get_boolean","","",null,null],[5,"g_variant_get_byte","","",null,null],[5,"g_variant_get_bytestring","","",null,null],[5,"g_variant_get_bytestring_array","","",null,null],[5,"g_variant_get_child","","",null,null],[5,"g_variant_get_child_value","","",null,null],[5,"g_variant_get_data","","",null,null],[5,"g_variant_get_double","","",null,null],[5,"g_variant_get_fixed_array","","",null,null],[5,"g_variant_get_handle","","",null,null],[5,"g_variant_get_int16","","",null,null],[5,"g_variant_get_int32","","",null,null],[5,"g_variant_get_int64","","",null,null],[5,"g_variant_get_maybe","","",null,null],[5,"g_variant_get_normal_form","","",null,null],[5,"g_variant_get_objv","","",null,null],[5,"g_variant_get_size","","",null,null],[5,"g_variant_get_string","","",null,null],[5,"g_variant_get_strv","","",null,null],[5,"g_variant_get_type","","",null,null],[5,"g_variant_get_type_string","","",null,null],[5,"g_variant_get_uint16","","",null,null],[5,"g_variant_get_uint32","","",null,null],[5,"g_variant_get_uint64","","",null,null],[5,"g_variant_get_variant","","",null,null],[5,"g_variant_hash","","",null,null],[5,"g_variant_is_container","","",null,null],[5,"g_variant_is_floating","","",null,null],[5,"g_variant_is_normal_form","","",null,null],[5,"g_variant_is_of_type","","",null,null],[5,"g_variant_iter_new","","",null,null],[5,"g_variant_lookup","","",null,null],[5,"g_variant_lookup_value","","",null,null],[5,"g_variant_n_children","","",null,null],[5,"g_variant_print","","",null,null],[5,"g_variant_print_string","","",null,null],[5,"g_variant_ref","","",null,null],[5,"g_variant_ref_sink","","",null,null],[5,"g_variant_store","","",null,null],[5,"g_variant_take_ref","","",null,null],[5,"g_variant_unref","","",null,null],[5,"g_variant_is_object_path","","",null,null],[5,"g_variant_is_signature","","",null,null],[5,"g_variant_parse","","",null,null],[5,"g_variant_parse_error_quark","","",null,null],[5,"g_variant_parser_get_error_quark","","",null,null],[5,"g_variant_builder_get_type","","",null,null],[5,"g_variant_builder_new","","",null,null],[5,"g_variant_builder_add","","",null,null],[5,"g_variant_builder_add_parsed","","",null,null],[5,"g_variant_builder_add_value","","",null,null],[5,"g_variant_builder_clear","","",null,null],[5,"g_variant_builder_close","","",null,null],[5,"g_variant_builder_end","","",null,null],[5,"g_variant_builder_init","","",null,null],[5,"g_variant_builder_open","","",null,null],[5,"g_variant_builder_ref","","",null,null],[5,"g_variant_builder_unref","","",null,null],[5,"g_variant_dict_get_type","","",null,null],[5,"g_variant_iter_copy","","",null,null],[5,"g_variant_iter_free","","",null,null],[5,"g_variant_iter_init","","",null,null],[5,"g_variant_iter_loop","","",null,null],[5,"g_variant_iter_n_children","","",null,null],[5,"g_variant_iter_next","","",null,null],[5,"g_variant_iter_next_value","","",null,null],[5,"g_variant_type_get_gtype","","",null,null],[5,"g_variant_type_new","","",null,null],[5,"g_variant_type_new_array","","",null,null],[5,"g_variant_type_new_dict_entry","","",null,null],[5,"g_variant_type_new_maybe","","",null,null],[5,"g_variant_type_new_tuple","","",null,null],[5,"g_variant_type_copy","","",null,null],[5,"g_variant_type_dup_string","","",null,null],[5,"g_variant_type_element","","",null,null],[5,"g_variant_type_equal","","",null,null],[5,"g_variant_type_first","","",null,null],[5,"g_variant_type_free","","",null,null],[5,"g_variant_type_get_string_length","","",null,null],[5,"g_variant_type_hash","","",null,null],[5,"g_variant_type_is_array","","",null,null],[5,"g_variant_type_is_basic","","",null,null],[5,"g_variant_type_is_container","","",null,null],[5,"g_variant_type_is_definite","","",null,null],[5,"g_variant_type_is_dict_entry","","",null,null],[5,"g_variant_type_is_maybe","","",null,null],[5,"g_variant_type_is_subtype_of","","",null,null],[5,"g_variant_type_is_tuple","","",null,null],[5,"g_variant_type_is_variant","","",null,null],[5,"g_variant_type_key","","",null,null],[5,"g_variant_type_n_items","","",null,null],[5,"g_variant_type_next","","",null,null],[5,"g_variant_type_peek_string","","",null,null],[5,"g_variant_type_value","","",null,null],[5,"g_variant_type_checked_","","",null,null],[5,"g_variant_type_string_is_valid","","",null,null],[5,"g_variant_type_string_scan","","",null,null],[5,"g_access","","",null,null],[5,"g_ascii_digit_value","","",null,null],[5,"g_ascii_dtostr","","",null,null],[5,"g_ascii_formatd","","",null,null],[5,"g_ascii_strcasecmp","","",null,null],[5,"g_ascii_strdown","","",null,null],[5,"g_ascii_strncasecmp","","",null,null],[5,"g_ascii_strtod","","",null,null],[5,"g_ascii_strtoll","","",null,null],[5,"g_ascii_strtoull","","",null,null],[5,"g_ascii_strup","","",null,null],[5,"g_ascii_tolower","","",null,null],[5,"g_ascii_toupper","","",null,null],[5,"g_ascii_xdigit_value","","",null,null],[5,"g_assert_warning","","",null,null],[5,"g_assertion_message","","",null,null],[5,"g_assertion_message_cmpstr","","",null,null],[5,"g_assertion_message_error","","",null,null],[5,"g_assertion_message_expr","","",null,null],[5,"g_atexit","","",null,null],[5,"g_atomic_int_add","","",null,null],[5,"g_atomic_int_and","","",null,null],[5,"g_atomic_int_compare_and_exchange","","",null,null],[5,"g_atomic_int_dec_and_test","","",null,null],[5,"g_atomic_int_exchange_and_add","","",null,null],[5,"g_atomic_int_get","","",null,null],[5,"g_atomic_int_inc","","",null,null],[5,"g_atomic_int_or","","",null,null],[5,"g_atomic_int_set","","",null,null],[5,"g_atomic_int_xor","","",null,null],[5,"g_atomic_pointer_add","","",null,null],[5,"g_atomic_pointer_and","","",null,null],[5,"g_atomic_pointer_compare_and_exchange","","",null,null],[5,"g_atomic_pointer_get","","",null,null],[5,"g_atomic_pointer_or","","",null,null],[5,"g_atomic_pointer_set","","",null,null],[5,"g_atomic_pointer_xor","","",null,null],[5,"g_base64_decode","","",null,null],[5,"g_base64_decode_inplace","","",null,null],[5,"g_base64_decode_step","","",null,null],[5,"g_base64_encode","","",null,null],[5,"g_base64_encode_close","","",null,null],[5,"g_base64_encode_step","","",null,null],[5,"g_basename","","",null,null],[5,"g_bit_lock","","",null,null],[5,"g_bit_nth_lsf","","",null,null],[5,"g_bit_nth_msf","","",null,null],[5,"g_bit_storage","","",null,null],[5,"g_bit_trylock","","",null,null],[5,"g_bit_unlock","","",null,null],[5,"g_build_filename","","",null,null],[5,"g_build_filenamev","","",null,null],[5,"g_build_path","","",null,null],[5,"g_build_pathv","","",null,null],[5,"g_chdir","","",null,null],[5,"glib_check_version","","",null,null],[5,"g_child_watch_add","","",null,null],[5,"g_child_watch_add_full","","",null,null],[5,"g_child_watch_source_new","","",null,null],[5,"g_clear_error","","",null,null],[5,"g_compute_checksum_for_data","","",null,null],[5,"g_compute_checksum_for_string","","",null,null],[5,"g_compute_hmac_for_data","","",null,null],[5,"g_compute_hmac_for_string","","",null,null],[5,"g_convert","","",null,null],[5,"g_convert_error_quark","","",null,null],[5,"g_convert_with_fallback","","",null,null],[5,"g_convert_with_iconv","","",null,null],[5,"g_datalist_clear","","",null,null],[5,"g_datalist_foreach","","",null,null],[5,"g_datalist_get_data","","",null,null],[5,"g_datalist_get_flags","","",null,null],[5,"g_datalist_id_get_data","","",null,null],[5,"g_datalist_id_remove_no_notify","","",null,null],[5,"g_datalist_id_set_data_full","","",null,null],[5,"g_datalist_init","","",null,null],[5,"g_datalist_set_flags","","",null,null],[5,"g_datalist_unset_flags","","",null,null],[5,"g_dataset_destroy","","",null,null],[5,"g_dataset_foreach","","",null,null],[5,"g_dataset_id_get_data","","",null,null],[5,"g_dataset_id_remove_no_notify","","",null,null],[5,"g_dataset_id_set_data_full","","",null,null],[5,"g_dcgettext","","",null,null],[5,"g_dgettext","","",null,null],[5,"g_direct_equal","","",null,null],[5,"g_direct_hash","","",null,null],[5,"g_dngettext","","",null,null],[5,"g_double_equal","","",null,null],[5,"g_double_hash","","",null,null],[5,"g_dpgettext","","",null,null],[5,"g_dpgettext2","","",null,null],[5,"g_environ_getenv","","",null,null],[5,"g_environ_setenv","","",null,null],[5,"g_environ_unsetenv","","",null,null],[5,"g_file_error_from_errno","","",null,null],[5,"g_file_error_quark","","",null,null],[5,"g_file_get_contents","","",null,null],[5,"g_file_open_tmp","","",null,null],[5,"g_file_read_link","","",null,null],[5,"g_file_set_contents","","",null,null],[5,"g_file_test","","",null,null],[5,"g_filename_display_basename","","",null,null],[5,"g_filename_display_name","","",null,null],[5,"g_filename_from_uri","","",null,null],[5,"g_filename_from_utf8","","",null,null],[5,"g_filename_to_uri","","",null,null],[5,"g_filename_to_utf8","","",null,null],[5,"g_find_program_in_path","","",null,null],[5,"g_format_size","","",null,null],[5,"g_format_size_for_display","","",null,null],[5,"g_format_size_full","","",null,null],[5,"g_fprintf","","",null,null],[5,"g_free","","",null,null],[5,"g_get_application_name","","",null,null],[5,"g_get_charset","","",null,null],[5,"g_get_codeset","","",null,null],[5,"g_get_current_dir","","",null,null],[5,"g_get_current_time","","",null,null],[5,"g_get_environ","","",null,null],[5,"g_get_filename_charsets","","",null,null],[5,"g_get_home_dir","","",null,null],[5,"g_get_host_name","","",null,null],[5,"g_get_language_names","","",null,null],[5,"g_get_locale_variants","","",null,null],[5,"g_get_monotonic_time","","",null,null],[5,"g_get_prgname","","",null,null],[5,"g_get_real_name","","",null,null],[5,"g_get_real_time","","",null,null],[5,"g_get_system_config_dirs","","",null,null],[5,"g_get_system_data_dirs","","",null,null],[5,"g_get_tmp_dir","","",null,null],[5,"g_get_user_cache_dir","","",null,null],[5,"g_get_user_config_dir","","",null,null],[5,"g_get_user_data_dir","","",null,null],[5,"g_get_user_name","","",null,null],[5,"g_get_user_runtime_dir","","",null,null],[5,"g_get_user_special_dir","","",null,null],[5,"g_getenv","","",null,null],[5,"g_hostname_is_ascii_encoded","","",null,null],[5,"g_hostname_is_ip_address","","",null,null],[5,"g_hostname_is_non_ascii","","",null,null],[5,"g_hostname_to_ascii","","",null,null],[5,"g_hostname_to_unicode","","",null,null],[5,"g_iconv","","",null,null],[5,"g_idle_add","","",null,null],[5,"g_idle_add_full","","",null,null],[5,"g_idle_remove_by_data","","",null,null],[5,"g_idle_source_new","","",null,null],[5,"g_int64_equal","","",null,null],[5,"g_int64_hash","","",null,null],[5,"g_int_equal","","",null,null],[5,"g_int_hash","","",null,null],[5,"g_intern_static_string","","",null,null],[5,"g_intern_string","","",null,null],[5,"g_io_add_watch","","",null,null],[5,"g_io_add_watch_full","","",null,null],[5,"g_io_create_watch","","",null,null],[5,"g_listenv","","",null,null],[5,"g_locale_from_utf8","","",null,null],[5,"g_locale_to_utf8","","",null,null],[5,"g_log","","",null,null],[5,"g_log_default_handler","","",null,null],[5,"g_log_remove_handler","","",null,null],[5,"g_log_set_always_fatal","","",null,null],[5,"g_log_set_default_handler","","",null,null],[5,"g_log_set_fatal_mask","","",null,null],[5,"g_log_set_handler","","",null,null],[5,"g_main_current_source","","",null,null],[5,"g_main_depth","","",null,null],[5,"g_malloc","","",null,null],[5,"g_malloc0","","",null,null],[5,"g_malloc0_n","","",null,null],[5,"g_malloc_n","","",null,null],[5,"g_markup_collect_attributes","","",null,null],[5,"g_markup_error_quark","","",null,null],[5,"g_markup_escape_text","","",null,null],[5,"g_markup_printf_escaped","","",null,null],[5,"g_mem_is_system_malloc","","",null,null],[5,"g_mem_profile","","",null,null],[5,"g_mem_set_vtable","","",null,null],[5,"g_memdup","","",null,null],[5,"g_mkdir_with_parents","","",null,null],[5,"g_mkdtemp","","",null,null],[5,"g_mkdtemp_full","","",null,null],[5,"g_mkstemp","","",null,null],[5,"g_mkstemp_full","","",null,null],[5,"g_nullify_pointer","","",null,null],[5,"g_on_error_query","","",null,null],[5,"g_on_error_stack_trace","","",null,null],[5,"g_option_error_quark","","",null,null],[5,"g_parse_debug_string","","",null,null],[5,"g_path_get_basename","","",null,null],[5,"g_path_get_dirname","","",null,null],[5,"g_path_is_absolute","","",null,null],[5,"g_path_skip_root","","",null,null],[5,"g_pattern_match","","",null,null],[5,"g_pattern_match_simple","","",null,null],[5,"g_pattern_match_string","","",null,null],[5,"g_pointer_bit_lock","","",null,null],[5,"g_pointer_bit_trylock","","",null,null],[5,"g_pointer_bit_unlock","","",null,null],[5,"g_poll","","",null,null],[5,"g_prefix_error","","",null,null],[5,"g_print","","",null,null],[5,"g_printerr","","",null,null],[5,"g_printf","","",null,null],[5,"g_propagate_error","","",null,null],[5,"g_propagate_prefixed_error","","",null,null],[5,"g_qsort_with_data","","",null,null],[5,"g_quark_from_static_string","","",null,null],[5,"g_quark_from_string","","",null,null],[5,"g_quark_to_string","","",null,null],[5,"g_quark_try_string","","",null,null],[5,"g_random_double","","",null,null],[5,"g_random_double_range","","",null,null],[5,"g_random_int","","",null,null],[5,"g_random_int_range","","",null,null],[5,"g_random_set_seed","","",null,null],[5,"g_realloc","","",null,null],[5,"g_realloc_n","","",null,null],[5,"g_reload_user_special_dirs_cache","","",null,null],[5,"g_return_if_fail_warning","","",null,null],[5,"g_rmdir","","",null,null],[5,"g_set_application_name","","",null,null],[5,"g_set_error","","",null,null],[5,"g_set_error_literal","","",null,null],[5,"g_set_prgname","","",null,null],[5,"g_set_print_handler","","",null,null],[5,"g_set_printerr_handler","","",null,null],[5,"g_setenv","","",null,null],[5,"g_shell_error_quark","","",null,null],[5,"g_shell_parse_argv","","",null,null],[5,"g_shell_quote","","",null,null],[5,"g_shell_unquote","","",null,null],[5,"g_slice_alloc","","",null,null],[5,"g_slice_alloc0","","",null,null],[5,"g_slice_copy","","",null,null],[5,"g_slice_free1","","",null,null],[5,"g_slice_free_chain_with_offset","","",null,null],[5,"g_slice_get_config","","",null,null],[5,"g_slice_get_config_state","","",null,null],[5,"g_slice_set_config","","",null,null],[5,"g_snprintf","","",null,null],[5,"g_spaced_primes_closest","","",null,null],[5,"g_spawn_async","","",null,null],[5,"g_spawn_async_with_pipes","","",null,null],[5,"g_spawn_close_pid","","",null,null],[5,"g_spawn_command_line_async","","",null,null],[5,"g_spawn_command_line_sync","","",null,null],[5,"g_spawn_error_quark","","",null,null],[5,"g_spawn_exit_error_quark","","",null,null],[5,"g_spawn_sync","","",null,null],[5,"g_sprintf","","",null,null],[5,"g_stpcpy","","",null,null],[5,"g_str_equal","","",null,null],[5,"g_str_has_prefix","","",null,null],[5,"g_str_has_suffix","","",null,null],[5,"g_str_hash","","",null,null],[5,"g_str_to_ascii","","",null,null],[5,"g_strcanon","","",null,null],[5,"g_strcasecmp","","",null,null],[5,"g_strchomp","","",null,null],[5,"g_strchug","","",null,null],[5,"g_strcmp0","","",null,null],[5,"g_strcompress","","",null,null],[5,"g_strconcat","","",null,null],[5,"g_strdelimit","","",null,null],[5,"g_strdown","","",null,null],[5,"g_strdup","","",null,null],[5,"g_strdup_printf","","",null,null],[5,"g_strdupv","","",null,null],[5,"g_strerror","","",null,null],[5,"g_strescape","","",null,null],[5,"g_strfreev","","",null,null],[5,"g_string_new","","",null,null],[5,"g_string_new_len","","",null,null],[5,"g_string_sized_new","","",null,null],[5,"g_strip_context","","",null,null],[5,"g_strjoin","","",null,null],[5,"g_strjoinv","","",null,null],[5,"g_strlcat","","",null,null],[5,"g_strlcpy","","",null,null],[5,"g_strncasecmp","","",null,null],[5,"g_strndup","","",null,null],[5,"g_strnfill","","",null,null],[5,"g_strreverse","","",null,null],[5,"g_strrstr","","",null,null],[5,"g_strrstr_len","","",null,null],[5,"g_strsignal","","",null,null],[5,"g_strsplit","","",null,null],[5,"g_strsplit_set","","",null,null],[5,"g_strstr_len","","",null,null],[5,"g_strtod","","",null,null],[5,"g_strup","","",null,null],[5,"g_strv_get_type","","",null,null],[5,"g_strv_length","","",null,null],[5,"g_test_add_data_func","","",null,null],[5,"g_test_add_func","","",null,null],[5,"g_test_add_vtable","","",null,null],[5,"g_test_assert_expected_messages_internal","","",null,null],[5,"g_test_bug","","",null,null],[5,"g_test_bug_base","","",null,null],[5,"g_test_create_case","","",null,null],[5,"g_test_create_suite","","",null,null],[5,"g_test_fail","","",null,null],[5,"g_test_get_root","","",null,null],[5,"g_test_init","","",null,null],[5,"g_test_log_set_fatal_handler","","",null,null],[5,"g_test_log_type_name","","",null,null],[5,"g_test_maximized_result","","",null,null],[5,"g_test_message","","",null,null],[5,"g_test_minimized_result","","",null,null],[5,"g_test_queue_destroy","","",null,null],[5,"g_test_queue_free","","",null,null],[5,"g_test_rand_double","","",null,null],[5,"g_test_rand_double_range","","",null,null],[5,"g_test_rand_int","","",null,null],[5,"g_test_rand_int_range","","",null,null],[5,"g_test_run","","",null,null],[5,"g_test_run_suite","","",null,null],[5,"g_test_timer_elapsed","","",null,null],[5,"g_test_timer_last","","",null,null],[5,"g_test_timer_start","","",null,null],[5,"g_test_trap_assertions","","",null,null],[5,"g_test_trap_fork","","",null,null],[5,"g_test_trap_has_passed","","",null,null],[5,"g_test_trap_reached_timeout","","",null,null],[5,"g_timeout_add","","",null,null],[5,"g_timeout_add_full","","",null,null],[5,"g_timeout_add_seconds","","",null,null],[5,"g_timeout_add_seconds_full","","",null,null],[5,"g_timeout_source_new","","",null,null],[5,"g_timeout_source_new_seconds","","",null,null],[5,"g_try_malloc","","",null,null],[5,"g_try_malloc0","","",null,null],[5,"g_try_malloc0_n","","",null,null],[5,"g_try_malloc_n","","",null,null],[5,"g_try_realloc","","",null,null],[5,"g_try_realloc_n","","",null,null],[5,"g_ucs4_to_utf16","","",null,null],[5,"g_ucs4_to_utf8","","",null,null],[5,"g_unichar_break_type","","",null,null],[5,"g_unichar_combining_class","","",null,null],[5,"g_unichar_compose","","",null,null],[5,"g_unichar_decompose","","",null,null],[5,"g_unichar_digit_value","","",null,null],[5,"g_unichar_fully_decompose","","",null,null],[5,"g_unichar_get_mirror_char","","",null,null],[5,"g_unichar_get_script","","",null,null],[5,"g_unichar_isalnum","","",null,null],[5,"g_unichar_isalpha","","",null,null],[5,"g_unichar_iscntrl","","",null,null],[5,"g_unichar_isdefined","","",null,null],[5,"g_unichar_isdigit","","",null,null],[5,"g_unichar_isgraph","","",null,null],[5,"g_unichar_islower","","",null,null],[5,"g_unichar_ismark","","",null,null],[5,"g_unichar_isprint","","",null,null],[5,"g_unichar_ispunct","","",null,null],[5,"g_unichar_isspace","","",null,null],[5,"g_unichar_istitle","","",null,null],[5,"g_unichar_isupper","","",null,null],[5,"g_unichar_iswide","","",null,null],[5,"g_unichar_iswide_cjk","","",null,null],[5,"g_unichar_isxdigit","","",null,null],[5,"g_unichar_iszerowidth","","",null,null],[5,"g_unichar_to_utf8","","",null,null],[5,"g_unichar_tolower","","",null,null],[5,"g_unichar_totitle","","",null,null],[5,"g_unichar_toupper","","",null,null],[5,"g_unichar_type","","",null,null],[5,"g_unichar_validate","","",null,null],[5,"g_unichar_xdigit_value","","",null,null],[5,"g_unicode_canonical_decomposition","","",null,null],[5,"g_unicode_canonical_ordering","","",null,null],[5,"g_unicode_script_from_iso15924","","",null,null],[5,"g_unicode_script_to_iso15924","","",null,null],[5,"g_unix_error_quark","","",null,null],[5,"g_unix_open_pipe","","",null,null],[5,"g_unix_set_fd_nonblocking","","",null,null],[5,"g_unix_signal_add","","",null,null],[5,"g_unix_signal_add_full","","",null,null],[5,"g_unix_signal_source_new","","",null,null],[5,"g_unlink","","",null,null],[5,"g_unsetenv","","",null,null],[5,"g_uri_escape_string","","",null,null],[5,"g_uri_list_extract_uris","","",null,null],[5,"g_uri_parse_scheme","","",null,null],[5,"g_uri_unescape_segment","","",null,null],[5,"g_uri_unescape_string","","",null,null],[5,"g_usleep","","",null,null],[5,"g_utf16_to_ucs4","","",null,null],[5,"g_utf16_to_utf8","","",null,null],[5,"g_utf8_casefold","","",null,null],[5,"g_utf8_collate","","",null,null],[5,"g_utf8_collate_key","","",null,null],[5,"g_utf8_collate_key_for_filename","","",null,null],[5,"g_utf8_find_next_char","","",null,null],[5,"g_utf8_find_prev_char","","",null,null],[5,"g_utf8_get_char","","",null,null],[5,"g_utf8_get_char_validated","","",null,null],[5,"g_utf8_normalize","","",null,null],[5,"g_utf8_offset_to_pointer","","",null,null],[5,"g_utf8_pointer_to_offset","","",null,null],[5,"g_utf8_prev_char","","",null,null],[5,"g_utf8_strchr","","",null,null],[5,"g_utf8_strdown","","",null,null],[5,"g_utf8_strlen","","",null,null],[5,"g_utf8_strncpy","","",null,null],[5,"g_utf8_strrchr","","",null,null],[5,"g_utf8_strreverse","","",null,null],[5,"g_utf8_strup","","",null,null],[5,"g_utf8_substring","","",null,null],[5,"g_utf8_to_ucs4","","",null,null],[5,"g_utf8_to_ucs4_fast","","",null,null],[5,"g_utf8_to_utf16","","",null,null],[5,"g_utf8_validate","","",null,null],[5,"g_variant_get_gtype","","",null,null],[5,"g_warn_message","","",null,null],[6,"gboolean","","",null,null],[6,"gconstpointer","","",null,null],[6,"gpointer","","",null,null],[6,"GArray_autoptr","","",null,null],[6,"GAsyncQueue_autoptr","","",null,null],[6,"GBookmarkFile_autoptr","","",null,null],[6,"GByteArray_autoptr","","",null,null],[6,"GBytes_autoptr","","",null,null],[6,"GChecksum_autoptr","","",null,null],[6,"GDateDay","","",null,null],[6,"GDateTime_autoptr","","",null,null],[6,"GDateYear","","",null,null],[6,"GDir_autoptr","","",null,null],[6,"GError_autoptr","","",null,null],[6,"GHashTable_autoptr","","",null,null],[6,"GHmac_autoptr","","",null,null],[6,"GIOChannel_autoptr","","",null,null],[6,"GKeyFile_autoptr","","",null,null],[6,"GList_autoptr","","",null,null],[6,"GMainContext_autoptr","","",null,null],[6,"GMainLoop_autoptr","","",null,null],[6,"GMappedFile_autoptr","","",null,null],[6,"GMarkupParseContext_autoptr","","",null,null],[6,"GMatchInfo_autoptr","","",null,null],[6,"GMutexLocker","","",null,null],[6,"GMutexLocker_autoptr","","",null,null],[6,"GNode_autoptr","","",null,null],[6,"GOptionContext_autoptr","","",null,null],[6,"GOptionGroup_autoptr","","",null,null],[6,"GPatternSpec_autoptr","","",null,null],[6,"GPid","","",null,null],[6,"GPtrArray_autoptr","","",null,null],[6,"GQuark","","",null,null],[6,"GQueue_autoptr","","",null,null],[6,"GRand_autoptr","","",null,null],[6,"GRegex_autoptr","","",null,null],[6,"GSList_autoptr","","",null,null],[6,"GScanner_autoptr","","",null,null],[6,"GSequence_autoptr","","",null,null],[6,"GSource_autoptr","","",null,null],[6,"GStringChunk_autoptr","","",null,null],[6,"GStrv","","",null,null],[6,"GThread_autoptr","","",null,null],[6,"GTime","","",null,null],[6,"GTimeSpan","","",null,null],[6,"GTimeZone_autoptr","","",null,null],[6,"GTimer_autoptr","","",null,null],[6,"GTree_autoptr","","",null,null],[6,"GType","","",null,null],[6,"GVariantBuilder_autoptr","","",null,null],[6,"GVariantDict_autoptr","","",null,null],[6,"GVariantIter_autoptr","","",null,null],[6,"GVariantType_autoptr","","",null,null],[6,"GVariant_autoptr","","",null,null],[6,"ThreadError","","",null,null],[6,"GThreadError","","",null,null],[6,"GDoubleIEEE754","","",null,null],[6,"GFloatIEEE754","","",null,null],[6,"GMutex","","",null,null],[6,"GTokenValue","","",null,null],[6,"GChildWatchFunc","","",null,null],[6,"GCompareDataFunc","","",null,null],[6,"GCompareFunc","","",null,null],[6,"GCopyFunc","","",null,null],[6,"GDataForeachFunc","","",null,null],[6,"GDestroyNotify","","",null,null],[6,"GDuplicateFunc","","",null,null],[6,"GEqualFunc","","",null,null],[6,"GFreeFunc","","",null,null],[6,"GFunc","","",null,null],[6,"GHFunc","","",null,null],[6,"GHRFunc","","",null,null],[6,"GHashFunc","","",null,null],[6,"GHookCheckFunc","","",null,null],[6,"GHookCheckMarshaller","","",null,null],[6,"GHookCompareFunc","","",null,null],[6,"GHookFinalizeFunc","","",null,null],[6,"GHookFindFunc","","",null,null],[6,"GHookFunc","","",null,null],[6,"GHookMarshaller","","",null,null],[6,"GIOFunc","","",null,null],[6,"GLogFunc","","",null,null],[6,"GNodeForeachFunc","","",null,null],[6,"GNodeTraverseFunc","","",null,null],[6,"GOptionArgFunc","","",null,null],[6,"GOptionErrorFunc","","",null,null],[6,"GOptionParseFunc","","",null,null],[6,"GPollFunc","","",null,null],[6,"GPrintFunc","","",null,null],[6,"GRegexEvalCallback","","",null,null],[6,"GScannerMsgFunc","","",null,null],[6,"GSequenceIterCompareFunc","","",null,null],[6,"GSourceDummyMarshal","","",null,null],[6,"GSourceFunc","","",null,null],[6,"GSpawnChildSetupFunc","","",null,null],[6,"GTestDataFunc","","",null,null],[6,"GTestFixtureFunc","","",null,null],[6,"GTestFunc","","",null,null],[6,"GTestLogFatalFunc","","",null,null],[6,"GThreadFunc","","",null,null],[6,"GTranslateFunc","","",null,null],[6,"GTraverseFunc","","",null,null],[6,"GUnixFDSourceFunc","","",null,null],[6,"GVoidFunc","","",null,null],[17,"GFALSE","","",null,null],[17,"GTRUE","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_INVALID_URI","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_INVALID_VALUE","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_READ","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_WRITE","","",null,null],[17,"G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND","","",null,null],[17,"G_CHECKSUM_MD5","","",null,null],[17,"G_CHECKSUM_SHA1","","",null,null],[17,"G_CHECKSUM_SHA256","","",null,null],[17,"G_CHECKSUM_SHA512","","",null,null],[17,"G_CONVERT_ERROR_NO_CONVERSION","","",null,null],[17,"G_CONVERT_ERROR_ILLEGAL_SEQUENCE","","",null,null],[17,"G_CONVERT_ERROR_FAILED","","",null,null],[17,"G_CONVERT_ERROR_PARTIAL_INPUT","","",null,null],[17,"G_CONVERT_ERROR_BAD_URI","","",null,null],[17,"G_CONVERT_ERROR_NOT_ABSOLUTE_PATH","","",null,null],[17,"G_CONVERT_ERROR_NO_MEMORY","","",null,null],[17,"G_DATE_DAY","","",null,null],[17,"G_DATE_MONTH","","",null,null],[17,"G_DATE_YEAR","","",null,null],[17,"G_DATE_BAD_MONTH","","",null,null],[17,"G_DATE_JANUARY","","",null,null],[17,"G_DATE_FEBRUARY","","",null,null],[17,"G_DATE_MARCH","","",null,null],[17,"G_DATE_APRIL","","",null,null],[17,"G_DATE_MAY","","",null,null],[17,"G_DATE_JUNE","","",null,null],[17,"G_DATE_JULY","","",null,null],[17,"G_DATE_AUGUST","","",null,null],[17,"G_DATE_SEPTEMBER","","",null,null],[17,"G_DATE_OCTOBER","","",null,null],[17,"G_DATE_NOVEMBER","","",null,null],[17,"G_DATE_DECEMBER","","",null,null],[17,"G_DATE_BAD_WEEKDAY","","",null,null],[17,"G_DATE_MONDAY","","",null,null],[17,"G_DATE_TUESDAY","","",null,null],[17,"G_DATE_WEDNESDAY","","",null,null],[17,"G_DATE_THURSDAY","","",null,null],[17,"G_DATE_FRIDAY","","",null,null],[17,"G_DATE_SATURDAY","","",null,null],[17,"G_DATE_SUNDAY","","",null,null],[17,"G_ERR_UNKNOWN","","",null,null],[17,"G_ERR_UNEXP_EOF","","",null,null],[17,"G_ERR_UNEXP_EOF_IN_STRING","","",null,null],[17,"G_ERR_UNEXP_EOF_IN_COMMENT","","",null,null],[17,"G_ERR_NON_DIGIT_IN_CONST","","",null,null],[17,"G_ERR_DIGIT_RADIX","","",null,null],[17,"G_ERR_FLOAT_RADIX","","",null,null],[17,"G_ERR_FLOAT_MALFORMED","","",null,null],[17,"G_FILE_ERROR_EXIST","","",null,null],[17,"G_FILE_ERROR_ISDIR","","",null,null],[17,"G_FILE_ERROR_ACCES","","",null,null],[17,"G_FILE_ERROR_NAMETOOLONG","","",null,null],[17,"G_FILE_ERROR_NOENT","","",null,null],[17,"G_FILE_ERROR_NOTDIR","","",null,null],[17,"G_FILE_ERROR_NXIO","","",null,null],[17,"G_FILE_ERROR_NODEV","","",null,null],[17,"G_FILE_ERROR_ROFS","","",null,null],[17,"G_FILE_ERROR_TXTBSY","","",null,null],[17,"G_FILE_ERROR_FAULT","","",null,null],[17,"G_FILE_ERROR_LOOP","","",null,null],[17,"G_FILE_ERROR_NOSPC","","",null,null],[17,"G_FILE_ERROR_NOMEM","","",null,null],[17,"G_FILE_ERROR_MFILE","","",null,null],[17,"G_FILE_ERROR_NFILE","","",null,null],[17,"G_FILE_ERROR_BADF","","",null,null],[17,"G_FILE_ERROR_INVAL","","",null,null],[17,"G_FILE_ERROR_PIPE","","",null,null],[17,"G_FILE_ERROR_AGAIN","","",null,null],[17,"G_FILE_ERROR_INTR","","",null,null],[17,"G_FILE_ERROR_IO","","",null,null],[17,"G_FILE_ERROR_PERM","","",null,null],[17,"G_FILE_ERROR_NOSYS","","",null,null],[17,"G_FILE_ERROR_FAILED","","",null,null],[17,"G_IO_CHANNEL_ERROR_FBIG","","",null,null],[17,"G_IO_CHANNEL_ERROR_INVAL","","",null,null],[17,"G_IO_CHANNEL_ERROR_IO","","",null,null],[17,"G_IO_CHANNEL_ERROR_ISDIR","","",null,null],[17,"G_IO_CHANNEL_ERROR_NOSPC","","",null,null],[17,"G_IO_CHANNEL_ERROR_NXIO","","",null,null],[17,"G_IO_CHANNEL_ERROR_OVERFLOW","","",null,null],[17,"G_IO_CHANNEL_ERROR_PIPE","","",null,null],[17,"G_IO_CHANNEL_ERROR_FAILED","","",null,null],[17,"G_IO_ERROR_NONE","","",null,null],[17,"G_IO_ERROR_AGAIN","","",null,null],[17,"G_IO_ERROR_INVAL","","",null,null],[17,"G_IO_ERROR_UNKNOWN","","",null,null],[17,"G_IO_STATUS_ERROR","","",null,null],[17,"G_IO_STATUS_NORMAL","","",null,null],[17,"G_IO_STATUS_EOF","","",null,null],[17,"G_IO_STATUS_AGAIN","","",null,null],[17,"G_KEY_FILE_ERROR_UNKNOWN_ENCODING","","",null,null],[17,"G_KEY_FILE_ERROR_PARSE","","",null,null],[17,"G_KEY_FILE_ERROR_NOT_FOUND","","",null,null],[17,"G_KEY_FILE_ERROR_KEY_NOT_FOUND","","",null,null],[17,"G_KEY_FILE_ERROR_GROUP_NOT_FOUND","","",null,null],[17,"G_KEY_FILE_ERROR_INVALID_VALUE","","",null,null],[17,"G_MARKUP_ERROR_BAD_UTF8","","",null,null],[17,"G_MARKUP_ERROR_EMPTY","","",null,null],[17,"G_MARKUP_ERROR_PARSE","","",null,null],[17,"G_MARKUP_ERROR_UNKNOWN_ELEMENT","","",null,null],[17,"G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE","","",null,null],[17,"G_MARKUP_ERROR_INVALID_CONTENT","","",null,null],[17,"G_MARKUP_ERROR_MISSING_ATTRIBUTE","","",null,null],[17,"G_NORMALIZE_DEFAULT","","",null,null],[17,"G_NORMALIZE_NFD","","",null,null],[17,"G_NORMALIZE_DEFAULT_COMPOSE","","",null,null],[17,"G_NORMALIZE_NFC","","",null,null],[17,"G_NORMALIZE_ALL","","",null,null],[17,"G_NORMALIZE_NFKD","","",null,null],[17,"G_NORMALIZE_ALL_COMPOSE","","",null,null],[17,"G_NORMALIZE_NFKC","","",null,null],[17,"G_ONCE_STATUS_NOTCALLED","","",null,null],[17,"G_ONCE_STATUS_PROGRESS","","",null,null],[17,"G_ONCE_STATUS_READY","","",null,null],[17,"G_OPTION_ARG_NONE","","",null,null],[17,"G_OPTION_ARG_STRING","","",null,null],[17,"G_OPTION_ARG_INT","","",null,null],[17,"G_OPTION_ARG_CALLBACK","","",null,null],[17,"G_OPTION_ARG_FILENAME","","",null,null],[17,"G_OPTION_ARG_STRING_ARRAY","","",null,null],[17,"G_OPTION_ARG_FILENAME_ARRAY","","",null,null],[17,"G_OPTION_ARG_DOUBLE","","",null,null],[17,"G_OPTION_ARG_INT64","","",null,null],[17,"G_OPTION_ERROR_UNKNOWN_OPTION","","",null,null],[17,"G_OPTION_ERROR_BAD_VALUE","","",null,null],[17,"G_OPTION_ERROR_FAILED","","",null,null],[17,"G_REGEX_ERROR_COMPILE","","",null,null],[17,"G_REGEX_ERROR_OPTIMIZE","","",null,null],[17,"G_REGEX_ERROR_REPLACE","","",null,null],[17,"G_REGEX_ERROR_MATCH","","",null,null],[17,"G_REGEX_ERROR_INTERNAL","","",null,null],[17,"G_REGEX_ERROR_STRAY_BACKSLASH","","",null,null],[17,"G_REGEX_ERROR_MISSING_CONTROL_CHAR","","",null,null],[17,"G_REGEX_ERROR_UNRECOGNIZED_ESCAPE","","",null,null],[17,"G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER","","",null,null],[17,"G_REGEX_ERROR_QUANTIFIER_TOO_BIG","","",null,null],[17,"G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS","","",null,null],[17,"G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS","","",null,null],[17,"G_REGEX_ERROR_RANGE_OUT_OF_ORDER","","",null,null],[17,"G_REGEX_ERROR_NOTHING_TO_REPEAT","","",null,null],[17,"G_REGEX_ERROR_UNRECOGNIZED_CHARACTER","","",null,null],[17,"G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS","","",null,null],[17,"G_REGEX_ERROR_UNMATCHED_PARENTHESIS","","",null,null],[17,"G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE","","",null,null],[17,"G_REGEX_ERROR_UNTERMINATED_COMMENT","","",null,null],[17,"G_REGEX_ERROR_EXPRESSION_TOO_LARGE","","",null,null],[17,"G_REGEX_ERROR_MEMORY_ERROR","","",null,null],[17,"G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND","","",null,null],[17,"G_REGEX_ERROR_MALFORMED_CONDITION","","",null,null],[17,"G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES","","",null,null],[17,"G_REGEX_ERROR_ASSERTION_EXPECTED","","",null,null],[17,"G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME","","",null,null],[17,"G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED","","",null,null],[17,"G_REGEX_ERROR_HEX_CODE_TOO_LARGE","","",null,null],[17,"G_REGEX_ERROR_INVALID_CONDITION","","",null,null],[17,"G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND","","",null,null],[17,"G_REGEX_ERROR_INFINITE_LOOP","","",null,null],[17,"G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR","","",null,null],[17,"G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME","","",null,null],[17,"G_REGEX_ERROR_MALFORMED_PROPERTY","","",null,null],[17,"G_REGEX_ERROR_UNKNOWN_PROPERTY","","",null,null],[17,"G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG","","",null,null],[17,"G_REGEX_ERROR_TOO_MANY_SUBPATTERNS","","",null,null],[17,"G_REGEX_ERROR_INVALID_OCTAL_VALUE","","",null,null],[17,"G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE","","",null,null],[17,"G_REGEX_ERROR_DEFINE_REPETION","","",null,null],[17,"G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS","","",null,null],[17,"G_REGEX_ERROR_MISSING_BACK_REFERENCE","","",null,null],[17,"G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE","","",null,null],[17,"G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN","","",null,null],[17,"G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB","","",null,null],[17,"G_REGEX_ERROR_NUMBER_TOO_BIG","","",null,null],[17,"G_REGEX_ERROR_MISSING_SUBPATTERN_NAME","","",null,null],[17,"G_REGEX_ERROR_MISSING_DIGIT","","",null,null],[17,"G_REGEX_ERROR_INVALID_DATA_CHARACTER","","",null,null],[17,"G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME","","",null,null],[17,"G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED","","",null,null],[17,"G_REGEX_ERROR_INVALID_CONTROL_CHAR","","",null,null],[17,"G_REGEX_ERROR_MISSING_NAME","","",null,null],[17,"G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS","","",null,null],[17,"G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES","","",null,null],[17,"G_REGEX_ERROR_NAME_TOO_LONG","","",null,null],[17,"G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE","","",null,null],[17,"G_SEEK_CUR","","",null,null],[17,"G_SEEK_SET","","",null,null],[17,"G_SEEK_END","","",null,null],[17,"G_SHELL_ERROR_BAD_QUOTING","","",null,null],[17,"G_SHELL_ERROR_EMPTY_STRING","","",null,null],[17,"G_SHELL_ERROR_FAILED","","",null,null],[17,"G_SLICE_CONFIG_ALWAYS_MALLOC","","",null,null],[17,"G_SLICE_CONFIG_BYPASS_MAGAZINES","","",null,null],[17,"G_SLICE_CONFIG_WORKING_SET_MSECS","","",null,null],[17,"G_SLICE_CONFIG_COLOR_INCREMENT","","",null,null],[17,"G_SLICE_CONFIG_CHUNK_SIZES","","",null,null],[17,"G_SLICE_CONFIG_CONTENTION_COUNTER","","",null,null],[17,"G_SPAWN_ERROR_FORK","","",null,null],[17,"G_SPAWN_ERROR_READ","","",null,null],[17,"G_SPAWN_ERROR_CHDIR","","",null,null],[17,"G_SPAWN_ERROR_ACCES","","",null,null],[17,"G_SPAWN_ERROR_PERM","","",null,null],[17,"G_SPAWN_ERROR_TOO_BIG","","",null,null],[17,"G_SPAWN_ERROR_2BIG","","",null,null],[17,"G_SPAWN_ERROR_NOEXEC","","",null,null],[17,"G_SPAWN_ERROR_NAMETOOLONG","","",null,null],[17,"G_SPAWN_ERROR_NOENT","","",null,null],[17,"G_SPAWN_ERROR_NOMEM","","",null,null],[17,"G_SPAWN_ERROR_NOTDIR","","",null,null],[17,"G_SPAWN_ERROR_LOOP","","",null,null],[17,"G_SPAWN_ERROR_TXTBUSY","","",null,null],[17,"G_SPAWN_ERROR_IO","","",null,null],[17,"G_SPAWN_ERROR_NFILE","","",null,null],[17,"G_SPAWN_ERROR_MFILE","","",null,null],[17,"G_SPAWN_ERROR_INVAL","","",null,null],[17,"G_SPAWN_ERROR_ISDIR","","",null,null],[17,"G_SPAWN_ERROR_LIBBAD","","",null,null],[17,"G_SPAWN_ERROR_FAILED","","",null,null],[17,"G_TEST_DIST","","",null,null],[17,"G_TEST_BUILT","","",null,null],[17,"G_TEST_LOG_NONE","","",null,null],[17,"G_TEST_LOG_ERROR","","",null,null],[17,"G_TEST_LOG_START_BINARY","","",null,null],[17,"G_TEST_LOG_LIST_CASE","","",null,null],[17,"G_TEST_LOG_SKIP_CASE","","",null,null],[17,"G_TEST_LOG_START_CASE","","",null,null],[17,"G_TEST_LOG_STOP_CASE","","",null,null],[17,"G_TEST_LOG_MIN_RESULT","","",null,null],[17,"G_TEST_LOG_MAX_RESULT","","",null,null],[17,"G_TEST_LOG_MESSAGE","","",null,null],[17,"G_TEST_LOG_START_SUITE","","",null,null],[17,"G_TEST_LOG_STOP_SUITE","","",null,null],[17,"G_THREAD_ERROR_AGAIN","","",null,null],[17,"G_TIME_TYPE_STANDARD","","",null,null],[17,"G_TIME_TYPE_DAYLIGHT","","",null,null],[17,"G_TIME_TYPE_UNIVERSAL","","",null,null],[17,"G_TOKEN_EOF","","",null,null],[17,"G_TOKEN_LEFT_PAREN","","",null,null],[17,"G_TOKEN_RIGHT_PAREN","","",null,null],[17,"G_TOKEN_LEFT_CURLY","","",null,null],[17,"G_TOKEN_RIGHT_CURLY","","",null,null],[17,"G_TOKEN_LEFT_BRACE","","",null,null],[17,"G_TOKEN_RIGHT_BRACE","","",null,null],[17,"G_TOKEN_EQUAL_SIGN","","",null,null],[17,"G_TOKEN_COMMA","","",null,null],[17,"G_TOKEN_NONE","","",null,null],[17,"G_TOKEN_ERROR","","",null,null],[17,"G_TOKEN_CHAR","","",null,null],[17,"G_TOKEN_BINARY","","",null,null],[17,"G_TOKEN_OCTAL","","",null,null],[17,"G_TOKEN_INT","","",null,null],[17,"G_TOKEN_HEX","","",null,null],[17,"G_TOKEN_FLOAT","","",null,null],[17,"G_TOKEN_STRING","","",null,null],[17,"G_TOKEN_SYMBOL","","",null,null],[17,"G_TOKEN_IDENTIFIER","","",null,null],[17,"G_TOKEN_IDENTIFIER_NULL","","",null,null],[17,"G_TOKEN_COMMENT_SINGLE","","",null,null],[17,"G_TOKEN_COMMENT_MULTI","","",null,null],[17,"G_IN_ORDER","","",null,null],[17,"G_PRE_ORDER","","",null,null],[17,"G_POST_ORDER","","",null,null],[17,"G_LEVEL_ORDER","","",null,null],[17,"G_UNICODE_BREAK_MANDATORY","","",null,null],[17,"G_UNICODE_BREAK_CARRIAGE_RETURN","","",null,null],[17,"G_UNICODE_BREAK_LINE_FEED","","",null,null],[17,"G_UNICODE_BREAK_COMBINING_MARK","","",null,null],[17,"G_UNICODE_BREAK_SURROGATE","","",null,null],[17,"G_UNICODE_BREAK_ZERO_WIDTH_SPACE","","",null,null],[17,"G_UNICODE_BREAK_INSEPARABLE","","",null,null],[17,"G_UNICODE_BREAK_NON_BREAKING_GLUE","","",null,null],[17,"G_UNICODE_BREAK_CONTINGENT","","",null,null],[17,"G_UNICODE_BREAK_SPACE","","",null,null],[17,"G_UNICODE_BREAK_AFTER","","",null,null],[17,"G_UNICODE_BREAK_BEFORE","","",null,null],[17,"G_UNICODE_BREAK_BEFORE_AND_AFTER","","",null,null],[17,"G_UNICODE_BREAK_HYPHEN","","",null,null],[17,"G_UNICODE_BREAK_NON_STARTER","","",null,null],[17,"G_UNICODE_BREAK_OPEN_PUNCTUATION","","",null,null],[17,"G_UNICODE_BREAK_CLOSE_PUNCTUATION","","",null,null],[17,"G_UNICODE_BREAK_QUOTATION","","",null,null],[17,"G_UNICODE_BREAK_EXCLAMATION","","",null,null],[17,"G_UNICODE_BREAK_IDEOGRAPHIC","","",null,null],[17,"G_UNICODE_BREAK_NUMERIC","","",null,null],[17,"G_UNICODE_BREAK_INFIX_SEPARATOR","","",null,null],[17,"G_UNICODE_BREAK_SYMBOL","","",null,null],[17,"G_UNICODE_BREAK_ALPHABETIC","","",null,null],[17,"G_UNICODE_BREAK_PREFIX","","",null,null],[17,"G_UNICODE_BREAK_POSTFIX","","",null,null],[17,"G_UNICODE_BREAK_COMPLEX_CONTEXT","","",null,null],[17,"G_UNICODE_BREAK_AMBIGUOUS","","",null,null],[17,"G_UNICODE_BREAK_UNKNOWN","","",null,null],[17,"G_UNICODE_BREAK_NEXT_LINE","","",null,null],[17,"G_UNICODE_BREAK_WORD_JOINER","","",null,null],[17,"G_UNICODE_BREAK_HANGUL_L_JAMO","","",null,null],[17,"G_UNICODE_BREAK_HANGUL_V_JAMO","","",null,null],[17,"G_UNICODE_BREAK_HANGUL_T_JAMO","","",null,null],[17,"G_UNICODE_BREAK_HANGUL_LV_SYLLABLE","","",null,null],[17,"G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE","","",null,null],[17,"G_UNICODE_BREAK_CLOSE_PARANTHESIS","","",null,null],[17,"G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER","","",null,null],[17,"G_UNICODE_BREAK_HEBREW_LETTER","","",null,null],[17,"G_UNICODE_BREAK_REGIONAL_INDICATOR","","",null,null],[17,"G_UNICODE_SCRIPT_INVALID_CODE","","",null,null],[17,"G_UNICODE_SCRIPT_COMMON","","",null,null],[17,"G_UNICODE_SCRIPT_INHERITED","","",null,null],[17,"G_UNICODE_SCRIPT_ARABIC","","",null,null],[17,"G_UNICODE_SCRIPT_ARMENIAN","","",null,null],[17,"G_UNICODE_SCRIPT_BENGALI","","",null,null],[17,"G_UNICODE_SCRIPT_BOPOMOFO","","",null,null],[17,"G_UNICODE_SCRIPT_CHEROKEE","","",null,null],[17,"G_UNICODE_SCRIPT_COPTIC","","",null,null],[17,"G_UNICODE_SCRIPT_CYRILLIC","","",null,null],[17,"G_UNICODE_SCRIPT_DESERET","","",null,null],[17,"G_UNICODE_SCRIPT_DEVANAGARI","","",null,null],[17,"G_UNICODE_SCRIPT_ETHIOPIC","","",null,null],[17,"G_UNICODE_SCRIPT_GEORGIAN","","",null,null],[17,"G_UNICODE_SCRIPT_GOTHIC","","",null,null],[17,"G_UNICODE_SCRIPT_GREEK","","",null,null],[17,"G_UNICODE_SCRIPT_GUJARATI","","",null,null],[17,"G_UNICODE_SCRIPT_GURMUKHI","","",null,null],[17,"G_UNICODE_SCRIPT_HAN","","",null,null],[17,"G_UNICODE_SCRIPT_HANGUL","","",null,null],[17,"G_UNICODE_SCRIPT_HEBREW","","",null,null],[17,"G_UNICODE_SCRIPT_HIRAGANA","","",null,null],[17,"G_UNICODE_SCRIPT_KANNADA","","",null,null],[17,"G_UNICODE_SCRIPT_KATAKANA","","",null,null],[17,"G_UNICODE_SCRIPT_KHMER","","",null,null],[17,"G_UNICODE_SCRIPT_LAO","","",null,null],[17,"G_UNICODE_SCRIPT_LATIN","","",null,null],[17,"G_UNICODE_SCRIPT_MALAYALAM","","",null,null],[17,"G_UNICODE_SCRIPT_MONGOLIAN","","",null,null],[17,"G_UNICODE_SCRIPT_MYANMAR","","",null,null],[17,"G_UNICODE_SCRIPT_OGHAM","","",null,null],[17,"G_UNICODE_SCRIPT_OLD_ITALIC","","",null,null],[17,"G_UNICODE_SCRIPT_ORIYA","","",null,null],[17,"G_UNICODE_SCRIPT_RUNIC","","",null,null],[17,"G_UNICODE_SCRIPT_SINHALA","","",null,null],[17,"G_UNICODE_SCRIPT_SYRIAC","","",null,null],[17,"G_UNICODE_SCRIPT_TAMIL","","",null,null],[17,"G_UNICODE_SCRIPT_TELUGU","","",null,null],[17,"G_UNICODE_SCRIPT_THAANA","","",null,null],[17,"G_UNICODE_SCRIPT_THAI","","",null,null],[17,"G_UNICODE_SCRIPT_TIBETAN","","",null,null],[17,"G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL","","",null,null],[17,"G_UNICODE_SCRIPT_YI","","",null,null],[17,"G_UNICODE_SCRIPT_TAGALOG","","",null,null],[17,"G_UNICODE_SCRIPT_HANUNOO","","",null,null],[17,"G_UNICODE_SCRIPT_BUHID","","",null,null],[17,"G_UNICODE_SCRIPT_TAGBANWA","","",null,null],[17,"G_UNICODE_SCRIPT_BRAILLE","","",null,null],[17,"G_UNICODE_SCRIPT_CYPRIOT","","",null,null],[17,"G_UNICODE_SCRIPT_LIMBU","","",null,null],[17,"G_UNICODE_SCRIPT_OSMANYA","","",null,null],[17,"G_UNICODE_SCRIPT_SHAVIAN","","",null,null],[17,"G_UNICODE_SCRIPT_LINEAR_B","","",null,null],[17,"G_UNICODE_SCRIPT_TAI_LE","","",null,null],[17,"G_UNICODE_SCRIPT_UGARITIC","","",null,null],[17,"G_UNICODE_SCRIPT_NEW_TAI_LUE","","",null,null],[17,"G_UNICODE_SCRIPT_BUGINESE","","",null,null],[17,"G_UNICODE_SCRIPT_GLAGOLITIC","","",null,null],[17,"G_UNICODE_SCRIPT_TIFINAGH","","",null,null],[17,"G_UNICODE_SCRIPT_SYLOTI_NAGRI","","",null,null],[17,"G_UNICODE_SCRIPT_OLD_PERSIAN","","",null,null],[17,"G_UNICODE_SCRIPT_KHAROSHTHI","","",null,null],[17,"G_UNICODE_SCRIPT_UNKNOWN","","",null,null],[17,"G_UNICODE_SCRIPT_BALINESE","","",null,null],[17,"G_UNICODE_SCRIPT_CUNEIFORM","","",null,null],[17,"G_UNICODE_SCRIPT_PHOENICIAN","","",null,null],[17,"G_UNICODE_SCRIPT_PHAGS_PA","","",null,null],[17,"G_UNICODE_SCRIPT_NKO","","",null,null],[17,"G_UNICODE_SCRIPT_KAYAH_LI","","",null,null],[17,"G_UNICODE_SCRIPT_LEPCHA","","",null,null],[17,"G_UNICODE_SCRIPT_REJANG","","",null,null],[17,"G_UNICODE_SCRIPT_SUNDANESE","","",null,null],[17,"G_UNICODE_SCRIPT_SAURASHTRA","","",null,null],[17,"G_UNICODE_SCRIPT_CHAM","","",null,null],[17,"G_UNICODE_SCRIPT_OL_CHIKI","","",null,null],[17,"G_UNICODE_SCRIPT_VAI","","",null,null],[17,"G_UNICODE_SCRIPT_CARIAN","","",null,null],[17,"G_UNICODE_SCRIPT_LYCIAN","","",null,null],[17,"G_UNICODE_SCRIPT_LYDIAN","","",null,null],[17,"G_UNICODE_SCRIPT_AVESTAN","","",null,null],[17,"G_UNICODE_SCRIPT_BAMUM","","",null,null],[17,"G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS","","",null,null],[17,"G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC","","",null,null],[17,"G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI","","",null,null],[17,"G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN","","",null,null],[17,"G_UNICODE_SCRIPT_JAVANESE","","",null,null],[17,"G_UNICODE_SCRIPT_KAITHI","","",null,null],[17,"G_UNICODE_SCRIPT_LISU","","",null,null],[17,"G_UNICODE_SCRIPT_MEETEI_MAYEK","","",null,null],[17,"G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN","","",null,null],[17,"G_UNICODE_SCRIPT_OLD_TURKIC","","",null,null],[17,"G_UNICODE_SCRIPT_SAMARITAN","","",null,null],[17,"G_UNICODE_SCRIPT_TAI_THAM","","",null,null],[17,"G_UNICODE_SCRIPT_TAI_VIET","","",null,null],[17,"G_UNICODE_SCRIPT_BATAK","","",null,null],[17,"G_UNICODE_SCRIPT_BRAHMI","","",null,null],[17,"G_UNICODE_SCRIPT_MANDAIC","","",null,null],[17,"G_UNICODE_SCRIPT_CHAKMA","","",null,null],[17,"G_UNICODE_SCRIPT_MEROITIC_CURSIVE","","",null,null],[17,"G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS","","",null,null],[17,"G_UNICODE_SCRIPT_MIAO","","",null,null],[17,"G_UNICODE_SCRIPT_SHARADA","","",null,null],[17,"G_UNICODE_SCRIPT_SORA_SOMPENG","","",null,null],[17,"G_UNICODE_SCRIPT_TAKRI","","",null,null],[17,"G_UNICODE_SCRIPT_BASSA_VAH","","",null,null],[17,"G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN","","",null,null],[17,"G_UNICODE_SCRIPT_DUPLOYAN","","",null,null],[17,"G_UNICODE_SCRIPT_ELBASAN","","",null,null],[17,"G_UNICODE_SCRIPT_GRANTHA","","",null,null],[17,"G_UNICODE_SCRIPT_KHOJKI","","",null,null],[17,"G_UNICODE_SCRIPT_KHUDAWADI","","",null,null],[17,"G_UNICODE_SCRIPT_LINEAR_A","","",null,null],[17,"G_UNICODE_SCRIPT_MAHAJANI","","",null,null],[17,"G_UNICODE_SCRIPT_MANICHAEAN","","",null,null],[17,"G_UNICODE_SCRIPT_MENDE_KIKAKUI","","",null,null],[17,"G_UNICODE_SCRIPT_MODI","","",null,null],[17,"G_UNICODE_SCRIPT_MRO","","",null,null],[17,"G_UNICODE_SCRIPT_NABATAEAN","","",null,null],[17,"G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN","","",null,null],[17,"G_UNICODE_SCRIPT_OLD_PERMIC","","",null,null],[17,"G_UNICODE_SCRIPT_PAHAWH_HMONG","","",null,null],[17,"G_UNICODE_SCRIPT_PALMYRENE","","",null,null],[17,"G_UNICODE_SCRIPT_PAU_CIN_HAU","","",null,null],[17,"G_UNICODE_SCRIPT_PSALTER_PAHLAVI","","",null,null],[17,"G_UNICODE_SCRIPT_SIDDHAM","","",null,null],[17,"G_UNICODE_SCRIPT_TIRHUTA","","",null,null],[17,"G_UNICODE_SCRIPT_WARANG_CITI","","",null,null],[17,"G_UNICODE_CONTROL","","",null,null],[17,"G_UNICODE_FORMAT","","",null,null],[17,"G_UNICODE_UNASSIGNED","","",null,null],[17,"G_UNICODE_PRIVATE_USE","","",null,null],[17,"G_UNICODE_SURROGATE","","",null,null],[17,"G_UNICODE_LOWERCASE_LETTER","","",null,null],[17,"G_UNICODE_MODIFIER_LETTER","","",null,null],[17,"G_UNICODE_OTHER_LETTER","","",null,null],[17,"G_UNICODE_TITLECASE_LETTER","","",null,null],[17,"G_UNICODE_UPPERCASE_LETTER","","",null,null],[17,"G_UNICODE_SPACING_MARK","","",null,null],[17,"G_UNICODE_ENCLOSING_MARK","","",null,null],[17,"G_UNICODE_NON_SPACING_MARK","","",null,null],[17,"G_UNICODE_DECIMAL_NUMBER","","",null,null],[17,"G_UNICODE_LETTER_NUMBER","","",null,null],[17,"G_UNICODE_OTHER_NUMBER","","",null,null],[17,"G_UNICODE_CONNECT_PUNCTUATION","","",null,null],[17,"G_UNICODE_DASH_PUNCTUATION","","",null,null],[17,"G_UNICODE_CLOSE_PUNCTUATION","","",null,null],[17,"G_UNICODE_FINAL_PUNCTUATION","","",null,null],[17,"G_UNICODE_INITIAL_PUNCTUATION","","",null,null],[17,"G_UNICODE_OTHER_PUNCTUATION","","",null,null],[17,"G_UNICODE_OPEN_PUNCTUATION","","",null,null],[17,"G_UNICODE_CURRENCY_SYMBOL","","",null,null],[17,"G_UNICODE_MODIFIER_SYMBOL","","",null,null],[17,"G_UNICODE_MATH_SYMBOL","","",null,null],[17,"G_UNICODE_OTHER_SYMBOL","","",null,null],[17,"G_UNICODE_LINE_SEPARATOR","","",null,null],[17,"G_UNICODE_PARAGRAPH_SEPARATOR","","",null,null],[17,"G_UNICODE_SPACE_SEPARATOR","","",null,null],[17,"G_USER_DIRECTORY_DESKTOP","","",null,null],[17,"G_USER_DIRECTORY_DOCUMENTS","","",null,null],[17,"G_USER_DIRECTORY_DOWNLOAD","","",null,null],[17,"G_USER_DIRECTORY_MUSIC","","",null,null],[17,"G_USER_DIRECTORY_PICTURES","","",null,null],[17,"G_USER_DIRECTORY_PUBLIC_SHARE","","",null,null],[17,"G_USER_DIRECTORY_TEMPLATES","","",null,null],[17,"G_USER_DIRECTORY_VIDEOS","","",null,null],[17,"G_USER_N_DIRECTORIES","","",null,null],[17,"G_VARIANT_CLASS_BOOLEAN","","",null,null],[17,"G_VARIANT_CLASS_BYTE","","",null,null],[17,"G_VARIANT_CLASS_INT16","","",null,null],[17,"G_VARIANT_CLASS_UINT16","","",null,null],[17,"G_VARIANT_CLASS_INT32","","",null,null],[17,"G_VARIANT_CLASS_UINT32","","",null,null],[17,"G_VARIANT_CLASS_INT64","","",null,null],[17,"G_VARIANT_CLASS_UINT64","","",null,null],[17,"G_VARIANT_CLASS_HANDLE","","",null,null],[17,"G_VARIANT_CLASS_DOUBLE","","",null,null],[17,"G_VARIANT_CLASS_STRING","","",null,null],[17,"G_VARIANT_CLASS_OBJECT_PATH","","",null,null],[17,"G_VARIANT_CLASS_SIGNATURE","","",null,null],[17,"G_VARIANT_CLASS_VARIANT","","",null,null],[17,"G_VARIANT_CLASS_MAYBE","","",null,null],[17,"G_VARIANT_CLASS_ARRAY","","",null,null],[17,"G_VARIANT_CLASS_TUPLE","","",null,null],[17,"G_VARIANT_CLASS_DICT_ENTRY","","",null,null],[17,"G_VARIANT_PARSE_ERROR_FAILED","","",null,null],[17,"G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED","","",null,null],[17,"G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE","","",null,null],[17,"G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED","","",null,null],[17,"G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END","","",null,null],[17,"G_VARIANT_PARSE_ERROR_INVALID_CHARACTER","","",null,null],[17,"G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING","","",null,null],[17,"G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH","","",null,null],[17,"G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE","","",null,null],[17,"G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING","","",null,null],[17,"G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE","","",null,null],[17,"G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE","","",null,null],[17,"G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG","","",null,null],[17,"G_VARIANT_PARSE_ERROR_TYPE_ERROR","","",null,null],[17,"G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN","","",null,null],[17,"G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD","","",null,null],[17,"G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT","","",null,null],[17,"G_VARIANT_PARSE_ERROR_VALUE_EXPECTED","","",null,null],[17,"G_ANALYZER_ANALYZING","","",null,null],[17,"G_ASCII_DTOSTR_BUF_SIZE","","",null,null],[17,"G_BIG_ENDIAN","","",null,null],[17,"G_CAN_INLINE","","",null,null],[17,"G_CSET_A_2_Z","","",null,null],[17,"G_CSET_DIGITS","","",null,null],[17,"G_CSET_a_2_z","","",null,null],[17,"G_DATALIST_FLAGS_MASK","","",null,null],[17,"G_DATE_BAD_DAY","","",null,null],[17,"G_DATE_BAD_JULIAN","","",null,null],[17,"G_DATE_BAD_YEAR","","",null,null],[17,"G_DIR_SEPARATOR","","",null,null],[17,"G_DIR_SEPARATOR_S","","",null,null],[17,"G_E","","",null,null],[17,"G_GINT16_FORMAT","","",null,null],[17,"G_GINT16_MODIFIER","","",null,null],[17,"G_GINT32_FORMAT","","",null,null],[17,"G_GINT32_MODIFIER","","",null,null],[17,"G_GNUC_FUNCTION","","",null,null],[17,"G_GNUC_PRETTY_FUNCTION","","",null,null],[17,"G_GUINT16_FORMAT","","",null,null],[17,"G_GUINT32_FORMAT","","",null,null],[17,"G_HAVE_GINT64","","",null,null],[17,"G_HAVE_GNUC_VARARGS","","",null,null],[17,"G_HAVE_GNUC_VISIBILITY","","",null,null],[17,"G_HAVE_GROWING_STACK","","",null,null],[17,"G_HAVE_INLINE","","",null,null],[17,"G_HAVE_ISO_VARARGS","","",null,null],[17,"G_HAVE___INLINE","","",null,null],[17,"G_HAVE___INLINE__","","",null,null],[17,"G_HOOK_FLAG_USER_SHIFT","","",null,null],[17,"G_IEEE754_DOUBLE_BIAS","","",null,null],[17,"G_IEEE754_FLOAT_BIAS","","",null,null],[17,"G_KEY_FILE_DESKTOP_GROUP","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_ACTIONS","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_CATEGORIES","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_COMMENT","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_EXEC","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_FULLNAME","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_HIDDEN","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_ICON","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_KEYWORDS","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_MIME_TYPE","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_NAME","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_PATH","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_TERMINAL","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_TRY_EXEC","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_TYPE","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_URL","","",null,null],[17,"G_KEY_FILE_DESKTOP_KEY_VERSION","","",null,null],[17,"G_KEY_FILE_DESKTOP_TYPE_APPLICATION","","",null,null],[17,"G_KEY_FILE_DESKTOP_TYPE_DIRECTORY","","",null,null],[17,"G_KEY_FILE_DESKTOP_TYPE_LINK","","",null,null],[17,"G_LITTLE_ENDIAN","","",null,null],[17,"G_LN10","","",null,null],[17,"G_LN2","","",null,null],[17,"G_LOG_2_BASE_10","","",null,null],[17,"G_LOG_FATAL_MASK","","",null,null],[17,"G_LOG_LEVEL_USER_SHIFT","","",null,null],[17,"GLIB_MAJOR_VERSION","","",null,null],[17,"G_MAXINT16","","",null,null],[17,"G_MAXINT32","","",null,null],[17,"G_MAXINT64","","",null,null],[17,"G_MAXINT8","","",null,null],[17,"G_MAXUINT16","","",null,null],[17,"G_MAXUINT32","","",null,null],[17,"G_MAXUINT64","","",null,null],[17,"G_MAXUINT8","","",null,null],[17,"GLIB_MICRO_VERSION","","",null,null],[17,"G_MININT64","","",null,null],[17,"GLIB_MINOR_VERSION","","",null,null],[17,"G_MODULE_SUFFIX","","",null,null],[17,"G_OPTION_REMAINING","","",null,null],[17,"G_PDP_ENDIAN","","",null,null],[17,"G_PI","","",null,null],[17,"G_PI_2","","",null,null],[17,"G_PI_4","","",null,null],[17,"G_POLLFD_FORMAT","","",null,null],[17,"G_PRIORITY_DEFAULT","","",null,null],[17,"G_PRIORITY_DEFAULT_IDLE","","",null,null],[17,"G_PRIORITY_HIGH","","",null,null],[17,"G_PRIORITY_HIGH_IDLE","","",null,null],[17,"G_PRIORITY_LOW","","",null,null],[17,"G_SEARCHPATH_SEPARATOR","","",null,null],[17,"G_SEARCHPATH_SEPARATOR_S","","",null,null],[17,"G_SOURCE_CONTINUE","","",null,null],[17,"G_SOURCE_REMOVE","","",null,null],[17,"G_SQRT2","","",null,null],[17,"G_STR_DELIMITERS","","",null,null],[17,"GLIB_SYSDEF_AF_INET","","",null,null],[17,"GLIB_SYSDEF_AF_INET6","","",null,null],[17,"GLIB_SYSDEF_AF_UNIX","","",null,null],[17,"GLIB_SYSDEF_MSG_DONTROUTE","","",null,null],[17,"GLIB_SYSDEF_MSG_OOB","","",null,null],[17,"GLIB_SYSDEF_MSG_PEEK","","",null,null],[17,"G_TIME_SPAN_DAY","","",null,null],[17,"G_TIME_SPAN_HOUR","","",null,null],[17,"G_TIME_SPAN_MILLISECOND","","",null,null],[17,"G_TIME_SPAN_MINUTE","","",null,null],[17,"G_TIME_SPAN_SECOND","","",null,null],[17,"G_UNICHAR_MAX_DECOMPOSITION_LENGTH","","",null,null],[17,"G_URI_RESERVED_CHARS_GENERIC_DELIMITERS","","",null,null],[17,"G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS","","",null,null],[17,"G_USEC_PER_SEC","","",null,null],[17,"GLIB_VERSION_MIN_REQUIRED","","",null,null],[17,"G_WIN32_MSG_HANDLE","","",null,null],[17,"G_ASCII_ALNUM","","",null,null],[17,"G_ASCII_ALPHA","","",null,null],[17,"G_ASCII_CNTRL","","",null,null],[17,"G_ASCII_DIGIT","","",null,null],[17,"G_ASCII_GRAPH","","",null,null],[17,"G_ASCII_LOWER","","",null,null],[17,"G_ASCII_PRINT","","",null,null],[17,"G_ASCII_PUNCT","","",null,null],[17,"G_ASCII_SPACE","","",null,null],[17,"G_ASCII_UPPER","","",null,null],[17,"G_ASCII_XDIGIT","","",null,null],[17,"G_FILE_TEST_IS_REGULAR","","",null,null],[17,"G_FILE_TEST_IS_SYMLINK","","",null,null],[17,"G_FILE_TEST_IS_DIR","","",null,null],[17,"G_FILE_TEST_IS_EXECUTABLE","","",null,null],[17,"G_FILE_TEST_EXISTS","","",null,null],[17,"G_FORMAT_SIZE_DEFAULT","","",null,null],[17,"G_FORMAT_SIZE_LONG_FORMAT","","",null,null],[17,"G_FORMAT_SIZE_IEC_UNITS","","",null,null],[17,"G_HOOK_FLAG_ACTIVE","","",null,null],[17,"G_HOOK_FLAG_IN_CALL","","",null,null],[17,"G_HOOK_FLAG_MASK","","",null,null],[17,"G_IO_IN","","",null,null],[17,"G_IO_OUT","","",null,null],[17,"G_IO_PRI","","",null,null],[17,"G_IO_ERR","","",null,null],[17,"G_IO_HUP","","",null,null],[17,"G_IO_NVAL","","",null,null],[17,"G_IO_FLAG_APPEND","","",null,null],[17,"G_IO_FLAG_NONBLOCK","","",null,null],[17,"G_IO_FLAG_IS_READABLE","","",null,null],[17,"G_IO_FLAG_IS_WRITABLE","","",null,null],[17,"G_IO_FLAG_IS_WRITEABLE","","",null,null],[17,"G_IO_FLAG_IS_SEEKABLE","","",null,null],[17,"G_IO_FLAG_MASK","","",null,null],[17,"G_IO_FLAG_GET_MASK","","",null,null],[17,"G_IO_FLAG_SET_MASK","","",null,null],[17,"G_KEY_FILE_NONE","","",null,null],[17,"G_KEY_FILE_KEEP_COMMENTS","","",null,null],[17,"G_KEY_FILE_KEEP_TRANSLATIONS","","",null,null],[17,"G_LOG_FLAG_RECURSION","","",null,null],[17,"G_LOG_FLAG_FATAL","","",null,null],[17,"G_LOG_LEVEL_ERROR","","",null,null],[17,"G_LOG_LEVEL_CRITICAL","","",null,null],[17,"G_LOG_LEVEL_WARNING","","",null,null],[17,"G_LOG_LEVEL_MESSAGE","","",null,null],[17,"G_LOG_LEVEL_INFO","","",null,null],[17,"G_LOG_LEVEL_DEBUG","","",null,null],[17,"G_LOG_LEVEL_MASK","","",null,null],[17,"G_MARKUP_COLLECT_INVALID","","",null,null],[17,"G_MARKUP_COLLECT_STRING","","",null,null],[17,"G_MARKUP_COLLECT_STRDUP","","",null,null],[17,"G_MARKUP_COLLECT_BOOLEAN","","",null,null],[17,"G_MARKUP_COLLECT_TRISTATE","","",null,null],[17,"G_MARKUP_COLLECT_OPTIONAL","","",null,null],[17,"G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG","","",null,null],[17,"G_MARKUP_TREAT_CDATA_AS_TEXT","","",null,null],[17,"G_MARKUP_PREFIX_ERROR_POSITION","","",null,null],[17,"G_MARKUP_IGNORE_QUALIFIED","","",null,null],[17,"G_OPTION_FLAG_NONE","","",null,null],[17,"G_OPTION_FLAG_HIDDEN","","",null,null],[17,"G_OPTION_FLAG_IN_MAIN","","",null,null],[17,"G_OPTION_FLAG_REVERSE","","",null,null],[17,"G_OPTION_FLAG_NO_ARG","","",null,null],[17,"G_OPTION_FLAG_FILENAME","","",null,null],[17,"G_OPTION_FLAG_OPTIONAL_ARG","","",null,null],[17,"G_OPTION_FLAG_NOALIAS","","",null,null],[17,"G_REGEX_CASELESS","","",null,null],[17,"G_REGEX_MULTILINE","","",null,null],[17,"G_REGEX_DOTALL","","",null,null],[17,"G_REGEX_EXTENDED","","",null,null],[17,"G_REGEX_ANCHORED","","",null,null],[17,"G_REGEX_DOLLAR_ENDONLY","","",null,null],[17,"G_REGEX_UNGREEDY","","",null,null],[17,"G_REGEX_RAW","","",null,null],[17,"G_REGEX_NO_AUTO_CAPTURE","","",null,null],[17,"G_REGEX_OPTIMIZE","","",null,null],[17,"G_REGEX_FIRSTLINE","","",null,null],[17,"G_REGEX_DUPNAMES","","",null,null],[17,"G_REGEX_NEWLINE_CR","","",null,null],[17,"G_REGEX_NEWLINE_LF","","",null,null],[17,"G_REGEX_NEWLINE_CRLF","","",null,null],[17,"G_REGEX_NEWLINE_ANYCRLF","","",null,null],[17,"G_REGEX_BSR_ANYCRLF","","",null,null],[17,"G_REGEX_JAVASCRIPT_COMPAT","","",null,null],[17,"G_REGEX_MATCH_ANCHORED","","",null,null],[17,"G_REGEX_MATCH_NOTBOL","","",null,null],[17,"G_REGEX_MATCH_NOTEOL","","",null,null],[17,"G_REGEX_MATCH_NOTEMPTY","","",null,null],[17,"G_REGEX_MATCH_PARTIAL","","",null,null],[17,"G_REGEX_MATCH_NEWLINE_CR","","",null,null],[17,"G_REGEX_MATCH_NEWLINE_LF","","",null,null],[17,"G_REGEX_MATCH_NEWLINE_CRLF","","",null,null],[17,"G_REGEX_MATCH_NEWLINE_ANY","","",null,null],[17,"G_REGEX_MATCH_NEWLINE_ANYCRLF","","",null,null],[17,"G_REGEX_MATCH_BSR_ANYCRLF","","",null,null],[17,"G_REGEX_MATCH_BSR_ANY","","",null,null],[17,"G_REGEX_MATCH_PARTIAL_SOFT","","",null,null],[17,"G_REGEX_MATCH_PARTIAL_HARD","","",null,null],[17,"G_REGEX_MATCH_NOTEMPTY_ATSTART","","",null,null],[17,"G_SPAWN_DEFAULT","","",null,null],[17,"G_SPAWN_LEAVE_DESCRIPTORS_OPEN","","",null,null],[17,"G_SPAWN_DO_NOT_REAP_CHILD","","",null,null],[17,"G_SPAWN_SEARCH_PATH","","",null,null],[17,"G_SPAWN_STDOUT_TO_DEV_NULL","","",null,null],[17,"G_SPAWN_STDERR_TO_DEV_NULL","","",null,null],[17,"G_SPAWN_CHILD_INHERITS_STDIN","","",null,null],[17,"G_SPAWN_FILE_AND_ARGV_ZERO","","",null,null],[17,"G_SPAWN_SEARCH_PATH_FROM_ENVP","","",null,null],[17,"G_SPAWN_CLOEXEC_PIPES","","",null,null],[17,"G_TEST_SUBPROCESS_INHERIT_STDIN","","",null,null],[17,"G_TEST_SUBPROCESS_INHERIT_STDOUT","","",null,null],[17,"G_TEST_SUBPROCESS_INHERIT_STDERR","","",null,null],[17,"G_TEST_TRAP_SILENCE_STDOUT","","",null,null],[17,"G_TEST_TRAP_SILENCE_STDERR","","",null,null],[17,"G_TEST_TRAP_INHERIT_STDIN","","",null,null],[17,"G_TRAVERSE_LEAVES","","",null,null],[17,"G_TRAVERSE_NON_LEAVES","","",null,null],[17,"G_TRAVERSE_ALL","","",null,null],[17,"G_TRAVERSE_MASK","","",null,null],[17,"G_TRAVERSE_LEAFS","","",null,null],[17,"G_TRAVERSE_NON_LEAFS","","",null,null],[11,"eq","","",27,{"inputs":[{"name":"gbookmarkfileerror"},{"name":"gbookmarkfileerror"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"gbookmarkfileerror"},{"name":"gbookmarkfileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",27,{"inputs":[{"name":"gbookmarkfileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",27,{"inputs":[{"name":"gbookmarkfileerror"}],"output":{"name":"gbookmarkfileerror"}}],[11,"eq","","",28,{"inputs":[{"name":"gchecksumtype"},{"name":"gchecksumtype"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"gchecksumtype"},{"name":"gchecksumtype"}],"output":{"name":"bool"}}],[11,"fmt","","",28,{"inputs":[{"name":"gchecksumtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",28,{"inputs":[{"name":"gchecksumtype"}],"output":{"name":"gchecksumtype"}}],[11,"eq","","",29,{"inputs":[{"name":"gconverterror"},{"name":"gconverterror"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"gconverterror"},{"name":"gconverterror"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"gconverterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"gconverterror"}],"output":{"name":"gconverterror"}}],[11,"eq","","",30,{"inputs":[{"name":"gdatedmy"},{"name":"gdatedmy"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"gdatedmy"},{"name":"gdatedmy"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"gdatedmy"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"gdatedmy"}],"output":{"name":"gdatedmy"}}],[11,"eq","","",31,{"inputs":[{"name":"gdatemonth"},{"name":"gdatemonth"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"gdatemonth"},{"name":"gdatemonth"}],"output":{"name":"bool"}}],[11,"fmt","","",31,{"inputs":[{"name":"gdatemonth"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",31,{"inputs":[{"name":"gdatemonth"}],"output":{"name":"gdatemonth"}}],[11,"eq","","",32,{"inputs":[{"name":"gdateweekday"},{"name":"gdateweekday"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"gdateweekday"},{"name":"gdateweekday"}],"output":{"name":"bool"}}],[11,"fmt","","",32,{"inputs":[{"name":"gdateweekday"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",32,{"inputs":[{"name":"gdateweekday"}],"output":{"name":"gdateweekday"}}],[11,"eq","","",33,{"inputs":[{"name":"gerrortype"},{"name":"gerrortype"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"gerrortype"},{"name":"gerrortype"}],"output":{"name":"bool"}}],[11,"fmt","","",33,{"inputs":[{"name":"gerrortype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",33,{"inputs":[{"name":"gerrortype"}],"output":{"name":"gerrortype"}}],[11,"eq","","",34,{"inputs":[{"name":"gfileerror"},{"name":"gfileerror"}],"output":{"name":"bool"}}],[11,"ne","","",34,{"inputs":[{"name":"gfileerror"},{"name":"gfileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",34,{"inputs":[{"name":"gfileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",34,{"inputs":[{"name":"gfileerror"}],"output":{"name":"gfileerror"}}],[11,"eq","","",35,{"inputs":[{"name":"giochannelerror"},{"name":"giochannelerror"}],"output":{"name":"bool"}}],[11,"ne","","",35,{"inputs":[{"name":"giochannelerror"},{"name":"giochannelerror"}],"output":{"name":"bool"}}],[11,"fmt","","",35,{"inputs":[{"name":"giochannelerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",35,{"inputs":[{"name":"giochannelerror"}],"output":{"name":"giochannelerror"}}],[11,"eq","","",36,{"inputs":[{"name":"gioerror"},{"name":"gioerror"}],"output":{"name":"bool"}}],[11,"ne","","",36,{"inputs":[{"name":"gioerror"},{"name":"gioerror"}],"output":{"name":"bool"}}],[11,"fmt","","",36,{"inputs":[{"name":"gioerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",36,{"inputs":[{"name":"gioerror"}],"output":{"name":"gioerror"}}],[11,"eq","","",37,{"inputs":[{"name":"giostatus"},{"name":"giostatus"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"giostatus"},{"name":"giostatus"}],"output":{"name":"bool"}}],[11,"fmt","","",37,{"inputs":[{"name":"giostatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",37,{"inputs":[{"name":"giostatus"}],"output":{"name":"giostatus"}}],[11,"eq","","",38,{"inputs":[{"name":"gkeyfileerror"},{"name":"gkeyfileerror"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"gkeyfileerror"},{"name":"gkeyfileerror"}],"output":{"name":"bool"}}],[11,"fmt","","",38,{"inputs":[{"name":"gkeyfileerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",38,{"inputs":[{"name":"gkeyfileerror"}],"output":{"name":"gkeyfileerror"}}],[11,"eq","","",39,{"inputs":[{"name":"gmarkuperror"},{"name":"gmarkuperror"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"gmarkuperror"},{"name":"gmarkuperror"}],"output":{"name":"bool"}}],[11,"fmt","","",39,{"inputs":[{"name":"gmarkuperror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",39,{"inputs":[{"name":"gmarkuperror"}],"output":{"name":"gmarkuperror"}}],[11,"eq","","",40,{"inputs":[{"name":"gnormalizemode"},{"name":"gnormalizemode"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"gnormalizemode"},{"name":"gnormalizemode"}],"output":{"name":"bool"}}],[11,"fmt","","",40,{"inputs":[{"name":"gnormalizemode"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",40,{"inputs":[{"name":"gnormalizemode"}],"output":{"name":"gnormalizemode"}}],[11,"eq","","",41,{"inputs":[{"name":"goncestatus"},{"name":"goncestatus"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"goncestatus"},{"name":"goncestatus"}],"output":{"name":"bool"}}],[11,"fmt","","",41,{"inputs":[{"name":"goncestatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",41,{"inputs":[{"name":"goncestatus"}],"output":{"name":"goncestatus"}}],[11,"eq","","",42,{"inputs":[{"name":"goptionarg"},{"name":"goptionarg"}],"output":{"name":"bool"}}],[11,"ne","","",42,{"inputs":[{"name":"goptionarg"},{"name":"goptionarg"}],"output":{"name":"bool"}}],[11,"fmt","","",42,{"inputs":[{"name":"goptionarg"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",42,{"inputs":[{"name":"goptionarg"}],"output":{"name":"goptionarg"}}],[11,"eq","","",43,{"inputs":[{"name":"goptionerror"},{"name":"goptionerror"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"goptionerror"},{"name":"goptionerror"}],"output":{"name":"bool"}}],[11,"fmt","","",43,{"inputs":[{"name":"goptionerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",43,{"inputs":[{"name":"goptionerror"}],"output":{"name":"goptionerror"}}],[11,"eq","","",44,{"inputs":[{"name":"gregexerror"},{"name":"gregexerror"}],"output":{"name":"bool"}}],[11,"ne","","",44,{"inputs":[{"name":"gregexerror"},{"name":"gregexerror"}],"output":{"name":"bool"}}],[11,"fmt","","",44,{"inputs":[{"name":"gregexerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",44,{"inputs":[{"name":"gregexerror"}],"output":{"name":"gregexerror"}}],[11,"eq","","",45,{"inputs":[{"name":"gseektype"},{"name":"gseektype"}],"output":{"name":"bool"}}],[11,"ne","","",45,{"inputs":[{"name":"gseektype"},{"name":"gseektype"}],"output":{"name":"bool"}}],[11,"fmt","","",45,{"inputs":[{"name":"gseektype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",45,{"inputs":[{"name":"gseektype"}],"output":{"name":"gseektype"}}],[11,"eq","","",46,{"inputs":[{"name":"gshellerror"},{"name":"gshellerror"}],"output":{"name":"bool"}}],[11,"ne","","",46,{"inputs":[{"name":"gshellerror"},{"name":"gshellerror"}],"output":{"name":"bool"}}],[11,"fmt","","",46,{"inputs":[{"name":"gshellerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",46,{"inputs":[{"name":"gshellerror"}],"output":{"name":"gshellerror"}}],[11,"eq","","",47,{"inputs":[{"name":"gsliceconfig"},{"name":"gsliceconfig"}],"output":{"name":"bool"}}],[11,"ne","","",47,{"inputs":[{"name":"gsliceconfig"},{"name":"gsliceconfig"}],"output":{"name":"bool"}}],[11,"fmt","","",47,{"inputs":[{"name":"gsliceconfig"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",47,{"inputs":[{"name":"gsliceconfig"}],"output":{"name":"gsliceconfig"}}],[11,"eq","","",48,{"inputs":[{"name":"gspawnerror"},{"name":"gspawnerror"}],"output":{"name":"bool"}}],[11,"ne","","",48,{"inputs":[{"name":"gspawnerror"},{"name":"gspawnerror"}],"output":{"name":"bool"}}],[11,"fmt","","",48,{"inputs":[{"name":"gspawnerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",48,{"inputs":[{"name":"gspawnerror"}],"output":{"name":"gspawnerror"}}],[11,"eq","","",49,{"inputs":[{"name":"gtestfiletype"},{"name":"gtestfiletype"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"gtestfiletype"},{"name":"gtestfiletype"}],"output":{"name":"bool"}}],[11,"fmt","","",49,{"inputs":[{"name":"gtestfiletype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",49,{"inputs":[{"name":"gtestfiletype"}],"output":{"name":"gtestfiletype"}}],[11,"eq","","",50,{"inputs":[{"name":"gtestlogtype"},{"name":"gtestlogtype"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"gtestlogtype"},{"name":"gtestlogtype"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"gtestlogtype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"gtestlogtype"}],"output":{"name":"gtestlogtype"}}],[11,"eq","","",51,{"inputs":[{"name":"gtimetype"},{"name":"gtimetype"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"gtimetype"},{"name":"gtimetype"}],"output":{"name":"bool"}}],[11,"fmt","","",51,{"inputs":[{"name":"gtimetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",51,{"inputs":[{"name":"gtimetype"}],"output":{"name":"gtimetype"}}],[11,"eq","","",52,{"inputs":[{"name":"gtokentype"},{"name":"gtokentype"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"gtokentype"},{"name":"gtokentype"}],"output":{"name":"bool"}}],[11,"fmt","","",52,{"inputs":[{"name":"gtokentype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",52,{"inputs":[{"name":"gtokentype"}],"output":{"name":"gtokentype"}}],[11,"eq","","",53,{"inputs":[{"name":"gtraversetype"},{"name":"gtraversetype"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"gtraversetype"},{"name":"gtraversetype"}],"output":{"name":"bool"}}],[11,"fmt","","",53,{"inputs":[{"name":"gtraversetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",53,{"inputs":[{"name":"gtraversetype"}],"output":{"name":"gtraversetype"}}],[11,"eq","","",54,{"inputs":[{"name":"gunicodebreaktype"},{"name":"gunicodebreaktype"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"gunicodebreaktype"},{"name":"gunicodebreaktype"}],"output":{"name":"bool"}}],[11,"fmt","","",54,{"inputs":[{"name":"gunicodebreaktype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",54,{"inputs":[{"name":"gunicodebreaktype"}],"output":{"name":"gunicodebreaktype"}}],[11,"eq","","",55,{"inputs":[{"name":"gunicodescript"},{"name":"gunicodescript"}],"output":{"name":"bool"}}],[11,"ne","","",55,{"inputs":[{"name":"gunicodescript"},{"name":"gunicodescript"}],"output":{"name":"bool"}}],[11,"fmt","","",55,{"inputs":[{"name":"gunicodescript"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",55,{"inputs":[{"name":"gunicodescript"}],"output":{"name":"gunicodescript"}}],[11,"eq","","",56,{"inputs":[{"name":"gunicodetype"},{"name":"gunicodetype"}],"output":{"name":"bool"}}],[11,"ne","","",56,{"inputs":[{"name":"gunicodetype"},{"name":"gunicodetype"}],"output":{"name":"bool"}}],[11,"fmt","","",56,{"inputs":[{"name":"gunicodetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",56,{"inputs":[{"name":"gunicodetype"}],"output":{"name":"gunicodetype"}}],[11,"eq","","",57,{"inputs":[{"name":"guserdirectory"},{"name":"guserdirectory"}],"output":{"name":"bool"}}],[11,"ne","","",57,{"inputs":[{"name":"guserdirectory"},{"name":"guserdirectory"}],"output":{"name":"bool"}}],[11,"fmt","","",57,{"inputs":[{"name":"guserdirectory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",57,{"inputs":[{"name":"guserdirectory"}],"output":{"name":"guserdirectory"}}],[11,"eq","","",58,{"inputs":[{"name":"gvariantclass"},{"name":"gvariantclass"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"gvariantclass"},{"name":"gvariantclass"}],"output":{"name":"bool"}}],[11,"fmt","","",58,{"inputs":[{"name":"gvariantclass"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",58,{"inputs":[{"name":"gvariantclass"}],"output":{"name":"gvariantclass"}}],[11,"eq","","",59,{"inputs":[{"name":"gvariantparseerror"},{"name":"gvariantparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"gvariantparseerror"},{"name":"gvariantparseerror"}],"output":{"name":"bool"}}],[11,"fmt","","",59,{"inputs":[{"name":"gvariantparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",59,{"inputs":[{"name":"gvariantparseerror"}],"output":{"name":"gvariantparseerror"}}],[11,"hash","","",60,null],[11,"cmp","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"option"}}],[11,"lt","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"le","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"gt","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"ge","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"eq","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"fmt","","",60,{"inputs":[{"name":"gasciitype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",60,{"inputs":[],"output":{"name":"gasciitype"}}],[11,"all","","Returns the set containing all flags.",60,{"inputs":[],"output":{"name":"gasciitype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",60,{"inputs":[{"name":"gasciitype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",60,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",60,{"inputs":[{"name":"c_uint"}],"output":{"name":"gasciitype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",60,{"inputs":[{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",60,{"inputs":[{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",60,{"inputs":[{"name":"gasciitype"},{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"not","","Returns the complement of this set of flags.",60,{"inputs":[{"name":"gasciitype"}],"output":{"name":"gasciitype"}}],[11,"from_iter","","",60,{"inputs":[{"name":"t"}],"output":{"name":"gasciitype"}}],[11,"hash","","",61,null],[11,"cmp","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"option"}}],[11,"lt","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"le","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"gt","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"ge","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"eq","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"fmt","","",61,{"inputs":[{"name":"gfiletest"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",61,{"inputs":[],"output":{"name":"gfiletest"}}],[11,"all","","Returns the set containing all flags.",61,{"inputs":[],"output":{"name":"gfiletest"}}],[11,"bits","","Returns the raw value of the flags currently stored.",61,{"inputs":[{"name":"gfiletest"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",61,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",61,{"inputs":[{"name":"c_uint"}],"output":{"name":"gfiletest"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",61,{"inputs":[{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",61,{"inputs":[{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"sub","","Returns the set difference of the two sets of flags.",61,{"inputs":[{"name":"gfiletest"},{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"not","","Returns the complement of this set of flags.",61,{"inputs":[{"name":"gfiletest"}],"output":{"name":"gfiletest"}}],[11,"from_iter","","",61,{"inputs":[{"name":"t"}],"output":{"name":"gfiletest"}}],[11,"hash","","",62,null],[11,"cmp","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"option"}}],[11,"lt","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"le","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"gt","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"ge","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"eq","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"fmt","","",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",62,{"inputs":[],"output":{"name":"gformatsizeflags"}}],[11,"all","","Returns the set containing all flags.",62,{"inputs":[],"output":{"name":"gformatsizeflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",62,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",62,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",62,{"inputs":[{"name":"c_uint"}],"output":{"name":"gformatsizeflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",62,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",62,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",62,{"inputs":[{"name":"gformatsizeflags"},{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"not","","Returns the complement of this set of flags.",62,{"inputs":[{"name":"gformatsizeflags"}],"output":{"name":"gformatsizeflags"}}],[11,"from_iter","","",62,{"inputs":[{"name":"t"}],"output":{"name":"gformatsizeflags"}}],[11,"hash","","",63,null],[11,"cmp","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"option"}}],[11,"lt","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"le","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"gt","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"ge","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"clone","","",63,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"eq","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"ne","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"fmt","","",63,{"inputs":[{"name":"ghookflagmask"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",63,{"inputs":[],"output":{"name":"ghookflagmask"}}],[11,"all","","Returns the set containing all flags.",63,{"inputs":[],"output":{"name":"ghookflagmask"}}],[11,"bits","","Returns the raw value of the flags currently stored.",63,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",63,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",63,{"inputs":[{"name":"c_uint"}],"output":{"name":"ghookflagmask"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",63,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",63,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"sub","","Returns the set difference of the two sets of flags.",63,{"inputs":[{"name":"ghookflagmask"},{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"not","","Returns the complement of this set of flags.",63,{"inputs":[{"name":"ghookflagmask"}],"output":{"name":"ghookflagmask"}}],[11,"from_iter","","",63,{"inputs":[{"name":"t"}],"output":{"name":"ghookflagmask"}}],[11,"hash","","",64,null],[11,"cmp","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"option"}}],[11,"lt","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"le","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"gt","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"ge","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"eq","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"fmt","","",64,{"inputs":[{"name":"giocondition"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",64,{"inputs":[],"output":{"name":"giocondition"}}],[11,"all","","Returns the set containing all flags.",64,{"inputs":[],"output":{"name":"giocondition"}}],[11,"bits","","Returns the raw value of the flags currently stored.",64,{"inputs":[{"name":"giocondition"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",64,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",64,{"inputs":[{"name":"c_uint"}],"output":{"name":"giocondition"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",64,{"inputs":[{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",64,{"inputs":[{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"sub","","Returns the set difference of the two sets of flags.",64,{"inputs":[{"name":"giocondition"},{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"not","","Returns the complement of this set of flags.",64,{"inputs":[{"name":"giocondition"}],"output":{"name":"giocondition"}}],[11,"from_iter","","",64,{"inputs":[{"name":"t"}],"output":{"name":"giocondition"}}],[11,"hash","","",65,null],[11,"cmp","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"option"}}],[11,"lt","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"le","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"gt","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"ge","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"clone","","",65,{"inputs":[{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"eq","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"ne","","",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"fmt","","",65,{"inputs":[{"name":"gioflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",65,{"inputs":[],"output":{"name":"gioflags"}}],[11,"all","","Returns the set containing all flags.",65,{"inputs":[],"output":{"name":"gioflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",65,{"inputs":[{"name":"gioflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",65,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",65,{"inputs":[{"name":"c_uint"}],"output":{"name":"gioflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",65,{"inputs":[{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",65,{"inputs":[{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",65,{"inputs":[{"name":"gioflags"},{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"not","","Returns the complement of this set of flags.",65,{"inputs":[{"name":"gioflags"}],"output":{"name":"gioflags"}}],[11,"from_iter","","",65,{"inputs":[{"name":"t"}],"output":{"name":"gioflags"}}],[11,"hash","","",66,null],[11,"cmp","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"option"}}],[11,"lt","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"le","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"gt","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"ge","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"clone","","",66,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"eq","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"ne","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"fmt","","",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",66,{"inputs":[],"output":{"name":"gkeyfileflags"}}],[11,"all","","Returns the set containing all flags.",66,{"inputs":[],"output":{"name":"gkeyfileflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",66,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",66,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",66,{"inputs":[{"name":"c_uint"}],"output":{"name":"gkeyfileflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",66,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",66,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",66,{"inputs":[{"name":"gkeyfileflags"},{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"not","","Returns the complement of this set of flags.",66,{"inputs":[{"name":"gkeyfileflags"}],"output":{"name":"gkeyfileflags"}}],[11,"from_iter","","",66,{"inputs":[{"name":"t"}],"output":{"name":"gkeyfileflags"}}],[11,"hash","","",67,null],[11,"cmp","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"option"}}],[11,"lt","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"le","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"gt","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"ge","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"clone","","",67,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"eq","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"ne","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"fmt","","",67,{"inputs":[{"name":"gloglevelflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",67,{"inputs":[],"output":{"name":"gloglevelflags"}}],[11,"all","","Returns the set containing all flags.",67,{"inputs":[],"output":{"name":"gloglevelflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",67,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",67,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",67,{"inputs":[{"name":"c_uint"}],"output":{"name":"gloglevelflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",67,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",67,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",67,{"inputs":[{"name":"gloglevelflags"},{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"not","","Returns the complement of this set of flags.",67,{"inputs":[{"name":"gloglevelflags"}],"output":{"name":"gloglevelflags"}}],[11,"from_iter","","",67,{"inputs":[{"name":"t"}],"output":{"name":"gloglevelflags"}}],[11,"hash","","",68,null],[11,"cmp","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"option"}}],[11,"lt","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"le","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"gt","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"ge","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"clone","","",68,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"eq","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"ne","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"fmt","","",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",68,{"inputs":[],"output":{"name":"gmarkupcollecttype"}}],[11,"all","","Returns the set containing all flags.",68,{"inputs":[],"output":{"name":"gmarkupcollecttype"}}],[11,"bits","","Returns the raw value of the flags currently stored.",68,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",68,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",68,{"inputs":[{"name":"c_uint"}],"output":{"name":"gmarkupcollecttype"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",68,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",68,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"sub","","Returns the set difference of the two sets of flags.",68,{"inputs":[{"name":"gmarkupcollecttype"},{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"not","","Returns the complement of this set of flags.",68,{"inputs":[{"name":"gmarkupcollecttype"}],"output":{"name":"gmarkupcollecttype"}}],[11,"from_iter","","",68,{"inputs":[{"name":"t"}],"output":{"name":"gmarkupcollecttype"}}],[11,"hash","","",69,null],[11,"cmp","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"option"}}],[11,"lt","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"le","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"gt","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"ge","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"clone","","",69,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"eq","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"ne","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"fmt","","",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",69,{"inputs":[],"output":{"name":"gmarkupparseflags"}}],[11,"all","","Returns the set containing all flags.",69,{"inputs":[],"output":{"name":"gmarkupparseflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",69,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",69,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",69,{"inputs":[{"name":"c_uint"}],"output":{"name":"gmarkupparseflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",69,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",69,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",69,{"inputs":[{"name":"gmarkupparseflags"},{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"not","","Returns the complement of this set of flags.",69,{"inputs":[{"name":"gmarkupparseflags"}],"output":{"name":"gmarkupparseflags"}}],[11,"from_iter","","",69,{"inputs":[{"name":"t"}],"output":{"name":"gmarkupparseflags"}}],[11,"hash","","",70,null],[11,"cmp","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"option"}}],[11,"lt","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"le","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"gt","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"ge","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"clone","","",70,{"inputs":[{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"eq","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"ne","","",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"fmt","","",70,{"inputs":[{"name":"goptionflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",70,{"inputs":[],"output":{"name":"goptionflags"}}],[11,"all","","Returns the set containing all flags.",70,{"inputs":[],"output":{"name":"goptionflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",70,{"inputs":[{"name":"goptionflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",70,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",70,{"inputs":[{"name":"c_uint"}],"output":{"name":"goptionflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",70,{"inputs":[{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",70,{"inputs":[{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",70,{"inputs":[{"name":"goptionflags"},{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"not","","Returns the complement of this set of flags.",70,{"inputs":[{"name":"goptionflags"}],"output":{"name":"goptionflags"}}],[11,"from_iter","","",70,{"inputs":[{"name":"t"}],"output":{"name":"goptionflags"}}],[11,"hash","","",71,null],[11,"cmp","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"option"}}],[11,"lt","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"le","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"gt","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"ge","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"eq","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",71,{"inputs":[],"output":{"name":"gregexcompileflags"}}],[11,"all","","Returns the set containing all flags.",71,{"inputs":[],"output":{"name":"gregexcompileflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",71,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",71,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",71,{"inputs":[{"name":"c_uint"}],"output":{"name":"gregexcompileflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",71,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",71,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",71,{"inputs":[{"name":"gregexcompileflags"},{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"not","","Returns the complement of this set of flags.",71,{"inputs":[{"name":"gregexcompileflags"}],"output":{"name":"gregexcompileflags"}}],[11,"from_iter","","",71,{"inputs":[{"name":"t"}],"output":{"name":"gregexcompileflags"}}],[11,"hash","","",72,null],[11,"cmp","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"option"}}],[11,"lt","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"le","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"gt","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"ge","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"eq","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"ne","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"fmt","","",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",72,{"inputs":[],"output":{"name":"gregexmatchflags"}}],[11,"all","","Returns the set containing all flags.",72,{"inputs":[],"output":{"name":"gregexmatchflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",72,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",72,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",72,{"inputs":[{"name":"c_uint"}],"output":{"name":"gregexmatchflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",72,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",72,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",72,{"inputs":[{"name":"gregexmatchflags"},{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"not","","Returns the complement of this set of flags.",72,{"inputs":[{"name":"gregexmatchflags"}],"output":{"name":"gregexmatchflags"}}],[11,"from_iter","","",72,{"inputs":[{"name":"t"}],"output":{"name":"gregexmatchflags"}}],[11,"hash","","",73,null],[11,"cmp","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"option"}}],[11,"lt","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"le","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"gt","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"ge","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"clone","","",73,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"eq","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"ne","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"fmt","","",73,{"inputs":[{"name":"gspawnflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",73,{"inputs":[],"output":{"name":"gspawnflags"}}],[11,"all","","Returns the set containing all flags.",73,{"inputs":[],"output":{"name":"gspawnflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",73,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",73,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",73,{"inputs":[{"name":"c_uint"}],"output":{"name":"gspawnflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",73,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",73,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",73,{"inputs":[{"name":"gspawnflags"},{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"not","","Returns the complement of this set of flags.",73,{"inputs":[{"name":"gspawnflags"}],"output":{"name":"gspawnflags"}}],[11,"from_iter","","",73,{"inputs":[{"name":"t"}],"output":{"name":"gspawnflags"}}],[11,"hash","","",74,null],[11,"cmp","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"option"}}],[11,"lt","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"le","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"gt","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"ge","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"clone","","",74,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"eq","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"ne","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"fmt","","",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",74,{"inputs":[],"output":{"name":"gtestsubprocessflags"}}],[11,"all","","Returns the set containing all flags.",74,{"inputs":[],"output":{"name":"gtestsubprocessflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",74,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",74,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",74,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtestsubprocessflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",74,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",74,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",74,{"inputs":[{"name":"gtestsubprocessflags"},{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"not","","Returns the complement of this set of flags.",74,{"inputs":[{"name":"gtestsubprocessflags"}],"output":{"name":"gtestsubprocessflags"}}],[11,"from_iter","","",74,{"inputs":[{"name":"t"}],"output":{"name":"gtestsubprocessflags"}}],[11,"hash","","",75,null],[11,"cmp","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"option"}}],[11,"lt","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"le","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"gt","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"ge","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"clone","","",75,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"eq","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"ne","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"fmt","","",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",75,{"inputs":[],"output":{"name":"gtesttrapflags"}}],[11,"all","","Returns the set containing all flags.",75,{"inputs":[],"output":{"name":"gtesttrapflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",75,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",75,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",75,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtesttrapflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",75,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",75,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",75,{"inputs":[{"name":"gtesttrapflags"},{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"not","","Returns the complement of this set of flags.",75,{"inputs":[{"name":"gtesttrapflags"}],"output":{"name":"gtesttrapflags"}}],[11,"from_iter","","",75,{"inputs":[{"name":"t"}],"output":{"name":"gtesttrapflags"}}],[11,"hash","","",76,null],[11,"cmp","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"option"}}],[11,"lt","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"le","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"gt","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"ge","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"clone","","",76,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"eq","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"ne","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"fmt","","",76,{"inputs":[{"name":"gtraverseflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"empty","","Returns an empty set of flags.",76,{"inputs":[],"output":{"name":"gtraverseflags"}}],[11,"all","","Returns the set containing all flags.",76,{"inputs":[],"output":{"name":"gtraverseflags"}}],[11,"bits","","Returns the raw value of the flags currently stored.",76,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"c_uint"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",76,{"inputs":[{"name":"c_uint"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",76,{"inputs":[{"name":"c_uint"}],"output":{"name":"gtraverseflags"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",76,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",76,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":null}],[11,"bitor","","Returns the union of the two sets of flags.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"bitand","","Returns the intersection between the two sets of flags.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"sub","","Returns the set difference of the two sets of flags.",76,{"inputs":[{"name":"gtraverseflags"},{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"not","","Returns the complement of this set of flags.",76,{"inputs":[{"name":"gtraverseflags"}],"output":{"name":"gtraverseflags"}}],[11,"from_iter","","",76,{"inputs":[{"name":"t"}],"output":{"name":"gtraverseflags"}}]],"paths":[[3,"GArray"],[3,"GByteArray"],[3,"GDebugKey"],[3,"GError"],[3,"GHook"],[3,"GHookList"],[3,"GIOFuncs"],[3,"GList"],[3,"GMarkupParser"],[3,"GMemVTable"],[3,"GNode"],[3,"GOnce"],[3,"GOptionEntry"],[3,"GPollFD"],[3,"GPtrArray"],[3,"GQueue"],[3,"GSList"],[3,"GScanner"],[3,"GScannerConfig"],[3,"GSourceCallbackFuncs"],[3,"GSourceFuncs"],[3,"GString"],[3,"GTestConfig"],[3,"GTestLogMsg"],[3,"GThreadPool"],[3,"GTimeVal"],[3,"GTrashStack"],[4,"GBookmarkFileError"],[4,"GChecksumType"],[4,"GConvertError"],[4,"GDateDMY"],[4,"GDateMonth"],[4,"GDateWeekday"],[4,"GErrorType"],[4,"GFileError"],[4,"GIOChannelError"],[4,"GIOError"],[4,"GIOStatus"],[4,"GKeyFileError"],[4,"GMarkupError"],[4,"GNormalizeMode"],[4,"GOnceStatus"],[4,"GOptionArg"],[4,"GOptionError"],[4,"GRegexError"],[4,"GSeekType"],[4,"GShellError"],[4,"GSliceConfig"],[4,"GSpawnError"],[4,"GTestFileType"],[4,"GTestLogType"],[4,"GTimeType"],[4,"GTokenType"],[4,"GTraverseType"],[4,"GUnicodeBreakType"],[4,"GUnicodeScript"],[4,"GUnicodeType"],[4,"GUserDirectory"],[4,"GVariantClass"],[4,"GVariantParseError"],[3,"GAsciiType"],[3,"GFileTest"],[3,"GFormatSizeFlags"],[3,"GHookFlagMask"],[3,"GIOCondition"],[3,"GIOFlags"],[3,"GKeyFileFlags"],[3,"GLogLevelFlags"],[3,"GMarkupCollectType"],[3,"GMarkupParseFlags"],[3,"GOptionFlags"],[3,"GRegexCompileFlags"],[3,"GRegexMatchFlags"],[3,"GSpawnFlags"],[3,"GTestSubprocessFlags"],[3,"GTestTrapFlags"],[3,"GTraverseFlags"]]};
searchIndex["cairo_sys"] = {"doc":"","items":[[3,"cairo_t","cairo_sys","",null,null],[3,"cairo_surface_t","","",null,null],[3,"cairo_pattern_t","","",null,null],[3,"cairo_fill_rule_t","","",null,null],[3,"cairo_antialias_t","","",null,null],[3,"cairo_line_join_t","","",null,null],[3,"cairo_line_cap_t","","",null,null],[3,"cairo_rectangle_t","","",null,null],[12,"x","","",0,null],[12,"y","","",0,null],[12,"width","","",0,null],[12,"height","","",0,null],[3,"cairo_rectangle_int_t","","",null,null],[12,"x","","",1,null],[12,"y","","",1,null],[12,"width","","",1,null],[12,"height","","",1,null],[3,"cairo_rectangle_list_t","","",null,null],[12,"status","","",2,null],[12,"rectangles","","",2,null],[12,"num_rectangles","","",2,null],[3,"cairo_content_t","","",null,null],[3,"cairo_path_t","","",null,null],[12,"status","","",3,null],[12,"data","","",3,null],[12,"num_data","","",3,null],[3,"cairo_path_data_header","","",null,null],[12,"data_type","","",4,null],[12,"length","","",4,null],[3,"cairo_glyph_t","","",null,null],[3,"cairo_region_t","","",null,null],[3,"cairo_font_face_t","","",null,null],[3,"cairo_scaled_font_t","","",null,null],[3,"cairo_font_options_t","","",null,null],[3,"cairo_extend_t","","",null,null],[3,"cairo_filter_t","","",null,null],[3,"cairo_region_overlap_t","","",null,null],[3,"FontExtents","","",null,null],[12,"ascent","","",5,null],[12,"descent","","",5,null],[12,"height","","",5,null],[12,"max_x_advance","","",5,null],[12,"max_y_advance","","",5,null],[3,"Glyph","","",null,null],[12,"index","","",6,null],[12,"x","","",6,null],[12,"y","","",6,null],[3,"TextCluster","","",null,null],[12,"num_bytes","","",7,null],[12,"num_glyphs","","",7,null],[3,"TextExtents","","",null,null],[12,"x_bearing","","",8,null],[12,"y_bearing","","",8,null],[12,"width","","",8,null],[12,"height","","",8,null],[12,"x_advance","","",8,null],[12,"y_advance","","",8,null],[3,"Matrix","","",null,null],[12,"xx","","",9,null],[12,"yx","","",9,null],[12,"xy","","",9,null],[12,"yy","","",9,null],[12,"x0","","",9,null],[12,"y0","","",9,null],[3,"cairo_user_data_key_t","","",null,null],[12,"unused","","",10,null],[3,"cairo_bool_t","","",null,null],[5,"cairo_create","","",null,null],[5,"cairo_reference","","",null,null],[5,"cairo_destroy","","",null,null],[5,"cairo_status","","",null,null],[5,"cairo_save","","",null,null],[5,"cairo_restore","","",null,null],[5,"cairo_get_target","","",null,null],[5,"cairo_push_group","","",null,null],[5,"cairo_push_group_with_content","","",null,null],[5,"cairo_pop_group","","",null,null],[5,"cairo_pop_group_to_source","","",null,null],[5,"cairo_get_group_target","","",null,null],[5,"cairo_set_source_rgb","","",null,null],[5,"cairo_set_source_rgba","","",null,null],[5,"cairo_set_source","","",null,null],[5,"cairo_set_source_surface","","",null,null],[5,"cairo_get_source","","",null,null],[5,"cairo_set_antialias","","",null,null],[5,"cairo_get_antialias","","",null,null],[5,"cairo_set_dash","","",null,null],[5,"cairo_get_dash_count","","",null,null],[5,"cairo_get_dash","","",null,null],[5,"cairo_set_fill_rule","","",null,null],[5,"cairo_get_fill_rule","","",null,null],[5,"cairo_set_line_cap","","",null,null],[5,"cairo_get_line_cap","","",null,null],[5,"cairo_set_line_join","","",null,null],[5,"cairo_get_line_join","","",null,null],[5,"cairo_set_line_width","","",null,null],[5,"cairo_get_line_width","","",null,null],[5,"cairo_set_miter_limit","","",null,null],[5,"cairo_get_miter_limit","","",null,null],[5,"cairo_set_operator","","",null,null],[5,"cairo_get_operator","","",null,null],[5,"cairo_set_tolerance","","",null,null],[5,"cairo_get_tolerance","","",null,null],[5,"cairo_clip","","",null,null],[5,"cairo_clip_preserve","","",null,null],[5,"cairo_clip_extents","","",null,null],[5,"cairo_in_clip","","",null,null],[5,"cairo_reset_clip","","",null,null],[5,"cairo_rectangle_list_destroy","","",null,null],[5,"cairo_copy_clip_rectangle_list","","",null,null],[5,"cairo_fill","","",null,null],[5,"cairo_fill_preserve","","",null,null],[5,"cairo_fill_extents","","",null,null],[5,"cairo_in_fill","","",null,null],[5,"cairo_mask","","",null,null],[5,"cairo_mask_surface","","",null,null],[5,"cairo_paint","","",null,null],[5,"cairo_paint_with_alpha","","",null,null],[5,"cairo_stroke","","",null,null],[5,"cairo_stroke_preserve","","",null,null],[5,"cairo_stroke_extents","","",null,null],[5,"cairo_in_stroke","","",null,null],[5,"cairo_copy_page","","",null,null],[5,"cairo_show_page","","",null,null],[5,"cairo_get_reference_count","","",null,null],[5,"cairo_status_to_string","","",null,null],[5,"cairo_copy_path","","",null,null],[5,"cairo_copy_path_flat","","",null,null],[5,"cairo_path_destroy","","",null,null],[5,"cairo_append_path","","",null,null],[5,"cairo_has_current_point","","",null,null],[5,"cairo_get_current_point","","",null,null],[5,"cairo_new_path","","",null,null],[5,"cairo_new_sub_path","","",null,null],[5,"cairo_close_path","","",null,null],[5,"cairo_arc","","",null,null],[5,"cairo_arc_negative","","",null,null],[5,"cairo_curve_to","","",null,null],[5,"cairo_line_to","","",null,null],[5,"cairo_move_to","","",null,null],[5,"cairo_rectangle","","",null,null],[5,"cairo_glyph_path","","",null,null],[5,"cairo_text_path","","",null,null],[5,"cairo_rel_curve_to","","",null,null],[5,"cairo_rel_line_to","","",null,null],[5,"cairo_rel_move_to","","",null,null],[5,"cairo_path_extents","","",null,null],[5,"cairo_translate","","",null,null],[5,"cairo_scale","","",null,null],[5,"cairo_rotate","","",null,null],[5,"cairo_transform","","",null,null],[5,"cairo_set_matrix","","",null,null],[5,"cairo_get_matrix","","",null,null],[5,"cairo_identity_matrix","","",null,null],[5,"cairo_user_to_device","","",null,null],[5,"cairo_user_to_device_distance","","",null,null],[5,"cairo_device_to_user","","",null,null],[5,"cairo_device_to_user_distance","","",null,null],[5,"cairo_pattern_add_color_stop_rgb","","",null,null],[5,"cairo_pattern_add_color_stop_rgba","","",null,null],[5,"cairo_pattern_get_color_stop_count","","",null,null],[5,"cairo_pattern_get_color_stop_rgba","","",null,null],[5,"cairo_pattern_create_rgb","","",null,null],[5,"cairo_pattern_create_rgba","","",null,null],[5,"cairo_pattern_get_rgba","","",null,null],[5,"cairo_pattern_create_for_surface","","",null,null],[5,"cairo_pattern_get_surface","","",null,null],[5,"cairo_pattern_create_linear","","",null,null],[5,"cairo_pattern_get_linear_points","","",null,null],[5,"cairo_pattern_create_radial","","",null,null],[5,"cairo_pattern_get_radial_circles","","",null,null],[5,"cairo_pattern_create_mesh","","",null,null],[5,"cairo_mesh_pattern_begin_patch","","",null,null],[5,"cairo_mesh_pattern_end_patch","","",null,null],[5,"cairo_mesh_pattern_move_to","","",null,null],[5,"cairo_mesh_pattern_line_to","","",null,null],[5,"cairo_mesh_pattern_curve_to","","",null,null],[5,"cairo_mesh_pattern_set_control_point","","",null,null],[5,"cairo_mesh_pattern_set_corner_color_rgb","","",null,null],[5,"cairo_mesh_pattern_set_corner_color_rgba","","",null,null],[5,"cairo_mesh_pattern_get_patch_count","","",null,null],[5,"cairo_mesh_pattern_get_path","","",null,null],[5,"cairo_mesh_pattern_get_control_point","","",null,null],[5,"cairo_mesh_pattern_get_corner_color_rgba","","",null,null],[5,"cairo_pattern_reference","","",null,null],[5,"cairo_pattern_destroy","","",null,null],[5,"cairo_pattern_status","","",null,null],[5,"cairo_pattern_set_extend","","",null,null],[5,"cairo_pattern_get_extend","","",null,null],[5,"cairo_pattern_set_filter","","",null,null],[5,"cairo_pattern_get_filter","","",null,null],[5,"cairo_pattern_set_matrix","","",null,null],[5,"cairo_pattern_get_matrix","","",null,null],[5,"cairo_pattern_get_type","","",null,null],[5,"cairo_pattern_get_reference_count","","",null,null],[5,"cairo_region_create","","",null,null],[5,"cairo_region_create_rectangle","","",null,null],[5,"cairo_region_create_rectangles","","",null,null],[5,"cairo_region_copy","","",null,null],[5,"cairo_region_reference","","",null,null],[5,"cairo_region_destroy","","",null,null],[5,"cairo_region_status","","",null,null],[5,"cairo_region_get_extents","","",null,null],[5,"cairo_region_num_rectangles","","",null,null],[5,"cairo_region_get_rectangle","","",null,null],[5,"cairo_region_is_empty","","",null,null],[5,"cairo_region_contains_point","","",null,null],[5,"cairo_region_contains_rectangle","","",null,null],[5,"cairo_region_equal","","",null,null],[5,"cairo_region_translate","","",null,null],[5,"cairo_region_intersect","","",null,null],[5,"cairo_region_intersect_rectangle","","",null,null],[5,"cairo_region_subtract","","",null,null],[5,"cairo_region_subtract_rectangle","","",null,null],[5,"cairo_region_union","","",null,null],[5,"cairo_region_union_rectangle","","",null,null],[5,"cairo_region_xor","","",null,null],[5,"cairo_region_xor_rectangle","","",null,null],[5,"cairo_select_font_face","","",null,null],[5,"cairo_set_font_size","","",null,null],[5,"cairo_set_font_matrix","","",null,null],[5,"cairo_get_font_matrix","","",null,null],[5,"cairo_set_font_options","","",null,null],[5,"cairo_get_font_options","","",null,null],[5,"cairo_set_font_face","","",null,null],[5,"cairo_get_font_face","","",null,null],[5,"cairo_set_scaled_font","","",null,null],[5,"cairo_get_scaled_font","","",null,null],[5,"cairo_show_text","","",null,null],[5,"cairo_show_glyphs","","",null,null],[5,"cairo_show_text_glyphs","","",null,null],[5,"cairo_font_extents","","",null,null],[5,"cairo_text_extents","","",null,null],[5,"cairo_glyph_extents","","",null,null],[5,"cairo_toy_font_face_create","","",null,null],[5,"cairo_toy_font_face_get_family","","",null,null],[5,"cairo_toy_font_face_get_slant","","",null,null],[5,"cairo_toy_font_face_get_weight","","",null,null],[5,"cairo_glyph_allocate","","",null,null],[5,"cairo_glyph_free","","",null,null],[5,"cairo_text_cluster_allocate","","",null,null],[5,"cairo_text_cluster_free","","",null,null],[5,"cairo_font_face_reference","","",null,null],[5,"cairo_font_face_destroy","","",null,null],[5,"cairo_font_face_status","","",null,null],[5,"cairo_font_face_get_type","","",null,null],[5,"cairo_font_face_get_reference_count","","",null,null],[5,"cairo_scaled_font_create","","",null,null],[5,"cairo_scaled_font_reference","","",null,null],[5,"cairo_scaled_font_destroy","","",null,null],[5,"cairo_scaled_font_status","","",null,null],[5,"cairo_scaled_font_extents","","",null,null],[5,"cairo_scaled_font_text_extents","","",null,null],[5,"cairo_scaled_font_glyph_extents","","",null,null],[5,"cairo_scaled_font_text_to_glyphs","","",null,null],[5,"cairo_scaled_font_get_font_face","","",null,null],[5,"cairo_scaled_font_get_font_options","","",null,null],[5,"cairo_scaled_font_get_font_matrix","","",null,null],[5,"cairo_scaled_font_get_ctm","","",null,null],[5,"cairo_scaled_font_get_scale_matrix","","",null,null],[5,"cairo_scaled_font_get_type","","",null,null],[5,"cairo_scaled_font_get_reference_count","","",null,null],[5,"cairo_font_options_create","","",null,null],[5,"cairo_font_options_copy","","",null,null],[5,"cairo_font_options_destroy","","",null,null],[5,"cairo_font_options_status","","",null,null],[5,"cairo_font_options_merge","","",null,null],[5,"cairo_font_options_hash","","",null,null],[5,"cairo_font_options_equal","","",null,null],[5,"cairo_font_options_set_antialias","","",null,null],[5,"cairo_font_options_get_antialias","","",null,null],[5,"cairo_font_options_set_subpixel_order","","",null,null],[5,"cairo_font_options_get_subpixel_order","","",null,null],[5,"cairo_font_options_set_hint_style","","",null,null],[5,"cairo_font_options_get_hint_style","","",null,null],[5,"cairo_font_options_set_hint_metrics","","",null,null],[5,"cairo_font_options_get_hint_metrics","","",null,null],[5,"cairo_matrix_multiply","","",null,null],[5,"cairo_matrix_init","","",null,null],[5,"cairo_matrix_init_identity","","",null,null],[5,"cairo_matrix_translate","","",null,null],[5,"cairo_matrix_scale","","",null,null],[5,"cairo_matrix_rotate","","",null,null],[5,"cairo_matrix_invert","","",null,null],[5,"cairo_matrix_transform_distance","","",null,null],[5,"cairo_matrix_transform_point","","",null,null],[5,"cairo_surface_destroy","","",null,null],[5,"cairo_surface_flush","","",null,null],[5,"cairo_surface_finish","","",null,null],[5,"cairo_surface_status","","",null,null],[5,"cairo_surface_get_type","","",null,null],[5,"cairo_surface_reference","","",null,null],[5,"cairo_surface_get_user_data","","",null,null],[5,"cairo_surface_set_user_data","","",null,null],[5,"cairo_image_surface_create","","",null,null],[5,"cairo_image_surface_create_for_data","","",null,null],[5,"cairo_image_surface_get_data","","",null,null],[5,"cairo_image_surface_get_format","","",null,null],[5,"cairo_image_surface_get_height","","",null,null],[5,"cairo_image_surface_get_stride","","",null,null],[5,"cairo_image_surface_get_width","","",null,null],[0,"enums","","",null,null],[4,"Status","cairo_sys::enums","Status is used to indicate errors that can occur when using Cairo. In some cases it is\nreturned directly by functions, but when using `Context`, the last error, if any, is\nstored in the context and can be retrieved with `Context::status()`.",null,null],[13,"Success","","no error has occurred (Since 1.0)",11,null],[13,"NoMemory","","out of memory (Since 1.0)",11,null],[13,"InvalidRestore","","`Context::restore()` called without matching `Context::save()` (Since 1.0)",11,null],[13,"InvalidPopGroup","","no saved group to pop, i.e. `Context::pop_group()` without matching\n`Context::push_group()` (Since 1.0)",11,null],[13,"NoCurrentPoint","","no current point defined (Since 1.0)",11,null],[13,"InvalidMatrix","","invalid matrix (not invertible) (Since 1.0)",11,null],[13,"InvalidStatus","","invalid value for an input `Status` (Since 1.0)",11,null],[13,"NullPointer","","NULL pointer (Since 1.0)",11,null],[13,"InvalidString","","input string not valid UTF-8 (Since 1.0)",11,null],[13,"InvalidPathData","","input path data not valid (Since 1.0)",11,null],[13,"ReadError","","error while reading from input stream (Since 1.0)",11,null],[13,"WriteError","","error while writing to output stream (Since 1.0)",11,null],[13,"SurfaceFinished","","target surface has been finished (Since 1.0)",11,null],[13,"SurfaceTypeMismatch","","the surface type is not appropriate for the operation (Since 1.0)",11,null],[13,"PatternTypeMismatch","","the pattern type is not appropriate for the operation (Since 1.0)",11,null],[13,"InvalidContent","","invalid value for an input `Content` (Since 1.0)",11,null],[13,"InvalidFormat","","invalid value for an input `Format` (Since 1.0)",11,null],[13,"InvalidVisual","","invalid value for an input Visual* (Since 1.0)",11,null],[13,"FileNotFound","","file not found (Since 1.0)",11,null],[13,"InvalidDash","","invalid value for a dash setting (Since 1.0)",11,null],[13,"InvalidDscComment","","invalid value for a DSC comment (Since 1.2)",11,null],[13,"InvalidIndex","","invalid index passed to getter (Since 1.4)",11,null],[13,"ClipNotRepresentable","","clip region not representable in desired format (Since 1.4)",11,null],[13,"TempFileError","","error creating or writing to a temporary file (Since 1.6)",11,null],[13,"InvalidStride","","invalid value for stride (Since 1.6)",11,null],[13,"FontTypeMismatch","","the font type is not appropriate for the operation (Since 1.8)",11,null],[13,"UserFontImmutable","","the user-font is immutable (Since 1.8)",11,null],[13,"UserFontError","","error occurred in a user-font callback function (Since 1.8)",11,null],[13,"NegativeCount","","negative number used where it is not allowed (Since 1.8)",11,null],[13,"InvalidClusters","","input clusters do not represent the accompanying text and glyph array (Since 1.8)",11,null],[13,"InvalidSlant","","invalid value for an input `FontSlant` (Since 1.8)",11,null],[13,"InvalidWeight","","invalid value for an input `FontWeight` (Since 1.8)",11,null],[13,"InvalidSize","","invalid value (typically too big) for the size of the input (surface, pattern,\netc.) (Since 1.10)",11,null],[13,"UserFontNotImplemented","","user-font method not implemented (Since 1.10)",11,null],[13,"DeviceTypeMismatch","","the device type is not appropriate for the operation (Since 1.10)",11,null],[13,"DeviceError","","an operation to the device caused an unspecified error (Since 1.10)",11,null],[13,"InvalidMeshConstruction","","a mesh pattern construction operation was used outside of a\n`Context::mesh_pattern_begin_patch()`/`Context::mesh_pattern_end_patch()`\npair (Since 1.12)",11,null],[13,"DeviceFinished","","target device has been finished (Since 1.12)",11,null],[13,"LastStatus","","this is a special value indicating the number of status values defined in this\nenumeration. When using this value, note that the version of cairo at run-time\nmay have additional status values defined than the value of this symbol at\ncompile-time. (Since 1.10)",11,null],[4,"Antialias","","Specifies the type of antialiasing to do when rendering text or shapes.",null,null],[13,"Default","","Use the default antialiasing for the subsystem and target device, since 1.0",12,null],[13,"None","","Use a bilevel alpha mask, since 1.0",12,null],[13,"Gray","","Perform single-color antialiasing (using shades of gray for black text on a white\nbackground, for example), since 1.0",12,null],[13,"Subpixel","","Perform antialiasing by taking advantage of the order of subpixel elements on devices\nsuch as LCD panels, since 1.0",12,null],[13,"Fast","","Hint that the backend should perform some antialiasing but prefer speed over quality,\nsince 1.12",12,null],[13,"Good","","The backend should balance quality against performance, since 1.12",12,null],[13,"Best","","Hint that the backend should render at the highest quality, sacrificing speed if\nnecessary, since 1.12",12,null],[4,"FillRule","","`FillRule` is used to select how paths are filled. For both fill rules, whether or not\na point is included in the fill is determined by taking a ray from that point to infinity\nand looking at intersections with the path. The ray can be in any direction, as long as\nit doesn&#39;t pass through the end point of a segment or have a tricky intersection such as\nintersecting tangent to the path. (Note that filling is not actually implemented in this\nway. This is just a description of the rule that is applied.)",null,null],[13,"Winding","","If the path crosses the ray from left-to-right, counts +1. If the path crosses the ray\nfrom right to left, counts -1. (Left and right are determined from the perspective of\nlooking along the ray from the starting point.) If the total count is non-zero, the point\nwill be filled. (Since 1.0)",13,null],[13,"EvenOdd","","Counts the total number of intersections, without regard to the orientation of the contour.\nIf the total number of intersections is odd, the point will be filled. (Since 1.0)",13,null],[4,"LineCap","","Specifies how to render the endpoints of the path when stroking.",null,null],[13,"Butt","","start(stop) the line exactly at the start(end) point (Since 1.0)",14,null],[13,"Round","","use a round ending, the center of the circle is the end point (Since 1.0)",14,null],[13,"Square","","use squared ending, the center of the square is the end point (Since 1.0)",14,null],[4,"LineJoin","","Specifies how to render the junction of two lines when stroking.",null,null],[13,"Miter","","use a sharp (angled) corner, see `Context::set_miter_limit()` (Since 1.0)",15,null],[13,"Round","","use a rounded join, the center of the circle is the joint point (Since 1.0)",15,null],[13,"nBevel","","use a cut-off join, the join is cut off at half the line width from the\njoint point (Since 1.0)",15,null],[4,"Operator","","`Operator` is used to set the compositing operator for all cairo drawing operations.",null,null],[13,"Clear","","clear destination layer (bounded) (Since 1.0)",16,null],[13,"Source","","replace destination layer (bounded) (Since 1.0)",16,null],[13,"Over","","draw source layer on top of destination layer (bounded) (Since 1.0)",16,null],[13,"In","","draw source where there was destination content (unbounded) (Since 1.0)",16,null],[13,"Out","","draw source where there was no destination content (unbounded) (Since 1.0)",16,null],[13,"Atop","","draw source on top of destination content and only there (Since 1.0)",16,null],[13,"Dest","","ignore the source (Since 1.0)",16,null],[13,"DestOver","","draw destination on top of source (Since 1.0)",16,null],[13,"DestIn","","leave destination only where there was source content (unbounded) (Since 1.0)",16,null],[13,"DestOut","","leave destination only where there was no source content (Since 1.0)",16,null],[13,"DestAtop","","leave destination on top of source content and only there (unbounded) (Since 1.0)",16,null],[13,"Xor","","source and destination are shown where there is only one of them (Since 1.0)",16,null],[13,"Add","","source and destination layers are accumulated (Since 1.0)",16,null],[13,"Saturate","","like over, but assuming source and dest are disjoint geometries (Since 1.0)",16,null],[13,"Multiply","","source and destination layers are multiplied. This causes the result to be at\nleast as dark as the darker inputs. (Since 1.10)",16,null],[13,"Screen","","source and destination are complemented and multiplied. This causes the result\nto be at least as light as the lighter inputs. (Since 1.10)",16,null],[13,"Overlay","","multiplies or screens, depending on the lightness of the destination color.\n(Since 1.10)",16,null],[13,"Darken","","replaces the destination with the source if it is darker, otherwise keeps the\nsource. (Since 1.10)",16,null],[13,"Lighten","","replaces the destination with the source if it is lighter, otherwise keeps the\nsource. (Since 1.10)",16,null],[13,"ColorDodge","","brightens the destination color to reflect the source color. (Since 1.10)",16,null],[13,"ColorBurn","","darkens the destination color to reflect the source color. (Since 1.10)",16,null],[13,"HardLight","","Multiplies or screens, dependent on source color. (Since 1.10)",16,null],[13,"SoftLight","","Darkens or lightens, dependent on source color. (Since 1.10)",16,null],[13,"Difference","","Takes the difference of the source and destination color. (Since 1.10)",16,null],[13,"Exclusion","","Produces an effect similar to difference, but with lower contrast. (Since 1.10)",16,null],[13,"HslHue","","Creates a color with the hue of the source and the saturation and luminosity of\nthe target. (Since 1.10)",16,null],[13,"HslSaturation","","Creates a color with the saturation of the source and the hue and luminosity of\nthe target. Painting with this mode onto a gray area produces no change. (Since 1.10)",16,null],[13,"HslColor","","Creates a color with the hue and saturation of the source and the luminosity of the\ntarget. This preserves the gray levels of the target and is useful for coloring\nmonochrome images or tinting color images. (Since 1.10)",16,null],[13,"HslLuminosity","","Creates a color with the luminosity of the source and the hue and saturation of the\ntarget. This produces an inverse effect to `HslColor`. (Since 1.10)",16,null],[4,"PathDataType","","`PathData` is used to describe the type of one portion of a path when represented as a `Path`.\nSee `PathData` for details.",null,null],[13,"MoveTo","","A move-to operation, since 1.0",17,null],[13,"LineTo","","A line-to operation, since 1.0",17,null],[13,"CurveTo","","A curve-to operation, since 1.0",17,null],[13,"ClosePath","","A close-path operation, since 1.0",17,null],[4,"Content","","`Content` is used to describe the content that a surface will contain, whether color\ninformation, alpha information (translucence vs. opacity), or both.",null,null],[13,"Color","","The surface will hold color content only. (Since 1.0)",18,null],[13,"Alpha","","The surface will hold alpha content only. (Since 1.0)",18,null],[13,"ColorAlpha","","The surface will hold color and alpha content. (Since 1.0)",18,null],[4,"Extend","","`Extend` is used to describe how pattern color/alpha will be determined for areas\n&quot;outside&quot; the pattern&#39;s natural area, (for example, outside the surface bounds or\noutside the gradient geometry).",null,null],[13,"None","","pixels outside of the source pattern are fully transparent (Since 1.0)",19,null],[13,"Repeat","","the pattern is tiled by repeating (Since 1.0)",19,null],[13,"Reflect","","the pattern is tiled by reflecting at the edges (Since 1.0; but only implemented\nfor surface patterns since 1.6)",19,null],[13,"Pad","","pixels outside of the pattern copy the closest pixel from the source (Since 1.2;\nbut only implemented for surface patterns since 1.6)",19,null],[4,"Filter","","`Filter` is used to indicate what filtering should be applied when reading pixel values\nfrom patterns. See `Pattern::set_filter()` for indicating the desired filter to be used\nwith a particular pattern.",null,null],[13,"Fast","","A high-performance filter, with quality similar to `Nearest` (Since 1.0)",20,null],[13,"Good","","A reasonable-performance filter, with quality similar to `Bilinear` (Since 1.0)",20,null],[13,"Best","","The highest-quality available, performance may not be suitable for interactive\nuse. (Since 1.0)",20,null],[13,"Nearest","","Nearest-neighbor filtering (Since 1.0)",20,null],[13,"Bilinear","","Linear interpolation in two dimensions (Since 1.0)",20,null],[13,"Gaussian","","This filter value is currently unimplemented, and should not be used in current\ncode. (Since 1.0)",20,null],[4,"PatternType","","`PatternType` is used to describe the type of a given pattern.",null,null],[13,"Solid","","The pattern is a solid (uniform) color. It may be opaque or translucent, since 1.2.",21,null],[13,"Surface","","The pattern is a based on a surface (an image), since 1.2.",21,null],[13,"LinearGradient","","The pattern is a linear gradient, since 1.2.",21,null],[13,"RadialGradient","","The pattern is a radial gradient, since 1.2.",21,null],[13,"Mesh","","The pattern is a mesh, since 1.12.",21,null],[13,"RasterSource","","The pattern is a user pattern providing raster data, since 1.12.",21,null],[4,"FontSlant","","Specifies variants of a font face based on their slant.",null,null],[13,"Normal","","Upright font style, since 1.0",22,null],[13,"Italic","","Italic font style, since 1.0",22,null],[13,"Oblique","","Oblique font style, since 1.0",22,null],[4,"FontWeight","","Specifies variants of a font face based on their weight.",null,null],[13,"Normal","","Normal font weight, since 1.0",23,null],[13,"Bold","","Bold font weight, since 1.0",23,null],[4,"TextClusterFlags","","Specifies properties of a text cluster mapping.",null,null],[13,"None","","",24,null],[13,"Backward","","The clusters in the cluster array map to glyphs in the glyph array from end\nto start. (Since 1.8)",24,null],[4,"FontType","","`FontType` is used to describe the type of a given font face or scaled font. The\nfont types are also known as &quot;font backends&quot; within cairo.",null,null],[13,"FontTypeToy","","The font was created using cairo&#39;s toy font api (Since: 1.2)",25,null],[13,"FontTypeFt","","The font is of type FreeType (Since: 1.2)",25,null],[13,"FontTypeWin32","","The font is of type Win32 (Since: 1.2)",25,null],[13,"FontTypeQuartz","","The font is of type Quartz (Since: 1.6, in 1.2 and 1.4 it was named\nCAIRO_FONT_TYPE_ATSUI)",25,null],[13,"FontTypeUser","","The font was create using cairo&#39;s user font api (Since: 1.8)",25,null],[4,"SubpixelOrder","","The subpixel order specifies the order of color elements within each pixel on the display\ndevice when rendering with an antialiasing mode of `Antialias::Subpixel`.",null,null],[13,"Default","","Use the default subpixel order for for the target device, since 1.0",26,null],[13,"Rgb","","Subpixel elements are arranged horizontally with red at the left, since 1.0",26,null],[13,"Bgr","","Subpixel elements are arranged horizontally with blue at the left, since 1.0",26,null],[13,"Vrgb","","Subpixel elements are arranged vertically with red at the top, since 1.0",26,null],[13,"Vbgr","","Subpixel elements are arranged vertically with blue at the top, since 1.0",26,null],[4,"HintStyle","","Specifies the type of hinting to do on font outlines. Hinting is the process of fitting\noutlines to the pixel grid in order to improve the appearance of the result. Since hinting\noutlines involves distorting them, it also reduces the faithfulness to the original outline\nshapes. Not all of the outline hinting styles are supported by all font backends.",null,null],[13,"Default","","Use the default hint style for font backend and target device, since 1.0",27,null],[13,"None","","Do not hint outlines, since 1.0",27,null],[13,"Slight","","Hint outlines slightly to improve contrast while retaining good fidelity to the\noriginal shapes, since 1.0",27,null],[13,"Medium","","Hint outlines with medium strength giving a compromise between fidelity to the\noriginal shapes and contrast, since 1.0",27,null],[13,"Full","","Hint outlines to maximize contrast, since 1.0",27,null],[4,"HintMetrics","","Specifies whether to hint font metrics; hinting font metrics means quantizing them so\nthat they are integer values in device space. Doing this improves the consistency of\nletter and line spacing, however it also means that text will be laid out differently\nat different zoom factors",null,null],[13,"Default","","Hint metrics in the default manner for the font backend and target device, since 1.0",28,null],[13,"Off","","Do not hint font metrics, since 1.0",28,null],[13,"On","","Hint font metrics, since 1.0",28,null],[4,"SurfaceType","","",null,null],[13,"Image","","",29,null],[13,"Pdf","","",29,null],[13,"Ps","","",29,null],[13,"Xlib","","",29,null],[13,"Xcb","","",29,null],[13,"Glitz","","",29,null],[13,"Quartz","","",29,null],[13,"Win32","","",29,null],[13,"BeOs","","",29,null],[13,"DirectFb","","",29,null],[13,"Svg","","",29,null],[13,"Os2","","",29,null],[13,"Win32Printing","","",29,null],[13,"QuartzImage","","",29,null],[13,"Script","","",29,null],[13,"Qt","","",29,null],[13,"Recording","","",29,null],[13,"Vg","","",29,null],[13,"Gl","","",29,null],[13,"Drm","","",29,null],[13,"Tee","","",29,null],[13,"Xml","","",29,null],[13,"Skia","","",29,null],[13,"Subsurface","","",29,null],[13,"Cogl","","",29,null],[4,"Format","","",null,null],[13,"Invalid","","",30,null],[13,"ARgb32","","",30,null],[13,"Rgb24","","",30,null],[13,"A8","","",30,null],[13,"A1","","",30,null],[13,"Rgb16_565","","",30,null],[13,"Rgb30","","",30,null],[11,"eq","","",11,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"ne","","",11,{"inputs":[{"name":"status"},{"name":"status"}],"output":{"name":"bool"}}],[11,"clone","","",11,{"inputs":[{"name":"status"}],"output":{"name":"status"}}],[11,"fmt","","",11,{"inputs":[{"name":"status"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"ensure_valid","","",11,{"inputs":[{"name":"status"}],"output":null}],[11,"fmt","","",12,{"inputs":[{"name":"antialias"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",12,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"option"}}],[11,"lt","","",12,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"le","","",12,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"gt","","",12,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"ge","","",12,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"eq","","",12,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"ne","","",12,{"inputs":[{"name":"antialias"},{"name":"antialias"}],"output":{"name":"bool"}}],[11,"clone","","",12,{"inputs":[{"name":"antialias"}],"output":{"name":"antialias"}}],[11,"fmt","","",13,{"inputs":[{"name":"fillrule"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",13,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"option"}}],[11,"lt","","",13,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"le","","",13,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"gt","","",13,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"ge","","",13,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"eq","","",13,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"ne","","",13,{"inputs":[{"name":"fillrule"},{"name":"fillrule"}],"output":{"name":"bool"}}],[11,"clone","","",13,{"inputs":[{"name":"fillrule"}],"output":{"name":"fillrule"}}],[11,"fmt","","",14,{"inputs":[{"name":"linecap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",14,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"option"}}],[11,"lt","","",14,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"le","","",14,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"gt","","",14,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"ge","","",14,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"eq","","",14,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"linecap"},{"name":"linecap"}],"output":{"name":"bool"}}],[11,"clone","","",14,{"inputs":[{"name":"linecap"}],"output":{"name":"linecap"}}],[11,"fmt","","",15,{"inputs":[{"name":"linejoin"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",15,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"option"}}],[11,"lt","","",15,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"le","","",15,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"gt","","",15,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"ge","","",15,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"eq","","",15,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"ne","","",15,{"inputs":[{"name":"linejoin"},{"name":"linejoin"}],"output":{"name":"bool"}}],[11,"clone","","",15,{"inputs":[{"name":"linejoin"}],"output":{"name":"linejoin"}}],[11,"fmt","","",16,{"inputs":[{"name":"operator"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",16,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"option"}}],[11,"lt","","",16,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"le","","",16,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"gt","","",16,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"ge","","",16,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"eq","","",16,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"ne","","",16,{"inputs":[{"name":"operator"},{"name":"operator"}],"output":{"name":"bool"}}],[11,"clone","","",16,{"inputs":[{"name":"operator"}],"output":{"name":"operator"}}],[11,"fmt","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"option"}}],[11,"lt","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"le","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"gt","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"ge","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"eq","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"pathdatatype"},{"name":"pathdatatype"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"pathdatatype"}],"output":{"name":"pathdatatype"}}],[11,"fmt","","",18,{"inputs":[{"name":"content"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"eq","","",18,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"content"},{"name":"content"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"content"}],"output":{"name":"content"}}],[11,"fmt","","",19,{"inputs":[{"name":"extend"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"eq","","",19,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"extend"},{"name":"extend"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"extend"}],"output":{"name":"extend"}}],[11,"fmt","","",20,{"inputs":[{"name":"filter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",20,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"option"}}],[11,"lt","","",20,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"le","","",20,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"gt","","",20,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"ge","","",20,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"eq","","",20,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"ne","","",20,{"inputs":[{"name":"filter"},{"name":"filter"}],"output":{"name":"bool"}}],[11,"clone","","",20,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"fmt","","",21,{"inputs":[{"name":"patterntype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",21,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"option"}}],[11,"lt","","",21,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"le","","",21,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"gt","","",21,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"ge","","",21,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"eq","","",21,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"ne","","",21,{"inputs":[{"name":"patterntype"},{"name":"patterntype"}],"output":{"name":"bool"}}],[11,"clone","","",21,{"inputs":[{"name":"patterntype"}],"output":{"name":"patterntype"}}],[11,"fmt","","",22,{"inputs":[{"name":"fontslant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",22,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"option"}}],[11,"lt","","",22,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"le","","",22,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"gt","","",22,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"ge","","",22,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"eq","","",22,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"ne","","",22,{"inputs":[{"name":"fontslant"},{"name":"fontslant"}],"output":{"name":"bool"}}],[11,"clone","","",22,{"inputs":[{"name":"fontslant"}],"output":{"name":"fontslant"}}],[11,"fmt","","",23,{"inputs":[{"name":"fontweight"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",23,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"option"}}],[11,"lt","","",23,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"le","","",23,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"gt","","",23,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"ge","","",23,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"eq","","",23,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"ne","","",23,{"inputs":[{"name":"fontweight"},{"name":"fontweight"}],"output":{"name":"bool"}}],[11,"clone","","",23,{"inputs":[{"name":"fontweight"}],"output":{"name":"fontweight"}}],[11,"fmt","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"option"}}],[11,"lt","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"le","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"gt","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"ge","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"eq","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"ne","","",24,{"inputs":[{"name":"textclusterflags"},{"name":"textclusterflags"}],"output":{"name":"bool"}}],[11,"clone","","",24,{"inputs":[{"name":"textclusterflags"}],"output":{"name":"textclusterflags"}}],[11,"fmt","","",25,{"inputs":[{"name":"fonttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",25,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"option"}}],[11,"lt","","",25,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"le","","",25,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"gt","","",25,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"ge","","",25,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"eq","","",25,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"ne","","",25,{"inputs":[{"name":"fonttype"},{"name":"fonttype"}],"output":{"name":"bool"}}],[11,"clone","","",25,{"inputs":[{"name":"fonttype"}],"output":{"name":"fonttype"}}],[11,"fmt","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"option"}}],[11,"lt","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"le","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"gt","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"ge","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"eq","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"ne","","",26,{"inputs":[{"name":"subpixelorder"},{"name":"subpixelorder"}],"output":{"name":"bool"}}],[11,"clone","","",26,{"inputs":[{"name":"subpixelorder"}],"output":{"name":"subpixelorder"}}],[11,"fmt","","",27,{"inputs":[{"name":"hintstyle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",27,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"option"}}],[11,"lt","","",27,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"le","","",27,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"gt","","",27,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"ge","","",27,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"eq","","",27,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"ne","","",27,{"inputs":[{"name":"hintstyle"},{"name":"hintstyle"}],"output":{"name":"bool"}}],[11,"clone","","",27,{"inputs":[{"name":"hintstyle"}],"output":{"name":"hintstyle"}}],[11,"fmt","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"eq","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"hintmetrics"},{"name":"hintmetrics"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"hintmetrics"}],"output":{"name":"hintmetrics"}}],[11,"eq","","",29,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"surfacetype"},{"name":"surfacetype"}],"output":{"name":"bool"}}],[11,"fmt","","",29,{"inputs":[{"name":"surfacetype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"surfacetype"}],"output":{"name":"surfacetype"}}],[11,"eq","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"format"},{"name":"format"}],"output":{"name":"bool"}}],[11,"fmt","","",30,{"inputs":[{"name":"format"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",30,{"inputs":[{"name":"format"}],"output":{"name":"format"}}],[6,"cairo_destroy_func_t","cairo_sys","",null,null],[6,"cairo_read_func_t","","",null,null],[6,"cairo_write_func_t","","",null,null],[11,"eq","","",0,{"inputs":[{"name":"cairo_rectangle_t"},{"name":"cairo_rectangle_t"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"cairo_rectangle_t"},{"name":"cairo_rectangle_t"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"cairo_rectangle_t"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"cairo_rectangle_t"}],"output":{"name":"cairo_rectangle_t"}}],[11,"eq","","",1,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"cairo_rectangle_int_t"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"cairo_rectangle_int_t"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"cairo_rectangle_int_t"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"cairo_rectangle_int_t"}],"output":{"name":"cairo_rectangle_int_t"}}],[11,"clone","","",5,{"inputs":[{"name":"fontextents"}],"output":{"name":"fontextents"}}],[11,"clone","","",6,{"inputs":[{"name":"glyph"}],"output":{"name":"glyph"}}],[11,"clone","","",7,{"inputs":[{"name":"textcluster"}],"output":{"name":"textcluster"}}],[11,"clone","","",8,{"inputs":[{"name":"textextents"}],"output":{"name":"textextents"}}],[11,"clone","","",9,{"inputs":[{"name":"matrix"}],"output":{"name":"matrix"}}],[11,"default","","",10,{"inputs":[],"output":{"name":"cairo_user_data_key_t"}}],[11,"clone","","",10,{"inputs":[{"name":"cairo_user_data_key_t"}],"output":{"name":"cairo_user_data_key_t"}}],[11,"as_bool","","",31,{"inputs":[{"name":"cairo_bool_t"}],"output":{"name":"bool"}}]],"paths":[[3,"cairo_rectangle_t"],[3,"cairo_rectangle_int_t"],[3,"cairo_rectangle_list_t"],[3,"cairo_path_t"],[3,"cairo_path_data_header"],[3,"FontExtents"],[3,"Glyph"],[3,"TextCluster"],[3,"TextExtents"],[3,"Matrix"],[3,"cairo_user_data_key_t"],[4,"Status"],[4,"Antialias"],[4,"FillRule"],[4,"LineCap"],[4,"LineJoin"],[4,"Operator"],[4,"PathDataType"],[4,"Content"],[4,"Extend"],[4,"Filter"],[4,"PatternType"],[4,"FontSlant"],[4,"FontWeight"],[4,"TextClusterFlags"],[4,"FontType"],[4,"SubpixelOrder"],[4,"HintStyle"],[4,"HintMetrics"],[4,"SurfaceType"],[4,"Format"],[3,"cairo_bool_t"]]};
searchIndex["libc"] = {"doc":"Crate docs","items":[[3,"utimbuf","libc","",null,null],[12,"actime","","",0,null],[12,"modtime","","",0,null],[3,"timeval","","",null,null],[12,"tv_sec","","",1,null],[12,"tv_usec","","",1,null],[3,"timespec","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_nsec","","",2,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",3,null],[12,"rlim_max","","",3,null],[3,"rusage","","",null,null],[12,"ru_utime","","",4,null],[12,"ru_stime","","",4,null],[12,"ru_maxrss","","",4,null],[12,"ru_ixrss","","",4,null],[12,"ru_idrss","","",4,null],[12,"ru_isrss","","",4,null],[12,"ru_minflt","","",4,null],[12,"ru_majflt","","",4,null],[12,"ru_nswap","","",4,null],[12,"ru_inblock","","",4,null],[12,"ru_oublock","","",4,null],[12,"ru_msgsnd","","",4,null],[12,"ru_msgrcv","","",4,null],[12,"ru_nsignals","","",4,null],[12,"ru_nvcsw","","",4,null],[12,"ru_nivcsw","","",4,null],[3,"in_addr","","",null,null],[12,"s_addr","","",5,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",6,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",7,null],[12,"imr_interface","","",7,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",8,null],[12,"ipv6mr_interface","","",8,null],[3,"hostent","","",null,null],[12,"h_name","","",9,null],[12,"h_aliases","","",9,null],[12,"h_addrtype","","",9,null],[12,"h_length","","",9,null],[12,"h_addr_list","","",9,null],[3,"iovec","","",null,null],[12,"iov_base","","",10,null],[12,"iov_len","","",10,null],[3,"pollfd","","",null,null],[12,"fd","","",11,null],[12,"events","","",11,null],[12,"revents","","",11,null],[3,"sockaddr","","",null,null],[12,"sa_family","","",12,null],[12,"sa_data","","",12,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",13,null],[12,"sin_port","","",13,null],[12,"sin_addr","","",13,null],[12,"sin_zero","","",13,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",14,null],[12,"sin6_port","","",14,null],[12,"sin6_flowinfo","","",14,null],[12,"sin6_addr","","",14,null],[12,"sin6_scope_id","","",14,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",15,null],[12,"sun_path","","",15,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",16,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",17,null],[12,"ai_family","","",17,null],[12,"ai_socktype","","",17,null],[12,"ai_protocol","","",17,null],[12,"ai_addrlen","","",17,null],[12,"ai_addr","","",17,null],[12,"ai_canonname","","",17,null],[12,"ai_next","","",17,null],[3,"sockaddr_ll","","",null,null],[12,"sll_family","","",18,null],[12,"sll_protocol","","",18,null],[12,"sll_ifindex","","",18,null],[12,"sll_hatype","","",18,null],[12,"sll_pkttype","","",18,null],[12,"sll_halen","","",18,null],[12,"sll_addr","","",18,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",19,null],[12,"tm_min","","",19,null],[12,"tm_hour","","",19,null],[12,"tm_mday","","",19,null],[12,"tm_mon","","",19,null],[12,"tm_year","","",19,null],[12,"tm_wday","","",19,null],[12,"tm_yday","","",19,null],[12,"tm_isdst","","",19,null],[12,"tm_gmtoff","","",19,null],[12,"tm_zone","","",19,null],[3,"sched_param","","",null,null],[12,"sched_priority","","",20,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",21,null],[12,"dli_fbase","","",21,null],[12,"dli_sname","","",21,null],[12,"dli_saddr","","",21,null],[3,"epoll_event","","",null,null],[12,"events","","",22,null],[12,"u64","","",22,null],[3,"utsname","","",null,null],[12,"sysname","","",23,null],[12,"nodename","","",23,null],[12,"release","","",23,null],[12,"version","","",23,null],[12,"machine","","",23,null],[12,"domainname","","",23,null],[3,"dirent","","",null,null],[12,"d_ino","","",24,null],[12,"d_off","","",24,null],[12,"d_reclen","","",24,null],[12,"d_type","","",24,null],[12,"d_name","","",24,null],[3,"dirent64","","",null,null],[12,"d_ino","","",25,null],[12,"d_off","","",25,null],[12,"d_reclen","","",25,null],[12,"d_type","","",25,null],[12,"d_name","","",25,null],[3,"rlimit64","","",null,null],[12,"rlim_cur","","",26,null],[12,"rlim_max","","",26,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",27,null],[12,"gl_pathv","","",27,null],[12,"gl_offs","","",27,null],[12,"gl_flags","","",27,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",28,null],[12,"ifa_name","","",28,null],[12,"ifa_flags","","",28,null],[12,"ifa_addr","","",28,null],[12,"ifa_netmask","","",28,null],[12,"ifa_ifu","","",28,null],[12,"ifa_data","","",28,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"passwd","","",null,null],[12,"pw_name","","",29,null],[12,"pw_passwd","","",29,null],[12,"pw_uid","","",29,null],[12,"pw_gid","","",29,null],[12,"pw_gecos","","",29,null],[12,"pw_dir","","",29,null],[12,"pw_shell","","",29,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",30,null],[12,"f_frsize","","",30,null],[12,"f_blocks","","",30,null],[12,"f_bfree","","",30,null],[12,"f_bavail","","",30,null],[12,"f_files","","",30,null],[12,"f_ffree","","",30,null],[12,"f_favail","","",30,null],[12,"f_fsid","","",30,null],[12,"f_flag","","",30,null],[12,"f_namemax","","",30,null],[3,"sockaddr_nl","","",null,null],[12,"nl_family","","",31,null],[12,"nl_pid","","",31,null],[12,"nl_groups","","",31,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",32,null],[12,"dqb_bsoftlimit","","",32,null],[12,"dqb_curspace","","",32,null],[12,"dqb_ihardlimit","","",32,null],[12,"dqb_isoftlimit","","",32,null],[12,"dqb_curinodes","","",32,null],[12,"dqb_btime","","",32,null],[12,"dqb_itime","","",32,null],[12,"dqb_valid","","",32,null],[3,"signalfd_siginfo","","",null,null],[12,"ssi_signo","","",33,null],[12,"ssi_errno","","",33,null],[12,"ssi_code","","",33,null],[12,"ssi_pid","","",33,null],[12,"ssi_uid","","",33,null],[12,"ssi_fd","","",33,null],[12,"ssi_tid","","",33,null],[12,"ssi_band","","",33,null],[12,"ssi_overrun","","",33,null],[12,"ssi_trapno","","",33,null],[12,"ssi_status","","",33,null],[12,"ssi_int","","",33,null],[12,"ssi_ptr","","",33,null],[12,"ssi_utime","","",33,null],[12,"ssi_stime","","",33,null],[12,"ssi_addr","","",33,null],[3,"fsid_t","","",null,null],[3,"mq_attr","","",null,null],[12,"mq_flags","","",34,null],[12,"mq_maxmsg","","",34,null],[12,"mq_msgsize","","",34,null],[12,"mq_curmsgs","","",34,null],[3,"cpu_set_t","","",null,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",35,null],[12,"sa_mask","","",35,null],[12,"sa_flags","","",35,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",36,null],[12,"ss_flags","","",36,null],[12,"ss_size","","",36,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",37,null],[12,"si_errno","","",37,null],[12,"si_code","","",37,null],[12,"_pad","","",37,null],[3,"glob64_t","","",null,null],[12,"gl_pathc","","",38,null],[12,"gl_pathv","","",38,null],[12,"gl_offs","","",38,null],[12,"gl_flags","","",38,null],[3,"ucred","","",null,null],[12,"pid","","",39,null],[12,"uid","","",39,null],[12,"gid","","",39,null],[3,"statfs","","",null,null],[12,"f_type","","",40,null],[12,"f_bsize","","",40,null],[12,"f_blocks","","",40,null],[12,"f_bfree","","",40,null],[12,"f_bavail","","",40,null],[12,"f_files","","",40,null],[12,"f_ffree","","",40,null],[12,"f_fsid","","",40,null],[12,"f_namelen","","",40,null],[12,"f_frsize","","",40,null],[3,"msghdr","","",null,null],[12,"msg_name","","",41,null],[12,"msg_namelen","","",41,null],[12,"msg_iov","","",41,null],[12,"msg_iovlen","","",41,null],[12,"msg_control","","",41,null],[12,"msg_controllen","","",41,null],[12,"msg_flags","","",41,null],[3,"termios","","",null,null],[12,"c_iflag","","",42,null],[12,"c_oflag","","",42,null],[12,"c_cflag","","",42,null],[12,"c_lflag","","",42,null],[12,"c_line","","",42,null],[12,"c_cc","","",42,null],[12,"c_ispeed","","",42,null],[12,"c_ospeed","","",42,null],[3,"flock","","",null,null],[12,"l_type","","",43,null],[12,"l_whence","","",43,null],[12,"l_start","","",43,null],[12,"l_len","","",43,null],[12,"l_pid","","",43,null],[3,"ipc_perm","","",null,null],[12,"__key","","",44,null],[12,"uid","","",44,null],[12,"gid","","",44,null],[12,"cuid","","",44,null],[12,"cgid","","",44,null],[12,"mode","","",44,null],[12,"__seq","","",44,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",45,null],[12,"shm_segsz","","",45,null],[12,"shm_atime","","",45,null],[12,"shm_dtime","","",45,null],[12,"shm_ctime","","",45,null],[12,"shm_cpid","","",45,null],[12,"shm_lpid","","",45,null],[12,"shm_nattch","","",45,null],[3,"sigset_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",46,null],[12,"st_ino","","",46,null],[12,"st_nlink","","",46,null],[12,"st_mode","","",46,null],[12,"st_uid","","",46,null],[12,"st_gid","","",46,null],[12,"st_rdev","","",46,null],[12,"st_size","","",46,null],[12,"st_blksize","","",46,null],[12,"st_blocks","","",46,null],[12,"st_atime","","",46,null],[12,"st_atime_nsec","","",46,null],[12,"st_mtime","","",46,null],[12,"st_mtime_nsec","","",46,null],[12,"st_ctime","","",46,null],[12,"st_ctime_nsec","","",46,null],[3,"stat64","","",null,null],[12,"st_dev","","",47,null],[12,"st_ino","","",47,null],[12,"st_nlink","","",47,null],[12,"st_mode","","",47,null],[12,"st_uid","","",47,null],[12,"st_gid","","",47,null],[12,"st_rdev","","",47,null],[12,"st_size","","",47,null],[12,"st_blksize","","",47,null],[12,"st_blocks","","",47,null],[12,"st_atime","","",47,null],[12,"st_atime_nsec","","",47,null],[12,"st_mtime","","",47,null],[12,"st_mtime_nsec","","",47,null],[12,"st_ctime","","",47,null],[12,"st_ctime_nsec","","",47,null],[3,"pthread_attr_t","","",null,null],[3,"mcontext_t","","",null,null],[3,"ucontext_t","","",null,null],[12,"uc_flags","","",48,null],[12,"uc_link","","",48,null],[12,"uc_stack","","",48,null],[12,"uc_mcontext","","",48,null],[12,"uc_sigmask","","",48,null],[4,"c_void","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"DIR","","",null,null],[4,"timezone","","",null,null],[4,"fpos64_t","","",null,null],[5,"FD_CLR","","",null,null],[5,"FD_ISSET","","",null,null],[5,"FD_SET","","",null,null],[5,"FD_ZERO","","",null,null],[5,"WIFEXITED","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"bool"}}],[5,"WEXITSTATUS","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"WTERMSIG","","",null,{"inputs":[{"name":"c_int"}],"output":{"name":"c_int"}}],[5,"CPU_ZERO","","",null,null],[5,"CPU_SET","","",null,null],[5,"CPU_ISSET","","",null,{"inputs":[{"name":"usize"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"CPU_EQUAL","","",null,{"inputs":[{"name":"cpu_set_t"},{"name":"cpu_set_t"}],"output":{"name":"bool"}}],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"popen","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir_r","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"chown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pause","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"getrusage","","",null,null],[5,"getdtablesize","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"gettimeofday","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_create","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"pthread_kill","","",null,null],[5,"strerror_r","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"sigaltstack","","",null,null],[5,"sigwait","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"mknod","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"uname","","",null,null],[5,"daemon","","",null,null],[5,"gethostname","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"getsid","","",null,null],[5,"madvise","","",null,null],[5,"readlink","","",null,null],[5,"msync","","",null,null],[5,"sysconf","","",null,null],[5,"recvfrom","","",null,null],[5,"mkfifo","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"timegm","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkstemps","","",null,null],[5,"mkdtemp","","",null,null],[5,"futimes","","",null,null],[5,"getpwuid_r","","",null,null],[5,"fdatasync","","",null,null],[5,"mincore","","",null,null],[5,"clock_gettime","","",null,null],[5,"prctl","","",null,null],[5,"pthread_getattr_np","","",null,null],[5,"pthread_attr_getguardsize","","",null,null],[5,"pthread_attr_getstack","","",null,null],[5,"memalign","","",null,null],[5,"setgroups","","",null,null],[5,"sched_setscheduler","","",null,null],[5,"sched_getscheduler","","",null,null],[5,"sched_get_priority_max","","",null,null],[5,"sched_get_priority_min","","",null,null],[5,"epoll_create","","",null,null],[5,"epoll_ctl","","",null,null],[5,"epoll_wait","","",null,null],[5,"pipe2","","",null,null],[5,"mount","","",null,null],[5,"umount","","",null,null],[5,"umount2","","",null,null],[5,"clone","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"memrchr","","",null,null],[5,"syscall","","",null,null],[5,"sendfile","","",null,null],[5,"splice","","",null,null],[5,"tee","","",null,null],[5,"vmsplice","","",null,null],[5,"posix_fadvise","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"shm_open","","",null,null],[5,"shmget","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"mprotect","","",null,null],[5,"__errno_location","","",null,null],[5,"fopen64","","",null,null],[5,"freopen64","","",null,null],[5,"tmpfile64","","",null,null],[5,"fgetpos64","","",null,null],[5,"fsetpos64","","",null,null],[5,"fstat64","","",null,null],[5,"stat64","","",null,null],[5,"open64","","",null,null],[5,"creat64","","",null,null],[5,"lseek64","","",null,null],[5,"pread64","","",null,null],[5,"pwrite64","","",null,null],[5,"mmap64","","",null,null],[5,"lstat64","","",null,null],[5,"ftruncate64","","",null,null],[5,"readdir64_r","","",null,null],[5,"getrlimit64","","",null,null],[5,"setrlimit64","","",null,null],[5,"fseeko64","","",null,null],[5,"ftello64","","",null,null],[5,"fallocate","","",null,null],[5,"posix_fallocate","","",null,null],[5,"readahead","","",null,null],[5,"getxattr","","",null,null],[5,"lgetxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"lsetxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"llistxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"lremovexattr","","",null,null],[5,"fremovexattr","","",null,null],[5,"signalfd","","",null,null],[5,"pwritev","","",null,null],[5,"preadv","","",null,null],[5,"quotactl","","",null,null],[5,"mq_open","","",null,null],[5,"mq_close","","",null,null],[5,"mq_unlink","","",null,null],[5,"mq_receive","","",null,null],[5,"mq_send","","",null,null],[5,"mq_getattr","","",null,null],[5,"mq_setattr","","",null,null],[5,"sched_getaffinity","","",null,null],[5,"sched_setaffinity","","",null,null],[5,"epoll_pwait","","",null,null],[5,"dup3","","",null,null],[5,"unshare","","",null,null],[5,"sethostname","","",null,null],[5,"setns","","",null,null],[5,"mkostemp","","",null,null],[5,"mkostemps","","",null,null],[5,"sigtimedwait","","",null,null],[5,"sigwaitinfo","","",null,null],[5,"sysctl","","",null,null],[5,"ioctl","","",null,null],[5,"backtrace","","",null,null],[5,"glob64","","",null,null],[5,"globfree64","","",null,null],[5,"getnameinfo","","",null,null],[5,"eventfd","","",null,null],[5,"ptrace","","",null,null],[5,"pthread_attr_getaffinity_np","","",null,null],[5,"pthread_attr_setaffinity_np","","",null,null],[5,"getcontext","","",null,null],[5,"setcontext","","",null,null],[5,"makecontext","","",null,null],[5,"swapcontext","","",null,null],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",49,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",49,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",49,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",49,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",49,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",49,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",49,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",49,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",49,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",49,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",49,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",49,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",49,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",49,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",49,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",49,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",49,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",49,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",49,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",49,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",50,{"inputs":[],"output":{"name":"wrapping"}}],[11,"fmt","","",50,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"shl","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",50,null],[11,"shr","","",50,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"add","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",50,null],[11,"sub","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",50,null],[11,"mul","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",50,null],[11,"div","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",50,null],[11,"rem","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",50,null],[11,"not","","",50,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",50,null],[11,"bitor","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",50,null],[11,"bitand","","",50,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",50,null],[11,"fmt","","",51,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",51,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",51,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",51,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",52,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",52,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",52,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",52,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",53,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",53,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",53,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",53,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",52,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",54,null],[11,"fmt","","",54,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",54,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",54,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",54,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",54,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",55,null],[11,"get","","Dereferences the content.",55,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",55,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",55,null],[11,"fmt","","",55,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",56,null],[11,"clone","","",56,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",56,null],[11,"fmt","","",56,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",57,null],[11,"eq","","",57,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",57,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",57,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",57,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",58,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",58,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",58,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",58,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",59,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",59,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",59,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",59,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",60,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",60,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",60,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",60,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",61,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",61,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",61,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",61,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",62,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",62,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",62,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",62,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",62,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",62,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",62,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","libc","",63,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",63,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",63,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",63,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",63,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",63,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",63,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",63,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",64,null],[11,"fmt","","",64,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",64,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",64,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",64,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",64,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",65,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",66,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",67,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",68,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"clone","","",69,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",65,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",65,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",65,null],[11,"swap","","Stores a value into the bool, returning the old value.",65,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",65,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",65,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",65,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",65,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",65,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",65,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",65,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",66,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",66,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",66,null],[11,"swap","","Stores a value into the isize, returning the old value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange_weak","","Stores a value into the `isize if the current value is the same as the `current` value.",66,null],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",66,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",67,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",67,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",67,null],[11,"swap","","Stores a value into the usize, returning the old value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",67,null],[11,"fetch_add","","Add to the current usize, returning the previous value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",67,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",68,null],[11,"load","","Loads a value from the pointer.",68,null],[11,"store","","Stores a value into the pointer.",68,null],[11,"swap","","Stores a value into the pointer, returning the old value.",68,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",68,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",68,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",68,null],[11,"fmt","","",67,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",66,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",65,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",68,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",70,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",70,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",70,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",70,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",70,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",70,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",70,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",71,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",71,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",71,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",71,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",72,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",72,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",72,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",72,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",72,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",72,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",72,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",72,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",72,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",73,null],[11,"clone","","",73,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",74,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",74,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",74,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",74,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",75,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",75,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",76,null],[11,"deref","","",75,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",75,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",77,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",77,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",77,null],[11,"clone","core::char","",78,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",79,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",78,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",78,null],[11,"clone","","",80,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",81,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",80,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"count","","",80,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",80,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",80,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",82,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",82,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",83,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",83,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",84,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",84,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"clone","","",85,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",86,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",85,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",85,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",85,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",85,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",87,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",87,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",88,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",89,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",89,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",89,null],[11,"next_back","","",89,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",90,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",90,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",90,null],[11,"next_back","","",90,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",91,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",91,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",91,null],[11,"nth","","",91,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",91,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",91,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",92,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",92,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",92,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",92,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",92,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",92,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",92,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",93,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",93,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"clone","","",94,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",94,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"clone","","",95,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",95,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",95,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",95,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",95,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"clone","","",96,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",96,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",96,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"clone","","",97,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",97,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"clone","","",98,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",98,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",99,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",99,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",99,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",99,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",99,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",99,null],[11,"next_back","","",99,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",100,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",100,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next_back","","",100,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",101,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",60,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",59,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",101,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"clone","","",102,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",102,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next_back","","",102,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",101,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next","core::ops","",59,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"next_back","","",59,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",60,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",103,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",103,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"next_back","","",103,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",104,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"next_back","","",104,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",104,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",104,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",104,{"inputs":[],"output":{"name":"empty"}}],[11,"clone","","",105,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",105,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"next_back","","",105,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",105,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",49,null],[11,"fmt","","",49,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",49,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",49,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",49,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",49,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",106,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",106,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"next_back","","",106,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",107,null],[11,"next_back","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",107,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",108,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",108,null],[11,"next_back","","",108,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",109,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",109,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",109,null],[11,"next_back","","",109,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",49,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",110,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",111,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",112,null],[11,"fmt","","",112,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",112,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",112,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",112,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",112,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",112,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",112,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",112,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",112,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",112,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",112,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",112,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",112,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",112,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",112,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",112,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",112,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",112,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",112,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",112,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",112,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",113,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",113,null],[11,"next_back","","",113,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",113,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",114,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",114,null],[11,"next_back","","",114,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",115,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",115,null],[11,"next_back","","",115,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",112,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",116,null],[11,"next","","",116,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",116,null],[11,"count","","",116,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",116,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",116,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",116,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",116,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",117,null],[11,"next","","",117,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",117,null],[11,"count","","",117,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",117,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",117,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",117,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",118,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",118,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",118,null],[11,"next_back","","",118,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",118,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",119,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",119,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",119,null],[11,"next_back","","",119,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",120,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",120,null],[11,"next","","",121,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next","","",122,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next","","",123,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"next","","",124,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",124,null],[11,"clone","","",125,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",125,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",125,null],[11,"count","","",125,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",125,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",125,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",125,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",126,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",126,null],[11,"count","","",126,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",126,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",126,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",126,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",127,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",127,null],[11,"count","","",127,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",127,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",127,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",127,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",128,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",128,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",128,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",128,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",129,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",130,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",129,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",129,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",129,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",131,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",132,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",133,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",134,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",134,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",135,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",135,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",136,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",136,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",134,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",134,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",134,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",134,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",134,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",137,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",137,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",138,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",138,null],[11,"matching","","",138,null],[11,"use_early_reject","","",139,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",139,null],[11,"matching","","",139,null],[11,"eq","core::str","",140,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",140,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",140,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",140,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",140,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",141,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",141,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",141,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",141,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",141,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",141,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",142,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",142,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",142,null],[11,"next_back","","",142,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",142,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",143,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",143,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",143,null],[11,"next_back","","",143,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",143,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",144,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",144,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",144,null],[11,"count","","",144,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",144,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",144,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",144,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",144,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",145,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",146,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",146,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",147,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",147,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",146,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",147,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",148,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",148,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",149,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",149,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",148,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",149,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",150,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",151,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",151,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",152,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",152,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",153,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",154,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",154,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",155,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",155,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",154,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",155,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",156,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",157,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",157,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",158,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",158,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",157,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",158,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",159,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",159,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",159,null],[11,"next_back","","",159,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",160,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",161,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",161,null],[11,"call_mut","","",161,null],[11,"call_once","","",161,null],[11,"next","","",160,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",160,null],[11,"next_back","","",160,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",162,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",163,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",163,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",163,null],[11,"finish","","",163,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",163,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",163,{"inputs":[],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",164,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",164,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",164,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"eq","core::fmt::num","",165,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",165,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",165,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",166,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",166,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",166,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",167,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",167,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",167,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",168,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",168,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",168,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",169,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",169,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",170,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",170,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",170,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",171,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",171,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",172,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",173,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",173,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",174,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",174,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",174,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",175,null],[11,"entry","","Adds a new entry to the set output.",176,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",176,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",176,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",177,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",177,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",177,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",178,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",178,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",178,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",179,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",179,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",180,{"inputs":[{"name":"argumentv1"}],"output":{"name":"argumentv1"}}],[11,"clone","","",181,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",182,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",182,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",182,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",183,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",183,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",183,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",183,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",183,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",183,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",183,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",183,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",183,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",183,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",183,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",183,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",183,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",183,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",183,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",183,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",183,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",183,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",183,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",183,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",183,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",179,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",57,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",70,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",72,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",74,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",75,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone_from","libc::dox","Performs copy-assignment from `source`.",184,null],[11,"clone_from","libc::dox::imp","Performs copy-assignment from `source`.",184,null],[11,"clone","libc","",46,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",47,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",185,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","","",186,{"inputs":[{"name":"mcontext_t"}],"output":{"name":"mcontext_t"}}],[11,"clone","","",48,{"inputs":[{"name":"ucontext_t"}],"output":{"name":"ucontext_t"}}],[11,"clone","","",187,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","","",35,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",36,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",37,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",38,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",39,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",40,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",41,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",42,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",43,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","","",44,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",45,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"clone","","",24,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",25,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",26,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",27,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",28,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",188,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",189,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",190,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",191,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",29,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",30,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",31,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",32,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",33,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",192,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",34,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",193,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","","",12,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",13,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",15,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",16,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",17,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",18,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",194,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",19,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",20,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",21,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",22,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",23,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","","",0,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",1,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",2,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",3,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",4,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",5,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",6,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",7,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",8,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",9,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",10,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",11,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"loff_t","","",null,null],[6,"useconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"socklen_t","","",null,null],[6,"pthread_t","","",null,null],[6,"mode_t","","",null,null],[6,"ino64_t","","",null,null],[6,"off64_t","","",null,null],[6,"blkcnt64_t","","",null,null],[6,"rlim64_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"mqd_t","","",null,null],[6,"nfds_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"rlim_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"ino_t","","",null,null],[6,"off_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"__fsword_t","","",null,null],[6,"c_char","","",null,null],[6,"wchar_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"SIGTRAP","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_LOCKS","","",null,null],[17,"RLIMIT_SIGPENDING","","",null,null],[17,"RLIMIT_MSGQUEUE","","",null,null],[17,"RLIMIT_NICE","","",null,null],[17,"RLIMIT_RTPRIO","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"SOCK_CLOEXEC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_RDONLY","","",null,null],[17,"MS_NOSUID","","",null,null],[17,"MS_NODEV","","",null,null],[17,"MS_NOEXEC","","",null,null],[17,"MS_SYNCHRONOUS","","",null,null],[17,"MS_REMOUNT","","",null,null],[17,"MS_MANDLOCK","","",null,null],[17,"MS_DIRSYNC","","",null,null],[17,"MS_NOATIME","","",null,null],[17,"MS_NODIRATIME","","",null,null],[17,"MS_BIND","","",null,null],[17,"MS_MOVE","","",null,null],[17,"MS_REC","","",null,null],[17,"MS_SILENT","","",null,null],[17,"MS_POSIXACL","","",null,null],[17,"MS_UNBINDABLE","","",null,null],[17,"MS_PRIVATE","","",null,null],[17,"MS_SLAVE","","",null,null],[17,"MS_SHARED","","",null,null],[17,"MS_ACTIVE","","",null,null],[17,"MS_NOUSER","","",null,null],[17,"MS_MGC_VAL","","",null,null],[17,"MS_MGC_MSK","","",null,null],[17,"MS_RMT_MASK","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EAGAIN","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EBFONT","","",null,null],[17,"ENOSTR","","",null,null],[17,"ENODATA","","",null,null],[17,"ETIME","","",null,null],[17,"ENOSR","","",null,null],[17,"ENONET","","",null,null],[17,"ENOPKG","","",null,null],[17,"EREMOTE","","",null,null],[17,"ENOLINK","","",null,null],[17,"EADV","","",null,null],[17,"ESRMNT","","",null,null],[17,"ECOMM","","",null,null],[17,"EPROTO","","",null,null],[17,"EDOTDOT","","",null,null],[17,"AF_PACKET","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"PROT_GROWSDOWN","","",null,null],[17,"PROT_GROWSUP","","",null,null],[17,"MAP_TYPE","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_REMOVE","","",null,null],[17,"MADV_DONTFORK","","",null,null],[17,"MADV_DOFORK","","",null,null],[17,"MADV_MERGEABLE","","",null,null],[17,"MADV_UNMERGEABLE","","",null,null],[17,"MADV_HWPOISON","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_TRANSPARENT","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"TCP_CORK","","",null,null],[17,"TCP_KEEPIDLE","","",null,null],[17,"TCP_KEEPINTVL","","",null,null],[17,"TCP_KEEPCNT","","",null,null],[17,"TCP_SYNCNT","","",null,null],[17,"TCP_LINGER2","","",null,null],[17,"TCP_DEFER_ACCEPT","","",null,null],[17,"TCP_WINDOW_CLAMP","","",null,null],[17,"TCP_INFO","","",null,null],[17,"TCP_QUICKACK","","",null,null],[17,"TCP_CONGESTION","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"PATH_MAX","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"EPOLLIN","","",null,null],[17,"EPOLLPRI","","",null,null],[17,"EPOLLOUT","","",null,null],[17,"EPOLLRDNORM","","",null,null],[17,"EPOLLRDBAND","","",null,null],[17,"EPOLLWRNORM","","",null,null],[17,"EPOLLWRBAND","","",null,null],[17,"EPOLLMSG","","",null,null],[17,"EPOLLERR","","",null,null],[17,"EPOLLHUP","","",null,null],[17,"EPOLLET","","",null,null],[17,"EPOLL_CTL_ADD","","",null,null],[17,"EPOLL_CTL_MOD","","",null,null],[17,"EPOLL_CTL_DEL","","",null,null],[17,"MNT_DETACH","","",null,null],[17,"MNT_EXPIRE","","",null,null],[17,"Q_GETFMT","","",null,null],[17,"Q_GETINFO","","",null,null],[17,"Q_SETINFO","","",null,null],[17,"QIF_BLIMITS","","",null,null],[17,"QIF_SPACE","","",null,null],[17,"QIF_ILIMITS","","",null,null],[17,"QIF_INODES","","",null,null],[17,"QIF_BTIME","","",null,null],[17,"QIF_ITIME","","",null,null],[17,"QIF_LIMITS","","",null,null],[17,"QIF_USAGE","","",null,null],[17,"QIF_TIMES","","",null,null],[17,"QIF_ALL","","",null,null],[17,"CBAUD","","",null,null],[17,"EFD_CLOEXEC","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"TAB3","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VTIME","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"CRTSCTS","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"CLONE_VM","","",null,null],[17,"CLONE_FS","","",null,null],[17,"CLONE_FILES","","",null,null],[17,"CLONE_SIGHAND","","",null,null],[17,"CLONE_PTRACE","","",null,null],[17,"CLONE_VFORK","","",null,null],[17,"CLONE_PARENT","","",null,null],[17,"CLONE_THREAD","","",null,null],[17,"CLONE_NEWNS","","",null,null],[17,"CLONE_SYSVSEM","","",null,null],[17,"CLONE_SETTLS","","",null,null],[17,"CLONE_PARENT_SETTID","","",null,null],[17,"CLONE_CHILD_CLEARTID","","",null,null],[17,"CLONE_DETACHED","","",null,null],[17,"CLONE_UNTRACED","","",null,null],[17,"CLONE_CHILD_SETTID","","",null,null],[17,"WNOHANG","","",null,null],[17,"SPLICE_F_MOVE","","",null,null],[17,"SPLICE_F_NONBLOCK","","",null,null],[17,"SPLICE_F_MORE","","",null,null],[17,"SPLICE_F_GIFT","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"POSIX_FADV_NORMAL","","",null,null],[17,"POSIX_FADV_RANDOM","","",null,null],[17,"POSIX_FADV_SEQUENTIAL","","",null,null],[17,"POSIX_FADV_WILLNEED","","",null,null],[17,"POSIX_FADV_DONTNEED","","",null,null],[17,"POSIX_FADV_NOREUSE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"RLIM_SAVED_MAX","","",null,null],[17,"RLIM_SAVED_CUR","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"ST_NODEV","","",null,null],[17,"ST_NOEXEC","","",null,null],[17,"ST_SYNCHRONOUS","","",null,null],[17,"ST_MANDLOCK","","",null,null],[17,"ST_WRITE","","",null,null],[17,"ST_APPEND","","",null,null],[17,"ST_IMMUTABLE","","",null,null],[17,"ST_NOATIME","","",null,null],[17,"ST_NODIRATIME","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"TCP_MD5SIG","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"__SIZEOF_PTHREAD_COND_T","","",null,null],[17,"SCHED_OTHER","","",null,null],[17,"SCHED_FIFO","","",null,null],[17,"SCHED_RR","","",null,null],[17,"SCHED_BATCH","","",null,null],[17,"SCHED_IDLE","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_INFO","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHM_REMAP","","",null,null],[17,"SHM_EXEC","","",null,null],[17,"SHM_LOCK","","",null,null],[17,"SHM_UNLOCK","","",null,null],[17,"SHM_HUGETLB","","",null,null],[17,"SHM_NORESERVE","","",null,null],[17,"MS_RELATIME","","",null,null],[17,"MS_KERNMOUNT","","",null,null],[17,"MS_I_VERSION","","",null,null],[17,"MS_STRICTATIME","","",null,null],[17,"EPOLLRDHUP","","",null,null],[17,"EPOLLONESHOT","","",null,null],[17,"QFMT_VFS_OLD","","",null,null],[17,"QFMT_VFS_V0","","",null,null],[17,"SFD_CLOEXEC","","",null,null],[17,"EFD_SEMAPHORE","","",null,null],[17,"NCCS","","",null,null],[17,"CLONE_NEWUTS","","",null,null],[17,"CLONE_NEWIPC","","",null,null],[17,"CLONE_NEWUSER","","",null,null],[17,"CLONE_NEWPID","","",null,null],[17,"CLONE_NEWNET","","",null,null],[17,"CLONE_IO","","",null,null],[17,"AF_NETLINK","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RLIMIT_RTTIME","","",null,null],[17,"RLIMIT_NLIMITS","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_RSYNC","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_FSYNC","","",null,null],[17,"SOCK_NONBLOCK","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"MAP_GROWSDOWN","","",null,null],[17,"MAP_DENYWRITE","","",null,null],[17,"MAP_EXECUTABLE","","",null,null],[17,"MAP_POPULATE","","",null,null],[17,"MAP_NONBLOCK","","",null,null],[17,"MAP_STACK","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"ELOOP","","",null,null],[17,"ENOMSG","","",null,null],[17,"EIDRM","","",null,null],[17,"ECHRNG","","",null,null],[17,"EL2NSYNC","","",null,null],[17,"EL3HLT","","",null,null],[17,"EL3RST","","",null,null],[17,"ELNRNG","","",null,null],[17,"EUNATCH","","",null,null],[17,"ENOCSI","","",null,null],[17,"EL2HLT","","",null,null],[17,"EBADE","","",null,null],[17,"EBADR","","",null,null],[17,"EXFULL","","",null,null],[17,"ENOANO","","",null,null],[17,"EBADRQC","","",null,null],[17,"EBADSLT","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"ENOTUNIQ","","",null,null],[17,"EBADFD","","",null,null],[17,"EBADMSG","","",null,null],[17,"EREMCHG","","",null,null],[17,"ELIBACC","","",null,null],[17,"ELIBBAD","","",null,null],[17,"ELIBSCN","","",null,null],[17,"ELIBMAX","","",null,null],[17,"ELIBEXEC","","",null,null],[17,"EILSEQ","","",null,null],[17,"ERESTART","","",null,null],[17,"ESTRPIPE","","",null,null],[17,"EUSERS","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"EALREADY","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"ESTALE","","",null,null],[17,"EUCLEAN","","",null,null],[17,"ENOTNAM","","",null,null],[17,"ENAVAIL","","",null,null],[17,"EISNAM","","",null,null],[17,"EREMOTEIO","","",null,null],[17,"EDQUOT","","",null,null],[17,"ENOMEDIUM","","",null,null],[17,"EMEDIUMTYPE","","",null,null],[17,"ECANCELED","","",null,null],[17,"ENOKEY","","",null,null],[17,"EKEYEXPIRED","","",null,null],[17,"EKEYREVOKED","","",null,null],[17,"EKEYREJECTED","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EHWPOISON","","",null,null],[17,"ERFKILL","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"TCP_COOKIE_TRANSACTIONS","","",null,null],[17,"TCP_THIN_LINEAR_TIMEOUTS","","",null,null],[17,"TCP_THIN_DUPACK","","",null,null],[17,"TCP_USER_TIMEOUT","","",null,null],[17,"TCP_REPAIR","","",null,null],[17,"TCP_REPAIR_QUEUE","","",null,null],[17,"TCP_QUEUE_SEQ","","",null,null],[17,"TCP_REPAIR_OPTIONS","","",null,null],[17,"TCP_FASTOPEN","","",null,null],[17,"TCP_TIMESTAMP","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGSTKFLT","","",null,null],[17,"SIGUNUSED","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGPWR","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"FALLOC_FL_KEEP_SIZE","","",null,null],[17,"FALLOC_FL_PUNCH_HOLE","","",null,null],[17,"BUFSIZ","","",null,null],[17,"TMP_MAX","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_2_C_VERSION","","",null,null],[17,"RUSAGE_THREAD","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"ST_RELATIME","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"ADFS_SUPER_MAGIC","","",null,null],[17,"AFFS_SUPER_MAGIC","","",null,null],[17,"CODA_SUPER_MAGIC","","",null,null],[17,"CRAMFS_MAGIC","","",null,null],[17,"EFS_SUPER_MAGIC","","",null,null],[17,"EXT2_SUPER_MAGIC","","",null,null],[17,"EXT3_SUPER_MAGIC","","",null,null],[17,"EXT4_SUPER_MAGIC","","",null,null],[17,"HPFS_SUPER_MAGIC","","",null,null],[17,"HUGETLBFS_MAGIC","","",null,null],[17,"ISOFS_SUPER_MAGIC","","",null,null],[17,"JFFS2_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC","","",null,null],[17,"MINIX_SUPER_MAGIC2","","",null,null],[17,"MINIX2_SUPER_MAGIC","","",null,null],[17,"MINIX2_SUPER_MAGIC2","","",null,null],[17,"MSDOS_SUPER_MAGIC","","",null,null],[17,"NCP_SUPER_MAGIC","","",null,null],[17,"NFS_SUPER_MAGIC","","",null,null],[17,"OPENPROM_SUPER_MAGIC","","",null,null],[17,"PROC_SUPER_MAGIC","","",null,null],[17,"QNX4_SUPER_MAGIC","","",null,null],[17,"REISERFS_SUPER_MAGIC","","",null,null],[17,"SMB_SUPER_MAGIC","","",null,null],[17,"TMPFS_MAGIC","","",null,null],[17,"USBDEVICE_SUPER_MAGIC","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VMIN","","",null,null],[17,"IEXTEN","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"IUTF8","","",null,null],[17,"CPU_SETSIZE","","",null,null],[17,"EXTPROC","","",null,null],[17,"QFMT_VFS_V1","","",null,null],[17,"PTRACE_TRACEME","","",null,null],[17,"PTRACE_PEEKTEXT","","",null,null],[17,"PTRACE_PEEKDATA","","",null,null],[17,"PTRACE_PEEKUSER","","",null,null],[17,"PTRACE_POKETEXT","","",null,null],[17,"PTRACE_POKEDATA","","",null,null],[17,"PTRACE_POKEUSER","","",null,null],[17,"PTRACE_CONT","","",null,null],[17,"PTRACE_KILL","","",null,null],[17,"PTRACE_SINGLESTEP","","",null,null],[17,"PTRACE_ATTACH","","",null,null],[17,"PTRACE_DETACH","","",null,null],[17,"PTRACE_SYSCALL","","",null,null],[17,"PTRACE_SETOPTIONS","","",null,null],[17,"PTRACE_GETEVENTMSG","","",null,null],[17,"PTRACE_GETSIGINFO","","",null,null],[17,"PTRACE_SETSIGINFO","","",null,null],[17,"PTRACE_GETREGSET","","",null,null],[17,"PTRACE_SETREGSET","","",null,null],[17,"PTRACE_SEIZE","","",null,null],[17,"PTRACE_INTERRUPT","","",null,null],[17,"PTRACE_LISTEN","","",null,null],[17,"PTRACE_PEEKSIGINFO","","",null,null],[17,"MADV_DODUMP","","",null,null],[17,"MADV_DONTDUMP","","",null,null],[17,"EPOLLWAKEUP","","",null,null],[17,"MADV_HUGEPAGE","","",null,null],[17,"MADV_NOHUGEPAGE","","",null,null],[17,"MAP_HUGETLB","","",null,null],[17,"EFD_NONBLOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SFD_NONBLOCK","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"TCGETS","","",null,null],[17,"TCSETS","","",null,null],[17,"TCSETSW","","",null,null],[17,"TCSETSF","","",null,null],[17,"TCGETA","","",null,null],[17,"TCSETA","","",null,null],[17,"TCSETAW","","",null,null],[17,"TCSETAF","","",null,null],[17,"TCSBRK","","",null,null],[17,"TCXONC","","",null,null],[17,"TCFLSH","","",null,null],[17,"TIOCGSOFTCAR","","",null,null],[17,"TIOCSSOFTCAR","","",null,null],[17,"TIOCINQ","","",null,null],[17,"TIOCLINUX","","",null,null],[17,"TIOCGSERIAL","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMSET","","",null,null],[17,"FIONREAD","","",null,null],[17,"TIOCCONS","","",null,null],[17,"RTLD_DEEPBIND","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"__SIZEOF_PTHREAD_RWLOCK_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEX_T","","",null,null],[17,"__SIZEOF_PTHREAD_MUTEXATTR_T","","",null,null],[17,"O_DIRECT","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"MAP_LOCKED","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_32BIT","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"SO_PEERCRED","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONBIO","","",null,null],[17,"PTRACE_GETFPREGS","","",null,null],[17,"PTRACE_SETFPREGS","","",null,null],[17,"PTRACE_GETFPXREGS","","",null,null],[17,"PTRACE_SETFPXREGS","","",null,null],[17,"PTRACE_GETREGS","","",null,null],[17,"PTRACE_SETREGS","","",null,null],[17,"SYS_gettid","","",null,null]],"paths":[[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"mq_attr"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"stat"],[3,"stat64"],[3,"ucontext_t"],[4,"Option"],[3,"Wrapping"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"ArgumentV1"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"Clone"],[3,"pthread_attr_t"],[3,"mcontext_t"],[3,"sigset_t"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"fsid_t"],[3,"cpu_set_t"],[3,"fd_set"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator.","items":[[0,"error","bitflags::__core","Traits for working with Errors.",null,null],[8,"Error","bitflags::__core::error","Base functionality for all errors in Rust.",null,null],[10,"description","","A short description of the error.",0,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","The lower-level cause of this error, if any.",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[0,"prelude","bitflags::__core","The Rust Prelude",null,null],[0,"v1","bitflags::__core::prelude","The first version of the prelude of The Rust Standard Library.",null,null],[8,"Copy","bitflags::__core::prelude::v1","Types that can be copied by simply copying bits (i.e. `memcpy`).",null,null],[8,"Send","","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile-time.",null,null],[8,"Sync","","Types that can be safely shared between threads when aliased.",null,null],[8,"Drop","","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",1,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",2,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",3,null],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",4,null],[10,"call_once","","This is called when the call operator is used.",4,null],[5,"drop","","Disposes of a value.",null,null],[11,"new","alloc::boxed","Allocates memory on the heap and then places `x` into it.",5,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",5,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",5,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",5,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",5,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"exchangeheapsingleton"}}],[11,"pointer","","",7,null],[11,"make_place","","",7,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",7,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"finalize","","",5,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",6,{"inputs":[{"name":"exchangeheapsingleton"}],"output":{"name":"intermediatebox"}}],[11,"drop","","",7,null],[11,"default","","",5,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",5,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",5,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",5,null],[11,"clone","","",5,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"eq","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"option"}}],[11,"lt","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"le","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"ge","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"gt","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"bool"}}],[11,"cmp","","",5,{"inputs":[{"name":"box"},{"name":"box"}],"output":{"name":"ordering"}}],[11,"hash","","",5,null],[11,"from","","",5,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"fmt","","",5,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"box"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",5,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"deref_mut","","",5,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"next","","",5,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"size_hint","","",5,null],[11,"next_back","","",5,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"call_once","","",5,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"call_once","","",5,{"inputs":[{"name":"box"},{"name":"a"}],"output":{"name":"r"}}],[11,"clone","","",5,{"inputs":[{"name":"box"}],"output":{"name":"box"}}],[11,"borrow","","",5,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"borrow_mut","","",5,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_ref","","",5,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"as_mut","","",5,{"inputs":[{"name":"box"}],"output":{"name":"t"}}],[11,"fmt","alloc::arc","",8,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Arc&lt;T&gt;`.",9,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Arc&lt;T&gt;` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",9,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Arc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",9,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",9,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",9,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"clone","","Makes a clone of the `Arc&lt;T&gt;`.",9,{"inputs":[{"name":"arc"}],"output":{"name":"arc"}}],[11,"deref","","",9,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"make_mut","","Make a mutable reference into the given `Arc&lt;T&gt;`.\nIf the `Arc&lt;T&gt;` has more than one strong reference, or any weak\nreferences, the inner data is cloned.",9,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Arc&lt;T&gt;` has\none strong reference and no weak references.",9,{"inputs":[{"name":"arc"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Arc&lt;T&gt;`.",9,null],[11,"upgrade","","Upgrades a weak reference to a strong reference.",8,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",8,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",8,null],[11,"eq","","Equality for two `Arc&lt;T&gt;`s.",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Arc&lt;T&gt;`s.",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Arc&lt;T&gt;`s.",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Arc&lt;T&gt;`s.",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Arc&lt;T&gt;`s.",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"bool"}}],[11,"cmp","","",9,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ordering"}}],[11,"fmt","","",9,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"arc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"arc"}}],[11,"hash","","",9,null],[11,"from","","",9,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",8,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",9,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"as_ref","","",9,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",10,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has only one strong reference.\nThis will succeed even if there are outstanding weak references.",10,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",10,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",10,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",10,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",10,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",10,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",10,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",10,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",10,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"drop","","Drops the `Rc&lt;T&gt;`.",10,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",10,{"inputs":[{"name":"rc"}],"output":{"name":"rc"}}],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",10,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"option"}}],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"bool"}}],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",10,{"inputs":[{"name":"rc"},{"name":"rc"}],"output":{"name":"ordering"}}],[11,"hash","","",10,null],[11,"fmt","","",10,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",10,{"inputs":[{"name":"rc"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",10,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",11,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",11,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",11,{"inputs":[{"name":"weak"}],"output":{"name":"weak"}}],[11,"fmt","","",11,{"inputs":[{"name":"weak"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",11,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",10,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"as_ref","","",10,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"new","alloc::raw_vec","Creates the biggest possible RawVec without allocating. If T has positive\nsize, then this makes a RawVec with capacity 0. If T has 0 size, then it\nit makes a RawVec with capacity `usize::MAX`. Useful for implementing\ndelayed allocation.",12,{"inputs":[],"output":{"name":"rawvec"}}],[11,"with_capacity","","Creates a RawVec with exactly the capacity and alignment requirements\nfor a `[T; cap]`. This is equivalent to calling RawVec::new when `cap` is 0\nor T is zero-sized. Note that if `T` is zero-sized this means you will *not*\nget a RawVec with the requested capacity!",12,{"inputs":[{"name":"usize"}],"output":{"name":"rawvec"}}],[11,"from_raw_parts","","Reconstitutes a RawVec from a pointer and capacity.",12,null],[11,"from_box","","Converts a `Box&lt;[T]&gt;` into a `RawVec&lt;T&gt;`.",12,{"inputs":[{"name":"box"}],"output":{"name":"rawvec"}}],[11,"ptr","","Gets a raw pointer to the start of the allocation. Note that this is\nheap::EMPTY if `cap = 0` or T is zero-sized. In the former case, you must\nbe careful.",12,null],[11,"cap","","Gets the capacity of the allocation.",12,{"inputs":[{"name":"rawvec"}],"output":{"name":"usize"}}],[11,"double","","Doubles the size of the type&#39;s backing allocation. This is common enough\nto want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",12,null],[11,"double_in_place","","Attempts to double the size of the type&#39;s backing allocation in place. This is common\nenough to want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",12,{"inputs":[{"name":"rawvec"}],"output":{"name":"bool"}}],[11,"reserve_exact","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already,\nwill reallocate the minimum possible amount of memory necessary.\nGenerally this will be exactly the amount of memory necessary,\nbut in principle the allocator is free to give back more than\nwe asked for.",12,null],[11,"reserve","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate enough space plus comfortable slack\nspace to get amortized `O(1)` behavior. Will limit this behavior\nif it would needlessly cause itself to panic.",12,null],[11,"reserve_in_place","","Attempts to ensure that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate in place enough space plus comfortable slack\nspace to get amortized `O(1)` behaviour. Will limit this behaviour\nif it would needlessly cause itself to panic.",12,{"inputs":[{"name":"rawvec"},{"name":"usize"},{"name":"usize"}],"output":{"name":"bool"}}],[11,"shrink_to_fit","","Shrinks the allocation down to the specified amount. If the given amount\nis 0, actually completely deallocates.",12,null],[11,"into_box","","Converts the entire buffer into `Box&lt;[T]&gt;`.",12,{"inputs":[{"name":"rawvec"}],"output":{"name":"box"}}],[11,"unsafe_no_drop_flag_needs_drop","","This is a stupid name in the hopes that someone will find this in the\nnot too distant future and remove it with the rest of\n#[unsafe_no_drop_flag]",12,{"inputs":[{"name":"rawvec"}],"output":{"name":"bool"}}],[11,"drop","","Frees the memory owned by the RawVec *without* trying to Drop its contents.",12,null],[3,"Box","bitflags::__core::prelude::v1","A pointer type for heap allocation.",null,null],[8,"ToOwned","","A generalization of `Clone` to borrowed data.",null,null],[16,"Owned","","",13,null],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",13,null],[8,"Clone","","A common trait for cloning an object.",null,null],[10,"clone","","Returns a copy of the value.",14,{"inputs":[{"name":"clone"}],"output":{"name":"self"}}],[11,"clone_from","","Performs copy-assignment from `source`.",14,null],[8,"PartialEq","","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",15,{"inputs":[{"name":"partialeq"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"ne","","This method tests for `!=`.",15,{"inputs":[{"name":"partialeq"},{"name":"rhs"}],"output":{"name":"bool"}}],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"option"}}],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[8,"Ord","","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",17,{"inputs":[{"name":"ord"},{"name":"self"}],"output":{"name":"ordering"}}],[8,"AsRef","","A cheap, reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",18,{"inputs":[{"name":"asref"}],"output":{"name":"t"}}],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",19,{"inputs":[{"name":"asmut"}],"output":{"name":"t"}}],[8,"Into","","A conversion that consumes `self`, which may or may not be expensive.",null,null],[10,"into","","Performs the conversion.",20,{"inputs":[{"name":"into"}],"output":{"name":"t"}}],[8,"From","","Construct `Self` via a conversion.",null,null],[10,"from","","Performs the conversion.",21,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"Default","","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the &quot;default value&quot; for a type.",22,{"inputs":[],"output":{"name":"self"}}],[8,"Iterator","","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",23,null],[10,"next","","Advances the iterator and returns the next value.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",23,null],[11,"count","","Consumes the iterator, counting the number of iterations and returning it.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"usize"}}],[11,"last","","Consumes the iterator, returning the last element.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"nth","","Consumes the `n` first elements of the iterator, then returns the\n`next()` one.",23,{"inputs":[{"name":"iterator"},{"name":"usize"}],"output":{"name":"option"}}],[11,"chain","","Takes two iterators and creates a new iterator over both in sequence.",23,{"inputs":[{"name":"iterator"},{"name":"u"}],"output":{"name":"chain"}}],[11,"zip","","&#39;Zips up&#39; two iterators into a single iterator of pairs.",23,{"inputs":[{"name":"iterator"},{"name":"u"}],"output":{"name":"zip"}}],[11,"map","","Takes a closure and creates an iterator which calls that closure on each\nelement.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"map"}}],[11,"filter","","Creates an iterator which uses a closure to determine if an element\nshould be yielded.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"filter"}}],[11,"filter_map","","Creates an iterator that both filters and maps.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"enumerate","","Creates an iterator which gives the current iteration count as well as\nthe next value.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"enumerate"}}],[11,"peekable","","Creates an iterator which can look at the `next()` element without\nconsuming it.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"peekable"}}],[11,"skip_while","","Creates an iterator that [`skip()`]s elements based on a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Creates an iterator that yields elements based on a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"skip","","Creates an iterator that skips the first `n` elements.",23,{"inputs":[{"name":"iterator"},{"name":"usize"}],"output":{"name":"skip"}}],[11,"take","","Creates an iterator that yields its first `n` elements.",23,{"inputs":[{"name":"iterator"},{"name":"usize"}],"output":{"name":"take"}}],[11,"scan","","An iterator adaptor similar to [`fold()`] that holds internal state and\nproduces a new iterator.",23,{"inputs":[{"name":"iterator"},{"name":"st"},{"name":"f"}],"output":{"name":"scan"}}],[11,"flat_map","","Creates an iterator that works like map, but flattens nested structure.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"flatmap"}}],[11,"fuse","","Creates an iterator which ends after the first `None`.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with each element of an iterator, passing the value on.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"by_ref","","Borrows an iterator, rather than consuming it.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"self"}}],[11,"collect","","Transforms an iterator into a collection.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"b"}}],[11,"partition","","Consumes an iterator, creating two collections from it.",23,null],[11,"fold","","An iterator adaptor that applies a function, producing a single, final value.",23,{"inputs":[{"name":"iterator"},{"name":"b"},{"name":"f"}],"output":{"name":"b"}}],[11,"all","","Tests if every element of the iterator matches a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"bool"}}],[11,"any","","Tests if any element of the iterator matches a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"bool"}}],[11,"find","","Searches for an element of an iterator that satisfies a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"option"}}],[11,"position","","Searches for an element in an iterator, returning its index.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"option"}}],[11,"rposition","","Searches for an element in an iterator from the right, returning its\nindex.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"option"}}],[11,"max","","Returns the maximum element of an iterator.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"min","","Returns the minimum element of an iterator.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"max_by","","",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"max_by_key","","Returns the element that gives the maximum value from the\nspecified function.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"min_by","","",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"min_by_key","","Returns the element that gives the minimum value from the\nspecified function.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"rev","","Reverses an iterator&#39;s direction.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"rev"}}],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",23,null],[11,"cloned","","Creates an iterator which `clone()`s all of its elements.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"cloned"}}],[11,"cycle","","Repeats an iterator endlessly.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"cycle"}}],[11,"sum","","Sums the elements of an iterator.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"s"}}],[11,"product","","Iterates over the entire iterator, multiplying all the elements",23,{"inputs":[{"name":"iterator"}],"output":{"name":"p"}}],[11,"cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"option"}}],[11,"eq","","Determines if the elements of this `Iterator` are equal to those of\nanother.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"ne","","Determines if the elements of this `Iterator` are unequal to those of\nanother.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"lt","","Determines if the elements of this `Iterator` are lexicographically\nless than those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"le","","Determines if the elements of this `Iterator` are lexicographically\nless or equal to those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"gt","","Determines if the elements of this `Iterator` are lexicographically\ngreater than those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"ge","","Determines if the elements of this `Iterator` are lexicographically\ngreater than or equal to those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",24,null],[8,"IntoIterator","","Conversion into an `Iterator`.",null,null],[16,"Item","","The type of the elements being iterated over.",25,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",25,null],[10,"into_iter","","Creates an iterator from a value.",25,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","An iterator able to yield elements from both ends.",26,{"inputs":[{"name":"doubleendediterator"}],"output":{"name":"option"}}],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact number of times the iterator will iterate.",27,{"inputs":[{"name":"exactsizeiterator"}],"output":{"name":"usize"}}],[11,"is_some","core::option","Returns `true` if the option is a `Some` value",28,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"is_none","","Returns `true` if the option is a `None` value",28,{"inputs":[{"name":"option"}],"output":{"name":"bool"}}],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",28,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",28,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",28,{"inputs":[{"name":"option"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",28,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"unwrap_or","","Returns the contained value or a default.",28,{"inputs":[{"name":"option"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",28,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"t"}}],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",28,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",28,{"inputs":[{"name":"option"},{"name":"u"},{"name":"f"}],"output":{"name":"u"}}],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",28,{"inputs":[{"name":"option"},{"name":"d"},{"name":"f"}],"output":{"name":"u"}}],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",28,{"inputs":[{"name":"option"},{"name":"e"}],"output":{"name":"result"}}],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",28,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",28,{"inputs":[{"name":"option"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",28,{"inputs":[{"name":"option"}],"output":{"name":"itermut"}}],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",28,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",28,{"inputs":[{"name":"option"},{"name":"f"}],"output":{"name":"option"}}],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",28,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",28,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"unwrap_or_default","","Returns the contained value or a default",28,{"inputs":[{"name":"option"}],"output":{"name":"t"}}],[11,"default","core::num","",29,{"inputs":[],"output":{"name":"wrapping"}}],[11,"fmt","","",29,{"inputs":[{"name":"wrapping"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"cmp","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"option"}}],[11,"lt","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"le","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"gt","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ge","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"eq","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"ne","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"bool"}}],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"shl","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shl_assign","","",29,null],[11,"shr","","",29,{"inputs":[{"name":"wrapping"},{"name":"usize"}],"output":{"name":"wrapping"}}],[11,"shr_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"add","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"add_assign","","",29,null],[11,"sub","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"sub_assign","","",29,null],[11,"mul","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"mul_assign","","",29,null],[11,"div","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"div_assign","","",29,null],[11,"rem","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"rem_assign","","",29,null],[11,"not","","",29,{"inputs":[{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitxor_assign","","",29,null],[11,"bitor","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitor_assign","","",29,null],[11,"bitand","","",29,{"inputs":[{"name":"wrapping"},{"name":"wrapping"}],"output":{"name":"wrapping"}}],[11,"bitand_assign","","",29,null],[11,"fmt","","",30,{"inputs":[{"name":"fpcategory"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",30,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"ne","","",30,{"inputs":[{"name":"fpcategory"},{"name":"fpcategory"}],"output":{"name":"bool"}}],[11,"clone","","",30,{"inputs":[{"name":"fpcategory"}],"output":{"name":"fpcategory"}}],[11,"eq","","",31,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"ne","","",31,{"inputs":[{"name":"parseinterror"},{"name":"parseinterror"}],"output":{"name":"bool"}}],[11,"clone","","",31,{"inputs":[{"name":"parseinterror"}],"output":{"name":"parseinterror"}}],[11,"fmt","","",31,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",32,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"ne","","",32,{"inputs":[{"name":"interrorkind"},{"name":"interrorkind"}],"output":{"name":"bool"}}],[11,"clone","","",32,{"inputs":[{"name":"interrorkind"}],"output":{"name":"interrorkind"}}],[11,"fmt","","",32,{"inputs":[{"name":"interrorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"parseinterror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::nonzero","",33,null],[11,"fmt","","",33,{"inputs":[{"name":"nonzero"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"option"}}],[11,"lt","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"le","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"gt","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ge","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"cmp","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"ordering"}}],[11,"eq","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"ne","","",33,{"inputs":[{"name":"nonzero"},{"name":"nonzero"}],"output":{"name":"bool"}}],[11,"clone","","",33,{"inputs":[{"name":"nonzero"}],"output":{"name":"nonzero"}}],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",33,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",33,{"inputs":[{"name":"nonzero"}],"output":{"name":"t"}}],[11,"new","core::ptr","Creates a new `Unique`.",34,null],[11,"get","","Dereferences the content.",34,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"get_mut","","Mutably dereferences the content.",34,{"inputs":[{"name":"unique"}],"output":{"name":"t"}}],[11,"deref","","",34,null],[11,"fmt","","",34,{"inputs":[{"name":"unique"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `Shared`.",35,null],[11,"clone","","",35,{"inputs":[{"name":"shared"}],"output":{"name":"shared"}}],[11,"deref","","",35,null],[11,"fmt","","",35,{"inputs":[{"name":"shared"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","core::marker","",36,null],[11,"eq","","",36,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",36,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"option"}}],[11,"cmp","","",36,{"inputs":[{"name":"phantomdata"},{"name":"phantomdata"}],"output":{"name":"ordering"}}],[11,"clone","","",36,{"inputs":[{"name":"phantomdata"}],"output":{"name":"phantomdata"}}],[11,"default","","",36,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"eq","core::ops","",37,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"ne","","",37,{"inputs":[{"name":"rangefull"},{"name":"rangefull"}],"output":{"name":"bool"}}],[11,"clone","","",37,{"inputs":[{"name":"rangefull"}],"output":{"name":"rangefull"}}],[11,"fmt","","",37,{"inputs":[{"name":"rangefull"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",38,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"ne","","",38,{"inputs":[{"name":"range"},{"name":"range"}],"output":{"name":"bool"}}],[11,"clone","","",38,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"fmt","","",38,{"inputs":[{"name":"range"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",39,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"ne","","",39,{"inputs":[{"name":"rangefrom"},{"name":"rangefrom"}],"output":{"name":"bool"}}],[11,"clone","","",39,{"inputs":[{"name":"rangefrom"}],"output":{"name":"rangefrom"}}],[11,"fmt","","",39,{"inputs":[{"name":"rangefrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",40,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"ne","","",40,{"inputs":[{"name":"rangeto"},{"name":"rangeto"}],"output":{"name":"bool"}}],[11,"clone","","",40,{"inputs":[{"name":"rangeto"}],"output":{"name":"rangeto"}}],[11,"fmt","","",40,{"inputs":[{"name":"rangeto"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cmp","",41,{"inputs":[{"name":"ordering"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",41,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"ne","","",41,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"clone","","",41,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"reverse","","Reverse the `Ordering`.",41,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"cmp","","",41,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",41,{"inputs":[{"name":"ordering"},{"name":"ordering"}],"output":{"name":"option"}}],[11,"fmt","bitflags::__core::prelude","",42,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",42,{"inputs":[{"name":"any"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is","","Returns true if the boxed type is the same as `T`",42,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",42,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",42,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",42,{"inputs":[{"name":"any"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",42,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",42,{"inputs":[{"name":"any"}],"output":{"name":"option"}}],[11,"hash","core::any","",43,null],[11,"fmt","","",43,{"inputs":[{"name":"typeid"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",43,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"ne","","",43,{"inputs":[{"name":"typeid"},{"name":"typeid"}],"output":{"name":"bool"}}],[11,"clone","","",43,{"inputs":[{"name":"typeid"}],"output":{"name":"typeid"}}],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",43,{"inputs":[],"output":{"name":"typeid"}}],[11,"default","core::sync::atomic","",44,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"clone","","",48,{"inputs":[{"name":"ordering"}],"output":{"name":"ordering"}}],[11,"new","","Creates a new `AtomicBool`.",44,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",44,{"inputs":[{"name":"atomicbool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"store","","Stores a value into the bool.",44,null],[11,"swap","","Stores a value into the bool, returning the old value.",44,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",44,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",44,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"bool"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",44,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",44,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",44,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",44,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",44,{"inputs":[{"name":"atomicbool"},{"name":"bool"},{"name":"ordering"}],"output":{"name":"bool"}}],[11,"new","","Creates a new `AtomicIsize`.",45,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the isize.",45,{"inputs":[{"name":"atomicisize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"store","","Stores a value into the isize.",45,null],[11,"swap","","Stores a value into the isize, returning the old value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_and_swap","","Stores a value into the `isize` if the current value is the same as the `current` value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange","","Stores a value into the `isize` if the current value is the same as the `current` value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"isize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"compare_exchange_weak","","Stores a value into the `isize if the current value is the same as the `current` value.",45,null],[11,"fetch_add","","Add an isize to the current value, returning the previous value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_sub","","Subtract an isize from the current value, returning the previous value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_and","","Bitwise and with the current isize, returning the previous value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_or","","Bitwise or with the current isize, returning the previous value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"fetch_xor","","Bitwise xor with the current isize, returning the previous value.",45,{"inputs":[{"name":"atomicisize"},{"name":"isize"},{"name":"ordering"}],"output":{"name":"isize"}}],[11,"new","","Creates a new `AtomicUsize`.",46,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the usize.",46,{"inputs":[{"name":"atomicusize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"store","","Stores a value into the usize.",46,null],[11,"swap","","Stores a value into the usize, returning the old value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_and_swap","","Stores a value into the `usize` if the current value is the same as the `current` value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange","","Stores a value into the `usize` if the current value is the same as the `current` value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"usize"},{"name":"ordering"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"compare_exchange_weak","","Stores a value into the `usize` if the current value is the same as the `current` value.",46,null],[11,"fetch_add","","Add to the current usize, returning the previous value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_sub","","Subtract from the current usize, returning the previous value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_and","","Bitwise and with the current usize, returning the previous value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_or","","Bitwise or with the current usize, returning the previous value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"fetch_xor","","Bitwise xor with the current usize, returning the previous value.",46,{"inputs":[{"name":"atomicusize"},{"name":"usize"},{"name":"ordering"}],"output":{"name":"usize"}}],[11,"new","","Creates a new `AtomicPtr`.",47,null],[11,"load","","Loads a value from the pointer.",47,null],[11,"store","","Stores a value into the pointer.",47,null],[11,"swap","","Stores a value into the pointer, returning the old value.",47,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",47,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",47,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",47,null],[11,"fmt","","",46,{"inputs":[{"name":"atomicusize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",45,{"inputs":[{"name":"atomicisize"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",44,{"inputs":[{"name":"atomicbool"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",47,{"inputs":[{"name":"atomicptr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","core::cell","Creates a new `Cell` containing the given value.",49,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",49,{"inputs":[{"name":"cell"}],"output":{"name":"t"}}],[11,"set","","Sets the contained value.",49,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",49,{"inputs":[{"name":"cell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",49,{"inputs":[{"name":"cell"}],"output":{"name":"cell"}}],[11,"default","","",49,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",49,{"inputs":[{"name":"cell"},{"name":"cell"}],"output":{"name":"bool"}}],[11,"fmt","","",50,{"inputs":[{"name":"borrowstate"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",50,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"ne","","",50,{"inputs":[{"name":"borrowstate"},{"name":"borrowstate"}],"output":{"name":"bool"}}],[11,"clone","","",50,{"inputs":[{"name":"borrowstate"}],"output":{"name":"borrowstate"}}],[11,"new","","Creates a new `RefCell` containing `value`.",51,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",51,{"inputs":[{"name":"refcell"}],"output":{"name":"t"}}],[11,"borrow_state","","Query the current state of this `RefCell`",51,{"inputs":[{"name":"refcell"}],"output":{"name":"borrowstate"}}],[11,"borrow","","Immutably borrows the wrapped value.",51,{"inputs":[{"name":"refcell"}],"output":{"name":"ref"}}],[11,"borrow_mut","","Mutably borrows the wrapped value.",51,{"inputs":[{"name":"refcell"}],"output":{"name":"refmut"}}],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",51,{"inputs":[{"name":"refcell"}],"output":{"name":"unsafecell"}}],[11,"clone","","",51,{"inputs":[{"name":"refcell"}],"output":{"name":"refcell"}}],[11,"default","","",51,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",51,{"inputs":[{"name":"refcell"},{"name":"refcell"}],"output":{"name":"bool"}}],[11,"drop","","",52,null],[11,"clone","","",52,{"inputs":[{"name":"borrowref"}],"output":{"name":"borrowref"}}],[11,"deref","","",53,{"inputs":[{"name":"ref"}],"output":{"name":"t"}}],[11,"clone","","Copies a `Ref`.",53,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",53,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",53,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",54,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",54,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"drop","","",55,null],[11,"deref","","",54,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"deref_mut","","",54,{"inputs":[{"name":"refmut"}],"output":{"name":"t"}}],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",56,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",56,{"inputs":[{"name":"unsafecell"}],"output":{"name":"t"}}],[11,"get","","Gets a mutable pointer to the wrapped value.",56,null],[11,"clone","core::char","",57,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"escapeunicode"}}],[11,"clone","","",58,{"inputs":[{"name":"escapeunicodestate"}],"output":{"name":"escapeunicodestate"}}],[11,"next","","",57,{"inputs":[{"name":"escapeunicode"}],"output":{"name":"option"}}],[11,"size_hint","","",57,null],[11,"clone","","",59,{"inputs":[{"name":"escapedefault"}],"output":{"name":"escapedefault"}}],[11,"clone","","",60,{"inputs":[{"name":"escapedefaultstate"}],"output":{"name":"escapedefaultstate"}}],[11,"next","","",59,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",59,null],[11,"count","","",59,{"inputs":[{"name":"escapedefault"}],"output":{"name":"usize"}}],[11,"nth","","",59,{"inputs":[{"name":"escapedefault"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",59,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","core::iter","",61,{"inputs":[{"name":"rev"}],"output":{"name":"rev"}}],[11,"next","","",61,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"size_hint","","",61,null],[11,"next_back","","",61,{"inputs":[{"name":"rev"}],"output":{"name":"option"}}],[11,"clone","","",62,{"inputs":[{"name":"cloned"}],"output":{"name":"cloned"}}],[11,"next","","",62,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"size_hint","","",62,null],[11,"next_back","","",62,{"inputs":[{"name":"cloned"}],"output":{"name":"option"}}],[11,"clone","","",63,{"inputs":[{"name":"cycle"}],"output":{"name":"cycle"}}],[11,"next","","",63,{"inputs":[{"name":"cycle"}],"output":{"name":"option"}}],[11,"size_hint","","",63,null],[11,"clone","","",64,{"inputs":[{"name":"chain"}],"output":{"name":"chain"}}],[11,"clone","","",65,{"inputs":[{"name":"chainstate"}],"output":{"name":"chainstate"}}],[11,"next","","",64,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"count","","",64,{"inputs":[{"name":"chain"}],"output":{"name":"usize"}}],[11,"nth","","",64,{"inputs":[{"name":"chain"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",64,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"size_hint","","",64,null],[11,"next_back","","",64,{"inputs":[{"name":"chain"}],"output":{"name":"option"}}],[11,"clone","","",66,{"inputs":[{"name":"zip"}],"output":{"name":"zip"}}],[11,"next","","",66,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"size_hint","","",66,null],[11,"next_back","","",66,{"inputs":[{"name":"zip"}],"output":{"name":"option"}}],[11,"clone","","",67,{"inputs":[{"name":"map"}],"output":{"name":"map"}}],[11,"next","","",67,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"size_hint","","",67,null],[11,"next_back","","",67,{"inputs":[{"name":"map"}],"output":{"name":"option"}}],[11,"clone","","",68,{"inputs":[{"name":"filter"}],"output":{"name":"filter"}}],[11,"next","","",68,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"size_hint","","",68,null],[11,"next_back","","",68,{"inputs":[{"name":"filter"}],"output":{"name":"option"}}],[11,"clone","","",69,{"inputs":[{"name":"filtermap"}],"output":{"name":"filtermap"}}],[11,"next","","",69,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"size_hint","","",69,null],[11,"next_back","","",69,{"inputs":[{"name":"filtermap"}],"output":{"name":"option"}}],[11,"clone","","",70,{"inputs":[{"name":"enumerate"}],"output":{"name":"enumerate"}}],[11,"next","","# Overflow Behavior",70,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"size_hint","","",70,null],[11,"nth","","",70,{"inputs":[{"name":"enumerate"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",70,{"inputs":[{"name":"enumerate"}],"output":{"name":"usize"}}],[11,"next_back","","",70,{"inputs":[{"name":"enumerate"}],"output":{"name":"option"}}],[11,"clone","","",71,{"inputs":[{"name":"peekable"}],"output":{"name":"peekable"}}],[11,"next","","",71,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"count","","",71,{"inputs":[{"name":"peekable"}],"output":{"name":"usize"}}],[11,"nth","","",71,{"inputs":[{"name":"peekable"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",71,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"size_hint","","",71,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",71,{"inputs":[{"name":"peekable"}],"output":{"name":"option"}}],[11,"is_empty","","Checks if the iterator has finished iterating.",71,{"inputs":[{"name":"peekable"}],"output":{"name":"bool"}}],[11,"clone","","",72,{"inputs":[{"name":"skipwhile"}],"output":{"name":"skipwhile"}}],[11,"next","","",72,{"inputs":[{"name":"skipwhile"}],"output":{"name":"option"}}],[11,"size_hint","","",72,null],[11,"clone","","",73,{"inputs":[{"name":"takewhile"}],"output":{"name":"takewhile"}}],[11,"next","","",73,{"inputs":[{"name":"takewhile"}],"output":{"name":"option"}}],[11,"size_hint","","",73,null],[11,"clone","","",74,{"inputs":[{"name":"skip"}],"output":{"name":"skip"}}],[11,"next","","",74,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"nth","","",74,{"inputs":[{"name":"skip"},{"name":"usize"}],"output":{"name":"option"}}],[11,"count","","",74,{"inputs":[{"name":"skip"}],"output":{"name":"usize"}}],[11,"last","","",74,{"inputs":[{"name":"skip"}],"output":{"name":"option"}}],[11,"size_hint","","",74,null],[11,"clone","","",75,{"inputs":[{"name":"take"}],"output":{"name":"take"}}],[11,"next","","",75,{"inputs":[{"name":"take"}],"output":{"name":"option"}}],[11,"nth","","",75,{"inputs":[{"name":"take"},{"name":"usize"}],"output":{"name":"option"}}],[11,"size_hint","","",75,null],[11,"clone","","",76,{"inputs":[{"name":"scan"}],"output":{"name":"scan"}}],[11,"next","","",76,{"inputs":[{"name":"scan"}],"output":{"name":"option"}}],[11,"size_hint","","",76,null],[11,"clone","","",77,{"inputs":[{"name":"flatmap"}],"output":{"name":"flatmap"}}],[11,"next","","",77,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"size_hint","","",77,null],[11,"next_back","","",77,{"inputs":[{"name":"flatmap"}],"output":{"name":"option"}}],[11,"clone","","",78,{"inputs":[{"name":"fuse"}],"output":{"name":"fuse"}}],[11,"next","","",78,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"nth","","",78,{"inputs":[{"name":"fuse"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",78,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"count","","",78,{"inputs":[{"name":"fuse"}],"output":{"name":"usize"}}],[11,"size_hint","","",78,null],[11,"next_back","","",78,{"inputs":[{"name":"fuse"}],"output":{"name":"option"}}],[11,"clone","","",79,{"inputs":[{"name":"inspect"}],"output":{"name":"inspect"}}],[11,"next","","",79,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"size_hint","","",79,null],[11,"next_back","","",79,{"inputs":[{"name":"inspect"}],"output":{"name":"option"}}],[11,"clone","","",80,{"inputs":[{"name":"stepby"}],"output":{"name":"stepby"}}],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",39,{"inputs":[{"name":"rangefrom"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",38,{"inputs":[{"name":"range"},{"name":"a"}],"output":{"name":"stepby"}}],[11,"next","core::iter","",80,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"clone","","",81,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"rangeinclusive"}}],[11,"next","","",81,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"size_hint","","",81,null],[11,"next_back","","",81,{"inputs":[{"name":"rangeinclusive"}],"output":{"name":"option"}}],[11,"next","","",80,{"inputs":[{"name":"stepby"}],"output":{"name":"option"}}],[11,"size_hint","","",80,null],[11,"next","core::ops","",38,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"size_hint","","",38,null],[11,"next_back","","",38,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next","","",39,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"clone","core::iter","",82,{"inputs":[{"name":"repeat"}],"output":{"name":"repeat"}}],[11,"next","","",82,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"size_hint","","",82,null],[11,"next_back","","",82,{"inputs":[{"name":"repeat"}],"output":{"name":"option"}}],[11,"next","","",83,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"size_hint","","",83,null],[11,"next_back","","",83,{"inputs":[{"name":"empty"}],"output":{"name":"option"}}],[11,"len","","",83,{"inputs":[{"name":"empty"}],"output":{"name":"usize"}}],[11,"clone","","",83,{"inputs":[{"name":"empty"}],"output":{"name":"empty"}}],[11,"default","","",83,{"inputs":[],"output":{"name":"empty"}}],[11,"clone","","",84,{"inputs":[{"name":"once"}],"output":{"name":"once"}}],[11,"next","","",84,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"size_hint","","",84,null],[11,"next_back","","",84,{"inputs":[{"name":"once"}],"output":{"name":"option"}}],[11,"len","","",84,{"inputs":[{"name":"once"}],"output":{"name":"usize"}}],[11,"hash","core::option","",28,null],[11,"fmt","","",28,{"inputs":[{"name":"option"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"option"}}],[11,"lt","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"le","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"gt","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ge","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"eq","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"ne","","",28,{"inputs":[{"name":"option"},{"name":"option"}],"output":{"name":"bool"}}],[11,"clone","","",28,{"inputs":[{"name":"option"}],"output":{"name":"option"}}],[11,"default","","",28,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",28,{"inputs":[{"name":"option"}],"output":{"name":"intoiter"}}],[11,"clone","","",85,{"inputs":[{"name":"item"}],"output":{"name":"item"}}],[11,"next","","",85,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"size_hint","","",85,null],[11,"next_back","","",85,{"inputs":[{"name":"item"}],"output":{"name":"option"}}],[11,"next","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",86,null],[11,"next_back","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",86,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",87,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",87,null],[11,"next_back","","",87,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",88,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",88,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",88,null],[11,"next_back","","",88,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",28,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"clone","core::raw","",89,{"inputs":[{"name":"slice"}],"output":{"name":"slice"}}],[11,"clone","","",90,{"inputs":[{"name":"traitobject"}],"output":{"name":"traitobject"}}],[11,"hash","core::result","",91,null],[11,"fmt","","",91,{"inputs":[{"name":"result"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"option"}}],[11,"lt","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"le","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"gt","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ge","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"eq","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"ne","","",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"bool"}}],[11,"clone","","",91,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"is_ok","","Returns true if the result is `Ok`",91,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"is_err","","Returns true if the result is `Err`",91,{"inputs":[{"name":"result"}],"output":{"name":"bool"}}],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",91,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",91,{"inputs":[{"name":"result"}],"output":{"name":"option"}}],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",91,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",91,{"inputs":[{"name":"result"}],"output":{"name":"result"}}],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",91,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",91,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator over the possibly contained value.",91,{"inputs":[{"name":"result"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",91,{"inputs":[{"name":"result"}],"output":{"name":"itermut"}}],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",91,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"result"}}],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",91,{"inputs":[{"name":"result"},{"name":"result"}],"output":{"name":"result"}}],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",91,{"inputs":[{"name":"result"},{"name":"o"}],"output":{"name":"result"}}],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",91,{"inputs":[{"name":"result"},{"name":"t"}],"output":{"name":"t"}}],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",91,{"inputs":[{"name":"result"},{"name":"f"}],"output":{"name":"t"}}],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",91,{"inputs":[{"name":"result"}],"output":{"name":"t"}}],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",91,{"inputs":[{"name":"result"},{"name":"str"}],"output":{"name":"t"}}],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",91,{"inputs":[{"name":"result"}],"output":{"name":"e"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",91,{"inputs":[{"name":"result"}],"output":{"name":"intoiter"}}],[11,"next","","",92,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",92,null],[11,"next_back","","",92,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",92,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",93,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",93,null],[11,"next_back","","",93,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",94,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",94,null],[11,"next_back","","",94,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",91,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"as_slice","core::slice","View the underlying data as a subslice of the original data.",95,null],[11,"next","","",95,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",95,null],[11,"count","","",95,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"nth","","",95,{"inputs":[{"name":"iter"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",95,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",95,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"clone","","",95,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"into_slice","","View the underlying data as a subslice of the original data.",96,null],[11,"next","","",96,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",96,null],[11,"count","","",96,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"nth","","",96,{"inputs":[{"name":"itermut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",96,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next_back","","",96,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",97,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",97,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"size_hint","","",97,null],[11,"next_back","","",97,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",97,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"finish","","",98,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",98,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"size_hint","","",98,null],[11,"next_back","","",98,{"inputs":[{"name":"splitmut"}],"output":{"name":"option"}}],[11,"next","","",99,{"inputs":[{"name":"genericsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",99,null],[11,"next","","",100,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"size_hint","","",100,null],[11,"next","","",101,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"size_hint","","",101,null],[11,"next","","",102,{"inputs":[{"name":"splitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",102,null],[11,"next","","",103,{"inputs":[{"name":"rsplitnmut"}],"output":{"name":"option"}}],[11,"size_hint","","",103,null],[11,"clone","","",104,{"inputs":[{"name":"windows"}],"output":{"name":"windows"}}],[11,"next","","",104,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"size_hint","","",104,null],[11,"count","","",104,{"inputs":[{"name":"windows"}],"output":{"name":"usize"}}],[11,"nth","","",104,{"inputs":[{"name":"windows"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",104,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"next_back","","",104,{"inputs":[{"name":"windows"}],"output":{"name":"option"}}],[11,"clone","","",105,{"inputs":[{"name":"chunks"}],"output":{"name":"chunks"}}],[11,"next","","",105,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"size_hint","","",105,null],[11,"count","","",105,{"inputs":[{"name":"chunks"}],"output":{"name":"usize"}}],[11,"nth","","",105,{"inputs":[{"name":"chunks"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",105,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next_back","","",105,{"inputs":[{"name":"chunks"}],"output":{"name":"option"}}],[11,"next","","",106,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"size_hint","","",106,null],[11,"count","","",106,{"inputs":[{"name":"chunksmut"}],"output":{"name":"usize"}}],[11,"nth","","",106,{"inputs":[{"name":"chunksmut"},{"name":"usize"}],"output":{"name":"option"}}],[11,"last","","",106,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"next_back","","",106,{"inputs":[{"name":"chunksmut"}],"output":{"name":"option"}}],[11,"fmt","core::str::pattern","",107,{"inputs":[{"name":"searchstep"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",107,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"ne","","",107,{"inputs":[{"name":"searchstep"},{"name":"searchstep"}],"output":{"name":"bool"}}],[11,"clone","","",107,{"inputs":[{"name":"searchstep"}],"output":{"name":"searchstep"}}],[11,"clone","","",108,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"chareqsearcher"}}],[11,"into_searcher","","",109,{"inputs":[{"name":"chareqpattern"},{"name":"str"}],"output":{"name":"chareqsearcher"}}],[11,"haystack","","",108,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"str"}}],[11,"next","","",108,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"next_back","","",108,{"inputs":[{"name":"chareqsearcher"}],"output":{"name":"searchstep"}}],[11,"clone","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"charsearcher"}}],[11,"haystack","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"str"}}],[11,"next","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",110,{"inputs":[{"name":"charsearcher"}],"output":{"name":"option"}}],[11,"clone","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"charslicesearcher"}}],[11,"haystack","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"str"}}],[11,"next","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",111,{"inputs":[{"name":"charslicesearcher"}],"output":{"name":"option"}}],[11,"clone","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"charpredicatesearcher"}}],[11,"haystack","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"str"}}],[11,"next","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_back","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","",112,{"inputs":[{"name":"charpredicatesearcher"}],"output":{"name":"option"}}],[11,"fmt","","",113,{"inputs":[{"name":"strsearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"strsearcher"}}],[11,"fmt","","",114,{"inputs":[{"name":"strsearcherimpl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",114,{"inputs":[{"name":"strsearcherimpl"}],"output":{"name":"strsearcherimpl"}}],[11,"fmt","","",115,{"inputs":[{"name":"emptyneedle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",115,{"inputs":[{"name":"emptyneedle"}],"output":{"name":"emptyneedle"}}],[11,"haystack","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"str"}}],[11,"next","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"next_back","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","",113,{"inputs":[{"name":"strsearcher"}],"output":{"name":"option"}}],[11,"fmt","","",116,{"inputs":[{"name":"twowaysearcher"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",116,{"inputs":[{"name":"twowaysearcher"}],"output":{"name":"twowaysearcher"}}],[11,"use_early_reject","","",117,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",117,null],[11,"matching","","",117,null],[11,"use_early_reject","","",118,{"inputs":[],"output":{"name":"bool"}}],[11,"rejecting","","",118,null],[11,"matching","","",118,null],[11,"eq","core::str","",119,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"ne","","",119,{"inputs":[{"name":"parseboolerror"},{"name":"parseboolerror"}],"output":{"name":"bool"}}],[11,"clone","","",119,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"parseboolerror"}}],[11,"fmt","","",119,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",119,{"inputs":[{"name":"parseboolerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",120,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",120,{"inputs":[{"name":"utf8error"}],"output":{"name":"utf8error"}}],[11,"eq","","",120,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"ne","","",120,{"inputs":[{"name":"utf8error"},{"name":"utf8error"}],"output":{"name":"bool"}}],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",120,{"inputs":[{"name":"utf8error"}],"output":{"name":"usize"}}],[11,"fmt","","",120,{"inputs":[{"name":"utf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",121,{"inputs":[{"name":"chars"}],"output":{"name":"chars"}}],[11,"next","","",121,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"size_hint","","",121,null],[11,"next_back","","",121,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",121,{"inputs":[{"name":"chars"}],"output":{"name":"str"}}],[11,"clone","","",122,{"inputs":[{"name":"charindices"}],"output":{"name":"charindices"}}],[11,"next","","",122,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"size_hint","","",122,null],[11,"next_back","","",122,{"inputs":[{"name":"charindices"}],"output":{"name":"option"}}],[11,"as_str","","View the underlying data as a subslice of the original data.",122,{"inputs":[{"name":"charindices"}],"output":{"name":"str"}}],[11,"clone","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"bytes"}}],[11,"next","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"size_hint","","",123,null],[11,"count","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"last","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"nth","","",123,{"inputs":[{"name":"bytes"},{"name":"usize"}],"output":{"name":"option"}}],[11,"next_back","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"len","","",123,{"inputs":[{"name":"bytes"}],"output":{"name":"usize"}}],[11,"clone","","",124,{"inputs":[{"name":"splitinternal"}],"output":{"name":"splitinternal"}}],[11,"next","","",125,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"clone","","",125,{"inputs":[{"name":"split"}],"output":{"name":"split"}}],[11,"next","","",126,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"clone","","",126,{"inputs":[{"name":"rsplit"}],"output":{"name":"rsplit"}}],[11,"next_back","","",125,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next_back","","",126,{"inputs":[{"name":"rsplit"}],"output":{"name":"option"}}],[11,"next","","",127,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"clone","","",127,{"inputs":[{"name":"splitterminator"}],"output":{"name":"splitterminator"}}],[11,"next","","",128,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",128,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"rsplitterminator"}}],[11,"next_back","","",127,{"inputs":[{"name":"splitterminator"}],"output":{"name":"option"}}],[11,"next_back","","",128,{"inputs":[{"name":"rsplitterminator"}],"output":{"name":"option"}}],[11,"clone","","",129,{"inputs":[{"name":"splitninternal"}],"output":{"name":"splitninternal"}}],[11,"next","","",130,{"inputs":[{"name":"splitn"}],"output":{"name":"option"}}],[11,"clone","","",130,{"inputs":[{"name":"splitn"}],"output":{"name":"splitn"}}],[11,"next","","",131,{"inputs":[{"name":"rsplitn"}],"output":{"name":"option"}}],[11,"clone","","",131,{"inputs":[{"name":"rsplitn"}],"output":{"name":"rsplitn"}}],[11,"clone","","",132,{"inputs":[{"name":"matchindicesinternal"}],"output":{"name":"matchindicesinternal"}}],[11,"next","","",133,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"clone","","",133,{"inputs":[{"name":"matchindices"}],"output":{"name":"matchindices"}}],[11,"next","","",134,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",134,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"rmatchindices"}}],[11,"next_back","","",133,{"inputs":[{"name":"matchindices"}],"output":{"name":"option"}}],[11,"next_back","","",134,{"inputs":[{"name":"rmatchindices"}],"output":{"name":"option"}}],[11,"clone","","",135,{"inputs":[{"name":"matchesinternal"}],"output":{"name":"matchesinternal"}}],[11,"next","","",136,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"clone","","",136,{"inputs":[{"name":"matches"}],"output":{"name":"matches"}}],[11,"next","","",137,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",137,{"inputs":[{"name":"rmatches"}],"output":{"name":"rmatches"}}],[11,"next_back","","",136,{"inputs":[{"name":"matches"}],"output":{"name":"option"}}],[11,"next_back","","",137,{"inputs":[{"name":"rmatches"}],"output":{"name":"option"}}],[11,"clone","","",138,{"inputs":[{"name":"lines"}],"output":{"name":"lines"}}],[11,"next","","",138,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"size_hint","","",138,null],[11,"next_back","","",138,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"clone","","",139,{"inputs":[{"name":"linesany"}],"output":{"name":"linesany"}}],[11,"clone","","",140,{"inputs":[{"name":"linesanymap"}],"output":{"name":"linesanymap"}}],[11,"call","","",140,null],[11,"call_mut","","",140,null],[11,"call_once","","",140,null],[11,"next","","",139,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"size_hint","","",139,null],[11,"next_back","","",139,{"inputs":[{"name":"linesany"}],"output":{"name":"option"}}],[11,"clone","","",141,{"inputs":[{"name":"charrange"}],"output":{"name":"charrange"}}],[11,"new","core::hash::sip","Creates a new `SipHasher` with the two initial keys set to 0.",142,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",142,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",142,null],[11,"finish","","",142,{"inputs":[{"name":"siphasher"}],"output":{"name":"u64"}}],[11,"clone","","",142,{"inputs":[{"name":"siphasher"}],"output":{"name":"siphasher"}}],[11,"default","","",142,{"inputs":[],"output":{"name":"siphasher"}}],[11,"build_hasher","core::hash","",143,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"h"}}],[11,"clone","","",143,{"inputs":[{"name":"buildhasherdefault"}],"output":{"name":"buildhasherdefault"}}],[11,"default","","",143,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"eq","core::fmt::num","",144,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"ne","","",144,{"inputs":[{"name":"binary"},{"name":"binary"}],"output":{"name":"bool"}}],[11,"clone","","",144,{"inputs":[{"name":"binary"}],"output":{"name":"binary"}}],[11,"eq","","",145,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"ne","","",145,{"inputs":[{"name":"octal"},{"name":"octal"}],"output":{"name":"bool"}}],[11,"clone","","",145,{"inputs":[{"name":"octal"}],"output":{"name":"octal"}}],[11,"eq","","",146,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"ne","","",146,{"inputs":[{"name":"decimal"},{"name":"decimal"}],"output":{"name":"bool"}}],[11,"clone","","",146,{"inputs":[{"name":"decimal"}],"output":{"name":"decimal"}}],[11,"eq","","",147,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"ne","","",147,{"inputs":[{"name":"lowerhex"},{"name":"lowerhex"}],"output":{"name":"bool"}}],[11,"clone","","",147,{"inputs":[{"name":"lowerhex"}],"output":{"name":"lowerhex"}}],[11,"eq","","",148,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"ne","","",148,{"inputs":[{"name":"upperhex"},{"name":"upperhex"}],"output":{"name":"bool"}}],[11,"clone","","",148,{"inputs":[{"name":"upperhex"}],"output":{"name":"upperhex"}}],[11,"eq","","",149,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"ne","","",149,{"inputs":[{"name":"radix"},{"name":"radix"}],"output":{"name":"bool"}}],[11,"clone","","",149,{"inputs":[{"name":"radix"}],"output":{"name":"radix"}}],[11,"clone","","",150,{"inputs":[{"name":"radixfmt"}],"output":{"name":"radixfmt"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",150,{"inputs":[{"name":"radixfmt"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"write_str","core::fmt::builders","",151,{"inputs":[{"name":"padadapter"},{"name":"str"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated struct output.",152,{"inputs":[{"name":"debugstruct"},{"name":"str"},{"name":"debug"}],"output":{"name":"debugstruct"}}],[11,"finish","","Finishes output and returns any error encountered.",152,{"inputs":[{"name":"debugstruct"}],"output":{"name":"result"}}],[11,"field","","Adds a new field to the generated tuple struct output.",153,{"inputs":[{"name":"debugtuple"},{"name":"debug"}],"output":{"name":"debugtuple"}}],[11,"finish","","Finishes output and returns any error encountered.",153,{"inputs":[{"name":"debugtuple"}],"output":{"name":"result"}}],[11,"formatter","","Returns the wrapped `Formatter`.",153,{"inputs":[{"name":"debugtuple"}],"output":{"name":"formatter"}}],[11,"finish","","",154,null],[11,"entry","","Adds a new entry to the set output.",155,{"inputs":[{"name":"debugset"},{"name":"debug"}],"output":{"name":"debugset"}}],[11,"entries","","Adds the contents of an iterator of entries to the set output.",155,{"inputs":[{"name":"debugset"},{"name":"i"}],"output":{"name":"debugset"}}],[11,"finish","","Finishes output and returns any error encountered.",155,{"inputs":[{"name":"debugset"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the list output.",156,{"inputs":[{"name":"debuglist"},{"name":"debug"}],"output":{"name":"debuglist"}}],[11,"entries","","Adds the contents of an iterator of entries to the list output.",156,{"inputs":[{"name":"debuglist"},{"name":"i"}],"output":{"name":"debuglist"}}],[11,"finish","","Finishes output and returns any error encountered.",156,{"inputs":[{"name":"debuglist"}],"output":{"name":"result"}}],[11,"entry","","Adds a new entry to the map output.",157,{"inputs":[{"name":"debugmap"},{"name":"debug"},{"name":"debug"}],"output":{"name":"debugmap"}}],[11,"entries","","Adds the contents of an iterator of entries to the map output.",157,{"inputs":[{"name":"debugmap"},{"name":"i"}],"output":{"name":"debugmap"}}],[11,"finish","","Finishes output and returns any error encountered.",157,{"inputs":[{"name":"debugmap"}],"output":{"name":"result"}}],[11,"fmt","core::fmt","",158,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",158,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"clone","","",159,{"inputs":[{"name":"flagv1"}],"output":{"name":"flagv1"}}],[11,"clone","","",160,{"inputs":[{"name":"arguments"}],"output":{"name":"arguments"}}],[11,"fmt","","",160,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",160,{"inputs":[{"name":"arguments"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",161,{"inputs":[{"name":"formatter"},{"name":"bool"},{"name":"str"},{"name":"str"}],"output":{"name":"result"}}],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_fmt","","Writes some formatted information into this instance",161,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"flags","","Flags for formatting (packed version of rt::Flag)",161,{"inputs":[{"name":"formatter"}],"output":{"name":"u32"}}],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",161,{"inputs":[{"name":"formatter"}],"output":{"name":"char"}}],[11,"align","","Flag indicating what form of alignment was requested",161,{"inputs":[{"name":"formatter"}],"output":{"name":"alignment"}}],[11,"width","","Optionally specified integer width that the output should be",161,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"precision","","Optionally specified precision for numeric types",161,{"inputs":[{"name":"formatter"}],"output":{"name":"option"}}],[11,"sign_plus","","Determines if the `+` flag was specified.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_minus","","Determines if the `-` flag was specified.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"alternate","","Determines if the `#` flag was specified.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"bool"}}],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugstruct"}}],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"debugtuple"}}],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debuglist"}}],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debugset"}}],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",161,{"inputs":[{"name":"formatter"}],"output":{"name":"debugmap"}}],[11,"write_str","","",161,{"inputs":[{"name":"formatter"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",161,{"inputs":[{"name":"formatter"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","",161,{"inputs":[{"name":"formatter"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"fmt","","",158,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::marker","",36,{"inputs":[{"name":"phantomdata"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","core::cell","",49,{"inputs":[{"name":"cell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",51,{"inputs":[{"name":"refcell"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",53,{"inputs":[{"name":"ref"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",54,{"inputs":[{"name":"refmut"},{"name":"formatter"}],"output":{"name":"result"}}],[4,"Option","bitflags::__core::prelude::v1","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",28,null],[13,"Some","","Some value `T`",28,null],[4,"Result","","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",91,null],[13,"Err","","Contains the error value",91,null],[8,"SliceConcatExt","","An extension trait for concatenating slices",null,null],[16,"Output","","The resulting type after concatenation",162,null],[10,"concat","","Flattens a slice of `T` into a single value `Self::Output`.",162,null],[10,"join","","Flattens a slice of `T` into a single value `Self::Output`, placing a\ngiven separator between each.",162,null],[10,"connect","","",162,null],[11,"new","collections::string","Creates a new empty `String`.",163,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",163,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",163,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",163,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",163,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",163,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",163,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",163,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",163,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"as_str","","Extracts a string slice containing the entire string.",163,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_mut_str","","Extracts a string slice containing the entire string.",163,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"push_str","","Appends a given string slice onto the end of this `String`.",163,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",163,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",163,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",163,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",163,null],[11,"push","","Appends the given `char` to the end of this `String`.",163,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",163,null],[11,"truncate","","Shortens this `String` to the specified length.",163,null],[11,"pop","","Removes the last character from the string buffer and returns it.",163,{"inputs":[{"name":"string"}],"output":{"name":"option"}}],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",163,{"inputs":[{"name":"string"},{"name":"usize"}],"output":{"name":"char"}}],[11,"insert","","Inserts a character into this `String` at a byte position.",163,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",163,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of this `String`, in bytes.",163,{"inputs":[{"name":"string"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",163,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"clear","","Truncates this `String`, removing all contents.",163,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",163,{"inputs":[{"name":"string"},{"name":"r"}],"output":{"name":"drain"}}],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",163,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"clone","collections::binary_heap","",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"binaryheap"}}],[11,"clone_from","","",164,null],[11,"default","","",164,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",164,{"inputs":[{"name":"binaryheap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",164,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",164,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"iter"}}],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",164,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",164,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",164,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"option"}}],[11,"push","","Pushes an item onto the binary heap.",164,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",164,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"t"}}],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",164,{"inputs":[{"name":"binaryheap"},{"name":"t"}],"output":{"name":"option"}}],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"len","","Returns the length of the binary heap.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"usize"}}],[11,"is_empty","","Checks if the binary heap is empty.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"drain"}}],[11,"clear","","Drops all items from the binary heap.",164,null],[11,"drop","","",165,null],[11,"clone","","",166,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",166,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",166,null],[11,"next_back","","",166,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",167,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",167,null],[11,"next_back","","",167,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"next","","",168,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",168,null],[11,"next_back","","",168,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"from","","",164,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",169,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",164,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",164,{"inputs":[{"name":"binaryheap"}],"output":{"name":"intoiter"}}],[11,"extend","","",164,null],[11,"extend","","",164,null],[11,"new_leaf","collections::btree::node","",170,{"inputs":[],"output":{"name":"root"}}],[11,"as_ref","","",170,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"as_mut","","",170,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"into_ref","","",170,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"push_level","","Add a new internal node with a single edge, pointing to the previous root, and make that\nnew node the root. This increases the height by 1 and is the opposite of `pop_level`.",170,{"inputs":[{"name":"root"}],"output":{"name":"noderef"}}],[11,"pop_level","","Remove the root node, using its first child as the new root. This cannot be called when\nthe tree consists only of a leaf node. As it is intended only to be called when the root\nhas only one edge, no cleanup is done on any of the other children are elements of the root.\nThis decreases the height by 1 and is the opposite of `push_level`.",170,null],[11,"clone","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"noderef"}}],[11,"len","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"usize"}}],[11,"forget_type","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"noderef"}}],[11,"keys","","",171,null],[11,"vals","","",171,null],[11,"ascend","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"result"}}],[11,"first_edge","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"handle"}}],[11,"last_edge","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"handle"}}],[11,"deallocate_and_ascend","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"deallocate_and_ascend","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"option"}}],[11,"keys_mut","","",171,null],[11,"vals_mut","","",171,null],[11,"into_slices","","",171,null],[11,"into_root_mut","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"root"}}],[11,"into_slices_mut","","",171,null],[11,"push","","",171,null],[11,"push_front","","",171,null],[11,"push","","",171,null],[11,"push_front","","",171,null],[11,"pop","","",171,null],[11,"pop_front","","",171,null],[11,"force","","",171,{"inputs":[{"name":"noderef"}],"output":{"name":"forceresult"}}],[11,"clone","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"into_node","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"node"}}],[11,"new_kv","","",172,{"inputs":[{"name":"noderef"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"left_edge","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"right_edge","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"eq","","",172,{"inputs":[{"name":"handle"},{"name":"handle"}],"output":{"name":"bool"}}],[11,"reborrow","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"reborrow_mut","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"new_edge","","",172,{"inputs":[{"name":"noderef"},{"name":"usize"}],"output":{"name":"handle"}}],[11,"left_kv","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"right_kv","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"insert","","",172,null],[11,"insert","","",172,{"inputs":[{"name":"handle"},{"name":"k"},{"name":"v"},{"name":"root"}],"output":{"name":"insertresult"}}],[11,"descend","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"noderef"}}],[11,"into_kv","","",172,null],[11,"into_kv_mut","","",172,null],[11,"kv_mut","","",172,null],[11,"split","","",172,null],[11,"remove","","",172,null],[11,"split","","",172,null],[11,"can_merge","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"bool"}}],[11,"merge","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"handle"}}],[11,"force","","",172,{"inputs":[{"name":"handle"}],"output":{"name":"forceresult"}}],[11,"drop","collections::btree::map","",173,null],[11,"clone","","",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"btreemap"}}],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",173,{"inputs":[],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",173,null],[11,"get","","Returns a reference to the value corresponding to the key.",173,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",173,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",173,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",173,{"inputs":[{"name":"btreemap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",173,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"option"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",173,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",173,{"inputs":[{"name":"btreemap"},{"name":"bound"},{"name":"bound"}],"output":{"name":"rangemut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",173,{"inputs":[{"name":"btreemap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"next","","",174,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",174,null],[11,"next_back","","",174,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"len","","",174,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"clone","","",174,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",175,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",175,null],[11,"next_back","","",175,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"len","","",175,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"into_iter","","",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"intoiter"}}],[11,"drop","","",176,null],[11,"next","","",176,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",176,null],[11,"next_back","","",176,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"len","","",176,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",177,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",177,null],[11,"next_back","","",177,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"len","","",177,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"clone","","",177,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"next","","",178,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",178,null],[11,"next_back","","",178,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"len","","",178,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"clone","","",178,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"next","","",179,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",179,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",179,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",180,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"next_back","","",180,{"inputs":[{"name":"rangemut"}],"output":{"name":"option"}}],[11,"from_iter","","",173,{"inputs":[{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",173,null],[11,"extend","","",173,null],[11,"hash","","",173,null],[11,"default","","",173,{"inputs":[],"output":{"name":"btreemap"}}],[11,"eq","","",173,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",173,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"option"}}],[11,"cmp","","",173,{"inputs":[{"name":"btreemap"},{"name":"btreemap"}],"output":{"name":"ordering"}}],[11,"fmt","","",173,{"inputs":[{"name":"btreemap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",173,{"inputs":[{"name":"btreemap"},{"name":"q"}],"output":{"name":"v"}}],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"iter"}}],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, sorted by key.",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"itermut"}}],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"keys"}}],[11,"values","","Gets an iterator over the values of the map, in order by key.",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"values"}}],[11,"len","","Returns the number of elements in the map.",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",173,{"inputs":[{"name":"btreemap"}],"output":{"name":"bool"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",181,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",181,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",182,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",183,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",183,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the entry into a mutable reference to its value.",183,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",183,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value of the entry out of the map, and returns it.",183,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"partial_cmp","collections::btree::set","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"option"}}],[11,"lt","","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"le","","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"gt","","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ge","","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"cmp","","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"ordering"}}],[11,"eq","","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"ne","","",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"hash","","",184,null],[11,"clone","","",184,{"inputs":[{"name":"btreeset"}],"output":{"name":"btreeset"}}],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",184,{"inputs":[],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet&#39;s contents.",184,{"inputs":[{"name":"btreeset"}],"output":{"name":"iter"}}],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",184,{"inputs":[{"name":"btreeset"},{"name":"bound"},{"name":"bound"}],"output":{"name":"range"}}],[11,"difference","","Visits the values representing the difference, in ascending order.",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visits the values representing the intersection, in ascending order.",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"intersection"}}],[11,"union","","Visits the values representing the union, in ascending order.",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",184,{"inputs":[{"name":"btreeset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",184,{"inputs":[{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"clear","","Clears the set, removing all values.",184,null],[11,"contains","","Returns `true` if the set contains a value.",184,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",184,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",184,{"inputs":[{"name":"btreeset"},{"name":"btreeset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",184,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",184,{"inputs":[{"name":"btreeset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",184,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",184,{"inputs":[{"name":"btreeset"},{"name":"q"}],"output":{"name":"option"}}],[11,"from_iter","","",184,{"inputs":[{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet&#39;s contents.",184,{"inputs":[{"name":"btreeset"}],"output":{"name":"intoiter"}}],[11,"extend","","",184,null],[11,"extend","","",184,null],[11,"default","","",184,{"inputs":[],"output":{"name":"btreeset"}}],[11,"fmt","","",184,{"inputs":[{"name":"btreeset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",185,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",185,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",185,null],[11,"next_back","","",185,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"len","","",185,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",186,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",186,null],[11,"next_back","","",186,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"len","","",186,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"clone","","",187,{"inputs":[{"name":"range"}],"output":{"name":"range"}}],[11,"next","","",187,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"next_back","","",187,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"clone","","",188,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",188,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",188,null],[11,"clone","","",189,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",189,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",189,null],[11,"clone","","",190,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",190,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",190,null],[11,"clone","","",191,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",191,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",191,null],[11,"borrow","collections::borrow","",192,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"clone","","",192,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",192,null],[11,"into_owned","","Extracts the owned data.",192,null],[11,"deref","","",192,{"inputs":[{"name":"cow"}],"output":{"name":"b"}}],[11,"cmp","","",192,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"ordering"}}],[11,"eq","","",192,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"cow"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","","",192,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",192,{"inputs":[{"name":"cow"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",192,null],[11,"into_cow","","",192,{"inputs":[{"name":"cow"}],"output":{"name":"cow"}}],[11,"as_ref","","",192,{"inputs":[{"name":"cow"}],"output":{"name":"t"}}],[11,"hash","collections::enum_set","",193,null],[11,"cmp","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"option"}}],[11,"lt","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"le","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"gt","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ge","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"eq","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"ne","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clone","","",193,{"inputs":[{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"fmt","","",193,{"inputs":[{"name":"enumset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns an empty `EnumSet`.",193,{"inputs":[],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",193,{"inputs":[{"name":"enumset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the `EnumSet` is empty.",193,{"inputs":[{"name":"enumset"}],"output":{"name":"bool"}}],[11,"clear","","",193,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"bool"}}],[11,"union","","Returns the union of both `EnumSets`.",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"intersection","","Returns the intersection of both `EnumSets`.",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn&#39;t there before",193,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"remove","","Removes an enum from the EnumSet",193,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",193,{"inputs":[{"name":"enumset"},{"name":"e"}],"output":{"name":"bool"}}],[11,"iter","","Returns an iterator over an `EnumSet`.",193,{"inputs":[{"name":"enumset"}],"output":{"name":"iter"}}],[11,"sub","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitor","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitand","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"bitxor","","",193,{"inputs":[{"name":"enumset"},{"name":"enumset"}],"output":{"name":"enumset"}}],[11,"clone","","",194,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",194,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",194,null],[11,"from_iter","","",193,{"inputs":[{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",193,null],[11,"extend","","",193,null],[11,"clone","collections::linked_list","",195,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",196,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"from","","",197,{"inputs":[{"name":"option"}],"output":{"name":"rawlink"}}],[11,"clone","","",197,{"inputs":[{"name":"rawlink"}],"output":{"name":"rawlink"}}],[11,"default","","",198,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",198,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",198,null],[11,"iter","","Provides a forward iterator.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"iter"}}],[11,"iter_mut","","Provides a forward iterator with mutable references.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"itermut"}}],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"len","","Returns the length of the `LinkedList`.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"usize"}}],[11,"clear","","Removes all elements from the `LinkedList`.",198,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_front","","Adds an element first in the list.",198,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"push_back","","Appends an element to the back of a list",198,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",198,{"inputs":[{"name":"linkedlist"},{"name":"usize"}],"output":{"name":"linkedlist"}}],[11,"front_place","","Returns a place for insertion at the front of the list.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"frontplace"}}],[11,"back_place","","Returns a place for insertion at the back of the list.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"backplace"}}],[11,"drop","","",198,null],[11,"next","","",195,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",195,null],[11,"next_back","","",195,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",199,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",199,null],[11,"next_back","","",199,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",199,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",199,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"next","","",196,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",196,null],[11,"next_back","","",196,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"from_iter","","",198,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"intoiter"}}],[11,"extend","","",198,null],[11,"extend","","",198,null],[11,"eq","","",198,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"ne","","",198,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",198,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"option"}}],[11,"cmp","","",198,{"inputs":[{"name":"linkedlist"},{"name":"linkedlist"}],"output":{"name":"ordering"}}],[11,"clone","","",198,{"inputs":[{"name":"linkedlist"}],"output":{"name":"linkedlist"}}],[11,"fmt","","",198,{"inputs":[{"name":"linkedlist"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",198,null],[11,"make_place","","",200,{"inputs":[{"name":"frontplace"}],"output":{"name":"frontplace"}}],[11,"pointer","","",200,null],[11,"finalize","","",200,null],[11,"make_place","","",201,{"inputs":[{"name":"backplace"}],"output":{"name":"backplace"}}],[11,"pointer","","",201,null],[11,"finalize","","",201,null],[11,"start","core::ops","",39,{"inputs":[{"name":"rangefrom"}],"output":{"name":"option"}}],[11,"end","","",40,{"inputs":[{"name":"rangeto"}],"output":{"name":"option"}}],[11,"start","","",38,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"end","","",38,{"inputs":[{"name":"range"}],"output":{"name":"option"}}],[11,"borrow","collections::vec","",169,null],[11,"borrow_mut","","",169,null],[11,"clone","collections::str","",202,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"encodeutf16"}}],[11,"next","","",202,{"inputs":[{"name":"encodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",202,null],[11,"borrow","collections::string","",163,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"cmp","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"option"}}],[11,"lt","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"le","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"gt","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ge","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"fmt","","",203,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",203,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"vec"}}],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",203,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"utf8error"}}],[11,"fmt","","",203,{"inputs":[{"name":"fromutf8error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",204,{"inputs":[{"name":"fromutf16error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",163,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"clone_from","","",163,null],[11,"from_iter","","",163,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",163,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",163,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",163,null],[11,"extend","","",163,null],[11,"extend","","",163,null],[11,"extend","","",163,null],[11,"eq","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",163,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",163,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",192,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"cow"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",192,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"cow"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","collections::string","",163,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"ne","","",163,{"inputs":[{"name":"string"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"default","","",163,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",163,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",163,{"inputs":[{"name":"string"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",163,null],[11,"add","","",163,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"string"}}],[11,"index","","",163,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index","","",163,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index","","",163,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index","","",163,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"index_mut","","",163,{"inputs":[{"name":"string"},{"name":"range"}],"output":{"name":"str"}}],[11,"index_mut","","",163,{"inputs":[{"name":"string"},{"name":"rangeto"}],"output":{"name":"str"}}],[11,"index_mut","","",163,{"inputs":[{"name":"string"},{"name":"rangefrom"}],"output":{"name":"str"}}],[11,"index_mut","","",163,{"inputs":[{"name":"string"},{"name":"rangefull"}],"output":{"name":"str"}}],[11,"deref","","",163,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"deref_mut","","",163,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"from_str","","",163,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",205,{"inputs":[{"name":"parseerror"}],"output":{"name":"parseerror"}}],[11,"fmt","","",205,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",205,{"inputs":[{"name":"parseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",205,{"inputs":[{"name":"parseerror"},{"name":"parseerror"}],"output":{"name":"bool"}}],[11,"as_ref","","",163,{"inputs":[{"name":"string"}],"output":{"name":"str"}}],[11,"as_ref","","",163,null],[11,"from","","",163,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",192,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",192,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",163,{"inputs":[{"name":"string"}],"output":{"name":"vec"}}],[11,"into_cow","","",163,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"write_str","","",163,{"inputs":[{"name":"string"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","",163,{"inputs":[{"name":"string"},{"name":"char"}],"output":{"name":"result"}}],[11,"drop","","",206,null],[11,"next","","",206,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",206,null],[11,"next_back","","",206,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",169,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",169,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",169,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",169,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",169,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",169,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",169,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",169,{"inputs":[{"name":"vec"}],"output":{"name":"box"}}],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",169,null],[11,"as_slice","","Extracts a slice containing the entire vector.",169,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",169,null],[11,"set_len","","Sets the length of a vector.",169,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",169,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",169,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",169,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"retain","","Retains only the elements specified by the predicate.",169,null],[11,"push","","Appends an element to the back of a collection.",169,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",169,{"inputs":[{"name":"vec"}],"output":{"name":"option"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",169,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",169,{"inputs":[{"name":"vec"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the vector, removing all values.",169,null],[11,"len","","Returns the number of elements in the vector.",169,{"inputs":[{"name":"vec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns `true` if the vector contains no elements.",169,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"split_off","","Splits the collection into two at the given index.",169,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"vec"}}],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",169,null],[11,"push_all","","",169,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",169,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",169,null],[11,"clone","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"clone_from","","",169,null],[11,"hash","","",169,null],[11,"index","","",169,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",169,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index","","",169,null],[11,"index","","",169,null],[11,"index","","",169,null],[11,"index","","",169,null],[11,"index_mut","","",169,null],[11,"index_mut","","",169,null],[11,"index_mut","","",169,null],[11,"index_mut","","",169,null],[11,"deref","","",169,null],[11,"deref_mut","","",169,null],[11,"from_iter","","",169,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",169,{"inputs":[{"name":"vec"}],"output":{"name":"intoiter"}}],[11,"extend","","",169,null],[11,"extend","","",169,null],[11,"eq","","",169,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",169,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","collections::borrow","",192,null],[11,"ne","","",192,null],[11,"eq","","",192,null],[11,"ne","","",192,null],[11,"eq","","",192,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"ne","","",192,{"inputs":[{"name":"cow"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"eq","collections::vec","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"partial_cmp","","",169,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"option"}}],[11,"cmp","","",169,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"ordering"}}],[11,"drop","","",169,null],[11,"default","","",169,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",169,{"inputs":[{"name":"vec"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_mut","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"as_ref","","",169,null],[11,"as_mut","","",169,null],[11,"from","","",169,null],[11,"from","","",169,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",192,null],[11,"from","","",192,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",192,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"into_cow","collections::vec","",169,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"next","","",207,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",207,null],[11,"count","","",207,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next_back","","",207,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"clone","","",207,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"drop","","",207,null],[11,"next","","",208,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",208,null],[11,"next_back","","",208,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"drop","","",208,null],[11,"clone","collections::vec_deque","",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vecdeque"}}],[11,"drop","","",209,null],[11,"default","","",209,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",209,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",209,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap","","Swaps elements at indices `i` and `j`.",209,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",209,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",209,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",209,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",209,null],[11,"iter","","Returns a front-to-back iterator.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"iter"}}],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"itermut"}}],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",209,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",209,null],[11,"len","","Returns the number of elements in the `VecDeque`.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the buffer contains no elements",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",209,{"inputs":[{"name":"vecdeque"},{"name":"r"}],"output":{"name":"drain"}}],[11,"clear","","Clears the buffer, removing all values.",209,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"push_front","","Inserts an element first in the sequence.",209,null],[11,"push_back","","Appends an element to the back of a buffer",209,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",209,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"option"}}],[11,"split_off","","Splits the collection into two at the given index.",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",209,null],[11,"retain","","Retains only the elements specified by the predicate.",209,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",209,null],[11,"clone","","",210,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",210,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",210,null],[11,"next_back","","",210,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",211,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",211,null],[11,"next_back","","",211,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"clone","","",212,{"inputs":[{"name":"intoiter"}],"output":{"name":"intoiter"}}],[11,"next","","",212,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",212,null],[11,"next_back","","",212,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"drop","","",213,null],[11,"next","","",213,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",213,null],[11,"next_back","","",213,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"eq","","",209,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",209,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"option"}}],[11,"cmp","","",209,{"inputs":[{"name":"vecdeque"},{"name":"vecdeque"}],"output":{"name":"ordering"}}],[11,"hash","","",209,null],[11,"index","","",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"index_mut","","",209,{"inputs":[{"name":"vecdeque"},{"name":"usize"}],"output":{"name":"a"}}],[11,"from_iter","","",209,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",209,{"inputs":[{"name":"vecdeque"}],"output":{"name":"intoiter"}}],[11,"extend","","",209,null],[11,"extend","","",209,null],[11,"fmt","","",209,{"inputs":[{"name":"vecdeque"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","collections","",214,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"ne","","",214,{"inputs":[{"name":"bound"},{"name":"bound"}],"output":{"name":"bool"}}],[11,"hash","","",214,null],[11,"fmt","","",214,{"inputs":[{"name":"bound"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",214,{"inputs":[{"name":"bound"}],"output":{"name":"bound"}}],[3,"String","bitflags::__core::prelude::v1","A UTF-8 encoded, growable string.",null,null],[8,"ToString","","A trait for converting a value to a `String`.",null,null],[10,"to_string","","Converts the given value to a `String`.",215,{"inputs":[{"name":"tostring"}],"output":{"name":"string"}}],[3,"Vec","","A contiguous growable array type, written `Vec&lt;T&gt;` but pronounced &#39;vector.&#39;",null,null],[0,"f32","bitflags::__core","The 32-bit floating point type.",null,null],[17,"RADIX","bitflags::__core::f32","",null,null],[17,"MANTISSA_DIGITS","","",null,null],[17,"DIGITS","","",null,null],[17,"EPSILON","","",null,null],[17,"MIN_EXP","","",null,null],[17,"MAX_EXP","","",null,null],[17,"MIN_10_EXP","","",null,null],[17,"MAX_10_EXP","","",null,null],[17,"NAN","","",null,null],[17,"INFINITY","","",null,null],[17,"NEG_INFINITY","","",null,null],[17,"MIN","","Smallest finite f32 value",null,null],[17,"MIN_POSITIVE","","Smallest positive, normalized f32 value",null,null],[17,"MAX","","Largest finite f32 value",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","bitflags::__core::f32::consts","Archimedes&#39; constant",null,null],[17,"FRAC_PI_2","","pi/2.0",null,null],[17,"FRAC_PI_3","","pi/3.0",null,null],[17,"FRAC_PI_4","","pi/4.0",null,null],[17,"FRAC_PI_6","","pi/6.0",null,null],[17,"FRAC_PI_8","","pi/8.0",null,null],[17,"FRAC_1_PI","","1.0/pi",null,null],[17,"FRAC_2_PI","","2.0/pi",null,null],[17,"FRAC_2_SQRT_PI","","2.0/sqrt(pi)",null,null],[17,"SQRT_2","","sqrt(2.0)",null,null],[17,"FRAC_1_SQRT_2","","1.0/sqrt(2.0)",null,null],[17,"E","","Euler&#39;s number",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LN_2","","ln(2.0)",null,null],[17,"LN_10","","ln(10.0)",null,null],[0,"f64","bitflags::__core","The 64-bit floating point type.",null,null],[17,"RADIX","bitflags::__core::f64","",null,null],[17,"MANTISSA_DIGITS","","",null,null],[17,"DIGITS","","",null,null],[17,"EPSILON","","",null,null],[17,"MIN_EXP","","",null,null],[17,"MAX_EXP","","",null,null],[17,"MIN_10_EXP","","",null,null],[17,"MAX_10_EXP","","",null,null],[17,"NAN","","",null,null],[17,"INFINITY","","",null,null],[17,"NEG_INFINITY","","",null,null],[17,"MIN","","Smallest finite f64 value",null,null],[17,"MIN_POSITIVE","","Smallest positive, normalized f64 value",null,null],[17,"MAX","","Largest finite f64 value",null,null],[0,"consts","","Basic mathematical constants.",null,null],[17,"PI","bitflags::__core::f64::consts","Archimedes&#39; constant",null,null],[17,"FRAC_PI_2","","pi/2.0",null,null],[17,"FRAC_PI_3","","pi/3.0",null,null],[17,"FRAC_PI_4","","pi/4.0",null,null],[17,"FRAC_PI_6","","pi/6.0",null,null],[17,"FRAC_PI_8","","pi/8.0",null,null],[17,"FRAC_1_PI","","1.0/pi",null,null],[17,"FRAC_2_PI","","2.0/pi",null,null],[17,"FRAC_2_SQRT_PI","","2.0/sqrt(pi)",null,null],[17,"SQRT_2","","sqrt(2.0)",null,null],[17,"FRAC_1_SQRT_2","","1.0/sqrt(2.0)",null,null],[17,"E","","Euler&#39;s number",null,null],[17,"LOG2_E","","log2(e)",null,null],[17,"LOG10_E","","log10(e)",null,null],[17,"LN_2","","ln(2.0)",null,null],[17,"LN_10","","ln(10.0)",null,null],[0,"ascii","bitflags::__core","Operations on ASCII strings and characters",null,null],[8,"AsciiExt","bitflags::__core::ascii","Extension methods for ASCII-subset only operations on string slices.",null,null],[16,"Owned","","Container type for copied ASCII characters.",216,null],[10,"is_ascii","","Checks if the value is within the ASCII range.",216,{"inputs":[{"name":"asciiext"}],"output":{"name":"bool"}}],[10,"to_ascii_uppercase","","Makes a copy of the string in ASCII upper case.",216,null],[10,"to_ascii_lowercase","","Makes a copy of the string in ASCII lower case.",216,null],[10,"eq_ignore_ascii_case","","Checks that two strings are an ASCII case-insensitive match.",216,{"inputs":[{"name":"asciiext"},{"name":"self"}],"output":{"name":"bool"}}],[10,"make_ascii_uppercase","","Converts this type to its ASCII upper case equivalent in-place.",216,null],[10,"make_ascii_lowercase","","Converts this type to its ASCII lower case equivalent in-place.",216,null],[11,"into_ascii_uppercase","","Converts this type to its ASCII upper case,\nconsuming the value to avoid allocating memory where `to_ascii_uppercase` would.",216,null],[11,"into_ascii_lowercase","","Converts this type to its ASCII lower case,\nconsuming the value to avoid allocating memory where `to_ascii_lowercase` would.",216,null],[11,"from","bitflags::__core::prelude::v1","",5,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",5,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",5,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",5,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",5,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",5,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",119,{"inputs":[{"name":"parseboolerror"}],"output":{"name":"str"}}],[11,"description","","",120,{"inputs":[{"name":"utf8error"}],"output":{"name":"str"}}],[11,"description","core::num","",31,{"inputs":[{"name":"parseinterror"}],"output":{"name":"str"}}],[11,"description","core::num::dec2flt","",217,{"inputs":[{"name":"parsefloaterror"}],"output":{"name":"str"}}],[11,"description","collections::string","",203,{"inputs":[{"name":"fromutf8error"}],"output":{"name":"str"}}],[11,"description","","",204,{"inputs":[{"name":"fromutf16error"}],"output":{"name":"str"}}],[11,"description","","",205,{"inputs":[{"name":"parseerror"}],"output":{"name":"str"}}],[11,"description","bitflags::__core::prelude::v1","",5,{"inputs":[{"name":"box"}],"output":{"name":"str"}}],[11,"cause","","",5,{"inputs":[{"name":"box"}],"output":{"name":"option"}}],[11,"is","bitflags::__core","Returns true if the boxed type is the same as `T`",0,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",0,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"is","","Forwards to the method defined on the type `Any`.",0,{"inputs":[{"name":"error"}],"output":{"name":"bool"}}],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",0,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",0,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",0,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",0,{"inputs":[{"name":"error"}],"output":{"name":"result"}}],[11,"is_ascii","bitflags::__core::prelude::v1","",163,{"inputs":[{"name":"string"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",163,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"to_ascii_lowercase","","",163,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"eq_ignore_ascii_case","","",163,{"inputs":[{"name":"string"},{"name":"string"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",163,null],[11,"make_ascii_lowercase","","",163,null],[11,"into_ascii_lowercase","","",163,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"into_ascii_uppercase","","",163,{"inputs":[{"name":"string"}],"output":{"name":"string"}}],[11,"is_ascii","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"to_ascii_lowercase","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"eq_ignore_ascii_case","","",169,{"inputs":[{"name":"vec"},{"name":"vec"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",169,null],[11,"make_ascii_lowercase","","",169,null],[11,"into_ascii_lowercase","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"into_ascii_uppercase","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[11,"next","std::ascii","",218,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"size_hint","","",218,null],[11,"next_back","","",218,{"inputs":[{"name":"escapedefault"}],"output":{"name":"option"}}],[11,"clone","std::thread::local","",219,{"inputs":[{"name":"localkeystate"}],"output":{"name":"localkeystate"}}],[11,"eq","","",219,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"ne","","",219,{"inputs":[{"name":"localkeystate"},{"name":"localkeystate"}],"output":{"name":"bool"}}],[11,"with","","Acquires a reference to the value in this TLS key.",220,{"inputs":[{"name":"localkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"state","","Query the current state of this key.",220,{"inputs":[{"name":"localkey"}],"output":{"name":"localkeystate"}}],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",221,{"inputs":[{"name":"scopedkey"},{"name":"t"},{"name":"f"}],"output":{"name":"r"}}],[11,"with","","Gets a value out of this scoped variable.",221,{"inputs":[{"name":"scopedkey"},{"name":"f"}],"output":{"name":"r"}}],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",221,{"inputs":[{"name":"scopedkey"}],"output":{"name":"bool"}}],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",222,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",222,{"inputs":[{"name":"builder"},{"name":"string"}],"output":{"name":"builder"}}],[11,"stack_size","","Sets the size of the stack for the new thread.",222,{"inputs":[{"name":"builder"},{"name":"usize"}],"output":{"name":"builder"}}],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",222,{"inputs":[{"name":"builder"},{"name":"f"}],"output":{"name":"result"}}],[11,"clone","","",223,{"inputs":[{"name":"thread"}],"output":{"name":"thread"}}],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",223,null],[11,"name","","Gets the thread&#39;s name.",223,{"inputs":[{"name":"thread"}],"output":{"name":"option"}}],[11,"fmt","","",223,{"inputs":[{"name":"thread"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",223,{"inputs":[{"name":"option"}],"output":{"name":"thread"}}],[11,"thread","","Extracts a handle to the underlying thread",224,{"inputs":[{"name":"joinhandle"}],"output":{"name":"thread"}}],[11,"join","","Waits for the associated thread to finish.",224,{"inputs":[{"name":"joinhandle"}],"output":{"name":"result"}}],[11,"clone","std::collections::hash::table","",225,{"inputs":[{"name":"rawbucket"}],"output":{"name":"rawbucket"}}],[11,"clone","","",226,{"inputs":[{"name":"bucket"}],"output":{"name":"bucket"}}],[11,"clone","","",227,{"inputs":[{"name":"safehash"}],"output":{"name":"safehash"}}],[11,"eq","","",227,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"ne","","",227,{"inputs":[{"name":"safehash"},{"name":"safehash"}],"output":{"name":"bool"}}],[11,"inspect","","Peek at the hash value, which is guaranteed to be non-zero.",227,{"inputs":[{"name":"safehash"}],"output":{"name":"u64"}}],[11,"table","","Borrow a reference to the table.",228,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",228,{"inputs":[{"name":"fullbucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",228,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"table","","Borrow a reference to the table.",229,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",229,{"inputs":[{"name":"emptybucket"}],"output":{"name":"m"}}],[11,"into_table","","Move out the reference to the table.",226,{"inputs":[{"name":"bucket"}],"output":{"name":"m"}}],[11,"index","","Get the raw index.",226,{"inputs":[{"name":"bucket"}],"output":{"name":"usize"}}],[11,"new","","",226,{"inputs":[{"name":"m"},{"name":"safehash"}],"output":{"name":"bucket"}}],[11,"at_index","","",226,{"inputs":[{"name":"m"},{"name":"usize"}],"output":{"name":"bucket"}}],[11,"first","","",226,{"inputs":[{"name":"m"}],"output":{"name":"bucket"}}],[11,"peek","","Reads a bucket at a given index, returning an enum indicating whether\nit&#39;s initialized or not. You need to match on this enum to get\nthe appropriate types to call most of the other functions in\nthis module.",226,{"inputs":[{"name":"bucket"}],"output":{"name":"bucketstate"}}],[11,"next","","Modifies the bucket pointer in place to make it point to the next slot.",226,null],[11,"next","","",229,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",229,{"inputs":[{"name":"emptybucket"}],"output":{"name":"bucket"}}],[11,"gap_peek","","",229,{"inputs":[{"name":"emptybucket"}],"output":{"name":"option"}}],[11,"put","","Puts given key and value pair, along with the key&#39;s hash,\ninto this bucket in the hashtable. Note how `self` is &#39;moved&#39; into\nthis function, because this slot will no longer be empty when\nwe return! A `FullBucket` is returned for later use, pointing to\nthe newly-filled slot in the hashtable.",229,{"inputs":[{"name":"emptybucket"},{"name":"safehash"},{"name":"k"},{"name":"v"}],"output":{"name":"fullbucket"}}],[11,"next","","",228,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"into_bucket","","",228,{"inputs":[{"name":"fullbucket"}],"output":{"name":"bucket"}}],[11,"distance","","Get the distance between this bucket and the &#39;ideal&#39; location\nas determined by the key&#39;s hash stored in it.",228,{"inputs":[{"name":"fullbucket"}],"output":{"name":"usize"}}],[11,"hash","","",228,{"inputs":[{"name":"fullbucket"}],"output":{"name":"safehash"}}],[11,"read","","Gets references to the key and value at a given index.",228,null],[11,"take","","Removes this bucket&#39;s key and value from the hashtable.",228,null],[11,"replace","","",228,null],[11,"read_mut","","Gets mutable references to the key and value at a given index.",228,null],[11,"into_refs","","Exchange a bucket state for immutable references into the table.\nBecause the underlying reference to the table is also consumed,\nno further changes to the structure of the table are possible;\nin exchange for this, the returned references have a longer lifetime\nthan the references returned by `read()`.",228,null],[11,"into_mut_refs","","This works similarly to `into_refs`, exchanging a bucket state\nfor mutable references into the table.",228,null],[11,"expect_full","","",230,{"inputs":[{"name":"bucketstate"}],"output":{"name":"fullbucket"}}],[11,"full","","",231,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"fullbucket"}}],[11,"shift","","",231,{"inputs":[{"name":"gapthenfull"}],"output":{"name":"option"}}],[11,"new","","Creates a new raw table from a given capacity. All buckets are\ninitially empty.",232,{"inputs":[{"name":"usize"}],"output":{"name":"rawtable"}}],[11,"capacity","","The hashtable&#39;s capacity, similar to a vector&#39;s.",232,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"size","","The number of elements ever `put` in the hashtable, minus the number\nof elements ever `take`n.",232,{"inputs":[{"name":"rawtable"}],"output":{"name":"usize"}}],[11,"iter","","",232,{"inputs":[{"name":"rawtable"}],"output":{"name":"iter"}}],[11,"iter_mut","","",232,{"inputs":[{"name":"rawtable"}],"output":{"name":"itermut"}}],[11,"into_iter","","",232,{"inputs":[{"name":"rawtable"}],"output":{"name":"intoiter"}}],[11,"drain","","",232,{"inputs":[{"name":"rawtable"}],"output":{"name":"drain"}}],[11,"clone","","",233,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"rawbuckets"}}],[11,"next","","",233,{"inputs":[{"name":"rawbuckets"}],"output":{"name":"option"}}],[11,"next","","",234,{"inputs":[{"name":"revmovebuckets"}],"output":{"name":"option"}}],[11,"clone","","",235,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",235,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",235,null],[11,"len","","",235,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",236,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",236,null],[11,"len","","",236,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",237,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",237,null],[11,"len","","",237,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",238,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",238,null],[11,"len","","",238,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"drop","","",238,null],[11,"clone","","",232,{"inputs":[{"name":"rawtable"}],"output":{"name":"rawtable"}}],[11,"drop","","",232,null],[11,"clone","std::collections::hash::map","",239,{"inputs":[{"name":"defaultresizepolicy"}],"output":{"name":"defaultresizepolicy"}}],[11,"clone","","",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"hashmap"}}],[11,"new","","Creates an empty HashMap.",240,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",240,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",240,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",240,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",240,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",240,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"s"}}],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",240,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",240,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"keys"}}],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"values"}}],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"iter"}}],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"itermut"}}],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",240,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"entry"}}],[11,"len","","Returns the number of elements in the map.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the map contains no elements.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"drain"}}],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",240,null],[11,"get","","Returns a reference to the value corresponding to the key.",240,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"contains_key","","Returns true if the map contains a value for the specified key.",240,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",240,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"insert","","Inserts a key-value pair into the map.",240,{"inputs":[{"name":"hashmap"},{"name":"k"},{"name":"v"}],"output":{"name":"option"}}],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",240,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",240,{"inputs":[{"name":"hashmap"},{"name":"hashmap"}],"output":{"name":"bool"}}],[11,"fmt","","",240,{"inputs":[{"name":"hashmap"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",240,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",240,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"v"}}],[11,"clone","","",241,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"clone","","",242,{"inputs":[{"name":"keys"}],"output":{"name":"keys"}}],[11,"clone","","",243,{"inputs":[{"name":"values"}],"output":{"name":"values"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",240,{"inputs":[{"name":"hashmap"}],"output":{"name":"intoiter"}}],[11,"next","","",241,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",241,null],[11,"len","","",241,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",244,{"inputs":[{"name":"itermut"}],"output":{"name":"option"}}],[11,"size_hint","","",244,null],[11,"len","","",244,{"inputs":[{"name":"itermut"}],"output":{"name":"usize"}}],[11,"next","","",245,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",245,null],[11,"len","","",245,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",242,{"inputs":[{"name":"keys"}],"output":{"name":"option"}}],[11,"size_hint","","",242,null],[11,"len","","",242,{"inputs":[{"name":"keys"}],"output":{"name":"usize"}}],[11,"next","","",243,{"inputs":[{"name":"values"}],"output":{"name":"option"}}],[11,"size_hint","","",243,null],[11,"len","","",243,{"inputs":[{"name":"values"}],"output":{"name":"usize"}}],[11,"next","","",246,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",246,null],[11,"len","","",246,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",247,{"inputs":[{"name":"entry"},{"name":"v"}],"output":{"name":"v"}}],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",247,{"inputs":[{"name":"entry"},{"name":"f"}],"output":{"name":"v"}}],[11,"get","","Gets a reference to the value in the entry.",248,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"get_mut","","Gets a mutable reference to the value in the entry.",248,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",248,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",248,{"inputs":[{"name":"occupiedentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"remove","","Takes the value out of the entry, and returns it",248,{"inputs":[{"name":"occupiedentry"}],"output":{"name":"v"}}],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",249,{"inputs":[{"name":"vacantentry"},{"name":"v"}],"output":{"name":"v"}}],[11,"from_iter","","",240,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",240,null],[11,"extend","","",240,null],[11,"clone","","",250,{"inputs":[{"name":"randomstate"}],"output":{"name":"randomstate"}}],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",250,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",250,{"inputs":[{"name":"randomstate"}],"output":{"name":"siphasher"}}],[11,"default","","",250,{"inputs":[],"output":{"name":"randomstate"}}],[11,"get","","",240,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"take","","",240,{"inputs":[{"name":"hashmap"},{"name":"q"}],"output":{"name":"option"}}],[11,"replace","","",240,{"inputs":[{"name":"hashmap"},{"name":"k"}],"output":{"name":"option"}}],[11,"clone","std::collections::hash::set","",251,{"inputs":[{"name":"hashset"}],"output":{"name":"hashset"}}],[11,"new","","Creates an empty HashSet.",251,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",251,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",251,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",251,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",251,{"inputs":[{"name":"hashset"}],"output":{"name":"s"}}],[11,"with_hash_state","","Deprecated, renamed to `with_hasher`",251,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hash_state","","Deprecated, renamed to `with_capacity_and_hasher`",251,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",251,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",251,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",251,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",251,{"inputs":[{"name":"hashset"}],"output":{"name":"iter"}}],[11,"difference","","Visit the values representing the difference.",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"difference"}}],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"symmetricdifference"}}],[11,"intersection","","Visit the values representing the intersection.",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"intersection"}}],[11,"union","","Visit the values representing the union.",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"union"}}],[11,"len","","Returns the number of elements in the set.",251,{"inputs":[{"name":"hashset"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns true if the set contains no elements.",251,{"inputs":[{"name":"hashset"}],"output":{"name":"bool"}}],[11,"drain","","Clears the set, returning all elements in an iterator.",251,{"inputs":[{"name":"hashset"}],"output":{"name":"drain"}}],[11,"clear","","Clears the set, removing all values.",251,null],[11,"contains","","Returns `true` if the set contains a value.",251,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",251,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_subset","","Returns `true` if the set is a subset of another.",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"is_superset","","Returns `true` if the set is a superset of another.",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"insert","","Adds a value to the set.",251,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"bool"}}],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",251,{"inputs":[{"name":"hashset"},{"name":"t"}],"output":{"name":"option"}}],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",251,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"bool"}}],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",251,{"inputs":[{"name":"hashset"},{"name":"q"}],"output":{"name":"option"}}],[11,"eq","","",251,{"inputs":[{"name":"hashset"},{"name":"hashset"}],"output":{"name":"bool"}}],[11,"fmt","","",251,{"inputs":[{"name":"hashset"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_iter","","",251,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",251,null],[11,"extend","","",251,null],[11,"default","","",251,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",251,{"inputs":[{"name":"hashset"}],"output":{"name":"intoiter"}}],[11,"clone","","",252,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"next","","",252,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"size_hint","","",252,null],[11,"len","","",252,{"inputs":[{"name":"iter"}],"output":{"name":"usize"}}],[11,"next","","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"size_hint","","",253,null],[11,"len","","",253,{"inputs":[{"name":"intoiter"}],"output":{"name":"usize"}}],[11,"next","","",254,{"inputs":[{"name":"drain"}],"output":{"name":"option"}}],[11,"size_hint","","",254,null],[11,"len","","",254,{"inputs":[{"name":"drain"}],"output":{"name":"usize"}}],[11,"clone","","",255,{"inputs":[{"name":"intersection"}],"output":{"name":"intersection"}}],[11,"next","","",255,{"inputs":[{"name":"intersection"}],"output":{"name":"option"}}],[11,"size_hint","","",255,null],[11,"clone","","",256,{"inputs":[{"name":"difference"}],"output":{"name":"difference"}}],[11,"next","","",256,{"inputs":[{"name":"difference"}],"output":{"name":"option"}}],[11,"size_hint","","",256,null],[11,"clone","","",257,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"symmetricdifference"}}],[11,"next","","",257,{"inputs":[{"name":"symmetricdifference"}],"output":{"name":"option"}}],[11,"size_hint","","",257,null],[11,"clone","","",258,{"inputs":[{"name":"union"}],"output":{"name":"union"}}],[11,"next","","",258,{"inputs":[{"name":"union"}],"output":{"name":"option"}}],[11,"size_hint","","",258,null],[11,"hasher","std::collections::hash::state","",259,{"inputs":[{"name":"defaultstate"}],"output":{"name":"h"}}],[11,"clone","","",259,{"inputs":[{"name":"defaultstate"}],"output":{"name":"defaultstate"}}],[11,"default","","",259,{"inputs":[],"output":{"name":"defaultstate"}}],[11,"drop","std::dynamic_lib","",260,null],[11,"open","","Lazily open a dynamic library. When passed None it gives a\nhandle to the calling process",260,{"inputs":[{"name":"option"}],"output":{"name":"result"}}],[11,"prepend_search_path","","Prepends a path to this process&#39;s search path for dynamic libraries",260,null],[11,"create_path","","From a slice of paths, create a new vector which is suitable to be an\nenvironment variable for this platforms dylib search path.",260,null],[11,"envvar","","Returns the environment variable for this process&#39;s dynamic library\nsearch path",260,{"inputs":[],"output":{"name":"str"}}],[11,"search_path","","Returns the current search path for dynamic libraries being used by this\nprocess",260,{"inputs":[],"output":{"name":"vec"}}],[11,"symbol","","Accesses the value at the symbol of the dynamic library.",260,{"inputs":[{"name":"dynamiclibrary"},{"name":"str"}],"output":{"name":"result"}}],[11,"next","std::env","",261,{"inputs":[{"name":"vars"}],"output":{"name":"option"}}],[11,"size_hint","","",261,null],[11,"next","","",262,{"inputs":[{"name":"varsos"}],"output":{"name":"option"}}],[11,"size_hint","","",262,null],[11,"clone","","",263,{"inputs":[{"name":"varerror"}],"output":{"name":"varerror"}}],[11,"eq","","",263,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"ne","","",263,{"inputs":[{"name":"varerror"},{"name":"varerror"}],"output":{"name":"bool"}}],[11,"fmt","","",263,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",263,{"inputs":[{"name":"varerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",263,{"inputs":[{"name":"varerror"}],"output":{"name":"str"}}],[11,"next","","",264,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",264,null],[11,"fmt","","",265,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",265,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",265,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",266,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",266,null],[11,"len","","",266,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",267,{"inputs":[{"name":"argsos"}],"output":{"name":"option"}}],[11,"size_hint","","",267,null],[11,"len","","",267,{"inputs":[{"name":"argsos"}],"output":{"name":"usize"}}],[11,"clone","std::ffi::c_str","",268,{"inputs":[{"name":"cstring"}],"output":{"name":"cstring"}}],[11,"hash","","",268,null],[11,"cmp","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"option"}}],[11,"lt","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"le","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"gt","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ge","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"eq","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"ne","","",268,{"inputs":[{"name":"cstring"},{"name":"cstring"}],"output":{"name":"bool"}}],[11,"hash","","",269,null],[11,"fmt","","",270,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",270,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"ne","","",270,{"inputs":[{"name":"nulerror"},{"name":"nulerror"}],"output":{"name":"bool"}}],[11,"clone","","",270,{"inputs":[{"name":"nulerror"}],"output":{"name":"nulerror"}}],[11,"fmt","","",271,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",271,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"ne","","",271,{"inputs":[{"name":"intostringerror"},{"name":"intostringerror"}],"output":{"name":"bool"}}],[11,"clone","","",271,{"inputs":[{"name":"intostringerror"}],"output":{"name":"intostringerror"}}],[11,"new","","Creates a new C-compatible string from a container of bytes.",268,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",268,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",268,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",268,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",268,{"inputs":[{"name":"cstring"}],"output":{"name":"result"}}],[11,"into_bytes","","Returns the underlying byte buffer.",268,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",268,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",268,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",268,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",269,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",269,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",269,null],[11,"as_ptr","","Returns the inner pointer to this C string.",269,null],[11,"to_bytes","","Converts this C string to a byte slice.",269,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",269,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",269,{"inputs":[{"name":"cstr"}],"output":{"name":"result"}}],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",269,{"inputs":[{"name":"cstr"}],"output":{"name":"cow"}}],[11,"deref","","",268,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"fmt","","",268,{"inputs":[{"name":"cstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","bitflags::__core::prelude::v1","",169,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",269,{"inputs":[{"name":"cstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",268,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",270,{"inputs":[{"name":"nulerror"}],"output":{"name":"usize"}}],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",270,{"inputs":[{"name":"nulerror"}],"output":{"name":"vec"}}],[11,"description","","",270,{"inputs":[{"name":"nulerror"}],"output":{"name":"str"}}],[11,"fmt","","",270,{"inputs":[{"name":"nulerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","std::io::error","",272,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",271,{"inputs":[{"name":"intostringerror"}],"output":{"name":"cstring"}}],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",271,{"inputs":[{"name":"intostringerror"}],"output":{"name":"utf8error"}}],[11,"description","","",271,{"inputs":[{"name":"intostringerror"}],"output":{"name":"str"}}],[11,"cause","","",271,{"inputs":[{"name":"intostringerror"}],"output":{"name":"option"}}],[11,"fmt","","",271,{"inputs":[{"name":"intostringerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",269,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",269,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"option"}}],[11,"cmp","","",269,{"inputs":[{"name":"cstr"},{"name":"cstr"}],"output":{"name":"ordering"}}],[11,"to_owned","","",269,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"from","","",268,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",268,{"inputs":[{"name":"cstring"},{"name":"rangefull"}],"output":{"name":"cstr"}}],[11,"as_ref","","",269,{"inputs":[{"name":"cstr"}],"output":{"name":"cstr"}}],[11,"as_ref","","",268,{"inputs":[{"name":"cstring"}],"output":{"name":"cstr"}}],[11,"clone","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"}],"output":{"name":"osstring"}}],[11,"new","","Constructs a new empty `OsString`.",273,{"inputs":[],"output":{"name":"osstring"}}],[11,"from_bytes","","Constructs an `OsString` from a byte sequence.",273,{"inputs":[{"name":"b"}],"output":{"name":"option"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",273,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",273,{"inputs":[{"name":"osstring"}],"output":{"name":"result"}}],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",273,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity. The string will be\nable to hold exactly `capacity` bytes without reallocating. If\n`capacity` is 0, the string will not allocate.",273,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",273,null],[11,"capacity","","Returns the number of bytes this `OsString` can hold without\nreallocating.",273,{"inputs":[{"name":"osstring"}],"output":{"name":"usize"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `OsString`. The collection may reserve more space to avoid\nfrequent reallocations.",273,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more bytes to be\ninserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",273,null],[11,"from","","",273,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",273,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",273,{"inputs":[{"name":"osstring"},{"name":"rangefull"}],"output":{"name":"osstr"}}],[11,"new","","Coerces into an `OsStr` slice.",274,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid unicode.",274,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",274,{"inputs":[{"name":"osstr"}],"output":{"name":"cow"}}],[11,"to_os_string","","Copies the slice into an owned `OsString`.",274,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"to_bytes","","Yields this `OsStr` as a byte slice.",274,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"to_cstring","","Creates a `CString` containing this `OsStr` data.",274,{"inputs":[{"name":"osstr"}],"output":{"name":"option"}}],[11,"is_empty","","Checks whether the `OsStr` is empty.",274,{"inputs":[{"name":"osstr"}],"output":{"name":"bool"}}],[11,"len","","Returns the number of bytes in this `OsStr`.",274,{"inputs":[{"name":"osstr"}],"output":{"name":"usize"}}],[11,"deref","","",273,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"fmt","","",273,{"inputs":[{"name":"osstring"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",273,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","","",273,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",273,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"lt","","",273,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"le","","",273,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"gt","","",273,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"ge","","",273,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",273,{"inputs":[{"name":"osstring"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",273,{"inputs":[{"name":"osstring"},{"name":"osstring"}],"output":{"name":"ordering"}}],[11,"hash","","",273,null],[11,"eq","","",274,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",274,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"lt","","",274,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"le","","",274,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"gt","","",274,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"ge","","",274,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"osstr"},{"name":"str"}],"output":{"name":"option"}}],[11,"cmp","","",274,{"inputs":[{"name":"osstr"},{"name":"osstr"}],"output":{"name":"ordering"}}],[11,"eq","","",273,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","","",274,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",273,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"osstr"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"eq","","",273,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",273,{"inputs":[{"name":"osstring"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",192,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"hash","","",274,null],[11,"fmt","","",274,{"inputs":[{"name":"osstr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"borrow","","",273,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"to_owned","","",274,{"inputs":[{"name":"osstr"}],"output":{"name":"osstring"}}],[11,"as_ref","","",274,{"inputs":[{"name":"osstr"}],"output":{"name":"osstr"}}],[11,"as_ref","","",273,{"inputs":[{"name":"osstring"}],"output":{"name":"osstr"}}],[11,"as_ref","bitflags::__core::prelude::v1","",163,{"inputs":[{"name":"string"}],"output":{"name":"osstr"}}],[11,"clone","std::fs","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"metadata"}}],[11,"clone","","",276,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",277,{"inputs":[{"name":"permissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",277,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"ne","","",277,{"inputs":[{"name":"permissions"},{"name":"permissions"}],"output":{"name":"bool"}}],[11,"clone","","",277,{"inputs":[{"name":"permissions"}],"output":{"name":"permissions"}}],[11,"hash","","",278,null],[11,"eq","","",278,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",278,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",278,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"open","","Attempts to open a file in read-only mode.",279,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",279,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",279,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",279,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",279,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"metadata","","Queries metadata about the underlying file.",279,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",279,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fmt","","",279,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",279,null],[11,"read_to_end","","",279,{"inputs":[{"name":"file"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",279,null],[11,"flush","","",279,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",279,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"new","","Creates a blank new set of options ready for configuration.",276,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",276,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"write","","Sets the option for write access.",276,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"append","","Sets the option for the append mode.",276,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"truncate","","Sets the option for truncating a previous file.",276,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create","","Sets the option for creating a new file.",276,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"create_new","","Sets the option to always create a new file.",276,{"inputs":[{"name":"openoptions"},{"name":"bool"}],"output":{"name":"openoptions"}}],[11,"open","","Opens a file at `path` with the options specified by `self`.",276,{"inputs":[{"name":"openoptions"},{"name":"p"}],"output":{"name":"result"}}],[11,"file_type","","Returns the file type for this metadata.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"filetype"}}],[11,"is_dir","","Returns whether this metadata is for a directory.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether this metadata is for a regular file.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"bool"}}],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"permissions","","Returns the permissions of the file this metadata is for.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"permissions"}}],[11,"modified","","Returns the last modification time listed in this metadata.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"accessed","","Returns the last access time of this metadata.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"created","","Returns the creation time listed in the this metadata.",275,{"inputs":[{"name":"metadata"}],"output":{"name":"result"}}],[11,"readonly","","Returns whether these permissions describe a readonly file.",277,{"inputs":[{"name":"permissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",277,null],[11,"is_dir","","Test whether this file type represents a directory.",278,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","Test whether this file type represents a regular file.",278,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","Test whether this file type represents a symbolic link.",278,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"next","","",280,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"path","","Returns the full path to the file that this entry represents.",281,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"metadata","","Return the metadata for the file that this entry points at.",281,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","Return the file type for the file that this entry points at.",281,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",281,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"next","","",282,{"inputs":[{"name":"walkdir"}],"output":{"name":"option"}}],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",283,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",283,{"inputs":[{"name":"dirbuilder"},{"name":"bool"}],"output":{"name":"dirbuilder"}}],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",283,{"inputs":[{"name":"dirbuilder"},{"name":"p"}],"output":{"name":"result"}}],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",284,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",284,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",284,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"get_mut","","Gets a mutable reference to the underlying reader.",284,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",284,{"inputs":[{"name":"bufreader"}],"output":{"name":"r"}}],[11,"read","","",284,null],[11,"fill_buf","","",284,{"inputs":[{"name":"bufreader"}],"output":{"name":"result"}}],[11,"consume","","",284,null],[11,"fmt","","",284,{"inputs":[{"name":"bufreader"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",284,{"inputs":[{"name":"bufreader"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fmt","","",285,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",286,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",286,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",286,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",286,{"inputs":[{"name":"bufwriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",286,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"write","","",286,null],[11,"flush","","",286,{"inputs":[{"name":"bufwriter"}],"output":{"name":"result"}}],[11,"fmt","","",286,{"inputs":[{"name":"bufwriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",286,{"inputs":[{"name":"bufwriter"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"drop","","",286,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",285,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"into_inner","","Returns the buffered writer instance which generated the error.",285,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"w"}}],[11,"from","std::io::error","",272,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",285,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"str"}}],[11,"fmt","","",285,{"inputs":[{"name":"intoinnererror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new `LineWriter`.",287,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",287,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",287,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"get_mut","","Gets a mutable reference to the underlying writer.",287,{"inputs":[{"name":"linewriter"}],"output":{"name":"w"}}],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",287,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"write","","",287,null],[11,"flush","","",287,{"inputs":[{"name":"linewriter"}],"output":{"name":"result"}}],[11,"fmt","","",287,{"inputs":[{"name":"linewriter"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","std::io::cursor","",288,{"inputs":[{"name":"cursor"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",288,{"inputs":[{"name":"cursor"}],"output":{"name":"cursor"}}],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",288,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",288,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",288,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",288,{"inputs":[{"name":"cursor"}],"output":{"name":"t"}}],[11,"position","","Returns the current position of this cursor.",288,{"inputs":[{"name":"cursor"}],"output":{"name":"u64"}}],[11,"set_position","","Sets the position of this cursor.",288,null],[11,"seek","","",288,{"inputs":[{"name":"cursor"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"read","","",288,null],[11,"fill_buf","","",288,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"consume","","",288,null],[11,"write","","",288,null],[11,"flush","","",288,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",288,null],[11,"flush","","",288,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"write","","",288,null],[11,"flush","","",288,{"inputs":[{"name":"cursor"}],"output":{"name":"result"}}],[11,"fmt","std::io::error","",272,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",289,{"inputs":[{"name":"custom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",290,{"inputs":[{"name":"errorkind"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",290,{"inputs":[{"name":"errorkind"}],"output":{"name":"errorkind"}}],[11,"eq","","",290,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"ne","","",290,{"inputs":[{"name":"errorkind"},{"name":"errorkind"}],"output":{"name":"bool"}}],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",272,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",272,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",272,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",272,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",272,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",272,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",272,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",272,{"inputs":[{"name":"error"}],"output":{"name":"errorkind"}}],[11,"fmt","","",291,{"inputs":[{"name":"repr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",272,{"inputs":[{"name":"error"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",272,{"inputs":[{"name":"error"}],"output":{"name":"str"}}],[11,"cause","","",272,{"inputs":[{"name":"error"}],"output":{"name":"option"}}],[11,"read","bitflags::__core::prelude::v1","",5,null],[11,"read_to_end","","",5,{"inputs":[{"name":"box"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",5,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",5,null],[11,"write","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"write_all","","",5,null],[11,"write_fmt","","",5,{"inputs":[{"name":"box"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"seek","","",5,{"inputs":[{"name":"box"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"fill_buf","","",5,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"consume","","",5,null],[11,"read_until","","",5,{"inputs":[{"name":"box"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","",5,{"inputs":[{"name":"box"},{"name":"string"}],"output":{"name":"result"}}],[11,"write","","",169,null],[11,"write_all","","",169,null],[11,"flush","","",169,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"new","std::io::lazy","",292,null],[11,"get","","",292,{"inputs":[{"name":"lazy"}],"output":{"name":"option"}}],[11,"read","std::io::util","",293,null],[11,"fill_buf","","",293,{"inputs":[{"name":"empty"}],"output":{"name":"result"}}],[11,"consume","","",293,null],[11,"read","","",294,null],[11,"write","","",295,null],[11,"flush","","",295,{"inputs":[{"name":"sink"}],"output":{"name":"result"}}],[11,"read","std::io::stdio","",296,null],[11,"write","","",297,null],[11,"flush","","",297,{"inputs":[{"name":"stdoutraw"}],"output":{"name":"result"}}],[11,"write","","",298,null],[11,"flush","","",298,{"inputs":[{"name":"stderrraw"}],"output":{"name":"result"}}],[11,"write","","",299,null],[11,"flush","","",299,{"inputs":[{"name":"maybe"}],"output":{"name":"result"}}],[11,"read","","",299,null],[11,"lock","","Locks this handle to the standard input stream, returning a readable\nguard.",300,{"inputs":[{"name":"stdin"}],"output":{"name":"stdinlock"}}],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",300,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read","","",300,null],[11,"read_to_end","","",300,{"inputs":[{"name":"stdin"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","",300,{"inputs":[{"name":"stdin"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","",300,null],[11,"read","","",301,null],[11,"read_to_end","","",301,{"inputs":[{"name":"stdinlock"},{"name":"vec"}],"output":{"name":"result"}}],[11,"fill_buf","","",301,{"inputs":[{"name":"stdinlock"}],"output":{"name":"result"}}],[11,"consume","","",301,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",302,{"inputs":[{"name":"stdout"}],"output":{"name":"stdoutlock"}}],[11,"write","","",302,null],[11,"flush","","",302,{"inputs":[{"name":"stdout"}],"output":{"name":"result"}}],[11,"write_all","","",302,null],[11,"write_fmt","","",302,{"inputs":[{"name":"stdout"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",303,null],[11,"flush","","",303,{"inputs":[{"name":"stdoutlock"}],"output":{"name":"result"}}],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",304,{"inputs":[{"name":"stderr"}],"output":{"name":"stderrlock"}}],[11,"write","","",304,null],[11,"flush","","",304,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"write_all","","",304,null],[11,"write_fmt","","",304,{"inputs":[{"name":"stderr"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"write","","",305,null],[11,"flush","","",305,{"inputs":[{"name":"stderrlock"}],"output":{"name":"result"}}],[11,"fmt","std::io","",306,{"inputs":[{"name":"seekfrom"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",306,{"inputs":[{"name":"seekfrom"}],"output":{"name":"seekfrom"}}],[11,"eq","","",306,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"ne","","",306,{"inputs":[{"name":"seekfrom"},{"name":"seekfrom"}],"output":{"name":"bool"}}],[11,"write","","",307,null],[11,"flush","","",307,{"inputs":[{"name":"broadcast"}],"output":{"name":"result"}}],[11,"read","","",308,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",309,{"inputs":[{"name":"take"}],"output":{"name":"u64"}}],[11,"read","","",309,null],[11,"fill_buf","","",309,{"inputs":[{"name":"take"}],"output":{"name":"result"}}],[11,"consume","","",309,null],[11,"read","","",310,null],[11,"next","","",311,{"inputs":[{"name":"bytes"}],"output":{"name":"option"}}],[11,"fmt","","",312,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",313,{"inputs":[{"name":"chars"}],"output":{"name":"option"}}],[11,"description","","",312,{"inputs":[{"name":"charserror"}],"output":{"name":"str"}}],[11,"cause","","",312,{"inputs":[{"name":"charserror"}],"output":{"name":"option"}}],[11,"fmt","","",312,{"inputs":[{"name":"charserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"next","","",314,{"inputs":[{"name":"split"}],"output":{"name":"option"}}],[11,"next","","",315,{"inputs":[{"name":"lines"}],"output":{"name":"option"}}],[11,"cmp","std::net::ip","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"option"}}],[11,"lt","","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"le","","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"gt","","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ge","","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"hash","","",316,null],[11,"fmt","","",316,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"ne","","",316,{"inputs":[{"name":"ipaddr"},{"name":"ipaddr"}],"output":{"name":"bool"}}],[11,"clone","","",316,{"inputs":[{"name":"ipaddr"}],"output":{"name":"ipaddr"}}],[11,"fmt","","",317,{"inputs":[{"name":"ipv6multicastscope"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",317,null],[11,"clone","","",317,{"inputs":[{"name":"ipv6multicastscope"}],"output":{"name":"ipv6multicastscope"}}],[11,"eq","","",317,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"ne","","",317,{"inputs":[{"name":"ipv6multicastscope"},{"name":"ipv6multicastscope"}],"output":{"name":"bool"}}],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",318,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",318,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_private","","Returns true if this is a private address.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_multicast","","Returns true if this is a multicast address.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_broadcast","","Returns true if this is a broadcast address.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv6addr"}}],[11,"fmt","","",316,{"inputs":[{"name":"ipaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",318,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",318,{"inputs":[{"name":"ipv4addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",318,{"inputs":[{"name":"ipv4addr"}],"output":{"name":"ipv4addr"}}],[11,"eq","","",318,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"bool"}}],[11,"hash","","",318,null],[11,"partial_cmp","","",318,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"option"}}],[11,"cmp","","",318,{"inputs":[{"name":"ipv4addr"},{"name":"ipv4addr"}],"output":{"name":"ordering"}}],[11,"from","","",318,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",319,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",319,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_loopback","","Returns true if this is a loopback address (::1).",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_global","","Returns true if the address appears to be globally routable.",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"is_multicast","","Returns true if this is a multicast address.",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"fmt","","",319,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",319,{"inputs":[{"name":"ipv6addr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",319,{"inputs":[{"name":"ipv6addr"}],"output":{"name":"ipv6addr"}}],[11,"eq","","",319,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"bool"}}],[11,"hash","","",319,null],[11,"partial_cmp","","",319,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"option"}}],[11,"cmp","","",319,{"inputs":[{"name":"ipv6addr"},{"name":"ipv6addr"}],"output":{"name":"ordering"}}],[11,"fmt","std::net::addr","",320,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",320,null],[11,"eq","","",320,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"ne","","",320,{"inputs":[{"name":"socketaddr"},{"name":"socketaddr"}],"output":{"name":"bool"}}],[11,"clone","","",320,{"inputs":[{"name":"socketaddr"}],"output":{"name":"socketaddr"}}],[11,"new","","Creates a new socket address from the (ip, port) pair.",320,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",320,{"inputs":[{"name":"socketaddr"}],"output":{"name":"ipaddr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",320,null],[11,"port","","Returns the port number associated with this socket address.",320,{"inputs":[{"name":"socketaddr"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",320,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",321,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",321,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"ipv4addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",321,null],[11,"port","","Returns the port number associated with this socket address.",321,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",321,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",322,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",322,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"ipv6addr"}}],[11,"set_ip","","Change the IP address associated with this socket address.",322,null],[11,"port","","Returns the port number associated with this socket address.",322,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u16"}}],[11,"set_port","","Change the port number associated with this socket address.",322,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",322,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_flowinfo","","Change the flow information associated with this socket address.",322,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",322,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"u32"}}],[11,"set_scope_id","","Change the scope ID associated with this socket address.",322,null],[11,"fmt","","",320,{"inputs":[{"name":"socketaddr"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",321,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",321,{"inputs":[{"name":"socketaddrv4"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",322,{"inputs":[{"name":"socketaddrv6"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",321,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"socketaddrv4"}}],[11,"clone","","",322,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"socketaddrv6"}}],[11,"eq","","",321,{"inputs":[{"name":"socketaddrv4"},{"name":"socketaddrv4"}],"output":{"name":"bool"}}],[11,"eq","","",322,{"inputs":[{"name":"socketaddrv6"},{"name":"socketaddrv6"}],"output":{"name":"bool"}}],[11,"hash","","",321,null],[11,"hash","","",322,null],[11,"to_socket_addrs","","",320,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",321,{"inputs":[{"name":"socketaddrv4"}],"output":{"name":"result"}}],[11,"to_socket_addrs","","",322,{"inputs":[{"name":"socketaddrv6"}],"output":{"name":"result"}}],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",323,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",323,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",323,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",323,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",323,null],[11,"read_to_end","","",323,{"inputs":[{"name":"tcpstream"},{"name":"vec"}],"output":{"name":"result"}}],[11,"write","","",323,null],[11,"flush","","",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",323,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",324,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",324,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",324,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","Accept a new incoming connection from this listener.",324,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",324,{"inputs":[{"name":"tcplistener"}],"output":{"name":"incoming"}}],[11,"next","","",325,{"inputs":[{"name":"incoming"}],"output":{"name":"option"}}],[11,"fmt","","",324,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",326,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",326,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",326,null],[11,"local_addr","","Returns the socket address that this socket was created from.",326,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",326,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",326,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",326,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","Returns the read timeout of this socket.",326,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","Returns the write timeout of this socket.",326,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",326,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_str","std::net::ip","",316,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",318,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",319,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",321,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",322,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",320,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",327,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"ne","","",327,{"inputs":[{"name":"addrparseerror"},{"name":"addrparseerror"}],"output":{"name":"bool"}}],[11,"clone","","",327,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"addrparseerror"}}],[11,"fmt","","",327,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",327,{"inputs":[{"name":"addrparseerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",327,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"str"}}],[11,"fmt","std::net","",328,{"inputs":[{"name":"shutdown"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",328,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"ne","","",328,{"inputs":[{"name":"shutdown"},{"name":"shutdown"}],"output":{"name":"bool"}}],[11,"clone","","",328,{"inputs":[{"name":"shutdown"}],"output":{"name":"shutdown"}}],[11,"next","","",329,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"clone","std::os::linux::raw::arch","",330,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"as_raw_stat","std::fs","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"stat"}}],[11,"st_dev","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_ino","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_mode","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_nlink","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_uid","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_gid","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"st_rdev","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_size","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_atime","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_atime_nsec","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_mtime_nsec","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_ctime_nsec","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"st_blksize","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"st_blocks","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"as_raw_fd","","",279,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"from_raw_fd","","",279,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",279,{"inputs":[{"name":"file"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::tcp","",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",324,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"as_raw_fd","std::net::udp","",326,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_raw_fd","std::net::tcp","",323,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",324,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",326,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",323,{"inputs":[{"name":"tcpstream"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",324,{"inputs":[{"name":"tcplistener"}],"output":{"name":"i32"}}],[11,"into_raw_fd","std::net::udp","",326,{"inputs":[{"name":"udpsocket"}],"output":{"name":"i32"}}],[11,"from_vec","std::ffi::os_str","",273,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",273,{"inputs":[{"name":"osstring"}],"output":{"name":"vec"}}],[11,"from_bytes","","",274,null],[11,"as_bytes","","",274,null],[11,"mode","std::fs","",277,{"inputs":[{"name":"permissions"}],"output":{"name":"u32"}}],[11,"set_mode","","",277,null],[11,"from_mode","","",277,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",276,{"inputs":[{"name":"openoptions"},{"name":"u32"}],"output":{"name":"openoptions"}}],[11,"custom_flags","","",276,{"inputs":[{"name":"openoptions"},{"name":"i32"}],"output":{"name":"openoptions"}}],[11,"dev","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"ino","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"mode","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"nlink","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"uid","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"gid","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u32"}}],[11,"rdev","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"size","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"atime","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"atime_nsec","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"mtime_nsec","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"ctime_nsec","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"i64"}}],[11,"blksize","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"blocks","","",275,{"inputs":[{"name":"metadata"}],"output":{"name":"u64"}}],[11,"is_block_device","","",278,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_char_device","","",278,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_fifo","","",278,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_socket","","",278,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ino","","",281,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"mode","","",283,{"inputs":[{"name":"dirbuilder"},{"name":"u32"}],"output":{"name":"dirbuilder"}}],[11,"uid","std::process","",331,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"gid","","",331,{"inputs":[{"name":"command"},{"name":"u32"}],"output":{"name":"command"}}],[11,"session_leader","","",331,{"inputs":[{"name":"command"},{"name":"bool"}],"output":{"name":"command"}}],[11,"before_exec","","",331,{"inputs":[{"name":"command"},{"name":"f"}],"output":{"name":"command"}}],[11,"exec","","",331,{"inputs":[{"name":"command"}],"output":{"name":"error"}}],[11,"signal","","",332,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"from_raw_fd","","",333,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",334,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",335,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"as_raw_fd","","",336,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",334,{"inputs":[{"name":"childstdin"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",335,{"inputs":[{"name":"childstdout"}],"output":{"name":"i32"}}],[11,"into_raw_fd","","",336,{"inputs":[{"name":"childstderr"}],"output":{"name":"i32"}}],[11,"as_pthread_t","std::thread","",224,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"into_pthread_t","","",224,{"inputs":[{"name":"joinhandle"}],"output":{"name":"u64"}}],[11,"new","std::panic","Creates a new `AssertRecoverSafe` wrapper around the provided type.",337,{"inputs":[{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",337,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref","","",337,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"deref_mut","","",337,{"inputs":[{"name":"assertrecoversafe"}],"output":{"name":"t"}}],[11,"eq","std::path","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ne","","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"cmp","","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"option"}}],[11,"lt","","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"le","","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"gt","","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"ge","","",338,{"inputs":[{"name":"prefix"},{"name":"prefix"}],"output":{"name":"bool"}}],[11,"hash","","",338,null],[11,"fmt","","",338,{"inputs":[{"name":"prefix"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",338,{"inputs":[{"name":"prefix"}],"output":{"name":"prefix"}}],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",338,{"inputs":[{"name":"prefix"}],"output":{"name":"bool"}}],[11,"fmt","","",339,{"inputs":[{"name":"state"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"partial_cmp","","",339,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"option"}}],[11,"lt","","",339,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"le","","",339,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"gt","","",339,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ge","","",339,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"eq","","",339,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"ne","","",339,{"inputs":[{"name":"state"},{"name":"state"}],"output":{"name":"bool"}}],[11,"clone","","",339,{"inputs":[{"name":"state"}],"output":{"name":"state"}}],[11,"fmt","","",340,{"inputs":[{"name":"prefixcomponent"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",340,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefixcomponent"}}],[11,"kind","","The parsed prefix data.",340,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"prefix"}}],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",340,{"inputs":[{"name":"prefixcomponent"}],"output":{"name":"osstr"}}],[11,"eq","","",340,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",340,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"option"}}],[11,"cmp","","",340,{"inputs":[{"name":"prefixcomponent"},{"name":"prefixcomponent"}],"output":{"name":"ordering"}}],[11,"hash","","",340,null],[11,"fmt","","",341,{"inputs":[{"name":"component"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"hash","","",341,null],[11,"cmp","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"option"}}],[11,"lt","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"le","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"gt","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ge","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"eq","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"ne","","",341,{"inputs":[{"name":"component"},{"name":"component"}],"output":{"name":"bool"}}],[11,"clone","","",341,{"inputs":[{"name":"component"}],"output":{"name":"component"}}],[11,"as_os_str","","Extracts the underlying `OsStr` slice",341,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"as_ref","","",341,{"inputs":[{"name":"component"}],"output":{"name":"osstr"}}],[11,"clone","","",342,{"inputs":[{"name":"components"}],"output":{"name":"components"}}],[11,"clone","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"iter"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",342,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"peek","","Examine the next component without consuming it.",342,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"as_ref","","",342,{"inputs":[{"name":"components"}],"output":{"name":"path"}}],[11,"as_ref","","",342,{"inputs":[{"name":"components"}],"output":{"name":"osstr"}}],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",343,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"path"}}],[11,"as_ref","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"osstr"}}],[11,"next","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next_back","","",343,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",342,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"next_back","","",342,{"inputs":[{"name":"components"}],"output":{"name":"option"}}],[11,"eq","","",342,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",342,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"option"}}],[11,"cmp","","",342,{"inputs":[{"name":"components"},{"name":"components"}],"output":{"name":"ordering"}}],[11,"clone","","",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"pathbuf"}}],[11,"new","","Allocates an empty `PathBuf`.",344,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"push","","Extends `self` with `path`.",344,null],[11,"pop","","Truncate `self` to `self.parent()`.",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",344,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",344,{"inputs":[{"name":"pathbuf"},{"name":"s"}],"output":{"name":"bool"}}],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"from","","",344,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",344,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",344,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",344,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",344,null],[11,"fmt","","",344,{"inputs":[{"name":"pathbuf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Directly wrap a string slice as a `Path` slice.",345,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",345,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",345,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",345,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",345,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",345,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_relative","","A path is *relative* if it is not absolute.",345,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"prefix","","Returns the *prefix* of a path, if any.",345,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",345,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"parent","","The path without its final component, if any.",345,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"file_name","","The final component of the path, if it is a normal file.",345,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"relative_from","","Returns a path that, when joined onto `base`, yields `self`.",345,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"option"}}],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",345,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"result"}}],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",345,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",345,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"bool"}}],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",345,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",345,{"inputs":[{"name":"path"}],"output":{"name":"option"}}],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",345,{"inputs":[{"name":"path"},{"name":"p"}],"output":{"name":"pathbuf"}}],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",345,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",345,{"inputs":[{"name":"path"},{"name":"s"}],"output":{"name":"pathbuf"}}],[11,"components","","Produce an iterator over the components of the path.",345,{"inputs":[{"name":"path"}],"output":{"name":"components"}}],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",345,{"inputs":[{"name":"path"}],"output":{"name":"iter"}}],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",345,{"inputs":[{"name":"path"}],"output":{"name":"display"}}],[11,"metadata","","Query the file system to get information about a file, directory, etc.",345,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",345,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",345,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",345,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"read_dir","","Returns an iterator over the entries within a directory.",345,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"exists","","Returns whether the path points at an existing entity.",345,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_file","","Returns whether the path is pointing at a regular file.",345,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"is_dir","","Returns whether the path is pointing at a directory.",345,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"deref","","",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"borrow","","",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"into_cow","","",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"from","collections::borrow","",192,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",192,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",345,{"inputs":[{"name":"path"}],"output":{"name":"pathbuf"}}],[11,"eq","","",344,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"hash","","",344,null],[11,"partial_cmp","","",344,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"cmp","","",344,{"inputs":[{"name":"pathbuf"},{"name":"pathbuf"}],"output":{"name":"ordering"}}],[11,"as_ref","","",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstr"}}],[11,"into","","",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"osstring"}}],[11,"eq","","",346,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"ne","","",346,{"inputs":[{"name":"stripprefixerror"},{"name":"stripprefixerror"}],"output":{"name":"bool"}}],[11,"clone","","",346,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"stripprefixerror"}}],[11,"fmt","","",346,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_ref","","",345,{"inputs":[{"name":"path"}],"output":{"name":"osstr"}}],[11,"fmt","","",345,{"inputs":[{"name":"path"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",347,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",347,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",345,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"bool"}}],[11,"hash","","",345,null],[11,"partial_cmp","","",345,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"option"}}],[11,"cmp","","",345,{"inputs":[{"name":"path"},{"name":"path"}],"output":{"name":"ordering"}}],[11,"as_ref","","",345,{"inputs":[{"name":"path"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"}],"output":{"name":"path"}}],[11,"as_ref","collections::borrow","",192,{"inputs":[{"name":"cow"}],"output":{"name":"path"}}],[11,"as_ref","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"}],"output":{"name":"path"}}],[11,"as_ref","bitflags::__core::prelude::v1","",163,{"inputs":[{"name":"string"}],"output":{"name":"path"}}],[11,"as_ref","std::path","",344,{"inputs":[{"name":"pathbuf"}],"output":{"name":"path"}}],[11,"eq","","",344,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","","",345,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",344,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","","",345,{"inputs":[{"name":"path"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","","",344,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",344,{"inputs":[{"name":"pathbuf"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"eq","std::path","",345,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",345,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",192,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"eq","std::path","",344,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"partial_cmp","std::path","",344,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","","",344,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",344,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",344,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",344,{"inputs":[{"name":"pathbuf"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",344,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",344,{"inputs":[{"name":"pathbuf"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",344,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",344,{"inputs":[{"name":"pathbuf"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"pathbuf"}],"output":{"name":"option"}}],[11,"eq","std::path","",345,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",345,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",345,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",345,{"inputs":[{"name":"path"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",345,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",345,{"inputs":[{"name":"path"},{"name":"cow"}],"output":{"name":"option"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::path","",345,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","std::path","",345,{"inputs":[{"name":"path"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","","",274,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",274,{"inputs":[{"name":"osstr"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"cow"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",273,{"inputs":[{"name":"osstring"},{"name":"path"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",274,{"inputs":[{"name":"osstr"},{"name":"cow"}],"output":{"name":"option"}}],[11,"eq","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",192,{"inputs":[{"name":"cow"},{"name":"osstr"}],"output":{"name":"option"}}],[11,"eq","","",192,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"bool"}}],[11,"eq","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","collections::borrow","",192,{"inputs":[{"name":"cow"},{"name":"osstring"}],"output":{"name":"option"}}],[11,"partial_cmp","std::ffi::os_str","",273,{"inputs":[{"name":"osstring"},{"name":"cow"}],"output":{"name":"option"}}],[11,"fmt","std::path","",346,{"inputs":[{"name":"stripprefixerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",346,{"inputs":[{"name":"stripprefixerror"}],"output":{"name":"str"}}],[11,"write","std::process","",334,null],[11,"flush","","",334,{"inputs":[{"name":"childstdin"}],"output":{"name":"result"}}],[11,"read","","",335,null],[11,"read","","",336,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",331,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",331,{"inputs":[{"name":"command"},{"name":"s"}],"output":{"name":"command"}}],[11,"args","","Add multiple arguments to pass to the program.",331,null],[11,"env","","Inserts or updates an environment variable mapping.",331,{"inputs":[{"name":"command"},{"name":"k"},{"name":"v"}],"output":{"name":"command"}}],[11,"env_remove","","Removes an environment variable mapping.",331,{"inputs":[{"name":"command"},{"name":"k"}],"output":{"name":"command"}}],[11,"env_clear","","Clears the entire environment map for the child process.",331,{"inputs":[{"name":"command"}],"output":{"name":"command"}}],[11,"current_dir","","Sets the working directory for the child process.",331,{"inputs":[{"name":"command"},{"name":"p"}],"output":{"name":"command"}}],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",331,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",331,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",331,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"command"}}],[11,"spawn","","Executes the command as a child process, returning a handle to it.",331,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",331,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",331,{"inputs":[{"name":"command"}],"output":{"name":"result"}}],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",331,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",348,{"inputs":[{"name":"output"}],"output":{"name":"output"}}],[11,"eq","","",348,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"ne","","",348,{"inputs":[{"name":"output"},{"name":"output"}],"output":{"name":"bool"}}],[11,"fmt","","",348,{"inputs":[{"name":"output"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",333,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",333,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",333,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",332,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",332,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",332,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",332,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",332,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","Returns the exit code of the process, if any.",332,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",332,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",349,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"id","","Returns the OS-assigned process identifier associated with this child.",349,{"inputs":[{"name":"child"}],"output":{"name":"u32"}}],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",349,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",349,{"inputs":[{"name":"child"}],"output":{"name":"result"}}],[11,"clone","std::sync::mpsc::blocking","",350,{"inputs":[{"name":"signaltoken"}],"output":{"name":"signaltoken"}}],[11,"signal","","",350,{"inputs":[{"name":"signaltoken"}],"output":{"name":"bool"}}],[11,"cast_to_usize","","Convert to an unsafe usize value. Useful for storing in a pipe&#39;s state\nflag.",350,{"inputs":[{"name":"signaltoken"}],"output":{"name":"usize"}}],[11,"cast_from_usize","","Convert from an unsafe usize value. Useful for retrieving a pipe&#39;s state\nflag.",350,{"inputs":[{"name":"usize"}],"output":{"name":"signaltoken"}}],[11,"wait","","",351,null],[11,"new","std::sync::mpsc::oneshot","",352,{"inputs":[],"output":{"name":"packet"}}],[11,"send","","",352,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"sent","","",352,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"recv","","",352,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",352,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"upgrade","","",352,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"drop_chan","","",352,null],[11,"drop_port","","",352,null],[11,"can_recv","","",352,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",352,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",352,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop","","",352,null],[11,"eq","std::sync::mpsc::select","",353,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"ne","","",353,{"inputs":[{"name":"startresult"},{"name":"startresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new selection structure. This set is initially empty.",354,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",354,{"inputs":[{"name":"select"},{"name":"receiver"}],"output":{"name":"handle"}}],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",354,{"inputs":[{"name":"select"}],"output":{"name":"usize"}}],[11,"id","","Retrieves the id of this handle.",355,{"inputs":[{"name":"handle"}],"output":{"name":"usize"}}],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",355,{"inputs":[{"name":"handle"}],"output":{"name":"result"}}],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",355,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",355,null],[11,"drop","","",354,null],[11,"drop","","",355,null],[11,"next","","",356,{"inputs":[{"name":"packets"}],"output":{"name":"option"}}],[11,"fmt","","",354,{"inputs":[{"name":"select"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",355,{"inputs":[{"name":"handle"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sync::mpsc::shared","",357,{"inputs":[],"output":{"name":"packet"}}],[11,"postinit_lock","","",357,{"inputs":[{"name":"packet"}],"output":{"name":"mutexguard"}}],[11,"inherit_blocker","","",357,null],[11,"send","","",357,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",357,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",357,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",357,null],[11,"drop_chan","","",357,null],[11,"drop_port","","",357,null],[11,"can_recv","","",357,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",357,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",357,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"bool"}}],[11,"drop","","",357,null],[11,"new","std::sync::mpsc::stream","",358,{"inputs":[],"output":{"name":"packet"}}],[11,"send","","",358,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"upgrade","","",358,{"inputs":[{"name":"packet"},{"name":"receiver"}],"output":{"name":"upgraderesult"}}],[11,"recv","","",358,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",358,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"drop_chan","","",358,null],[11,"drop_port","","",358,null],[11,"can_recv","","",358,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"start_selection","","",358,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"selectionresult"}}],[11,"abort_selection","","",358,{"inputs":[{"name":"packet"},{"name":"bool"}],"output":{"name":"result"}}],[11,"drop","","",358,null],[11,"fmt","std::sync::mpsc::sync","",359,{"inputs":[{"name":"failure"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",360,{"inputs":[{"name":"usize"}],"output":{"name":"packet"}}],[11,"send","","",360,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","",360,{"inputs":[{"name":"packet"},{"name":"t"}],"output":{"name":"result"}}],[11,"recv","","",360,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"try_recv","","",360,{"inputs":[{"name":"packet"}],"output":{"name":"result"}}],[11,"clone_chan","","",360,null],[11,"drop_chan","","",360,null],[11,"drop_port","","",360,null],[11,"can_recv","","",360,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"start_selection","","",360,{"inputs":[{"name":"packet"},{"name":"signaltoken"}],"output":{"name":"startresult"}}],[11,"abort_selection","","",360,{"inputs":[{"name":"packet"}],"output":{"name":"bool"}}],[11,"drop","","",360,null],[11,"new","std::sync::mpsc::mpsc_queue","Creates a new queue that is safe to share among multiple producers and\none consumer.",361,{"inputs":[],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue.",361,null],[11,"pop","","Pops some data from this queue.",361,{"inputs":[{"name":"queue"}],"output":{"name":"popresult"}}],[11,"drop","","",361,null],[11,"new","std::sync::mpsc::spsc_queue","Creates a new queue.",362,{"inputs":[{"name":"usize"}],"output":{"name":"queue"}}],[11,"push","","Pushes a new value onto this queue. Note that to use this function\nsafely, it must be externally guaranteed that there is only one pusher.",362,null],[11,"pop","","Attempts to pop a value from this queue. Remember that to use this type\nsafely you must ensure that there is only one popper at a time.",362,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"peek","","Attempts to peek at the head of the queue, returning `None` if the queue\nhas no data currently",362,{"inputs":[{"name":"queue"}],"output":{"name":"option"}}],[11,"drop","","",362,null],[11,"clone","std::sync::mpsc","",363,{"inputs":[{"name":"senderror"}],"output":{"name":"senderror"}}],[11,"eq","","",363,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"ne","","",363,{"inputs":[{"name":"senderror"},{"name":"senderror"}],"output":{"name":"bool"}}],[11,"fmt","","",364,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",364,{"inputs":[{"name":"recverror"}],"output":{"name":"recverror"}}],[11,"eq","","",364,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"ne","","",364,{"inputs":[{"name":"recverror"},{"name":"recverror"}],"output":{"name":"bool"}}],[11,"fmt","","",365,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",365,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"tryrecverror"}}],[11,"eq","","",365,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"ne","","",365,{"inputs":[{"name":"tryrecverror"},{"name":"tryrecverror"}],"output":{"name":"bool"}}],[11,"clone","","",366,{"inputs":[{"name":"trysenderror"}],"output":{"name":"trysenderror"}}],[11,"eq","","",366,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"ne","","",366,{"inputs":[{"name":"trysenderror"},{"name":"trysenderror"}],"output":{"name":"bool"}}],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",367,{"inputs":[{"name":"sender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",367,{"inputs":[{"name":"sender"}],"output":{"name":"sender"}}],[11,"drop","","",367,null],[11,"fmt","","",367,{"inputs":[{"name":"sender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"send","","Sends a value on this synchronous channel.",368,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"try_send","","Attempts to send a value on this channel without blocking.",368,{"inputs":[{"name":"syncsender"},{"name":"t"}],"output":{"name":"result"}}],[11,"clone","","",368,{"inputs":[{"name":"syncsender"}],"output":{"name":"syncsender"}}],[11,"drop","","",368,null],[11,"fmt","","",368,{"inputs":[{"name":"syncsender"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",369,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",369,{"inputs":[{"name":"receiver"}],"output":{"name":"result"}}],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",369,{"inputs":[{"name":"receiver"}],"output":{"name":"iter"}}],[11,"next","","",370,{"inputs":[{"name":"iter"}],"output":{"name":"option"}}],[11,"next","","",371,{"inputs":[{"name":"intoiter"}],"output":{"name":"option"}}],[11,"into_iter","","",369,{"inputs":[{"name":"receiver"}],"output":{"name":"intoiter"}}],[11,"drop","","",369,null],[11,"fmt","","",369,{"inputs":[{"name":"receiver"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",363,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",363,{"inputs":[{"name":"senderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",363,{"inputs":[{"name":"senderror"}],"output":{"name":"str"}}],[11,"cause","","",363,{"inputs":[{"name":"senderror"}],"output":{"name":"option"}}],[11,"fmt","","",366,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",366,{"inputs":[{"name":"trysenderror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",366,{"inputs":[{"name":"trysenderror"}],"output":{"name":"str"}}],[11,"cause","","",366,{"inputs":[{"name":"trysenderror"}],"output":{"name":"option"}}],[11,"fmt","","",364,{"inputs":[{"name":"recverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",364,{"inputs":[{"name":"recverror"}],"output":{"name":"str"}}],[11,"cause","","",364,{"inputs":[{"name":"recverror"}],"output":{"name":"option"}}],[11,"fmt","","",365,{"inputs":[{"name":"tryrecverror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",365,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"str"}}],[11,"cause","","",365,{"inputs":[{"name":"tryrecverror"}],"output":{"name":"option"}}],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",372,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads has rendezvoused here.",372,{"inputs":[{"name":"barrier"}],"output":{"name":"barrierwaitresult"}}],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",373,{"inputs":[{"name":"barrierwaitresult"}],"output":{"name":"bool"}}],[11,"clone","std::sync::condvar","",374,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"waittimeoutresult"}}],[11,"eq","","",374,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"ne","","",374,{"inputs":[{"name":"waittimeoutresult"},{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"fmt","","",374,{"inputs":[{"name":"waittimeoutresult"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"timed_out","","Returns whether the wait was known to have timed out.",374,{"inputs":[{"name":"waittimeoutresult"}],"output":{"name":"bool"}}],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",375,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",375,{"inputs":[{"name":"condvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",375,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",375,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",375,{"inputs":[{"name":"condvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",375,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",375,null],[11,"drop","","",375,null],[11,"new","","Creates a new condition variable",376,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",376,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"}],"output":{"name":"result"}}],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",376,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"u32"}],"output":{"name":"result"}}],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",376,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"}],"output":{"name":"result"}}],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",376,{"inputs":[{"name":"staticcondvar"},{"name":"mutexguard"},{"name":"duration"},{"name":"f"}],"output":{"name":"result"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",376,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",376,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",376,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",377,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",377,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",377,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",377,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",377,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",377,{"inputs":[{"name":"mutex"}],"output":{"name":"result"}}],[11,"drop","","",377,null],[11,"fmt","","",377,{"inputs":[{"name":"mutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new mutex in an unlocked state ready for use.",378,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",378,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",378,{"inputs":[{"name":"staticmutex"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates resources associated with this static mutex.",378,null],[11,"deref","","",379,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",379,{"inputs":[{"name":"mutexguard"}],"output":{"name":"t"}}],[11,"drop","","",379,null],[11,"new","std::sync::once","Creates a new `Once` value.",380,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",380,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",381,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"is_poisoned","","Determines whether the lock is poisoned.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"get_mut","","Returns a mutable reference to the underlying data.",381,{"inputs":[{"name":"rwlock"}],"output":{"name":"result"}}],[11,"drop","","",381,null],[11,"fmt","","",381,{"inputs":[{"name":"rwlock"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new rwlock.",382,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_read","","Attempts to acquire this lock with shared read access.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",382,{"inputs":[{"name":"staticrwlock"}],"output":{"name":"result"}}],[11,"destroy","","Deallocates all resources associated with this static lock.",382,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",383,{"inputs":[{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",384,{"inputs":[{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",383,{"inputs":[{"name":"rwlockreadguard"}],"output":{"name":"t"}}],[11,"deref","","",384,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"deref_mut","","",384,{"inputs":[{"name":"rwlockwriteguard"}],"output":{"name":"t"}}],[11,"drop","","",383,null],[11,"drop","","",384,null],[11,"new","std::sync::semaphore","Creates a new semaphore with the initial count specified.",385,{"inputs":[{"name":"isize"}],"output":{"name":"semaphore"}}],[11,"acquire","","Acquires a resource of this semaphore, blocking the current thread until\nit can do so.",385,null],[11,"release","","Release a resource from this semaphore.",385,null],[11,"access","","Acquires a resource of this semaphore, returning an RAII guard to\nrelease the semaphore when dropped.",385,{"inputs":[{"name":"semaphore"}],"output":{"name":"semaphoreguard"}}],[11,"drop","","",386,null],[11,"hash","std::time::duration","",387,null],[11,"fmt","","",387,{"inputs":[{"name":"duration"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cmp","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"option"}}],[11,"lt","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"le","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"gt","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ge","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"eq","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"ne","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"clone","","",387,{"inputs":[{"name":"duration"}],"output":{"name":"duration"}}],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",387,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"span","","Runs a closure, returning the duration of time it took to run the\nclosure.",387,{"inputs":[{"name":"f"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",387,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",387,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",387,{"inputs":[{"name":"duration"}],"output":{"name":"u64"}}],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",387,{"inputs":[{"name":"duration"}],"output":{"name":"u32"}}],[11,"add","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"sub","","",387,{"inputs":[{"name":"duration"},{"name":"duration"}],"output":{"name":"duration"}}],[11,"mul","","",387,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"div","","",387,{"inputs":[{"name":"duration"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"cmp","std::time","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",388,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",389,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"fmt","","",390,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",390,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"systemtimeerror"}}],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",388,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",388,{"inputs":[{"name":"instant"}],"output":{"name":"duration"}}],[11,"add","","",388,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",388,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub","","",388,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"fmt","","",388,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",389,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",389,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",389,{"inputs":[{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add","","",389,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub","","",389,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"fmt","","",389,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",390,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"duration"}}],[11,"description","","",390,{"inputs":[{"name":"systemtimeerror"}],"output":{"name":"str"}}],[11,"fmt","","",390,{"inputs":[{"name":"systemtimeerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::condvar","Creates a new condition variable for use.",391,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","Signals one waiter on this condition variable to wake up.",391,null],[11,"notify_all","","Awakens all current waiters on this condition variable.",391,null],[11,"wait","","Waits for a signal on the specified mutex.",391,null],[11,"wait_timeout","","Waits for a signal on the specified mutex with a timeout duration\nspecified by `dur` (a relative time into the future).",391,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","Deallocates all resources associated with this condition variable.",391,null],[11,"clone","std::sys_common::dwarf::eh","",392,{"inputs":[{"name":"ehcontext"}],"output":{"name":"ehcontext"}}],[11,"new","std::sys_common::dwarf","",393,null],[11,"read","","",393,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"t"}}],[11,"read_uleb128","","",393,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"u64"}}],[11,"read_sleb128","","",393,{"inputs":[{"name":"dwarfreader"}],"output":{"name":"i64"}}],[11,"clone","std::sys_common::libunwind","",394,{"inputs":[{"name":"_unwind_action"}],"output":{"name":"_unwind_action"}}],[11,"clone","","",395,{"inputs":[{"name":"_unwind_reason_code"}],"output":{"name":"_unwind_reason_code"}}],[11,"new","std::sys_common::mutex","Creates a new mutex for use.",396,{"inputs":[],"output":{"name":"mutex"}}],[11,"lock","","Locks the mutex blocking the current thread until it is available.",396,null],[11,"try_lock","","Attempts to lock the mutex without blocking, returning whether it was\nsuccessfully acquired or not.",396,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"unlock","","Unlocks the mutex.",396,null],[11,"destroy","","Deallocates all resources associated with this mutex.",396,null],[11,"next","std::sys_common::net","",397,{"inputs":[{"name":"lookuphost"}],"output":{"name":"option"}}],[11,"drop","","",397,null],[11,"connect","","",398,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",398,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"into_socket","","",398,{"inputs":[{"name":"tcpstream"}],"output":{"name":"socket"}}],[11,"set_read_timeout","","",398,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",398,{"inputs":[{"name":"tcpstream"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",398,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"write_timeout","","",398,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"read","","",398,null],[11,"write","","",398,null],[11,"peer_addr","","",398,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"socket_addr","","",398,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"shutdown","","",398,{"inputs":[{"name":"tcpstream"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"duplicate","","",398,{"inputs":[{"name":"tcpstream"}],"output":{"name":"result"}}],[11,"fmt","","",398,{"inputs":[{"name":"tcpstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",399,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",399,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"into_socket","","",399,{"inputs":[{"name":"tcplistener"}],"output":{"name":"socket"}}],[11,"socket_addr","","",399,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"accept","","",399,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"duplicate","","",399,{"inputs":[{"name":"tcplistener"}],"output":{"name":"result"}}],[11,"fmt","","",399,{"inputs":[{"name":"tcplistener"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"bind","","",400,{"inputs":[{"name":"socketaddr"}],"output":{"name":"result"}}],[11,"socket","","",400,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"into_socket","","",400,{"inputs":[{"name":"udpsocket"}],"output":{"name":"socket"}}],[11,"socket_addr","","",400,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"recv_from","","",400,null],[11,"send_to","","",400,null],[11,"duplicate","","",400,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"set_read_timeout","","",400,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"set_write_timeout","","",400,{"inputs":[{"name":"udpsocket"},{"name":"option"}],"output":{"name":"result"}}],[11,"read_timeout","","",400,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"write_timeout","","",400,{"inputs":[{"name":"udpsocket"}],"output":{"name":"result"}}],[11,"fmt","","",400,{"inputs":[{"name":"udpsocket"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys_common::poison","",401,{"inputs":[],"output":{"name":"flag"}}],[11,"borrow","","",401,{"inputs":[{"name":"flag"}],"output":{"name":"result"}}],[11,"done","","",401,null],[11,"get","","",401,{"inputs":[{"name":"flag"}],"output":{"name":"bool"}}],[11,"fmt","","",402,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",402,{"inputs":[{"name":"poisonerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",402,{"inputs":[{"name":"poisonerror"}],"output":{"name":"str"}}],[11,"new","","Creates a `PoisonError`.",402,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",402,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",402,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",402,{"inputs":[{"name":"poisonerror"}],"output":{"name":"t"}}],[11,"from","","",403,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",403,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",403,{"inputs":[{"name":"trylockerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",403,{"inputs":[{"name":"trylockerror"}],"output":{"name":"str"}}],[11,"cause","","",403,{"inputs":[{"name":"trylockerror"}],"output":{"name":"option"}}],[11,"new","std::sys_common::remutex","Creates a new reentrant mutex in an unlocked state.",404,{"inputs":[{"name":"t"}],"output":{"name":"reentrantmutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",404,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"try_lock","","Attempts to acquire this lock.",404,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"result"}}],[11,"drop","","",404,null],[11,"fmt","","",404,{"inputs":[{"name":"reentrantmutex"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"deref","","",405,{"inputs":[{"name":"reentrantmutexguard"}],"output":{"name":"t"}}],[11,"drop","","",405,null],[11,"new","std::sys_common::rwlock","Creates a new reader-writer lock for use.",406,{"inputs":[],"output":{"name":"rwlock"}}],[11,"read","","Acquires shared access to the underlying lock, blocking the current\nthread to do so.",406,null],[11,"try_read","","Attempts to acquire shared access to this lock, returning whether it\nsucceeded or not.",406,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","Acquires write access to the underlying lock, blocking the current thread\nto do so.",406,null],[11,"try_write","","Attempts to acquire exclusive access to this lock, returning whether it\nsucceeded or not.",406,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","Unlocks previously acquired shared access to this lock.",406,null],[11,"write_unlock","","Unlocks previously acquired exclusive access to this lock.",406,null],[11,"destroy","","Destroys OS-related resources with this RWLock.",406,null],[11,"new","std::sys_common::thread_local","",407,{"inputs":[{"name":"option"}],"output":{"name":"statickey"}}],[11,"get","","Gets the value associated with this TLS key",407,null],[11,"set","","Sets this TLS key to a new value.",407,null],[11,"destroy","","Deallocates this OS TLS key.",407,null],[11,"new","","Creates a new managed OS TLS key.",408,{"inputs":[{"name":"option"}],"output":{"name":"key"}}],[11,"get","","See StaticKey::get",408,null],[11,"set","","See StaticKey::set",408,null],[11,"drop","","",408,null],[11,"clone","std::sys_common::wtf8","",409,{"inputs":[{"name":"codepoint"}],"output":{"name":"codepoint"}}],[11,"partial_cmp","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"option"}}],[11,"lt","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"le","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"gt","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ge","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"cmp","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"ordering"}}],[11,"eq","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"ne","","",409,{"inputs":[{"name":"codepoint"},{"name":"codepoint"}],"output":{"name":"bool"}}],[11,"fmt","","",409,{"inputs":[{"name":"codepoint"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_u32_unchecked","","Unsafely creates a new `CodePoint` without checking the value.",409,{"inputs":[{"name":"u32"}],"output":{"name":"codepoint"}}],[11,"from_u32","","Creates a new `CodePoint` if the value is a valid code point.",409,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[11,"from_char","","Creates a new `CodePoint` from a `char`.",409,{"inputs":[{"name":"char"}],"output":{"name":"codepoint"}}],[11,"to_u32","","Returns the numeric value of the code point.",409,{"inputs":[{"name":"codepoint"}],"output":{"name":"u32"}}],[11,"to_char","","Optionally returns a Unicode scalar value for the code point.",409,{"inputs":[{"name":"codepoint"}],"output":{"name":"option"}}],[11,"to_char_lossy","","Returns a Unicode scalar value for the code point.",409,{"inputs":[{"name":"codepoint"}],"output":{"name":"char"}}],[11,"clone","","",410,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8buf"}}],[11,"partial_cmp","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"option"}}],[11,"lt","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"le","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"gt","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ge","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"cmp","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"ordering"}}],[11,"eq","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"ne","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"wtf8buf"}],"output":{"name":"bool"}}],[11,"from_str","","Creates a WTF-8 slice from a UTF-8 `&amp;str` slice.",411,{"inputs":[{"name":"str"}],"output":{"name":"wtf8"}}],[11,"len","","Returns the length, in WTF-8 bytes.",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"usize"}}],[11,"is_empty","","",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ascii_byte_at","","Returns the code point at `position` if it is in the ASCII range,\nor `b&#39;\\xFF&#39; otherwise.",411,{"inputs":[{"name":"wtf8"},{"name":"usize"}],"output":{"name":"u8"}}],[11,"code_points","","Returns an iterator for the string’s code points.",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8codepoints"}}],[11,"as_str","","Tries to convert the string to UTF-8 and return a `&amp;str` slice.",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"option"}}],[11,"to_string_lossy","","Lossily converts the string to UTF-8.\nReturns a UTF-8 `&amp;str` slice if the contents are well-formed in UTF-8.",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"cow"}}],[11,"encode_wide","","Converts the WTF-8 string to potentially ill-formed UTF-16\nand return an iterator of 16-bit code units.",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"encodewide"}}],[11,"deref","","",410,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"fmt","","",410,{"inputs":[{"name":"wtf8buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new, empty WTF-8 string.",410,{"inputs":[],"output":{"name":"wtf8buf"}}],[11,"with_capacity","","Creates a new, empty WTF-8 string with pre-allocated capacity for `n` bytes.",410,{"inputs":[{"name":"usize"}],"output":{"name":"wtf8buf"}}],[11,"from_string","","Creates a WTF-8 string from a UTF-8 `String`.",410,{"inputs":[{"name":"string"}],"output":{"name":"wtf8buf"}}],[11,"from_str","","Creates a WTF-8 string from a UTF-8 `&amp;str` slice.",410,{"inputs":[{"name":"str"}],"output":{"name":"wtf8buf"}}],[11,"clear","","",410,null],[11,"from_wide","","Creates a WTF-8 string from a potentially ill-formed UTF-16 slice of 16-bit code units.",410,null],[11,"as_slice","","",410,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"wtf8"}}],[11,"reserve","","Reserves capacity for at least `additional` more bytes to be inserted\nin the given `Wtf8Buf`.\nThe collection may reserve more space to avoid frequent reallocations.",410,null],[11,"reserve_exact","","",410,null],[11,"capacity","","Returns the number of bytes that this string buffer can hold without reallocating.",410,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"usize"}}],[11,"push_str","","Append a UTF-8 slice at the end of the string.",410,null],[11,"push_wtf8","","Append a WTF-8 slice at the end of the string.",410,null],[11,"push_char","","Append a Unicode scalar value at the end of the string.",410,null],[11,"push","","Append a code point at the end of the string.",410,null],[11,"truncate","","Shortens a string to the specified length.",410,null],[11,"into_string","","Consumes the WTF-8 string and tries to convert it to UTF-8.",410,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"result"}}],[11,"into_string_lossy","","Consumes the WTF-8 string and converts it lossily to UTF-8.",410,{"inputs":[{"name":"wtf8buf"}],"output":{"name":"string"}}],[11,"from_iter","","",410,{"inputs":[{"name":"t"}],"output":{"name":"wtf8buf"}}],[11,"extend","","",410,null],[11,"partial_cmp","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"option"}}],[11,"lt","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"le","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"gt","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ge","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"eq","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"ne","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"cmp","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"ordering"}}],[11,"fmt","","",411,{"inputs":[{"name":"wtf8"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"index","","",411,{"inputs":[{"name":"wtf8"},{"name":"range"}],"output":{"name":"wtf8"}}],[11,"index","","",411,{"inputs":[{"name":"wtf8"},{"name":"rangefrom"}],"output":{"name":"wtf8"}}],[11,"index","","",411,{"inputs":[{"name":"wtf8"},{"name":"rangeto"}],"output":{"name":"wtf8"}}],[11,"index","","",411,{"inputs":[{"name":"wtf8"},{"name":"rangefull"}],"output":{"name":"wtf8"}}],[11,"clone","","",412,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"wtf8codepoints"}}],[11,"next","","",412,{"inputs":[{"name":"wtf8codepoints"}],"output":{"name":"option"}}],[11,"size_hint","","",412,null],[11,"clone","","",413,{"inputs":[{"name":"encodewide"}],"output":{"name":"encodewide"}}],[11,"next","","",413,{"inputs":[{"name":"encodewide"}],"output":{"name":"option"}}],[11,"size_hint","","",413,null],[11,"hash","","",409,null],[11,"hash","","",410,null],[11,"hash","","",411,null],[11,"is_ascii","","",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"to_ascii_uppercase","","",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"to_ascii_lowercase","","",411,{"inputs":[{"name":"wtf8"}],"output":{"name":"wtf8buf"}}],[11,"eq_ignore_ascii_case","","",411,{"inputs":[{"name":"wtf8"},{"name":"wtf8"}],"output":{"name":"bool"}}],[11,"make_ascii_uppercase","","",411,null],[11,"make_ascii_lowercase","","",411,null],[11,"new","std::sys::weak","",414,{"inputs":[{"name":"str"}],"output":{"name":"weak"}}],[11,"get","","",414,{"inputs":[{"name":"weak"}],"output":{"name":"option"}}],[11,"new","std::sys::condvar","",415,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","",415,null],[11,"notify_all","","",415,null],[11,"wait","","",415,null],[11,"wait_timeout","","",415,{"inputs":[{"name":"condvar"},{"name":"mutex"},{"name":"duration"}],"output":{"name":"bool"}}],[11,"destroy","","",415,null],[11,"new","std::sys::fd","",416,{"inputs":[{"name":"i32"}],"output":{"name":"filedesc"}}],[11,"raw","","",416,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"into_raw","","Extracts the actual filedescriptor without closing it.",416,{"inputs":[{"name":"filedesc"}],"output":{"name":"i32"}}],[11,"read","","",416,null],[11,"write","","",416,null],[11,"set_cloexec","","",416,null],[11,"duplicate","","",416,{"inputs":[{"name":"filedesc"}],"output":{"name":"result"}}],[11,"drop","","",416,null],[11,"clone","std::sys::fs","",417,{"inputs":[{"name":"fileattr"}],"output":{"name":"fileattr"}}],[11,"clone","","",418,{"inputs":[{"name":"openoptions"}],"output":{"name":"openoptions"}}],[11,"fmt","","",419,{"inputs":[{"name":"filepermissions"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",419,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"ne","","",419,{"inputs":[{"name":"filepermissions"},{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"clone","","",419,{"inputs":[{"name":"filepermissions"}],"output":{"name":"filepermissions"}}],[11,"hash","","",420,null],[11,"eq","","",420,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"ne","","",420,{"inputs":[{"name":"filetype"},{"name":"filetype"}],"output":{"name":"bool"}}],[11,"clone","","",420,{"inputs":[{"name":"filetype"}],"output":{"name":"filetype"}}],[11,"size","","",417,{"inputs":[{"name":"fileattr"}],"output":{"name":"u64"}}],[11,"perm","","",417,{"inputs":[{"name":"fileattr"}],"output":{"name":"filepermissions"}}],[11,"file_type","","",417,{"inputs":[{"name":"fileattr"}],"output":{"name":"filetype"}}],[11,"modified","","",417,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"accessed","","",417,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"created","","",417,{"inputs":[{"name":"fileattr"}],"output":{"name":"result"}}],[11,"readonly","","",419,{"inputs":[{"name":"filepermissions"}],"output":{"name":"bool"}}],[11,"set_readonly","","",419,null],[11,"mode","","",419,{"inputs":[{"name":"filepermissions"}],"output":{"name":"u32"}}],[11,"is_dir","","",420,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_file","","",420,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is_symlink","","",420,{"inputs":[{"name":"filetype"}],"output":{"name":"bool"}}],[11,"is","","",420,{"inputs":[{"name":"filetype"},{"name":"u32"}],"output":{"name":"bool"}}],[11,"next","","",421,{"inputs":[{"name":"readdir"}],"output":{"name":"option"}}],[11,"drop","","",422,null],[11,"path","","",423,{"inputs":[{"name":"direntry"}],"output":{"name":"pathbuf"}}],[11,"file_name","","",423,{"inputs":[{"name":"direntry"}],"output":{"name":"osstring"}}],[11,"metadata","","",423,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"file_type","","",423,{"inputs":[{"name":"direntry"}],"output":{"name":"result"}}],[11,"ino","","",423,{"inputs":[{"name":"direntry"}],"output":{"name":"u64"}}],[11,"new","","",418,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","",418,null],[11,"write","","",418,null],[11,"append","","",418,null],[11,"truncate","","",418,null],[11,"create","","",418,null],[11,"create_new","","",418,null],[11,"custom_flags","","",418,null],[11,"mode","","",418,null],[11,"open","","",424,{"inputs":[{"name":"path"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"open_c","","",424,{"inputs":[{"name":"cstr"},{"name":"openoptions"}],"output":{"name":"result"}}],[11,"file_attr","","",424,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fsync","","",424,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"datasync","","",424,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"truncate","","",424,{"inputs":[{"name":"file"},{"name":"u64"}],"output":{"name":"result"}}],[11,"read","","",424,null],[11,"write","","",424,null],[11,"flush","","",424,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"seek","","",424,{"inputs":[{"name":"file"},{"name":"seekfrom"}],"output":{"name":"result"}}],[11,"duplicate","","",424,{"inputs":[{"name":"file"}],"output":{"name":"result"}}],[11,"fd","","",424,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",424,{"inputs":[{"name":"file"}],"output":{"name":"filedesc"}}],[11,"new","","",425,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"mkdir","","",425,{"inputs":[{"name":"dirbuilder"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_mode","","",425,null],[11,"fmt","","",424,{"inputs":[{"name":"file"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","std::sys::mutex","",426,{"inputs":[],"output":{"name":"mutex"}}],[11,"lock","","",426,null],[11,"unlock","","",426,null],[11,"try_lock","","",426,{"inputs":[{"name":"mutex"}],"output":{"name":"bool"}}],[11,"destroy","","",426,null],[11,"uninitialized","","",427,{"inputs":[],"output":{"name":"reentrantmutex"}}],[11,"init","","",427,null],[11,"lock","","",427,null],[11,"try_lock","","",427,{"inputs":[{"name":"reentrantmutex"}],"output":{"name":"bool"}}],[11,"unlock","","",427,null],[11,"destroy","","",427,null],[11,"new","std::sys::net","",428,{"inputs":[{"name":"socketaddr"},{"name":"i32"}],"output":{"name":"result"}}],[11,"accept","","",428,null],[11,"duplicate","","",428,{"inputs":[{"name":"socket"}],"output":{"name":"result"}}],[11,"read","","",428,null],[11,"set_timeout","","",428,{"inputs":[{"name":"socket"},{"name":"option"},{"name":"i32"}],"output":{"name":"result"}}],[11,"timeout","","",428,{"inputs":[{"name":"socket"},{"name":"i32"}],"output":{"name":"result"}}],[11,"shutdown","","",428,{"inputs":[{"name":"socket"},{"name":"shutdown"}],"output":{"name":"result"}}],[11,"clone","libc::unix","",429,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",430,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",431,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"clone","","",432,{"inputs":[{"name":"rlimit"}],"output":{"name":"rlimit"}}],[11,"clone","","",433,{"inputs":[{"name":"rusage"}],"output":{"name":"rusage"}}],[11,"clone","","",434,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",435,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",436,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",437,{"inputs":[{"name":"ipv6_mreq"}],"output":{"name":"ipv6_mreq"}}],[11,"clone","","",438,{"inputs":[{"name":"hostent"}],"output":{"name":"hostent"}}],[11,"clone","","",439,{"inputs":[{"name":"iovec"}],"output":{"name":"iovec"}}],[11,"clone","","",440,{"inputs":[{"name":"pollfd"}],"output":{"name":"pollfd"}}],[11,"clone","libc::unix::notbsd","",441,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",442,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",443,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",444,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[11,"clone","","",445,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",446,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",447,{"inputs":[{"name":"sockaddr_ll"}],"output":{"name":"sockaddr_ll"}}],[11,"clone","","",448,{"inputs":[{"name":"fd_set"}],"output":{"name":"fd_set"}}],[11,"clone","","",449,{"inputs":[{"name":"tm"}],"output":{"name":"tm"}}],[11,"clone","","",450,{"inputs":[{"name":"sched_param"}],"output":{"name":"sched_param"}}],[11,"clone","","",451,{"inputs":[{"name":"dl_info"}],"output":{"name":"dl_info"}}],[11,"clone","","",452,{"inputs":[{"name":"epoll_event"}],"output":{"name":"epoll_event"}}],[11,"clone","","",453,{"inputs":[{"name":"utsname"}],"output":{"name":"utsname"}}],[11,"clone","libc::unix::notbsd::linux","",454,{"inputs":[{"name":"dirent"}],"output":{"name":"dirent"}}],[11,"clone","","",455,{"inputs":[{"name":"dirent64"}],"output":{"name":"dirent64"}}],[11,"clone","","",456,{"inputs":[{"name":"rlimit64"}],"output":{"name":"rlimit64"}}],[11,"clone","","",457,{"inputs":[{"name":"glob_t"}],"output":{"name":"glob_t"}}],[11,"clone","","",458,{"inputs":[{"name":"ifaddrs"}],"output":{"name":"ifaddrs"}}],[11,"clone","","",459,{"inputs":[{"name":"pthread_mutex_t"}],"output":{"name":"pthread_mutex_t"}}],[11,"clone","","",460,{"inputs":[{"name":"pthread_rwlock_t"}],"output":{"name":"pthread_rwlock_t"}}],[11,"clone","","",461,{"inputs":[{"name":"pthread_mutexattr_t"}],"output":{"name":"pthread_mutexattr_t"}}],[11,"clone","","",462,{"inputs":[{"name":"pthread_cond_t"}],"output":{"name":"pthread_cond_t"}}],[11,"clone","","",463,{"inputs":[{"name":"passwd"}],"output":{"name":"passwd"}}],[11,"clone","","",464,{"inputs":[{"name":"statvfs"}],"output":{"name":"statvfs"}}],[11,"clone","","",465,{"inputs":[{"name":"sockaddr_nl"}],"output":{"name":"sockaddr_nl"}}],[11,"clone","","",466,{"inputs":[{"name":"dqblk"}],"output":{"name":"dqblk"}}],[11,"clone","","",467,{"inputs":[{"name":"signalfd_siginfo"}],"output":{"name":"signalfd_siginfo"}}],[11,"clone","","",468,{"inputs":[{"name":"fsid_t"}],"output":{"name":"fsid_t"}}],[11,"clone","","",469,{"inputs":[{"name":"mq_attr"}],"output":{"name":"mq_attr"}}],[11,"clone","","",470,{"inputs":[{"name":"cpu_set_t"}],"output":{"name":"cpu_set_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",471,{"inputs":[{"name":"sigaction"}],"output":{"name":"sigaction"}}],[11,"clone","","",472,{"inputs":[{"name":"stack_t"}],"output":{"name":"stack_t"}}],[11,"clone","","",473,{"inputs":[{"name":"siginfo_t"}],"output":{"name":"siginfo_t"}}],[11,"clone","","",474,{"inputs":[{"name":"glob64_t"}],"output":{"name":"glob64_t"}}],[11,"clone","","",475,{"inputs":[{"name":"ucred"}],"output":{"name":"ucred"}}],[11,"clone","","",476,{"inputs":[{"name":"statfs"}],"output":{"name":"statfs"}}],[11,"clone","","",477,{"inputs":[{"name":"msghdr"}],"output":{"name":"msghdr"}}],[11,"clone","","",478,{"inputs":[{"name":"termios"}],"output":{"name":"termios"}}],[11,"clone","","",479,{"inputs":[{"name":"flock"}],"output":{"name":"flock"}}],[11,"clone","libc::unix::notbsd::linux::other::b64","",480,{"inputs":[{"name":"sigset_t"}],"output":{"name":"sigset_t"}}],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",481,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",482,{"inputs":[{"name":"stat64"}],"output":{"name":"stat64"}}],[11,"clone","","",483,{"inputs":[{"name":"pthread_attr_t"}],"output":{"name":"pthread_attr_t"}}],[11,"clone","libc::unix::notbsd::linux::other","",484,{"inputs":[{"name":"ipc_perm"}],"output":{"name":"ipc_perm"}}],[11,"clone","","",485,{"inputs":[{"name":"shmid_ds"}],"output":{"name":"shmid_ds"}}],[11,"next","std::sys::os","",486,{"inputs":[{"name":"splitpaths"}],"output":{"name":"option"}}],[11,"size_hint","","",486,null],[11,"fmt","","",487,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",487,{"inputs":[{"name":"joinpathserror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",487,{"inputs":[{"name":"joinpathserror"}],"output":{"name":"str"}}],[11,"next","","",488,{"inputs":[{"name":"args"}],"output":{"name":"option"}}],[11,"size_hint","","",488,null],[11,"len","","",488,{"inputs":[{"name":"args"}],"output":{"name":"usize"}}],[11,"next","","",489,{"inputs":[{"name":"env"}],"output":{"name":"option"}}],[11,"size_hint","","",489,null],[11,"hash","std::sys::os_str","",490,null],[11,"clone","","",490,{"inputs":[{"name":"buf"}],"output":{"name":"buf"}}],[11,"fmt","","",491,{"inputs":[{"name":"slice"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",490,{"inputs":[{"name":"buf"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_string","","",490,{"inputs":[{"name":"string"}],"output":{"name":"buf"}}],[11,"with_capacity","","",490,{"inputs":[{"name":"usize"}],"output":{"name":"buf"}}],[11,"clear","","",490,null],[11,"capacity","","",490,{"inputs":[{"name":"buf"}],"output":{"name":"usize"}}],[11,"reserve","","",490,null],[11,"reserve_exact","","",490,null],[11,"as_slice","","",490,{"inputs":[{"name":"buf"}],"output":{"name":"slice"}}],[11,"into_string","","",490,{"inputs":[{"name":"buf"}],"output":{"name":"result"}}],[11,"push_slice","","",490,null],[11,"from_str","","",491,{"inputs":[{"name":"str"}],"output":{"name":"slice"}}],[11,"to_str","","",491,{"inputs":[{"name":"slice"}],"output":{"name":"option"}}],[11,"to_string_lossy","","",491,{"inputs":[{"name":"slice"}],"output":{"name":"cow"}}],[11,"to_owned","","",491,{"inputs":[{"name":"slice"}],"output":{"name":"buf"}}],[11,"from_fd","std::sys::pipe","",492,{"inputs":[{"name":"i32"}],"output":{"name":"anonpipe"}}],[11,"read","","",492,null],[11,"write","","",492,null],[11,"fd","","",492,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"into_fd","","",492,{"inputs":[{"name":"anonpipe"}],"output":{"name":"filedesc"}}],[11,"new","std::sys::process","",493,{"inputs":[{"name":"osstr"}],"output":{"name":"command"}}],[11,"arg","","",493,null],[11,"env","","",493,null],[11,"env_remove","","",493,null],[11,"env_clear","","",493,null],[11,"cwd","","",493,null],[11,"uid","","",493,null],[11,"gid","","",493,null],[11,"session_leader","","",493,null],[11,"before_exec","","",493,null],[11,"stdin","","",493,null],[11,"stdout","","",493,null],[11,"stderr","","",493,null],[11,"spawn","","",493,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"result"}}],[11,"exec","","",493,{"inputs":[{"name":"command"},{"name":"stdio"}],"output":{"name":"error"}}],[11,"fmt","","",493,{"inputs":[{"name":"command"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",494,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",494,{"inputs":[{"name":"exitstatus"}],"output":{"name":"exitstatus"}}],[11,"eq","","",494,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"ne","","",494,{"inputs":[{"name":"exitstatus"},{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"success","","",494,{"inputs":[{"name":"exitstatus"}],"output":{"name":"bool"}}],[11,"code","","",494,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"signal","","",494,{"inputs":[{"name":"exitstatus"}],"output":{"name":"option"}}],[11,"fmt","","",494,{"inputs":[{"name":"exitstatus"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"id","","",495,{"inputs":[{"name":"process"}],"output":{"name":"u32"}}],[11,"kill","","",495,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"wait","","",495,{"inputs":[{"name":"process"}],"output":{"name":"result"}}],[11,"new","std::sys::rand::imp","Create a new `OsRng`.",496,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",496,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",496,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",496,null],[11,"new","std::sys::rwlock","",497,{"inputs":[],"output":{"name":"rwlock"}}],[11,"read","","",497,null],[11,"try_read","","",497,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"write","","",497,null],[11,"try_write","","",497,{"inputs":[{"name":"rwlock"}],"output":{"name":"bool"}}],[11,"read_unlock","","",497,null],[11,"write_unlock","","",497,null],[11,"destroy","","",497,null],[11,"new","std::sys::stack_overflow","",498,{"inputs":[],"output":{"name":"handler"}}],[11,"drop","","",498,null],[11,"new","std::sys::thread","",499,{"inputs":[{"name":"usize"},{"name":"box"}],"output":{"name":"result"}}],[11,"yield_now","","",499,null],[11,"set_name","","",499,null],[11,"sleep","","",499,null],[11,"join","","",499,null],[11,"id","","",499,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"into_id","","",499,{"inputs":[{"name":"thread"}],"output":{"name":"u64"}}],[11,"drop","","",499,null],[11,"clone","std::sys::time::inner","",500,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[11,"cmp","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"option"}}],[11,"lt","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"le","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"gt","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ge","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"eq","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"ne","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"bool"}}],[11,"clone","","",501,{"inputs":[{"name":"instant"}],"output":{"name":"instant"}}],[11,"cmp","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"option"}}],[11,"lt","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"le","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"gt","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ge","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"eq","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"ne","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"bool"}}],[11,"clone","","",502,{"inputs":[{"name":"systemtime"}],"output":{"name":"systemtime"}}],[11,"now","","",501,{"inputs":[],"output":{"name":"instant"}}],[11,"sub_instant","","",501,{"inputs":[{"name":"instant"},{"name":"instant"}],"output":{"name":"duration"}}],[11,"add_duration","","",501,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"sub_duration","","",501,{"inputs":[{"name":"instant"},{"name":"duration"}],"output":{"name":"instant"}}],[11,"fmt","","",501,{"inputs":[{"name":"instant"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",502,{"inputs":[],"output":{"name":"systemtime"}}],[11,"sub_time","","",502,{"inputs":[{"name":"systemtime"},{"name":"systemtime"}],"output":{"name":"result"}}],[11,"add_duration","","",502,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"sub_duration","","",502,{"inputs":[{"name":"systemtime"},{"name":"duration"}],"output":{"name":"systemtime"}}],[11,"from","","",502,{"inputs":[{"name":"timespec"}],"output":{"name":"systemtime"}}],[11,"fmt","","",502,{"inputs":[{"name":"systemtime"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"now","","",500,{"inputs":[{"name":"i32"}],"output":{"name":"timespec"}}],[11,"eq","","",500,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",500,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"option"}}],[11,"cmp","","",500,{"inputs":[{"name":"timespec"},{"name":"timespec"}],"output":{"name":"ordering"}}],[11,"new","std::sys::stdio","",503,{"inputs":[],"output":{"name":"result"}}],[11,"read","","",503,null],[11,"new","","",504,{"inputs":[],"output":{"name":"result"}}],[11,"write","","",504,null],[11,"new","","",505,{"inputs":[],"output":{"name":"result"}}],[11,"write","","",505,null],[11,"write","","",505,null],[11,"flush","","",505,{"inputs":[{"name":"stderr"}],"output":{"name":"result"}}],[11,"clone","std::panicking","",506,{"inputs":[{"name":"handler"}],"output":{"name":"handler"}}],[11,"payload","","Returns the payload associated with the panic.",507,{"inputs":[{"name":"panicinfo"}],"output":{"name":"any"}}],[11,"location","","Returns information about the location from which the panic originated,\nif available.",507,{"inputs":[{"name":"panicinfo"}],"output":{"name":"option"}}],[11,"file","","Returns the name of the source file from which the panic originated.",508,{"inputs":[{"name":"location"}],"output":{"name":"str"}}],[11,"line","","Returns the line number from which the panic originated.",508,{"inputs":[{"name":"location"}],"output":{"name":"u32"}}],[11,"new","std::rand::reader","Create a new `ReaderRng` from a `Read`.",509,{"inputs":[{"name":"r"}],"output":{"name":"readerrng"}}],[11,"next_u32","","",509,{"inputs":[{"name":"readerrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",509,{"inputs":[{"name":"readerrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",509,null],[11,"clone","std::rand","",510,{"inputs":[{"name":"stdrng"}],"output":{"name":"stdrng"}}],[11,"new","","Create a randomly seeded instance of `StdRng`.",510,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",510,{"inputs":[{"name":"stdrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",510,{"inputs":[{"name":"stdrng"}],"output":{"name":"u64"}}],[11,"reseed","","",510,null],[11,"from_seed","","",510,null],[11,"reseed","","",511,null],[11,"clone","","",512,{"inputs":[{"name":"threadrng"}],"output":{"name":"threadrng"}}],[11,"next_u32","","",512,{"inputs":[{"name":"threadrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",512,{"inputs":[{"name":"threadrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",512,null],[11,"new","","Create a new `OsRng`.",513,{"inputs":[],"output":{"name":"result"}}],[11,"next_u32","","",513,{"inputs":[{"name":"osrng"}],"output":{"name":"u32"}}],[11,"next_u64","","",513,{"inputs":[{"name":"osrng"}],"output":{"name":"u64"}}],[11,"fill_bytes","","",513,null],[11,"next","rustc_unicode::char","",514,{"inputs":[{"name":"tolowercase"}],"output":{"name":"option"}}],[11,"next","","",515,{"inputs":[{"name":"touppercase"}],"output":{"name":"option"}}],[11,"next","","",516,{"inputs":[{"name":"casemappingiter"}],"output":{"name":"option"}}],[11,"clone","","",517,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"decodeutf16"}}],[11,"next","","",517,{"inputs":[{"name":"decodeutf16"}],"output":{"name":"option"}}],[11,"size_hint","","",517,null],[3,"EscapeDefault","bitflags::__core::ascii","An iterator over the escaped version of a byte, constructed via\n`std::ascii::escape_default`.",null,null],[5,"escape_default","","Returns an iterator that produces an escaped version of a `u8`.",null,{"inputs":[{"name":"u8"}],"output":{"name":"escapedefault"}}],[0,"num","bitflags::__core","Additional functionality for numerics.",null,null],[8,"Zero","bitflags::__core::num","Types that have a &quot;zero&quot; value.",null,null],[10,"zero","","The &quot;zero&quot; (usually, additive identity) for this type.",518,{"inputs":[],"output":{"name":"self"}}],[8,"One","","Types that have a &quot;one&quot; value.",null,null],[10,"one","","The &quot;one&quot; (usually, multiplicative identity) for this type.",519,{"inputs":[],"output":{"name":"self"}}],[4,"FpCategory","","A classification of floating point numbers.",null,null],[13,"Nan","","&quot;Not a Number&quot;, often obtained by dividing by zero",30,null],[13,"Infinite","","Positive or negative infinity",30,null],[13,"Zero","","Positive or negative zero",30,null],[13,"Subnormal","","De-normalized floating point representation (less precise than `Normal`)",30,null],[13,"Normal","","A regular floating point number",30,null],[3,"ParseIntError","","An error which can be returned when parsing an integer.",null,null],[3,"ParseFloatError","","An error which can be returned when parsing a float.",null,null],[0,"wrapping","","",null,null],[8,"OverflowingOps","bitflags::__core::num::wrapping","",null,null],[10,"overflowing_add","","",520,null],[10,"overflowing_sub","","",520,null],[10,"overflowing_mul","","",520,null],[10,"overflowing_div","","",520,null],[10,"overflowing_rem","","",520,null],[10,"overflowing_neg","","",520,null],[10,"overflowing_shl","","",520,null],[10,"overflowing_shr","","",520,null],[3,"Wrapping","bitflags::__core::num","Provides intentionally-wrapped arithmetic on `T`.",null,null],[0,"thread","bitflags::__core","Native threads",null,null],[3,"Builder","bitflags::__core::thread","Thread configuration. Provides detailed control over the properties\nand behavior of new threads.",null,null],[5,"spawn","","Spawns a new thread, returning a `JoinHandle` for it.",null,{"inputs":[{"name":"f"}],"output":{"name":"joinhandle"}}],[5,"current","","Gets a handle to the thread that invokes it.",null,{"inputs":[],"output":{"name":"thread"}}],[5,"yield_now","","Cooperatively gives up a timeslice to the OS scheduler.",null,null],[5,"panicking","","Determines whether the current thread is unwinding because of panic.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"catch_panic","","Invokes a closure, capturing the cause of panic if one occurs.",null,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[5,"sleep_ms","","Puts the current thread to sleep for the specified amount of time.",null,null],[5,"sleep","","Puts the current thread to sleep for the specified amount of time.",null,null],[5,"park","","Blocks unless or until the current thread&#39;s token is made available.",null,null],[5,"park_timeout_ms","","Blocks unless or until the current thread&#39;s token is made available or\nthe specified duration has been reached (may wake spuriously).",null,null],[5,"park_timeout","","Blocks unless or until the current thread&#39;s token is made available or\nthe specified duration has been reached (may wake spuriously).",null,null],[3,"Thread","","A handle to a thread.",null,null],[6,"Result","","",null,null],[3,"JoinHandle","","An owned permission to join on a thread (block on its termination).",null,null],[3,"LocalKey","","A thread local storage key which owns its contents.",null,null],[4,"LocalKeyState","","Indicator of the state of a thread local storage key.",null,null],[13,"Uninitialized","","All keys are in this state whenever a thread starts. Keys will\ntransition to the `Valid` state once the first call to `with` happens\nand the initialization expression succeeds.",219,null],[13,"Valid","","Once a key has been accessed successfully, it will enter the `Valid`\nstate. Keys in the `Valid` state will remain so until the thread exits,\nat which point the destructor will be run and the key will enter the\n`Destroyed` state.",219,null],[13,"Destroyed","","When a thread exits, the destructors for keys will be run (if\nnecessary). While a destructor is running, and possibly after a\ndestructor has run, a key is in the `Destroyed` state.",219,null],[3,"ScopedKey","","Type representing a thread local storage key corresponding to a reference\nto the type parameter `T`.",null,null],[11,"new","std::thread::local::elf","",521,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",521,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[3,"Key","bitflags::__core::thread","",null,null],[11,"new","std::thread::local::os","",522,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",522,{"inputs":[{"name":"key"}],"output":{"name":"option"}}],[3,"Key","bitflags::__core::thread","",null,null],[11,"new","std::thread::scoped_tls::imp","",523,{"inputs":[],"output":{"name":"keyinner"}}],[11,"set","","",523,null],[11,"get","","",523,null],[3,"KeyInner","bitflags::__core::thread","",null,null],[0,"collections","bitflags::__core","Collection types.",null,null],[0,"hash_map","bitflags::__core::collections","A hashmap",null,null],[3,"Keys","bitflags::__core::collections::hash_map","HashMap keys iterator.",null,null],[3,"OccupiedEntry","","A view into a single occupied location in a HashMap.",null,null],[3,"Drain","","HashMap drain iterator.",null,null],[3,"RandomState","","`RandomState` is the default state for `HashMap` types.",null,null],[3,"HashMap","","A hash map implementation which uses linear probing with Robin\nHood bucket stealing.",null,null],[3,"IterMut","","HashMap mutable values iterator.",null,null],[3,"Iter","","HashMap iterator.",null,null],[3,"Values","","HashMap values iterator.",null,null],[3,"VacantEntry","","A view into a single empty location in a HashMap.",null,null],[3,"IntoIter","","HashMap move iterator.",null,null],[4,"Entry","","A view into a single location in a map, which may be vacant or occupied.",null,null],[13,"Occupied","","An occupied Entry.",247,null],[13,"Vacant","","A vacant Entry.",247,null],[0,"hash_set","bitflags::__core::collections","A hashset",null,null],[3,"Union","bitflags::__core::collections::hash_set","Set union iterator.",null,null],[3,"HashSet","","An implementation of a hash set using the underlying representation of a\nHashMap where the value is ().",null,null],[3,"Drain","","HashSet drain iterator",null,null],[3,"Intersection","","Intersection iterator",null,null],[3,"IntoIter","","HashSet move iterator",null,null],[3,"SymmetricDifference","","Symmetric difference iterator.",null,null],[3,"Iter","","HashSet iterator",null,null],[3,"Difference","","Difference iterator",null,null],[0,"hash_state","bitflags::__core::collections","Experimental support for providing custom hash algorithms to a HashMap and\nHashSet.",null,null],[8,"HashState","bitflags::__core::collections::hash_state","Deprecated, renamed to `BuildHasher`",null,null],[16,"Hasher","","Type of the hasher that will be created.",524,null],[10,"hasher","","Creates a new hasher based on the given state of this object.",524,null],[3,"DefaultState","","A structure which is a factory for instances of `Hasher` which implement the\ndefault trait.",null,null],[4,"Bound","bitflags::__core::collections","An endpoint of a range of keys.",null,null],[13,"Included","","An inclusive bound.",214,null],[13,"Excluded","","An exclusive bound.",214,null],[13,"Unbounded","","An infinite endpoint. Indicates that there is no bound in this direction.",214,null],[3,"BinaryHeap","","A priority queue implemented with a binary heap.",null,null],[3,"BTreeMap","","A map based on a B-Tree.",null,null],[3,"BTreeSet","","A set based on a B-Tree.",null,null],[3,"LinkedList","","A doubly-linked list.",null,null],[3,"VecDeque","","`VecDeque` is a growable ring buffer, which can be used as a double-ended\nqueue efficiently.",null,null],[0,"binary_heap","","A priority queue implemented with a binary heap.",null,null],[3,"BinaryHeap","bitflags::__core::collections::binary_heap","A priority queue implemented with a binary heap.",null,null],[3,"Iter","","`BinaryHeap` iterator.",null,null],[3,"IntoIter","","An iterator that moves out of a `BinaryHeap`.",null,null],[3,"Drain","","An iterator that drains a `BinaryHeap`.",null,null],[0,"btree_map","bitflags::__core::collections","",null,null],[3,"Range","bitflags::__core::collections::btree_map","An iterator over a sub-range of BTreeMap&#39;s entries.",null,null],[3,"Iter","","An iterator over a BTreeMap&#39;s entries.",null,null],[3,"Values","","An iterator over a BTreeMap&#39;s values.",null,null],[3,"VacantEntry","","A vacant Entry.",null,null],[3,"BTreeMap","","A map based on a B-Tree.",null,null],[3,"Keys","","An iterator over a BTreeMap&#39;s keys.",null,null],[3,"RangeMut","","A mutable iterator over a sub-range of BTreeMap&#39;s entries.",null,null],[3,"IntoIter","","An owning iterator over a BTreeMap&#39;s entries.",null,null],[3,"IterMut","","A mutable iterator over a BTreeMap&#39;s entries.",null,null],[4,"Entry","","A view into a single entry in a map, which may either be vacant or occupied.",null,null],[13,"Vacant","","A vacant Entry",181,null],[13,"Occupied","","An occupied Entry",181,null],[3,"OccupiedEntry","","An occupied Entry.",null,null],[0,"btree_set","bitflags::__core::collections","",null,null],[3,"Difference","bitflags::__core::collections::btree_set","A lazy iterator producing elements in the set difference (in-order).",null,null],[3,"IntoIter","","An owning iterator over a BTreeSet&#39;s items.",null,null],[3,"Union","","A lazy iterator producing elements in the set union (in-order).",null,null],[3,"Intersection","","A lazy iterator producing elements in the set intersection (in-order).",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the set symmetric difference (in-order).",null,null],[3,"BTreeSet","","A set based on a B-Tree.",null,null],[3,"Iter","","An iterator over a BTreeSet&#39;s items.",null,null],[3,"Range","","An iterator over a sub-range of BTreeSet&#39;s items.",null,null],[0,"linked_list","bitflags::__core::collections","A doubly-linked list with owned nodes.",null,null],[3,"LinkedList","bitflags::__core::collections::linked_list","A doubly-linked list.",null,null],[3,"Iter","","An iterator over references to the items of a `LinkedList`.",null,null],[3,"IterMut","","An iterator over mutable references to the items of a `LinkedList`.",null,null],[3,"IntoIter","","An iterator over the items of a `LinkedList`.",null,null],[3,"FrontPlace","","A place for insertion at the front of a `LinkedList`.",null,null],[3,"BackPlace","","A place for insertion at the back of a `LinkedList`.",null,null],[0,"vec_deque","bitflags::__core::collections","VecDeque is a double-ended queue, which is implemented with the help of a\ngrowing ring buffer.",null,null],[3,"VecDeque","bitflags::__core::collections::vec_deque","`VecDeque` is a growable ring buffer, which can be used as a double-ended\nqueue efficiently.",null,null],[3,"Iter","","`VecDeque` iterator.",null,null],[3,"IterMut","","`VecDeque` mutable iterator.",null,null],[3,"IntoIter","","A by-value VecDeque iterator",null,null],[3,"Drain","","A draining VecDeque iterator",null,null],[3,"HashMap","bitflags::__core::collections","A hash map implementation which uses linear probing with Robin\nHood bucket stealing.",null,null],[3,"HashSet","","An implementation of a hash set using the underlying representation of a\nHashMap where the value is ().",null,null],[0,"dynamic_lib","bitflags::__core","Dynamic library facilities.",null,null],[3,"DynamicLibrary","bitflags::__core::dynamic_lib","",null,null],[0,"env","bitflags::__core","Inspection and manipulation of the process&#39;s environment.",null,null],[5,"current_dir","bitflags::__core::env","Returns the current working directory as a `PathBuf`.",null,{"inputs":[],"output":{"name":"result"}}],[5,"set_current_dir","","Changes the current working directory to the specified path, returning\nwhether the change was completed successfully or not.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[3,"Vars","","An iterator over a snapshot of the environment variables of this process.",null,null],[3,"VarsOs","","An iterator over a snapshot of the environment variables of this process.",null,null],[5,"vars","","Returns an iterator of (variable, value) pairs of strings, for all the\nenvironment variables of the current process.",null,{"inputs":[],"output":{"name":"vars"}}],[5,"vars_os","","Returns an iterator of (variable, value) pairs of OS strings, for all the\nenvironment variables of the current process.",null,{"inputs":[],"output":{"name":"varsos"}}],[5,"var","","Fetches the environment variable `key` from the current process.",null,{"inputs":[{"name":"k"}],"output":{"name":"result"}}],[5,"var_os","","Fetches the environment variable `key` from the current process, returning\nNone if the variable isn&#39;t set.",null,{"inputs":[{"name":"k"}],"output":{"name":"option"}}],[4,"VarError","","Possible errors from the `env::var` method.",null,null],[13,"NotPresent","","The specified environment variable was not present in the current\nprocess&#39;s environment.",263,null],[13,"NotUnicode","","The specified environment variable was found, but it did not contain\nvalid unicode data. The found data is returned as a payload of this\nvariant.",263,null],[5,"set_var","","Sets the environment variable `k` to the value `v` for the currently running\nprocess.",null,null],[5,"remove_var","","Removes an environment variable from the environment of the currently running process.",null,null],[3,"SplitPaths","","An iterator over `PathBuf` instances for parsing an environment variable\naccording to platform-specific conventions.",null,null],[5,"split_paths","","Parses input according to platform conventions for the `PATH`\nenvironment variable.",null,{"inputs":[{"name":"t"}],"output":{"name":"splitpaths"}}],[3,"JoinPathsError","","Error type returned from `std::env::join_paths` when paths fail to be\njoined.",null,null],[5,"join_paths","","Joins a collection of `Path`s appropriately for the `PATH`\nenvironment variable.",null,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[5,"home_dir","","Returns the path to the current user&#39;s home directory if known.",null,{"inputs":[],"output":{"name":"option"}}],[5,"temp_dir","","Returns the path to a temporary directory.",null,{"inputs":[],"output":{"name":"pathbuf"}}],[5,"current_exe","","Returns the full filesystem path to the current running executable.",null,{"inputs":[],"output":{"name":"result"}}],[3,"Args","","An iterator over the arguments of a process, yielding a `String` value\nfor each argument.",null,null],[3,"ArgsOs","","An iterator over the arguments of a process, yielding an `OsString` value\nfor each argument.",null,null],[5,"args","","Returns the arguments which this program was started with (normally passed\nvia the command line).",null,{"inputs":[],"output":{"name":"args"}}],[5,"args_os","","Returns the arguments which this program was started with (normally passed\nvia the command line).",null,{"inputs":[],"output":{"name":"argsos"}}],[0,"consts","","Constants associated with the current target",null,null],[17,"ARCH","bitflags::__core::env::consts","A string describing the architecture of the CPU that is currently\nin use.",null,null],[17,"FAMILY","","The family of the operating system. In this case, `unix`.",null,null],[17,"OS","","A string describing the specific operating system in use: in this\ncase, `linux`.",null,null],[17,"DLL_PREFIX","","Specifies the filename prefix used for shared libraries on this\nplatform: in this case, `lib`.",null,null],[17,"DLL_SUFFIX","","Specifies the filename suffix used for shared libraries on this\nplatform: in this case, `.so`.",null,null],[17,"DLL_EXTENSION","","Specifies the file extension used for shared libraries on this\nplatform that goes after the dot: in this case, `so`.",null,null],[17,"EXE_SUFFIX","","Specifies the filename suffix used for executable binaries on this\nplatform: in this case, the empty string.",null,null],[17,"EXE_EXTENSION","","Specifies the file extension, if any, used for executable binaries\non this platform: in this case, the empty string.",null,null],[0,"ffi","bitflags::__core","Utilities related to FFI bindings.",null,null],[3,"CString","bitflags::__core::ffi","A type representing an owned C-compatible string",null,null],[3,"CStr","","Representation of a borrowed C string.",null,null],[3,"NulError","","An error returned from `CString::new` to indicate that a nul byte was found\nin the vector provided.",null,null],[3,"IntoStringError","","An error returned from `CString::into_string` to indicate that a UTF-8 error\nwas encountered during the conversion.",null,null],[3,"OsString","","A type that can represent owned, mutable platform-native strings, but is\ncheaply interconvertable with Rust strings.",null,null],[3,"OsStr","","Slices into OS strings (see `OsString`).",null,null],[0,"fs","bitflags::__core","Filesystem manipulation operations",null,null],[3,"File","bitflags::__core::fs","A reference to an open file on the filesystem.",null,null],[3,"Metadata","","Metadata information about a file.",null,null],[3,"ReadDir","","Iterator over the entries in a directory.",null,null],[3,"DirEntry","","Entries returned by the `ReadDir` iterator.",null,null],[3,"WalkDir","","An iterator that recursively walks over the contents of a directory.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a file is opened.",null,null],[3,"Permissions","","Representation of the various permissions on a file.",null,null],[3,"FileType","","An structure representing a type of file with accessors for each file type.",null,null],[3,"DirBuilder","","A builder used to create directories in various manners.",null,null],[5,"remove_file","","Removes a file from the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"metadata","","Given a path, query the file system to get information about a file,\ndirectory, etc.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"symlink_metadata","","Query the metadata about a file without following symlinks.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"rename","","Rename a file or directory to a new name.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"copy","","Copies the contents of one file to another. This function will also\ncopy the permission bits of the original file to the destination file.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"hard_link","","Creates a new hard link on the filesystem.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"soft_link","","Creates a new symbolic link on the filesystem.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"read_link","","Reads a symbolic link, returning the file that the link points to.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"canonicalize","","Returns the canonical form of a path with all intermediate components\nnormalized and symbolic links resolved.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"create_dir","","Creates a new, empty directory at the provided path",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"create_dir_all","","Recursively create a directory and all of its parent components if they\nare missing.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"remove_dir","","Removes an existing, empty directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"remove_dir_all","","Removes a directory at this path, after removing all its contents. Use\ncarefully!",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"read_dir","","Returns an iterator over the entries within a directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"walk_dir","","Returns an iterator that will recursively walk the directory structure\nrooted at `path`.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,{"inputs":[{"name":"p"},{"name":"permissions"}],"output":{"name":"result"}}],[0,"io","bitflags::__core","Traits, helpers, and type definitions for core I/O functionality.",null,null],[0,"prelude","bitflags::__core::io","The I/O Prelude",null,null],[8,"Read","bitflags::__core::io::prelude","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",525,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",525,{"inputs":[{"name":"read"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",525,{"inputs":[{"name":"read"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",525,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",525,{"inputs":[{"name":"read"}],"output":{"name":"self"}}],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",525,{"inputs":[{"name":"read"}],"output":{"name":"bytes"}}],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",525,{"inputs":[{"name":"read"}],"output":{"name":"chars"}}],[11,"chain","","Creates an adaptor which will chain this stream with another.",525,{"inputs":[{"name":"read"},{"name":"r"}],"output":{"name":"chain"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",525,{"inputs":[{"name":"read"},{"name":"u64"}],"output":{"name":"take"}}],[11,"tee","","Creates a reader adaptor which will write all read data into the given\noutput stream.",525,{"inputs":[{"name":"read"},{"name":"w"}],"output":{"name":"tee"}}],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",526,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",526,{"inputs":[{"name":"write"}],"output":{"name":"result"}}],[11,"write_all","","Attempts to write an entire buffer into this write.",526,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",526,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",526,{"inputs":[{"name":"write"}],"output":{"name":"self"}}],[11,"broadcast","","Creates a new writer which will write all data to both this writer and\nanother writer.",526,{"inputs":[{"name":"write"},{"name":"w"}],"output":{"name":"broadcast"}}],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it\nto perform extra ways of reading.",null,null],[10,"fill_buf","","Fills the internal buffer of this object, returning the buffer contents.",527,{"inputs":[{"name":"bufread"}],"output":{"name":"result"}}],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.",527,null],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` is reached.",527,{"inputs":[{"name":"bufread"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached, and append\nthem to the provided buffer.",527,{"inputs":[{"name":"bufread"},{"name":"string"}],"output":{"name":"result"}}],[11,"split","","Returns an iterator over the contents of this reader split on the byte\n`byte`.",527,{"inputs":[{"name":"bufread"},{"name":"u8"}],"output":{"name":"split"}}],[11,"lines","","Returns an iterator over the lines of this reader.",527,{"inputs":[{"name":"bufread"}],"output":{"name":"lines"}}],[8,"Seek","","The `Seek` trait provides a cursor which can be moved within a stream of\nbytes.",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",528,{"inputs":[{"name":"seek"},{"name":"seekfrom"}],"output":{"name":"result"}}],[8,"Read","bitflags::__core::io","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",525,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",525,{"inputs":[{"name":"read"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",525,{"inputs":[{"name":"read"},{"name":"string"}],"output":{"name":"result"}}],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",525,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",525,{"inputs":[{"name":"read"}],"output":{"name":"self"}}],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",525,{"inputs":[{"name":"read"}],"output":{"name":"bytes"}}],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",525,{"inputs":[{"name":"read"}],"output":{"name":"chars"}}],[11,"chain","","Creates an adaptor which will chain this stream with another.",525,{"inputs":[{"name":"read"},{"name":"r"}],"output":{"name":"chain"}}],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",525,{"inputs":[{"name":"read"},{"name":"u64"}],"output":{"name":"take"}}],[11,"tee","","Creates a reader adaptor which will write all read data into the given\noutput stream.",525,{"inputs":[{"name":"read"},{"name":"w"}],"output":{"name":"tee"}}],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",526,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",526,{"inputs":[{"name":"write"}],"output":{"name":"result"}}],[11,"write_all","","Attempts to write an entire buffer into this write.",526,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",526,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",526,{"inputs":[{"name":"write"}],"output":{"name":"self"}}],[11,"broadcast","","Creates a new writer which will write all data to both this writer and\nanother writer.",526,{"inputs":[{"name":"write"},{"name":"w"}],"output":{"name":"broadcast"}}],[8,"Seek","","The `Seek` trait provides a cursor which can be moved within a stream of\nbytes.",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",528,{"inputs":[{"name":"seek"},{"name":"seekfrom"}],"output":{"name":"result"}}],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O object.",null,null],[13,"Start","","Set the offset to the provided number of bytes.",306,null],[13,"End","","Set the offset to the size of this object plus the specified number of\nbytes.",306,null],[13,"Current","","Set the offset to the current position plus the specified number of\nbytes.",306,null],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it\nto perform extra ways of reading.",null,null],[10,"fill_buf","","Fills the internal buffer of this object, returning the buffer contents.",527,{"inputs":[{"name":"bufread"}],"output":{"name":"result"}}],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.",527,null],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` is reached.",527,{"inputs":[{"name":"bufread"},{"name":"u8"},{"name":"vec"}],"output":{"name":"result"}}],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached, and append\nthem to the provided buffer.",527,{"inputs":[{"name":"bufread"},{"name":"string"}],"output":{"name":"result"}}],[11,"split","","Returns an iterator over the contents of this reader split on the byte\n`byte`.",527,{"inputs":[{"name":"bufread"},{"name":"u8"}],"output":{"name":"split"}}],[11,"lines","","Returns an iterator over the lines of this reader.",527,{"inputs":[{"name":"bufread"}],"output":{"name":"lines"}}],[3,"Broadcast","","A `Write` adaptor which will write data to multiple locations.",null,null],[3,"Chain","","Adaptor to chain together two readers.",null,null],[3,"Take","","Reader adaptor which limits the bytes read from an underlying reader.",null,null],[3,"Tee","","An adaptor which will emit all read data to a specified writer as well.",null,null],[3,"Bytes","","An iterator over `u8` values of a reader.",null,null],[3,"Chars","","An iterator over the `char`s of a reader.",null,null],[4,"CharsError","","An enumeration of possible errors that can be generated from the `Chars`\nadapter.",null,null],[13,"NotUtf8","","Variant representing that the underlying stream was read successfully\nbut it did not contain valid utf8 data.",312,null],[13,"Other","","Variant representing that an I/O error occurred.",312,null],[3,"Split","","An iterator over the contents of an instance of `BufRead` split on a\nparticular byte.",null,null],[3,"Lines","","An iterator over the lines of an instance of `BufRead`.",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"LineWriter","","Wraps a writer and buffers output to it, flushing whenever a newline\n(`0x0a`, `&#39;\\n&#39;`) is detected.",null,null],[3,"IntoInnerError","","An error returned by `into_inner` which combines an error that\nhappened while writing out the buffer, and the buffered writer object\nwhich may be used to recover from the condition.",null,null],[3,"Cursor","","A `Cursor` wraps another type and provides it with a\n[`Seek`](trait.Seek.html) implementation.",null,null],[6,"Result","","",null,null],[3,"Error","","The error type for I/O operations of the `Read`, `Write`, `Seek`, and\nassociated traits.",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",290,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",290,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",290,null],[13,"ConnectionReset","","The connection was reset by the remote server.",290,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",290,null],[13,"NotConnected","","The network operation failed because it was not connected yet.",290,null],[13,"AddrInUse","","A socket address could not be bound because the address is already in\nuse elsewhere.",290,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not\nlocal.",290,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",290,null],[13,"AlreadyExists","","An entity already exists, often a file.",290,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was\nrequested to not occur.",290,null],[13,"InvalidInput","","A parameter was incorrect.",290,null],[13,"InvalidData","","Data not valid for the operation were encountered.",290,null],[13,"TimedOut","","The I/O operation&#39;s timeout expired, causing it to be canceled.",290,null],[13,"WriteZero","","An error returned when an operation could not be completed because a\ncall to `write` returned `Ok(0)`.",290,null],[13,"Interrupted","","This operation was interrupted.",290,null],[13,"Other","","Any I/O error not part of this list.",290,null],[13,"UnexpectedEOF","","",290,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an\n&quot;end of file&quot; was reached prematurely.",290,null],[5,"copy","","Copies the entire contents of a reader into a writer.",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"result"}}],[5,"sink","","Creates an instance of a writer which will successfully consume all data.",null,{"inputs":[],"output":{"name":"sink"}}],[3,"Sink","","A writer which will move data into the void.",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,{"inputs":[],"output":{"name":"empty"}}],[3,"Empty","","A reader which is always at EOF.",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats one byte.",null,{"inputs":[{"name":"u8"}],"output":{"name":"repeat"}}],[3,"Repeat","","A reader which yields one byte over and over and over and over and over and...",null,null],[5,"stdin","","Constructs a new handle to the standard input of the current process.",null,{"inputs":[],"output":{"name":"stdin"}}],[5,"stdout","","Constructs a new handle to the standard output of the current process.",null,{"inputs":[],"output":{"name":"stdout"}}],[5,"stderr","","Constructs a new handle to the standard error of the current process.",null,{"inputs":[],"output":{"name":"stderr"}}],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[3,"Stdout","","A handle to the global standard output stream of the current process.",null,null],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[3,"StdoutLock","","A locked reference to the `Stdout` handle.",null,null],[3,"StderrLock","","A locked reference to the `Stderr` handle.",null,null],[3,"StdinLock","","A locked reference to the `Stdin` handle.",null,null],[0,"net","bitflags::__core","Networking primitives for TCP/UDP communication.",null,null],[4,"Shutdown","bitflags::__core::net","Possible values which can be passed to the `shutdown` method of `TcpStream`.",null,null],[13,"Read","","Indicates that the reading portion of this stream/socket should be shut\ndown. All currently blocked and future reads will return `Ok(0)`.",328,null],[13,"Write","","Indicates that the writing portion of this stream/socket should be shut\ndown. All currently blocked and future writes will return an error.",328,null],[13,"Both","","Shut down both the reading and writing portions of this stream.",328,null],[3,"LookupHost","","An iterator over `SocketAddr` values returned from a host lookup operation.",null,null],[5,"lookup_host","","Resolve the host specified by `host` as a number of `SocketAddr` instances.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"lookup_addr","","Resolve the given address to a hostname.",null,{"inputs":[{"name":"ipaddr"}],"output":{"name":"result"}}],[4,"IpAddr","","An IP address, either an IPv4 or IPv6 address.",null,null],[13,"V4","","Representation of an IPv4 address.",316,null],[13,"V6","","Representation of an IPv6 address.",316,null],[3,"Ipv4Addr","","Representation of an IPv4 address.",null,null],[3,"Ipv6Addr","","Representation of an IPv6 address.",null,null],[4,"Ipv6MulticastScope","","",null,null],[13,"InterfaceLocal","","",317,null],[13,"LinkLocal","","",317,null],[13,"RealmLocal","","",317,null],[13,"AdminLocal","","",317,null],[13,"SiteLocal","","",317,null],[13,"OrganizationLocal","","",317,null],[13,"Global","","",317,null],[4,"SocketAddr","","Representation of a socket address for networking applications.",null,null],[13,"V4","","An IPv4 socket address which is a (ip, port) combination.",320,null],[13,"V6","","An IPv6 socket address",320,null],[3,"SocketAddrV4","","An IPv4 socket address which is a (ip, port) combination.",null,null],[3,"SocketAddrV6","","An IPv6 socket address.",null,null],[8,"ToSocketAddrs","","A trait for objects which can be converted or resolved to one or more\n`SocketAddr` values.",null,null],[16,"Iter","","Returned iterator over socket addresses which this type may correspond\nto.",529,null],[10,"to_socket_addrs","","Converts this object to an iterator of resolved `SocketAddr`s.",529,{"inputs":[{"name":"tosocketaddrs"}],"output":{"name":"result"}}],[3,"TcpStream","","A structure which represents a TCP stream between a local socket and a\nremote socket.",null,null],[3,"TcpListener","","A structure representing a socket server.",null,null],[3,"Incoming","","An infinite iterator over the connections from a `TcpListener`.",null,null],[3,"UdpSocket","","A User Datagram Protocol socket.",null,null],[3,"AddrParseError","","An error returned when parsing an IP address or a socket address.",null,null],[0,"os","bitflags::__core","OS-specific functionality",null,null],[0,"linux","bitflags::__core::os","Linux-specific definitions",null,null],[0,"raw","bitflags::__core::os::linux","Linux-specific raw type definitions",null,null],[6,"dev_t","bitflags::__core::os::linux::raw","",null,null],[6,"mode_t","","",null,null],[6,"pthread_t","","",null,null],[6,"off_t","","",null,null],[6,"ino_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[3,"stat","","",null,null],[12,"st_dev","","",330,null],[12,"st_ino","","",330,null],[12,"st_nlink","","",330,null],[12,"st_mode","","",330,null],[12,"st_uid","","",330,null],[12,"st_gid","","",330,null],[12,"__pad0","","",330,null],[12,"st_rdev","","",330,null],[12,"st_size","","",330,null],[12,"st_blksize","","",330,null],[12,"st_blocks","","",330,null],[12,"st_atime","","",330,null],[12,"st_atime_nsec","","",330,null],[12,"st_mtime","","",330,null],[12,"st_mtime_nsec","","",330,null],[12,"st_ctime","","",330,null],[12,"st_ctime_nsec","","",330,null],[12,"__unused","","",330,null],[6,"time_t","","",null,null],[0,"fs","bitflags::__core::os::linux","",null,null],[8,"MetadataExt","bitflags::__core::os::linux::fs","OS-specific extension methods for `fs::Metadata`",null,null],[10,"as_raw_stat","","Gain a reference to the underlying `stat` structure which contains\nthe raw information returned by the OS.",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"stat"}}],[10,"st_dev","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"st_ino","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"st_mode","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"st_nlink","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"st_uid","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"st_gid","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"st_rdev","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"st_size","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"st_atime","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"st_atime_nsec","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"st_mtime","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"st_mtime_nsec","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"st_ctime","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"st_ctime_nsec","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"st_blksize","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"st_blocks","","",530,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[0,"raw","bitflags::__core::os","Raw OS-specific types for the current platform/architecture",null,null],[6,"c_char","bitflags::__core::os::raw","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[4,"c_void","","Type used to construct void pointers for use with C.",null,null],[0,"ext","bitflags::__core::os","Experimental extensions to `std` for Unix platforms.",null,null],[0,"io","bitflags::__core::os::ext","Unix-specific extensions to general I/O primitives",null,null],[6,"RawFd","bitflags::__core::os::ext::io","",null,null],[8,"AsRawFd","","A trait to extract the raw unix file descriptor from an underlying\nobject.",null,null],[10,"as_raw_fd","","Extracts the raw file descriptor.",531,{"inputs":[{"name":"asrawfd"}],"output":{"name":"i32"}}],[8,"FromRawFd","","A trait to express the ability to construct an object from a raw file\ndescriptor.",null,null],[10,"from_raw_fd","","Constructs a new instances of `Self` from the given raw file\ndescriptor.",532,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[8,"IntoRawFd","","A trait to express the ability to consume an object and acquire ownership of\nits raw file descriptor.",null,null],[10,"into_raw_fd","","Consumes this object, returning the raw underlying file descriptor.",533,{"inputs":[{"name":"intorawfd"}],"output":{"name":"i32"}}],[0,"ffi","bitflags::__core::os::ext","Unix-specific extension to the primitives in the `std::ffi` module",null,null],[8,"OsStringExt","bitflags::__core::os::ext::ffi","Unix-specific extensions to `OsString`.",null,null],[10,"from_vec","","Creates an `OsString` from a byte vector.",534,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[10,"into_vec","","Yields the underlying byte vector of this `OsString`.",534,{"inputs":[{"name":"osstringext"}],"output":{"name":"vec"}}],[8,"OsStrExt","","Unix-specific extensions to `OsStr`.",null,null],[10,"from_bytes","","",535,null],[10,"as_bytes","","Gets the underlying byte view of the `OsStr` slice.",535,null],[0,"fs","bitflags::__core::os::ext","Unix-specific extensions to primitives in the `std::fs` module.",null,null],[17,"USER_READ","bitflags::__core::os::ext::fs","",null,null],[17,"USER_WRITE","","",null,null],[17,"USER_EXECUTE","","",null,null],[17,"USER_RWX","","",null,null],[17,"GROUP_READ","","",null,null],[17,"GROUP_WRITE","","",null,null],[17,"GROUP_EXECUTE","","",null,null],[17,"GROUP_RWX","","",null,null],[17,"OTHER_READ","","",null,null],[17,"OTHER_WRITE","","",null,null],[17,"OTHER_EXECUTE","","",null,null],[17,"OTHER_RWX","","",null,null],[17,"ALL_READ","","",null,null],[17,"ALL_WRITE","","",null,null],[17,"ALL_EXECUTE","","",null,null],[17,"ALL_RWX","","",null,null],[17,"SETUID","","",null,null],[17,"SETGID","","",null,null],[17,"STICKY_BIT","","",null,null],[8,"PermissionsExt","","Unix-specific extensions to `Permissions`",null,null],[10,"mode","","Returns the underlying raw `mode_t` bits that are the standard Unix\npermissions for this file.",536,{"inputs":[{"name":"permissionsext"}],"output":{"name":"u32"}}],[10,"set_mode","","Sets the underlying raw bits for this set of permissions.",536,null],[10,"from_mode","","Creates a new instance of `Permissions` from the given set of Unix\npermission bits.",536,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[8,"OpenOptionsExt","","Unix-specific extensions to `OpenOptions`",null,null],[10,"mode","","Sets the mode bits that a new file will be created with.",537,{"inputs":[{"name":"openoptionsext"},{"name":"u32"}],"output":{"name":"self"}}],[10,"custom_flags","","Pass custom flags to the `flags` agument of `open`.",537,{"inputs":[{"name":"openoptionsext"},{"name":"i32"}],"output":{"name":"self"}}],[8,"MetadataExt","","",null,null],[10,"dev","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"ino","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"mode","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"nlink","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"uid","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"gid","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"rdev","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"size","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"atime","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"atime_nsec","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"mtime","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"mtime_nsec","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"ctime","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"ctime_nsec","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"blksize","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"blocks","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[8,"FileTypeExt","","Add special unix types (block/char device, fifo and socket)",null,null],[10,"is_block_device","","Returns whether this file type is a block device.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[10,"is_char_device","","Returns whether this file type is a char device.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[10,"is_fifo","","Returns whether this file type is a fifo.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[10,"is_socket","","Returns whether this file type is a socket.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[8,"DirEntryExt","","Unix-specific extension methods for `fs::DirEntry`",null,null],[10,"ino","","Returns the underlying `d_ino` field in the contained `dirent`\nstructure.",540,{"inputs":[{"name":"direntryext"}],"output":{"name":"u64"}}],[5,"symlink","","Creates a new symbolic link on the filesystem.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[8,"DirBuilderExt","","An extension trait for `fs::DirBuilder` for unix-specific options.",null,null],[10,"mode","","Sets the mode to create new directories with. This option defaults to\n0o777.",541,{"inputs":[{"name":"dirbuilderext"},{"name":"u32"}],"output":{"name":"self"}}],[0,"process","bitflags::__core::os::ext","Unix-specific extensions to primitives in the `std::process` module.",null,null],[8,"CommandExt","bitflags::__core::os::ext::process","Unix-specific extensions to the `std::process::Command` builder",null,null],[10,"uid","","Sets the child process&#39;s user id. This translates to a\n`setuid` call in the child process. Failure in the `setuid`\ncall will cause the spawn to fail.",542,{"inputs":[{"name":"commandext"},{"name":"u32"}],"output":{"name":"command"}}],[10,"gid","","Similar to `uid`, but sets the group id of the child process. This has\nthe same semantics as the `uid` field.",542,{"inputs":[{"name":"commandext"},{"name":"u32"}],"output":{"name":"command"}}],[10,"session_leader","","Create a new session (cf. `setsid(2)`) for the child process. This means\nthat the child is the leader of a new process group. The parent process\nremains the child reaper of the new process.",542,{"inputs":[{"name":"commandext"},{"name":"bool"}],"output":{"name":"command"}}],[10,"before_exec","","Schedules a closure to be run just before the `exec` function is\ninvoked.",542,{"inputs":[{"name":"commandext"},{"name":"f"}],"output":{"name":"command"}}],[10,"exec","","Performs all the required setup by this `Command`, followed by calling\nthe `execvp` syscall.",542,{"inputs":[{"name":"commandext"}],"output":{"name":"error"}}],[8,"ExitStatusExt","","Unix-specific extensions to `std::process::ExitStatus`",null,null],[10,"signal","","If the process was terminated by a signal, returns that signal.",543,{"inputs":[{"name":"exitstatusext"}],"output":{"name":"option"}}],[0,"raw","bitflags::__core::os::ext","Unix-specific primitives available on all unix platforms",null,null],[6,"uid_t","bitflags::__core::os::ext::raw","",null,null],[6,"gid_t","","",null,null],[6,"pid_t","","",null,null],[6,"pthread_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"off_t","","",null,null],[6,"blksize_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"time_t","","",null,null],[0,"thread","bitflags::__core::os::ext","Unix-specific extensions to primitives in the `std::process` module.",null,null],[6,"RawPthread","bitflags::__core::os::ext::thread","",null,null],[8,"JoinHandleExt","","Unix-specific extensions to `std::thread::JoinHandle`",null,null],[10,"as_pthread_t","","Extracts the raw pthread_t without taking ownership",544,{"inputs":[{"name":"joinhandleext"}],"output":{"name":"u64"}}],[10,"into_pthread_t","","Consumes the thread, returning the raw pthread_t",544,{"inputs":[{"name":"joinhandleext"}],"output":{"name":"u64"}}],[0,"prelude","bitflags::__core::os::ext","A prelude for conveniently writing platform-specific code.",null,null],[6,"RawFd","bitflags::__core::os::ext::prelude","",null,null],[8,"AsRawFd","","A trait to extract the raw unix file descriptor from an underlying\nobject.",null,null],[10,"as_raw_fd","","Extracts the raw file descriptor.",531,{"inputs":[{"name":"asrawfd"}],"output":{"name":"i32"}}],[8,"FromRawFd","","A trait to express the ability to construct an object from a raw file\ndescriptor.",null,null],[10,"from_raw_fd","","Constructs a new instances of `Self` from the given raw file\ndescriptor.",532,{"inputs":[{"name":"i32"}],"output":{"name":"self"}}],[8,"IntoRawFd","","A trait to express the ability to consume an object and acquire ownership of\nits raw file descriptor.",null,null],[10,"into_raw_fd","","Consumes this object, returning the raw underlying file descriptor.",533,{"inputs":[{"name":"intorawfd"}],"output":{"name":"i32"}}],[8,"OsStrExt","","Unix-specific extensions to `OsStr`.",null,null],[10,"from_bytes","","",535,null],[10,"as_bytes","","Gets the underlying byte view of the `OsStr` slice.",535,null],[8,"OsStringExt","","Unix-specific extensions to `OsString`.",null,null],[10,"from_vec","","Creates an `OsString` from a byte vector.",534,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[10,"into_vec","","Yields the underlying byte vector of this `OsString`.",534,{"inputs":[{"name":"osstringext"}],"output":{"name":"vec"}}],[8,"PermissionsExt","","Unix-specific extensions to `Permissions`",null,null],[10,"mode","","Returns the underlying raw `mode_t` bits that are the standard Unix\npermissions for this file.",536,{"inputs":[{"name":"permissionsext"}],"output":{"name":"u32"}}],[10,"set_mode","","Sets the underlying raw bits for this set of permissions.",536,null],[10,"from_mode","","Creates a new instance of `Permissions` from the given set of Unix\npermission bits.",536,{"inputs":[{"name":"u32"}],"output":{"name":"self"}}],[8,"OpenOptionsExt","","Unix-specific extensions to `OpenOptions`",null,null],[10,"mode","","Sets the mode bits that a new file will be created with.",537,{"inputs":[{"name":"openoptionsext"},{"name":"u32"}],"output":{"name":"self"}}],[10,"custom_flags","","Pass custom flags to the `flags` agument of `open`.",537,{"inputs":[{"name":"openoptionsext"},{"name":"i32"}],"output":{"name":"self"}}],[8,"MetadataExt","","",null,null],[10,"dev","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"ino","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"mode","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"nlink","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"uid","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"gid","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u32"}}],[10,"rdev","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"size","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"atime","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"atime_nsec","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"mtime","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"mtime_nsec","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"ctime","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"ctime_nsec","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"i64"}}],[10,"blksize","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[10,"blocks","","",538,{"inputs":[{"name":"metadataext"}],"output":{"name":"u64"}}],[8,"FileTypeExt","","Add special unix types (block/char device, fifo and socket)",null,null],[10,"is_block_device","","Returns whether this file type is a block device.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[10,"is_char_device","","Returns whether this file type is a char device.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[10,"is_fifo","","Returns whether this file type is a fifo.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[10,"is_socket","","Returns whether this file type is a socket.",539,{"inputs":[{"name":"filetypeext"}],"output":{"name":"bool"}}],[8,"DirEntryExt","","Unix-specific extension methods for `fs::DirEntry`",null,null],[10,"ino","","Returns the underlying `d_ino` field in the contained `dirent`\nstructure.",540,{"inputs":[{"name":"direntryext"}],"output":{"name":"u64"}}],[8,"CommandExt","","Unix-specific extensions to the `std::process::Command` builder",null,null],[10,"uid","","Sets the child process&#39;s user id. This translates to a\n`setuid` call in the child process. Failure in the `setuid`\ncall will cause the spawn to fail.",542,{"inputs":[{"name":"commandext"},{"name":"u32"}],"output":{"name":"command"}}],[10,"gid","","Similar to `uid`, but sets the group id of the child process. This has\nthe same semantics as the `uid` field.",542,{"inputs":[{"name":"commandext"},{"name":"u32"}],"output":{"name":"command"}}],[10,"session_leader","","Create a new session (cf. `setsid(2)`) for the child process. This means\nthat the child is the leader of a new process group. The parent process\nremains the child reaper of the new process.",542,{"inputs":[{"name":"commandext"},{"name":"bool"}],"output":{"name":"command"}}],[10,"before_exec","","Schedules a closure to be run just before the `exec` function is\ninvoked.",542,{"inputs":[{"name":"commandext"},{"name":"f"}],"output":{"name":"command"}}],[10,"exec","","Performs all the required setup by this `Command`, followed by calling\nthe `execvp` syscall.",542,{"inputs":[{"name":"commandext"}],"output":{"name":"error"}}],[8,"ExitStatusExt","","Unix-specific extensions to `std::process::ExitStatus`",null,null],[10,"signal","","If the process was terminated by a signal, returns that signal.",543,{"inputs":[{"name":"exitstatusext"}],"output":{"name":"option"}}],[0,"panic","bitflags::__core","Panic support in the standard library",null,null],[8,"RecoverSafe","bitflags::__core::panic","A marker trait which represents &quot;panic safe&quot; types in Rust.",null,null],[8,"RefRecoverSafe","","A marker trait representing types where a shared reference is considered\nrecover safe.",null,null],[3,"AssertRecoverSafe","","A simple wrapper around a type to assert that it is panic safe.",null,null],[5,"recover","","Invokes a closure, capturing the cause of panic if one occurs.",null,{"inputs":[{"name":"f"}],"output":{"name":"result"}}],[5,"propagate","","Triggers a panic without invoking the panic handler.",null,null],[5,"take_handler","","Unregisters the current panic handler, returning it.",null,{"inputs":[],"output":{"name":"box"}}],[5,"set_handler","","Registers a custom panic handler, replacing any that was previously\nregistered.",null,null],[3,"PanicInfo","","A struct providing information about a panic.",null,null],[3,"Location","","A struct containing information about the location of a panic.",null,null],[0,"path","bitflags::__core","Cross-platform path manipulation.",null,null],[4,"Prefix","bitflags::__core::path","Path prefixes (Windows only).",null,null],[13,"Verbatim","","Prefix `\\\\?\\`, together with the given component immediately following it.",338,null],[13,"VerbatimUNC","","Prefix `\\\\?\\UNC\\`, with the &quot;server&quot; and &quot;share&quot; components following it.",338,null],[13,"VerbatimDisk","","Prefix like `\\\\?\\C:\\`, for the given drive letter",338,null],[13,"DeviceNS","","Prefix `\\\\.\\`, together with the given component immediately following it.",338,null],[13,"UNC","","Prefix `\\\\server\\share`, with the given &quot;server&quot; and &quot;share&quot; components.",338,null],[13,"Disk","","Prefix `C:` for the given disk drive.",338,null],[5,"is_separator","","Determines whether the character is one of the permitted path\nseparators for the current platform.",null,{"inputs":[{"name":"char"}],"output":{"name":"bool"}}],[17,"MAIN_SEPARATOR","","The primary separator for the current platform",null,null],[3,"PrefixComponent","","A Windows path prefix, e.g. `C:` or `\\server\\share`.",null,null],[4,"Component","","A single component of a path.",null,null],[13,"Prefix","","A Windows path prefix, e.g. `C:` or `\\server\\share`.",341,null],[13,"RootDir","","The root directory component, appears after any prefix and before anything else",341,null],[13,"CurDir","","A reference to the current directory, i.e. `.`",341,null],[13,"ParentDir","","A reference to the parent directory, i.e. `..`",341,null],[13,"Normal","","A normal component, i.e. `a` and `b` in `a/b`",341,null],[3,"Components","","The core iterator giving the components of a path.",null,null],[3,"Iter","","An iterator over the components of a path, as `OsStr` slices.",null,null],[3,"PathBuf","","An owned, mutable path (akin to `String`).",null,null],[3,"Path","","A slice of a path (akin to `str`).",null,null],[3,"StripPrefixError","","An error returned from the `Path::strip_prefix` method indicating that the\nprefix was not found in `self`.",null,null],[3,"Display","","Helper struct for safely printing paths with `format!()` and `{}`",null,null],[0,"process","bitflags::__core","Working with processes.",null,null],[3,"Child","bitflags::__core::process","Representation of a running or exited child process.",null,null],[12,"stdin","","The handle for writing to the child&#39;s stdin, if it has been captured",349,null],[12,"stdout","","The handle for reading from the child&#39;s stdout, if it has been captured",349,null],[12,"stderr","","The handle for reading from the child&#39;s stderr, if it has been captured",349,null],[3,"ChildStdin","","A handle to a child process&#39;s stdin",null,null],[3,"ChildStdout","","A handle to a child process&#39;s stdout",null,null],[3,"ChildStderr","","A handle to a child process&#39;s stderr",null,null],[3,"Command","","The `Command` type acts as a process builder, providing fine-grained control\nover how a new process should be spawned. A default configuration can be\ngenerated using `Command::new(program)`, where `program` gives a path to the\nprogram to be executed. Additional builder methods allow the configuration\nto be changed (for example, by adding arguments) prior to spawning:",null,null],[3,"Output","","The output of a finished process.",null,null],[12,"status","","The status (exit code) of the process.",348,null],[12,"stdout","","The data that the process wrote to stdout.",348,null],[12,"stderr","","The data that the process wrote to stderr.",348,null],[3,"Stdio","","Describes what to do with a standard I/O stream for a child process.",null,null],[3,"ExitStatus","","Describes the result of a process after it has terminated.",null,null],[5,"exit","","Terminates the current process with the specified exit code.",null,null],[0,"sync","bitflags::__core","Useful synchronization primitives",null,null],[0,"mpsc","bitflags::__core::sync","Multi-producer, single-consumer FIFO queue communication primitives.",null,null],[3,"Receiver","bitflags::__core::sync::mpsc","The receiving-half of Rust&#39;s channel type. This half can only be owned by\none thread",null,null],[3,"Iter","","An iterator over messages on a receiver, this iterator will block\nwhenever `next` is called, waiting for a new message, and `None` will be\nreturned when the corresponding channel has hung up.",null,null],[3,"IntoIter","","An owning iterator over messages on a receiver, this iterator will block\nwhenever `next` is called, waiting for a new message, and `None` will be\nreturned when the corresponding channel has hung up.",null,null],[3,"Sender","","The sending-half of Rust&#39;s asynchronous channel type. This half can only be\nowned by one thread, but it can be cloned to send to other threads.",null,null],[3,"SyncSender","","The sending-half of Rust&#39;s synchronous channel type. This half can only be\nowned by one thread, but it can be cloned to send to other threads.",null,null],[3,"SendError","","An error returned from the `send` function on channels.",null,null],[3,"RecvError","","An error returned from the `recv` function on a `Receiver`.",null,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that `try_recv` could\nnot return data when called.",null,null],[13,"Empty","","This channel is currently empty, but the sender(s) have not yet\ndisconnected, so data may yet become available.",365,null],[13,"Disconnected","","This channel&#39;s sending half has become disconnected, and there will\nnever be any more data received on this channel",365,null],[4,"TrySendError","","This enumeration is the list of the possible error outcomes for the\n`SyncSender::try_send` method.",null,null],[13,"Full","","The data could not be sent on the channel because it would require that\nthe callee block to send the data.",366,null],[13,"Disconnected","","This channel&#39;s receiving half has disconnected, so the data could not be\nsent. The data is returned back to the callee in this case.",366,null],[5,"channel","","Creates a new asynchronous channel, returning the sender/receiver halves.",null,null],[5,"sync_channel","","Creates a new synchronous, bounded channel.",null,null],[3,"Select","","The &quot;receiver set&quot; of the select interface. This structure is used to manage\na set of receivers which are being selected over.",null,null],[3,"Handle","","A handle to a receiver which is currently a member of a `Select` set of\nreceivers.  This handle is used to keep the receiver in the set as well as\ninteract with the underlying receiver.",null,null],[3,"Arc","bitflags::__core::sync","An atomically reference counted wrapper for shared state.",null,null],[3,"Weak","","A weak pointer to an `Arc`.",null,null],[0,"atomic","","Atomic types",null,null],[3,"AtomicBool","bitflags::__core::sync::atomic","A boolean type which can be safely shared between threads.",null,null],[3,"AtomicIsize","","A signed integer type which can be safely shared between threads.",null,null],[3,"AtomicUsize","","An unsigned integer type which can be safely shared between threads.",null,null],[3,"AtomicPtr","","A raw pointer type which can be safely shared between threads.",null,null],[4,"Ordering","","Atomic memory orderings",null,null],[13,"Relaxed","","No ordering constraints, only atomic operations. Corresponds to LLVM&#39;s\n`Monotonic` ordering.",48,null],[13,"Release","","When coupled with a store, all previous writes become visible\nto another thread that performs a load with `Acquire` ordering\non the same value.",48,null],[13,"Acquire","","When coupled with a load, all subsequent loads will see data\nwritten before a store with `Release` ordering on the same value\nin another thread.",48,null],[13,"AcqRel","","When coupled with a load, uses `Acquire` ordering, and with a store\n`Release` ordering.",48,null],[13,"SeqCst","","Like `AcqRel` with the additional guarantee that all threads see all\nsequentially consistent operations in the same order.",48,null],[17,"ATOMIC_BOOL_INIT","","An `AtomicBool` initialized to `false`.",null,null],[17,"ATOMIC_ISIZE_INIT","","An `AtomicIsize` initialized to `0`.",null,null],[17,"ATOMIC_USIZE_INIT","","An `AtomicUsize` initialized to `0`.",null,null],[5,"fence","","An atomic fence.",null,null],[3,"Barrier","bitflags::__core::sync","A barrier enables multiple threads to synchronize the beginning\nof some computation.",null,null],[3,"BarrierWaitResult","","A result returned from wait.",null,null],[3,"Condvar","","A Condition Variable",null,null],[3,"StaticCondvar","","Statically allocated condition variables.",null,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition variable returned\ndue to a time out or not.",null,null],[17,"CONDVAR_INIT","","Constant initializer for a statically allocated condition variable.",null,null],[17,"MUTEX_INIT","","Static initialization of a mutex. This constant can be used to initialize\nother mutex constants.",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared data",null,null],[3,"MutexGuard","","An RAII implementation of a &quot;scoped lock&quot; of a mutex. When this structure is\ndropped (falls out of scope), the lock will be unlocked.",null,null],[3,"StaticMutex","","The static mutex type is provided to allow for static allocation of mutexes.",null,null],[3,"Once","","A synchronization primitive which can be used to run a one-time global\ninitialization. Useful for one-time initialization for FFI or related\nfunctionality. This type can only be constructed with the `ONCE_INIT`\nvalue.",null,null],[17,"ONCE_INIT","","Initialization value for static `Once` values.",null,null],[3,"PoisonError","","A type of error which can be returned whenever a lock is acquired.",null,null],[4,"TryLockError","","An enumeration of possible errors which can occur while calling the\n`try_lock` method.",null,null],[13,"Poisoned","","The lock could not be acquired because another thread failed while holding\nthe lock.",403,null],[13,"WouldBlock","","The lock could not be acquired at this time because the operation would\notherwise block.",403,null],[6,"TryLockResult","","",null,null],[6,"LockResult","","",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when\ndropped.",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when\ndropped.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"StaticRwLock","","Structure representing a statically allocated RwLock.",null,null],[17,"RW_LOCK_INIT","","Constant initialization for a statically-initialized rwlock.",null,null],[3,"Semaphore","","A counting, blocking, semaphore.",null,null],[3,"SemaphoreGuard","","An RAII guard which will release a resource acquired from a semaphore when\ndropped.",null,null],[0,"time","bitflags::__core","Temporal quantification.",null,null],[3,"Instant","bitflags::__core::time","A measurement of a monotonically increasing clock.\n Opaque and useful only with `Duration`.",null,null],[3,"SystemTime","","A measurement of the system clock, useful for talking to\nexternal entities like the file system or other processes.",null,null],[3,"SystemTimeError","","An error returned from the `duration_since` method on `SystemTime`,\nused to learn about why how far in the opposite direction a timestamp lies.",null,null],[17,"UNIX_EPOCH","","An anchor in time which can be used to create new `SystemTime` instances or\nlearn about where in time a `SystemTime` lies.",null,null],[3,"Duration","","A duration type to represent a span of time, typically used for system\ntimeouts.",null,null],[0,"any","bitflags::__core","This module implements the `Any` trait, which enables dynamic typing\nof any `&#39;static` type through runtime reflection.",null,null],[8,"Any","bitflags::__core::any","A type to emulate dynamic typing.",null,null],[10,"get_type_id","","Gets the `TypeId` of `self`.",42,{"inputs":[{"name":"any"}],"output":{"name":"typeid"}}],[3,"TypeId","","A `TypeId` represents a globally unique identifier for a type.",null,null],[0,"cell","bitflags::__core","Shareable mutable containers.",null,null],[3,"Cell","bitflags::__core::cell","A mutable memory location that admits only `Copy` data.",null,null],[3,"RefCell","","A mutable memory location with dynamically checked borrow rules",null,null],[4,"BorrowState","","An enumeration of values returned from the `state` method on a `RefCell&lt;T&gt;`.",null,null],[13,"Reading","","The cell is currently being read, there is at least one active `borrow`.",50,null],[13,"Writing","","The cell is currently being written to, there is an active `borrow_mut`.",50,null],[13,"Unused","","There are no outstanding borrows on this cell.",50,null],[3,"Ref","","Wraps a borrowed reference to a value in a `RefCell` box.\nA wrapper type for an immutably borrowed value from a `RefCell&lt;T&gt;`.",null,null],[3,"RefMut","","A wrapper type for a mutably borrowed value from a `RefCell&lt;T&gt;`.",null,null],[3,"UnsafeCell","","The core primitive for interior mutability in Rust.",null,null],[0,"clone","bitflags::__core","The `Clone` trait for types that cannot be &#39;implicitly copied&#39;",null,null],[8,"Clone","bitflags::__core::clone","A common trait for cloning an object.",null,null],[10,"clone","","Returns a copy of the value.",14,{"inputs":[{"name":"clone"}],"output":{"name":"self"}}],[11,"clone_from","","Performs copy-assignment from `source`.",14,null],[0,"cmp","bitflags::__core","Functionality for ordering and comparison.",null,null],[8,"PartialEq","bitflags::__core::cmp","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",15,{"inputs":[{"name":"partialeq"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"ne","","This method tests for `!=`.",15,{"inputs":[{"name":"partialeq"},{"name":"rhs"}],"output":{"name":"bool"}}],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two values.",null,null],[13,"Less","","An ordering where a compared value is less [than another].",41,null],[13,"Equal","","An ordering where a compared value is equal [to another].",41,null],[13,"Greater","","An ordering where a compared value is greater [than another].",41,null],[8,"Ord","","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",17,{"inputs":[{"name":"ord"},{"name":"self"}],"output":{"name":"ordering"}}],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"option"}}],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",16,{"inputs":[{"name":"partialord"},{"name":"rhs"}],"output":{"name":"bool"}}],[5,"min","","Compare and return the minimum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Compare and return the maximum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"convert","bitflags::__core","Traits for conversions between types.",null,null],[8,"AsRef","bitflags::__core::convert","A cheap, reference-to-reference conversion.",null,null],[10,"as_ref","","Performs the conversion.",18,{"inputs":[{"name":"asref"}],"output":{"name":"t"}}],[8,"AsMut","","A cheap, mutable reference-to-mutable reference conversion.",null,null],[10,"as_mut","","Performs the conversion.",19,{"inputs":[{"name":"asmut"}],"output":{"name":"t"}}],[8,"Into","","A conversion that consumes `self`, which may or may not be expensive.",null,null],[10,"into","","Performs the conversion.",20,{"inputs":[{"name":"into"}],"output":{"name":"t"}}],[8,"From","","Construct `Self` via a conversion.",null,null],[10,"from","","Performs the conversion.",21,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[0,"default","bitflags::__core","The `Default` trait for types which may have meaningful default values.",null,null],[8,"Default","bitflags::__core::default","A trait for giving a type a useful default value.",null,null],[10,"default","","Returns the &quot;default value&quot; for a type.",22,{"inputs":[],"output":{"name":"self"}}],[0,"hash","bitflags::__core","Generic hashing support.",null,null],[8,"Hash","bitflags::__core::hash","A hashable type.",null,null],[10,"hash","","Feeds this value into the state given, updating the hasher as necessary.",545,null],[11,"hash_slice","","Feeds a slice of this type into the state provided.",545,null],[8,"Hasher","","A trait which represents the ability to hash an arbitrary stream of bytes.",null,null],[10,"finish","","Completes a round of hashing, producing the output hash generated.",546,{"inputs":[{"name":"hasher"}],"output":{"name":"u64"}}],[10,"write","","Writes some data into this `Hasher`",546,null],[11,"write_u8","","Write a single `u8` into this hasher",546,null],[11,"write_u16","","Write a single `u16` into this hasher.",546,null],[11,"write_u32","","Write a single `u32` into this hasher.",546,null],[11,"write_u64","","Write a single `u64` into this hasher.",546,null],[11,"write_usize","","Write a single `usize` into this hasher.",546,null],[11,"write_i8","","Write a single `i8` into this hasher.",546,null],[11,"write_i16","","Write a single `i16` into this hasher.",546,null],[11,"write_i32","","Write a single `i32` into this hasher.",546,null],[11,"write_i64","","Write a single `i64` into this hasher.",546,null],[11,"write_isize","","Write a single `isize` into this hasher.",546,null],[8,"BuildHasher","","A `BuildHasher` is typically used as a factory for instances of `Hasher`\nwhich a `HashMap` can then use to hash keys independently.",null,null],[16,"Hasher","","Type of the hasher that will be created.",547,null],[10,"build_hasher","","Creates a new hasher.",547,null],[3,"BuildHasherDefault","","A structure which implements `BuildHasher` for all `Hasher` types which also\nimplement `Default`.",null,null],[8,"HashState","","Deprecated, renamed to `BuildHasher`",null,null],[16,"Hasher","","Type of the hasher that will be created.",524,null],[10,"hasher","","Creates a new hasher based on the given state of this object.",524,null],[3,"SipHasher","","An implementation of SipHash 2-4.",null,null],[0,"intrinsics","bitflags::__core","rustc compiler intrinsics.",null,null],[5,"atomic_cxchg","bitflags::__core::intrinsics","",null,null],[5,"atomic_cxchg_acq","","",null,null],[5,"atomic_cxchg_rel","","",null,null],[5,"atomic_cxchg_acqrel","","",null,null],[5,"atomic_cxchg_relaxed","","",null,null],[5,"atomic_cxchg_failrelaxed","","",null,null],[5,"atomic_cxchg_failacq","","",null,null],[5,"atomic_cxchg_acq_failrelaxed","","",null,null],[5,"atomic_cxchg_acqrel_failrelaxed","","",null,null],[5,"atomic_cxchgweak","","",null,null],[5,"atomic_cxchgweak_acq","","",null,null],[5,"atomic_cxchgweak_rel","","",null,null],[5,"atomic_cxchgweak_acqrel","","",null,null],[5,"atomic_cxchgweak_relaxed","","",null,null],[5,"atomic_cxchgweak_failrelaxed","","",null,null],[5,"atomic_cxchgweak_failacq","","",null,null],[5,"atomic_cxchgweak_acq_failrelaxed","","",null,null],[5,"atomic_cxchgweak_acqrel_failrelaxed","","",null,null],[5,"atomic_load","","",null,null],[5,"atomic_load_acq","","",null,null],[5,"atomic_load_relaxed","","",null,null],[5,"atomic_load_unordered","","",null,null],[5,"atomic_store","","",null,null],[5,"atomic_store_rel","","",null,null],[5,"atomic_store_relaxed","","",null,null],[5,"atomic_store_unordered","","",null,null],[5,"atomic_xchg","","",null,null],[5,"atomic_xchg_acq","","",null,null],[5,"atomic_xchg_rel","","",null,null],[5,"atomic_xchg_acqrel","","",null,null],[5,"atomic_xchg_relaxed","","",null,null],[5,"atomic_xadd","","",null,null],[5,"atomic_xadd_acq","","",null,null],[5,"atomic_xadd_rel","","",null,null],[5,"atomic_xadd_acqrel","","",null,null],[5,"atomic_xadd_relaxed","","",null,null],[5,"atomic_xsub","","",null,null],[5,"atomic_xsub_acq","","",null,null],[5,"atomic_xsub_rel","","",null,null],[5,"atomic_xsub_acqrel","","",null,null],[5,"atomic_xsub_relaxed","","",null,null],[5,"atomic_and","","",null,null],[5,"atomic_and_acq","","",null,null],[5,"atomic_and_rel","","",null,null],[5,"atomic_and_acqrel","","",null,null],[5,"atomic_and_relaxed","","",null,null],[5,"atomic_nand","","",null,null],[5,"atomic_nand_acq","","",null,null],[5,"atomic_nand_rel","","",null,null],[5,"atomic_nand_acqrel","","",null,null],[5,"atomic_nand_relaxed","","",null,null],[5,"atomic_or","","",null,null],[5,"atomic_or_acq","","",null,null],[5,"atomic_or_rel","","",null,null],[5,"atomic_or_acqrel","","",null,null],[5,"atomic_or_relaxed","","",null,null],[5,"atomic_xor","","",null,null],[5,"atomic_xor_acq","","",null,null],[5,"atomic_xor_rel","","",null,null],[5,"atomic_xor_acqrel","","",null,null],[5,"atomic_xor_relaxed","","",null,null],[5,"atomic_max","","",null,null],[5,"atomic_max_acq","","",null,null],[5,"atomic_max_rel","","",null,null],[5,"atomic_max_acqrel","","",null,null],[5,"atomic_max_relaxed","","",null,null],[5,"atomic_min","","",null,null],[5,"atomic_min_acq","","",null,null],[5,"atomic_min_rel","","",null,null],[5,"atomic_min_acqrel","","",null,null],[5,"atomic_min_relaxed","","",null,null],[5,"atomic_umin","","",null,null],[5,"atomic_umin_acq","","",null,null],[5,"atomic_umin_rel","","",null,null],[5,"atomic_umin_acqrel","","",null,null],[5,"atomic_umin_relaxed","","",null,null],[5,"atomic_umax","","",null,null],[5,"atomic_umax_acq","","",null,null],[5,"atomic_umax_rel","","",null,null],[5,"atomic_umax_acqrel","","",null,null],[5,"atomic_umax_relaxed","","",null,null],[5,"atomic_fence","","",null,null],[5,"atomic_fence_acq","","",null,null],[5,"atomic_fence_rel","","",null,null],[5,"atomic_fence_acqrel","","",null,null],[5,"atomic_singlethreadfence","","A compiler-only memory barrier.",null,null],[5,"atomic_singlethreadfence_acq","","",null,null],[5,"atomic_singlethreadfence_rel","","",null,null],[5,"atomic_singlethreadfence_acqrel","","",null,null],[5,"abort","","Aborts the execution of the process.",null,null],[5,"unreachable","","Tells LLVM that this point in the code is not reachable,\nenabling further optimizations.",null,null],[5,"assume","","Informs the optimizer that a condition is always true.\nIf the condition is false, the behavior is undefined.",null,null],[5,"breakpoint","","Executes a breakpoint trap, for inspection by a debugger.",null,null],[5,"size_of","","The size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"move_val_init","","Moves a value to an uninitialized memory location.",null,null],[5,"min_align_of","","",null,{"inputs":[],"output":{"name":"usize"}}],[5,"pref_align_of","","",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of_val","","",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[5,"type_name","","Gets a static string slice containing the name of a type.",null,{"inputs":[],"output":{"name":"str"}}],[5,"type_id","","Gets an identifier which is globally unique to the specified type. This\nfunction will return the same value for a type regardless of whichever\ncrate it is invoked in.",null,{"inputs":[],"output":{"name":"u64"}}],[5,"init_dropped","","Creates a value initialized to so that its drop flag,\nif any, says that it has been dropped.",null,{"inputs":[],"output":{"name":"t"}}],[5,"init","","Creates a value initialized to zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninit","","Creates an uninitialized value.",null,{"inputs":[],"output":{"name":"t"}}],[5,"forget","","Moves a value out of scope without running drop glue.",null,null],[5,"transmute","","Unsafely transforms a value of one type into a value of another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"return_address","","Gives the address for the return value of the enclosing function.",null,null],[5,"needs_drop","","Returns `true` if the actual type given as `T` requires drop\nglue; returns `false` if the actual type provided for `T`\nimplements `Copy`.",null,{"inputs":[],"output":{"name":"bool"}}],[5,"offset","","Calculates the offset from a pointer.",null,null],[5,"arith_offset","","Calculates the offset from a pointer, potentially wrapping.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"volatile_copy_nonoverlapping_memory","","Equivalent to the appropriate `llvm.memcpy.p0i8.0i8.*` intrinsic, with\na size of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`",null,null],[5,"volatile_copy_memory","","Equivalent to the appropriate `llvm.memmove.p0i8.0i8.*` intrinsic, with\na size of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`",null,null],[5,"volatile_set_memory","","Equivalent to the appropriate `llvm.memset.p0i8.*` intrinsic, with a\nsize of `count` * `size_of::&lt;T&gt;()` and an alignment of\n`min_align_of::&lt;T&gt;()`.",null,null],[5,"volatile_load","","Perform a volatile load from the `src` pointer.",null,null],[5,"volatile_store","","Perform a volatile store to the `dst` pointer.",null,null],[5,"sqrtf32","","Returns the square root of an `f32`",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"sqrtf64","","Returns the square root of an `f64`",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"powif32","","Raises an `f32` to an integer power.",null,{"inputs":[{"name":"f32"},{"name":"i32"}],"output":{"name":"f32"}}],[5,"powif64","","Raises an `f64` to an integer power.",null,{"inputs":[{"name":"f64"},{"name":"i32"}],"output":{"name":"f64"}}],[5,"sinf32","","Returns the sine of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"sinf64","","Returns the sine of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"cosf32","","Returns the cosine of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"cosf64","","Returns the cosine of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"powf32","","Raises an `f32` to an `f32` power.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"powf64","","Raises an `f64` to an `f64` power.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"expf32","","Returns the exponential of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"expf64","","Returns the exponential of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"exp2f32","","Returns 2 raised to the power of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"exp2f64","","Returns 2 raised to the power of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"logf32","","Returns the natural logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"logf64","","Returns the natural logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"log10f32","","Returns the base 10 logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"log10f64","","Returns the base 10 logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"log2f32","","Returns the base 2 logarithm of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"log2f64","","Returns the base 2 logarithm of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"fmaf32","","Returns `a * b + c` for `f32` values.",null,{"inputs":[{"name":"f32"},{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"fmaf64","","Returns `a * b + c` for `f64` values.",null,{"inputs":[{"name":"f64"},{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"fabsf32","","Returns the absolute value of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"fabsf64","","Returns the absolute value of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"copysignf32","","Copies the sign from `y` to `x` for `f32` values.",null,{"inputs":[{"name":"f32"},{"name":"f32"}],"output":{"name":"f32"}}],[5,"copysignf64","","Copies the sign from `y` to `x` for `f64` values.",null,{"inputs":[{"name":"f64"},{"name":"f64"}],"output":{"name":"f64"}}],[5,"floorf32","","Returns the largest integer less than or equal to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"floorf64","","Returns the largest integer less than or equal to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"ceilf32","","Returns the smallest integer greater than or equal to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"ceilf64","","Returns the smallest integer greater than or equal to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"truncf32","","Returns the integer part of an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"truncf64","","Returns the integer part of an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"rintf32","","Returns the nearest integer to an `f32`. May raise an inexact floating-point exception\nif the argument is not an integer.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"rintf64","","Returns the nearest integer to an `f64`. May raise an inexact floating-point exception\nif the argument is not an integer.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"nearbyintf32","","Returns the nearest integer to an `f32`.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"nearbyintf64","","Returns the nearest integer to an `f64`.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"roundf32","","Returns the nearest integer to an `f32`. Rounds half-way cases away from zero.",null,{"inputs":[{"name":"f32"}],"output":{"name":"f32"}}],[5,"roundf64","","Returns the nearest integer to an `f64`. Rounds half-way cases away from zero.",null,{"inputs":[{"name":"f64"}],"output":{"name":"f64"}}],[5,"ctpop","","Returns the number of bits set in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"ctlz","","Returns the number of leading bits unset in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"cttz","","Returns the number of trailing bits unset in an integer type `T`",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"bswap","","Reverses the bytes in an integer type `T`.",null,{"inputs":[{"name":"t"}],"output":{"name":"t"}}],[5,"add_with_overflow","","Performs checked integer addition.",null,null],[5,"sub_with_overflow","","Performs checked integer subtraction",null,null],[5,"mul_with_overflow","","Performs checked integer multiplication",null,null],[5,"unchecked_div","","Performs an unchecked division, resulting in undefined behavior\nwhere y = 0 or x = `T::min_value()` and y = -1",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"unchecked_rem","","Returns the remainder of an unchecked division, resulting in\nundefined behavior where y = 0 or x = `T::min_value()` and y = -1",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_add","","Returns (a + b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_sub","","Returns (a - b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"overflowing_mul","","Returns (a * b) mod 2^N, where N is the width of T in bits.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"discriminant_value","","Returns the value of the discriminant for the variant in &#39;v&#39;,\ncast to a `u64`; if `T` has no discriminant, returns 0.",null,{"inputs":[{"name":"t"}],"output":{"name":"u64"}}],[5,"try","","Rust&#39;s &quot;try catch&quot; construct which invokes the function pointer `f` with\nthe data pointer `data`.",null,null],[0,"iter","bitflags::__core","Composable external iteration",null,null],[8,"Iterator","bitflags::__core::iter","An interface for dealing with iterators.",null,null],[16,"Item","","The type of the elements being iterated over.",23,null],[10,"next","","Advances the iterator and returns the next value.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"size_hint","","Returns the bounds on the remaining length of the iterator.",23,null],[11,"count","","Consumes the iterator, counting the number of iterations and returning it.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"usize"}}],[11,"last","","Consumes the iterator, returning the last element.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"nth","","Consumes the `n` first elements of the iterator, then returns the\n`next()` one.",23,{"inputs":[{"name":"iterator"},{"name":"usize"}],"output":{"name":"option"}}],[11,"chain","","Takes two iterators and creates a new iterator over both in sequence.",23,{"inputs":[{"name":"iterator"},{"name":"u"}],"output":{"name":"chain"}}],[11,"zip","","&#39;Zips up&#39; two iterators into a single iterator of pairs.",23,{"inputs":[{"name":"iterator"},{"name":"u"}],"output":{"name":"zip"}}],[11,"map","","Takes a closure and creates an iterator which calls that closure on each\nelement.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"map"}}],[11,"filter","","Creates an iterator which uses a closure to determine if an element\nshould be yielded.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"filter"}}],[11,"filter_map","","Creates an iterator that both filters and maps.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"filtermap"}}],[11,"enumerate","","Creates an iterator which gives the current iteration count as well as\nthe next value.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"enumerate"}}],[11,"peekable","","Creates an iterator which can look at the `next()` element without\nconsuming it.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"peekable"}}],[11,"skip_while","","Creates an iterator that [`skip()`]s elements based on a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"skipwhile"}}],[11,"take_while","","Creates an iterator that yields elements based on a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"takewhile"}}],[11,"skip","","Creates an iterator that skips the first `n` elements.",23,{"inputs":[{"name":"iterator"},{"name":"usize"}],"output":{"name":"skip"}}],[11,"take","","Creates an iterator that yields its first `n` elements.",23,{"inputs":[{"name":"iterator"},{"name":"usize"}],"output":{"name":"take"}}],[11,"scan","","An iterator adaptor similar to [`fold()`] that holds internal state and\nproduces a new iterator.",23,{"inputs":[{"name":"iterator"},{"name":"st"},{"name":"f"}],"output":{"name":"scan"}}],[11,"flat_map","","Creates an iterator that works like map, but flattens nested structure.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"flatmap"}}],[11,"fuse","","Creates an iterator which ends after the first `None`.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"fuse"}}],[11,"inspect","","Do something with each element of an iterator, passing the value on.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"inspect"}}],[11,"by_ref","","Borrows an iterator, rather than consuming it.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"self"}}],[11,"collect","","Transforms an iterator into a collection.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"b"}}],[11,"partition","","Consumes an iterator, creating two collections from it.",23,null],[11,"fold","","An iterator adaptor that applies a function, producing a single, final value.",23,{"inputs":[{"name":"iterator"},{"name":"b"},{"name":"f"}],"output":{"name":"b"}}],[11,"all","","Tests if every element of the iterator matches a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"bool"}}],[11,"any","","Tests if any element of the iterator matches a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"bool"}}],[11,"find","","Searches for an element of an iterator that satisfies a predicate.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"option"}}],[11,"position","","Searches for an element in an iterator, returning its index.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"option"}}],[11,"rposition","","Searches for an element in an iterator from the right, returning its\nindex.",23,{"inputs":[{"name":"iterator"},{"name":"p"}],"output":{"name":"option"}}],[11,"max","","Returns the maximum element of an iterator.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"min","","Returns the minimum element of an iterator.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"option"}}],[11,"max_by","","",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"max_by_key","","Returns the element that gives the maximum value from the\nspecified function.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"min_by","","",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"min_by_key","","Returns the element that gives the minimum value from the\nspecified function.",23,{"inputs":[{"name":"iterator"},{"name":"f"}],"output":{"name":"option"}}],[11,"rev","","Reverses an iterator&#39;s direction.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"rev"}}],[11,"unzip","","Converts an iterator of pairs into a pair of containers.",23,null],[11,"cloned","","Creates an iterator which `clone()`s all of its elements.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"cloned"}}],[11,"cycle","","Repeats an iterator endlessly.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"cycle"}}],[11,"sum","","Sums the elements of an iterator.",23,{"inputs":[{"name":"iterator"}],"output":{"name":"s"}}],[11,"product","","Iterates over the entire iterator, multiplying all the elements",23,{"inputs":[{"name":"iterator"}],"output":{"name":"p"}}],[11,"cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","Lexicographically compares the elements of this `Iterator` with those\nof another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"option"}}],[11,"eq","","Determines if the elements of this `Iterator` are equal to those of\nanother.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"ne","","Determines if the elements of this `Iterator` are unequal to those of\nanother.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"lt","","Determines if the elements of this `Iterator` are lexicographically\nless than those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"le","","Determines if the elements of this `Iterator` are lexicographically\nless or equal to those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"gt","","Determines if the elements of this `Iterator` are lexicographically\ngreater than those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[11,"ge","","Determines if the elements of this `Iterator` are lexicographically\ngreater than or equal to those of another.",23,{"inputs":[{"name":"iterator"},{"name":"i"}],"output":{"name":"bool"}}],[8,"FromIterator","","Conversion from an `Iterator`.",null,null],[10,"from_iter","","Creates a value from an iterator.",548,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[8,"IntoIterator","","Conversion into an `Iterator`.",null,null],[16,"Item","","The type of the elements being iterated over.",25,null],[16,"IntoIter","","Which kind of iterator are we turning this into?",25,null],[10,"into_iter","","Creates an iterator from a value.",25,null],[8,"Extend","","Extend a collection with the contents of an iterator.",null,null],[10,"extend","","Extends a collection with the contents of an iterator.",24,null],[8,"DoubleEndedIterator","","An iterator able to yield elements from both ends.",null,null],[10,"next_back","","An iterator able to yield elements from both ends.",26,{"inputs":[{"name":"doubleendediterator"}],"output":{"name":"option"}}],[8,"ExactSizeIterator","","An iterator that knows its exact length.",null,null],[11,"len","","Returns the exact number of times the iterator will iterate.",27,{"inputs":[{"name":"exactsizeiterator"}],"output":{"name":"usize"}}],[3,"Rev","","An double-ended iterator with the direction inverted.",null,null],[3,"Cloned","","An iterator that clones the elements of an underlying iterator.",null,null],[3,"Cycle","","An iterator that repeats endlessly.",null,null],[3,"Chain","","An iterator that strings two iterators together.",null,null],[3,"Zip","","An iterator that iterates two other iterators simultaneously.",null,null],[3,"Map","","An iterator that maps the values of `iter` with `f`.",null,null],[3,"Filter","","An iterator that filters the elements of `iter` with `predicate`.",null,null],[3,"FilterMap","","An iterator that uses `f` to both filter and map elements from `iter`.",null,null],[3,"Enumerate","","An iterator that yields the current count and the element during iteration.",null,null],[3,"Peekable","","An iterator with a `peek()` that returns an optional reference to the next\nelement.",null,null],[3,"SkipWhile","","An iterator that rejects elements while `predicate` is true.",null,null],[3,"TakeWhile","","An iterator that only accepts elements while `predicate` is true.",null,null],[3,"Skip","","An iterator that skips over `n` elements of `iter`.",null,null],[3,"Take","","An iterator that only iterates over the first `n` iterations of `iter`.",null,null],[3,"Scan","","An iterator to maintain state while iterating another iterator.",null,null],[3,"FlatMap","","An iterator that maps each element to an iterator, and yields the elements\nof the produced iterators.",null,null],[3,"Fuse","","An iterator that yields `None` forever after the underlying iterator\nyields `None` once.",null,null],[3,"Inspect","","An iterator that calls a function with a reference to each element before\nyielding it.",null,null],[8,"Step","","Objects that can be stepped over in both directions.",null,null],[10,"step","","Steps `self` if possible.",549,{"inputs":[{"name":"step"},{"name":"self"}],"output":{"name":"option"}}],[10,"steps_between","","Returns the number of steps between two step objects. The count is\ninclusive of `start` and exclusive of `end`.",549,{"inputs":[{"name":"self"},{"name":"self"},{"name":"self"}],"output":{"name":"option"}}],[3,"StepBy","","An adapter for stepping range iterators by a custom amount.",null,null],[3,"RangeInclusive","","An iterator over the range [start, stop]",null,null],[5,"range_inclusive","","Returns an iterator over the range [start, stop].",null,{"inputs":[{"name":"a"},{"name":"a"}],"output":{"name":"rangeinclusive"}}],[3,"Repeat","","An iterator that repeats an element endlessly.",null,null],[5,"repeat","","Creates a new iterator that endlessly repeats a single element.",null,{"inputs":[{"name":"t"}],"output":{"name":"repeat"}}],[3,"Empty","","An iterator that yields nothing.",null,null],[5,"empty","","Creates an iterator that yields nothing.",null,{"inputs":[],"output":{"name":"empty"}}],[3,"Once","","An iterator that yields an element exactly once.",null,null],[5,"once","","Creates an iterator that yields an element exactly once.",null,{"inputs":[{"name":"t"}],"output":{"name":"once"}}],[0,"marker","bitflags::__core","Primitive traits and marker types representing basic &#39;kinds&#39; of types.",null,null],[8,"Send","bitflags::__core::marker","Types that can be transferred across thread boundaries.",null,null],[8,"Sized","","Types with a constant size known at compile-time.",null,null],[8,"Unsize","","Types that can be &quot;unsized&quot; to a dynamically sized type.",null,null],[8,"Copy","","Types that can be copied by simply copying bits (i.e. `memcpy`).",null,null],[8,"Sync","","Types that can be safely shared between threads when aliased.",null,null],[3,"PhantomData","","`PhantomData&lt;T&gt;` allows you to describe that a type acts as if it stores a value of type `T`,\neven though it does not. This allows you to inform the compiler about certain safety properties\nof your code.",null,null],[8,"Reflect","","Types that can be reflected over.",null,null],[0,"mem","bitflags::__core","Basic functions for dealing with memory",null,null],[5,"forget","bitflags::__core::mem","Leaks a value into the void, consuming ownership and never running its\ndestructor.",null,null],[5,"size_of","","Returns the size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","Returns the size of the given value in bytes.",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of","","Returns the ABI-required minimum alignment of a type",null,{"inputs":[],"output":{"name":"usize"}}],[5,"min_align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"align_of","","Returns the alignment in memory for a type.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"zeroed","","Creates a value initialized to zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"dropped","","Creates a value initialized to an unspecified series of bytes.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninitialized","","Bypasses Rust&#39;s normal memory-initialization checks by pretending to\nproduce a value of type T, while doing nothing at all.",null,{"inputs":[],"output":{"name":"t"}}],[5,"swap","","Swap the values at two mutable locations of the same type, without deinitializing or copying\neither one.",null,null],[5,"replace","","Replaces the value at a mutable location with a new one, returning the old value, without\ndeinitializing or copying either one.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"drop","","Disposes of a value.",null,null],[17,"POST_DROP_U8","","",null,null],[17,"POST_DROP_U32","","",null,null],[17,"POST_DROP_U64","","",null,null],[17,"POST_DROP_USIZE","","",null,null],[5,"transmute_copy","","Interprets `src` as `&amp;U`, and then reads `src` without moving the contained\nvalue.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"transmute","","Unsafely transforms a value of one type into a value of another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[0,"ops","bitflags::__core","Overloadable operators",null,null],[8,"Drop","bitflags::__core::ops","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",1,null],[8,"Add","","The `Add` trait is used to specify the functionality of `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator",550,null],[10,"add","","The method for the `+` operator",550,null],[8,"Sub","","The `Sub` trait is used to specify the functionality of `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",551,null],[10,"sub","","The method for the `-` operator",551,null],[8,"Mul","","The `Mul` trait is used to specify the functionality of `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator",552,null],[10,"mul","","The method for the `*` operator",552,null],[8,"Div","","The `Div` trait is used to specify the functionality of `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator",553,null],[10,"div","","The method for the `/` operator",553,null],[8,"Rem","","The `Rem` trait is used to specify the functionality of `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator",554,null],[10,"rem","","The method for the `%` operator",554,null],[8,"Neg","","The `Neg` trait is used to specify the functionality of unary `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",555,null],[10,"neg","","The method for the unary `-` operator",555,null],[8,"Not","","The `Not` trait is used to specify the functionality of unary `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator",556,null],[10,"not","","The method for the unary `!` operator",556,null],[8,"BitAnd","","The `BitAnd` trait is used to specify the functionality of `&amp;`.",null,null],[16,"Output","","The resulting type after applying the `&amp;` operator",557,null],[10,"bitand","","The method for the `&amp;` operator",557,null],[8,"BitOr","","The `BitOr` trait is used to specify the functionality of `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator",558,null],[10,"bitor","","The method for the `|` operator",558,null],[8,"BitXor","","The `BitXor` trait is used to specify the functionality of `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator",559,null],[10,"bitxor","","The method for the `^` operator",559,null],[8,"Shl","","The `Shl` trait is used to specify the functionality of `&lt;&lt;`.",null,null],[16,"Output","","The resulting type after applying the `&lt;&lt;` operator",560,null],[10,"shl","","The method for the `&lt;&lt;` operator",560,null],[8,"Shr","","The `Shr` trait is used to specify the functionality of `&gt;&gt;`.",null,null],[16,"Output","","The resulting type after applying the `&gt;&gt;` operator",561,null],[10,"shr","","The method for the `&gt;&gt;` operator",561,null],[8,"AddAssign","","The `AddAssign` trait is used to specify the functionality of `+=`.",null,null],[10,"add_assign","","The method for the `+=` operator",562,null],[8,"SubAssign","","The `SubAssign` trait is used to specify the functionality of `-=`.",null,null],[10,"sub_assign","","The method for the `-=` operator",563,null],[8,"MulAssign","","The `MulAssign` trait is used to specify the functionality of `*=`.",null,null],[10,"mul_assign","","The method for the `*=` operator",564,null],[8,"DivAssign","","The `DivAssign` trait is used to specify the functionality of `/=`.",null,null],[10,"div_assign","","The method for the `/=` operator",565,null],[8,"RemAssign","","The `RemAssign` trait is used to specify the functionality of `%=`.",null,null],[10,"rem_assign","","The method for the `%=` operator",566,null],[8,"BitAndAssign","","The `BitAndAssign` trait is used to specify the functionality of `&amp;=`.",null,null],[10,"bitand_assign","","The method for the `&amp;` operator",567,null],[8,"BitOrAssign","","The `BitOrAssign` trait is used to specify the functionality of `|=`.",null,null],[10,"bitor_assign","","The method for the `|=` operator",568,null],[8,"BitXorAssign","","The `BitXorAssign` trait is used to specify the functionality of `^=`.",null,null],[10,"bitxor_assign","","The method for the `^=` operator",569,null],[8,"ShlAssign","","The `ShlAssign` trait is used to specify the functionality of `&lt;&lt;=`.",null,null],[10,"shl_assign","","The method for the `&lt;&lt;=` operator",570,null],[8,"ShrAssign","","The `ShrAssign` trait is used to specify the functionality of `&gt;&gt;=`.",null,null],[10,"shr_assign","","The method for the `&gt;&gt;=` operator",571,null],[8,"Index","","The `Index` trait is used to specify the functionality of indexing operations\nlike `arr[idx]` when used in an immutable context.",null,null],[16,"Output","","The returned type after indexing",572,null],[10,"index","","The method for the indexing (`Foo[Bar]`) operation",572,null],[8,"IndexMut","","The `IndexMut` trait is used to specify the functionality of indexing\noperations like `arr[idx]`, when used in a mutable context.",null,null],[10,"index_mut","","The method for the indexing (`Foo[Bar]`) operation",573,null],[3,"RangeFull","","An unbounded range.",null,null],[3,"Range","","A (half-open) range which is bounded at both ends.",null,null],[12,"start","","The lower bound of the range (inclusive).",38,null],[12,"end","","The upper bound of the range (exclusive).",38,null],[3,"RangeFrom","","A range which is only bounded below.",null,null],[12,"start","","The lower bound of the range (inclusive).",39,null],[3,"RangeTo","","A range which is only bounded above.",null,null],[12,"end","","The upper bound of the range (exclusive).",40,null],[8,"Deref","","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",574,null],[10,"deref","","The method called to dereference a value",574,null],[8,"DerefMut","","The `DerefMut` trait is used to specify the functionality of dereferencing\nmutably like `*v = 1;`",null,null],[10,"deref_mut","","The method called to mutably dereference a value",575,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",2,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",3,null],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",4,null],[10,"call_once","","This is called when the call operator is used.",4,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper for one,\nwhere unsizing can be performed on the pointee.",null,null],[8,"Place","","Both `in (PLACE) EXPR` and `box EXPR` desugar into expressions\nthat allocate an intermediate &quot;place&quot; that holds uninitialized\nstate.  The desugaring evaluates EXPR, and writes the result at\nthe address returned by the `pointer` method of this trait.",null,null],[10,"pointer","","Returns the address where the input value will be written.\nNote that the data at this address is generally uninitialized,\nand thus one should use `ptr::write` for initializing it.",576,null],[8,"Placer","","Interface to implementations of  `in (PLACE) EXPR`.",null,null],[16,"Place","","`Place` is the intermedate agent guarding the\nuninitialized state for `Data`.",577,null],[10,"make_place","","Creates a fresh place from `self`.",577,null],[8,"InPlace","","Specialization of `Place` trait supporting `in (PLACE) EXPR`.",null,null],[16,"Owner","","`Owner` is the type of the end value of `in (PLACE) EXPR`",578,null],[10,"finalize","","Converts self into the final value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nthe returned instance of `Owner` and forgetting self.",578,null],[8,"Boxed","","Core trait for the `box EXPR` form.",null,null],[16,"Data","","The kind of data that is stored in this kind of box.",579,null],[16,"Place","","The place that will negotiate the storage of the data.",579,null],[10,"finalize","","Converts filled place into final owning value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nreturned instance of `Self` and forgetting `filled`.",579,null],[8,"BoxPlace","","Specialization of `Place` trait supporting `box EXPR`.",null,null],[10,"make_place","","Creates a globally fresh place.",580,{"inputs":[],"output":{"name":"self"}}],[0,"ptr","bitflags::__core","Raw, unsafe pointers, `*const T`, and `*mut T`",null,null],[5,"null","bitflags::__core::ptr","Creates a null raw pointer.",null,null],[5,"null_mut","","Creates a null mutable raw pointer.",null,null],[5,"swap","","Swaps the values at two mutable locations of the same type, without\ndeinitializing either. They may overlap, unlike `mem::swap` which is\notherwise equivalent.",null,null],[5,"replace","","Replaces the value at `dest` with `src`, returning the old\nvalue, without dropping either.",null,null],[5,"read","","Reads the value from `src` without moving it. This leaves the\nmemory in `src` unchanged.",null,null],[5,"read_and_drop","","",null,null],[5,"write","","Overwrites a memory location with the given value without reading or\ndropping the old value.",null,null],[5,"read_volatile","","Performs a volatile read of the value from `src` without moving it. This\nleaves the memory in `src` unchanged.",null,null],[5,"write_volatile","","Performs a volatile write of a memory location with the given value without\nreading or dropping the old value.",null,null],[3,"Unique","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper owns the referent. This in turn implies that the\n`Unique&lt;T&gt;` is `Send`/`Sync` if `T` is `Send`/`Sync`, unlike a raw\n`*mut T` (which conveys no particular ownership semantics).  It\nalso implies that the referent of the pointer should not be\nmodified without a unique path to the `Unique` reference. Useful\nfor building abstractions like `Vec&lt;T&gt;` or `Box&lt;T&gt;`, which\ninternally use raw pointers to manage the memory that they own.",null,null],[3,"Shared","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper has shared ownership of the referent. Useful for\nbuilding abstractions like `Rc&lt;T&gt;` or `Arc&lt;T&gt;`, which internally\nuse raw pointers to manage the memory that they own.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[0,"raw","bitflags::__core","Contains struct definitions for the layout of compiler built-in types.",null,null],[3,"Slice","bitflags::__core::raw","The representation of a slice like `&amp;[T]`.",null,null],[12,"data","","",89,null],[12,"len","","",89,null],[3,"TraitObject","","The representation of a trait object like `&amp;SomeTrait`.",null,null],[12,"data","","",90,null],[12,"vtable","","",90,null],[8,"Repr","","This trait is meant to map equivalences between raw structs and their\ncorresponding rust values.",null,null],[11,"repr","","This function &quot;unwraps&quot; a rust value (without consuming it) into its raw\nstruct representation. This can be used to read/write different values\nfor the struct. This is a safe method because by default it does not\nenable write-access to the fields of the return value in safe code.",581,{"inputs":[{"name":"repr"}],"output":{"name":"t"}}],[0,"result","bitflags::__core","Error handling with the `Result` type",null,null],[4,"Result","bitflags::__core::result","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",91,null],[13,"Err","","Contains the error value",91,null],[3,"Iter","","An iterator over a reference to the `Ok` variant of a `Result`.",null,null],[3,"IterMut","","An iterator over a mutable reference to the `Ok` variant of a `Result`.",null,null],[3,"IntoIter","","An iterator over the value in a `Ok` variant of a `Result`.",null,null],[0,"option","bitflags::__core","Optional values",null,null],[4,"Option","bitflags::__core::option","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",28,null],[13,"Some","","Some value `T`",28,null],[3,"Iter","","An iterator over a reference of the contained item in an Option.",null,null],[3,"IterMut","","An iterator over a mutable reference of the contained item in an Option.",null,null],[3,"IntoIter","","An iterator over the item contained inside an Option.",null,null],[0,"boxed","bitflags::__core","A pointer type for heap allocation.",null,null],[17,"HEAP","bitflags::__core::boxed","A value that represents the heap. This is the default place that the `box`\nkeyword allocates into when no place is supplied.",null,null],[3,"ExchangeHeapSingleton","","This the singleton type used solely for `boxed::HEAP`.",null,null],[3,"Box","","A pointer type for heap allocation.",null,null],[3,"IntermediateBox","","`IntermediateBox` represents uninitialized backing storage for `Box`.",null,null],[8,"FnBox","","`FnBox` is a version of the `FnOnce` intended for use with boxed\nclosure objects. The idea is that where one would normally store a\n`Box&lt;FnOnce()&gt;` in a data structure, you should use\n`Box&lt;FnBox()&gt;`. The two traits behave essentially the same, except\nthat a `FnBox` closure can only be called if it is boxed. (Note\nthat `FnBox` may be deprecated in the future if `Box&lt;FnOnce()&gt;`\nclosures become directly usable.)",null,null],[16,"Output","","",582,null],[10,"call_box","","",582,null],[0,"rc","bitflags::__core","Thread-local reference-counted boxes (the `Rc&lt;T&gt;` type).",null,null],[3,"Rc","bitflags::__core::rc","A reference-counted pointer type over an immutable value.",null,null],[3,"Weak","","A weak version of `Rc&lt;T&gt;`.",null,null],[0,"borrow","bitflags::__core","A module for working with borrowed data.",null,null],[8,"ToOwned","bitflags::__core::borrow","A generalization of `Clone` to borrowed data.",null,null],[16,"Owned","","",13,null],[10,"to_owned","","Creates owned data from borrowed data, usually by cloning.",13,null],[4,"Cow","","A clone-on-write smart pointer.",null,null],[13,"Borrowed","","Borrowed data.",192,null],[13,"Owned","","Owned data.",192,null],[8,"IntoCow","","Trait for moving into a `Cow`.",null,null],[10,"into_cow","","Moves `self` into `Cow`",583,{"inputs":[{"name":"intocow"}],"output":{"name":"cow"}}],[8,"Borrow","","A trait for borrowing data.",null,null],[10,"borrow","","Immutably borrows from an owned value.",584,{"inputs":[{"name":"borrow"}],"output":{"name":"borrowed"}}],[8,"BorrowMut","","A trait for mutably borrowing data.",null,null],[10,"borrow_mut","","Mutably borrows from an owned value.",585,{"inputs":[{"name":"borrowmut"}],"output":{"name":"borrowed"}}],[0,"fmt","bitflags::__core","Utilities for formatting and printing strings",null,null],[5,"format","bitflags::__core::fmt","The format function takes a precompiled format string and a list of\narguments, to return the resulting formatted string.",null,{"inputs":[{"name":"arguments"}],"output":{"name":"string"}}],[3,"Formatter","","A struct to represent both where to emit formatting strings to and how they\nshould be formatted. A mutable version of this is passed to all formatting\ntraits.",null,null],[6,"Result","","",null,null],[8,"Write","","A collection of methods that are required to format a message into a stream.",null,null],[10,"write_str","","Writes a slice of bytes into this writer, returning whether the write\nsucceeded.",586,{"inputs":[{"name":"write"},{"name":"str"}],"output":{"name":"result"}}],[11,"write_char","","Writes a `char` into this writer, returning whether the write succeeded.",586,{"inputs":[{"name":"write"},{"name":"char"}],"output":{"name":"result"}}],[11,"write_fmt","","Glue for usage of the `write!` macro with implementors of this trait.",586,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[8,"Octal","","Format trait for the `o` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",587,{"inputs":[{"name":"octal"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Binary","","Format trait for the `b` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",588,{"inputs":[{"name":"binary"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",589,{"inputs":[{"name":"display"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Debug","","Format trait for the `?` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",590,{"inputs":[{"name":"debug"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"LowerHex","","Format trait for the `x` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",591,{"inputs":[{"name":"lowerhex"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"UpperHex","","Format trait for the `X` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",592,{"inputs":[{"name":"upperhex"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"Pointer","","Format trait for the `p` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",593,{"inputs":[{"name":"pointer"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"LowerExp","","Format trait for the `e` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",594,{"inputs":[{"name":"lowerexp"},{"name":"formatter"}],"output":{"name":"result"}}],[8,"UpperExp","","Format trait for the `E` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",595,{"inputs":[{"name":"upperexp"},{"name":"formatter"}],"output":{"name":"result"}}],[3,"Error","","The error type which is returned from formatting a message into a stream.",null,null],[3,"Arguments","","This structure represents a safely precompiled version of a format string\nand its arguments. This cannot be generated at runtime because it cannot\nsafely be done so, so no constructors are given and the fields are private\nto prevent modification.",null,null],[5,"write","","The `write` function takes an output stream, a precompiled format string,\nand a list of arguments. The arguments will be formatted according to the\nspecified format string into the output stream provided.",null,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[5,"radix","","Constructs a radix formatter in the range of `2..36`.",null,{"inputs":[{"name":"t"},{"name":"u8"}],"output":{"name":"radixfmt"}}],[3,"Radix","","A radix with in the range of `2..36`.",null,null],[3,"RadixFmt","","A helper type for formatting radixes.",null,null],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[0,"slice","bitflags::__core","A dynamically-sized view into a contiguous sequence, `[T]`.",null,null],[8,"SliceConcatExt","bitflags::__core::slice","An extension trait for concatenating slices",null,null],[16,"Output","","The resulting type after concatenation",162,null],[10,"concat","","Flattens a slice of `T` into a single value `Self::Output`.",162,null],[10,"join","","Flattens a slice of `T` into a single value `Self::Output`, placing a\ngiven separator between each.",162,null],[10,"connect","","",162,null],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks (`size` elements at a\ntime).",null,null],[3,"Windows","","An iterator over overlapping subslices of length `size`.",null,null],[3,"Iter","","Immutable slice iterator",null,null],[3,"IterMut","","Mutable slice iterator.",null,null],[3,"SplitMut","","An iterator over the subslices of the vector which are separated\nby elements that match `pred`.",null,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable chunks (`size`\nelements at a time). When the slice len is not evenly divided by the chunk\nsize, the last slice of the iteration will be the remainder.",null,null],[3,"Split","","An iterator over subslices separated by elements that match a predicate\nfunction.",null,null],[3,"SplitN","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"RSplitN","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[3,"SplitNMut","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[0,"bytes","","Operations on `[u8]`.",null,null],[8,"MutableByteVector","bitflags::__core::slice::bytes","A trait for operations on mutable `[u8]`s.",null,null],[10,"set_memory","","Sets all bytes of the receiver to the given value.",596,null],[5,"copy_memory","","Copies data from `src` to `dst`",null,null],[5,"from_raw_parts","bitflags::__core::slice","Forms a slice from a pointer and a length.",null,null],[5,"from_raw_parts_mut","","Performs the same functionality as `from_raw_parts`, except that a mutable\nslice is returned.",null,null],[0,"str","bitflags::__core","Unicode string slices",null,null],[6,"Utf16Units","bitflags::__core::str","",null,null],[3,"EncodeUtf16","","External iterator for a string&#39;s UTF-16 code units.",null,null],[8,"FromStr","","A trait to abstract the idea of creating a new instance of a type from a\nstring.",null,null],[16,"Err","","The associated error which can be returned from parsing.",597,null],[10,"from_str","","Parses a string `s` to return a value of this type.",597,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[3,"Utf8Error","","Errors which can occur when attempting to interpret a sequence of `u8`\nas a string.",null,null],[3,"Lines","","Created with the method [`lines()`].",null,null],[3,"LinesAny","","Created with the method [`lines_any()`].",null,null],[3,"CharRange","","Struct that contains a `char` and the index of the first byte of\nthe next `char` in a string.  This can be used as a data structure\nfor iterating over the UTF-8 bytes of a string.",null,null],[12,"ch","","Current `char`",141,null],[12,"next","","Index of the first byte of the next `char`",141,null],[3,"Split","","Created with the method [`split()`].",null,null],[3,"RSplit","","Created with the method [`rsplit()`].",null,null],[3,"SplitN","","Created with the method [`splitn()`].",null,null],[3,"RSplitN","","Created with the method [`rsplitn()`].",null,null],[3,"SplitTerminator","","Created with the method [`split_terminator()`].",null,null],[3,"RSplitTerminator","","Created with the method [`rsplit_terminator()`].",null,null],[3,"Matches","","Created with the method [`matches()`].",null,null],[3,"RMatches","","Created with the method [`rmatches()`].",null,null],[3,"MatchIndices","","Created with the method [`match_indices()`].",null,null],[3,"RMatchIndices","","Created with the method [`rmatch_indices()`].",null,null],[5,"from_utf8","","Converts a slice of bytes to a string slice.",null,null],[3,"Chars","","Iterator for the char (representing *Unicode Scalar Values*) of a string",null,null],[3,"CharIndices","","Iterator for a string&#39;s characters and their byte offsets.",null,null],[3,"Bytes","","External iterator for a string&#39;s bytes.\nUse with the `std::iter` module.",null,null],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without checking\nthat the string contains valid UTF-8.",null,null],[3,"ParseBoolError","","An error returned when parsing a `bool` from a string fails.",null,null],[11,"clone","rustc_unicode::u_str","",598,{"inputs":[{"name":"utf16encoder"}],"output":{"name":"utf16encoder"}}],[11,"new","","Create a UTF-16 encoder from any `char` iterator.",598,{"inputs":[{"name":"i"}],"output":{"name":"utf16encoder"}}],[11,"next","","",598,{"inputs":[{"name":"utf16encoder"}],"output":{"name":"option"}}],[11,"size_hint","","",598,null],[11,"next","","",599,{"inputs":[{"name":"splitwhitespace"}],"output":{"name":"option"}}],[11,"next_back","","",599,{"inputs":[{"name":"splitwhitespace"}],"output":{"name":"option"}}],[3,"SplitWhitespace","bitflags::__core::str","An iterator over the non-whitespace substrings of a string,\nseparated by any amount of whitespace.",null,null],[0,"pattern","","The string Pattern API.",null,null],[8,"Pattern","bitflags::__core::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",600,null],[10,"into_searcher","","Constructs the associated searcher from\n`self` and the `haystack` to search in.",600,null],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",600,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the haystack",600,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"bool"}}],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the haystack",600,{"inputs":[{"name":"pattern"},{"name":"str"}],"output":{"name":"bool"}}],[4,"SearchStep","","Result of calling `Searcher::next()` or `ReverseSearcher::next_back()`.",null,null],[13,"Match","","Expresses that a match of the pattern has been found at\n`haystack[a..b]`.",107,null],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a possible match\nof the pattern.",107,null],[13,"Done","","Expresses that every byte of the haystack has been visted, ending\nthe iteration.",107,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlaying string to be searched in",601,{"inputs":[{"name":"searcher"}],"output":{"name":"str"}}],[10,"next","","Performs the next search step starting from the front.",601,{"inputs":[{"name":"searcher"}],"output":{"name":"searchstep"}}],[11,"next_match","","Find the next `Match` result. See `next()`",601,{"inputs":[{"name":"searcher"}],"output":{"name":"option"}}],[11,"next_reject","","Find the next `Reject` result. See `next()`",601,{"inputs":[{"name":"searcher"}],"output":{"name":"option"}}],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",602,{"inputs":[{"name":"reversesearcher"}],"output":{"name":"searchstep"}}],[11,"next_match_back","","Find the next `Match` result. See `next_back()`",602,{"inputs":[{"name":"reversesearcher"}],"output":{"name":"option"}}],[11,"next_reject_back","","Find the next `Reject` result. See `next_back()`",602,{"inputs":[{"name":"reversesearcher"}],"output":{"name":"option"}}],[8,"DoubleEndedSearcher","","A marker trait to express that a `ReverseSearcher`\ncan be used for a `DoubleEndedIterator` implementation.",null,null],[3,"CharSearcher","","Associated type for `&lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharSliceSearcher","","Associated type for `&lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharPredicateSearcher","","Associated type for `&lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"StrSearcher","","Associated type for `&lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[0,"string","bitflags::__core","A UTF-8 encoded, growable string.",null,null],[3,"String","bitflags::__core::string","A UTF-8 encoded, growable string.",null,null],[3,"FromUtf8Error","","A possible error value when converting a `String` from a UTF-8 byte vector.",null,null],[3,"FromUtf16Error","","A possible error value when converting a `String` from a UTF-16 byte slice.",null,null],[4,"ParseError","","An error when parsing a `String`.",null,null],[8,"ToString","","A trait for converting a value to a `String`.",null,null],[10,"to_string","","Converts the given value to a `String`.",215,{"inputs":[{"name":"tostring"}],"output":{"name":"string"}}],[3,"Drain","","A draining iterator for `String`.",null,null],[0,"vec","bitflags::__core","A contiguous growable array type with heap-allocated contents, written\n`Vec&lt;T&gt;` but pronounced &#39;vector.&#39;",null,null],[3,"Vec","bitflags::__core::vec","A contiguous growable array type, written `Vec&lt;T&gt;` but pronounced &#39;vector.&#39;",null,null],[3,"IntoIter","","An iterator that moves out of a vector.",null,null],[3,"Drain","","A draining iterator for `Vec&lt;T&gt;`.",null,null],[0,"char","bitflags::__core","A character type.",null,null],[3,"ToLowercase","bitflags::__core::char","Returns an iterator that yields the lowercase equivalent of a `char`.",null,null],[3,"ToUppercase","","Returns an iterator that yields the uppercase equivalent of a `char`.",null,null],[3,"DecodeUtf16","","An iterator that decodes UTF-16 encoded code points from an iterator of `u16`s.",null,null],[5,"decode_utf16","","Create an iterator over the UTF-16 encoded code points in `iterable`,\nreturning unpaired surrogates as `Err`s.",null,{"inputs":[{"name":"i"}],"output":{"name":"decodeutf16"}}],[17,"REPLACEMENT_CHARACTER","","`U+FFFD REPLACEMENT CHARACTER` (�) is used in Unicode to represent a decoding error.\nIt can occur, for example, when giving ill-formed UTF-8 bytes to\n[`String::from_utf8_lossy`](../string/struct.String.html#method.from_utf8_lossy).",null,null],[17,"MAX","","The highest valid code point a `char` can have.",null,null],[5,"from_u32","","Converts a `u32` to a `char`.",null,{"inputs":[{"name":"u32"}],"output":{"name":"option"}}],[5,"from_u32_unchecked","","Converts a `u32` to a `char`, ignoring validity.",null,{"inputs":[{"name":"u32"}],"output":{"name":"char"}}],[5,"from_digit","","Converts a digit in the given radix to a `char`.",null,{"inputs":[{"name":"u32"},{"name":"u32"}],"output":{"name":"option"}}],[3,"EscapeUnicode","","Returns an iterator that yields the hexadecimal Unicode escape of a\ncharacter, as `char`s.",null,null],[3,"EscapeDefault","","An iterator that yields the literal escape code of a `char`.",null,null],[17,"UNICODE_VERSION","","The version of [Unicode](http://www.unicode.org/)\nthat the unicode parts of `CharExt` and `UnicodeStrPrelude` traits are based on.",null,null],[0,"isize","bitflags::__core","The pointer-sized signed integer type.",null,null],[17,"BITS","bitflags::__core::isize","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"i8","bitflags::__core","The 8-bit signed integer type.",null,null],[17,"BITS","bitflags::__core::i8","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"i16","bitflags::__core","The 16-bit signed integer type.",null,null],[17,"BITS","bitflags::__core::i16","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"i32","bitflags::__core","The 32-bit signed integer type.",null,null],[17,"BITS","bitflags::__core::i32","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"i64","bitflags::__core","The 64-bit signed integer type.",null,null],[17,"BITS","bitflags::__core::i64","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"usize","bitflags::__core","The pointer-sized unsigned integer type.",null,null],[17,"BITS","bitflags::__core::usize","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"u8","bitflags::__core","The 8-bit unsigned integer type.",null,null],[17,"BITS","bitflags::__core::u8","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"u16","bitflags::__core","The 16-bit unsigned integer type.",null,null],[17,"BITS","bitflags::__core::u16","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"u32","bitflags::__core","The 32-bit unsigned integer type.",null,null],[17,"BITS","bitflags::__core::u32","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[0,"u64","bitflags::__core","The 64-bit unsigned integer type.",null,null],[17,"BITS","bitflags::__core::u64","",null,null],[17,"BYTES","","",null,null],[17,"MIN","","",null,null],[17,"MAX","","",null,null],[14,"bitflags!","bitflags","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[[8,"Error"],[8,"Drop"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[3,"Box"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Weak"],[3,"Arc"],[3,"Rc"],[3,"Weak"],[3,"RawVec"],[8,"ToOwned"],[8,"Clone"],[8,"PartialEq"],[8,"PartialOrd"],[8,"Ord"],[8,"AsRef"],[8,"AsMut"],[8,"Into"],[8,"From"],[8,"Default"],[8,"Iterator"],[8,"Extend"],[8,"IntoIterator"],[8,"DoubleEndedIterator"],[8,"ExactSizeIterator"],[4,"Option"],[3,"Wrapping"],[4,"FpCategory"],[3,"ParseIntError"],[4,"IntErrorKind"],[3,"NonZero"],[3,"Unique"],[3,"Shared"],[3,"PhantomData"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"Ordering"],[8,"Any"],[3,"TypeId"],[3,"AtomicBool"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"AtomicPtr"],[4,"Ordering"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"BorrowRef"],[3,"Ref"],[3,"RefMut"],[3,"BorrowRefMut"],[3,"UnsafeCell"],[3,"EscapeUnicode"],[4,"EscapeUnicodeState"],[3,"EscapeDefault"],[4,"EscapeDefaultState"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[4,"ChainState"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"StepBy"],[3,"RangeInclusive"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Item"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Slice"],[3,"TraitObject"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"GenericSplitN"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[4,"SearchStep"],[3,"CharEqSearcher"],[3,"CharEqPattern"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"StrSearcherImpl"],[3,"EmptyNeedle"],[3,"TwoWaySearcher"],[4,"MatchOnly"],[4,"RejectAndMatch"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"SplitInternal"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitNInternal"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndicesInternal"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"MatchesInternal"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"LinesAnyMap"],[3,"CharRange"],[3,"SipHasher"],[3,"BuildHasherDefault"],[3,"Binary"],[3,"Octal"],[3,"Decimal"],[3,"LowerHex"],[3,"UpperHex"],[3,"Radix"],[3,"RadixFmt"],[3,"PadAdapter"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugInner"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[4,"FlagV1"],[3,"Arguments"],[3,"Formatter"],[8,"SliceConcatExt"],[3,"String"],[3,"BinaryHeap"],[3,"Hole"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"Root"],[3,"NodeRef"],[3,"Handle"],[3,"BTreeMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Rawlink"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"EncodeUtf16"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Bound"],[8,"ToString"],[8,"AsciiExt"],[3,"ParseFloatError"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"ScopedKey"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"RawBucket"],[3,"Bucket"],[3,"SafeHash"],[3,"FullBucket"],[3,"EmptyBucket"],[4,"BucketState"],[3,"GapThenFull"],[3,"RawTable"],[3,"RawBuckets"],[3,"RevMoveBuckets"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"DefaultResizePolicy"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"DefaultState"],[3,"DynamicLibrary"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"WalkDir"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[3,"Custom"],[4,"ErrorKind"],[4,"Repr"],[3,"Lazy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StdinRaw"],[3,"StdoutRaw"],[3,"StderrRaw"],[4,"Maybe"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Broadcast"],[3,"Chain"],[3,"Take"],[3,"Tee"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"AssertRecoverSafe"],[4,"Prefix"],[4,"State"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"SignalToken"],[3,"WaitToken"],[3,"Packet"],[4,"StartResult"],[3,"Select"],[3,"Handle"],[3,"Packets"],[3,"Packet"],[3,"Packet"],[4,"Failure"],[3,"Packet"],[3,"Queue"],[3,"Queue"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"Semaphore"],[3,"SemaphoreGuard"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"Condvar"],[3,"EHContext"],[3,"DwarfReader"],[4,"_Unwind_Action"],[4,"_Unwind_Reason_Code"],[3,"Mutex"],[3,"LookupHost"],[3,"TcpStream"],[3,"TcpListener"],[3,"UdpSocket"],[3,"Flag"],[3,"PoisonError"],[4,"TryLockError"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"RWLock"],[3,"StaticKey"],[3,"Key"],[3,"CodePoint"],[3,"Wtf8Buf"],[3,"Wtf8"],[3,"Wtf8CodePoints"],[3,"EncodeWide"],[3,"Weak"],[3,"Condvar"],[3,"FileDesc"],[3,"FileAttr"],[3,"OpenOptions"],[3,"FilePermissions"],[3,"FileType"],[3,"ReadDir"],[3,"Dir"],[3,"DirEntry"],[3,"File"],[3,"DirBuilder"],[3,"Mutex"],[3,"ReentrantMutex"],[3,"Socket"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"sockaddr_nl"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"Env"],[3,"Buf"],[3,"Slice"],[3,"AnonPipe"],[3,"Command"],[3,"ExitStatus"],[3,"Process"],[3,"OsRng"],[3,"RWLock"],[3,"Handler"],[3,"Thread"],[3,"Timespec"],[3,"Instant"],[3,"SystemTime"],[3,"Stdin"],[3,"Stdout"],[3,"Stderr"],[4,"Handler"],[3,"PanicInfo"],[3,"Location"],[3,"ReaderRng"],[3,"StdRng"],[3,"ThreadRngReseeder"],[3,"ThreadRng"],[3,"OsRng"],[3,"ToLowercase"],[3,"ToUppercase"],[4,"CaseMappingIter"],[3,"DecodeUtf16"],[8,"Zero"],[8,"One"],[8,"OverflowingOps"],[3,"Key"],[3,"Key"],[3,"KeyInner"],[8,"HashState"],[8,"Read"],[8,"Write"],[8,"BufRead"],[8,"Seek"],[8,"ToSocketAddrs"],[8,"MetadataExt"],[8,"AsRawFd"],[8,"FromRawFd"],[8,"IntoRawFd"],[8,"OsStringExt"],[8,"OsStrExt"],[8,"PermissionsExt"],[8,"OpenOptionsExt"],[8,"MetadataExt"],[8,"FileTypeExt"],[8,"DirEntryExt"],[8,"DirBuilderExt"],[8,"CommandExt"],[8,"ExitStatusExt"],[8,"JoinHandleExt"],[8,"Hash"],[8,"Hasher"],[8,"BuildHasher"],[8,"FromIterator"],[8,"Step"],[8,"Add"],[8,"Sub"],[8,"Mul"],[8,"Div"],[8,"Rem"],[8,"Neg"],[8,"Not"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Shl"],[8,"Shr"],[8,"AddAssign"],[8,"SubAssign"],[8,"MulAssign"],[8,"DivAssign"],[8,"RemAssign"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Index"],[8,"IndexMut"],[8,"Deref"],[8,"DerefMut"],[8,"Place"],[8,"Placer"],[8,"InPlace"],[8,"Boxed"],[8,"BoxPlace"],[8,"Repr"],[8,"FnBox"],[8,"IntoCow"],[8,"Borrow"],[8,"BorrowMut"],[8,"Write"],[8,"Octal"],[8,"Binary"],[8,"Display"],[8,"Debug"],[8,"LowerHex"],[8,"UpperHex"],[8,"Pointer"],[8,"LowerExp"],[8,"UpperExp"],[8,"MutableByteVector"],[8,"FromStr"],[3,"Utf16Encoder"],[3,"SplitWhitespace"],[8,"Pattern"],[8,"Searcher"],[8,"ReverseSearcher"]]};
searchIndex["c_vec"] = {"doc":"Library to interface with chunks of memory allocated in C.","items":[[3,"CVec","c_vec","The type representing a foreign chunk of memory",null,null],[3,"CSlice","","The type representing an &#39;unsafe&#39; foreign chunk of memory",null,null],[11,"drop","","",0,{"inputs":[{"name":"cvec"}],"output":null}],[11,"new","","Create a `CVec` from a raw pointer to a buffer with a given length.",0,null],[11,"new_with_dtor","","Create a `CVec` from a foreign buffer, with a given length,\nand a function to run upon destruction.",0,null],[11,"get","","Retrieves an element at a given index, returning `None` if the requested\nindex is greater than the length of the vector.",0,{"inputs":[{"name":"cvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves a mutable element at a given index, returning `None` if the\nrequested index is greater than the length of the vector.",0,{"inputs":[{"name":"cvec"},{"name":"usize"}],"output":{"name":"option"}}],[11,"into_inner","","Unwrap the pointer without running the destructor",0,null],[11,"len","","Returns the number of items in this vector.",0,{"inputs":[{"name":"cvec"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether this vector is empty.",0,{"inputs":[{"name":"cvec"}],"output":{"name":"bool"}}],[11,"as_cslice","","Convert to CSlice",0,{"inputs":[{"name":"cvec"}],"output":{"name":"cslice"}}],[11,"as_ref","","View the stored data as a slice.",0,null],[11,"as_mut","","View the stored data as a slice.",0,null],[11,"new","","Create a `CSlice` from a raw pointer to a buffer with a given length.",1,null],[11,"get","","Retrieves an element at a given index, returning `None` if the requested\nindex is greater than the length of the vector.",1,{"inputs":[{"name":"cslice"},{"name":"usize"}],"output":{"name":"option"}}],[11,"get_mut","","Retrieves a mutable element at a given index, returning `None` if the\nrequested index is greater than the length of the vector.",1,{"inputs":[{"name":"cslice"},{"name":"usize"}],"output":{"name":"option"}}],[11,"len","","Returns the number of items in this vector.",1,{"inputs":[{"name":"cslice"}],"output":{"name":"usize"}}],[11,"is_empty","","Returns whether this vector is empty.",1,{"inputs":[{"name":"cslice"}],"output":{"name":"bool"}}],[11,"as_ref","","View the stored data as a slice.",1,null],[11,"as_mut","","View the stored data as a slice.",1,null],[11,"index","","",1,{"inputs":[{"name":"cslice"},{"name":"usize"}],"output":{"name":"t"}}],[11,"index_mut","","",1,{"inputs":[{"name":"cslice"},{"name":"usize"}],"output":{"name":"t"}}]],"paths":[[3,"CVec"],[3,"CSlice"]]};
initSearch(searchIndex);
