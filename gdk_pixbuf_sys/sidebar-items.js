initSidebarItems({"constant":[["GDK_COLORSPACE_RGB",""],["GDK_INTERP_BILINEAR",""],["GDK_INTERP_HYPER",""],["GDK_INTERP_NEAREST",""],["GDK_INTERP_TILES",""],["GDK_PIXBUF_ALPHA_BILEVEL",""],["GDK_PIXBUF_ALPHA_FULL",""],["GDK_PIXBUF_ERROR_BAD_OPTION",""],["GDK_PIXBUF_ERROR_CORRUPT_IMAGE",""],["GDK_PIXBUF_ERROR_FAILED",""],["GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY",""],["GDK_PIXBUF_ERROR_UNKNOWN_TYPE",""],["GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION",""],["GDK_PIXBUF_FEATURES_H",""],["GDK_PIXBUF_MAGIC_NUMBER",""],["GDK_PIXBUF_MAJOR",""],["GDK_PIXBUF_MICRO",""],["GDK_PIXBUF_MINOR",""],["GDK_PIXBUF_ROTATE_CLOCKWISE",""],["GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE",""],["GDK_PIXBUF_ROTATE_NONE",""],["GDK_PIXBUF_ROTATE_UPSIDEDOWN",""],["GDK_PIXBUF_VERSION",""],["GDK_PIXDATA_COLOR_TYPE_MASK","mask for the colortype flags of the enum."],["GDK_PIXDATA_COLOR_TYPE_RGB","each pixel has red, green and blue samples."],["GDK_PIXDATA_COLOR_TYPE_RGBA","each pixel has red, green and blue samples and an alpha value."],["GDK_PIXDATA_DUMP_CONST","Generate const symbols."],["GDK_PIXDATA_DUMP_CTYPES","Generate standard C data types instead of GLib data types."],["GDK_PIXDATA_DUMP_GTYPES","Generate GLib data types instead of standard C data types."],["GDK_PIXDATA_DUMP_MACROS","Generate `<function>`*_ROWSTRIDE`</function>`, `<function>`*_WIDTH`</function>`, `<function>`*_HEIGHT`</function>`, `<function>`*_BYTES_PER_PIXEL`</function>` and `<function>`*_RLE_PIXEL_DATA`</function>` or `<function>`*_PIXEL_DATA`</function>` macro definitions for the image."],["GDK_PIXDATA_DUMP_PIXDATA_STREAM","Generate pixbuf data stream (a single string containing a serialized `Pixdata` structure in network byte order)."],["GDK_PIXDATA_DUMP_PIXDATA_STRUCT","Generate `Pixdata` structure (needs the `Pixdata` structure definition from gdk-pixdata.h)."],["GDK_PIXDATA_DUMP_RLE_DECODER","Provide a `<function>`*_RUN_LENGTH_DECODE(image_buf, rle_data, size, bpp)`</function>` macro definition to decode run-length encoded image data."],["GDK_PIXDATA_DUMP_STATIC","Generate static symbols."],["GDK_PIXDATA_ENCODING_MASK","mask for the encoding flags of the enum."],["GDK_PIXDATA_ENCODING_RAW","the pixel data is in raw form."],["GDK_PIXDATA_ENCODING_RLE","the pixel data is run-length encoded. Runs may be up to 127 bytes long; their length is stored in a single byte preceding the pixel data for the run. If a run is constant, its length byte has the high bit set and the pixel data consists of a single pixel which must be repeated."],["GDK_PIXDATA_HEADER_LENGTH",""],["GDK_PIXDATA_SAMPLE_WIDTH_8","each sample has 8 bits."],["GDK_PIXDATA_SAMPLE_WIDTH_MASK","mask for the sample width flags of the enum."]],"enum":[["GdkInterpType","This enumeration describes the different interpolation modes that can be used with the scaling functions. `InterpType::Nearest` is the fastest scaling method, but has horrible quality when scaling down. `InterpType::Bilinear` is the best choice if you aren't sure what to choose, it has a good speed/quality balance."],["GdkPixbufAlphaMode","These values can be passed to `gdk_pixbuf_render_to_drawable_alpha` to control how the alpha channel of an image should be handled. This function can create a bilevel clipping mask (black and white) and use it while painting the image. In the future, when the X Window System gets an alpha channel extension, it will be possible to do full alpha compositing onto arbitrary drawables. For now both cases fall back to a bilevel clipping mask."],["GdkPixbufError","An error code in the `GDK_PIXBUF_ERROR` domain. Many gdk-pixbuf operations can cause errors in this domain, or in the `G_FILE_ERROR` domain."],["GdkPixbufRotation","The possible rotations which can be passed to `Pixbuf::rotate_simple`. To make them easier to use, their numerical values are the actual degrees."]],"fn":[["gdk_pixbuf_add_alpha",""],["gdk_pixbuf_animation_get_height",""],["gdk_pixbuf_animation_get_iter",""],["gdk_pixbuf_animation_get_static_image",""],["gdk_pixbuf_animation_get_type",""],["gdk_pixbuf_animation_get_width",""],["gdk_pixbuf_animation_is_static_image",""],["gdk_pixbuf_animation_iter_advance",""],["gdk_pixbuf_animation_iter_get_delay_time",""],["gdk_pixbuf_animation_iter_get_pixbuf",""],["gdk_pixbuf_animation_iter_get_type",""],["gdk_pixbuf_animation_iter_on_currently_loading_frame",""],["gdk_pixbuf_animation_new_from_file",""],["gdk_pixbuf_animation_new_from_resource",""],["gdk_pixbuf_animation_new_from_stream",""],["gdk_pixbuf_animation_new_from_stream_async",""],["gdk_pixbuf_animation_new_from_stream_finish",""],["gdk_pixbuf_animation_ref",""],["gdk_pixbuf_animation_unref",""],["gdk_pixbuf_apply_embedded_orientation",""],["gdk_pixbuf_composite",""],["gdk_pixbuf_composite_color",""],["gdk_pixbuf_composite_color_simple",""],["gdk_pixbuf_copy",""],["gdk_pixbuf_copy_area",""],["gdk_pixbuf_error_quark",""],["gdk_pixbuf_fill",""],["gdk_pixbuf_flip",""],["gdk_pixbuf_format_copy",""],["gdk_pixbuf_format_free",""],["gdk_pixbuf_format_get_description",""],["gdk_pixbuf_format_get_extensions",""],["gdk_pixbuf_format_get_license",""],["gdk_pixbuf_format_get_mime_types",""],["gdk_pixbuf_format_get_name",""],["gdk_pixbuf_format_get_type",""],["gdk_pixbuf_format_is_disabled",""],["gdk_pixbuf_format_is_scalable",""],["gdk_pixbuf_format_is_writable",""],["gdk_pixbuf_format_set_disabled",""],["gdk_pixbuf_from_pixdata",""],["gdk_pixbuf_get_bits_per_sample",""],["gdk_pixbuf_get_byte_length",""],["gdk_pixbuf_get_colorspace",""],["gdk_pixbuf_get_file_info",""],["gdk_pixbuf_get_formats",""],["gdk_pixbuf_get_has_alpha",""],["gdk_pixbuf_get_height",""],["gdk_pixbuf_get_n_channels",""],["gdk_pixbuf_get_option",""],["gdk_pixbuf_get_pixels",""],["gdk_pixbuf_get_pixels_with_length",""],["gdk_pixbuf_get_rowstride",""],["gdk_pixbuf_get_type",""],["gdk_pixbuf_get_width",""],["gdk_pixbuf_loader_close",""],["gdk_pixbuf_loader_get_animation",""],["gdk_pixbuf_loader_get_format",""],["gdk_pixbuf_loader_get_pixbuf",""],["gdk_pixbuf_loader_get_type",""],["gdk_pixbuf_loader_new",""],["gdk_pixbuf_loader_new_with_mime_type",""],["gdk_pixbuf_loader_new_with_type",""],["gdk_pixbuf_loader_set_size",""],["gdk_pixbuf_loader_write",""],["gdk_pixbuf_loader_write_bytes",""],["gdk_pixbuf_new",""],["gdk_pixbuf_new_from_data",""],["gdk_pixbuf_new_from_file",""],["gdk_pixbuf_new_from_file_at_scale",""],["gdk_pixbuf_new_from_file_at_size",""],["gdk_pixbuf_new_from_inline",""],["gdk_pixbuf_new_from_resource",""],["gdk_pixbuf_new_from_resource_at_scale",""],["gdk_pixbuf_new_from_stream",""],["gdk_pixbuf_new_from_stream_async",""],["gdk_pixbuf_new_from_stream_at_scale",""],["gdk_pixbuf_new_from_stream_at_scale_async",""],["gdk_pixbuf_new_from_stream_finish",""],["gdk_pixbuf_new_from_xpm_data",""],["gdk_pixbuf_new_subpixbuf",""],["gdk_pixbuf_ref",""],["gdk_pixbuf_rotate_simple",""],["gdk_pixbuf_saturate_and_pixelate",""],["gdk_pixbuf_save",""],["gdk_pixbuf_save_to_buffer",""],["gdk_pixbuf_save_to_bufferv",""],["gdk_pixbuf_save_to_callback",""],["gdk_pixbuf_save_to_callbackv",""],["gdk_pixbuf_save_to_stream",""],["gdk_pixbuf_save_to_stream_async",""],["gdk_pixbuf_save_to_stream_finish",""],["gdk_pixbuf_savev",""],["gdk_pixbuf_scale",""],["gdk_pixbuf_scale_simple",""],["gdk_pixbuf_simple_anim_add_frame",""],["gdk_pixbuf_simple_anim_get_loop",""],["gdk_pixbuf_simple_anim_get_type",""],["gdk_pixbuf_simple_anim_iter_get_type",""],["gdk_pixbuf_simple_anim_new",""],["gdk_pixbuf_simple_anim_set_loop",""],["gdk_pixbuf_unref",""],["gdk_pixdata_deserialize",""],["gdk_pixdata_from_pixbuf",""],["gdk_pixdata_serialize",""],["gdk_pixdata_to_csource",""]],"struct":[["GdkPixbuf",""],["GdkPixbufAnimation",""],["GdkPixbufAnimationIter",""],["GdkPixbufFormat",""],["GdkPixbufLoader",""],["GdkPixbufLoaderClass",""],["GdkPixbufSimpleAnim",""],["GdkPixbufSimpleAnimClass",""],["GdkPixbufSimpleAnimIter",""],["GdkPixdata",""],["GdkPixdataDumpType","An enumeration which is used by `Pixdata::to_csource` to determine the form of C source to be generated. The three values `PixdataDumpType::PixdataStream`, `PixdataDumpType::PixdataStruct` and `PixdataDumpType::Macros` are mutually exclusive, as are `GDK_PIXBUF_DUMP_GTYPES` and `GDK_PIXBUF_DUMP_CTYPES`. The remaining elements are optional flags that can be freely added."],["GdkPixdataType","An enumeration containing three sets of flags for a `Pixdata` struct: one for the used colorspace, one for the width of the samples and one for the encoding of the pixel data."]],"type":[["Colorspace",""],["GdkColorspace",""],["GdkPixbufDestroyNotify",""],["GdkPixbufSaveFunc",""]]});