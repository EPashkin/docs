initSidebarItems({"enum":[["GDateMonth",""],["GDateWeekday",""],["ParamFlags",""]],"fn":[["to_bool",""],["to_gboolean",""]],"macro":[["glib_boxed_wrapper!","Wrapper implementations for Boxed types. See `glib_wrapper!`."],["glib_object_wrapper!","Wrapper implementations for Object types. See `glib_wrapper!`."],["glib_refcounted_wrapper!","Wrapper implementations for refcounted types. See `glib_wrapper!`."],["glib_wrapper!","Defines a wrapper type and implements the appropriate traits."]],"mod":[["boxed",""],["date","Date and Time Functions â€” calendrical calculations and miscellaneous time stuff"],["glib_container",""],["object","Types that facilitate representing `GObject` descendants."],["refcounted",""],["signal",""],["source","Manages available sources of events for the main loop"],["traits",""],["translate","Translation between GLib/GLib-based FFI types and their Rust counterparts."],["types",""],["wrapper",""]],"struct":[["AppInfo",""],["Elem",""],["Error","The Error structure contains information about an error that has occurred."],["List",""],["ParamSpec",""],["Permission",""],["RevElem",""],["SElem",""],["SList",""],["TypeClass",""],["TypeInstance",""],["TypeInterface",""],["Value","Possible improvement : store a function pointer inside the struct and make the struct templated"]],"trait":[["ValuePublic",""]],"type":[["GDateDay",""],["GDateYear",""],["GTime",""]]});